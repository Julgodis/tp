lbl_8033AD58:
/* 8033AD58 00000000  7C 08 02 A6 */	mflr r0
/* 8033AD5C 00000004  90 01 00 04 */	stw r0, 4(r1)
/* 8033AD60 00000008  94 21 FD 10 */	stwu r1, -0x2f0(r1)
/* 8033AD64 0000000C  93 E1 02 EC */	stw r31, 0x2ec(r1)
/* 8033AD68 00000010  93 C1 02 E8 */	stw r30, 0x2e8(r1)
/* 8033AD6C 00000014  93 A1 02 E4 */	stw r29, 0x2e4(r1)
/* 8033AD70 00000018  7C 9D 23 78 */	mr r29, r4
/* 8033AD74 0000001C  93 81 02 E0 */	stw r28, 0x2e0(r1)
/* 8033AD78 00000020  48 00 79 A5 */	bl __OSGetSystemTime
/* 8033AD7C 00000024  80 0D 90 B8 */	lwz r0, AlarmQueue(r13)
/* 8033AD80 00000028  3B 84 00 00 */	addi r28, r4, 0
/* 8033AD84 0000002C  3B C3 00 00 */	addi r30, r3, 0
/* 8033AD88 00000030  28 00 00 00 */	cmplwi r0, 0
/* 8033AD8C 00000034  7C 1F 03 78 */	mr r31, r0
/* 8033AD90 00000038  40 82 00 0C */	bne lbl_8033AD9C
/* 8033AD94 0000003C  7F A3 EB 78 */	mr r3, r29
/* 8033AD98 00000040  48 00 11 89 */	bl OSLoadContext
lbl_8033AD9C:
/* 8033AD9C 00000000  80 1F 00 08 */	lwz r0, 8(r31)
/* 8033ADA0 00000004  6F C4 80 00 */	xoris r4, r30, 0x8000
/* 8033ADA4 00000008  80 BF 00 0C */	lwz r5, 0xc(r31)
/* 8033ADA8 0000000C  6C 03 80 00 */	xoris r3, r0, 0x8000
/* 8033ADAC 00000010  7C 05 E0 10 */	subfc r0, r5, r28
/* 8033ADB0 00000014  7C 63 21 10 */	subfe r3, r3, r4
/* 8033ADB4 00000018  7C 64 21 10 */	subfe r3, r4, r4
/* 8033ADB8 0000001C  7C 63 00 D1 */	neg. r3, r3
/* 8033ADBC 00000020  41 82 00 7C */	beq lbl_8033AE38
/* 8033ADC0 00000024  48 00 79 5D */	bl __OSGetSystemTime
/* 8033ADC4 00000028  80 DF 00 0C */	lwz r6, 0xc(r31)
/* 8033ADC8 0000002C  38 E0 00 00 */	li r7, 0
/* 8033ADCC 00000030  80 1F 00 08 */	lwz r0, 8(r31)
/* 8033ADD0 00000034  6C E5 80 00 */	xoris r5, r7, 0x8000
/* 8033ADD4 00000038  7D 04 30 10 */	subfc r8, r4, r6
/* 8033ADD8 0000003C  7C 03 01 10 */	subfe r0, r3, r0
/* 8033ADDC 00000040  6C 06 80 00 */	xoris r6, r0, 0x8000
/* 8033ADE0 00000044  7C 07 40 10 */	subfc r0, r7, r8
/* 8033ADE4 00000048  7C A5 31 10 */	subfe r5, r5, r6
/* 8033ADE8 0000004C  7C A6 31 10 */	subfe r5, r6, r6
/* 8033ADEC 00000050  7C A5 00 D1 */	neg. r5, r5
/* 8033ADF0 00000054  41 82 00 10 */	beq lbl_8033AE00
/* 8033ADF4 00000058  38 60 00 00 */	li r3, 0
/* 8033ADF8 0000005C  4B FF EE F9 */	bl PPCMtdec
/* 8033ADFC 00000060  48 00 00 34 */	b lbl_8033AE30
lbl_8033AE00:
/* 8033AE00 00000000  3C 80 80 00 */	lis r4, 0x8000
/* 8033AE04 00000004  6C E3 80 00 */	xoris r3, r7, 0x8000
/* 8033AE08 00000008  7C 04 40 10 */	subfc r0, r4, r8
/* 8033AE0C 0000000C  7C 63 31 10 */	subfe r3, r3, r6
/* 8033AE10 00000010  7C 66 31 10 */	subfe r3, r6, r6
/* 8033AE14 00000014  7C 63 00 D1 */	neg. r3, r3
/* 8033AE18 00000018  41 82 00 10 */	beq lbl_8033AE28
/* 8033AE1C 0000001C  7D 03 43 78 */	mr r3, r8
/* 8033AE20 00000020  4B FF EE D1 */	bl PPCMtdec
/* 8033AE24 00000024  48 00 00 0C */	b lbl_8033AE30
lbl_8033AE28:
/* 8033AE28 00000000  38 64 FF FF */	addi r3, r4, -1
/* 8033AE2C 00000004  4B FF EE C5 */	bl PPCMtdec
lbl_8033AE30:
/* 8033AE30 00000000  7F A3 EB 78 */	mr r3, r29
/* 8033AE34 00000004  48 00 10 ED */	bl OSLoadContext
lbl_8033AE38:
/* 8033AE38 00000000  80 7F 00 14 */	lwz r3, 0x14(r31)
/* 8033AE3C 00000004  28 03 00 00 */	cmplwi r3, 0
/* 8033AE40 00000008  90 6D 90 B8 */	stw r3, AlarmQueue(r13)
/* 8033AE44 0000000C  40 82 00 14 */	bne lbl_8033AE58
/* 8033AE48 00000010  38 00 00 00 */	li r0, 0
/* 8033AE4C 00000014  38 6D 90 B8 */	addi r3, r13, 0x80451638-0x80458580 /* AlarmQueue-_SDA_BASE_ */
/* 8033AE50 00000018  90 03 00 04 */	stw r0, 4(r3)
/* 8033AE54 0000001C  48 00 00 0C */	b lbl_8033AE60
lbl_8033AE58:
/* 8033AE58 00000000  38 00 00 00 */	li r0, 0
/* 8033AE5C 00000004  90 03 00 10 */	stw r0, 0x10(r3)
lbl_8033AE60:
/* 8033AE60 00000000  83 DF 00 00 */	lwz r30, 0(r31)
/* 8033AE64 00000004  38 C0 00 00 */	li r6, 0
/* 8033AE68 00000008  6C C4 80 00 */	xoris r4, r6, 0x8000
/* 8033AE6C 0000000C  90 DF 00 00 */	stw r6, 0(r31)
/* 8033AE70 00000010  80 1F 00 18 */	lwz r0, 0x18(r31)
/* 8033AE74 00000014  80 BF 00 1C */	lwz r5, 0x1c(r31)
/* 8033AE78 00000018  6C 03 80 00 */	xoris r3, r0, 0x8000
/* 8033AE7C 0000001C  7C 05 30 10 */	subfc r0, r5, r6
/* 8033AE80 00000020  7C 63 21 10 */	subfe r3, r3, r4
/* 8033AE84 00000024  7C 64 21 10 */	subfe r3, r4, r4
/* 8033AE88 00000028  7C 63 00 D1 */	neg. r3, r3
/* 8033AE8C 0000002C  41 82 00 18 */	beq lbl_8033AEA4
/* 8033AE90 00000030  38 7F 00 00 */	addi r3, r31, 0
/* 8033AE94 00000034  38 FE 00 00 */	addi r7, r30, 0
/* 8033AE98 00000038  38 C0 00 00 */	li r6, 0
/* 8033AE9C 0000003C  38 A0 00 00 */	li r5, 0
/* 8033AEA0 00000040  4B FF FA 69 */	bl InsertAlarm
lbl_8033AEA4:
/* 8033AEA4 00000000  83 8D 90 B8 */	lwz r28, AlarmQueue(r13)
/* 8033AEA8 00000004  28 1C 00 00 */	cmplwi r28, 0
/* 8033AEAC 00000008  41 82 00 74 */	beq lbl_8033AF20
/* 8033AEB0 0000000C  48 00 78 6D */	bl __OSGetSystemTime
/* 8033AEB4 00000010  80 DC 00 0C */	lwz r6, 0xc(r28)
/* 8033AEB8 00000014  38 E0 00 00 */	li r7, 0
/* 8033AEBC 00000018  80 1C 00 08 */	lwz r0, 8(r28)
/* 8033AEC0 0000001C  6C E5 80 00 */	xoris r5, r7, 0x8000
/* 8033AEC4 00000020  7D 04 30 10 */	subfc r8, r4, r6
/* 8033AEC8 00000024  7C 03 01 10 */	subfe r0, r3, r0
/* 8033AECC 00000028  6C 06 80 00 */	xoris r6, r0, 0x8000
/* 8033AED0 0000002C  7C 07 40 10 */	subfc r0, r7, r8
/* 8033AED4 00000030  7C A5 31 10 */	subfe r5, r5, r6
/* 8033AED8 00000034  7C A6 31 10 */	subfe r5, r6, r6
/* 8033AEDC 00000038  7C A5 00 D1 */	neg. r5, r5
/* 8033AEE0 0000003C  41 82 00 10 */	beq lbl_8033AEF0
/* 8033AEE4 00000040  38 60 00 00 */	li r3, 0
/* 8033AEE8 00000044  4B FF EE 09 */	bl PPCMtdec
/* 8033AEEC 00000048  48 00 00 34 */	b lbl_8033AF20
lbl_8033AEF0:
/* 8033AEF0 00000000  3C 80 80 00 */	lis r4, 0x8000
/* 8033AEF4 00000004  6C E3 80 00 */	xoris r3, r7, 0x8000
/* 8033AEF8 00000008  7C 04 40 10 */	subfc r0, r4, r8
/* 8033AEFC 0000000C  7C 63 31 10 */	subfe r3, r3, r6
/* 8033AF00 00000010  7C 66 31 10 */	subfe r3, r6, r6
/* 8033AF04 00000014  7C 63 00 D1 */	neg. r3, r3
/* 8033AF08 00000018  41 82 00 10 */	beq lbl_8033AF18
/* 8033AF0C 0000001C  7D 03 43 78 */	mr r3, r8
/* 8033AF10 00000020  4B FF ED E1 */	bl PPCMtdec
/* 8033AF14 00000024  48 00 00 0C */	b lbl_8033AF20
lbl_8033AF18:
/* 8033AF18 00000000  38 64 FF FF */	addi r3, r4, -1
/* 8033AF1C 00000004  4B FF ED D5 */	bl PPCMtdec
lbl_8033AF20:
/* 8033AF20 00000000  48 00 5D A5 */	bl OSDisableScheduler
/* 8033AF24 00000004  38 61 00 18 */	addi r3, r1, 0x18
/* 8033AF28 00000008  48 00 10 D9 */	bl OSClearContext
/* 8033AF2C 0000000C  38 61 00 18 */	addi r3, r1, 0x18
/* 8033AF30 00000010  48 00 0F 09 */	bl OSSetCurrentContext
/* 8033AF34 00000014  39 9E 00 00 */	addi r12, r30, 0
/* 8033AF38 00000018  7D 88 03 A6 */	mtlr r12
/* 8033AF3C 0000001C  38 7F 00 00 */	addi r3, r31, 0
/* 8033AF40 00000020  38 9D 00 00 */	addi r4, r29, 0
/* 8033AF44 00000024  4E 80 00 21 */	blrl 
/* 8033AF48 00000028  38 61 00 18 */	addi r3, r1, 0x18
/* 8033AF4C 0000002C  48 00 10 B5 */	bl OSClearContext
/* 8033AF50 00000030  7F A3 EB 78 */	mr r3, r29
/* 8033AF54 00000034  48 00 0E E5 */	bl OSSetCurrentContext
/* 8033AF58 00000038  48 00 5D AD */	bl OSEnableScheduler
/* 8033AF5C 0000003C  48 00 62 C5 */	bl __OSReschedule
/* 8033AF60 00000040  7F A3 EB 78 */	mr r3, r29
/* 8033AF64 00000044  48 00 0F BD */	bl OSLoadContext
/* 8033AF68 00000048  80 01 02 F4 */	lwz r0, 0x2f4(r1)
/* 8033AF6C 0000004C  83 E1 02 EC */	lwz r31, 0x2ec(r1)
/* 8033AF70 00000050  83 C1 02 E8 */	lwz r30, 0x2e8(r1)
/* 8033AF74 00000054  83 A1 02 E4 */	lwz r29, 0x2e4(r1)
/* 8033AF78 00000058  83 81 02 E0 */	lwz r28, 0x2e0(r1)
/* 8033AF7C 0000005C  38 21 02 F0 */	addi r1, r1, 0x2f0
/* 8033AF80 00000060  7C 08 03 A6 */	mtlr r0
/* 8033AF84 00000064  4E 80 00 20 */	blr 
