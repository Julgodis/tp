lbl_8035A5A8:
/* 8035A5A8 00000000  7C 08 02 A6 */	mflr r0
/* 8035A5AC 00000004  90 01 00 04 */	stw r0, 4(r1)
/* 8035A5B0 00000008  94 21 FD 20 */	stwu r1, -0x2e0(r1)
/* 8035A5B4 0000000C  93 E1 02 DC */	stw r31, 0x2dc(r1)
/* 8035A5B8 00000010  7C 9F 23 78 */	mr r31, r4
/* 8035A5BC 00000014  80 AD 93 A4 */	lwz r5, __cpReg(r13)
/* 8035A5C0 00000018  80 62 CB 80 */	lwz r3, __GXData(r2)
/* 8035A5C4 0000001C  A0 05 00 00 */	lhz r0, 0(r5)
/* 8035A5C8 00000020  90 03 00 0C */	stw r0, 0xc(r3)
/* 8035A5CC 00000024  80 03 00 08 */	lwz r0, 8(r3)
/* 8035A5D0 00000028  54 00 EF FF */	rlwinm. r0, r0, 0x1d, 0x1f, 0x1f
/* 8035A5D4 0000002C  41 82 00 38 */	beq lbl_8035A60C
/* 8035A5D8 00000030  80 03 00 0C */	lwz r0, 0xc(r3)
/* 8035A5DC 00000034  54 00 FF FF */	rlwinm. r0, r0, 0x1f, 0x1f, 0x1f
/* 8035A5E0 00000038  41 82 00 2C */	beq lbl_8035A60C
/* 8035A5E4 0000003C  80 6D 93 D0 */	lwz r3, __GXCurrentThread(r13)
/* 8035A5E8 00000040  4B FE 71 CD */	bl OSResumeThread
/* 8035A5EC 00000044  38 00 00 00 */	li r0, 0
/* 8035A5F0 00000048  90 0D 93 D8 */	stw r0, GXOverflowSuspendInProgress(r13)
/* 8035A5F4 0000004C  38 60 00 01 */	li r3, 1
/* 8035A5F8 00000050  38 80 00 01 */	li r4, 1
/* 8035A5FC 00000054  48 00 07 29 */	bl __GXWriteFifoIntReset
/* 8035A600 00000058  38 60 00 01 */	li r3, 1
/* 8035A604 0000005C  38 80 00 00 */	li r4, 0
/* 8035A608 00000060  48 00 06 ED */	bl __GXWriteFifoIntEnable
lbl_8035A60C:
/* 8035A60C 00000000  80 62 CB 80 */	lwz r3, __GXData(r2)
/* 8035A610 00000004  80 03 00 08 */	lwz r0, 8(r3)
/* 8035A614 00000008  54 00 F7 FF */	rlwinm. r0, r0, 0x1e, 0x1f, 0x1f
/* 8035A618 0000000C  41 82 00 44 */	beq lbl_8035A65C
/* 8035A61C 00000010  80 03 00 0C */	lwz r0, 0xc(r3)
/* 8035A620 00000014  54 00 07 FF */	clrlwi. r0, r0, 0x1f
/* 8035A624 00000018  41 82 00 38 */	beq lbl_8035A65C
/* 8035A628 0000001C  80 AD 93 E0 */	lwz r5, __GXOverflowCount(r13)
/* 8035A62C 00000020  38 60 00 00 */	li r3, 0
/* 8035A630 00000024  38 80 00 01 */	li r4, 1
/* 8035A634 00000028  38 05 00 01 */	addi r0, r5, 1
/* 8035A638 0000002C  90 0D 93 E0 */	stw r0, __GXOverflowCount(r13)
/* 8035A63C 00000030  48 00 06 B9 */	bl __GXWriteFifoIntEnable
/* 8035A640 00000034  38 60 00 01 */	li r3, 1
/* 8035A644 00000038  38 80 00 00 */	li r4, 0
/* 8035A648 0000003C  48 00 06 DD */	bl __GXWriteFifoIntReset
/* 8035A64C 00000040  38 00 00 01 */	li r0, 1
/* 8035A650 00000044  80 6D 93 D0 */	lwz r3, __GXCurrentThread(r13)
/* 8035A654 00000048  90 0D 93 D8 */	stw r0, GXOverflowSuspendInProgress(r13)
/* 8035A658 0000004C  4B FE 73 E5 */	bl OSSuspendThread
lbl_8035A65C:
/* 8035A65C 00000000  80 62 CB 80 */	lwz r3, __GXData(r2)
/* 8035A660 00000004  80 83 00 08 */	lwz r4, 8(r3)
/* 8035A664 00000008  54 80 DF FF */	rlwinm. r0, r4, 0x1b, 0x1f, 0x1f
/* 8035A668 0000000C  41 82 00 60 */	beq lbl_8035A6C8
/* 8035A66C 00000010  80 03 00 0C */	lwz r0, 0xc(r3)
/* 8035A670 00000014  54 00 E7 FF */	rlwinm. r0, r0, 0x1c, 0x1f, 0x1f
/* 8035A674 00000018  41 82 00 54 */	beq lbl_8035A6C8
/* 8035A678 0000001C  38 00 00 00 */	li r0, 0
/* 8035A67C 00000020  50 04 2E B4 */	rlwimi r4, r0, 5, 0x1a, 0x1a
/* 8035A680 00000024  90 83 00 08 */	stw r4, 8(r3)
/* 8035A684 00000028  80 03 00 08 */	lwz r0, 8(r3)
/* 8035A688 0000002C  80 6D 93 A4 */	lwz r3, __cpReg(r13)
/* 8035A68C 00000030  B0 03 00 02 */	sth r0, 2(r3)
/* 8035A690 00000034  80 0D 93 DC */	lwz r0, BreakPointCB(r13)
/* 8035A694 00000038  28 00 00 00 */	cmplwi r0, 0
/* 8035A698 0000003C  41 82 00 30 */	beq lbl_8035A6C8
/* 8035A69C 00000040  38 61 00 10 */	addi r3, r1, 0x10
/* 8035A6A0 00000044  4B FE 19 61 */	bl OSClearContext
/* 8035A6A4 00000048  38 61 00 10 */	addi r3, r1, 0x10
/* 8035A6A8 0000004C  4B FE 17 91 */	bl OSSetCurrentContext
/* 8035A6AC 00000050  81 8D 93 DC */	lwz r12, BreakPointCB(r13)
/* 8035A6B0 00000054  7D 88 03 A6 */	mtlr r12
/* 8035A6B4 00000058  4E 80 00 21 */	blrl 
/* 8035A6B8 0000005C  38 61 00 10 */	addi r3, r1, 0x10
/* 8035A6BC 00000060  4B FE 19 45 */	bl OSClearContext
/* 8035A6C0 00000064  7F E3 FB 78 */	mr r3, r31
/* 8035A6C4 00000068  4B FE 17 75 */	bl OSSetCurrentContext
lbl_8035A6C8:
/* 8035A6C8 00000000  80 01 02 E4 */	lwz r0, 0x2e4(r1)
/* 8035A6CC 00000004  83 E1 02 DC */	lwz r31, 0x2dc(r1)
/* 8035A6D0 00000008  38 21 02 E0 */	addi r1, r1, 0x2e0
/* 8035A6D4 0000000C  7C 08 03 A6 */	mtlr r0
/* 8035A6D8 00000010  4E 80 00 20 */	blr 
