import globals as g
import util


def export_library(library):
    assert library.name
    lib_path = library.getMakefilePath()
    cpp_path = library.getCppPath()
    o_path = f"$(BUILD_DIR)/{cpp_path}"

    makefile_path = lib_path.joinpath("Makefile")
    util.create_dirs_for_file(makefile_path)

    target = library.fileName()
    prefix = library.name.replace(".", "_").upper()
    target_path = f"$(BUILD_DIR)/{target}"


    with makefile_path.open('w') as file:
        file.write("#\n")
        file.write("# Generated By: dol2asm\n")
        file.write("#\n")
        file.write("\n")

        file.write(f"{prefix}_CPP_FILES := \\\n")
        for tu in library.translation_units:
            file.write(f"\t{tu.getCppPath()} \\\n")
        file.write("\n")

        file.write(f"{prefix}_O_FILES := \\\n")
        for tu in library.translation_units:
            file.write(f"\t$(BUILD_DIR)/{tu.getObjectPath()} \\\n")
        file.write("\n")

        file.write(f"{prefix}_CFLAGS := \\\n")
        file.write("\n")

        file.write(f"{prefix}_LDFLAGS := \\\n")
        file.write("\t-nodefaults \\\n")
        file.write("\t-fp hard \\\n")
        file.write("\t-proc gekko \\\n")
        file.write("\t-linkmode moreram \\\n")
        file.write("\n")
        
        file.write(f"{target_path}: $({prefix}_O_FILES)\n")
        file.write(f"\t$(LD) -xm l $({prefix}_LDFLAGS) -o {target_path} $({prefix}_O_FILES)\n")
        file.write(f"\t$(STRIP) -d -R .dead -R .comment {target_path}\n")
        file.write("\n")

        file.write(f"{o_path}/%.o: {cpp_path}/%.cpp\n")
        file.write(f"\t@mkdir -p $(@D)\n")
        file.write(f"\t$(CC) $(CFLAGS) $({prefix}_CFLAGS) -c -o $@ $<\n")
        file.write("\n")