// 
// Generated By: dol2asm
// Translation Unit: d_a_vrbox
// 

#include "dolphin/types.h"

// 
// Types:
// 

struct vrbox_class;
struct fopAc_ac_c;

// 
// Forward References:
// 

void daVrbox_Draw(vrbox_class*);
void daVrbox_color_set(vrbox_class*);
bool daVrbox_Execute(vrbox_class*);
bool daVrbox_IsDelete(vrbox_class*);
bool daVrbox_Delete(vrbox_class*);
void daVrbox_solidHeapCB(fopAc_ac_c*);
void daVrbox_Create(fopAc_ac_c*);

extern "C" void daVrbox_Draw__FP11vrbox_class();
extern "C" void daVrbox_color_set__FP11vrbox_class();
extern "C" bool daVrbox_Execute__FP11vrbox_class();
extern "C" bool daVrbox_IsDelete__FP11vrbox_class();
extern "C" bool daVrbox_Delete__FP11vrbox_class();
extern "C" void daVrbox_solidHeapCB__FP10fopAc_ac_c();
extern "C" void daVrbox_Create__FP10fopAc_ac_c();
SECTION_RODATA extern const u8 lit_3695[4];
SECTION_RODATA extern const u32 lit_3696;
SECTION_RODATA extern const u8 stringBase0[15];
SECTION_DATA extern u8 l_daVrbox_Method[32];
SECTION_DATA extern u8 g_profile_VRBOX[48];

// 
// External References:
// 

extern "C" void _unresolved();

extern "C" void _unresolved();

// 
// Declarations:
// 

/* 80498518-804986B8 01A0+00 .text      daVrbox_Draw__FP11vrbox_class                                */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void daVrbox_Draw(vrbox_class* field_0) {
	nofralloc
#include "asm/rel/d/a/d_a_vrbox/d_a_vrbox/daVrbox_Draw__FP11vrbox_class.s"
}
#pragma pop


/* 804986B8-80498850 0198+00 .text      daVrbox_color_set__FP11vrbox_class                           */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void daVrbox_color_set(vrbox_class* field_0) {
	nofralloc
#include "asm/rel/d/a/d_a_vrbox/d_a_vrbox/daVrbox_color_set__FP11vrbox_class.s"
}
#pragma pop


/* 80498850-80498858 0008+00 .text      daVrbox_Execute__FP11vrbox_class                             */
bool daVrbox_Execute(vrbox_class* field_0) {
	return true;
}


/* 80498858-80498860 0008+00 .text      daVrbox_IsDelete__FP11vrbox_class                            */
bool daVrbox_IsDelete(vrbox_class* field_0) {
	return true;
}


/* 80498860-80498868 0008+00 .text      daVrbox_Delete__FP11vrbox_class                              */
bool daVrbox_Delete(vrbox_class* field_0) {
	return true;
}


/* 80498868-804988DC 0074+00 .text      daVrbox_solidHeapCB__FP10fopAc_ac_c                          */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void daVrbox_solidHeapCB(fopAc_ac_c* field_0) {
	nofralloc
#include "asm/rel/d/a/d_a_vrbox/d_a_vrbox/daVrbox_solidHeapCB__FP10fopAc_ac_c.s"
}
#pragma pop


/* 804988DC-80498988 00AC+00 .text      daVrbox_Create__FP10fopAc_ac_c                               */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void daVrbox_Create(fopAc_ac_c* field_0) {
	nofralloc
#include "asm/rel/d/a/d_a_vrbox/d_a_vrbox/daVrbox_Create__FP10fopAc_ac_c.s"
}
#pragma pop


/* ############################################################################################## */
/* 80498990-80498994 0004+00 .rodata    @3695                                                        */
SECTION_RODATA const u8 lit_3695[4] = {
	0x00, 0x00, 0x00, 0x00,
};

/* 80498994-80498998 0004+00 .rodata    @3696                                                        */
SECTION_RODATA const u32 lit_3696 = 0x3DB851EC;

/* 80498998-804989A7 000F+00 .rodata    @stringBase0                                                 */
#pragma push
#pragma force_active on
#pragma section ".dead"
SECTION_DEAD char* const stringBase_80498998 = "vrbox_sora.bmd";
#pragma pop

/* 804989A8-804989C8 0020+00 .data      l_daVrbox_Method                                             */
u8 l_daVrbox_Method[32] = {
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
};

/* 804989C8-804989F8 0030+00 .data      g_profile_VRBOX                                              */
u8 g_profile_VRBOX[48] = {
	0xFF, 0xFF, 0xFF, 0xFD, 0x00, 0x07, 0xFF, 0xFD, 0x02, 0xDA, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
	0x00, 0x00, 0x05, 0x78, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
	0x00, 0x07, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x04, 0x40, 0x00, 0x00, 0x00, 0x00, 0x00,
};

