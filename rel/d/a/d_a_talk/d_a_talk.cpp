// 
// Generated By: dol2asm
// 

#include "dolphin/types.h"

// 
// Forward References:
// 

extern "C" extern void __ct__10fopAc_ac_cFv();
extern "C" extern void __dt__10fopAc_ac_cFv();
extern "C" extern void fopAcM_delete__FP10fopAc_ac_c();
extern "C" extern void fopAcM_searchActorDistanceXZ__FPC10fopAc_ac_cPC10fopAc_ac_c();
extern "C" extern void fopMsgM_messageSet__FUlP10fopAc_ac_cUl();
extern "C" extern void reset__14dEvt_control_cFv();
extern "C" extern void setProcessID__12dMsgObject_cFUi();
extern "C" extern void getpTalkActor__12dMsgObject_cFv();
extern "C" extern void getIdx__12dMsgObject_cFv();
extern "C" extern void getNodeIdx__12dMsgObject_cFv();
extern "C" extern void setStatus__12dMsgObject_cFUs();
extern "C" extern void getStatus__12dMsgObject_cFv();
extern "C" extern void __ct__10dMsgFlow_cFv();
extern "C" extern void __dt__10dMsgFlow_cFv();
extern "C" extern void init__10dMsgFlow_cFP10fopAc_ac_ciiPP10fopAc_ac_c();
extern "C" extern void doFlow__10dMsgFlow_cFP10fopAc_ac_cPP10fopAc_ac_ci();
extern "C" extern void __dl__FPv();
extern "C" extern void __copy();
extern "C" extern void _savegpr_29();
extern "C" extern void _restgpr_29();
SECTION_DATA extern void* g_fopAc_Method[8];
SECTION_DATA extern void* g_fpcLf_Method[6];
SECTION_DATA extern u8 dist_table__12dAttention_c[6552];
SECTION_BSS extern u8 g_dComIfG_gameInfo[122384];
extern "C" extern void _unresolved();
extern "C" extern void __dt__8daTalk_cFv();
extern "C" extern void create__8daTalk_cFv();
extern "C" extern void execute__8daTalk_cFv();
extern "C" extern void draw__8daTalk_cFv();
extern "C" extern void setStatus__8daTalk_cFUs();
extern "C" extern void getStatus__8daTalk_cFv();
extern "C" extern void messageSet__8daTalk_cFv();
extern "C" extern void daTalk_Create__FP10fopAc_ac_c();
extern "C" extern void daTalk_Delete__FP8daTalk_c();
extern "C" extern void daTalk_Execute__FP8daTalk_c();
extern "C" extern void daTalk_Draw__FP8daTalk_c();
SECTION_DATA extern void* l_daTalk_Method[8];
SECTION_DATA extern void* g_profile_TALK[12];

// 
// Functions:
// 

/* 80D66378-80D663E4 006C .text      __dt__8daTalk_cFv                                            */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
extern "C" asm void __dt__8daTalk_cFv() {
	nofralloc
#include "asm/rel/d/a/d_a_talk/d_a_talk/__dt__8daTalk_cFv.s"
}
#pragma pop


/* 80D663E4-80D664AC 00C8 .text      create__8daTalk_cFv                                          */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
extern "C" asm void create__8daTalk_cFv() {
	nofralloc
#include "asm/rel/d/a/d_a_talk/d_a_talk/create__8daTalk_cFv.s"
}
#pragma pop


/* 80D664AC-80D6665C 01B0 .text      execute__8daTalk_cFv                                         */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
extern "C" asm void execute__8daTalk_cFv() {
	nofralloc
#include "asm/rel/d/a/d_a_talk/d_a_talk/execute__8daTalk_cFv.s"
}
#pragma pop


/* 80D6665C-80D66664 0008 .text      draw__8daTalk_cFv                                            */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
extern "C" asm void draw__8daTalk_cFv() {
	nofralloc
#include "asm/rel/d/a/d_a_talk/d_a_talk/draw__8daTalk_cFv.s"
}
#pragma pop


/* 80D66664-80D66688 0024 .text      setStatus__8daTalk_cFUs                                      */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
extern "C" asm void setStatus__8daTalk_cFUs() {
	nofralloc
#include "asm/rel/d/a/d_a_talk/d_a_talk/setStatus__8daTalk_cFUs.s"
}
#pragma pop


/* 80D66688-80D666A8 0020 .text      getStatus__8daTalk_cFv                                       */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
extern "C" asm void getStatus__8daTalk_cFv() {
	nofralloc
#include "asm/rel/d/a/d_a_talk/d_a_talk/getStatus__8daTalk_cFv.s"
}
#pragma pop


/* 80D666A8-80D666E4 003C .text      messageSet__8daTalk_cFv                                      */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
extern "C" asm void messageSet__8daTalk_cFv() {
	nofralloc
#include "asm/rel/d/a/d_a_talk/d_a_talk/messageSet__8daTalk_cFv.s"
}
#pragma pop


/* 80D666E4-80D66704 0020 .text      daTalk_Create__FP10fopAc_ac_c                                */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
extern "C" asm void daTalk_Create__FP10fopAc_ac_c() {
	nofralloc
#include "asm/rel/d/a/d_a_talk/d_a_talk/daTalk_Create__FP10fopAc_ac_c.s"
}
#pragma pop


/* 80D66704-80D6672C 0028 .text      daTalk_Delete__FP8daTalk_c                                   */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
extern "C" asm void daTalk_Delete__FP8daTalk_c() {
	nofralloc
#include "asm/rel/d/a/d_a_talk/d_a_talk/daTalk_Delete__FP8daTalk_c.s"
}
#pragma pop


/* 80D6672C-80D6674C 0020 .text      daTalk_Execute__FP8daTalk_c                                  */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
extern "C" asm void daTalk_Execute__FP8daTalk_c() {
	nofralloc
#include "asm/rel/d/a/d_a_talk/d_a_talk/daTalk_Execute__FP8daTalk_c.s"
}
#pragma pop


/* 80D6674C-80D6676C 0020 .text      daTalk_Draw__FP8daTalk_c                                     */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
extern "C" asm void daTalk_Draw__FP8daTalk_c() {
	nofralloc
#include "asm/rel/d/a/d_a_talk/d_a_talk/daTalk_Draw__FP8daTalk_c.s"
}
#pragma pop


/* 80D66774-80D66794 0020 .data      l_daTalk_Method                                              */
void* l_daTalk_Method[8] = {
	(void*)daTalk_Create__FP10fopAc_ac_c,
	(void*)daTalk_Delete__FP8daTalk_c,
	(void*)daTalk_Execute__FP8daTalk_c,
	NULL,
	(void*)daTalk_Draw__FP8daTalk_c,
	NULL,
	NULL,
	NULL,
};

/* 80D66794-80D667C4 0030 .data      g_profile_TALK                                               */
void* g_profile_TALK[12] = {
	(void*)0xFFFFFFFD,
	(void*)0x0007FFFD,
	(void*)0x02BD0000,
	(void*)&g_fpcLf_Method,
	(void*)0x000005B8,
	NULL,
	NULL,
	(void*)&g_fopAc_Method,
	(void*)0x02FE0000,
	(void*)&l_daTalk_Method,
	(void*)0x00044000,
	(void*)0x00060000,
};

