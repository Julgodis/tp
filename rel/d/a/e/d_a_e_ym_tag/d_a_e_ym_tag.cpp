// 
// Generated By: dol2asm
// Translation Unit: d_a_e_ym_tag
// 

#include "dolphin/types.h"

// 
// Forward References:
// 

extern "C" extern void daE_YM_TAG_Draw__FP12daE_YM_TAG_c();
extern "C" extern void s_e_ym__FPvPv();
extern "C" extern void execute__12daE_YM_TAG_cFv();
extern "C" extern void daE_YM_TAG_Execute__FP12daE_YM_TAG_c();
extern "C" extern void daE_YM_TAG_IsDelete__FP12daE_YM_TAG_c();
extern "C" extern void daE_YM_TAG_Delete__FP12daE_YM_TAG_c();
extern "C" extern void create__12daE_YM_TAG_cFv();
extern "C" extern void daE_YM_TAG_Create__FP12daE_YM_TAG_c();
SECTION_DATA extern u8 l_daE_YM_TAG_Method[32];
SECTION_DATA extern u8 g_profile_E_YM_TAG[48];

// 
// External References:
// 

extern "C" extern void _unresolved();

// 
// Declarations:
// 

/* 80815DF8-80815E00 0008+00 .text      daE_YM_TAG_Draw__FP12daE_YM_TAG_c                            */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
ASM_FUNCTION(daE_YM_TAG_Draw__FP12daE_YM_TAG_c) {
	nofralloc
#include "asm/rel/d/a/e/d_a_e_ym_tag/d_a_e_ym_tag/daE_YM_TAG_Draw__FP12daE_YM_TAG_c.s"
}
#pragma pop


/* 80815E00-80815E8C 008C+00 .text      s_e_ym__FPvPv                                                */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
ASM_FUNCTION(s_e_ym__FPvPv) {
	nofralloc
#include "asm/rel/d/a/e/d_a_e_ym_tag/d_a_e_ym_tag/s_e_ym__FPvPv.s"
}
#pragma pop


/* 80815E8C-80815EF8 006C+00 .text      execute__12daE_YM_TAG_cFv                                    */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
ASM_FUNCTION(execute__12daE_YM_TAG_cFv) {
	nofralloc
#include "asm/rel/d/a/e/d_a_e_ym_tag/d_a_e_ym_tag/execute__12daE_YM_TAG_cFv.s"
}
#pragma pop


/* 80815EF8-80815F18 0020+00 .text      daE_YM_TAG_Execute__FP12daE_YM_TAG_c                         */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
ASM_FUNCTION(daE_YM_TAG_Execute__FP12daE_YM_TAG_c) {
	nofralloc
#include "asm/rel/d/a/e/d_a_e_ym_tag/d_a_e_ym_tag/daE_YM_TAG_Execute__FP12daE_YM_TAG_c.s"
}
#pragma pop


/* 80815F18-80815F20 0008+00 .text      daE_YM_TAG_IsDelete__FP12daE_YM_TAG_c                        */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
ASM_FUNCTION(daE_YM_TAG_IsDelete__FP12daE_YM_TAG_c) {
	nofralloc
#include "asm/rel/d/a/e/d_a_e_ym_tag/d_a_e_ym_tag/daE_YM_TAG_IsDelete__FP12daE_YM_TAG_c.s"
}
#pragma pop


/* 80815F20-80815F28 0008+00 .text      daE_YM_TAG_Delete__FP12daE_YM_TAG_c                          */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
ASM_FUNCTION(daE_YM_TAG_Delete__FP12daE_YM_TAG_c) {
	nofralloc
#include "asm/rel/d/a/e/d_a_e_ym_tag/d_a_e_ym_tag/daE_YM_TAG_Delete__FP12daE_YM_TAG_c.s"
}
#pragma pop


/* 80815F28-80815F90 0068+00 .text      create__12daE_YM_TAG_cFv                                     */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
ASM_FUNCTION(create__12daE_YM_TAG_cFv) {
	nofralloc
#include "asm/rel/d/a/e/d_a_e_ym_tag/d_a_e_ym_tag/create__12daE_YM_TAG_cFv.s"
}
#pragma pop


/* 80815F90-80815FB0 0020+00 .text      daE_YM_TAG_Create__FP12daE_YM_TAG_c                          */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
ASM_FUNCTION(daE_YM_TAG_Create__FP12daE_YM_TAG_c) {
	nofralloc
#include "asm/rel/d/a/e/d_a_e_ym_tag/d_a_e_ym_tag/daE_YM_TAG_Create__FP12daE_YM_TAG_c.s"
}
#pragma pop


/* ############################################################################################## */
/* 80815FB8-80815FD8 0020+00 .data      l_daE_YM_TAG_Method                                          */
u8 l_daE_YM_TAG_Method[32] = {
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
};

/* 80815FD8-80816008 0030+00 .data      g_profile_E_YM_TAG                                           */
u8 g_profile_E_YM_TAG[48] = {
	0xFF, 0xFF, 0xFF, 0xFD, 0x00, 0x07, 0xFF, 0xFD, 0x01, 0xF5, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
	0x00, 0x00, 0x05, 0x68, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
	0x00, 0xC3, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x04, 0x40, 0x00, 0x00, 0x00, 0x00, 0x00,
};

