// 
// Generated By: dol2asm
// Translation Unit: d_a_tag_kmsg
// 

#include "dol2asm.h"
#include "dolphin/types.h"
#include "rel/d/a/tag/d_a_tag_kmsg/d_a_tag_kmsg.h"

// 
// Types:
// 

struct daTag_KMsg_c {
	/* 8048DE78 */ void create();
	/* 8048DFDC */ void Delete();
	/* 8048E010 */ void Execute();
	/* 8048E8B8 */ bool Draw();
	/* 8048E8C0 */ void isDelete();
	/* 8048EA30 */ ~daTag_KMsg_c();
};

struct fopAc_ac_c {
	/* 80018B64 */ fopAc_ac_c();
	/* 80018C8C */ ~fopAc_ac_c();
};

struct request_of_phase_process_class {
};

struct dSv_info_c {
	/* 80035360 */ void isSwitch(int, int) const;
};

struct dEvt_control_c {
	/* 80042468 */ void reset();
	/* 80042518 */ void reset(void*);
};

struct dEvent_manager_c {
	/* 80046800 */ void setObjectArchive(char*);
	/* 80047758 */ void getEventIdx(fopAc_ac_c*, char const*, u8);
	/* 80047A78 */ void endCheck(s16);
	/* 80047B1C */ void getMyStaffId(char const*, fopAc_ac_c*, int);
	/* 8004817C */ void cutEnd(int);
};

struct cBgS_LinChk {
};

struct cBgS {
	/* 800743B4 */ void LineCross(cBgS_LinChk*);
};

struct Vec {
};

struct cXyz {
	/* 80266AE4 */ void operator+(Vec const&) const;
	/* 80266B34 */ void operator-(Vec const&) const;
	/* 80266B84 */ void operator*(f32) const;
	/* 80266CE4 */ void norm() const;
};

struct dBgS_LinChk {
	/* 80077C68 */ dBgS_LinChk();
	/* 80077CDC */ ~dBgS_LinChk();
	/* 80077D64 */ void Set(cXyz const*, cXyz const*, fopAc_ac_c const*);
};

struct dMsgFlow_c {
	/* 80249F00 */ dMsgFlow_c();
	/* 80249F48 */ ~dMsgFlow_c();
	/* 80249F90 */ void init(fopAc_ac_c*, int, int, fopAc_ac_c**);
	/* 8024A2D8 */ void doFlow(fopAc_ac_c*, fopAc_ac_c**, int);
};

struct cSAngle {
	/* 80270F98 */ cSAngle(s16);
	/* 802710F8 */ void Sin() const;
	/* 80271120 */ void Cos() const;
};

// 
// Forward References:
// 

static void daTag_KMsg_Create(void*); // 2
static void daTag_KMsg_Delete(void*); // 2
static void daTag_KMsg_Execute(void*); // 2
static void daTag_KMsg_Draw(void*); // 2
static bool daTag_KMsg_IsDelete(void*); // 2

extern "C" void create__12daTag_KMsg_cFv(); // 1
extern "C" void Delete__12daTag_KMsg_cFv(); // 1
extern "C" void Execute__12daTag_KMsg_cFv(); // 1
extern "C" bool Draw__12daTag_KMsg_cFv(); // 1
extern "C" void isDelete__12daTag_KMsg_cFv(); // 1
extern "C" static void daTag_KMsg_Create__FPv(); // 1
extern "C" static void daTag_KMsg_Delete__FPv(); // 1
extern "C" static void daTag_KMsg_Execute__FPv(); // 1
extern "C" static void daTag_KMsg_Draw__FPv(); // 1
extern "C" static bool daTag_KMsg_IsDelete__FPv(); // 1
extern "C" void __dt__12daTag_KMsg_cFv(); // 1
extern "C" extern u8 const lit_4211[8];
extern "C" extern void* g_profile_TAG_KMSG[12];

// 
// External References:
// 

void fopAcM_delete(fopAc_ac_c*); // 2
void fopAcM_orderChangeEventId(fopAc_ac_c*, s16, u16, u16); // 2
void fopAcM_orderOtherEventId(fopAc_ac_c*, s16, u8, u16, u16, u16); // 2
void fopAcM_cancelCarryNow(fopAc_ac_c*); // 2
void dComIfG_resLoad(request_of_phase_process_class*, char const*); // 2
void dComIfG_resDelete(request_of_phase_process_class*, char const*); // 2
void daNpcT_chkDoBtnIsSpeak(fopAc_ac_c*); // 2
void daNpcT_getDistTableIdx(int, int); // 2
void daNpcT_chkEvtBit(u32); // 2
void operator delete(void*); // 2

extern "C" void __ct__10fopAc_ac_cFv(); // 1
extern "C" void __dt__10fopAc_ac_cFv(); // 1
extern "C" void fopAcM_delete__FP10fopAc_ac_c(); // 1
extern "C" void fopAcM_orderChangeEventId__FP10fopAc_ac_csUsUs(); // 1
extern "C" void fopAcM_orderOtherEventId__FP10fopAc_ac_csUcUsUsUs(); // 1
extern "C" void fopAcM_cancelCarryNow__FP10fopAc_ac_c(); // 1
extern "C" void dComIfG_resLoad__FP30request_of_phase_process_classPCc(); // 1
extern "C" void dComIfG_resDelete__FP30request_of_phase_process_classPCc(); // 1
extern "C" void isSwitch__10dSv_info_cCFii(); // 1
extern "C" void reset__14dEvt_control_cFv(); // 1
extern "C" void reset__14dEvt_control_cFPv(); // 1
extern "C" void setObjectArchive__16dEvent_manager_cFPc(); // 1
extern "C" void getEventIdx__16dEvent_manager_cFP10fopAc_ac_cPCcUc(); // 1
extern "C" void endCheck__16dEvent_manager_cFs(); // 1
extern "C" void getMyStaffId__16dEvent_manager_cFPCcP10fopAc_ac_ci(); // 1
extern "C" void cutEnd__16dEvent_manager_cFi(); // 1
extern "C" void LineCross__4cBgSFP11cBgS_LinChk(); // 1
extern "C" void __ct__11dBgS_LinChkFv(); // 1
extern "C" void __dt__11dBgS_LinChkFv(); // 1
extern "C" void Set__11dBgS_LinChkFPC4cXyzPC4cXyzPC10fopAc_ac_c(); // 1
extern "C" void daNpcT_chkDoBtnIsSpeak__FP10fopAc_ac_c(); // 1
extern "C" void daNpcT_getDistTableIdx__Fii(); // 1
extern "C" void daNpcT_chkEvtBit__FUl(); // 1
extern "C" void __ct__10dMsgFlow_cFv(); // 1
extern "C" void __dt__10dMsgFlow_cFv(); // 1
extern "C" void init__10dMsgFlow_cFP10fopAc_ac_ciiPP10fopAc_ac_c(); // 1
extern "C" void doFlow__10dMsgFlow_cFP10fopAc_ac_cPP10fopAc_ac_ci(); // 1
extern "C" void __pl__4cXyzCFRC3Vec(); // 1
extern "C" void __mi__4cXyzCFRC3Vec(); // 1
extern "C" void __ml__4cXyzCFf(); // 1
extern "C" void norm__4cXyzCFv(); // 1
extern "C" void __ct__7cSAngleFs(); // 1
extern "C" void Sin__7cSAngleCFv(); // 1
extern "C" void Cos__7cSAngleCFv(); // 1
extern "C" void __dl__FPv(); // 1
extern "C" void _savegpr_25(); // 1
extern "C" void _restgpr_25(); // 1
extern "C" void strlen(); // 1
extern "C" extern void* g_fopAc_Method[8];
extern "C" extern void* g_fpcLf_Method[5 + 1 /* padding */];
SECTION_BSS extern u8 struct_804061C0[4];
extern "C" extern u8 struct_8040B16C[68];
SECTION_BSS extern u8 data_8040BF74[4];
SECTION_BSS extern u8 struct_8040BFE4[4];
SECTION_BSS extern u8 struct_8040BFFC[4];
extern "C" extern u8 struct_8040C000[12];
SECTION_BSS extern u8 struct_8040C010[8];
extern "C" extern u8 struct_80450D64[4];

// 
// Declarations:
// 

/* ############################################################################################## */
/* 8048EADC-8048EAE0 0004+00 s=2 e=0 z=0  None .rodata    @3884                                                        */
SECTION_RODATA static u32 const lit_3884 = 0x41200000;

/* 8048EAE0-8048EAE4 0004+00 s=1 e=0 z=0  None .rodata    @4206                                                        */
SECTION_RODATA static u32 const lit_4206 = 0x4E6E6B28;

/* 8048EAE4-8048EAE8 0004+00 s=1 e=0 z=0  None .rodata    @4207                                                        */
SECTION_RODATA static u32 const lit_4207 = 0xBF000000;

/* 8048EAE8-8048EAEC 0004+00 s=1 e=0 z=0  None .rodata    @4208                                                        */
SECTION_RODATA static u32 const lit_4208 = 0xC1A00000;

/* 8048EAEC-8048EAF4 0004+04 s=1 e=0 z=0  None .rodata    @4209                                                        */
SECTION_RODATA static u32 const lit_4209[1 + 1 /* padding */] = {
	0x42A00000,
	/* padding */
	0x00000000,
};

/* 8048EAF4-8048EAFC 0008+00 s=0 e=0 z=0  None .rodata    @4211                                                        */
SECTION_RODATA u8 const lit_4211[8] = {
	0x43, 0x30, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
};

/* 8048EAFC-8048EB08 000C+00 s=5 e=0 z=0  None .rodata    None                                                         */
SECTION_RODATA static u8 const struct_8048EAFC[12] = {
	/* 8048EAFC 0001 stringBase_8048EAFC @stringBase0 */
	0x00,
	/* 8048EAFD 000B data_8048EAFD None */
	0x45, 0x58, 0x54, 0x49, 0x4E, 0x43, 0x54, 0x49, 0x4F, 0x4E, 0x00,
};

/* 8048EB08-8048EB2C 0024+00 s=2 e=0 z=0  None .rodata    None                                                         */
SECTION_RODATA static u8 const struct_8048EB08[36] = {
	/* 8048EB08 0009 data_8048EB08 None */
	0x50, 0x55, 0x52, 0x43, 0x48, 0x41, 0x53, 0x45, 0x00,
	/* 8048EB11 0006 data_8048EB11 None */
	0x42, 0x61, 0x6E, 0x73, 0x31, 0x00,
	/* 8048EB17 0015 data_8048EB17 None */
	0x73, 0x65, 0x6B, 0x69, 0x7A, 0x6F, 0x41, 0x00, 0x4C, 0x76, 0x36, 0x47, 0x61, 0x74, 0x65, 0x00,
	0x4B, 0x4D, 0x73, 0x67, 0x00,
};

/* 8048EB2C-8048EB44 0018+00 s=1 e=0 z=0  None .data      l_evtList                                                    */
SECTION_DATA static void* l_evtList[6] = {
	/* 0    */ (void*)(((char*)&struct_8048EAFC)+0x0) /* @stringBase0 */,
	/* 1    */ (void*)NULL,
	/* 2    */ (void*)(((char*)&struct_8048EAFC)+0x1) /* None */,
	/* 3    */ (void*)0x00000002,
	/* 4    */ (void*)(((char*)&struct_8048EB08)+0x0) /* None */,
	/* 5    */ (void*)0x00000001,
};

/* 8048EB44-8048EB50 000C+00 s=1 e=0 z=0  None .data      l_resNameList                                                */
SECTION_DATA static void* l_resNameList[3] = {
	/* 0    */ (void*)(((char*)&struct_8048EAFC)+0x0) /* @stringBase0 */,
	/* 1    */ (void*)(((char*)&struct_8048EB08)+0x9) /* None */,
	/* 2    */ (void*)(((char*)&struct_8048EB08)+0xF) /* None */,
};

/* 8048EB50-8048EB70 0020+00 s=1 e=0 z=0  None .data      daTag_KMsg_MethodTable                                       */
SECTION_DATA static void* daTag_KMsg_MethodTable[8] = {
	/* 0    */ (void*)daTag_KMsg_Create__FPv,
	/* 1    */ (void*)daTag_KMsg_Delete__FPv,
	/* 2    */ (void*)daTag_KMsg_Execute__FPv,
	/* 3    */ (void*)daTag_KMsg_IsDelete__FPv,
	/* 4    */ (void*)daTag_KMsg_Draw__FPv,
	/* 5    */ (void*)NULL,
	/* 6    */ (void*)NULL,
	/* 7    */ (void*)NULL,
};

/* 8048EB70-8048EBA0 0030+00 s=0 e=0 z=1  None .data      g_profile_TAG_KMSG                                           */
SECTION_DATA void* g_profile_TAG_KMSG[12] = {
	/* 0    */ (void*)0xFFFFFFFD,
	/* 1    */ (void*)0x0008FFFD,
	/* 2    */ (void*)0x02EB0000,
	/* 3    */ (void*)&g_fpcLf_Method,
	/* 4    */ (void*)0x000005CC,
	/* 5    */ (void*)NULL,
	/* 6    */ (void*)NULL,
	/* 7    */ (void*)&g_fopAc_Method,
	/* 8    */ (void*)0x01220000,
	/* 9    */ (void*)&daTag_KMsg_MethodTable,
	/* 10   */ (void*)0x00044000,
	/* 11   */ (void*)0x000E0000,
};

/* 8048EBA0-8048EBAC 000C+00 s=2 e=0 z=0  None .data      __vt__12daTag_KMsg_c                                         */
SECTION_DATA static void* __vt__12daTag_KMsg_c[3] = {
	/* 0    */ (void*)NULL /* RTTI */,
	/* 1    */ (void*)NULL,
	/* 2    */ (void*)__dt__12daTag_KMsg_cFv,
};

/* 8048DE78-8048DFDC 0164+00 s=1 e=0 z=0  None .text      create__12daTag_KMsg_cFv                                     */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void daTag_KMsg_c::create() {
	nofralloc
#include "asm/rel/d/a/tag/d_a_tag_kmsg/d_a_tag_kmsg/create__12daTag_KMsg_cFv.s"
}
#pragma pop


/* 8048DFDC-8048E010 0034+00 s=1 e=0 z=0  None .text      Delete__12daTag_KMsg_cFv                                     */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void daTag_KMsg_c::Delete() {
	nofralloc
#include "asm/rel/d/a/tag/d_a_tag_kmsg/d_a_tag_kmsg/Delete__12daTag_KMsg_cFv.s"
}
#pragma pop


/* 8048E010-8048E8B8 08A8+00 s=1 e=0 z=0  None .text      Execute__12daTag_KMsg_cFv                                    */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void daTag_KMsg_c::Execute() {
	nofralloc
#include "asm/rel/d/a/tag/d_a_tag_kmsg/d_a_tag_kmsg/Execute__12daTag_KMsg_cFv.s"
}
#pragma pop


/* 8048E8B8-8048E8C0 0008+00 s=1 e=0 z=0  None .text      Draw__12daTag_KMsg_cFv                                       */
bool daTag_KMsg_c::Draw() {
	return true;
}


/* 8048E8C0-8048E9A8 00E8+00 s=2 e=0 z=0  None .text      isDelete__12daTag_KMsg_cFv                                   */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void daTag_KMsg_c::isDelete() {
	nofralloc
#include "asm/rel/d/a/tag/d_a_tag_kmsg/d_a_tag_kmsg/isDelete__12daTag_KMsg_cFv.s"
}
#pragma pop


/* 8048E9A8-8048E9C8 0020+00 s=1 e=0 z=0  None .text      daTag_KMsg_Create__FPv                                       */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm static void daTag_KMsg_Create(void* param_0) {
	nofralloc
#include "asm/rel/d/a/tag/d_a_tag_kmsg/d_a_tag_kmsg/daTag_KMsg_Create__FPv.s"
}
#pragma pop


/* 8048E9C8-8048E9E8 0020+00 s=1 e=0 z=0  None .text      daTag_KMsg_Delete__FPv                                       */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm static void daTag_KMsg_Delete(void* param_0) {
	nofralloc
#include "asm/rel/d/a/tag/d_a_tag_kmsg/d_a_tag_kmsg/daTag_KMsg_Delete__FPv.s"
}
#pragma pop


/* 8048E9E8-8048EA08 0020+00 s=1 e=0 z=0  None .text      daTag_KMsg_Execute__FPv                                      */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm static void daTag_KMsg_Execute(void* param_0) {
	nofralloc
#include "asm/rel/d/a/tag/d_a_tag_kmsg/d_a_tag_kmsg/daTag_KMsg_Execute__FPv.s"
}
#pragma pop


/* 8048EA08-8048EA28 0020+00 s=1 e=0 z=0  None .text      daTag_KMsg_Draw__FPv                                         */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm static void daTag_KMsg_Draw(void* param_0) {
	nofralloc
#include "asm/rel/d/a/tag/d_a_tag_kmsg/d_a_tag_kmsg/daTag_KMsg_Draw__FPv.s"
}
#pragma pop


/* 8048EA28-8048EA30 0008+00 s=1 e=0 z=0  None .text      daTag_KMsg_IsDelete__FPv                                     */
static bool daTag_KMsg_IsDelete(void* param_0) {
	return true;
}


/* 8048EA30-8048EAD4 00A4+00 s=1 e=0 z=0  None .text      __dt__12daTag_KMsg_cFv                                       */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm daTag_KMsg_c::~daTag_KMsg_c() {
	nofralloc
#include "asm/rel/d/a/tag/d_a_tag_kmsg/d_a_tag_kmsg/__dt__12daTag_KMsg_cFv.s"
}
#pragma pop


