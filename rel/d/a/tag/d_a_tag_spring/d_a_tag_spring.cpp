// 
// Generated By: dol2asm
// Translation Unit: d_a_tag_spring
// 

#include "dolphin/types.h"

// 
// Types:
// 

struct daTagSpring_c;

struct daTagSpring_c {
	void initBaseMtx();
	void setBaseMtx();
	void Create();
	void create();
	void execute();
	void checkArea();
	bool _delete();
};

// 
// Forward References:
// 

void daTagSpring_Execute(daTagSpring_c*);
void daTagSpring_Delete(daTagSpring_c*);
void daTagSpring_Create(daTagSpring_c*);

extern "C" void initBaseMtx__13daTagSpring_cFv();
extern "C" void setBaseMtx__13daTagSpring_cFv();
extern "C" void Create__13daTagSpring_cFv();
extern "C" void create__13daTagSpring_cFv();
extern "C" void execute__13daTagSpring_cFv();
extern "C" void checkArea__13daTagSpring_cFv();
extern "C" bool _delete__13daTagSpring_cFv();
extern "C" void daTagSpring_Execute__FP13daTagSpring_c();
extern "C" void daTagSpring_Delete__FP13daTagSpring_c();
extern "C" void daTagSpring_Create__FP13daTagSpring_c();
SECTION_RODATA extern const u32 lit_3728;
SECTION_RODATA extern const u8 lit_3773[4];
SECTION_RODATA extern const u8 lit_3774[8];
SECTION_RODATA extern const u8 lit_3775[8];
SECTION_RODATA extern const u8 lit_3776[8];
SECTION_RODATA extern const u32 lit_3777;
SECTION_DATA extern u8 l_daTagSpring_Method[32];
SECTION_DATA extern u8 g_profile_Tag_Spring[48];

// 
// External References:
// 

extern "C" void _unresolved();

extern "C" void _unresolved();

// 
// Declarations:
// 

/* 805A6A58-805A6A78 0020+00 .text      initBaseMtx__13daTagSpring_cFv                               */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void daTagSpring_c::initBaseMtx() {
	nofralloc
#include "asm/rel/d/a/tag/d_a_tag_spring/d_a_tag_spring/initBaseMtx__13daTagSpring_cFv.s"
}
#pragma pop


/* 805A6A78-805A6AD0 0058+00 .text      setBaseMtx__13daTagSpring_cFv                                */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void daTagSpring_c::setBaseMtx() {
	nofralloc
#include "asm/rel/d/a/tag/d_a_tag_spring/d_a_tag_spring/setBaseMtx__13daTagSpring_cFv.s"
}
#pragma pop


/* 805A6AD0-805A6AF4 0024+00 .text      Create__13daTagSpring_cFv                                    */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void daTagSpring_c::Create() {
	nofralloc
#include "asm/rel/d/a/tag/d_a_tag_spring/d_a_tag_spring/Create__13daTagSpring_cFv.s"
}
#pragma pop


/* 805A6AF4-805A6B5C 0068+00 .text      create__13daTagSpring_cFv                                    */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void daTagSpring_c::create() {
	nofralloc
#include "asm/rel/d/a/tag/d_a_tag_spring/d_a_tag_spring/func_805A6AF4.s"
}
#pragma pop


/* 805A6B5C-805A6C84 0128+00 .text      execute__13daTagSpring_cFv                                   */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void daTagSpring_c::execute() {
	nofralloc
#include "asm/rel/d/a/tag/d_a_tag_spring/d_a_tag_spring/execute__13daTagSpring_cFv.s"
}
#pragma pop


/* 805A6C84-805A6DFC 0178+00 .text      checkArea__13daTagSpring_cFv                                 */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void daTagSpring_c::checkArea() {
	nofralloc
#include "asm/rel/d/a/tag/d_a_tag_spring/d_a_tag_spring/checkArea__13daTagSpring_cFv.s"
}
#pragma pop


/* 805A6DFC-805A6E04 0008+00 .text      _delete__13daTagSpring_cFv                                   */
bool daTagSpring_c::_delete() {
	return true;
}


/* 805A6E04-805A6E24 0020+00 .text      daTagSpring_Execute__FP13daTagSpring_c                       */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void daTagSpring_Execute(daTagSpring_c* field_0) {
	nofralloc
#include "asm/rel/d/a/tag/d_a_tag_spring/d_a_tag_spring/daTagSpring_Execute__FP13daTagSpring_c.s"
}
#pragma pop


/* 805A6E24-805A6E44 0020+00 .text      daTagSpring_Delete__FP13daTagSpring_c                        */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void daTagSpring_Delete(daTagSpring_c* field_0) {
	nofralloc
#include "asm/rel/d/a/tag/d_a_tag_spring/d_a_tag_spring/daTagSpring_Delete__FP13daTagSpring_c.s"
}
#pragma pop


/* 805A6E44-805A6E64 0020+00 .text      daTagSpring_Create__FP13daTagSpring_c                        */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void daTagSpring_Create(daTagSpring_c* field_0) {
	nofralloc
#include "asm/rel/d/a/tag/d_a_tag_spring/d_a_tag_spring/daTagSpring_Create__FP13daTagSpring_c.s"
}
#pragma pop


/* ############################################################################################## */
/* 805A6E6C-805A6E70 0004+00 .rodata    @3728                                                        */
SECTION_RODATA const u32 lit_3728 = 0x3F800000;

/* 805A6E70-805A6E74 0004+00 .rodata    @3773                                                        */
SECTION_RODATA const u8 lit_3773[4] = {
	0x00, 0x00, 0x00, 0x00,
};

/* 805A6E74-805A6E7C 0008+00 .rodata    @3774                                                        */
SECTION_RODATA const u8 lit_3774[8] = {
	0x3F, 0xE0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
};

/* 805A6E7C-805A6E84 0008+00 .rodata    @3775                                                        */
SECTION_RODATA const u8 lit_3775[8] = {
	0x40, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
};

/* 805A6E84-805A6E8C 0008+00 .rodata    @3776                                                        */
SECTION_RODATA const u8 lit_3776[8] = {
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
};

/* 805A6E8C-805A6E90 0004+00 .rodata    @3777                                                        */
SECTION_RODATA const u32 lit_3777 = 0x447A0000;

/* 805A6E90-805A6EB0 0020+00 .data      l_daTagSpring_Method                                         */
u8 l_daTagSpring_Method[32] = {
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
};

/* 805A6EB0-805A6EE0 0030+00 .data      g_profile_Tag_Spring                                         */
u8 g_profile_Tag_Spring[48] = {
	0xFF, 0xFF, 0xFF, 0xFD, 0x00, 0x07, 0xFF, 0xFD, 0x01, 0xAD, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
	0x00, 0x00, 0x05, 0x6C, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
	0x02, 0x4B, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x04, 0x00, 0x00, 0x00, 0x0E, 0x00, 0x00,
};

