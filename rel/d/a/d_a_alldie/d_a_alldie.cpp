// 
// Generated By: dol2asm
// Translation Unit: d_a_alldie
// 

#include "dolphin/types.h"

// 
// Types:
// 

struct fopAc_ac_c;
struct daAlldie_c;

struct daAlldie_c {
	void getEventNo();
	void getSwbit();
	bool actionWait();
	void actionCheck();
	void actionTimer();
	void actionOrder();
	void actionEvent();
	void actionNext();
	void execute();
};

struct fopAc_ac_c {
};

// 
// Forward References:
// 

bool daAlldie_Draw(daAlldie_c*);
void daAlldie_Execute(daAlldie_c*);
bool daAlldie_IsDelete(daAlldie_c*);
void daAlldie_Delete(daAlldie_c*);
void daAlldie_Create(fopAc_ac_c*);

extern "C" void getEventNo__10daAlldie_cFv();
extern "C" void getSwbit__10daAlldie_cFv();
extern "C" bool actionWait__10daAlldie_cFv();
extern "C" void actionCheck__10daAlldie_cFv();
extern "C" void actionTimer__10daAlldie_cFv();
extern "C" void actionOrder__10daAlldie_cFv();
extern "C" void actionEvent__10daAlldie_cFv();
extern "C" void actionNext__10daAlldie_cFv();
extern "C" void execute__10daAlldie_cFv();
extern "C" bool daAlldie_Draw__FP10daAlldie_c();
extern "C" void daAlldie_Execute__FP10daAlldie_c();
extern "C" bool daAlldie_IsDelete__FP10daAlldie_c();
extern "C" void daAlldie_Delete__FP10daAlldie_c();
extern "C" void daAlldie_Create__FP10fopAc_ac_c();
SECTION_DATA extern u8 l_daAlldie_Method[32];
SECTION_DATA extern u8 g_profile_ALLDIE[48];

// 
// External References:
// 

extern "C" void _unresolved();

extern "C" void _unresolved();

// 
// Declarations:
// 

/* 804D5818-804D5824 000C+00 .text      getEventNo__10daAlldie_cFv                                   */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void daAlldie_c::getEventNo() {
	nofralloc
#include "asm/rel/d/a/d_a_alldie/d_a_alldie/getEventNo__10daAlldie_cFv.s"
}
#pragma pop


/* 804D5824-804D5830 000C+00 .text      getSwbit__10daAlldie_cFv                                     */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void daAlldie_c::getSwbit() {
	nofralloc
#include "asm/rel/d/a/d_a_alldie/d_a_alldie/getSwbit__10daAlldie_cFv.s"
}
#pragma pop


/* 804D5830-804D5838 0008+00 .text      actionWait__10daAlldie_cFv                                   */
bool daAlldie_c::actionWait() {
	return true;
}


/* 804D5838-804D5888 0050+00 .text      actionCheck__10daAlldie_cFv                                  */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void daAlldie_c::actionCheck() {
	nofralloc
#include "asm/rel/d/a/d_a_alldie/d_a_alldie/actionCheck__10daAlldie_cFv.s"
}
#pragma pop


/* 804D5888-804D5938 00B0+00 .text      actionTimer__10daAlldie_cFv                                  */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void daAlldie_c::actionTimer() {
	nofralloc
#include "asm/rel/d/a/d_a_alldie/d_a_alldie/actionTimer__10daAlldie_cFv.s"
}
#pragma pop


/* 804D5938-804D59A0 0068+00 .text      actionOrder__10daAlldie_cFv                                  */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void daAlldie_c::actionOrder() {
	nofralloc
#include "asm/rel/d/a/d_a_alldie/d_a_alldie/actionOrder__10daAlldie_cFv.s"
}
#pragma pop


/* 804D59A0-804D5A44 00A4+00 .text      actionEvent__10daAlldie_cFv                                  */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void daAlldie_c::actionEvent() {
	nofralloc
#include "asm/rel/d/a/d_a_alldie/d_a_alldie/actionEvent__10daAlldie_cFv.s"
}
#pragma pop


/* 804D5A44-804D5B10 00CC+00 .text      actionNext__10daAlldie_cFv                                   */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void daAlldie_c::actionNext() {
	nofralloc
#include "asm/rel/d/a/d_a_alldie/d_a_alldie/actionNext__10daAlldie_cFv.s"
}
#pragma pop


/* 804D5B10-804D5B8C 007C+00 .text      execute__10daAlldie_cFv                                      */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void daAlldie_c::execute() {
	nofralloc
#include "asm/rel/d/a/d_a_alldie/d_a_alldie/execute__10daAlldie_cFv.s"
}
#pragma pop


/* 804D5B8C-804D5B94 0008+00 .text      daAlldie_Draw__FP10daAlldie_c                                */
bool daAlldie_Draw(daAlldie_c* field_0) {
	return true;
}


/* 804D5B94-804D5BB8 0024+00 .text      daAlldie_Execute__FP10daAlldie_c                             */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void daAlldie_Execute(daAlldie_c* field_0) {
	nofralloc
#include "asm/rel/d/a/d_a_alldie/d_a_alldie/daAlldie_Execute__FP10daAlldie_c.s"
}
#pragma pop


/* 804D5BB8-804D5BC0 0008+00 .text      daAlldie_IsDelete__FP10daAlldie_c                            */
bool daAlldie_IsDelete(daAlldie_c* field_0) {
	return true;
}


/* 804D5BC0-804D5BF0 0030+00 .text      daAlldie_Delete__FP10daAlldie_c                              */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void daAlldie_Delete(daAlldie_c* field_0) {
	nofralloc
#include "asm/rel/d/a/d_a_alldie/d_a_alldie/daAlldie_Delete__FP10daAlldie_c.s"
}
#pragma pop


/* 804D5BF0-804D5D1C 012C+00 .text      daAlldie_Create__FP10fopAc_ac_c                              */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void daAlldie_Create(fopAc_ac_c* field_0) {
	nofralloc
#include "asm/rel/d/a/d_a_alldie/d_a_alldie/daAlldie_Create__FP10fopAc_ac_c.s"
}
#pragma pop


/* ############################################################################################## */
/* 804D5D24-804D5D44 0020+00 .data      l_daAlldie_Method                                            */
u8 l_daAlldie_Method[32] = {
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
};

/* 804D5D44-804D5D74 0030+00 .data      g_profile_ALLDIE                                             */
u8 g_profile_ALLDIE[48] = {
	0xFF, 0xFF, 0xFF, 0xFD, 0x00, 0x02, 0xFF, 0xFD, 0x00, 0x14, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
	0x00, 0x00, 0x05, 0x74, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
	0x01, 0x16, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x04, 0x40, 0x00, 0x00, 0x06, 0x00, 0x00,
};

