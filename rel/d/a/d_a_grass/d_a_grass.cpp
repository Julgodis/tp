//
// Generated By: dol2asm
// Translation Unit: d_a_grass
//

#include "rel/d/a/d_a_grass/d_a_grass.h"
#include "dol2asm.h"
#include "dolphin/types.h"

//
// Types:
//

struct mDoMtx_stack_c {
    /* 8000CE38 */ void scaleM(f32, f32, f32);
};

struct fopAc_ac_c {
    /* 80018B64 */ fopAc_ac_c();
};

struct Vec {};

struct cXyz {
    /* 80266B34 */ void operator-(Vec const&) const;
};

struct fopAcM_gc_c {
    /* 8001DCBC */ void gndCheck(cXyz const*);
};

struct daPy_py_c {
    /* 8015F424 */ void checkNowWolfEyeUp();
    /* 8052090C */ void getSwordTopPos() const;
};

struct daGrass_c {
    /* 8051BEFC */ void createGrass();
    /* 8051BF68 */ void deleteGrass();
    /* 8051C040 */ void executeGrass();
    /* 8051C074 */ void drawGrass();
    /* 8051C0A8 */ void newGrassData(cXyz&, int, u8, u8, s16, u8);
    /* 8051C0D4 */ void createFlower();
    /* 8051C140 */ void deleteFlower();
    /* 8051C218 */ void executeFlower();
    /* 8051C24C */ void drawFlower();
    /* 8051C280 */ void newFlowerData(s8, cXyz&, int, s8, s16);
    /* 8051C304 */ void create();
};

struct dStage_roomControl_c {
    /* 80024384 */ void getStatusRoomDt(int);
};

struct dScnKy_env_light_c {
    /* 8019FA08 */ void getDaytime();
};

struct dPa_levelEcallBack {};

struct dKy_tevstr_c {};

struct csXyz {
    /* 802673F4 */ csXyz(s16, s16, s16);
    /* 8051EB4C */ ~csXyz();
};

struct _GXColor {};

struct dPa_control_c {
    /* 8004CA90 */ void set(u8, u16, cXyz const*, dKy_tevstr_c const*, csXyz const*, cXyz const*,
                            u8, dPa_levelEcallBack*, s8, _GXColor const*, _GXColor const*,
                            cXyz const*, f32);
};

struct cCcD_Obj {};

struct dCcMassS_HitInf {
    /* 8051ED98 */ ~dCcMassS_HitInf();
};

struct dGrass_data_c {
    /* 8051D88C */ void WorkCo(fopAc_ac_c*, u32, int);
    /* 8051DA20 */ void WorkAt_NoCutAnim(fopAc_ac_c*, u32, int, dCcMassS_HitInf*, cCcD_Obj*);
    /* 8051DF54 */ void Direction_Set(fopAc_ac_c*, u32, int, dCcMassS_HitInf*, cCcD_Obj*, csXyz*);
    /* 8051E1C8 */ void WorkAt(fopAc_ac_c*, u32, int, dCcMassS_HitInf*, u16);
    /* 8051EB88 */ void hitCheck(int, u16);
    /* 80520940 */ ~dGrass_data_c();
    /* 8052097C */ dGrass_data_c();
};

struct dGrass_room_c {
    /* 8051EDE0 */ void newData(dGrass_data_c*);
    /* 8051EDF0 */ void deleteData();
    /* 80520928 */ dGrass_room_c();
};

struct dGrass_packet_c {
    /* 8051BFBC */ ~dGrass_packet_c();
    /* 8051EE8C */ dGrass_packet_c();
    /* 8051F03C */ void draw();
    /* 8051FABC */ void calc();
    /* 80520030 */ void update();
    /* 8052067C */ void setData(dGrass_data_c*, int, cXyz&, int, u8, u8, s16, u8);
    /* 80520770 */ void newData(cXyz&, int, u8, u8, s16, u8);
    /* 80520864 */ void deleteRoom(int);
    /* 80520898 */ void newAnm();
    /* 805208E4 */ void setAnm(int, s16);
};

struct dGrass_anm_c {
    /* 80520934 */ dGrass_anm_c();
};

struct dFlower_data_c {
    /* 80520988 */ void WorkCo(fopAc_ac_c*, u32, int);
    /* 80520AD8 */ void deleteAnm();
    /* 80520B34 */ void WorkAt_NoCutAnim(fopAc_ac_c*, u32, int, dCcMassS_HitInf*, cCcD_Obj*);
    /* 80520CFC */ void WorkAt(fopAc_ac_c*, u32, int, dCcMassS_HitInf*);
    /* 80521A3C */ void hitCheck(fopAc_ac_c*, int);
    /* 80522FCC */ ~dFlower_data_c();
    /* 80523008 */ dFlower_data_c();
};

struct dFlower_room_c {
    /* 80521BF8 */ void newData(dFlower_data_c*);
    /* 80521C08 */ void deleteData();
    /* 80522FB4 */ dFlower_room_c();
};

struct dFlower_packet_c {
    /* 8051C194 */ ~dFlower_packet_c();
    /* 80521C64 */ dFlower_packet_c();
    /* 80521DAC */ void draw();
    /* 80522774 */ void calc();
    /* 80522A64 */ void update();
    /* 80522CBC */ void setData(dFlower_data_c*, int, s8, cXyz&, int, s8, s16);
    /* 80522E28 */ void newData(s8, cXyz&, int, s8, s16);
    /* 80522F0C */ void deleteRoom(int);
    /* 80522F40 */ void newAnm();
    /* 80522F8C */ void setAnm(int, s16);
};

struct dFlower_anm_c {
    /* 80522FC0 */ dFlower_anm_c();
};

struct dCcS {
    /* 8008730C */ void MassClear();
};

struct dCcMassS_Mng {
    /* 80085630 */ void SetAttr(f32, f32, u8, u8);
    /* 80085690 */ void Prepare();
    /* 800858AC */ void Chk(cXyz*, fopAc_ac_c**, dCcMassS_HitInf*);
};

struct dBgS_GndChk {
    /* 8007757C */ dBgS_GndChk();
    /* 800775F0 */ ~dBgS_GndChk();
};

struct cBgS_GndChk {
    /* 80267D28 */ void SetPos(cXyz const*);
};

struct cBgS {
    /* 800744A0 */ void GroundCross(cBgS_GndChk*);
};

struct _GXTevRegID {};

struct _GXColorS10 {};

struct JAISoundID {};

struct Z2SeMgr {
    /* 802AB984 */ void seStart(JAISoundID, Vec const*, u32, s8, f32, f32, f32, f32, u8);
};

struct J3DUClipper {
    /* 8027378C */ void calcViewFrustum();
    /* 802738FC */ void clip(f32 const (*)[4], Vec, f32) const;
};

struct J3DSys {
    /* 8031073C */ void reinitGX();
};

struct J3DPacket;
struct J3DDrawBuffer {
    /* 8032548C */ void entryImm(J3DPacket*, u16);
};

struct J3DPacket {
    /* 80312750 */ bool entry(J3DDrawBuffer*);
};

//
// Forward References:
//

static void randam_addcol_set(s16*);
static void dGrass_Tex_Change();
static void daGrass_create(daGrass_c*);
static void daGrass_Delete(daGrass_c*);
static void daGrass_execute(daGrass_c*);
static void daGrass_draw(daGrass_c*);
static void cLib_calcTimer__template0(u8*);
void checkGroundY(cXyz&);
static void flowerCheckGroundY(cXyz&);
extern "C" extern u32 const lit_5958;
extern "C" extern u8 const lit_5961[8];
extern "C" extern u32 const lit_6080;
extern "C" extern u32 const lit_6081;
extern "C" extern u32 const lit_6082;
extern "C" extern char const* const stringBase0;
extern "C" extern u32 lit_1787[1 + 4 /* padding */];
extern "C" extern u8 l_J_hana01_c_00DL[222 + 2 /* padding */];
extern "C" extern void* g_profile_GRASS[12];
extern "C" extern u8 lit_1107[1 + 3 /* padding */];
extern "C" extern u8 lit_1105[1 + 3 /* padding */];
extern "C" extern u8 lit_1104[1 + 3 /* padding */];
extern "C" extern u8 lit_1099[1 + 3 /* padding */];
extern "C" extern u8 lit_1097[1 + 3 /* padding */];
extern "C" extern u8 lit_1095[1 + 3 /* padding */];
extern "C" extern u8 lit_1094[1 + 3 /* padding */];
extern "C" extern u8 lit_1057[1 + 3 /* padding */];
extern "C" extern u8 lit_1055[1 + 3 /* padding */];
extern "C" extern u8 lit_1053[1 + 3 /* padding */];
extern "C" extern u8 lit_1052[1 + 3 /* padding */];
extern "C" extern u8 lit_1014[1 + 3 /* padding */];
extern "C" extern u8 lit_1012[1 + 3 /* padding */];
extern "C" extern u8 lit_1010[1 + 3 /* padding */];
extern "C" extern u8 lit_1009[1 + 3 /* padding */];
extern "C" extern u8 data_805287EC[4];
extern "C" extern u8 data_805287F0[4];
extern "C" extern u8 data_805287F4[4];
extern "C" extern u8 data_805287F8[4];
extern "C" extern u8 data_805287FC[4];
extern "C" extern u8 data_80528800[4];
extern "C" extern u8 data_80528804[4];
extern "C" extern u8 data_80528808[4];
extern "C" extern u8 data_8052880C[4];
extern "C" extern u8 data_80528810[4];
extern "C" extern u8 data_80528814[4];
extern "C" extern u8 data_80528818[4];
extern "C" extern u8 data_8052881C[4];
extern "C" extern u8 data_80528820[4];
extern "C" extern u8 data_80528824[4];
extern "C" extern u8 data_80528828[4];
extern "C" extern u8 data_8052882C[4];
extern "C" extern u8 data_80528830[4];
extern "C" extern u8 data_80528834[4];
extern "C" extern u8 data_80528838[4];
extern "C" extern u8 data_8052883C[4];
extern "C" extern u8 data_80528840[4];
extern "C" extern u8 data_80528844[4];
extern "C" extern u8 data_80528848[4];
extern "C" extern u8 data_8052884C[4];

extern "C" static void randam_addcol_set__FPs();
extern "C" void createGrass__9daGrass_cFv();
extern "C" void deleteGrass__9daGrass_cFv();
extern "C" void __dt__15dGrass_packet_cFv();
extern "C" void executeGrass__9daGrass_cFv();
extern "C" void drawGrass__9daGrass_cFv();
extern "C" void newGrassData__9daGrass_cFR4cXyziUcUcsUc();
extern "C" void createFlower__9daGrass_cFv();
extern "C" void deleteFlower__9daGrass_cFv();
extern "C" void __dt__16dFlower_packet_cFv();
extern "C" void executeFlower__9daGrass_cFv();
extern "C" void drawFlower__9daGrass_cFv();
extern "C" void newFlowerData__9daGrass_cFScR4cXyziScs();
extern "C" static void dGrass_Tex_Change__Fv();
extern "C" static void daGrass_create__FP9daGrass_c();
extern "C" void create__9daGrass_cFv();
extern "C" static void daGrass_Delete__FP9daGrass_c();
extern "C" static void daGrass_execute__FP9daGrass_c();
extern "C" static void daGrass_draw__FP9daGrass_c();
extern "C" static void func_8051D7B4();
extern "C" void __sinit_d_a_grass_cpp();
extern "C" void WorkCo__13dGrass_data_cFP10fopAc_ac_cUli();
extern "C" void WorkAt_NoCutAnim__13dGrass_data_cFP10fopAc_ac_cUliP15dCcMassS_HitInfP8cCcD_Obj();
extern "C" void
Direction_Set__13dGrass_data_cFP10fopAc_ac_cUliP15dCcMassS_HitInfP8cCcD_ObjP5csXyz();
extern "C" void WorkAt__13dGrass_data_cFP10fopAc_ac_cUliP15dCcMassS_HitInfUs();
extern "C" void __dt__5csXyzFv();
extern "C" void hitCheck__13dGrass_data_cFiUs();
extern "C" void __dt__15dCcMassS_HitInfFv();
extern "C" void newData__13dGrass_room_cFP13dGrass_data_c();
extern "C" void deleteData__13dGrass_room_cFv();
extern "C" void __ct__15dGrass_packet_cFv();
extern "C" void draw__15dGrass_packet_cFv();
extern "C" void calc__15dGrass_packet_cFv();
extern "C" void checkGroundY__FR4cXyz();
extern "C" void update__15dGrass_packet_cFv();
extern "C" void setData__15dGrass_packet_cFP13dGrass_data_ciR4cXyziUcUcsUc();
extern "C" void newData__15dGrass_packet_cFR4cXyziUcUcsUc();
extern "C" void deleteRoom__15dGrass_packet_cFi();
extern "C" void newAnm__15dGrass_packet_cFv();
extern "C" void setAnm__15dGrass_packet_cFis();
extern "C" void getSwordTopPos__9daPy_py_cCFv();
extern "C" void __ct__13dGrass_room_cFv();
extern "C" void __ct__12dGrass_anm_cFv();
extern "C" void __dt__13dGrass_data_cFv();
extern "C" void __ct__13dGrass_data_cFv();
extern "C" void WorkCo__14dFlower_data_cFP10fopAc_ac_cUli();
extern "C" void deleteAnm__14dFlower_data_cFv();
extern "C" void WorkAt_NoCutAnim__14dFlower_data_cFP10fopAc_ac_cUliP15dCcMassS_HitInfP8cCcD_Obj();
extern "C" void WorkAt__14dFlower_data_cFP10fopAc_ac_cUliP15dCcMassS_HitInf();
extern "C" void hitCheck__14dFlower_data_cFP10fopAc_ac_ci();
extern "C" void newData__14dFlower_room_cFP14dFlower_data_c();
extern "C" void deleteData__14dFlower_room_cFv();
extern "C" void __ct__16dFlower_packet_cFv();
extern "C" void draw__16dFlower_packet_cFv();
extern "C" void calc__16dFlower_packet_cFv();
extern "C" static void flowerCheckGroundY__FR4cXyz();
extern "C" void update__16dFlower_packet_cFv();
extern "C" void setData__16dFlower_packet_cFP14dFlower_data_ciScR4cXyziScs();
extern "C" void newData__16dFlower_packet_cFScR4cXyziScs();
extern "C" void deleteRoom__16dFlower_packet_cFi();
extern "C" void newAnm__16dFlower_packet_cFv();
extern "C" void setAnm__16dFlower_packet_cFis();
extern "C" void __ct__14dFlower_room_cFv();
extern "C" void __ct__13dFlower_anm_cFv();
extern "C" void __dt__14dFlower_data_cFv();
extern "C" void __ct__14dFlower_data_cFv();
extern "C" extern u32 const lit_5958;
extern "C" extern u8 const lit_5961[8];
extern "C" extern u32 const lit_6080;
extern "C" extern u32 const lit_6081;
extern "C" extern u32 const lit_6082;
extern "C" extern char const* const stringBase0;
extern "C" extern u32 lit_1787[1 + 4 /* padding */];
extern "C" extern u8 l_J_hana01_c_00DL[222 + 2 /* padding */];
extern "C" extern void* g_profile_GRASS[12];
extern "C" extern u8 lit_1107[1 + 3 /* padding */];
extern "C" extern u8 lit_1105[1 + 3 /* padding */];
extern "C" extern u8 lit_1104[1 + 3 /* padding */];
extern "C" extern u8 lit_1099[1 + 3 /* padding */];
extern "C" extern u8 lit_1097[1 + 3 /* padding */];
extern "C" extern u8 lit_1095[1 + 3 /* padding */];
extern "C" extern u8 lit_1094[1 + 3 /* padding */];
extern "C" extern u8 lit_1057[1 + 3 /* padding */];
extern "C" extern u8 lit_1055[1 + 3 /* padding */];
extern "C" extern u8 lit_1053[1 + 3 /* padding */];
extern "C" extern u8 lit_1052[1 + 3 /* padding */];
extern "C" extern u8 lit_1014[1 + 3 /* padding */];
extern "C" extern u8 lit_1012[1 + 3 /* padding */];
extern "C" extern u8 lit_1010[1 + 3 /* padding */];
extern "C" extern u8 lit_1009[1 + 3 /* padding */];
extern "C" extern u8 data_805287EC[4];
extern "C" extern u8 data_805287F0[4];
extern "C" extern u8 data_805287F4[4];
extern "C" extern u8 data_805287F8[4];
extern "C" extern u8 data_805287FC[4];
extern "C" extern u8 data_80528800[4];
extern "C" extern u8 data_80528804[4];
extern "C" extern u8 data_80528808[4];
extern "C" extern u8 data_8052880C[4];
extern "C" extern u8 data_80528810[4];
extern "C" extern u8 data_80528814[4];
extern "C" extern u8 data_80528818[4];
extern "C" extern u8 data_8052881C[4];
extern "C" extern u8 data_80528820[4];
extern "C" extern u8 data_80528824[4];
extern "C" extern u8 data_80528828[4];
extern "C" extern u8 data_8052882C[4];
extern "C" extern u8 data_80528830[4];
extern "C" extern u8 data_80528834[4];
extern "C" extern u8 data_80528838[4];
extern "C" extern u8 data_8052883C[4];
extern "C" extern u8 data_80528840[4];
extern "C" extern u8 data_80528844[4];
extern "C" extern u8 data_80528848[4];
extern "C" extern u8 data_8052884C[4];

//
// External References:
//

void mDoMtx_XrotM(f32 (*)[4], s16);
void mDoMtx_YrotS(f32 (*)[4], s16);
void mDoMtx_YrotM(f32 (*)[4], s16);
void mDoMtx_ZrotM(f32 (*)[4], s16);
void fopAcM_setStageLayer(void*);
void fopAcM_createItemFromTable(cXyz const*, int, int, int, csXyz const*, int, cXyz const*, f32*,
                                f32*, bool);
void fopOvlpM_IsPeek();
void dComIfGp_getReverb(int);
void dComIfGs_Grass_hide_Set(s8);
void dKyw_get_wind_vec();
void dKyw_get_wind_pow();
void dCcD_GetGObjInf(cCcD_Obj*);
void dKy_setLight_nowroom_grass(char, f32);
void dKy_setLight_again();
void dKy_Global_amb_set(dKy_tevstr_c*);
void dKy_GxFog_tevstr_set(dKy_tevstr_c*);
void dKy_GfFog_tevstr_set(dKy_tevstr_c*);
void dKy_get_dayofweek();
void dKy_SunMoon_Light_Check();
void cM_atan2s(f32, f32);
void cM_rnd();
void cM_rndF(f32);
void cLib_addCalcAngleS(s16*, s16, s16, s16, s16);
void cLib_chaseAngleS(s16*, s16, s16);
void GFSetTevColorS10(_GXTevRegID, _GXColorS10);
void* operator new(u32);
void operator delete(void*);
extern "C" extern void* g_fopAc_Method[8];
extern "C" extern void* g_fpcLf_Method[5 + 1 /* padding */];
extern "C" extern void* __vt__9J3DPacket[5];
extern "C" extern u8 now__14mDoMtx_stack_c[48];
extern "C" extern u8 mClipper__14mDoLib_clipper[92];
extern "C" extern u8 mStatus__20dStage_roomControl_c[65792];
extern "C" extern u8 g_dComIfG_gameInfo[122384];
extern "C" extern u8 m_deleteRoom__15dGrass_packet_c[12];
extern "C" extern u8 m_deleteRoom__16dFlower_packet_c[12];
extern "C" extern u8 g_env_light[4880];
extern "C" extern u8 g_Counter[12 + 4 /* padding */];
extern "C" extern u8 j3dSys[284];
extern "C" extern u8 sincosTable___5JMath[65536];
extern "C" extern u32 __float_nan;
extern "C" extern f32 mSystemFar__14mDoLib_clipper;
extern "C" extern f32 mGroundY__11fopAcM_gc_c;
extern "C" extern u8 struct_80450D64[4];
extern "C" extern u8 m_myObj__9daGrass_c[4];
extern "C" extern u8 m_grass__9daGrass_c[4];
extern "C" extern u8 m_flower__9daGrass_c[4];
extern "C" extern u8 mLight8EcallBack__13dPa_control_c[4];
extern "C" extern f32 G_CM3D_F_ABS_MIN[1 + 1 /* padding */];
extern "C" extern u8 mAudioMgrPtr__10Z2AudioMgr[4 + 4 /* padding */];
extern "C" extern u8 sOldVcdVatCmd__8J3DShape[4];

extern "C" void mDoMtx_XrotM__FPA4_fs();
extern "C" void mDoMtx_YrotS__FPA4_fs();
extern "C" void mDoMtx_YrotM__FPA4_fs();
extern "C" void mDoMtx_ZrotM__FPA4_fs();
extern "C" void scaleM__14mDoMtx_stack_cFfff();
extern "C" void __ct__10fopAc_ac_cFv();
extern "C" void fopAcM_setStageLayer__FPv();
extern "C" void fopAcM_createItemFromTable__FPC4cXyziiiPC5csXyziPC4cXyzPfPfb();
extern "C" void gndCheck__11fopAcM_gc_cFPC4cXyz();
extern "C" void fopOvlpM_IsPeek__Fv();
extern "C" void getStatusRoomDt__20dStage_roomControl_cFi();
extern "C" void dComIfGp_getReverb__Fi();
extern "C" void dComIfGs_Grass_hide_Set__FSc();
extern "C" void
set__13dPa_control_cFUcUsPC4cXyzPC12dKy_tevstr_cPC5csXyzPC4cXyzUcP18dPa_levelEcallBackScPC8_GXColorPC8_GXColorPC4cXyzf();
extern "C" void dKyw_get_wind_vec__Fv();
extern "C" void dKyw_get_wind_pow__Fv();
extern "C" void GroundCross__4cBgSFP11cBgS_GndChk();
extern "C" void __ct__11dBgS_GndChkFv();
extern "C" void __dt__11dBgS_GndChkFv();
extern "C" void dCcD_GetGObjInf__FP8cCcD_Obj();
extern "C" void SetAttr__12dCcMassS_MngFffUcUc();
extern "C" void Prepare__12dCcMassS_MngFv();
extern "C" void Chk__12dCcMassS_MngFP4cXyzPP10fopAc_ac_cP15dCcMassS_HitInf();
extern "C" void MassClear__4dCcSFv();
extern "C" void checkNowWolfEyeUp__9daPy_py_cFv();
extern "C" void getDaytime__18dScnKy_env_light_cFv();
extern "C" void dKy_setLight_nowroom_grass__Fcf();
extern "C" void dKy_setLight_again__Fv();
extern "C" void dKy_Global_amb_set__FP12dKy_tevstr_c();
extern "C" void dKy_GxFog_tevstr_set__FP12dKy_tevstr_c();
extern "C" void dKy_GfFog_tevstr_set__FP12dKy_tevstr_c();
extern "C" void dKy_get_dayofweek__Fv();
extern "C" void dKy_SunMoon_Light_Check__Fv();
extern "C" void __mi__4cXyzCFRC3Vec();
extern "C" void __ct__5csXyzFsss();
extern "C" void cM_atan2s__Fff();
extern "C" void cM_rnd__Fv();
extern "C" void cM_rndF__Ff();
extern "C" void SetPos__11cBgS_GndChkFPC4cXyz();
extern "C" void cLib_addCalcAngleS__FPsssss();
extern "C" void cLib_chaseAngleS__FPsss();
extern "C" void calcViewFrustum__11J3DUClipperFv();
extern "C" void clip__11J3DUClipperCFPA4_Cf3Vecf();
extern "C" void seStart__7Z2SeMgrF10JAISoundIDPC3VecUlScffffUc();
extern "C" void GFSetTevColorS10__F11_GXTevRegID11_GXColorS10();
extern "C" void* __nw__FUl();
extern "C" void __dl__FPv();
extern "C" void reinitGX__6J3DSysFv();
extern "C" bool entry__9J3DPacketFP13J3DDrawBuffer();
extern "C" void entryImm__13J3DDrawBufferFP9J3DPacketUs();
extern "C" void PSMTXCopy();
extern "C" void PSMTXConcat();
extern "C" void PSMTXTrans();
extern "C" void PSVECScale();
extern "C" void PSVECSquareMag();
extern "C" void PSVECSquareDistance();
extern "C" void GXSetVtxDesc();
extern "C" void GXSetVtxDescv();
extern "C" void GXClearVtxDesc();
extern "C" void GXSetVtxAttrFmt();
extern "C" void GXSetVtxAttrFmtv();
extern "C" void GXSetArray();
extern "C" void GXSetChanAmbColor();
extern "C" void GXSetNumIndStages();
extern "C" void GXSetTevColorS10();
extern "C" void GXCallDisplayList();
extern "C" void GXLoadPosMtxImm();
extern "C" void GXLoadNrmMtxImm();
extern "C" void __destroy_arr();
extern "C" void __construct_array();
extern "C" void _savegpr_18();
extern "C" void _savegpr_20();
extern "C" void _savegpr_22();
extern "C" void _savegpr_23();
extern "C" void _savegpr_25();
extern "C" void _savegpr_27();
extern "C" void _savegpr_28();
extern "C" void _savegpr_29();
extern "C" void _restgpr_18();
extern "C" void _restgpr_20();
extern "C" void _restgpr_22();
extern "C" void _restgpr_23();
extern "C" void _restgpr_25();
extern "C" void _restgpr_27();
extern "C" void _restgpr_28();
extern "C" void _restgpr_29();
extern "C" void memcmp();
extern "C" void strcmp();
extern "C" extern void* g_fopAc_Method[8];
extern "C" extern void* g_fpcLf_Method[5 + 1 /* padding */];
extern "C" extern void* __vt__9J3DPacket[5];
extern "C" extern u8 now__14mDoMtx_stack_c[48];
extern "C" extern u8 mClipper__14mDoLib_clipper[92];
extern "C" extern u8 mStatus__20dStage_roomControl_c[65792];
extern "C" extern u8 g_dComIfG_gameInfo[122384];
extern "C" extern u8 m_deleteRoom__15dGrass_packet_c[12];
extern "C" extern u8 m_deleteRoom__16dFlower_packet_c[12];
extern "C" extern u8 g_env_light[4880];
extern "C" extern u8 g_Counter[12 + 4 /* padding */];
extern "C" extern u8 j3dSys[284];
extern "C" extern u8 sincosTable___5JMath[65536];
extern "C" extern u32 __float_nan;
extern "C" extern f32 mSystemFar__14mDoLib_clipper;
extern "C" extern f32 mGroundY__11fopAcM_gc_c;
extern "C" extern u8 struct_80450D64[4];
extern "C" extern u8 m_myObj__9daGrass_c[4];
extern "C" extern u8 m_grass__9daGrass_c[4];
extern "C" extern u8 m_flower__9daGrass_c[4];
extern "C" extern u8 mLight8EcallBack__13dPa_control_c[4];
extern "C" extern f32 G_CM3D_F_ABS_MIN[1 + 1 /* padding */];
extern "C" extern u8 mAudioMgrPtr__10Z2AudioMgr[4 + 4 /* padding */];
extern "C" extern u8 sOldVcdVatCmd__8J3DShape[4];
extern "C" void __register_global_object();

//
// Declarations:
//

/* ############################################################################################## */
/* 80523028-8052302C 0004+00 s=14 e=0 z=0  None .rodata    @3999 */
SECTION_RODATA static u32 const lit_3999 = 0x3F19999A;

/* 8052302C-80523030 0004+00 s=10 e=0 z=0  None .rodata    @4000 */
SECTION_RODATA static u8 const lit_4000[4] = {
    0x00,
    0x00,
    0x00,
    0x00,
};

/* 80523030-80523034 0004+00 s=1 e=0 z=0  None .rodata    @4001 */
SECTION_RODATA static u32 const lit_4001 = 0x44C80000;

/* 80523034-80523038 0004+00 s=5 e=0 z=0  None .rodata    @4002 */
SECTION_RODATA static u32 const lit_4002 = 0x42200000;

/* 80523038-8052303C 0004+00 s=2 e=0 z=0  None .rodata    @4003 */
SECTION_RODATA static u32 const lit_4003 = 0x42820000;

/* 8052303C-80523040 0004+00 s=3 e=0 z=0  None .rodata    @4148 */
SECTION_RODATA static u32 const lit_4148 = 0x40A00000;

/* 80523040-80523044 0004+00 s=2 e=0 z=0  None .rodata    @4149 */
SECTION_RODATA static u32 const lit_4149 = 0x3F666666;

/* 80523044-80523048 0004+00 s=3 e=0 z=0  None .rodata    @4150 */
SECTION_RODATA static u32 const lit_4150 = 0x3E4CCCCD;

/* 80523048-8052304C 0004+00 s=1 e=0 z=0  None .rodata    @4151 */
SECTION_RODATA static u32 const lit_4151 = 0x40200000;

/* 8052304C-80523050 0004+00 s=3 e=0 z=0  None .rodata    @4152 */
SECTION_RODATA static u32 const lit_4152 = 0x3F000000;

/* 80523050-80523054 0004+00 s=1 e=0 z=0  None .rodata    @4153 */
SECTION_RODATA static u32 const lit_4153 = 0x3FC00000;

/* 80523054-80523058 0004+00 s=1 e=0 z=0  None .rodata    @4154 */
SECTION_RODATA static u32 const lit_4154 = 0x3D4CCCCD;

/* 80523058-8052305C 0004+00 s=1 e=0 z=0  None .rodata    @4155 */
SECTION_RODATA static u32 const lit_4155 = 0x41A00000;

/* 8052305C-80523060 0004+00 s=3 e=0 z=0  None .rodata    @4156 */
SECTION_RODATA static u32 const lit_4156 = 0x3E99999A;

/* 80523060-80523068 0008+00 s=9 e=0 z=0  None .rodata    @4158 */
SECTION_RODATA static u8 const lit_4158[8] = {
    0x43, 0x30, 0x00, 0x00, 0x80, 0x00, 0x00, 0x00,
};

/* 80523068-80523070 0008+00 s=2 e=0 z=0  None .rodata    @4509 */
SECTION_RODATA static u8 const lit_4509[8] = {
    0x3F, 0xE0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
};

/* 80523070-80523078 0008+00 s=2 e=0 z=0  None .rodata    @4510 */
SECTION_RODATA static u8 const lit_4510[8] = {
    0x40, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
};

/* 80523078-80523080 0008+00 s=2 e=0 z=0  None .rodata    @4511 */
SECTION_RODATA static u8 const lit_4511[8] = {
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
};

/* 80523080-80523084 0004+00 s=2 e=0 z=0  None .rodata    @4512 */
SECTION_RODATA static u32 const lit_4512 = 0x43480000;

/* 80523084-80523088 0004+00 s=1 e=0 z=0  None .rodata    @4513 */
SECTION_RODATA static u32 const lit_4513 = 0x431E0000;

/* 80523088-8052308C 0004+00 s=2 e=0 z=0  None .rodata    @4514 */
SECTION_RODATA static u32 const lit_4514 = 0x43FA0000;

/* 8052308C-80523090 0004+00 s=3 e=0 z=0  None .rodata    @4515 */
SECTION_RODATA static u32 const lit_4515 = 0x41C80000;

/* 80523090-80523094 0004+00 s=8 e=0 z=0  None .rodata    @4516 */
SECTION_RODATA static u32 const lit_4516 = 0x3F800000;

/* 80523094-80523098 0004+00 s=3 e=0 z=0  None .rodata    @4517 */
SECTION_RODATA static u32 const lit_4517 = 0xBF800000;

/* 80523098-8052309C 0004+00 s=3 e=0 z=0  None .rodata    @4600 */
SECTION_RODATA static u32 const lit_4600 = 0x41700000;

/* 8052309C-805230A4 0008+00 s=1 e=0 z=0  None .rodata    @4656 */
SECTION_RODATA static u8 const lit_4656[8] = {
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
};

/* 805230A4-805230AC 0008+00 s=1 e=0 z=0  None .rodata    @4657 */
SECTION_RODATA static u8 const lit_4657[8] = {
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
};

/* 805230AC-805230B0 0004+00 s=1 e=0 z=0  None .rodata    @4835 */
SECTION_RODATA static u32 const lit_4835 = 0x42B40000;

/* 805230B0-805230B4 0004+00 s=1 e=0 z=0  None .rodata    @4836 */
SECTION_RODATA static u32 const lit_4836 = 0x43070000;

/* 805230B4-805230B8 0004+00 s=1 e=0 z=0  None .rodata    @4837 */
SECTION_RODATA static u32 const lit_4837 = 0x3CB60B61;

/* 805230B8-805230BC 0004+00 s=2 e=0 z=0  None .rodata    @4838 */
SECTION_RODATA static u32 const lit_4838 = 0x42C80000;

/* 805230BC-805230C0 0004+00 s=1 e=0 z=0  None .rodata    @4839 */
SECTION_RODATA static u32 const lit_4839 = 0x41900000;

/* 805230C0-805230C4 0004+00 s=1 e=0 z=0  None .rodata    @4840 */
SECTION_RODATA static u32 const lit_4840 = 0x43610000;

/* 805230C4-805230C8 0004+00 s=1 e=0 z=0  None .rodata    @4841 */
SECTION_RODATA static u32 const lit_4841 = 0x3C360B61;

/* 805230C8-805230CC 0004+00 s=1 e=0 z=0  None .rodata    @4842 */
SECTION_RODATA static u32 const lit_4842 = 0x42A40000;

/* 805230CC-805230D0 0004+00 s=1 e=0 z=0  None .rodata    @4843 */
SECTION_RODATA static u32 const lit_4843 = 0x43870000;

/* 805230D0-805230D4 0004+00 s=1 e=0 z=0  None .rodata    @4844 */
SECTION_RODATA static u32 const lit_4844 = 0x42640000;

/* 805230D4-805230D8 0004+00 s=1 e=0 z=0  None .rodata    @4845 */
SECTION_RODATA static u32 const lit_4845 = 0xC1C80000;

/* 805230D8-805230DC 0004+00 s=1 e=0 z=0  None .rodata    @4846 */
SECTION_RODATA static u32 const lit_4846 = 0x439D8000;

/* 805230DC-805230E0 0004+00 s=1 e=0 z=0  None .rodata    @4847 */
SECTION_RODATA static u32 const lit_4847 = 0xC1900000;

/* 805230E0-805230E4 0004+00 s=2 e=0 z=0  None .rodata    @4848 */
SECTION_RODATA static u32 const lit_4848 = 0x437F0000;

/* 805230E4-805230E8 0004+00 s=2 e=0 z=0  None .rodata    @4849 */
SECTION_RODATA static u32 const lit_4849 = 0x40800000;

/* 805230E8-805230EC 0004+00 s=1 e=0 z=0  None .rodata    @4850 */
SECTION_RODATA static u32 const lit_4850 = 0x3B000000;

/* 805230EC-805230F0 0004+00 s=1 e=0 z=0  None .rodata    @4851 */
SECTION_RODATA static u32 const lit_4851 = 0x3F8CCCCD;

/* 805230F0-805230F8 0004+04 s=2 e=0 z=0  None .rodata    @4852 */
SECTION_RODATA static u32 const lit_4852[1 + 1 /* padding */] = {
    0x44FA0000,
    /* padding */
    0x00000000,
};

/* 805230F8-80523100 0008+00 s=2 e=0 z=0  None .rodata    @4854 */
SECTION_RODATA static u8 const lit_4854[8] = {
    0x43, 0x30, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
};

/* 80523100-80523104 0004+00 s=1 e=0 z=0  None .rodata    @4996 */
SECTION_RODATA static u32 const lit_4996 = 0x3DB851EC;

/* 80523104-80523108 0004+00 s=1 e=0 z=0  None .rodata    @4997 */
SECTION_RODATA static u32 const lit_4997 = 0x3C23D70A;

/* 80523108-8052310C 0004+00 s=1 e=0 z=0  None .rodata    @4998 */
SECTION_RODATA static u32 const lit_4998 = 0x43910000;

/* 8052310C-80523110 0004+00 s=2 e=0 z=0  None .rodata    @4999 */
SECTION_RODATA static u32 const lit_4999 = 0x40000000;

/* 80523110-80523114 0004+00 s=1 e=0 z=0  None .rodata    @5000 */
SECTION_RODATA static u32 const lit_5000 = 0x44034000;

/* 80523114-80523118 0004+00 s=1 e=0 z=0  None .rodata    @5001 */
SECTION_RODATA static u32 const lit_5001 = 0x43A28000;

/* 80523118-8052311C 0004+00 s=3 e=0 z=0  None .rodata    @5002 */
SECTION_RODATA static u32 const lit_5002 = 0x3F333333;

/* 8052311C-80523120 0004+00 s=1 e=0 z=0  None .rodata    @5003 */
SECTION_RODATA static u32 const lit_5003 = 0x3D800000;

/* 80523120-80523124 0004+00 s=1 e=0 z=0  None .rodata    @5004 */
SECTION_RODATA static u32 const lit_5004 = 0xBE4CCCCD;

/* 80523124-80523128 0004+00 s=2 e=0 z=0  None .rodata    @5005 */
SECTION_RODATA static u32 const lit_5005 = 0x41200000;

/* 80523128-8052312C 0004+00 s=1 e=0 z=0  None .rodata    @5006 */
SECTION_RODATA static u32 const lit_5006 = 0x3FCCCCCD;

/* 8052312C-80523130 0004+00 s=1 e=0 z=0  None .rodata    @5007 */
SECTION_RODATA static u32 const lit_5007 = 0x42F00000;

/* 80523130-80523134 0004+00 s=3 e=0 z=0  None .rodata    @5022 */
SECTION_RODATA static u32 const lit_5022 = 0x42480000;

/* 80523134-80523138 0004+00 s=1 e=0 z=0  None .rodata    @5142 */
SECTION_RODATA static u32 const lit_5142 = 0x3FD1745D;

/* 80523138-8052313C 0004+00 s=2 e=0 z=0  None .rodata    @5143 */
SECTION_RODATA static u32 const lit_5143 = 0x43820000;

/* 8052313C-80523140 0004+00 s=2 e=0 z=0  None .rodata    @5144 */
SECTION_RODATA static u32 const lit_5144 = 0x45800000;

/* 80523140-80523144 0004+00 s=1 e=0 z=0  None .rodata    @5145 */
SECTION_RODATA static u32 const lit_5145 = 0x3ECCCCCC;

/* 80523144-80523148 0004+00 s=2 e=0 z=0  None .rodata    @5146 */
SECTION_RODATA static u32 const lit_5146 = 0x3F4CCCCD;

/* 80523148-8052314C 0004+00 s=1 e=0 z=0  None .rodata    @5147 */
SECTION_RODATA static u32 const lit_5147 = 0x3E6147AE;

/* 8052314C-80523150 0004+00 s=1 e=0 z=0  None .rodata    @5148 */
SECTION_RODATA static u32 const lit_5148 = 0x43220000;

/* 80523150-80523154 0004+00 s=1 e=0 z=0  None .rodata    @5149 */
SECTION_RODATA static u32 const lit_5149 = 0x3F23D70A;

/* 80523154-80523158 0004+00 s=1 e=0 z=0  None .rodata    @5150 */
SECTION_RODATA static u32 const lit_5150 = 0x3DCCCCCD;

/* 80523158-8052315C 0004+00 s=1 e=0 z=0  None .rodata    @5151 */
SECTION_RODATA static u32 const lit_5151 = 0x45480000;

/* 8052315C-80523160 0004+00 s=1 e=0 z=0  None .rodata    @5261 */
SECTION_RODATA static u32 const lit_5261 = 0x44610000;

/* 80523160-80523164 0004+00 s=2 e=0 z=0  None .rodata    @5262 */
SECTION_RODATA static u32 const lit_5262 = 0x41F00000;

/* 80523164-80523168 0004+00 s=1 e=0 z=0  None .rodata    @5352 */
SECTION_RODATA static u32 const lit_5352 = 0x435C0000;

/* 80523168-8052316C 0004+00 s=1 e=0 z=0  None .rodata    @5781 */
SECTION_RODATA static u32 const lit_5781 = 0x43340000;

/* 8052316C-80523170 0004+00 s=1 e=0 z=0  None .rodata    @5782 */
SECTION_RODATA static u32 const lit_5782 = 0x43000000;

/* 80523170-80523174 0004+00 s=1 e=0 z=0  None .rodata    @5783 */
SECTION_RODATA static u32 const lit_5783 = 0x43160000;

/* 80523174-80523178 0004+00 s=1 e=0 z=0  None .rodata    @5784 */
SECTION_RODATA static u32 const lit_5784 = 0x42A00000;

/* 80523178-8052317C 0004+00 s=1 e=0 z=0  None .rodata    @5839 */
SECTION_RODATA static u32 const lit_5839 = 0x42700000;

/* 8052317C-80523184 0008+00 s=1 e=0 z=0  None .rodata    @5916 */
SECTION_RODATA static u8 const lit_5916[8] = {
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
};

/* 80523184-80523188 0004+00 s=0 e=0 z=0  None .rodata    @5958 */
SECTION_RODATA u32 const lit_5958 = 0xFFFFFFFF;

/* 80523188-80523190 0008+00 s=0 e=0 z=0  None .rodata    @5961 */
SECTION_RODATA u8 const lit_5961[8] = {
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
};

/* 80523190-80523194 0004+00 s=0 e=0 z=0  None .rodata    @6080 */
SECTION_RODATA u32 const lit_6080 = 0x3D000000;

/* 80523194-80523198 0004+00 s=0 e=0 z=0  None .rodata    @6081 */
SECTION_RODATA u32 const lit_6081 = 0xBECCCCCD;

/* 80523198-8052319C 0004+00 s=0 e=0 z=0  None .rodata    @6082 */
SECTION_RODATA u32 const lit_6082 = 0x40C00000;

/* 8052319C-805231A0 0004+00 s=1 e=0 z=0  None .rodata    @6165 */
SECTION_RODATA static u32 const lit_6165 = 0x447A0000;

/* 805231A0-805231A4 0004+00 s=1 e=0 z=0  None .rodata    @6166 */
SECTION_RODATA static u32 const lit_6166 = 0x43200000;

/* 805231A4-805231A8 0004+00 s=1 e=0 z=0  None .rodata    @6182 */
SECTION_RODATA static u32 const lit_6182 = 0xCE6E6B28;

/* 805231A8-805231AC 0004+00 s=1 e=0 z=0  None .rodata    @6262 */
SECTION_RODATA static u32 const lit_6262 = 0x40E00000;

/* 805231AC-805231B0 0004+00 s=1 e=0 z=0  None .rodata    @6337 */
SECTION_RODATA static u32 const lit_6337 = 0x41F80000;

/* 8051BD4C-8051BEFC 01B0+00 s=1 e=0 z=0  None .text      randam_addcol_set__FPs */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm static void randam_addcol_set(s16* param_0) {
    nofralloc
#include "asm/rel/d/a/d_a_grass/d_a_grass/randam_addcol_set__FPs.s"
}
#pragma pop

/* 8051BEFC-8051BF68 006C+00 s=1 e=0 z=0  None .text      createGrass__9daGrass_cFv */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void daGrass_c::createGrass() {
    nofralloc
#include "asm/rel/d/a/d_a_grass/d_a_grass/createGrass__9daGrass_cFv.s"
}
#pragma pop

/* 8051BF68-8051BFBC 0054+00 s=1 e=0 z=0  None .text      deleteGrass__9daGrass_cFv */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void daGrass_c::deleteGrass() {
    nofralloc
#include "asm/rel/d/a/d_a_grass/d_a_grass/deleteGrass__9daGrass_cFv.s"
}
#pragma pop

/* ############################################################################################## */
/* 80528854-80528880 002C+00 s=2 e=0 z=0  None .bss       None */
extern "C" u8 struct_80528854[44];

/* 80528880-80528900 0080+00 s=2 e=0 z=0  None .bss       None */
extern "C" u8 struct_80528880[128];

/* 80528900-80528914 0014+00 s=2 e=0 z=0  None .bss       None */
extern "C" u8 struct_80528900[20];

/* 80528914-80528940 002C+00 s=2 e=0 z=0  None .bss       None */
extern "C" u8 struct_80528914[44];

/* 80528940-805289A8 0068+00 s=2 e=0 z=0  None .bss       None */
extern "C" u8 struct_80528940[104];

/* 805289A8-805289D2 002A+00 s=2 e=0 z=0  None .bss l_setType5$localstatic13$create__9daGrass_cFv
 */
extern "C" u8 data_805289A8[42];

/* 805231D8-805231E4 000C+00 s=5 e=0 z=0  None .data      cNullVec__6Z2Calc */
SECTION_DATA static u8 cNullVec__6Z2Calc[12] = {
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
};

/* 805231E4-805231F8 0004+10 s=0 e=0 z=0  None .data      @1787 */
SECTION_DATA u32 lit_1787[1 + 4 /* padding */] = {
    0x02000201,
    /* padding */
    0x40080000,
    0x00000000,
    0x3FE00000,
    0x00000000,
};

/* 805231F8-805239F8 0800+00 s=1 e=0 z=0  None .data      l_M_kusa05_RGBATEX */
SECTION_DATA static u8 l_M_kusa05_RGBATEX[2048] = {
    0x06, 0x73, 0x06, 0x73, 0x07, 0x74, 0x06, 0x73, 0x06, 0x63, 0x06, 0x63, 0x07, 0x73, 0x06, 0x73,
    0x06, 0x63, 0x06, 0x63, 0x07, 0x73, 0x06, 0x63, 0x06, 0x63, 0x06, 0x63, 0x06, 0x73, 0x06, 0x63,
    0x06, 0x74, 0x07, 0x84, 0x07, 0x84, 0x07, 0x84, 0x06, 0x74, 0x07, 0x74, 0x07, 0x84, 0x07, 0x74,
    0x06, 0x73, 0x07, 0x74, 0x07, 0x74, 0x07, 0x74, 0x06, 0x73, 0x07, 0x74, 0x07, 0x74, 0x07, 0x74,
    0x08, 0x85, 0x07, 0x74, 0x07, 0x74, 0x06, 0x64, 0x07, 0x85, 0x07, 0x74, 0x07, 0x74, 0x06, 0x64,
    0x07, 0x85, 0x07, 0x74, 0x07, 0x74, 0x06, 0x64, 0x07, 0x74, 0x07, 0x74, 0x07, 0x64, 0x06, 0x64,
    0x06, 0x63, 0x06, 0x64, 0x07, 0x74, 0x07, 0x75, 0x16, 0x63, 0x16, 0x64, 0x07, 0x74, 0x07, 0x75,
    0x16, 0x63, 0x36, 0x64, 0x17, 0x74, 0x07, 0x75, 0x26, 0x63, 0x46, 0x64, 0x27, 0x74, 0x08, 0x75,
    0x08, 0x75, 0x08, 0x85, 0x08, 0x85, 0x08, 0x85, 0x08, 0x75, 0x08, 0x75, 0x08, 0x85, 0x08, 0x85,
    0x08, 0x85, 0x08, 0x85, 0x08, 0x85, 0x08, 0x85, 0x08, 0x85, 0x08, 0x85, 0x09, 0x85, 0x08, 0x85,
    0x08, 0x74, 0x08, 0x74, 0x07, 0x74, 0x08, 0x75, 0x08, 0x74, 0x08, 0x75, 0x08, 0x74, 0x08, 0x75,
    0x08, 0x74, 0x08, 0x75, 0x08, 0x74, 0x08, 0x85, 0x08, 0x74, 0x08, 0x85, 0x08, 0x75, 0x08, 0x85,
    0x08, 0x75, 0x07, 0x75, 0x07, 0x75, 0x08, 0x75, 0x08, 0x85, 0x08, 0x75, 0x07, 0x75, 0x08, 0x75,
    0x08, 0x85, 0x08, 0x75, 0x08, 0x75, 0x08, 0x85, 0x48, 0x85, 0x28, 0x85, 0x08, 0x85, 0x08, 0x85,
    0x08, 0x75, 0x07, 0x74, 0x08, 0x75, 0x07, 0x75, 0x08, 0x75, 0x07, 0x75, 0x08, 0x75, 0x07, 0x75,
    0x08, 0x75, 0x08, 0x75, 0x08, 0x85, 0x07, 0x75, 0x08, 0x85, 0x08, 0x75, 0x08, 0x85, 0x07, 0x75,
    0x06, 0x63, 0x06, 0x63, 0x06, 0x73, 0x06, 0x63, 0x06, 0x63, 0x06, 0x63, 0x06, 0x63, 0x06, 0x63,
    0x06, 0x64, 0x06, 0x63, 0x06, 0x63, 0x06, 0x73, 0x06, 0x64, 0x06, 0x63, 0x06, 0x64, 0x06, 0x74,
    0x06, 0x63, 0x07, 0x74, 0x07, 0x74, 0x07, 0x74, 0x06, 0x63, 0x07, 0x74, 0x07, 0x74, 0x07, 0x74,
    0x06, 0x63, 0x06, 0x74, 0x07, 0x74, 0x17, 0x74, 0x06, 0x64, 0x06, 0x74, 0x07, 0x74, 0x27, 0x74,
    0x07, 0x74, 0x07, 0x74, 0x07, 0x74, 0x06, 0x64, 0x17, 0x74, 0x07, 0x74, 0x07, 0x74, 0x06, 0x64,
    0x27, 0x74, 0x07, 0x74, 0x07, 0x74, 0x06, 0x64, 0x37, 0x74, 0x07, 0x74, 0x07, 0x74, 0x17, 0x64,
    0x36, 0x63, 0x66, 0x64, 0x37, 0x64, 0x08, 0x75, 0x56, 0x63, 0x76, 0x64, 0x47, 0x64, 0x08, 0x75,
    0x66, 0x64, 0xB9, 0xA9, 0x47, 0x64, 0x08, 0x75, 0x66, 0x64, 0xB9, 0xA9, 0x57, 0x74, 0x08, 0x75,
    0x08, 0x85, 0x18, 0x85, 0x09, 0x85, 0x08, 0x85, 0x18, 0x85, 0x28, 0x85, 0x19, 0x85, 0x08, 0x85,
    0x28, 0x85, 0x49, 0x85, 0x29, 0x86, 0x08, 0x85, 0x38, 0x85, 0x59, 0x85, 0x39, 0x86, 0x08, 0x85,
    0x08, 0x75, 0x08, 0x85, 0x18, 0x85, 0x58, 0x85, 0x08, 0x75, 0x18, 0x85, 0x58, 0x85, 0x58, 0x85,
    0x08, 0x75, 0x48, 0x85, 0x68, 0x85, 0x38, 0x85, 0x18, 0x85, 0x68, 0x85, 0x58, 0x85, 0x38, 0x85,
    0x48, 0x85, 0x08, 0x85, 0x08, 0x85, 0x08, 0x85, 0x18, 0x85, 0x08, 0x85, 0x08, 0x85, 0x08, 0x85,
    0x08, 0x85, 0x08, 0x85, 0x08, 0x85, 0x08, 0x85, 0x18, 0x85, 0x08, 0x85, 0x08, 0x85, 0x08, 0x85,
    0x08, 0x85, 0x08, 0x85, 0x08, 0x85, 0x08, 0x75, 0x08, 0x85, 0x08, 0x85, 0x08, 0x85, 0x08, 0x75,
    0x08, 0x85, 0x08, 0x85, 0x08, 0x85, 0x08, 0x85, 0x08, 0x85, 0x08, 0x86, 0x08, 0x85, 0x08, 0x85,
    0x07, 0x74, 0x06, 0x64, 0x06, 0x64, 0x06, 0x74, 0x07, 0x74, 0x07, 0x74, 0x07, 0x74, 0x06, 0x64,
    0x07, 0x74, 0x07, 0x74, 0x07, 0x74, 0x06, 0x64, 0x07, 0x74, 0x07, 0x74, 0x07, 0x74, 0x06, 0x64,
    0x06, 0x64, 0x07, 0x74, 0x07, 0x74, 0x37, 0x74, 0x06, 0x64, 0x07, 0x74, 0x07, 0x74, 0x47, 0x74,
    0x06, 0x64, 0x07, 0x74, 0x07, 0x74, 0x57, 0x74, 0x06, 0x64, 0x07, 0x74, 0x07, 0x74, 0x67, 0x75,
    0x47, 0x74, 0x37, 0x74, 0x17, 0x74, 0x17, 0x64, 0x67, 0x74, 0x27, 0x75, 0x57, 0x74, 0x47, 0x64,
    0x77, 0x75, 0x17, 0x74, 0x17, 0x74, 0x67, 0x64, 0x77, 0x75, 0x27, 0x75, 0x07, 0x74, 0x47, 0x64,
    0x76, 0x64, 0xB9, 0xC9, 0x57, 0x74, 0x08, 0x75, 0x76, 0x64, 0x77, 0x74, 0x57, 0x74, 0x08, 0x75,
    0x76, 0x64, 0xB9, 0xC9, 0x57, 0x74, 0x07, 0x74, 0x76, 0x64, 0xB9, 0xC9, 0x67, 0x74, 0x17, 0x74,
    0x48, 0x85, 0x78, 0x85, 0x49, 0x86, 0x08, 0x85, 0x58, 0x85, 0xC6, 0x2B, 0x59, 0x85, 0x28, 0x85,
    0x58, 0x85, 0xC6, 0x2B, 0x59, 0x85, 0x38, 0x85, 0x58, 0x85, 0xC6, 0x2B, 0x58, 0x85, 0x38, 0x85,
    0x38, 0x85, 0x68, 0x85, 0x49, 0x86, 0x49, 0x85, 0x68, 0x85, 0x58, 0x85, 0x39, 0x86, 0x59, 0x85,
    0x78, 0x85, 0x48, 0x85, 0x49, 0x86, 0x69, 0x85, 0x78, 0x85, 0x28, 0x75, 0x48, 0x85, 0x78, 0x85,
    0x18, 0x85, 0x09, 0x86, 0x08, 0x85, 0x08, 0x85, 0x28, 0x85, 0x09, 0x85, 0x08, 0x85, 0x08, 0x85,
    0x38, 0x85, 0x08, 0x85, 0x08, 0x85, 0x08, 0x85, 0x38, 0x85, 0x08, 0x85, 0x08, 0x85, 0x08, 0x85,
    0x08, 0x85, 0x08, 0x86, 0x08, 0x85, 0x08, 0x85, 0x08, 0x85, 0x08, 0x85, 0x08, 0x85, 0x08, 0x85,
    0x08, 0x85, 0x08, 0x85, 0x08, 0x85, 0x08, 0x85, 0x38, 0x85, 0x18, 0x85, 0x08, 0x85, 0x08, 0x85,
    0x07, 0x74, 0x07, 0x74, 0x07, 0x74, 0x07, 0x64, 0x07, 0x74, 0x07, 0x74, 0x07, 0x74, 0x07, 0x74,
    0x07, 0x74, 0x07, 0x75, 0x07, 0x75, 0x07, 0x74, 0x07, 0x74, 0x08, 0x85, 0x08, 0x85, 0x07, 0x75,
    0x06, 0x64, 0x07, 0x74, 0x17, 0x74, 0x68, 0x75, 0x07, 0x64, 0x07, 0x74, 0x17, 0x74, 0x78, 0x75,
    0x17, 0x74, 0x37, 0x74, 0x27, 0x74, 0x78, 0x75, 0x07, 0x75, 0x27, 0x75, 0x57, 0x74, 0x78, 0x75,
    0x78, 0x85, 0x27, 0x75, 0x07, 0x75, 0x57, 0x74, 0x78, 0x85, 0x38, 0x85, 0x07, 0x75, 0x67, 0x74,
    0x78, 0x85, 0x38, 0x85, 0x18, 0x75, 0x77, 0x74, 0x78, 0x86, 0x48, 0x85, 0x38, 0x85, 0x77, 0x74,
    0x76, 0x64, 0xB9, 0xC9, 0x77, 0x74, 0x57, 0x74, 0x67, 0x64, 0x77, 0x74, 0x57, 0x74, 0x57, 0x74,
    0x67, 0x64, 0x77, 0x74, 0x57, 0x74, 0x17, 0x74, 0x67, 0x64, 0x77, 0x74, 0x57, 0x74, 0x07, 0x74,
    0x68, 0x75, 0xC2, 0x0A, 0x58, 0x85, 0x38, 0x85, 0x77, 0x74, 0xC2, 0x0A, 0x58, 0x85, 0x37, 0x75,
    0x77, 0x75, 0xC2, 0x0B, 0x68, 0x85, 0x37, 0x74, 0x57, 0x74, 0xC2, 0x0B, 0x78, 0x85, 0x57, 0x74,
    0x78, 0x74, 0x38, 0x75, 0x48, 0x85, 0xC6, 0x0A, 0x78, 0x74, 0x38, 0x75, 0x58, 0x85, 0xC2, 0x0A,
    0x78, 0x74, 0x28, 0x74, 0x58, 0x85, 0xC2, 0x0A, 0x78, 0x74, 0x37, 0x74, 0x58, 0x85, 0xC2, 0x0A,
    0x48, 0x85, 0x08, 0x85, 0x08, 0x85, 0x08, 0x85, 0x48, 0x85, 0x08, 0x85, 0x08, 0x85, 0x28, 0x85,
    0x48, 0x84, 0x08, 0x85, 0x08, 0x84, 0x48, 0x85, 0x48, 0x84, 0x08, 0x85, 0x17, 0x84, 0x68, 0x84,
    0x58, 0x85, 0x28, 0x85, 0x08, 0x85, 0x08, 0x85, 0x78, 0x85, 0x28, 0x85, 0x08, 0x85, 0x08, 0x85,
    0x68, 0x85, 0x18, 0x85, 0x08, 0x85, 0x08, 0x84, 0x58, 0x85, 0x18, 0x85, 0x08, 0x85, 0x07, 0x84,
    0x07, 0x74, 0x08, 0x85, 0x08, 0x85, 0x08, 0x85, 0x07, 0x74, 0x18, 0x85, 0x38, 0x86, 0x08, 0x85,
    0x07, 0x74, 0x18, 0x85, 0x68, 0x86, 0x18, 0x85, 0x07, 0x74, 0x18, 0x75, 0x68, 0x85, 0x38, 0x75,
    0x08, 0x75, 0x08, 0x75, 0x47, 0x75, 0x78, 0x75, 0x08, 0x85, 0x08, 0x85, 0x27, 0x75, 0x78, 0x75,
    0x08, 0x85, 0x08, 0x85, 0x27, 0x75, 0x78, 0x75, 0x08, 0x85, 0x08, 0x75, 0x27, 0x75, 0x77, 0x75,
    0xC6, 0x2C, 0x48, 0x85, 0x48, 0x85, 0x77, 0x74, 0xC6, 0x2C, 0x58, 0x85, 0x58, 0x85, 0x77, 0x75,
    0xC2, 0x0B, 0x78, 0x85, 0x78, 0x85, 0x67, 0x75, 0xC1, 0xEA, 0x78, 0x75, 0xBD, 0xEA, 0x67, 0x64,
    0x67, 0x74, 0x77, 0x74, 0x57, 0x74, 0x07, 0x74, 0x67, 0x74, 0x77, 0x74, 0x57, 0x74, 0x07, 0x74,
    0x57, 0x74, 0x77, 0x74, 0x57, 0x74, 0x06, 0x64, 0x57, 0x64, 0x77, 0x74, 0x56, 0x64, 0x06, 0x63,
    0x57, 0x74, 0xC2, 0x0A, 0x68, 0x85, 0x77, 0x74, 0x57, 0x74, 0xBD, 0xEA, 0x57, 0x85, 0x57, 0x74,
    0x56, 0x64, 0xBD, 0xE9, 0x57, 0x75, 0x27, 0x74, 0x56, 0x63, 0xB9, 0xC9, 0x57, 0x74, 0x17, 0x74,
    0x77, 0x74, 0x57, 0x74, 0x58, 0x85, 0xC2, 0x09, 0x77, 0x74, 0x77, 0x74, 0x68, 0x84, 0xC2, 0x09,
    0x77, 0x74, 0xB9, 0xC8, 0x77, 0x84, 0xBD, 0xE8, 0x56, 0x64, 0x77, 0x74, 0x77, 0x74, 0xB9, 0xE8,
    0x48, 0x84, 0x08, 0x85, 0x47, 0x74, 0x78, 0x84, 0x48, 0x84, 0x28, 0x84, 0x67, 0x74, 0x58, 0x84,
    0x57, 0x74, 0x57, 0x84, 0x77, 0x74, 0x37, 0x84, 0x67, 0x74, 0x67, 0x74, 0x67, 0x74, 0x17, 0x74,
    0x38, 0x85, 0x08, 0x85, 0x08, 0x85, 0x07, 0x84, 0x18, 0x84, 0x08, 0x84, 0x08, 0x84, 0x07, 0x84,
    0x08, 0x84, 0x07, 0x84, 0x07, 0x74, 0x07, 0x74, 0x07, 0x74, 0x07, 0x74, 0x07, 0x74, 0x07, 0x74,
    0x07, 0x74, 0x17, 0x75, 0x68, 0x75, 0x37, 0x75, 0x07, 0x64, 0x27, 0x75, 0x67, 0x75, 0x47, 0x75,
    0x06, 0x64, 0x17, 0x64, 0x57, 0x75, 0x67, 0x75, 0x06, 0x64, 0x06, 0x64, 0x47, 0x65, 0x77, 0x64,
    0x07, 0x75, 0x07, 0x75, 0x27, 0x64, 0x77, 0x75, 0x07, 0x75, 0x07, 0x75, 0x26, 0x64, 0x77, 0x74,
    0x17, 0x75, 0x07, 0x64, 0x26, 0x64, 0x76, 0x64, 0x37, 0x65, 0x06, 0x64, 0x26, 0x64, 0x76, 0x64,
    0xBD, 0xEA, 0x67, 0x75, 0x77, 0x74, 0x76, 0x64, 0xB9, 0xCA, 0x67, 0x74, 0x77, 0x64, 0x76, 0x64,
    0xB9, 0xA9, 0x67, 0x64, 0x76, 0x64, 0x66, 0x54, 0xB5, 0x89, 0x66, 0x64, 0xB5, 0x89, 0x45, 0x53,
    0x66, 0x64, 0x76, 0x64, 0x56, 0x64, 0x05, 0x53, 0x76, 0x64, 0x76, 0x64, 0x56, 0x63, 0x05, 0x53,
    0x76, 0x53, 0xB1, 0x88, 0x55, 0x53, 0x05, 0x53, 0x65, 0x53, 0xB1, 0x67, 0x75, 0x53, 0x25, 0x52,
    0x56, 0x63, 0xB5, 0xA8, 0x57, 0x74, 0x06, 0x64, 0x55, 0x53, 0xB5, 0xA7, 0x56, 0x64, 0x06, 0x63,
    0x55, 0x53, 0xB1, 0xA7, 0x56, 0x64, 0x06, 0x63, 0x55, 0x53, 0xB1, 0x87, 0x56, 0x64, 0x05, 0x63,
    0x26, 0x63, 0x76, 0x63, 0x77, 0x74, 0xB9, 0xC8, 0x16, 0x63, 0x66, 0x63, 0x76, 0x63, 0xB5, 0xC7,
    0x05, 0x53, 0x45, 0x63, 0x76, 0x63, 0xB1, 0xA6, 0x05, 0x53, 0x25, 0x52, 0x75, 0x53, 0xAD, 0x86,
    0x77, 0x73, 0x77, 0x73, 0x37, 0x73, 0x07, 0x73, 0x76, 0x63, 0x76, 0x73, 0x26, 0x73, 0x06, 0x73,
    0x76, 0x63, 0x76, 0x63, 0x26, 0x73, 0x06, 0x73, 0x75, 0x63, 0x75, 0x63, 0x46, 0x63, 0x06, 0x63,
    0x07, 0x73, 0x06, 0x73, 0x07, 0x74, 0x07, 0x74, 0x06, 0x73, 0x06, 0x63, 0x06, 0x73, 0x06, 0x73,
    0x06, 0x63, 0x06, 0x63, 0x06, 0x63, 0x06, 0x73, 0x06, 0x63, 0x06, 0x63, 0x06, 0x63, 0x06, 0x63,
    0x06, 0x64, 0x06, 0x64, 0x36, 0x64, 0x76, 0x64, 0x06, 0x54, 0x05, 0x54, 0x16, 0x64, 0x56, 0x64,
    0x06, 0x64, 0x05, 0x54, 0x06, 0x64, 0x46, 0x64, 0x06, 0x64, 0x06, 0x54, 0x06, 0x64, 0x26, 0x64,
    0x56, 0x64, 0x16, 0x64, 0x26, 0x53, 0x76, 0x64, 0x76, 0x64, 0x36, 0x54, 0x25, 0x53, 0x75, 0x53,
    0x76, 0x64, 0x56, 0x54, 0x35, 0x53, 0x75, 0x53, 0x66, 0x64, 0x66, 0x64, 0x46, 0x54, 0x76, 0x54,
    0xB1, 0x88, 0x66, 0x64, 0x76, 0x64, 0x45, 0x53, 0xAD, 0x67, 0x66, 0x54, 0x75, 0x54, 0x55, 0x53,
    0xAD, 0x67, 0x66, 0x54, 0x65, 0x54, 0x65, 0x53, 0xB1, 0x68, 0x56, 0x64, 0x56, 0x64, 0x75, 0x53,
    0x55, 0x53, 0xAD, 0x67, 0x75, 0x53, 0x64, 0x42, 0x55, 0x53, 0x75, 0x53, 0x65, 0x53, 0x64, 0x42,
    0x55, 0x53, 0x76, 0x64, 0x45, 0x53, 0x35, 0x52, 0x65, 0x53, 0x76, 0x64, 0x45, 0x53, 0x05, 0x53,
    0x65, 0x52, 0xAD, 0x67, 0x56, 0x63, 0x05, 0x53, 0x75, 0x52, 0xAD, 0x67, 0x56, 0x64, 0x05, 0x53,
    0x75, 0x53, 0xB1, 0x87, 0x56, 0x64, 0x05, 0x53, 0x65, 0x53, 0xB1, 0x87, 0x76, 0x64, 0x15, 0x53,
    0x05, 0x52, 0x15, 0x52, 0x75, 0x52, 0xAD, 0x65, 0x05, 0x52, 0x04, 0x52, 0x65, 0x52, 0xAD, 0x65,
    0x05, 0x53, 0x04, 0x42, 0x65, 0x53, 0xB1, 0x87, 0x05, 0x53, 0x05, 0x53, 0x55, 0x53, 0xB1, 0x87,
    0x65, 0x52, 0x75, 0x62, 0x76, 0x63, 0x35, 0x63, 0x65, 0x52, 0x25, 0x52, 0x75, 0x63, 0x65, 0x63,
    0x76, 0x63, 0x05, 0x53, 0x26, 0x63, 0x75, 0x63, 0x76, 0x63, 0x15, 0x53, 0x06, 0x63, 0x45, 0x63,
    0x05, 0x52, 0x05, 0x63, 0x06, 0x63, 0x06, 0x63, 0x15, 0x52, 0x05, 0x53, 0x05, 0x63, 0x06, 0x63,
    0x55, 0x52, 0x05, 0x53, 0x06, 0x63, 0x06, 0x63, 0x75, 0x53, 0x55, 0x63, 0x06, 0x64, 0x06, 0x64,
    0x06, 0x64, 0x06, 0x64, 0x06, 0x64, 0x06, 0x64, 0x07, 0x64, 0x06, 0x64, 0x06, 0x63, 0x06, 0x64,
    0x06, 0x64, 0x06, 0x64, 0x06, 0x64, 0x06, 0x64, 0x06, 0x64, 0x06, 0x64, 0x06, 0x64, 0x06, 0x65,
    0x47, 0x64, 0x76, 0x64, 0x66, 0x64, 0x76, 0x64, 0x16, 0x64, 0x67, 0x74, 0x76, 0x64, 0x76, 0x64,
    0x07, 0x64, 0x27, 0x74, 0x76, 0x64, 0x76, 0x64, 0x06, 0x65, 0x06, 0x64, 0x56, 0x64, 0x76, 0x64,
    0xB5, 0xA9, 0x57, 0x65, 0x46, 0x65, 0x76, 0x64, 0xB5, 0xAA, 0x57, 0x65, 0x37, 0x65, 0x76, 0x64,
    0xB5, 0x89, 0x56, 0x65, 0x16, 0x65, 0x56, 0x64, 0xB1, 0x88, 0x66, 0x64, 0x06, 0x64, 0x45, 0x54,
    0x66, 0x64, 0x76, 0x64, 0x46, 0x64, 0x06, 0x64, 0x76, 0x64, 0x76, 0x64, 0x46, 0x64, 0x06, 0x64,
    0x76, 0x64, 0x76, 0x64, 0x46, 0x64, 0x06, 0x64, 0x76, 0x54, 0xB5, 0xA9, 0x46, 0x63, 0x05, 0x53,
    0x56, 0x64, 0xB1, 0x88, 0x76, 0x64, 0x36, 0x64, 0x56, 0x64, 0xB1, 0x68, 0x76, 0x54, 0x66, 0x64,
    0x56, 0x64, 0xB1, 0x88, 0x66, 0x64, 0x76, 0x64, 0x56, 0x63, 0xB1, 0x87, 0x56, 0x64, 0x55, 0x53,
    0x06, 0x63, 0x05, 0x53, 0x55, 0x63, 0xB1, 0x87, 0x26, 0x64, 0x05, 0x53, 0x56, 0x63, 0xB1, 0x88,
    0x46, 0x64, 0x15, 0x53, 0x56, 0x63, 0xB1, 0x87, 0x65, 0x53, 0x35, 0x53, 0x55, 0x53, 0xB1, 0x87,
    0x76, 0x63, 0x36, 0x63, 0x06, 0x64, 0x06, 0x63, 0x76, 0x64, 0x36, 0x63, 0x06, 0x53, 0x05, 0x53,
    0x76, 0x64, 0x46, 0x63, 0x06, 0x64, 0x05, 0x53, 0x76, 0x63, 0x66, 0x63, 0x06, 0x64, 0x06, 0x63,
    0x76, 0x63, 0x76, 0x64, 0x06, 0x64, 0x06, 0x64, 0x66, 0x63, 0x76, 0x63, 0x26, 0x64, 0x06, 0x63,
    0x56, 0x63, 0x76, 0x64, 0x56, 0x64, 0x06, 0x64, 0x56, 0x63, 0x76, 0x63, 0x46, 0x64, 0x06, 0x74,
};

/* 805239F8-805241F8 0800+00 s=1 e=0 z=0  None .data      l_M_Hijiki00TEX */
SECTION_DATA static u8 l_M_Hijiki00TEX[2048] = {
    0x03, 0x33, 0x03, 0x33, 0x03, 0x33, 0x03, 0x33, 0x03, 0x33, 0x03, 0x33, 0x03, 0x33, 0x04, 0x43,
    0x03, 0x33, 0x03, 0x33, 0x03, 0x33, 0x14, 0x43, 0x03, 0x33, 0x03, 0x33, 0x03, 0x33, 0x03, 0x33,
    0x03, 0x33, 0x03, 0x33, 0x03, 0x33, 0x03, 0x33, 0x04, 0x43, 0x03, 0x43, 0x03, 0x33, 0x03, 0x33,
    0x44, 0x44, 0x54, 0x44, 0x35, 0x54, 0x15, 0x54, 0x23, 0x33, 0x63, 0x43, 0xA1, 0x27, 0x74, 0x43,
    0x03, 0x33, 0x03, 0x33, 0x03, 0x33, 0x03, 0x33, 0x03, 0x33, 0x03, 0x33, 0x03, 0x33, 0x03, 0x33,
    0x03, 0x33, 0x03, 0x33, 0x03, 0x33, 0x03, 0x33, 0x65, 0x54, 0x54, 0x43, 0x23, 0x33, 0x03, 0x33,
    0x03, 0x33, 0x03, 0x33, 0x04, 0x43, 0x04, 0x44, 0x03, 0x33, 0x23, 0x33, 0x55, 0x54, 0x75, 0x54,
    0x03, 0x33, 0x33, 0x33, 0xA9, 0x48, 0xA1, 0x07, 0x03, 0x33, 0x33, 0x33, 0xA5, 0x48, 0x9C, 0xE6,
    0x04, 0x54, 0x03, 0x33, 0x03, 0x33, 0x03, 0x33, 0x74, 0x54, 0x33, 0x33, 0x03, 0x32, 0x03, 0x33,
    0xA1, 0x07, 0x33, 0x32, 0x03, 0x32, 0x03, 0x33, 0x73, 0x32, 0x33, 0x33, 0x03, 0x33, 0x23, 0x33,
    0x03, 0x33, 0x03, 0x33, 0x03, 0x33, 0x03, 0x33, 0x03, 0x33, 0x03, 0x33, 0x03, 0x33, 0x03, 0x33,
    0x03, 0x32, 0x03, 0x33, 0x03, 0x33, 0x03, 0x33, 0x53, 0x33, 0x55, 0x54, 0x23, 0x43, 0x03, 0x32,
    0x03, 0x33, 0x03, 0x33, 0x03, 0x33, 0x03, 0x33, 0x03, 0x33, 0x03, 0x33, 0x03, 0x33, 0x03, 0x33,
    0x03, 0x33, 0x03, 0x33, 0x03, 0x33, 0x03, 0x33, 0x03, 0x33, 0x03, 0x33, 0x03, 0x33, 0x03, 0x33,
    0x03, 0x33, 0x03, 0x33, 0x03, 0x33, 0x03, 0x33, 0x03, 0x33, 0x03, 0x33, 0x03, 0x33, 0x03, 0x33,
    0x03, 0x33, 0x03, 0x33, 0x03, 0x33, 0x03, 0x33, 0x03, 0x33, 0x03, 0x33, 0x03, 0x33, 0x03, 0x33,
    0x03, 0x33, 0x03, 0x33, 0x03, 0x33, 0x03, 0x33, 0x03, 0x33, 0x03, 0x33, 0x03, 0x33, 0x03, 0x33,
    0x03, 0x33, 0x03, 0x33, 0x03, 0x33, 0x03, 0x33, 0x03, 0x33, 0x03, 0x33, 0x03, 0x33, 0x03, 0x33,
    0x03, 0x33, 0x33, 0x32, 0x73, 0x33, 0x98, 0xE6, 0x03, 0x33, 0x03, 0x33, 0x23, 0x33, 0x53, 0x33,
    0x03, 0x33, 0x03, 0x33, 0x03, 0x33, 0x03, 0x33, 0x03, 0x33, 0x03, 0x33, 0x03, 0x33, 0x03, 0x33,
    0x98, 0xC5, 0xA5, 0x28, 0x34, 0x54, 0x03, 0x33, 0x73, 0x32, 0x98, 0xE6, 0x53, 0x43, 0x24, 0x54,
    0x13, 0x33, 0x43, 0x32, 0x73, 0x33, 0x53, 0x33, 0x03, 0x33, 0x03, 0x43, 0x33, 0x33, 0x73, 0x33,
    0x03, 0x32, 0x33, 0x43, 0x73, 0x33, 0x74, 0x43, 0x03, 0x33, 0x33, 0x33, 0x63, 0x32, 0x44, 0x43,
    0x23, 0x43, 0x33, 0x32, 0x63, 0x33, 0x33, 0x43, 0x63, 0x32, 0x54, 0x43, 0x63, 0x33, 0x33, 0x43,
    0x33, 0x32, 0x03, 0x33, 0x03, 0x33, 0x33, 0x32, 0x03, 0x32, 0x03, 0x33, 0x03, 0x33, 0x23, 0x32,
    0x03, 0x32, 0x03, 0x33, 0x03, 0x33, 0x03, 0x33, 0x03, 0x33, 0x03, 0x33, 0x03, 0x33, 0x03, 0x33,
    0xA1, 0x07, 0x9C, 0xE6, 0x75, 0x54, 0x33, 0x43, 0x63, 0x43, 0x98, 0xC5, 0x9D, 0x06, 0x33, 0x43,
    0x33, 0x32, 0x73, 0x32, 0x98, 0xC5, 0x43, 0x32, 0x03, 0x33, 0x23, 0x33, 0x63, 0x32, 0x63, 0x32,
    0x03, 0x32, 0x03, 0x32, 0x14, 0x43, 0x14, 0x43, 0x03, 0x32, 0x33, 0x43, 0x75, 0x54, 0x74, 0x43,
    0x23, 0x32, 0x64, 0x43, 0x98, 0xE5, 0x72, 0x32, 0x53, 0x33, 0x73, 0x32, 0x63, 0x32, 0x23, 0x32,
    0x03, 0x32, 0x03, 0x33, 0x03, 0x33, 0x03, 0x33, 0x53, 0x32, 0x13, 0x32, 0x03, 0x33, 0x03, 0x33,
    0x33, 0x33, 0x03, 0x33, 0x03, 0x33, 0x03, 0x33, 0x03, 0x32, 0x03, 0x33, 0x03, 0x33, 0x03, 0x33,
    0x03, 0x33, 0x03, 0x33, 0x14, 0x54, 0x15, 0x54, 0x03, 0x33, 0x33, 0x33, 0x75, 0x54, 0xA1, 0x07,
    0x03, 0x33, 0x03, 0x33, 0x23, 0x33, 0x53, 0x32, 0x03, 0x33, 0x03, 0x33, 0x03, 0x33, 0x03, 0x33,
    0x14, 0x43, 0x03, 0x43, 0x03, 0x43, 0x04, 0x43, 0x74, 0x44, 0x64, 0x44, 0x55, 0x54, 0x54, 0x43,
    0x73, 0x32, 0x73, 0x32, 0x63, 0x32, 0x53, 0x32, 0x13, 0x33, 0x13, 0x33, 0x03, 0x33, 0x03, 0x33,
    0x04, 0x43, 0x04, 0x44, 0x03, 0x43, 0x23, 0x33, 0x54, 0x43, 0x53, 0x33, 0x53, 0x33, 0x53, 0x32,
    0x53, 0x32, 0x53, 0x32, 0x53, 0x32, 0x33, 0x33, 0x03, 0x33, 0x03, 0x33, 0x03, 0x33, 0x03, 0x33,
    0x63, 0x32, 0x98, 0xC5, 0x73, 0x43, 0x33, 0x43, 0x63, 0x33, 0x98, 0xE6, 0x98, 0xE6, 0x64, 0x54,
    0x33, 0x33, 0x53, 0x33, 0x63, 0x32, 0x73, 0x32, 0x03, 0x43, 0x13, 0x43, 0x13, 0x33, 0x33, 0x32,
    0x03, 0x33, 0x03, 0x33, 0x03, 0x33, 0x03, 0x33, 0x24, 0x43, 0x03, 0x33, 0x03, 0x33, 0x03, 0x33,
    0x54, 0x43, 0x25, 0x54, 0x03, 0x33, 0x03, 0x33, 0x73, 0x32, 0x53, 0x33, 0x23, 0x33, 0x04, 0x43,
    0x03, 0x33, 0x03, 0x33, 0x33, 0x32, 0x73, 0x32, 0x03, 0x33, 0x03, 0x33, 0x34, 0x43, 0x98, 0xC5,
    0x03, 0x33, 0x25, 0x54, 0x53, 0x33, 0x73, 0x32, 0x24, 0x44, 0x62, 0x32, 0x73, 0x32, 0x43, 0x33,
    0x73, 0x33, 0x63, 0x43, 0x33, 0x33, 0x23, 0x43, 0x98, 0xC5, 0x62, 0x32, 0x62, 0x32, 0x73, 0x32,
    0x53, 0x32, 0x33, 0x33, 0x13, 0x33, 0x13, 0x33, 0x24, 0x43, 0x14, 0x43, 0x14, 0x43, 0x14, 0x43,
    0x54, 0x44, 0x53, 0x32, 0x23, 0x32, 0x03, 0x33, 0x73, 0x32, 0x53, 0x32, 0x23, 0x32, 0x03, 0x33,
    0x13, 0x33, 0x03, 0x33, 0x03, 0x33, 0x03, 0x33, 0x13, 0x43, 0x03, 0x33, 0x03, 0x33, 0x03, 0x33,
    0x03, 0x33, 0x03, 0x33, 0x03, 0x33, 0x03, 0x33, 0x03, 0x33, 0x03, 0x33, 0x14, 0x54, 0x15, 0x54,
    0x03, 0x33, 0x33, 0x33, 0x64, 0x43, 0x98, 0xE6, 0x03, 0x33, 0x03, 0x33, 0x13, 0x33, 0x33, 0x32,
    0x03, 0x33, 0x03, 0x33, 0x03, 0x33, 0x03, 0x33, 0x14, 0x44, 0x04, 0x43, 0x04, 0x43, 0x03, 0x33,
    0x73, 0x32, 0x63, 0x32, 0x53, 0x33, 0x53, 0x32, 0x53, 0x32, 0x52, 0x32, 0x63, 0x32, 0x73, 0x33,
    0x03, 0x33, 0x03, 0x33, 0x03, 0x33, 0x24, 0x43, 0x03, 0x33, 0x03, 0x33, 0x03, 0x43, 0x34, 0x43,
    0x24, 0x43, 0x04, 0x43, 0x04, 0x43, 0x33, 0x43, 0x73, 0x32, 0x53, 0x33, 0x24, 0x43, 0x33, 0x33,
    0x54, 0x54, 0x65, 0x54, 0x33, 0x33, 0x03, 0x33, 0x98, 0xE5, 0x98, 0xC5, 0x33, 0x33, 0x03, 0x33,
    0x98, 0xC5, 0x94, 0xC5, 0x33, 0x33, 0x03, 0x33, 0x73, 0x32, 0x63, 0x32, 0x23, 0x33, 0x03, 0x33,
    0x33, 0x32, 0x73, 0x32, 0x53, 0x32, 0x43, 0x33, 0x03, 0x33, 0x43, 0x32, 0x73, 0x32, 0x74, 0x43,
    0x03, 0x33, 0x23, 0x33, 0x63, 0x32, 0x73, 0x33, 0x03, 0x33, 0x03, 0x33, 0x33, 0x32, 0x73, 0x33,
    0x63, 0x33, 0x64, 0x43, 0x53, 0x32, 0x53, 0x32, 0x63, 0x32, 0x33, 0x33, 0x03, 0x33, 0x03, 0x33,
    0x43, 0x33, 0x13, 0x33, 0x03, 0x33, 0x03, 0x33, 0x73, 0x32, 0x33, 0x33, 0x03, 0x33, 0x03, 0x33,
    0x53, 0x33, 0x73, 0x32, 0x98, 0xC5, 0x98, 0xC5, 0x03, 0x33, 0x13, 0x33, 0x23, 0x33, 0x33, 0x33,
    0x03, 0x33, 0x03, 0x33, 0x34, 0x43, 0x75, 0x54, 0x23, 0x43, 0x54, 0x44, 0x75, 0x54, 0x98, 0xC5,
    0x63, 0x32, 0x33, 0x33, 0x03, 0x33, 0x03, 0x33, 0x33, 0x33, 0x13, 0x33, 0x03, 0x33, 0x03, 0x33,
    0x73, 0x33, 0x33, 0x33, 0x03, 0x33, 0x03, 0x33, 0x63, 0x32, 0x23, 0x33, 0x03, 0x33, 0x03, 0x33,
    0x03, 0x33, 0x03, 0x33, 0x03, 0x33, 0x03, 0x33, 0x03, 0x33, 0x03, 0x33, 0x03, 0x33, 0x03, 0x33,
    0x03, 0x33, 0x03, 0x33, 0x03, 0x33, 0x03, 0x33, 0x03, 0x33, 0x03, 0x33, 0x03, 0x33, 0x03, 0x33,
    0x03, 0x33, 0x03, 0x33, 0x03, 0x33, 0x13, 0x33, 0x03, 0x33, 0x03, 0x33, 0x03, 0x33, 0x03, 0x33,
    0x03, 0x33, 0x03, 0x33, 0x03, 0x33, 0x03, 0x33, 0x03, 0x33, 0x14, 0x43, 0x14, 0x43, 0x35, 0x54,
    0x33, 0x32, 0x53, 0x32, 0x73, 0x32, 0x73, 0x32, 0x03, 0x33, 0x03, 0x33, 0x23, 0x32, 0x53, 0x32,
    0x03, 0x33, 0x03, 0x33, 0x03, 0x33, 0x24, 0x43, 0x45, 0x54, 0x35, 0x54, 0x55, 0x54, 0x73, 0x33,
    0x73, 0x32, 0x33, 0x32, 0x03, 0x33, 0x03, 0x33, 0x72, 0x32, 0x63, 0x32, 0x23, 0x32, 0x03, 0x33,
    0x43, 0x33, 0x63, 0x32, 0x72, 0x32, 0x33, 0x32, 0x52, 0x32, 0x53, 0x32, 0x63, 0x32, 0x72, 0x32,
    0x03, 0x33, 0x03, 0x32, 0x34, 0x43, 0x98, 0xE6, 0x03, 0x33, 0x03, 0x33, 0x34, 0x43, 0x73, 0x32,
    0x03, 0x32, 0x04, 0x43, 0x34, 0x43, 0x63, 0x32, 0x52, 0x32, 0x23, 0x33, 0x43, 0x33, 0x63, 0x33,
    0x98, 0xC5, 0x33, 0x32, 0x03, 0x43, 0x03, 0x43, 0x73, 0x32, 0x33, 0x32, 0x03, 0x43, 0x03, 0x33,
    0x43, 0x33, 0x03, 0x33, 0x03, 0x32, 0x03, 0x33, 0x33, 0x33, 0x02, 0x32, 0x03, 0x33, 0x03, 0x33,
    0x33, 0x33, 0x9C, 0xE6, 0xA9, 0x48, 0x9C, 0xE6, 0x23, 0x33, 0x63, 0x43, 0x73, 0x33, 0x63, 0x33,
    0x03, 0x33, 0x33, 0x33, 0x63, 0x33, 0x33, 0x33, 0x03, 0x33, 0x33, 0x33, 0x63, 0x32, 0x53, 0x32,
    0x33, 0x43, 0x03, 0x33, 0x03, 0x33, 0x03, 0x33, 0x23, 0x33, 0x03, 0x33, 0x03, 0x33, 0x03, 0x33,
    0x13, 0x33, 0x13, 0x32, 0x03, 0x33, 0x03, 0x33, 0x74, 0x44, 0x75, 0x54, 0x33, 0x33, 0x03, 0x33,
    0x03, 0x33, 0x03, 0x33, 0x03, 0x33, 0x03, 0x33, 0x03, 0x33, 0x03, 0x33, 0x03, 0x33, 0x03, 0x33,
    0x03, 0x33, 0x03, 0x33, 0x03, 0x33, 0x03, 0x33, 0x03, 0x33, 0x03, 0x33, 0x03, 0x33, 0x03, 0x33,
    0x33, 0x32, 0x73, 0x33, 0x98, 0xE5, 0x98, 0xE5, 0x23, 0x33, 0x53, 0x33, 0x53, 0x33, 0x53, 0x32,
    0x03, 0x33, 0x13, 0x33, 0x13, 0x33, 0x13, 0x33, 0x33, 0x33, 0x75, 0x54, 0xA5, 0x27, 0xA1, 0x07,
    0x98, 0xE5, 0x73, 0x33, 0x53, 0x33, 0x23, 0x32, 0x33, 0x32, 0x13, 0x33, 0x03, 0x33, 0x03, 0x33,
    0x13, 0x33, 0x13, 0x33, 0x14, 0x43, 0x03, 0x33, 0x9C, 0xE6, 0x9C, 0xE6, 0x73, 0x32, 0x63, 0x33,
    0x03, 0x33, 0x03, 0x33, 0x03, 0x32, 0x34, 0x43, 0x03, 0x33, 0x03, 0x33, 0x03, 0x33, 0x03, 0x33,
    0x03, 0x33, 0x03, 0x33, 0x03, 0x33, 0x03, 0x33, 0x53, 0x33, 0x24, 0x43, 0x03, 0x43, 0x03, 0x33,
    0x73, 0x32, 0x72, 0x32, 0x72, 0x32, 0x53, 0x33, 0x23, 0x32, 0x63, 0x32, 0x74, 0x43, 0x33, 0x33,
    0x03, 0x33, 0x43, 0x32, 0x63, 0x32, 0x34, 0x43, 0x33, 0x33, 0x73, 0x32, 0x73, 0x32, 0x53, 0x33,
    0x23, 0x32, 0x03, 0x33, 0x03, 0x33, 0x03, 0x33, 0x03, 0x32, 0x03, 0x32, 0x03, 0x32, 0x13, 0x33,
    0x03, 0x33, 0x24, 0x43, 0x54, 0x44, 0x74, 0x43, 0x54, 0x43, 0x73, 0x43, 0x63, 0x33, 0x63, 0x33,
    0x03, 0x32, 0x33, 0x32, 0x73, 0x32, 0xA1, 0x07, 0x33, 0x33, 0x63, 0x32, 0x73, 0x32, 0x63, 0x33,
    0x63, 0x32, 0x53, 0x33, 0x23, 0x43, 0x03, 0x33, 0x73, 0x33, 0x63, 0x43, 0x55, 0x54, 0x55, 0x54,
    0x98, 0xE6, 0x73, 0x32, 0x53, 0x43, 0x13, 0x33, 0x53, 0x43, 0x23, 0x33, 0x03, 0x33, 0x03, 0x33,
    0x03, 0x33, 0x03, 0x33, 0x03, 0x33, 0x03, 0x33, 0x25, 0x54, 0x04, 0x43, 0x03, 0x33, 0x03, 0x33,
    0x03, 0x33, 0x03, 0x33, 0x03, 0x33, 0x03, 0x33, 0x03, 0x33, 0x03, 0x33, 0x03, 0x33, 0x03, 0x33,
    0x03, 0x33, 0x03, 0x33, 0x03, 0x33, 0x03, 0x33, 0x03, 0x33, 0x03, 0x33, 0x03, 0x33, 0x03, 0x33,
    0x23, 0x33, 0x53, 0x33, 0x53, 0x32, 0x52, 0x32, 0x03, 0x33, 0x03, 0x33, 0x03, 0x33, 0x03, 0x33,
    0x03, 0x33, 0x03, 0x33, 0x03, 0x33, 0x03, 0x33, 0x03, 0x33, 0x03, 0x33, 0x03, 0x33, 0x03, 0x33,
    0x53, 0x32, 0x52, 0x32, 0x53, 0x32, 0x33, 0x32, 0x03, 0x33, 0x03, 0x33, 0x03, 0x33, 0x03, 0x33,
    0x03, 0x33, 0x03, 0x33, 0x03, 0x33, 0x03, 0x33, 0x03, 0x33, 0x03, 0x33, 0x03, 0x33, 0x03, 0x33,
    0x53, 0x32, 0x52, 0x32, 0x53, 0x33, 0x54, 0x43, 0x03, 0x33, 0x03, 0x33, 0x23, 0x32, 0x62, 0x32,
    0x03, 0x33, 0x03, 0x33, 0x03, 0x33, 0x23, 0x32, 0x03, 0x33, 0x03, 0x33, 0x03, 0x33, 0x03, 0x33,
    0x53, 0x33, 0x98, 0xC5, 0x98, 0xC5, 0x73, 0x32, 0x98, 0xE6, 0x98, 0xC5, 0x98, 0xC5, 0x43, 0x32,
    0x63, 0x32, 0x94, 0xC5, 0x98, 0xC5, 0x33, 0x32, 0x32, 0x32, 0x94, 0xC5, 0x98, 0xC5, 0x33, 0x32,
    0x53, 0x33, 0x23, 0x33, 0x03, 0x33, 0x03, 0x33, 0x03, 0x33, 0x03, 0x33, 0x03, 0x33, 0x03, 0x33,
    0x03, 0x33, 0x03, 0x33, 0x03, 0x33, 0x03, 0x33, 0x03, 0x33, 0x03, 0x33, 0x03, 0x33, 0x03, 0x33,
    0x23, 0x33, 0x53, 0x33, 0x73, 0x32, 0x9D, 0x07, 0x03, 0x33, 0x03, 0x33, 0x23, 0x33, 0x53, 0x33,
    0x03, 0x33, 0x03, 0x33, 0x03, 0x33, 0x03, 0x33, 0x03, 0x33, 0x03, 0x33, 0x03, 0x33, 0x03, 0x33,
    0x74, 0x44, 0x33, 0x33, 0x03, 0x33, 0x03, 0x33, 0x53, 0x33, 0x23, 0x33, 0x03, 0x33, 0x03, 0x33,
    0x03, 0x33, 0x03, 0x33, 0x03, 0x33, 0x03, 0x33, 0x03, 0x33, 0x03, 0x33, 0x03, 0x33, 0x03, 0x33,
    0x03, 0x33, 0x03, 0x33, 0x03, 0x33, 0x03, 0x33, 0x03, 0x33, 0x03, 0x33, 0x03, 0x33, 0x03, 0x33,
    0x03, 0x33, 0x03, 0x33, 0x03, 0x33, 0x03, 0x33, 0x03, 0x33, 0x03, 0x33, 0x03, 0x33, 0x03, 0x33,
    0x03, 0x33, 0x03, 0x33, 0x03, 0x33, 0x03, 0x33, 0x03, 0x33, 0x03, 0x33, 0x03, 0x33, 0x03, 0x33,
    0x03, 0x33, 0x03, 0x33, 0x03, 0x33, 0x03, 0x33, 0x03, 0x33, 0x03, 0x33, 0x03, 0x33, 0x03, 0x33,
    0x03, 0x33, 0x03, 0x33, 0x03, 0x33, 0x03, 0x33, 0x03, 0x33, 0x03, 0x33, 0x03, 0x33, 0x03, 0x33,
    0x03, 0x33, 0x03, 0x33, 0x03, 0x33, 0x03, 0x33, 0x03, 0x33, 0x03, 0x33, 0x03, 0x33, 0x03, 0x33,
    0x03, 0x33, 0x03, 0x33, 0x03, 0x33, 0x03, 0x33, 0x03, 0x33, 0x03, 0x33, 0x03, 0x33, 0x03, 0x33,
    0x03, 0x33, 0x03, 0x33, 0x03, 0x33, 0x03, 0x33, 0x03, 0x33, 0x03, 0x33, 0x03, 0x33, 0x03, 0x33,
    0x32, 0x32, 0x94, 0xC5, 0x94, 0xC5, 0x33, 0x32, 0x33, 0x32, 0x94, 0xC5, 0x94, 0xC5, 0x33, 0x32,
    0x33, 0x32, 0x94, 0xC5, 0x94, 0xC5, 0x33, 0x32, 0x33, 0x32, 0x98, 0xC5, 0x94, 0xC5, 0x32, 0x32,
    0x03, 0x33, 0x03, 0x33, 0x03, 0x33, 0x03, 0x33, 0x03, 0x33, 0x03, 0x33, 0x03, 0x33, 0x03, 0x33,
    0x03, 0x33, 0x03, 0x33, 0x03, 0x33, 0x03, 0x33, 0x03, 0x33, 0x03, 0x33, 0x03, 0x33, 0x03, 0x33,
    0x03, 0x33, 0x03, 0x33, 0x03, 0x33, 0x03, 0x33, 0x03, 0x33, 0x03, 0x33, 0x03, 0x33, 0x03, 0x33,
    0x03, 0x33, 0x03, 0x33, 0x03, 0x33, 0x03, 0x33, 0x03, 0x33, 0x03, 0x33, 0x03, 0x33, 0x03, 0x33,
    0x03, 0x33, 0x03, 0x33, 0x03, 0x33, 0x03, 0x33, 0x03, 0x33, 0x03, 0x33, 0x03, 0x33, 0x03, 0x33,
    0x03, 0x33, 0x03, 0x33, 0x03, 0x33, 0x03, 0x33, 0x03, 0x33, 0x03, 0x33, 0x03, 0x33, 0x03, 0x33,
};

/* 805241F8-805245B8 03C0+00 s=1 e=0 z=0  None .data      l_pos */
SECTION_DATA static u8 l_pos[960] = {
    0x3F, 0x4A, 0x56, 0xEF, 0xC2, 0x20, 0x00, 0x00, 0x41, 0xFB, 0x17, 0xE4, 0x41, 0xAA, 0xBB, 0xEA,
    0xC2, 0x20, 0x00, 0x00, 0xC1, 0xB7, 0x03, 0x7A, 0x42, 0x55, 0x8D, 0x6F, 0x43, 0x13, 0x16, 0x3F,
    0xC0, 0xC7, 0x24, 0x07, 0x41, 0xE3, 0xC5, 0x31, 0x43, 0x13, 0x16, 0x3F, 0x42, 0x3A, 0x76, 0x90,
    0xC1, 0xDE, 0xF6, 0x89, 0xC2, 0x20, 0x00, 0x00, 0xC1, 0x4E, 0xFE, 0x02, 0xC2, 0x28, 0x22, 0x86,
    0x43, 0x13, 0x16, 0x3F, 0xC2, 0x07, 0x6E, 0x2C, 0x41, 0x51, 0x51, 0xEE, 0x43, 0x13, 0x16, 0x3F,
    0xC2, 0x54, 0xE3, 0xFA, 0xC1, 0x89, 0xD7, 0x9B, 0x43, 0x13, 0x16, 0x3F, 0x42, 0x47, 0x60, 0x87,
    0xC2, 0x59, 0x1D, 0x0E, 0x43, 0x13, 0x16, 0x3F, 0x40, 0x95, 0x9B, 0x11, 0x3F, 0x3A, 0x78, 0x8E,
    0x43, 0x13, 0x16, 0x3F, 0x41, 0xE0, 0xD9, 0x17, 0xC1, 0xE3, 0x1B, 0x10, 0x43, 0x13, 0x16, 0x3F,
    0x42, 0x5A, 0xDD, 0x48, 0xC1, 0xEE, 0x39, 0x52, 0xC2, 0x20, 0x00, 0x00, 0x41, 0xC4, 0x63, 0x09,
    0x00, 0x00, 0x00, 0x00, 0xC2, 0x20, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x42, 0x03, 0x56, 0x8B,
    0xC2, 0x20, 0x00, 0x00, 0x41, 0x08, 0xF1, 0x43, 0x42, 0x14, 0xBE, 0x15, 0x43, 0x13, 0x16, 0x3F,
    0x42, 0x3E, 0x56, 0x15, 0x41, 0x9A, 0x86, 0xFF, 0x43, 0x13, 0x16, 0x3F, 0xC1, 0xA7, 0xC6, 0xC3,
    0x42, 0x6A, 0xD4, 0x7A, 0x43, 0x13, 0x16, 0x3F, 0xC1, 0x97, 0x6D, 0x9D, 0xC1, 0x19, 0xCD, 0xF3,
    0xC2, 0x20, 0x00, 0x00, 0xC2, 0x15, 0xFA, 0x6B, 0x40, 0xF2, 0xA2, 0x21, 0x43, 0x13, 0x16, 0x3F,
    0xC2, 0x72, 0x6C, 0x7F, 0xC1, 0xC9, 0x8C, 0x79, 0x43, 0x13, 0x16, 0x3F, 0xC1, 0x3F, 0xB7, 0x0B,
    0xC2, 0x12, 0xFB, 0xE4, 0x43, 0x13, 0x16, 0x3F, 0xC2, 0x46, 0xC9, 0xEB, 0xC2, 0x69, 0xB2, 0x46,
    0x43, 0x13, 0x16, 0x3F, 0x41, 0x49, 0x97, 0x1C, 0x3E, 0xBA, 0x78, 0x8E, 0x42, 0x0E, 0x6B, 0x09,
    0x41, 0x60, 0xD9, 0x17, 0xC1, 0xE8, 0xAA, 0x31, 0x42, 0x0E, 0x6B, 0x09, 0x42, 0x1E, 0x87, 0x66,
    0xC1, 0xEE, 0x39, 0x52, 0xC1, 0xA0, 0x00, 0x00, 0x41, 0xC4, 0x63, 0x09, 0x00, 0x00, 0x00, 0x00,
    0xC1, 0xA0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x42, 0x03, 0x56, 0x8B, 0xC1, 0xA0, 0x00, 0x00,
    0x41, 0x08, 0xF1, 0x43, 0x42, 0x0C, 0x0A, 0x50, 0x42, 0x0E, 0x6B, 0x09, 0x41, 0xE0, 0x92, 0x67,
    0x41, 0x1A, 0x86, 0xFF, 0x42, 0x0E, 0x6B, 0x09, 0xC1, 0x27, 0xC6, 0xC3, 0x42, 0x37, 0x15, 0x83,
    0x42, 0x0E, 0x6B, 0x09, 0xC0, 0xA5, 0xE9, 0xF7, 0xC1, 0x19, 0xCD, 0xF3, 0xC1, 0xA0, 0x00, 0x00,
    0xC2, 0x15, 0xFA, 0x6B, 0xBF, 0x81, 0xF3, 0x8C, 0x42, 0x0E, 0x6B, 0x09, 0xC2, 0x44, 0x33, 0x76,
    0xC1, 0x49, 0x8C, 0x7A, 0x42, 0x0E, 0x6B, 0x09, 0xC0, 0xBF, 0xB7, 0x0B, 0xC1, 0xB9, 0x6F, 0x60,
    0x42, 0x0E, 0x6B, 0x09, 0xC2, 0x2E, 0x62, 0x2B, 0xC2, 0x30, 0x67, 0x78, 0x42, 0x0E, 0x6B, 0x09,
    0x41, 0x94, 0x97, 0x4B, 0x3F, 0x4A, 0x56, 0xEF, 0xC1, 0xA0, 0x00, 0x00, 0x41, 0xFB, 0x17, 0xE4,
    0x41, 0xAA, 0xBB, 0xEA, 0xC1, 0xA0, 0x00, 0x00, 0xC1, 0xB7, 0x03, 0x7A, 0x42, 0x15, 0x75, 0xB2,
    0x41, 0xD4, 0xFE, 0xE0, 0xC1, 0x68, 0xCC, 0x7C, 0x41, 0x6A, 0x17, 0xE7, 0x41, 0xD4, 0xFE, 0xE0,
    0x42, 0x1C, 0x01, 0x41, 0xC1, 0xDE, 0xF6, 0x89, 0xC1, 0xA0, 0x00, 0x00, 0xC1, 0x4E, 0xFE, 0x02,
    0xC2, 0x0B, 0xCE, 0xE5, 0x41, 0xD4, 0xFE, 0xE0, 0xC1, 0xBB, 0x2D, 0xAD, 0x41, 0x89, 0xB2, 0x71,
    0x41, 0xD4, 0xFE, 0xE0, 0xC2, 0x18, 0x32, 0xDB, 0xC1, 0x03, 0x84, 0xE4, 0x41, 0xD4, 0xFE, 0xE0,
    0x42, 0x22, 0x76, 0x3C, 0xC2, 0x24, 0x4C, 0x29, 0x41, 0xD4, 0xFE, 0xE0, 0xC0, 0x84, 0x30, 0x7B,
    0x41, 0x47, 0x75, 0x1E, 0x43, 0x9F, 0x77, 0x6C, 0x42, 0xE0, 0x3F, 0xC6, 0x41, 0x8A, 0x76, 0x75,
    0xC2, 0x05, 0x2D, 0xB7, 0xC1, 0xCF, 0xDC, 0xAC, 0xC1, 0x8C, 0x34, 0xB2, 0xC2, 0x3A, 0xD2, 0x49,
    0x40, 0xA1, 0xFC, 0xF0, 0x43, 0x07, 0x5C, 0xA5, 0x43, 0x37, 0x70, 0xEE, 0x42, 0x80, 0x8E, 0x59,
    0x40, 0xAF, 0x73, 0x3F, 0x40, 0x5B, 0xFC, 0x44, 0x41, 0xA2, 0xC5, 0x58, 0xBE, 0x8F, 0xF1, 0x0F,
    0x41, 0xD6, 0xD6, 0xFB, 0xC0, 0xFF, 0xAA, 0x6F, 0x42, 0x47, 0x87, 0xFB, 0x43, 0x71, 0x58, 0x6A,
    0xC2, 0x6A, 0x7B, 0x21, 0x41, 0x79, 0x6D, 0x34, 0x42, 0x7D, 0x14, 0x66, 0x41, 0xC5, 0x98, 0xA7,
    0xC1, 0x3D, 0x22, 0x18, 0x42, 0x94, 0x1C, 0x80, 0x41, 0xF6, 0xE0, 0x36, 0x42, 0xDF, 0xB0, 0x65,
    0x43, 0xA2, 0xC0, 0xAF, 0xC1, 0x24, 0x3C, 0xD0, 0xC1, 0xD2, 0x1A, 0x2E, 0xC1, 0xD5, 0xC7, 0x38,
    0xC1, 0x71, 0xB4, 0x9D, 0x40, 0x99, 0x06, 0xE6, 0xC2, 0x20, 0x88, 0x2D, 0x41, 0x9D, 0xD0, 0xD9,
    0x41, 0xBB, 0x21, 0x46, 0x43, 0x39, 0xA7, 0xB9, 0xC3, 0x11, 0x8D, 0x20, 0x41, 0x8D, 0xE2, 0x64,
    0x40, 0xB4, 0xD7, 0xAE, 0xC0, 0xDD, 0x14, 0x64, 0xC1, 0x02, 0x49, 0xD6, 0x41, 0xE8, 0x8D, 0x5E,
    0x40, 0xBF, 0xC4, 0x15, 0xC1, 0xD9, 0x0C, 0xDC, 0x43, 0x68, 0x5A, 0x22, 0xC2, 0x4F, 0xE7, 0x5E,
    0x41, 0x82, 0x49, 0x5F, 0x42, 0x5A, 0x19, 0xB6, 0xC1, 0x89, 0xC1, 0xA5, 0x41, 0xB3, 0x90, 0xED,
    0x42, 0x82, 0x9F, 0x28, 0x41, 0x23, 0x0C, 0x02, 0xC1, 0x8D, 0x1C, 0xF7, 0x43, 0x9F, 0x77, 0x6C,
    0xC2, 0xE5, 0xDF, 0x4C, 0xC1, 0xB3, 0xD8, 0xDD, 0xC2, 0x05, 0x2D, 0xB7, 0x41, 0xB9, 0x5E, 0x95,
    0x41, 0x45, 0xA4, 0x94, 0xC2, 0x3A, 0xD2, 0x49, 0xC0, 0xFB, 0xF5, 0x4D, 0xC3, 0x16, 0x18, 0x11,
    0x43, 0x39, 0xA7, 0xB9, 0xC2, 0x07, 0x6F, 0xB1, 0xC1, 0x71, 0x27, 0xE6, 0x40, 0xB4, 0xD7, 0xAE,
    0xC1, 0xAE, 0x78, 0x69, 0xC0, 0x0A, 0xEE, 0xAA, 0x41, 0xE8, 0x8D, 0x5E, 0x40, 0x82, 0x3B, 0x99,
    0xC2, 0x33, 0x95, 0x59, 0x43, 0x5F, 0x75, 0x5E, 0x3D, 0xF4, 0x6A, 0x1A, 0xC1, 0x9E, 0xD4, 0x98,
    0x42, 0x7D, 0x14, 0x66, 0xC1, 0xDD, 0xD4, 0x93, 0x40, 0xF1, 0xCC, 0x38, 0x42, 0x94, 0x1C, 0x80,
    0xC2, 0x07, 0x8E, 0x11, 0xC2, 0xE0, 0xEF, 0x0C, 0x43, 0xA0, 0x12, 0xC6, 0xC1, 0x91, 0xCE, 0x9E,
    0x41, 0x9D, 0x73, 0x77, 0xC2, 0x00, 0x52, 0xDD, 0x41, 0xB1, 0x90, 0xD0, 0xBF, 0xA5, 0x21, 0x04,
    0xC2, 0x35, 0xF7, 0x70, 0xC1, 0x9B, 0xE3, 0x38, 0xC2, 0x84, 0xB6, 0xB8, 0x43, 0x43, 0x0C, 0x16,
    0x42, 0xFA, 0x80, 0xC7, 0xC1, 0xCC, 0x7C, 0xFD, 0x41, 0x7A, 0x99, 0xDC, 0x40, 0x0F, 0xBE, 0x34,
    0x40, 0x31, 0x97, 0xA6, 0x42, 0x1C, 0x52, 0x30, 0xC0, 0x61, 0x26, 0x39, 0x42, 0x41, 0xBD, 0x21,
    0x43, 0x72, 0x8F, 0x21, 0x42, 0x23, 0xF4, 0x30, 0xC1, 0xE5, 0xEB, 0x07, 0x42, 0x80, 0xF7, 0x9F,
    0x40, 0xD8, 0x8F, 0xF3, 0xC1, 0xDC, 0xC3, 0xBB, 0x42, 0x96, 0x89, 0xEC, 0xC1, 0xAA, 0x6C, 0x09,
};

/* 805245B8-805245C4 000C+00 s=1 e=0 z=0  None .data      l_normal */
SECTION_DATA static u8 l_normal[12] = {
    0x00, 0x00, 0x00, 0x00, 0x3F, 0x80, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
};

/* 805245C4-805245D8 0014+00 s=1 e=0 z=0  None .data      l_color */
SECTION_DATA static u8 l_color[20] = {
    0xFF, 0xFF, 0xFF, 0x00, 0xFF, 0xFF, 0xFF, 0x80, 0xFF, 0xFF,
    0xFF, 0x79, 0xFF, 0xFF, 0xFF, 0x73, 0xFF, 0xFF, 0xFF, 0xFF,
};

/* 805245D8-80524678 00A0+00 s=1 e=0 z=0  None .data      l_texCoord */
SECTION_DATA static u8 l_texCoord[160] = {
    0x3F, 0x86, 0xF6, 0x27, 0x3F, 0x9C, 0x00, 0x00, 0x40, 0x03, 0x7B, 0x14, 0x3F, 0x9C, 0x00, 0x00,
    0x40, 0x03, 0x7B, 0x14, 0x3D, 0x00, 0x00, 0x00, 0x3F, 0x86, 0xF6, 0x27, 0x3D, 0x00, 0x00, 0x00,
    0x00, 0x00, 0x00, 0x00, 0x3D, 0x00, 0x00, 0x00, 0xBF, 0x80, 0x00, 0x00, 0x3D, 0x00, 0x00, 0x00,
    0xBF, 0x80, 0x00, 0x00, 0x3F, 0x9C, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x3F, 0x9C, 0x00, 0x00,
    0x3F, 0x80, 0x00, 0x00, 0x3D, 0x00, 0x00, 0x00, 0x3F, 0x80, 0x00, 0x00, 0x3F, 0x9C, 0x00, 0x00,
    0x00, 0x00, 0x00, 0x00, 0x3E, 0xC4, 0xF3, 0xBA, 0xBF, 0x80, 0x00, 0x00, 0x3E, 0xC4, 0xF3, 0xBA,
    0x3F, 0x80, 0x00, 0x00, 0x3E, 0xC4, 0xF3, 0xBA, 0x40, 0x03, 0x7B, 0x14, 0x3E, 0xC4, 0xF3, 0xBA,
    0x3F, 0x86, 0xF6, 0x27, 0x3E, 0xC4, 0xF3, 0xBA, 0x3E, 0xF0, 0x00, 0x00, 0xBF, 0xDC, 0x00, 0x00,
    0x3F, 0x94, 0x00, 0x00, 0x3F, 0x9C, 0x00, 0x00, 0xBD, 0xC0, 0x00, 0x00, 0x3F, 0x9C, 0x00, 0x00,
    0x3F, 0x94, 0x00, 0x00, 0x3F, 0x80, 0x00, 0x00, 0xBD, 0xC0, 0x00, 0x00, 0x3F, 0x80, 0x00, 0x00,
};

/* 80524678-80524758 00CB+15 s=1 e=0 z=0  None .data      l_M_Kusa_9qDL */
SECTION_DATA static u8 l_M_Kusa_9qDL[203 + 21 /* padding */] = {
    0x98,
    0x00,
    0x04,
    0x13,
    0x00,
    0x01,
    0x08,
    0x0C,
    0x00,
    0x00,
    0x09,
    0x15,
    0x00,
    0x01,
    0x04,
    0x0B,
    0x00,
    0x00,
    0x07,
    0x98,
    0x00,
    0x04,
    0x11,
    0x00,
    0x00,
    0x06,
    0x0C,
    0x00,
    0x00,
    0x07,
    0x14,
    0x00,
    0x01,
    0x05,
    0x13,
    0x00,
    0x01,
    0x04,
    0x98,
    0x00,
    0x04,
    0x0F,
    0x00,
    0x01,
    0x08,
    0x0C,
    0x00,
    0x00,
    0x09,
    0x12,
    0x00,
    0x01,
    0x04,
    0x11,
    0x00,
    0x00,
    0x07,
    0x98,
    0x00,
    0x04,
    0x0D,
    0x00,
    0x00,
    0x06,
    0x0C,
    0x00,
    0x00,
    0x07,
    0x10,
    0x00,
    0x01,
    0x05,
    0x0F,
    0x00,
    0x01,
    0x04,
    0x98,
    0x00,
    0x04,
    0x09,
    0x00,
    0x01,
    0x08,
    0x0C,
    0x00,
    0x00,
    0x09,
    0x0E,
    0x00,
    0x01,
    0x04,
    0x0D,
    0x00,
    0x00,
    0x07,
    0x98,
    0x00,
    0x04,
    0x0B,
    0x00,
    0x00,
    0x06,
    0x0C,
    0x00,
    0x00,
    0x07,
    0x0A,
    0x00,
    0x01,
    0x05,
    0x09,
    0x00,
    0x01,
    0x04,
    0x98,
    0x00,
    0x04,
    0x07,
    0x00,
    0x01,
    0x02,
    0x08,
    0x00,
    0x01,
    0x03,
    0x00,
    0x00,
    0x00,
    0x01,
    0x04,
    0x00,
    0x00,
    0x00,
    0x98,
    0x00,
    0x04,
    0x05,
    0x00,
    0x01,
    0x02,
    0x06,
    0x00,
    0x01,
    0x03,
    0x04,
    0x00,
    0x00,
    0x01,
    0x01,
    0x00,
    0x00,
    0x00,
    0x98,
    0x00,
    0x04,
    0x02,
    0x00,
    0x01,
    0x02,
    0x03,
    0x00,
    0x01,
    0x03,
    0x01,
    0x00,
    0x00,
    0x01,
    0x00,
    0x00,
    0x00,
    0x00,
    0x00,
    0x00,
    0x00,
    0x00,
    0x00,
    0x00,
    0x00,
    0x00,
    0x00,
    0x00,
    0x00,
    0x00,
    0x00,
    0x00,
    0x00,
    0x00,
    0x00,
    0x00,
    0x00,
    0x00,
    0x00,
    0x00,
    0x00,
    0x00,
    0x00,
    0x00,
    0x00,
    0x00,
    0x00,
    0x00,
    0x00,
    0x00,
    /* padding */
    0x00,
    0x00,
    0x00,
    0x00,
    0x00,
    0x00,
    0x00,
    0x00,
    0x00,
    0x00,
    0x00,
    0x00,
    0x00,
    0x00,
    0x00,
    0x00,
    0x00,
    0x00,
    0x00,
    0x00,
    0x00,
};

/* 80524758-80524838 00CB+15 s=1 e=0 z=0  None .data      l_M_Kusa_9q_cDL */
SECTION_DATA static u8 l_M_Kusa_9q_cDL[203 + 21 /* padding */] = {
    0x98,
    0x00,
    0x04,
    0x2A,
    0x00,
    0x03,
    0x0D,
    0x2B,
    0x00,
    0x03,
    0x0E,
    0x23,
    0x00,
    0x00,
    0x01,
    0x27,
    0x00,
    0x00,
    0x00,
    0x98,
    0x00,
    0x04,
    0x28,
    0x00,
    0x03,
    0x0D,
    0x29,
    0x00,
    0x03,
    0x0E,
    0x27,
    0x00,
    0x00,
    0x01,
    0x24,
    0x00,
    0x00,
    0x00,
    0x98,
    0x00,
    0x04,
    0x25,
    0x00,
    0x03,
    0x0D,
    0x26,
    0x00,
    0x03,
    0x0E,
    0x24,
    0x00,
    0x00,
    0x01,
    0x23,
    0x00,
    0x00,
    0x00,
    0x98,
    0x00,
    0x04,
    0x20,
    0x00,
    0x02,
    0x0C,
    0x19,
    0x00,
    0x00,
    0x09,
    0x22,
    0x00,
    0x02,
    0x0A,
    0x18,
    0x00,
    0x00,
    0x07,
    0x98,
    0x00,
    0x04,
    0x1E,
    0x00,
    0x00,
    0x06,
    0x19,
    0x00,
    0x00,
    0x07,
    0x21,
    0x00,
    0x02,
    0x0B,
    0x20,
    0x00,
    0x02,
    0x0A,
    0x98,
    0x00,
    0x04,
    0x1C,
    0x00,
    0x02,
    0x0C,
    0x19,
    0x00,
    0x00,
    0x09,
    0x1F,
    0x00,
    0x02,
    0x0A,
    0x1E,
    0x00,
    0x00,
    0x07,
    0x98,
    0x00,
    0x04,
    0x1A,
    0x00,
    0x00,
    0x06,
    0x19,
    0x00,
    0x00,
    0x07,
    0x1D,
    0x00,
    0x02,
    0x0B,
    0x1C,
    0x00,
    0x02,
    0x0A,
    0x98,
    0x00,
    0x04,
    0x16,
    0x00,
    0x02,
    0x0C,
    0x19,
    0x00,
    0x00,
    0x09,
    0x1B,
    0x00,
    0x02,
    0x0A,
    0x1A,
    0x00,
    0x00,
    0x07,
    0x98,
    0x00,
    0x04,
    0x18,
    0x00,
    0x00,
    0x06,
    0x19,
    0x00,
    0x00,
    0x07,
    0x17,
    0x00,
    0x02,
    0x0B,
    0x16,
    0x00,
    0x02,
    0x0A,
    0x00,
    0x00,
    0x00,
    0x00,
    0x00,
    0x00,
    0x00,
    0x00,
    0x00,
    0x00,
    0x00,
    0x00,
    0x00,
    0x00,
    0x00,
    0x00,
    0x00,
    0x00,
    0x00,
    0x00,
    0x00,
    0x00,
    0x00,
    0x00,
    0x00,
    0x00,
    0x00,
    0x00,
    0x00,
    0x00,
    0x00,
    0x00,
    /* padding */
    0x00,
    0x00,
    0x00,
    0x00,
    0x00,
    0x00,
    0x00,
    0x00,
    0x00,
    0x00,
    0x00,
    0x00,
    0x00,
    0x00,
    0x00,
    0x00,
    0x00,
    0x00,
    0x00,
    0x00,
    0x00,
};

/* 80524838-80524918 00D4+0C s=1 e=0 z=0  None .data      l_M_TenGusaDL */
SECTION_DATA static u8 l_M_TenGusaDL[212 + 12 /* padding */] = {
    0x98,
    0x00,
    0x03,
    0x4D,
    0x00,
    0x04,
    0x0F,
    0x4E,
    0x00,
    0x00,
    0x12,
    0x4F,
    0x00,
    0x00,
    0x13,
    0x98,
    0x00,
    0x03,
    0x4A,
    0x00,
    0x04,
    0x0F,
    0x4B,
    0x00,
    0x00,
    0x12,
    0x4C,
    0x00,
    0x00,
    0x13,
    0x98,
    0x00,
    0x03,
    0x47,
    0x00,
    0x04,
    0x0F,
    0x48,
    0x00,
    0x00,
    0x10,
    0x49,
    0x00,
    0x00,
    0x11,
    0x98,
    0x00,
    0x03,
    0x44,
    0x00,
    0x04,
    0x0F,
    0x45,
    0x00,
    0x00,
    0x12,
    0x46,
    0x00,
    0x00,
    0x13,
    0x98,
    0x00,
    0x03,
    0x41,
    0x00,
    0x04,
    0x0F,
    0x42,
    0x00,
    0x00,
    0x12,
    0x43,
    0x00,
    0x00,
    0x13,
    0x98,
    0x00,
    0x03,
    0x3E,
    0x00,
    0x04,
    0x0F,
    0x3F,
    0x00,
    0x00,
    0x10,
    0x40,
    0x00,
    0x00,
    0x11,
    0x98,
    0x00,
    0x03,
    0x3B,
    0x00,
    0x04,
    0x0F,
    0x3C,
    0x00,
    0x00,
    0x12,
    0x3D,
    0x00,
    0x00,
    0x13,
    0x98,
    0x00,
    0x03,
    0x38,
    0x00,
    0x04,
    0x0F,
    0x39,
    0x00,
    0x00,
    0x12,
    0x3A,
    0x00,
    0x00,
    0x13,
    0x98,
    0x00,
    0x03,
    0x35,
    0x00,
    0x04,
    0x0F,
    0x36,
    0x00,
    0x00,
    0x10,
    0x37,
    0x00,
    0x00,
    0x11,
    0x98,
    0x00,
    0x03,
    0x32,
    0x00,
    0x04,
    0x0F,
    0x33,
    0x00,
    0x00,
    0x12,
    0x34,
    0x00,
    0x00,
    0x13,
    0x98,
    0x00,
    0x03,
    0x2F,
    0x00,
    0x04,
    0x0F,
    0x30,
    0x00,
    0x00,
    0x12,
    0x31,
    0x00,
    0x00,
    0x13,
    0x98,
    0x00,
    0x03,
    0x2C,
    0x00,
    0x04,
    0x0F,
    0x2D,
    0x00,
    0x00,
    0x10,
    0x2E,
    0x00,
    0x00,
    0x11,
    0x00,
    0x00,
    0x00,
    0x00,
    0x00,
    0x00,
    0x00,
    0x00,
    0x00,
    0x00,
    0x00,
    0x00,
    0x00,
    0x00,
    0x00,
    0x00,
    0x00,
    0x00,
    0x00,
    0x00,
    0x00,
    0x00,
    0x00,
    0x00,
    0x00,
    0x00,
    0x00,
    0x00,
    0x00,
    0x00,
    0x00,
    0x00,
    /* padding */
    0x00,
    0x00,
    0x00,
    0x00,
    0x00,
    0x00,
    0x00,
    0x00,
    0x00,
    0x00,
    0x00,
    0x00,
};

/* 80524918-805249D8 00A8+18 s=2 e=0 z=0  None .data      l_Tengusa_matDL */
SECTION_DATA static u8 l_Tengusa_matDL[168 + 24 /* padding */] = {
    0x61,
    0x80,
    0x00,
    0x01,
    0x31,
    0x61,
    0x84,
    0x00,
    0x00,
    0x00,
    0x61,
    0x88,
    0x50,
    0x7C,
    0x1F,
    0x61,
    0x94,
    0x00,
    0x00,
    0x00,
    0x61,
    0x30,
    0x00,
    0x00,
    0x1F,
    0x61,
    0x31,
    0x00,
    0x00,
    0x1F,
    0x10,
    0x00,
    0x00,
    0x10,
    0x40,
    0xFF,
    0xFF,
    0x42,
    0x80,
    0x08,
    0x30,
    0x3C,
    0xF3,
    0xCF,
    0x00,
    0x10,
    0x00,
    0x00,
    0x10,
    0x18,
    0x3C,
    0xF3,
    0xCF,
    0x00,
    0x10,
    0x00,
    0x00,
    0x10,
    0x0E,
    0x00,
    0x00,
    0x7F,
    0x3B,
    0x61,
    0x28,
    0x04,
    0x00,
    0x40,
    0x61,
    0x28,
    0x04,
    0x00,
    0x40,
    0x61,
    0xC0,
    0x08,
    0xFA,
    0x8F,
    0x61,
    0xC1,
    0x0A,
    0xEA,
    0xD0,
    0x61,
    0xC2,
    0x28,
    0xF1,
    0x40,
    0x61,
    0xC3,
    0xC8,
    0xFF,
    0xC0,
    0x61,
    0x43,
    0x00,
    0x00,
    0x01,
    0x61,
    0x40,
    0x00,
    0x00,
    0x17,
    0x61,
    0x41,
    0x00,
    0x31,
    0x0C,
    0x61,
    0xF3,
    0x1E,
    0xFF,
    0x80,
    0x10,
    0x00,
    0x00,
    0x10,
    0x3F,
    0x00,
    0x00,
    0x00,
    0x01,
    0x10,
    0x00,
    0x00,
    0x10,
    0x09,
    0x00,
    0x00,
    0x00,
    0x01,
    0x61,
    0x00,
    0x00,
    0x04,
    0x11,
    0x00,
    0x00,
    0x00,
    0x00,
    0x00,
    0x00,
    0x00,
    0x00,
    0x00,
    0x00,
    0x00,
    0x00,
    0x00,
    0x00,
    0x00,
    0x00,
    0x00,
    0x00,
    0x00,
    0x00,
    0x00,
    0x00,
    0x00,
    0x00,
    0x00,
    0x00,
    0x00,
    0x00,
    0x00,
    0x00,
    0x00,
    0x00,
    /* padding */
    0x00,
    0x00,
    0x00,
    0x00,
    0x00,
    0x00,
    0x00,
    0x00,
    0x00,
    0x00,
    0x00,
    0x00,
    0x00,
    0x00,
    0x00,
    0x00,
    0x00,
    0x00,
    0x00,
    0x00,
    0x00,
    0x00,
    0x00,
    0x00,
};

/* 805249D8-80524A98 00A8+18 s=2 e=0 z=0  None .data      l_kusa9q_matDL */
SECTION_DATA static u8 l_kusa9q_matDL[168 + 24 /* padding */] = {
    0x61,
    0x80,
    0x00,
    0x01,
    0x31,
    0x61,
    0x84,
    0x00,
    0x00,
    0x00,
    0x61,
    0x88,
    0x50,
    0x7C,
    0x1F,
    0x61,
    0x94,
    0x00,
    0x00,
    0x00,
    0x61,
    0x30,
    0x00,
    0x00,
    0x1F,
    0x61,
    0x31,
    0x00,
    0x00,
    0x1F,
    0x10,
    0x00,
    0x00,
    0x10,
    0x40,
    0xFF,
    0xFF,
    0x42,
    0x80,
    0x08,
    0x30,
    0x3C,
    0xF3,
    0xCF,
    0x00,
    0x10,
    0x00,
    0x00,
    0x10,
    0x18,
    0x3C,
    0xF3,
    0xCF,
    0x00,
    0x10,
    0x00,
    0x00,
    0x10,
    0x0E,
    0x00,
    0x00,
    0x7F,
    0x3B,
    0x61,
    0x28,
    0x04,
    0x00,
    0x40,
    0x61,
    0x28,
    0x04,
    0x00,
    0x40,
    0x61,
    0xC0,
    0x08,
    0xFA,
    0x8F,
    0x61,
    0xC1,
    0x0A,
    0xEA,
    0xD0,
    0x61,
    0xC2,
    0x28,
    0xF1,
    0x40,
    0x61,
    0xC3,
    0xC8,
    0xFF,
    0xC0,
    0x61,
    0x43,
    0x00,
    0x00,
    0x01,
    0x61,
    0x40,
    0x00,
    0x00,
    0x17,
    0x61,
    0x41,
    0x00,
    0x31,
    0x0C,
    0x61,
    0xF3,
    0x1E,
    0xFF,
    0x80,
    0x10,
    0x00,
    0x00,
    0x10,
    0x3F,
    0x00,
    0x00,
    0x00,
    0x01,
    0x10,
    0x00,
    0x00,
    0x10,
    0x09,
    0x00,
    0x00,
    0x00,
    0x01,
    0x61,
    0x00,
    0x00,
    0x04,
    0x11,
    0x00,
    0x00,
    0x00,
    0x00,
    0x00,
    0x00,
    0x00,
    0x00,
    0x00,
    0x00,
    0x00,
    0x00,
    0x00,
    0x00,
    0x00,
    0x00,
    0x00,
    0x00,
    0x00,
    0x00,
    0x00,
    0x00,
    0x00,
    0x00,
    0x00,
    0x00,
    0x00,
    0x00,
    0x00,
    0x00,
    0x00,
    0x00,
    /* padding */
    0x00,
    0x00,
    0x00,
    0x00,
    0x00,
    0x00,
    0x00,
    0x00,
    0x00,
    0x00,
    0x00,
    0x00,
    0x00,
    0x00,
    0x00,
    0x00,
    0x00,
    0x00,
    0x00,
    0x00,
    0x00,
    0x00,
    0x00,
    0x00,
};

/* 80524A98-80524B40 00A8+00 s=2 e=0 z=0  None .data      l_kusa9q_l4_matDL */
SECTION_DATA static u8 l_kusa9q_l4_matDL[168] = {
    0x61, 0x80, 0x00, 0x01, 0x31, 0x61, 0x84, 0x00, 0x00, 0x00, 0x61, 0x88, 0x50, 0x7C, 0x1F, 0x61,
    0x94, 0x00, 0x00, 0x00, 0x61, 0x30, 0x00, 0x00, 0x1F, 0x61, 0x31, 0x00, 0x00, 0x1F, 0x10, 0x00,
    0x00, 0x10, 0x40, 0xFF, 0xFF, 0x42, 0x80, 0x08, 0x30, 0x3C, 0xF3, 0xCF, 0x00, 0x10, 0x00, 0x00,
    0x10, 0x18, 0x3C, 0xF3, 0xCF, 0x00, 0x10, 0x00, 0x00, 0x10, 0x0E, 0x00, 0x00, 0x0F, 0x3B, 0x61,
    0x28, 0x04, 0x00, 0x40, 0x61, 0x28, 0x04, 0x00, 0x40, 0x61, 0xC0, 0x08, 0xFA, 0x8F, 0x61, 0xC1,
    0x0A, 0xEA, 0xD0, 0x61, 0xC2, 0x28, 0xF1, 0x40, 0x61, 0xC3, 0xC8, 0xFF, 0xC0, 0x61, 0x43, 0x00,
    0x00, 0x01, 0x61, 0x40, 0x00, 0x00, 0x17, 0x61, 0x41, 0x00, 0x31, 0x0C, 0x61, 0xF3, 0x1E, 0xFF,
    0x80, 0x10, 0x00, 0x00, 0x10, 0x3F, 0x00, 0x00, 0x00, 0x01, 0x10, 0x00, 0x00, 0x10, 0x09, 0x00,
    0x00, 0x00, 0x01, 0x61, 0x00, 0x00, 0x04, 0x11, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
};

/* 80524B40-80524B4C 000C+00 s=1 e=0 z=0  None .data      @4620 */
SECTION_DATA static void* lit_4620[3] = {
    (void*)NULL,
    (void*)0xFFFFFFFF,
    (void*)deleteRoom__15dGrass_packet_cFi,
};

/* 80524B4C-80524B74 0028+00 s=1 e=0 z=0  None .data      l_vtxDescList$4654 */
SECTION_DATA static u8 l_vtxDescList[40] = {
    0x00, 0x00, 0x00, 0x09, 0x00, 0x00, 0x00, 0x02, 0x00, 0x00, 0x00, 0x0A, 0x00, 0x00,
    0x00, 0x02, 0x00, 0x00, 0x00, 0x0B, 0x00, 0x00, 0x00, 0x02, 0x00, 0x00, 0x00, 0x0D,
    0x00, 0x00, 0x00, 0x02, 0x00, 0x00, 0x00, 0xFF, 0x00, 0x00, 0x00, 0x00,
};

/* 80524B74-80524BD8 0050+14 s=1 e=0 z=0  None .data      l_vtxAttrFmtList$4655 */
SECTION_DATA static u8 l_vtxAttrFmtList[80 + 20 /* padding */] = {
    0x00,
    0x00,
    0x00,
    0x09,
    0x00,
    0x00,
    0x00,
    0x01,
    0x00,
    0x00,
    0x00,
    0x04,
    0x00,
    0x00,
    0x00,
    0x00,
    0x00,
    0x00,
    0x00,
    0x0A,
    0x00,
    0x00,
    0x00,
    0x00,
    0x00,
    0x00,
    0x00,
    0x04,
    0x00,
    0x00,
    0x00,
    0x00,
    0x00,
    0x00,
    0x00,
    0x0B,
    0x00,
    0x00,
    0x00,
    0x01,
    0x00,
    0x00,
    0x00,
    0x05,
    0x00,
    0x00,
    0x00,
    0x00,
    0x00,
    0x00,
    0x00,
    0x0D,
    0x00,
    0x00,
    0x00,
    0x01,
    0x00,
    0x00,
    0x00,
    0x04,
    0x00,
    0x00,
    0x00,
    0x00,
    0x00,
    0x00,
    0x00,
    0xFF,
    0x00,
    0x00,
    0x00,
    0x01,
    0x00,
    0x00,
    0x00,
    0x01,
    0x00,
    0x00,
    0x00,
    0x00,
    /* padding */
    0x00,
    0x00,
    0x00,
    0x00,
    0x00,
    0x00,
    0x00,
    0x00,
    0x00,
    0x00,
    0x00,
    0x00,
    0x00,
    0x00,
    0x00,
    0x00,
    0x00,
    0x00,
    0x00,
    0x00,
};

/* 80524BD8-805253D8 0800+00 s=1 e=0 z=0  None .data      l_J_Ohana00_64TEX */
SECTION_DATA static u8 l_J_Ohana00_64TEX[2048] = {
    0x5B, 0x26, 0x63, 0x46, 0x95, 0x7F, 0xBF, 0x7F, 0x42, 0x85, 0x63, 0x46, 0x5A, 0xEA, 0xF2, 0xFC,
    0x4A, 0xC6, 0x5B, 0x05, 0x7F, 0xAF, 0x6B, 0x82, 0x00, 0x00, 0x42, 0xA6, 0xFF, 0xFF, 0xFF, 0x7F,
    0x53, 0x27, 0x42, 0x84, 0xA5, 0xAB, 0xFF, 0xC0, 0x53, 0x06, 0x3A, 0x45, 0xEC, 0xE0, 0x68, 0x30,
    0x32, 0x03, 0x53, 0x27, 0x25, 0xC2, 0xFC, 0xFF, 0x3A, 0x64, 0x53, 0x07, 0x59, 0xFA, 0xFE, 0xFC,
    0x5B, 0x66, 0x4A, 0xC6, 0xA0, 0xA5, 0x6F, 0xB6, 0x5B, 0x66, 0x4A, 0xC6, 0x25, 0xFF, 0x7F, 0xFF,
    0x53, 0x07, 0x42, 0x85, 0x0F, 0x83, 0xEB, 0x5F, 0x4A, 0xE7, 0x32, 0x24, 0x00, 0x82, 0x7A, 0xDE,
    0x5B, 0x67, 0x42, 0xA6, 0xE0, 0xFE, 0xFA, 0xDE, 0x5B, 0x47, 0x4A, 0xE7, 0x08, 0xFB, 0xDB, 0xBA,
    0x4A, 0xE7, 0x32, 0x03, 0x28, 0xA6, 0xB5, 0xAD, 0x4A, 0xE6, 0x32, 0x03, 0x00, 0x00, 0x82, 0x6B,
    0x5B, 0x47, 0x42, 0xA6, 0x00, 0xEA, 0xFA, 0xDB, 0x53, 0x27, 0x42, 0x86, 0x00, 0xAF, 0xB7, 0xF5,
    0x4A, 0xE6, 0x32, 0x03, 0xB8, 0x36, 0x25, 0xB5, 0x4A, 0xE6, 0x32, 0x03, 0x2F, 0x2B, 0xEB, 0x5F,
    0x53, 0x07, 0x32, 0x24, 0x00, 0xA8, 0xFE, 0xD7, 0x42, 0xC7, 0x32, 0x24, 0x20, 0x00, 0x2A, 0xA7,
    0x3A, 0x65, 0x29, 0xE3, 0x37, 0x95, 0x35, 0x1B, 0x3A, 0x44, 0x29, 0xC2, 0x00, 0x68, 0x75, 0x95,
    0x42, 0xC6, 0x2A, 0x04, 0x08, 0x2A, 0xB5, 0xD5, 0x32, 0x26, 0x21, 0xA3, 0x0F, 0x0A, 0xBD, 0xFF,
    0x32, 0x24, 0x21, 0x82, 0x20, 0xBA, 0xFB, 0x9A, 0x29, 0xA3, 0x29, 0xE3, 0x5B, 0xFF, 0xFF, 0xFF,
    0x21, 0xA3, 0x32, 0x04, 0x05, 0xA9, 0xA7, 0xAF, 0x00, 0x00, 0x32, 0x04, 0x7F, 0xFF, 0xFF, 0xFF,
    0x29, 0xE3, 0x29, 0xE3, 0xFF, 0xFF, 0xFF, 0xFF, 0xA5, 0x2F, 0xA5, 0x2F, 0xFF, 0xFF, 0xFF, 0xFF,
    0x4A, 0xE6, 0x3A, 0x23, 0xA0, 0x9C, 0x32, 0xA0, 0x42, 0x86, 0x53, 0x07, 0x6F, 0x63, 0xA3, 0x83,
    0x5B, 0x26, 0x42, 0xA6, 0x26, 0x2B, 0x2E, 0x86, 0x4A, 0xE7, 0x42, 0x85, 0x2D, 0x03, 0x22, 0x0F,
    0x5B, 0x27, 0x5B, 0x27, 0xFF, 0xFF, 0xFF, 0xFF, 0x63, 0x68, 0x63, 0x68, 0xFF, 0xFF, 0xFF, 0xFF,
    0x31, 0xE3, 0x42, 0x85, 0xFF, 0xBF, 0x4F, 0x63, 0xA5, 0x2F, 0xA5, 0x2F, 0xFF, 0xFF, 0xFF, 0xFF,
    0x29, 0xE2, 0x42, 0x85, 0xA9, 0xC2, 0xFC, 0xFF, 0x21, 0x81, 0x3A, 0x65, 0x69, 0xAA, 0x03, 0x43,
    0xAD, 0x4F, 0xAD, 0x4F, 0xFF, 0xFF, 0xFF, 0xFF, 0x9D, 0x0E, 0x9D, 0x0E, 0xFF, 0xFF, 0xFF, 0xFF,
    0x21, 0xA1, 0x3A, 0x64, 0x55, 0xA9, 0xC0, 0xFC, 0x32, 0x24, 0x21, 0xA1, 0xA0, 0xBE, 0xDF, 0x57,
    0x21, 0x81, 0x21, 0x81, 0xFF, 0xFF, 0xFF, 0xFF, 0x00, 0x00, 0x21, 0x81, 0xFD, 0xFF, 0xFF, 0xFF,
    0x3A, 0x44, 0x29, 0xA2, 0x0D, 0x8F, 0xF7, 0x55, 0x3A, 0x44, 0x29, 0xA2, 0xD8, 0xB8, 0xFF, 0x55,
    0x00, 0x00, 0x21, 0x81, 0x55, 0xFF, 0xFF, 0xFF, 0x21, 0x81, 0x21, 0x82, 0x55, 0xFF, 0xFF, 0xFF,
    0x29, 0xC2, 0x32, 0x24, 0x05, 0x82, 0x82, 0xFF, 0x21, 0x81, 0x29, 0xE3, 0x66, 0x5A, 0x68, 0xFF,
    0x00, 0x00, 0x21, 0x81, 0x7F, 0xFF, 0xFF, 0xFF, 0x21, 0x82, 0x21, 0x82, 0xFF, 0xFF, 0xFF, 0xFF,
    0x21, 0xA2, 0x29, 0xE3, 0x58, 0x4F, 0x3F, 0xFF, 0x21, 0x81, 0x21, 0x81, 0xFF, 0xFF, 0xFF, 0xFF,
    0xA5, 0x0E, 0xA5, 0x0E, 0xFF, 0xFF, 0xFF, 0xFF, 0xAD, 0x4F, 0xAD, 0x4F, 0xFF, 0xFF, 0xFF, 0xFF,
    0xA5, 0x4F, 0xA5, 0x4F, 0xFF, 0xFF, 0xFF, 0xFF, 0xAD, 0x4F, 0xAD, 0x4F, 0xFF, 0xFF, 0xFF, 0xFF,
    0xAD, 0x6F, 0xAD, 0x6F, 0xFF, 0xFF, 0xFF, 0xFF, 0xCE, 0x51, 0xCE, 0x51, 0xFF, 0xFF, 0xFF, 0xFF,
    0x5B, 0x27, 0x32, 0x24, 0xCB, 0x4B, 0x4A, 0xCA, 0x4A, 0xE6, 0x32, 0x03, 0x82, 0x7A, 0x97, 0x2D,
    0x53, 0x27, 0x4A, 0xC5, 0x4A, 0x80, 0xCE, 0x48, 0x4B, 0x07, 0x3A, 0x65, 0x25, 0x0B, 0x02, 0x02,
    0x29, 0xA2, 0x42, 0x85, 0x68, 0x60, 0x6F, 0xAF, 0x73, 0xE9, 0x73, 0xE9, 0xFF, 0xFF, 0xFF, 0xFF,
    0x29, 0xC2, 0x3A, 0x44, 0x5F, 0x5B, 0x63, 0x60, 0x21, 0xA1, 0x21, 0xA1, 0xFF, 0xFF, 0xFF, 0xFF,
    0xAD, 0x4F, 0xAD, 0x4F, 0xFF, 0xFF, 0xFF, 0xFF, 0xAD, 0x4F, 0xAD, 0x4F, 0xFF, 0xFF, 0xFF, 0xFF,
    0xAD, 0x4F, 0xAD, 0x4F, 0xFF, 0xFF, 0xFF, 0xFF, 0xAD, 0x4F, 0xAD, 0x4F, 0xFF, 0xFF, 0xFF, 0xFF,
    0xAD, 0x4F, 0xAD, 0x4F, 0xFF, 0xFF, 0xFF, 0xFF, 0xAD, 0x4F, 0xAD, 0x4F, 0xFF, 0xFF, 0xFF, 0xFF,
    0xAD, 0x4F, 0xAD, 0x4F, 0xFF, 0xFF, 0xFF, 0xFF, 0xAD, 0x4F, 0xAD, 0x4F, 0xFF, 0xFF, 0xFF, 0xFF,
    0xAD, 0x4F, 0xAD, 0x4F, 0xFF, 0xFF, 0xFF, 0xFF, 0xAD, 0x4F, 0xAD, 0x4F, 0xFF, 0xFF, 0xFF, 0xFF,
    0xAD, 0x4F, 0xAD, 0x4F, 0xFF, 0xFF, 0xFF, 0xFF, 0xAD, 0x4F, 0xAD, 0x4F, 0xFF, 0xFF, 0xFF, 0xFF,
    0xAD, 0x4F, 0xAD, 0x4F, 0xFF, 0xFF, 0xFF, 0xFF, 0xAD, 0x4F, 0xAD, 0x4F, 0xFF, 0xFF, 0xFF, 0xFF,
    0xBD, 0xD0, 0xBD, 0xD0, 0xFF, 0xFF, 0xFF, 0xFF, 0xE7, 0x15, 0xE7, 0x15, 0xFF, 0xFF, 0xFF, 0xFF,
    0xC6, 0x30, 0xC6, 0x30, 0xFF, 0xFF, 0xFF, 0xFF, 0xBD, 0xCE, 0xBD, 0xCE, 0xFF, 0xFF, 0xFF, 0xFF,
    0xA5, 0x2D, 0xA5, 0x2D, 0xFF, 0xFF, 0xFF, 0xFF, 0xDE, 0xD1, 0xDE, 0xD1, 0xFF, 0xFF, 0xFF, 0xFF,
    0xA5, 0x0D, 0xA5, 0x0D, 0xFF, 0xFF, 0xFF, 0xFF, 0x94, 0x8C, 0xBD, 0xB1, 0xFF, 0xFF, 0xFF, 0xF1,
    0xB5, 0xAF, 0xEF, 0x58, 0xFF, 0xFC, 0xF1, 0xC9, 0xEF, 0x59, 0xB5, 0x07, 0xE0, 0x00, 0x02, 0x09,
    0x53, 0x07, 0x42, 0x65, 0x88, 0x0F, 0x89, 0x01, 0x4A, 0xE6, 0x3A, 0x64, 0x03, 0x02, 0x69, 0x7D,
    0x4A, 0xE6, 0x42, 0x85, 0x01, 0x09, 0x2B, 0x25, 0x3A, 0x44, 0x31, 0xE3, 0x00, 0x08, 0x0D, 0x2D,
    0x3A, 0x44, 0x29, 0xA2, 0x2F, 0x0B, 0xAD, 0xBD, 0x21, 0xA1, 0x21, 0xA2, 0xFF, 0xFF, 0x7F, 0x7F,
    0x29, 0xA2, 0x32, 0x23, 0x9B, 0x5F, 0x5F, 0x0F, 0x21, 0xA1, 0x21, 0xA1, 0xFF, 0xFF, 0xFF, 0xFF,
    0xAD, 0x4F, 0xAD, 0x4F, 0xFF, 0xFF, 0xFF, 0xFF, 0xAD, 0x4F, 0xAD, 0x4F, 0xFF, 0xFF, 0xFF, 0xFF,
    0xAD, 0x4F, 0xAD, 0x4F, 0xFF, 0xFF, 0xFF, 0xFF, 0xAD, 0x4F, 0xAD, 0x4F, 0xFF, 0xFF, 0xFF, 0xFF,
    0xAD, 0x4F, 0xAD, 0x4F, 0xFF, 0xFF, 0xFF, 0xFF, 0xAD, 0x4F, 0xAD, 0x4F, 0xFF, 0xFF, 0xFF, 0xFF,
    0xAD, 0x4F, 0xAD, 0x4F, 0xFF, 0xFF, 0xFF, 0xFF, 0xAD, 0x4F, 0xAD, 0x4F, 0xFF, 0xFF, 0xFF, 0xFF,
    0xBD, 0xF0, 0xBD, 0xF0, 0xFF, 0xFF, 0xFF, 0xFF, 0xCE, 0x71, 0xCE, 0x71, 0xFF, 0xFF, 0xFF, 0xFF,
    0xEF, 0x56, 0xEF, 0x56, 0xFF, 0xFF, 0xFF, 0xFF, 0xE7, 0x33, 0xE7, 0x33, 0xFF, 0xFF, 0xFF, 0xFF,
    0xD6, 0xB3, 0xD6, 0xB3, 0xFF, 0xFF, 0xFF, 0xFF, 0x00, 0x00, 0xC5, 0xCE, 0xFF, 0xFF, 0xFF, 0xFD,
    0xA5, 0x2C, 0xD6, 0x93, 0xFF, 0xFF, 0xFF, 0x40, 0xAD, 0x4D, 0xD6, 0x95, 0xF9, 0xF9, 0xE1, 0x00,
    0xCD, 0xEF, 0xEF, 0x7A, 0xFF, 0xF2, 0x25, 0x95, 0xB5, 0x90, 0xE7, 0x18, 0xC3, 0x54, 0x54, 0x58,
    0xEF, 0x5A, 0xB5, 0x70, 0x00, 0x00, 0x00, 0xD5, 0xDE, 0xD7, 0x9C, 0xEE, 0x01, 0x01, 0x29, 0xFD,
    0xEF, 0x58, 0xAD, 0x70, 0x70, 0x42, 0x43, 0xC2, 0xD6, 0x71, 0xAC, 0xC4, 0x09, 0x2D, 0xAD, 0xFD,
    0xEF, 0x79, 0xB5, 0x4B, 0x8A, 0x8F, 0x8B, 0xC9, 0xC5, 0xCD, 0xAC, 0xA4, 0x1A, 0x18, 0x1C, 0xAC,
    0x4A, 0xC7, 0x32, 0x04, 0x0B, 0x82, 0x42, 0x43, 0x42, 0x85, 0x29, 0xE3, 0xB7, 0x35, 0x25, 0xAD,
    0x42, 0xA7, 0x2A, 0x04, 0xC2, 0x03, 0x49, 0x8D, 0x29, 0xC3, 0x3A, 0x65, 0x50, 0xA0, 0x00, 0xA3,
    0x29, 0xC3, 0x32, 0x03, 0x43, 0x5B, 0x6B, 0x8F, 0x21, 0xA1, 0x21, 0xA1, 0xFF, 0xFF, 0xFF, 0xFF,
    0x29, 0xA2, 0x29, 0xE3, 0x9F, 0x6F, 0xBF, 0xFF, 0x9C, 0xED, 0x9C, 0xED, 0xFF, 0xFF, 0xFF, 0xFF,
    0xAD, 0x4F, 0xAD, 0x4F, 0xFF, 0xFF, 0xFF, 0xFF, 0xAD, 0x4F, 0xAD, 0x4F, 0xFF, 0xFF, 0xFF, 0xFF,
    0xAD, 0x4F, 0xAD, 0x4F, 0xFF, 0xFF, 0xFF, 0xFF, 0xAD, 0x4F, 0xAD, 0x4F, 0xFF, 0xFF, 0xFF, 0xFF,
    0xAD, 0x4F, 0xAD, 0x4F, 0xFF, 0xFF, 0xFF, 0xFF, 0xD6, 0x94, 0xD6, 0x94, 0xFF, 0xFF, 0xFF, 0xFF,
    0xCE, 0x51, 0xCE, 0x51, 0xFF, 0xFF, 0xFF, 0xFF, 0x00, 0x00, 0xBD, 0x6C, 0xFF, 0xFF, 0xFF, 0xFD,
    0xEF, 0x7A, 0xEF, 0x7A, 0xFF, 0xFF, 0xFF, 0xFF, 0xCE, 0x50, 0xEF, 0x78, 0xF5, 0xDA, 0x68, 0xA0,
    0xAD, 0x4D, 0xE7, 0x15, 0xFF, 0xFD, 0xF9, 0x02, 0xE7, 0x15, 0xB5, 0x8F, 0x37, 0x37, 0xBA, 0x56,
    0xD6, 0x93, 0xB5, 0x6D, 0x09, 0x82, 0xDF, 0xD7, 0xE7, 0x15, 0xAD, 0x4D, 0x58, 0x60, 0x80, 0x00,
    0xEF, 0x9A, 0x84, 0x29, 0xBA, 0xBC, 0xBC, 0xB4, 0xEF, 0x9A, 0xCE, 0x2D, 0x2B, 0x2D, 0x2D, 0x25,
    0xF7, 0x9A, 0xCE, 0x2F, 0xB5, 0x00, 0x80, 0xB7, 0xEF, 0x79, 0x73, 0xA9, 0xF5, 0x2D, 0x02, 0x02,
    0xD6, 0x6F, 0xAC, 0xE5, 0x2A, 0xAE, 0x7E, 0x57, 0xC5, 0xCD, 0xA4, 0xA4, 0x08, 0x0D, 0xA2, 0xB8,
    0xE7, 0x38, 0x84, 0x2A, 0xC3, 0x43, 0x63, 0x93, 0xDE, 0xF5, 0xAD, 0x2B, 0x7F, 0xFF, 0x55, 0x58,
    0xCE, 0x6F, 0x7B, 0xA7, 0x25, 0x0D, 0x86, 0xA4, 0xEF, 0x56, 0x94, 0xAB, 0x40, 0x00, 0x02, 0x03,
    0x19, 0x42, 0x3A, 0x46, 0x96, 0x9A, 0x1A, 0x2B, 0x29, 0xC3, 0x29, 0xE3, 0x1F, 0x5F, 0x7F, 0xFF,
    0x21, 0x83, 0x32, 0x26, 0x2B, 0x1F, 0x2F, 0xBF, 0x21, 0xA2, 0x21, 0xA2, 0xFF, 0xFF, 0xFF, 0xFF,
    0x21, 0xA1, 0x21, 0xA1, 0xFF, 0xFF, 0xFF, 0xFF, 0xAD, 0x4F, 0xAD, 0x4F, 0xFF, 0xFF, 0xFF, 0xFF,
    0xAD, 0x4F, 0xAD, 0x4F, 0xFF, 0xFF, 0xFF, 0xFF, 0xAD, 0x4F, 0xAD, 0x4F, 0xFF, 0xFF, 0xFF, 0xFF,
    0xAD, 0x4F, 0xAD, 0x4F, 0xFF, 0xFF, 0xFF, 0xFF, 0xAD, 0x4F, 0xAD, 0x4F, 0xFF, 0xFF, 0xFF, 0xFF,
    0xAD, 0x4F, 0xAD, 0x4F, 0xFF, 0xFF, 0xFF, 0xFF, 0xEF, 0x79, 0xEF, 0x79, 0xFF, 0xFF, 0xFF, 0xFF,
    0xAD, 0x4D, 0xAD, 0x4D, 0xFF, 0xFF, 0xFF, 0xFF, 0xAD, 0x2D, 0xE7, 0x38, 0xF8, 0xF2, 0xC9, 0xC9,
    0xB5, 0x4D, 0xBD, 0xEE, 0xFF, 0xFD, 0xF0, 0xC0, 0xB5, 0x8F, 0xEF, 0x5A, 0xC9, 0x85, 0x85, 0x09,
    0xEF, 0x99, 0xB5, 0x90, 0x68, 0x80, 0x00, 0x00, 0xEF, 0x78, 0xA5, 0x0D, 0x2D, 0x00, 0x00, 0x02,
    0xEF, 0x77, 0xC6, 0x0B, 0x02, 0x03, 0x0B, 0x05, 0xD6, 0x8E, 0xBD, 0x89, 0x01, 0x43, 0xD8, 0xD6,
    0xD6, 0x92, 0x5A, 0xC5, 0xF4, 0x37, 0x0B, 0x02, 0xEF, 0x79, 0x73, 0x88, 0x2B, 0x2F, 0xAF, 0x7A,
    0xDE, 0xF6, 0xB5, 0x06, 0x68, 0x58, 0x96, 0xAF, 0xCE, 0x73, 0x6B, 0x46, 0x9E, 0x27, 0x09, 0xAB,
    0xD6, 0xB5, 0xA4, 0xEA, 0xD5, 0x75, 0xD7, 0xD4, 0xE6, 0xF5, 0x83, 0xE8, 0xD5, 0xFF, 0x0A, 0x00,
    0xE7, 0x16, 0x7B, 0xE8, 0xF8, 0xF0, 0x70, 0x70, 0xEF, 0x79, 0xD6, 0x8D, 0xAE, 0x2F, 0x3F, 0x3D,
    0xDE, 0xF5, 0x73, 0x88, 0x5C, 0xD4, 0xB7, 0x09, 0xDE, 0xCF, 0xAC, 0xC4, 0x09, 0x0D, 0x35, 0x75,
    0xDE, 0xF1, 0xBD, 0x69, 0x01, 0x00, 0xA8, 0xFD, 0xD6, 0x71, 0x7B, 0xA8, 0x7F, 0x9F, 0x37, 0x27,
    0x63, 0x48, 0x63, 0x48, 0xFF, 0xFF, 0xFF, 0xFF, 0xAD, 0x4F, 0xAD, 0x4F, 0xFF, 0xFF, 0xFF, 0xFF,
    0xAD, 0x4F, 0xAD, 0x4F, 0xFF, 0xFF, 0xFF, 0xFF, 0xAD, 0x4F, 0xAD, 0x4F, 0xFF, 0xFF, 0xFF, 0xFF,
    0xAD, 0x4F, 0xAD, 0x4F, 0xFF, 0xFF, 0xFF, 0xFF, 0xAD, 0x4F, 0xAD, 0x4F, 0xFF, 0xFF, 0xFF, 0xFF,
    0xAD, 0x4F, 0xAD, 0x4F, 0xFF, 0xFF, 0xFF, 0xFF, 0xAD, 0x4F, 0xAD, 0x4F, 0xFF, 0xFF, 0xFF, 0xFF,
    0xAD, 0x4F, 0xAD, 0x4F, 0xFF, 0xFF, 0xFF, 0xFF, 0xEF, 0x79, 0xEF, 0x79, 0xFF, 0xFF, 0xFF, 0xFF,
    0xAD, 0x4F, 0xAD, 0x4F, 0xFF, 0xFF, 0xFF, 0xFF, 0xB5, 0xB1, 0xEF, 0x79, 0xF2, 0xF9, 0xC9, 0xC5,
    0xCE, 0x50, 0xB5, 0x4C, 0x9E, 0xBC, 0x7C, 0xE8, 0xEF, 0x59, 0xAD, 0x4D, 0xBC, 0xA7, 0xA5, 0xB5,
    0xEF, 0x79, 0xD6, 0xB1, 0xFD, 0x00, 0x00, 0x00, 0xE7, 0x16, 0xCD, 0xEE, 0x82, 0x2E, 0xBD, 0xA9,
    0xEF, 0x79, 0xB5, 0x27, 0x09, 0x01, 0x82, 0x60, 0xD6, 0xB0, 0xAC, 0xE5, 0xF7, 0x7D, 0xD5, 0x35,
    0xDE, 0xB4, 0x6B, 0x67, 0xF8, 0x36, 0x8D, 0xA3, 0xD6, 0x4D, 0x6B, 0x46, 0x2A, 0x2A, 0xAA, 0x7A,
    0xDE, 0xF6, 0xAD, 0x4C, 0x79, 0x55, 0x76, 0x94, 0xDE, 0xD5, 0x8C, 0x6A, 0x55, 0x80, 0x02, 0x02,
    0xD6, 0xB5, 0x6B, 0x47, 0xA0, 0xF0, 0xF0, 0x9E, 0xD6, 0x92, 0xAC, 0xC4, 0x02, 0xAB, 0xDF, 0xF5,
    0xE7, 0x38, 0x6B, 0x46, 0x70, 0xB0, 0xB0, 0xA8, 0xDE, 0xCE, 0xBD, 0x48, 0x03, 0x01, 0x09, 0x0D,
    0xDE, 0xF6, 0xA4, 0xA8, 0x74, 0x55, 0x55, 0x55, 0xD6, 0x70, 0xAC, 0xA4, 0x0B, 0x25, 0x25, 0x4D,
    0xC5, 0x89, 0xA4, 0x83, 0x0F, 0xFD, 0x55, 0x57, 0xF7, 0x9A, 0x73, 0xA8, 0xF5, 0xF7, 0xF8, 0x80,
    0xE7, 0x39, 0x94, 0x24, 0x56, 0x54, 0x54, 0x54, 0xF7, 0x9A, 0xB5, 0x06, 0x03, 0x0D, 0x25, 0xB5,
    0xAD, 0x4F, 0xAD, 0x4F, 0xFF, 0xFF, 0xFF, 0xFF, 0xAD, 0x4F, 0xAD, 0x4F, 0xFF, 0xFF, 0xFF, 0xFF,
    0xAD, 0x4F, 0xAD, 0x4F, 0xFF, 0xFF, 0xFF, 0xFF, 0xAD, 0x4F, 0xAD, 0x4F, 0xFF, 0xFF, 0xFF, 0xFF,
    0xAD, 0x4F, 0xAD, 0x4F, 0xFF, 0xFF, 0xFF, 0xFF, 0xB5, 0x8F, 0xB5, 0x8F, 0xFF, 0xFF, 0xFF, 0xFF,
    0xAD, 0x4F, 0xAD, 0x4F, 0xFF, 0xFF, 0xFF, 0xFF, 0xB5, 0x8F, 0xB5, 0x8F, 0xFF, 0xFF, 0xFF, 0xFF,
    0xEF, 0x55, 0xEF, 0x55, 0xFF, 0xFF, 0xFF, 0xFF, 0xAD, 0x4E, 0xE6, 0xF6, 0xC5, 0xC9, 0xF1, 0xF2,
    0xBD, 0xD0, 0xD6, 0x71, 0xFF, 0xFF, 0xFD, 0xFC, 0xB5, 0x4B, 0xE7, 0x36, 0xE0, 0x82, 0x26, 0x98,
    0xEF, 0x78, 0xDE, 0xB3, 0x00, 0x02, 0x29, 0x75, 0xE6, 0xF5, 0xBD, 0x6B, 0x2D, 0x09, 0x2D, 0x2D,
    0xCE, 0x0F, 0xA4, 0xA8, 0xA0, 0xBA, 0x14, 0x75, 0xC6, 0x10, 0xAC, 0xC8, 0x0B, 0x55, 0x9F, 0x62,
    0xBD, 0x4B, 0x84, 0x09, 0x00, 0x01, 0x09, 0x0A, 0xC6, 0x31, 0x63, 0x26, 0x55, 0x7F, 0xA0, 0x00,
    0xDE, 0xF3, 0x9C, 0xCC, 0x56, 0x5C, 0x50, 0x50, 0xE7, 0x15, 0xAC, 0xA4, 0x02, 0x0A, 0xBF, 0xB5,
    0xBD, 0xEF, 0x5A, 0xE5, 0x56, 0xAB, 0x00, 0x00, 0xD6, 0x90, 0x84, 0x09, 0xA3, 0x6B, 0xD7, 0x0D,
    0xC6, 0x0A, 0xA4, 0xA4, 0xFE, 0x2D, 0xFA, 0x55, 0xC5, 0xCD, 0x8C, 0x4B, 0x0F, 0x03, 0xAD, 0xE6,
    0xBD, 0xF2, 0xA4, 0x83, 0x57, 0x5E, 0xAE, 0xD8, 0xC6, 0x32, 0x8C, 0x4B, 0x61, 0x95, 0xFF, 0x00,
    0xEF, 0x58, 0x8C, 0x6B, 0x78, 0xC0, 0x02, 0x0A, 0xDE, 0xD5, 0xC5, 0x8A, 0x02, 0x02, 0xB5, 0x55,
    0xE7, 0x36, 0x73, 0x88, 0x54, 0x54, 0x56, 0xAF, 0xD6, 0xAD, 0xC5, 0x8A, 0x15, 0x15, 0x37, 0x65,
    0xD6, 0x6E, 0xBD, 0x27, 0x00, 0xA8, 0x57, 0xFD, 0xD6, 0x71, 0x94, 0x6A, 0xFA, 0x2A, 0xAF, 0xED,
};

/* 805253D8-8052569C 02C4+00 s=1 e=0 z=0  None .data      l_flowerPos */
SECTION_DATA static u8 l_flowerPos[708] = {
    0xC0, 0x8C, 0x2C, 0xF7, 0x42, 0x05, 0xBC, 0xDF, 0xC1, 0xA1, 0x00, 0x70, 0xBF, 0x50, 0x51, 0xB9,
    0x42, 0x12, 0x58, 0xAD, 0xC0, 0xDE, 0xCE, 0x40, 0xC1, 0x04, 0x67, 0x23, 0x41, 0xE5, 0x87, 0x25,
    0xC1, 0x1B, 0xF3, 0xF8, 0xC1, 0x8F, 0x17, 0x3E, 0x42, 0x05, 0x7F, 0xC6, 0xC1, 0x83, 0x9B, 0xFC,
    0xC1, 0x65, 0x1D, 0x1B, 0x42, 0x12, 0x1B, 0x94, 0xC0, 0x52, 0x78, 0xE2, 0x41, 0x4A, 0xF2, 0x65,
    0x41, 0xB8, 0x6D, 0xEC, 0xC1, 0x05, 0xB8, 0xB9, 0x41, 0x59, 0xA0, 0x35, 0x41, 0xC8, 0x8E, 0xEA,
    0x3F, 0xD7, 0x00, 0xBD, 0x40, 0xFD, 0x20, 0x08, 0x41, 0xA5, 0x7C, 0x50, 0xC0, 0x1A, 0x58, 0x21,
    0x40, 0x45, 0x4A, 0xF1, 0x41, 0xD5, 0xC3, 0x79, 0xC1, 0x03, 0x76, 0xC0, 0x40, 0x80, 0x01, 0x19,
    0x41, 0xE5, 0xE4, 0x79, 0x3F, 0xE9, 0x10, 0x80, 0xC0, 0xC5, 0xE3, 0xA8, 0x41, 0x8D, 0x10, 0xEF,
    0x41, 0x5D, 0x5E, 0x8F, 0xC1, 0x83, 0x4F, 0x3A, 0x41, 0x95, 0x37, 0x4A, 0x41, 0x13, 0xAB, 0xB0,
    0xC1, 0x0B, 0x2F, 0x13, 0x41, 0x82, 0x79, 0x28, 0x40, 0xBC, 0x27, 0x0F, 0xBF, 0xE5, 0x81, 0x9D,
    0x41, 0xBD, 0xAD, 0xB1, 0x40, 0xAD, 0xAF, 0x4F, 0xC1, 0x40, 0x5C, 0xAB, 0x41, 0xC5, 0xD4, 0x0B,
    0x3F, 0x52, 0x4A, 0x06, 0xC1, 0x92, 0x9C, 0x90, 0x41, 0x6B, 0x5E, 0x96, 0xC1, 0x70, 0xB5, 0x34,
    0x40, 0x09, 0xC7, 0xFC, 0x41, 0xA1, 0xD1, 0xA9, 0xC1, 0x99, 0xED, 0xD6, 0x40, 0x93, 0x3C, 0x3E,
    0x41, 0x91, 0x1A, 0x4B, 0xC0, 0xFD, 0x15, 0x96, 0xC1, 0x7E, 0x0D, 0x00, 0x41, 0x49, 0xEF, 0xDC,
    0xC0, 0x6D, 0x90, 0xAC, 0x40, 0x51, 0xDE, 0xF0, 0x40, 0x89, 0x1C, 0x93, 0xBE, 0xF1, 0xC4, 0x11,
    0xC1, 0x70, 0xB0, 0x8B, 0x40, 0xFE, 0x20, 0x45, 0x41, 0x30, 0xC6, 0x50, 0xC1, 0xA1, 0x7C, 0x11,
    0x41, 0x24, 0xCB, 0xE5, 0x3F, 0xE9, 0xDE, 0xBE, 0xBF, 0xEE, 0x7E, 0xD8, 0x40, 0xD4, 0x94, 0x18,
    0xC1, 0x1B, 0x18, 0xC1, 0xC1, 0x84, 0x20, 0x71, 0x40, 0xF3, 0x8A, 0x69, 0x40, 0x98, 0xEA, 0x1F,
    0x40, 0x97, 0xB4, 0x48, 0x41, 0x51, 0xF6, 0x25, 0x40, 0xA6, 0xAE, 0x30, 0x40, 0x5F, 0xA7, 0xB1,
    0x41, 0x89, 0x17, 0x78, 0x41, 0x75, 0xAC, 0x70, 0xC1, 0x8E, 0x18, 0x8E, 0x41, 0x39, 0xFE, 0x02,
    0x41, 0x6E, 0xCA, 0x67, 0x40, 0x9E, 0x6A, 0x68, 0x41, 0x10, 0x81, 0x11, 0x41, 0x1B, 0x6F, 0x7F,
    0x40, 0xAD, 0x4B, 0x29, 0x41, 0x3B, 0x3A, 0x41, 0xC1, 0x41, 0x4C, 0x98, 0x41, 0x7E, 0x28, 0x15,
    0x41, 0x6F, 0x56, 0x2E, 0xC1, 0x37, 0x57, 0x88, 0x41, 0x76, 0xB7, 0xB5, 0x41, 0x44, 0x9C, 0xFE,
    0x41, 0x25, 0x64, 0x90, 0x40, 0xE2, 0xFC, 0xE5, 0x41, 0xA7, 0xF4, 0x9C, 0xBF, 0xE7, 0xAE, 0x14,
    0x41, 0x0A, 0x36, 0x26, 0x41, 0xA4, 0x39, 0xDE, 0xC0, 0x24, 0xAB, 0x93, 0xBB, 0xF0, 0x06, 0x8E,
    0xC1, 0x20, 0x00, 0x00, 0x3F, 0x16, 0x81, 0x13, 0xBD, 0x88, 0xA2, 0x66, 0xC1, 0x20, 0x00, 0x00,
    0x3F, 0x1D, 0xDC, 0x0E, 0x40, 0xF1, 0x74, 0x95, 0x41, 0xA6, 0x44, 0xA9, 0xC0, 0x36, 0xA5, 0x59,
    0x41, 0x02, 0xFB, 0x9C, 0x41, 0xA5, 0xE9, 0xDA, 0xBF, 0xC3, 0xB5, 0x4A, 0xBC, 0xD0, 0x6B, 0xBE,
    0xC1, 0x20, 0x00, 0x00, 0x3F, 0x20, 0x46, 0x20, 0xBD, 0x47, 0x89, 0x61, 0xC1, 0x1F, 0xFF, 0xFF,
    0x3F, 0x14, 0x35, 0xDF, 0xC0, 0xFA, 0x9D, 0xC7, 0x41, 0x85, 0xC1, 0xB7, 0x40, 0xAA, 0xE7, 0x6F,
    0xC1, 0x10, 0x29, 0xEB, 0x41, 0x80, 0x9F, 0x20, 0x40, 0xD0, 0x7A, 0xD1, 0x3E, 0xC2, 0x2B, 0x7C,
    0xC1, 0x20, 0x00, 0x00, 0x3F, 0x29, 0xC0, 0x01, 0x3F, 0x38, 0x85, 0x7F, 0xC1, 0x1F, 0xFF, 0xFF,
    0x3E, 0xAF, 0xF4, 0x56, 0xC0, 0xFD, 0x71, 0xD8, 0x41, 0x83, 0xAB, 0x96, 0x40, 0xCE, 0xD3, 0xB1,
    0xC1, 0x0E, 0xBE, 0xA4, 0x41, 0x82, 0xB5, 0x43, 0x40, 0xAC, 0x90, 0x1F, 0x3E, 0xD9, 0x21, 0x68,
    0xC1, 0x20, 0x00, 0x00, 0x3E, 0xBF, 0x6C, 0x48, 0x3F, 0x2D, 0xCF, 0xBC, 0xC1, 0x20, 0x00, 0x00,
    0x3F, 0x21, 0x31, 0x44, 0xC0, 0xF8, 0xE0, 0x22, 0x41, 0xE8, 0x4B, 0x4B, 0xC1, 0x14, 0x36, 0x1F,
    0xC1, 0x0C, 0x7F, 0xA6, 0x41, 0xE4, 0x93, 0x45, 0xC1, 0x24, 0x12, 0xDA, 0xC0, 0x01, 0x25, 0x39,
    0xC1, 0x20, 0x00, 0x00, 0x3F, 0xB5, 0xEB, 0x3A, 0xBF, 0xF6, 0x43, 0x3D, 0xC1, 0x1F, 0xFF, 0xFE,
    0x3F, 0xC2, 0x77, 0x2D, 0xC1, 0x0B, 0x64, 0x82, 0x41, 0xE6, 0x84, 0x99, 0xC1, 0x15, 0x34, 0xD0,
    0xC0, 0xFB, 0x14, 0x70, 0x41, 0xE6, 0x5A, 0x05, 0xC1, 0x23, 0x13, 0xB7, 0xBF, 0xF7, 0x6B, 0x09,
    0xC1, 0x20, 0x00, 0x00, 0x3F, 0xB7, 0x60, 0x63, 0xC0, 0x00, 0x83, 0x99, 0xC1, 0x20, 0x00, 0x01,
    0x3F, 0xC1, 0x1A, 0x97, 0xC0, 0xCA, 0x0C, 0x4E, 0x41, 0x9A, 0x38, 0x78, 0xC0, 0xD2, 0x29, 0xBB,
    0xC0, 0xE2, 0xE4, 0x1F, 0x41, 0x97, 0x6E, 0x73, 0xC0, 0xEA, 0xBD, 0x92, 0xC0, 0xE1, 0x27, 0x37,
    0x41, 0x98, 0xE3, 0x73, 0xC0, 0xD3, 0xBD, 0x8E, 0xC0, 0xCB, 0xC6, 0x04, 0x41, 0x98, 0xC3, 0x84,
    0xC0, 0xE9, 0x27, 0x8D,
};

/* 8052569C-80525750 00B4+00 s=1 e=0 z=0  None .data      l_flowerNormal */
SECTION_DATA static u8 l_flowerNormal[180] = {
    0x3C, 0x8D, 0x2C, 0x38, 0x3F, 0x7F, 0xF5, 0xF9, 0x3B, 0x46, 0xF7, 0xA1, 0x3C, 0x76, 0x83,
    0x7F, 0x3F, 0x7F, 0xF5, 0xF9, 0x3C, 0x12, 0x5F, 0xE9, 0xBB, 0xE5, 0xA3, 0x5D, 0x3F, 0x7F,
    0xF5, 0xF9, 0x3C, 0x83, 0x57, 0xA3, 0x3B, 0xF9, 0xB1, 0x31, 0x3F, 0x7F, 0xF5, 0xF9, 0x3C,
    0x81, 0x0A, 0x57, 0xBC, 0x80, 0x86, 0x38, 0x3F, 0x7F, 0xF5, 0xF9, 0x3B, 0xFD, 0xE2, 0xEF,
    0xBC, 0x43, 0xEB, 0x7D, 0x3F, 0x7F, 0xF5, 0xF9, 0xBC, 0x51, 0x4E, 0x3C, 0x3C, 0x4B, 0x2D,
    0x90, 0x3F, 0x7F, 0xF5, 0xF9, 0xBC, 0x4A, 0x42, 0xAF, 0x3C, 0x4F, 0x0B, 0x6B, 0x3F, 0x7F,
    0xF5, 0xF9, 0xBC, 0x46, 0x4B, 0xA9, 0x3C, 0x4B, 0xF2, 0xB2, 0x3F, 0x7F, 0xF5, 0xF9, 0x3C,
    0x49, 0x7D, 0x8D, 0x3C, 0x8D, 0x2A, 0x20, 0x3F, 0x7F, 0xF5, 0xF9, 0x3B, 0x47, 0x5C, 0x4B,
    0xBC, 0x80, 0x84, 0x1F, 0x3F, 0x7F, 0xF5, 0xF9, 0x3B, 0xFD, 0xF3, 0xB6, 0xBC, 0x43, 0xFC,
    0x44, 0x3F, 0x7F, 0xF5, 0xF9, 0xBC, 0x51, 0x3D, 0x75, 0x3C, 0x4B, 0x3E, 0x57, 0x3F, 0x7F,
    0xF5, 0xF9, 0xBC, 0x4A, 0x31, 0xE8, 0x3C, 0x4F, 0x07, 0x3A, 0x3F, 0x7F, 0xF5, 0xF9, 0xBC,
    0x46, 0x54, 0x0D, 0x3C, 0x4B, 0xEE, 0x80, 0x3F, 0x7F, 0xF5, 0xF9, 0x3C, 0x49, 0x81, 0xBF,
};

/* 80525750-80525758 0008+00 s=1 e=0 z=0  None .data      l_flowerColor */
SECTION_DATA static u8 l_flowerColor[8] = {
    0xFF, 0xFF, 0xFF, 0xFF, 0xB2, 0xB2, 0xB2, 0xFF,
};

/* 80525758-80525898 0138+08 s=1 e=0 z=0  None .data      l_flowerTexCoord */
SECTION_DATA static u8 l_flowerTexCoord[312 + 8 /* padding */] = {
    0x40,
    0x40,
    0xD0,
    0xEA,
    0x3D,
    0x69,
    0x70,
    0x72,
    0x40,
    0x7D,
    0xD8,
    0x30,
    0x3F,
    0x81,
    0x3D,
    0xC9,
    0x40,
    0x40,
    0xCE,
    0x85,
    0x3F,
    0x81,
    0x3D,
    0xC9,
    0x40,
    0x01,
    0xDD,
    0x33,
    0x3F,
    0x81,
    0x3D,
    0xC9,
    0x40,
    0x40,
    0xD0,
    0xEA,
    0x3F,
    0xF9,
    0x46,
    0xD4,
    0x40,
    0x00,
    0xCD,
    0xB8,
    0xBF,
    0x7F,
    0xD4,
    0x39,
    0x40,
    0x40,
    0xC2,
    0xC6,
    0x00,
    0x00,
    0x00,
    0x00,
    0x40,
    0x20,
    0xC8,
    0x3F,
    0x3E,
    0xFF,
    0xD4,
    0x39,
    0x3F,
    0xC1,
    0xA6,
    0x61,
    0xBE,
    0xFF,
    0xD4,
    0x39,
    0x40,
    0x00,
    0xCD,
    0xB8,
    0x3F,
    0x7F,
    0xD4,
    0x39,
    0x3F,
    0x81,
    0xB1,
    0x53,
    0x00,
    0x00,
    0x00,
    0x00,
    0x3D,
    0x49,
    0x75,
    0x29,
    0xBD,
    0xFA,
    0x4F,
    0x87,
    0x3C,
    0x54,
    0x88,
    0x83,
    0xBD,
    0xFA,
    0x4F,
    0x87,
    0x3C,
    0xF8,
    0x85,
    0x4D,
    0xBF,
    0x27,
    0x85,
    0x40,
    0x3D,
    0x01,
    0x8D,
    0x69,
    0xBF,
    0x27,
    0x98,
    0x20,
    0xBD,
    0x44,
    0x30,
    0xB1,
    0xBD,
    0xFC,
    0xC3,
    0xA0,
    0xBB,
    0xEE,
    0x06,
    0xD9,
    0xBD,
    0xFC,
    0xC3,
    0xA0,
    0xBC,
    0xF4,
    0x1F,
    0x21,
    0xBF,
    0x27,
    0x90,
    0xA8,
    0xBD,
    0x00,
    0x00,
    0x00,
    0xBF,
    0x27,
    0x92,
    0x7D,
    0xBE,
    0x03,
    0x5A,
    0x86,
    0xBD,
    0x67,
    0x4C,
    0x0A,
    0xBE,
    0x03,
    0x5A,
    0x86,
    0xBC,
    0x82,
    0xCD,
    0x3A,
    0xBF,
    0x25,
    0x30,
    0x59,
    0xBD,
    0x06,
    0x8E,
    0xC5,
    0xBF,
    0x25,
    0xFA,
    0x66,
    0xBD,
    0x2F,
    0x2B,
    0x67,
    0xBE,
    0x03,
    0x59,
    0x79,
    0x3D,
    0x40,
    0x8E,
    0x9B,
    0xBE,
    0x03,
    0x59,
    0x79,
    0x3B,
    0xAF,
    0xE6,
    0x0C,
    0xBF,
    0x25,
    0xB3,
    0x4A,
    0x3C,
    0x9E,
    0x81,
    0xCB,
    0xBF,
    0x25,
    0xD9,
    0x3C,
    0x3C,
    0xF1,
    0xE6,
    0xCD,
    0x3E,
    0x1C,
    0xD0,
    0x78,
    0x3D,
    0x36,
    0xDC,
    0xA0,
    0x3E,
    0x1C,
    0xD0,
    0x78,
    0x3B,
    0x48,
    0x68,
    0xBA,
    0x3F,
    0x59,
    0x32,
    0x61,
    0x3C,
    0xDD,
    0x5F,
    0x57,
    0x3F,
    0x59,
    0x61,
    0xF6,
    0x3C,
    0xFB,
    0x13,
    0x9D,
    0x3E,
    0x1C,
    0xD0,
    0x78,
    0xBB,
    0xEB,
    0xED,
    0xFA,
    0x3E,
    0x1C,
    0xD0,
    0x78,
    0xBD,
    0x47,
    0xD3,
    0xD4,
    0x3F,
    0x59,
    0x49,
    0x41,
    0xBC,
    0xCB,
    0x3E,
    0x57,
    0x3F,
    0x59,
    0x4B,
    0x6A,
    0xBC,
    0xAD,
    0x94,
    0x8E,
    0x3E,
    0xA7,
    0x7F,
    0x28,
    0x3D,
    0x28,
    0x87,
    0xA9,
    0x3E,
    0xA7,
    0x67,
    0x4D,
    0x3C,
    0x14,
    0x46,
    0x74,
    0x3E,
    0xA7,
    0x73,
    0xE2,
    0xBC,
    0x2F,
    0x46,
    0xAA,
    0x3E,
    0xA7,
    0x72,
    0xD6,
    0xBD,
    0x2F,
    0x46,
    0xAA,
    /* padding */
    0x00,
    0x00,
    0x00,
    0x00,
    0x00,
    0x00,
    0x00,
    0x00,
};

/* 80525898-805259F8 0150+10 s=1 e=0 z=0  None .data      l_J_hana00DL */
SECTION_DATA static u8 l_J_hana00DL[336 + 16 /* padding */] = {
    0x98,
    0x00,
    0x05,
    0x0B,
    0x00,
    0x00,
    0x03,
    0x0E,
    0x00,
    0x00,
    0x00,
    0x0C,
    0x00,
    0x00,
    0x02,
    0x0D,
    0x00,
    0x00,
    0x01,
    0x0A,
    0x00,
    0x00,
    0x04,
    0x98,
    0x00,
    0x05,
    0x06,
    0x00,
    0x00,
    0x04,
    0x09,
    0x00,
    0x00,
    0x03,
    0x07,
    0x02,
    0x00,
    0x02,
    0x08,
    0x00,
    0x00,
    0x00,
    0x05,
    0x00,
    0x00,
    0x01,
    0x98,
    0x00,
    0x05,
    0x01,
    0x00,
    0x00,
    0x01,
    0x04,
    0x00,
    0x00,
    0x04,
    0x02,
    0x01,
    0x00,
    0x02,
    0x03,
    0x00,
    0x00,
    0x03,
    0x00,
    0x00,
    0x00,
    0x00,
    0x98,
    0x00,
    0x04,
    0x11,
    0x00,
    0x00,
    0x07,
    0x12,
    0x00,
    0x00,
    0x08,
    0x10,
    0x00,
    0x00,
    0x06,
    0x0F,
    0x00,
    0x00,
    0x05,
    0x98,
    0x00,
    0x04,
    0x15,
    0x00,
    0x00,
    0x09,
    0x16,
    0x00,
    0x00,
    0x0A,
    0x14,
    0x00,
    0x00,
    0x07,
    0x13,
    0x00,
    0x00,
    0x08,
    0x98,
    0x00,
    0x04,
    0x19,
    0x00,
    0x00,
    0x09,
    0x1A,
    0x00,
    0x00,
    0x0A,
    0x18,
    0x00,
    0x00,
    0x07,
    0x17,
    0x00,
    0x00,
    0x08,
    0x98,
    0x00,
    0x04,
    0x1D,
    0x00,
    0x00,
    0x0A,
    0x1E,
    0x00,
    0x00,
    0x09,
    0x1C,
    0x00,
    0x00,
    0x08,
    0x1B,
    0x00,
    0x00,
    0x07,
    0x98,
    0x00,
    0x04,
    0x21,
    0x03,
    0x01,
    0x0D,
    0x22,
    0x03,
    0x01,
    0x0E,
    0x20,
    0x00,
    0x00,
    0x0C,
    0x1F,
    0x00,
    0x00,
    0x0B,
    0x98,
    0x00,
    0x04,
    0x25,
    0x04,
    0x01,
    0x11,
    0x26,
    0x04,
    0x01,
    0x12,
    0x24,
    0x00,
    0x00,
    0x10,
    0x23,
    0x00,
    0x00,
    0x0F,
    0x98,
    0x00,
    0x04,
    0x29,
    0x05,
    0x01,
    0x15,
    0x2A,
    0x05,
    0x01,
    0x16,
    0x28,
    0x00,
    0x00,
    0x14,
    0x27,
    0x00,
    0x00,
    0x13,
    0x98,
    0x00,
    0x04,
    0x2D,
    0x06,
    0x01,
    0x19,
    0x2E,
    0x06,
    0x01,
    0x1A,
    0x2C,
    0x00,
    0x00,
    0x18,
    0x2B,
    0x00,
    0x00,
    0x17,
    0x98,
    0x00,
    0x04,
    0x31,
    0x07,
    0x01,
    0x1D,
    0x32,
    0x07,
    0x01,
    0x1E,
    0x30,
    0x00,
    0x00,
    0x1C,
    0x2F,
    0x00,
    0x00,
    0x1B,
    0x98,
    0x00,
    0x04,
    0x35,
    0x08,
    0x01,
    0x21,
    0x36,
    0x08,
    0x01,
    0x22,
    0x34,
    0x00,
    0x00,
    0x20,
    0x33,
    0x00,
    0x00,
    0x1F,
    0x98,
    0x00,
    0x03,
    0x0A,
    0x00,
    0x00,
    0x04,
    0x0B,
    0x00,
    0x00,
    0x03,
    0x0C,
    0x00,
    0x00,
    0x02,
    0x98,
    0x00,
    0x03,
    0x05,
    0x00,
    0x00,
    0x01,
    0x06,
    0x00,
    0x00,
    0x04,
    0x07,
    0x02,
    0x00,
    0x02,
    0x98,
    0x00,
    0x03,
    0x00,
    0x00,
    0x00,
    0x00,
    0x01,
    0x00,
    0x00,
    0x01,
    0x02,
    0x01,
    0x00,
    0x02,
    0x00,
    0x00,
    0x00,
    0x00,
    0x00,
    0x00,
    0x00,
    0x00,
    0x00,
    0x00,
    0x00,
    0x00,
    0x00,
    0x00,
    0x00,
    0x00,
    0x00,
    0x00,
    0x00,
    0x00,
    0x00,
    0x00,
    0x00,
    0x00,
    0x00,
    0x00,
    0x00,
    0x00,
    0x00,
    0x00,
    0x00,
    0x00,
    /* padding */
    0x00,
    0x00,
    0x00,
    0x00,
    0x00,
    0x00,
    0x00,
    0x00,
    0x00,
    0x00,
    0x00,
    0x00,
    0x00,
    0x00,
    0x00,
    0x00,
};

/* 805259F8-80525AD8 00DE+02 s=1 e=0 z=0  None .data      l_J_hana00_cDL */
SECTION_DATA static u8 l_J_hana00_cDL[222 + 2 /* padding */] = {
    0x98,
    0x00,
    0x04,
    0x35,
    0x0D,
    0x01,
    0x21,
    0x36,
    0x0E,
    0x01,
    0x22,
    0x3A,
    0x09,
    0x00,
    0x26,
    0x39,
    0x0E,
    0x00,
    0x25,
    0x98,
    0x00,
    0x04,
    0x31,
    0x0D,
    0x01,
    0x1D,
    0x32,
    0x0D,
    0x01,
    0x1E,
    0x38,
    0x0D,
    0x00,
    0x24,
    0x37,
    0x0D,
    0x00,
    0x23,
    0x98,
    0x00,
    0x04,
    0x2D,
    0x0C,
    0x01,
    0x19,
    0x2E,
    0x0C,
    0x01,
    0x1A,
    0x2C,
    0x09,
    0x00,
    0x18,
    0x2B,
    0x09,
    0x00,
    0x17,
    0x98,
    0x00,
    0x04,
    0x29,
    0x0B,
    0x01,
    0x15,
    0x2A,
    0x0B,
    0x01,
    0x16,
    0x28,
    0x09,
    0x00,
    0x14,
    0x27,
    0x09,
    0x00,
    0x13,
    0x98,
    0x00,
    0x04,
    0x25,
    0x0A,
    0x01,
    0x11,
    0x26,
    0x0A,
    0x01,
    0x12,
    0x24,
    0x09,
    0x00,
    0x10,
    0x23,
    0x09,
    0x00,
    0x0F,
    0x98,
    0x00,
    0x04,
    0x21,
    0x03,
    0x01,
    0x0D,
    0x22,
    0x03,
    0x01,
    0x0E,
    0x20,
    0x09,
    0x00,
    0x0C,
    0x1F,
    0x09,
    0x00,
    0x0B,
    0x98,
    0x00,
    0x04,
    0x1D,
    0x09,
    0x00,
    0x0A,
    0x1E,
    0x09,
    0x00,
    0x09,
    0x1C,
    0x09,
    0x00,
    0x08,
    0x1B,
    0x09,
    0x00,
    0x07,
    0x98,
    0x00,
    0x04,
    0x19,
    0x09,
    0x00,
    0x09,
    0x1A,
    0x09,
    0x00,
    0x0A,
    0x18,
    0x09,
    0x00,
    0x07,
    0x17,
    0x09,
    0x00,
    0x08,
    0x98,
    0x00,
    0x04,
    0x15,
    0x09,
    0x00,
    0x09,
    0x16,
    0x09,
    0x00,
    0x0A,
    0x14,
    0x09,
    0x00,
    0x07,
    0x13,
    0x09,
    0x00,
    0x08,
    0x98,
    0x00,
    0x04,
    0x11,
    0x09,
    0x00,
    0x07,
    0x12,
    0x09,
    0x00,
    0x08,
    0x10,
    0x09,
    0x00,
    0x06,
    0x0F,
    0x09,
    0x00,
    0x05,
    0x00,
    0x00,
    0x00,
    0x00,
    0x00,
    0x00,
    0x00,
    0x00,
    0x00,
    0x00,
    0x00,
    0x00,
    0x00,
    0x00,
    0x00,
    0x00,
    0x00,
    0x00,
    0x00,
    0x00,
    0x00,
    0x00,
    0x00,
    0x00,
    0x00,
    0x00,
    0x00,
    0x00,
    0x00,
    0x00,
    0x00,
    0x00,
    /* padding */
    0x00,
    0x00,
};

/* 80525AD8-80525B78 0099+07 s=2 e=0 z=0  None .data      l_matDL */
SECTION_DATA static u8 l_matDL[153 + 7 /* padding */] = {
    0x61,
    0x80,
    0x00,
    0x01,
    0x3A,
    0x61,
    0x84,
    0x00,
    0x00,
    0x00,
    0x61,
    0x88,
    0xE0,
    0xFC,
    0x3F,
    0x61,
    0x94,
    0x00,
    0x00,
    0x00,
    0x61,
    0x30,
    0x00,
    0x00,
    0x3F,
    0x61,
    0x31,
    0x00,
    0x00,
    0x3F,
    0x10,
    0x00,
    0x00,
    0x10,
    0x40,
    0xFF,
    0xFF,
    0x42,
    0x80,
    0x08,
    0x30,
    0x3C,
    0xF3,
    0xCF,
    0x00,
    0x10,
    0x00,
    0x00,
    0x10,
    0x18,
    0x3C,
    0xF3,
    0xCF,
    0x00,
    0x10,
    0x00,
    0x00,
    0x10,
    0x0E,
    0x00,
    0x00,
    0x7F,
    0x3B,
    0x61,
    0x28,
    0x38,
    0x00,
    0x40,
    0x61,
    0xC0,
    0x28,
    0xF8,
    0xA2,
    0x61,
    0xC1,
    0x08,
    0xFF,
    0xC0,
    0x61,
    0x43,
    0x00,
    0x00,
    0x01,
    0x61,
    0x40,
    0x00,
    0x00,
    0x17,
    0x61,
    0x41,
    0x00,
    0x31,
    0x0C,
    0x61,
    0xF3,
    0x1E,
    0xFF,
    0x80,
    0x10,
    0x00,
    0x00,
    0x10,
    0x3F,
    0x00,
    0x00,
    0x00,
    0x01,
    0x10,
    0x00,
    0x00,
    0x10,
    0x09,
    0x00,
    0x00,
    0x00,
    0x01,
    0x61,
    0x00,
    0x00,
    0x00,
    0x11,
    0x00,
    0x00,
    0x00,
    0x00,
    0x00,
    0x00,
    0x00,
    0x00,
    0x00,
    0x00,
    0x00,
    0x00,
    0x00,
    0x00,
    0x00,
    0x00,
    0x00,
    0x00,
    0x00,
    0x00,
    0x00,
    0x00,
    0x00,
    0x00,
    0x00,
    0x00,
    0x00,
    0x00,
    0x00,
    0x00,
    0x00,
    0x00,
    /* padding */
    0x00,
    0x00,
    0x00,
    0x00,
    0x00,
    0x00,
    0x00,
};

/* 80525B78-80525C18 0099+07 s=2 e=0 z=0  None .data      l_matLight4DL */
SECTION_DATA static u8 l_matLight4DL[153 + 7 /* padding */] = {
    0x61,
    0x80,
    0x00,
    0x01,
    0x3A,
    0x61,
    0x84,
    0x00,
    0x00,
    0x00,
    0x61,
    0x88,
    0xE0,
    0xFC,
    0x3F,
    0x61,
    0x94,
    0x00,
    0x00,
    0x00,
    0x61,
    0x30,
    0x00,
    0x00,
    0x3F,
    0x61,
    0x31,
    0x00,
    0x00,
    0x3F,
    0x10,
    0x00,
    0x00,
    0x10,
    0x40,
    0xFF,
    0xFF,
    0x42,
    0x80,
    0x08,
    0x30,
    0x3C,
    0xF3,
    0xCF,
    0x00,
    0x10,
    0x00,
    0x00,
    0x10,
    0x18,
    0x3C,
    0xF3,
    0xCF,
    0x00,
    0x10,
    0x00,
    0x00,
    0x10,
    0x0E,
    0x00,
    0x00,
    0x0F,
    0x3B,
    0x61,
    0x28,
    0x38,
    0x00,
    0x40,
    0x61,
    0xC0,
    0x28,
    0xF8,
    0xA2,
    0x61,
    0xC1,
    0x08,
    0xFF,
    0xC0,
    0x61,
    0x43,
    0x00,
    0x00,
    0x01,
    0x61,
    0x40,
    0x00,
    0x00,
    0x17,
    0x61,
    0x41,
    0x00,
    0x31,
    0x0C,
    0x61,
    0xF3,
    0x1E,
    0xFF,
    0x80,
    0x10,
    0x00,
    0x00,
    0x10,
    0x3F,
    0x00,
    0x00,
    0x00,
    0x01,
    0x10,
    0x00,
    0x00,
    0x10,
    0x09,
    0x00,
    0x00,
    0x00,
    0x01,
    0x61,
    0x00,
    0x00,
    0x00,
    0x11,
    0x00,
    0x00,
    0x00,
    0x00,
    0x00,
    0x00,
    0x00,
    0x00,
    0x00,
    0x00,
    0x00,
    0x00,
    0x00,
    0x00,
    0x00,
    0x00,
    0x00,
    0x00,
    0x00,
    0x00,
    0x00,
    0x00,
    0x00,
    0x00,
    0x00,
    0x00,
    0x00,
    0x00,
    0x00,
    0x00,
    0x00,
    0x00,
    /* padding */
    0x00,
    0x00,
    0x00,
    0x00,
    0x00,
    0x00,
    0x00,
};

/* 80525C18-80526C18 1000+00 s=1 e=0 z=0  None .data      l_J_Ohana01_64128_0419TEX */
SECTION_DATA static u8 l_J_Ohana01_64128_0419TEX[4096] = {
    0x3A, 0x84, 0x3A, 0x84, 0xFF, 0xFF, 0xFF, 0xFF, 0x3A, 0xA4, 0x3A, 0xA4, 0xFF, 0xFF, 0xFF, 0xFF,
    0x2A, 0x02, 0x2A, 0x02, 0xFF, 0xFF, 0xFF, 0xFF, 0x3A, 0xA3, 0x3A, 0xA3, 0xFF, 0xFF, 0xFF, 0xFF,
    0x32, 0x42, 0x32, 0x42, 0xFF, 0xFF, 0xFF, 0xFF, 0x42, 0xA4, 0x42, 0xA4, 0xFF, 0xFF, 0xFF, 0xFF,
    0x4A, 0xE4, 0x4A, 0xE4, 0xFF, 0xFF, 0xFF, 0xFF, 0x32, 0x22, 0x32, 0x22, 0xFF, 0xFF, 0xFF, 0xFF,
    0x32, 0x22, 0x32, 0x22, 0xFF, 0xFF, 0xFF, 0xFF, 0x3A, 0xA4, 0x3A, 0xA4, 0xFF, 0xFF, 0xFF, 0xFF,
    0x3A, 0x83, 0x3A, 0x83, 0xFF, 0xFF, 0xFF, 0xFF, 0x32, 0x42, 0x32, 0x42, 0xFF, 0xFF, 0xFF, 0xFF,
    0x3A, 0x63, 0x3A, 0x63, 0xFF, 0xFF, 0xFF, 0xFF, 0x32, 0x42, 0x32, 0x42, 0xFF, 0xFF, 0xFF, 0xFF,
    0x3A, 0x63, 0x3A, 0x63, 0xFF, 0xFF, 0xFF, 0xFF, 0x32, 0x22, 0x32, 0x22, 0xFF, 0xFF, 0xFF, 0xFF,
    0x3A, 0x83, 0x3A, 0x83, 0xFF, 0xFF, 0xFF, 0xFF, 0x4B, 0x04, 0x4B, 0x04, 0xFF, 0xFF, 0xFF, 0xFF,
    0x3A, 0x83, 0x3A, 0x83, 0xFF, 0xFF, 0xFF, 0xFF, 0x32, 0x63, 0x32, 0x63, 0xFF, 0xFF, 0xFF, 0xFF,
    0x32, 0x62, 0x32, 0x62, 0xFF, 0xFF, 0xFF, 0xFF, 0x3A, 0x83, 0x3A, 0x83, 0xFF, 0xFF, 0xFF, 0xFF,
    0x32, 0x22, 0x32, 0x22, 0xFF, 0xFF, 0xFF, 0xFF, 0x3A, 0x83, 0x3A, 0x83, 0xFF, 0xFF, 0xFF, 0xFF,
    0x32, 0x42, 0x32, 0x42, 0xFF, 0xFF, 0xFF, 0xFF, 0x3A, 0x83, 0x3A, 0x83, 0xFF, 0xFF, 0xFF, 0xFF,
    0x3A, 0xA3, 0x3A, 0xA3, 0xFF, 0xFF, 0xFF, 0xFF, 0x3A, 0x83, 0x3A, 0x83, 0xFF, 0xFF, 0xFF, 0xFF,
    0x32, 0x42, 0x32, 0x42, 0xFF, 0xFF, 0xFF, 0xFF, 0x42, 0xC4, 0x42, 0xC4, 0xFF, 0xFF, 0xFF, 0xFF,
    0x32, 0x22, 0x32, 0x22, 0xFF, 0xFF, 0xFF, 0xFF, 0x3A, 0x63, 0x3A, 0x63, 0xFF, 0xFF, 0xFF, 0xFF,
    0x21, 0xC1, 0x21, 0xC1, 0xFF, 0xFF, 0xFF, 0xFF, 0x32, 0x42, 0x32, 0x42, 0xFF, 0xFF, 0xFF, 0xFF,
    0x52, 0xC7, 0x52, 0xC7, 0xFF, 0xFF, 0xFF, 0xFF, 0x32, 0x42, 0x32, 0x42, 0xFF, 0xFF, 0xFF, 0xFF,
    0x32, 0x02, 0x32, 0x02, 0xFF, 0xFF, 0xFF, 0xFF, 0x2A, 0x22, 0x2A, 0x22, 0xFF, 0xFF, 0xFF, 0xFF,
    0x2A, 0x02, 0x2A, 0x02, 0xFF, 0xFF, 0xFF, 0xFF, 0x32, 0x42, 0x32, 0x42, 0xFF, 0xFF, 0xFF, 0xFF,
    0x32, 0x42, 0x32, 0x42, 0xFF, 0xFF, 0xFF, 0xFF, 0x32, 0x22, 0x32, 0x22, 0xFF, 0xFF, 0xFF, 0xFF,
    0x42, 0xA3, 0x42, 0xA3, 0xFF, 0xFF, 0xFF, 0xFF, 0x32, 0x43, 0x32, 0x43, 0xFF, 0xFF, 0xFF, 0xFF,
    0x3A, 0x83, 0x3A, 0x83, 0xFF, 0xFF, 0xFF, 0xFF, 0x32, 0x22, 0x32, 0x22, 0xFF, 0xFF, 0xFF, 0xFF,
    0x32, 0x63, 0x32, 0x63, 0xFF, 0xFF, 0xFF, 0xFF, 0x3A, 0x63, 0x3A, 0x63, 0xFF, 0xFF, 0xFF, 0xFF,
    0x32, 0x22, 0x32, 0x22, 0xFF, 0xFF, 0xFF, 0xFF, 0x3A, 0x63, 0x3A, 0x63, 0xFF, 0xFF, 0xFF, 0xFF,
    0x3A, 0x83, 0x3A, 0x83, 0xFF, 0xFF, 0xFF, 0xFF, 0x3A, 0x63, 0x3A, 0x63, 0xFF, 0xFF, 0xFF, 0xFF,
    0x32, 0x42, 0x32, 0x42, 0xFF, 0xFF, 0xFF, 0xFF, 0x2A, 0x22, 0x2A, 0x22, 0xFF, 0xFF, 0xFF, 0xFF,
    0x3A, 0x83, 0x3A, 0x83, 0xFF, 0xFF, 0xFF, 0xFF, 0x3A, 0x83, 0x3A, 0x83, 0xFF, 0xFF, 0xFF, 0xFF,
    0x42, 0xA3, 0x42, 0xA3, 0xFF, 0xFF, 0xFF, 0xFF, 0x4A, 0xC4, 0x4A, 0xC4, 0xFF, 0xFF, 0xFF, 0xFF,
    0x3A, 0x83, 0x3A, 0x83, 0xFF, 0xFF, 0xFF, 0xFF, 0x42, 0xC4, 0x42, 0xC4, 0xFF, 0xFF, 0xFF, 0xFF,
    0x32, 0x63, 0x32, 0x63, 0xFF, 0xFF, 0xFF, 0xFF, 0x8C, 0x4C, 0x8C, 0x4C, 0xFF, 0xFF, 0xFF, 0xFF,
    0x4A, 0xE5, 0x4A, 0xE5, 0xFF, 0xFF, 0xFF, 0xFF, 0xCD, 0xB5, 0xCD, 0xB5, 0xFF, 0xFF, 0xFF, 0xFF,
    0x00, 0x00, 0xAC, 0xD1, 0xFF, 0xFF, 0xFF, 0x7F, 0x52, 0xE5, 0x52, 0xE5, 0xFF, 0xFF, 0xFF, 0xFF,
    0xB4, 0xD2, 0xCD, 0xB5, 0xBF, 0x0F, 0x0F, 0x9F, 0x7B, 0xCC, 0x7B, 0xCC, 0xFF, 0xFF, 0xFF, 0xFF,
    0x2A, 0x02, 0x2A, 0x02, 0xFF, 0xFF, 0xFF, 0xFF, 0x3A, 0x63, 0x3A, 0x63, 0xFF, 0xFF, 0xFF, 0xFF,
    0x32, 0x22, 0x32, 0x22, 0xFF, 0xFF, 0xFF, 0xFF, 0x42, 0xA3, 0x42, 0xA3, 0xFF, 0xFF, 0xFF, 0xFF,
    0x42, 0xC4, 0x42, 0xC4, 0xFF, 0xFF, 0xFF, 0xFF, 0x3A, 0x63, 0x3A, 0x63, 0xFF, 0xFF, 0xFF, 0xFF,
    0x42, 0xA4, 0x42, 0xA4, 0xFF, 0xFF, 0xFF, 0xFF, 0x3A, 0x83, 0x3A, 0x83, 0xFF, 0xFF, 0xFF, 0xFF,
    0x32, 0x22, 0x32, 0x22, 0xFF, 0xFF, 0xFF, 0xFF, 0x2A, 0x02, 0x2A, 0x02, 0xFF, 0xFF, 0xFF, 0xFF,
    0x7B, 0xEB, 0x7B, 0xEB, 0xFF, 0xFF, 0xFF, 0xFF, 0x2A, 0x02, 0x2A, 0x02, 0xFF, 0xFF, 0xFF, 0xFF,
    0x3A, 0x63, 0x3A, 0x63, 0xFF, 0xFF, 0xFF, 0xFF, 0x3A, 0x83, 0x3A, 0x83, 0xFF, 0xFF, 0xFF, 0xFF,
    0x3A, 0xA3, 0x3A, 0xA3, 0xFF, 0xFF, 0xFF, 0xFF, 0x3A, 0x83, 0x3A, 0x83, 0xFF, 0xFF, 0xFF, 0xFF,
    0x3A, 0x42, 0x3A, 0x42, 0xFF, 0xFF, 0xFF, 0xFF, 0x42, 0xC4, 0x42, 0xC4, 0xFF, 0xFF, 0xFF, 0xFF,
    0x32, 0x42, 0x32, 0x42, 0xFF, 0xFF, 0xFF, 0xFF, 0x3A, 0x63, 0x3A, 0x63, 0xFF, 0xFF, 0xFF, 0xFF,
    0x3A, 0x83, 0x3A, 0x83, 0xFF, 0xFF, 0xFF, 0xFF, 0x4A, 0xE5, 0x4A, 0xE5, 0xFF, 0xFF, 0xFF, 0xFF,
    0xBD, 0x13, 0xCD, 0xD6, 0xFF, 0xFF, 0xDF, 0xE2, 0x00, 0x00, 0xB5, 0x12, 0xFF, 0xFF, 0xFF, 0x7F,
    0xBD, 0x73, 0xBD, 0x73, 0xFF, 0xFF, 0xFF, 0xFF, 0x83, 0x4B, 0x9C, 0x2F, 0xFF, 0xFF, 0xFC, 0xF4,
    0x00, 0x00, 0xAC, 0xEB, 0xFF, 0xFF, 0xFF, 0xFD, 0x7A, 0xE9, 0xA4, 0x6F, 0xF0, 0xF0, 0xF4, 0x7C,
    0xBC, 0xB1, 0xCD, 0x75, 0xAF, 0x8F, 0x0F, 0x15, 0xBD, 0x14, 0xBD, 0x96, 0xFF, 0xDF, 0x13, 0x1F,
    0xC5, 0x34, 0x42, 0xA4, 0x00, 0x8B, 0x0D, 0xAA, 0x4B, 0x25, 0xA4, 0x30, 0x5F, 0xBF, 0xFF, 0xFC,
    0x5B, 0x66, 0x5B, 0x66, 0xFF, 0xFF, 0xFF, 0xFF, 0x42, 0xC4, 0x42, 0xC4, 0xFF, 0xFF, 0xFF, 0xFF,
    0x00, 0x00, 0x4B, 0x05, 0xFF, 0xFF, 0xFF, 0x7F, 0x3A, 0x83, 0x3A, 0x83, 0xFF, 0xFF, 0xFF, 0xFF,
    0x00, 0x00, 0x84, 0x0C, 0xFF, 0xFF, 0xFF, 0xFD, 0x8C, 0x0D, 0xC4, 0xF3, 0xF3, 0xF9, 0x55, 0x55,
    0x94, 0x0E, 0xB4, 0x50, 0xFC, 0xFD, 0xFD, 0xFE, 0xB4, 0x4F, 0xC5, 0xB6, 0x0B, 0x2B, 0x2B, 0xA7,
    0xB4, 0xB1, 0xB4, 0xB1, 0xFF, 0xFF, 0xFF, 0xFF, 0x32, 0x42, 0x32, 0x42, 0xFF, 0xFF, 0xFF, 0xFF,
    0x3A, 0x43, 0x3A, 0x43, 0xFF, 0xFF, 0xFF, 0xFF, 0x32, 0x42, 0x32, 0x42, 0xFF, 0xFF, 0xFF, 0xFF,
    0x3A, 0xA3, 0x3A, 0xA3, 0xFF, 0xFF, 0xFF, 0xFF, 0x4A, 0xC4, 0x4A, 0xC4, 0xFF, 0xFF, 0xFF, 0xFF,
    0x3A, 0x62, 0x3A, 0x62, 0xFF, 0xFF, 0xFF, 0xFF, 0x3A, 0x83, 0x3A, 0x83, 0xFF, 0xFF, 0xFF, 0xFF,
    0x32, 0x42, 0x32, 0x42, 0xFF, 0xFF, 0xFF, 0xFF, 0xA4, 0x50, 0xC5, 0x55, 0xFF, 0xFD, 0xFF, 0xFC,
    0x94, 0x0D, 0xB4, 0xB1, 0xFF, 0xFF, 0xFC, 0xFD, 0x5B, 0x47, 0xBC, 0xD2, 0xF6, 0x56, 0x54, 0x94,
    0xAC, 0x30, 0xC5, 0x95, 0xA5, 0xA5, 0xAB, 0x0F, 0x00, 0x00, 0xBD, 0x53, 0x7F, 0xFF, 0xFF, 0xFF,
    0x3A, 0x63, 0x7B, 0x8B, 0x7F, 0x3F, 0xFF, 0xFF, 0x00, 0x00, 0xC5, 0x13, 0xFF, 0xFF, 0xFF, 0xFD,
    0x7B, 0x09, 0xA4, 0xCB, 0xFD, 0xFE, 0xFE, 0xFC, 0x5B, 0x25, 0xA4, 0x8C, 0x7C, 0x6E, 0xAE, 0xAE,
    0x83, 0x2B, 0xC5, 0x55, 0xFC, 0xFE, 0xFD, 0x55, 0x5A, 0xC6, 0xCD, 0xB6, 0x0E, 0x0E, 0xAE, 0x6A,
    0xBD, 0x53, 0x6B, 0xA9, 0x70, 0x72, 0xC0, 0x8B, 0x84, 0x2B, 0x42, 0xC4, 0x35, 0x15, 0x95, 0x57,
    0x53, 0x45, 0xA4, 0xD0, 0x58, 0xA0, 0x00, 0x03, 0x3A, 0x83, 0x53, 0x46, 0x07, 0x9B, 0xBF, 0xFF,
    0x53, 0x25, 0x53, 0x46, 0xBF, 0x7F, 0xFF, 0xFF, 0x3A, 0x63, 0x3A, 0x63, 0xFF, 0xFF, 0xFF, 0xFF,
    0x42, 0xA3, 0x42, 0xA3, 0xFF, 0xFF, 0xFF, 0xFF, 0x3A, 0x83, 0x3A, 0x83, 0xFF, 0xFF, 0xFF, 0xFF,
    0xB4, 0xF3, 0xC5, 0xD6, 0xF5, 0xF4, 0xF0, 0xF1, 0xAC, 0x91, 0xC5, 0xB6, 0x6B, 0x63, 0x53, 0x43,
    0xBC, 0xD3, 0xC5, 0xB6, 0xF1, 0xF1, 0x02, 0x95, 0xB4, 0x51, 0xC5, 0xB6, 0x0F, 0x3F, 0xBF, 0x7F,
    0x42, 0xA3, 0x42, 0xA3, 0xFF, 0xFF, 0xFF, 0xFF, 0x3A, 0x83, 0x3A, 0x83, 0xFF, 0xFF, 0xFF, 0xFF,
    0x3A, 0x63, 0x3A, 0x63, 0xFF, 0xFF, 0xFF, 0xFF, 0x3A, 0x63, 0x3A, 0x63, 0xFF, 0xFF, 0xFF, 0xFF,
    0x32, 0x42, 0x32, 0x42, 0xFF, 0xFF, 0xFF, 0xFF, 0x32, 0x22, 0x32, 0x22, 0xFF, 0xFF, 0xFF, 0xFF,
    0x3A, 0x83, 0x3A, 0x83, 0xFF, 0xFF, 0xFF, 0xFF, 0x32, 0x22, 0x32, 0x22, 0xFF, 0xFF, 0xFF, 0xFF,
    0xAC, 0xF2, 0xCD, 0x96, 0xF9, 0xF5, 0xF1, 0xFD, 0x9C, 0x8F, 0xCD, 0xB6, 0x83, 0xA3, 0x4F, 0x6F,
    0xA4, 0x6F, 0xCD, 0xD7, 0xF2, 0xE8, 0x14, 0x98, 0xBC, 0xB2, 0xC5, 0x34, 0x1F, 0x3F, 0x3F, 0xFF,
    0xC5, 0x93, 0xC5, 0x93, 0xFF, 0xFF, 0xFF, 0xFF, 0xC5, 0x14, 0xD6, 0x18, 0xF9, 0xFE, 0xFC, 0xFC,
    0xCD, 0xB5, 0xCD, 0xB5, 0xFF, 0xFF, 0xFF, 0xFF, 0xBC, 0xF3, 0xD5, 0xD7, 0xC9, 0xF1, 0xFE, 0xFF,
    0xD5, 0xD6, 0x9B, 0x88, 0x2A, 0xFA, 0x9E, 0x2A, 0x63, 0x46, 0xC5, 0x53, 0x62, 0x72, 0xB4, 0xBC,
    0xBC, 0xD2, 0xDE, 0x38, 0x68, 0x69, 0xA1, 0xF2, 0x6B, 0x68, 0xCD, 0x75, 0x9C, 0x56, 0x55, 0xA5,
    0x53, 0x25, 0x53, 0x66, 0x57, 0x6F, 0x5F, 0x9F, 0x3A, 0x83, 0x3A, 0x83, 0xFF, 0xFF, 0xFF, 0xFF,
    0x53, 0x45, 0x5B, 0x86, 0x1F, 0x1F, 0x1F, 0x9F, 0x3A, 0xA3, 0x3A, 0xA3, 0xFF, 0xFF, 0xFF, 0xFF,
    0x3A, 0x63, 0x3A, 0x63, 0xFF, 0xFF, 0xFF, 0xFF, 0xAC, 0xB1, 0xB4, 0xF2, 0xFE, 0xFD, 0xFD, 0xF5,
    0x3A, 0x63, 0x3A, 0x63, 0xFF, 0xFF, 0xFF, 0xFF, 0x8C, 0x4C, 0xBD, 0x11, 0xD5, 0xD5, 0x19, 0x98,
    0x7C, 0x0B, 0xCD, 0xD6, 0x55, 0x57, 0x8F, 0x0F, 0x5B, 0x46, 0xC5, 0xB6, 0x7F, 0xFF, 0xFC, 0xC0,
    0x4B, 0x25, 0xB4, 0xF2, 0x7F, 0x70, 0x80, 0x00, 0x5B, 0x86, 0x42, 0xC4, 0xBA, 0xAB, 0x3D, 0xA5,
    0x4A, 0xE4, 0x5B, 0x46, 0xFB, 0x6B, 0x4B, 0x8F, 0x53, 0x25, 0x63, 0xA7, 0xFF, 0xFF, 0xCF, 0xC7,
    0x42, 0xC4, 0x53, 0x25, 0x9F, 0xBF, 0xBF, 0xBF, 0x4A, 0xE4, 0x6B, 0xE8, 0xE5, 0xD5, 0x15, 0x15,
    0x3A, 0x83, 0x3A, 0x83, 0xFF, 0xFF, 0xFF, 0xFF, 0xAC, 0x4F, 0xC5, 0x33, 0xFF, 0xF5, 0xF6, 0xF8,
    0x5B, 0x87, 0x6C, 0x08, 0xFF, 0xBF, 0x4F, 0x9F, 0x63, 0x88, 0xCD, 0x95, 0xE5, 0xD5, 0xDA, 0xF2,
    0x6B, 0x49, 0xBD, 0x13, 0x5A, 0x53, 0x5B, 0x57, 0xBD, 0x73, 0xBD, 0x73, 0xFF, 0xFF, 0xFF, 0xFF,
    0x9C, 0x8E, 0xC5, 0x94, 0xA7, 0xAF, 0x7F, 0x3F, 0xCD, 0xB5, 0xCD, 0xB5, 0xFF, 0xFF, 0xFF, 0xFF,
    0xCD, 0xB5, 0xCD, 0xB5, 0xFF, 0xFF, 0xFF, 0xFF, 0xCD, 0xB5, 0xCD, 0xB5, 0xFF, 0xFF, 0xFF, 0xFF,
    0xB4, 0x2C, 0xD5, 0xD7, 0xFE, 0xFA, 0x90, 0x50, 0xB4, 0x31, 0xCD, 0xB6, 0x9F, 0xAF, 0xA3, 0x22,
    0xBC, 0xF3, 0xD5, 0xF7, 0xE0, 0x26, 0x15, 0xE5, 0xCD, 0x75, 0x9B, 0xAF, 0x7A, 0xFB, 0x3F, 0xB6,
    0xD5, 0x96, 0xD5, 0xD6, 0xFD, 0xFF, 0xFF, 0xFA, 0x8C, 0x4B, 0xBD, 0x53, 0x48, 0xD0, 0xF8, 0xFC,
    0x53, 0x45, 0x5B, 0xA6, 0xAF, 0x2F, 0x1F, 0x2F, 0x53, 0x05, 0x63, 0x87, 0xFC, 0xF1, 0xF9, 0xC9,
    0x53, 0x45, 0x5B, 0x86, 0x9F, 0x1F, 0x1F, 0x1F, 0x42, 0xC4, 0x63, 0x87, 0xE9, 0x29, 0x29, 0x2A,
    0x5B, 0x87, 0x63, 0x87, 0xFF, 0xFF, 0x7F, 0x7F, 0xAC, 0xF0, 0x53, 0x25, 0x02, 0x03, 0x03, 0x09,
    0x4B, 0x05, 0x63, 0xA7, 0x6F, 0xAD, 0x19, 0x25, 0x6C, 0x08, 0x53, 0x25, 0xB6, 0x58, 0x72, 0x6B,
    0x63, 0xA6, 0x42, 0xA4, 0xF2, 0x6A, 0x8A, 0x0E, 0x4A, 0xE4, 0x5B, 0x86, 0x80, 0xA0, 0x87, 0xAF,
    0x5B, 0x86, 0x4A, 0xE5, 0x2E, 0x1F, 0xB5, 0xDF, 0x4B, 0x04, 0x5B, 0x86, 0x1F, 0xBF, 0xBF, 0x3F,
    0x3A, 0x83, 0x3A, 0x83, 0xFF, 0xFF, 0xFF, 0xFF, 0x6C, 0x08, 0x5B, 0x66, 0x40, 0x40, 0xC0, 0x84,
    0x42, 0xA3, 0x42, 0xA3, 0xFF, 0xFF, 0xFF, 0xFF, 0x5B, 0x86, 0x6B, 0xE7, 0x91, 0x9A, 0xDA, 0xEA,
    0x5B, 0x66, 0x63, 0xE7, 0x9F, 0xA3, 0x2B, 0xAB, 0x3A, 0x83, 0x5B, 0x67, 0xF5, 0xE5, 0x15, 0x97,
    0x63, 0xC7, 0x4A, 0xE5, 0x29, 0x3B, 0x3E, 0xBE, 0x53, 0x26, 0x6B, 0xE8, 0x2F, 0x9F, 0xBF, 0x7F,
    0x00, 0x00, 0x5B, 0x67, 0x7F, 0xFF, 0xFF, 0xFF, 0xCD, 0xB5, 0xCD, 0xB5, 0xFF, 0xFF, 0xFF, 0xFF,
    0xCD, 0xB5, 0xCD, 0xB5, 0xFF, 0xFF, 0xFF, 0xFF, 0xCD, 0xB5, 0xCD, 0xB5, 0xFF, 0xFF, 0xFF, 0xFF,
    0xAC, 0x71, 0xD5, 0xD6, 0x98, 0xE0, 0xF9, 0xF9, 0x9B, 0xAD, 0xD5, 0xD7, 0x2A, 0x55, 0x55, 0x5F,
    0xBC, 0x92, 0xBC, 0xB2, 0xF5, 0xFF, 0xFF, 0xFF, 0xCD, 0xB5, 0xD5, 0xF7, 0xFE, 0xFD, 0xFD, 0xFF,
    0xD5, 0xB5, 0x9B, 0xAE, 0x2A, 0x3E, 0x37, 0x25, 0x8C, 0x6B, 0xC5, 0x14, 0x7C, 0x7C, 0x0C, 0x88,
    0x9B, 0xEE, 0xD5, 0xF7, 0x56, 0x54, 0x54, 0xFC, 0xAC, 0xAD, 0x83, 0x4A, 0x0E, 0x88, 0xAE, 0x57,
    0x53, 0x45, 0x5B, 0x86, 0x1F, 0x1F, 0x1F, 0x9F, 0x53, 0x45, 0x4A, 0xE4, 0xC8, 0x8F, 0x8D, 0x41,
    0x4B, 0x25, 0x5B, 0x86, 0x1F, 0x1F, 0x9F, 0x9F, 0x4A, 0xE4, 0x5B, 0x86, 0xE6, 0xF4, 0xFC, 0xFC,
    0x63, 0xA7, 0x42, 0xA3, 0xF2, 0xD0, 0xF0, 0x60, 0x53, 0x05, 0x5B, 0xA7, 0x94, 0x62, 0xAF, 0x7F,
    0x4B, 0x04, 0x63, 0xA7, 0x15, 0x9B, 0x8B, 0x0F, 0x53, 0x25, 0x53, 0x25, 0xFF, 0xFF, 0xFF, 0xFF,
    0x3A, 0x83, 0x5B, 0x67, 0x98, 0x50, 0xC0, 0xC0, 0x3A, 0x83, 0x74, 0x29, 0x0F, 0x0F, 0x02, 0x05,
    0x42, 0xA3, 0x6B, 0xC7, 0xC0, 0xC0, 0xC1, 0xC9, 0x74, 0x28, 0x4A, 0xE4, 0x68, 0x20, 0x02, 0x82,
    0x5B, 0x66, 0x74, 0x29, 0xFF, 0x2F, 0x5F, 0x6F, 0x42, 0xC4, 0x63, 0xA6, 0xD6, 0xFA, 0xF2, 0xFE,
    0x63, 0xC7, 0x6B, 0xE8, 0x5F, 0x1F, 0x7F, 0x8F, 0x42, 0xA3, 0x53, 0x25, 0xFC, 0xFC, 0xF1, 0xF9,
    0x53, 0x25, 0x63, 0xC7, 0x09, 0x29, 0x27, 0x27, 0x9D, 0x0E, 0x9D, 0x0E, 0xFF, 0xFF, 0xFF, 0xFF,
    0x4A, 0xE4, 0x74, 0x29, 0x2F, 0x1F, 0x3F, 0xBF, 0xCD, 0xB5, 0xCD, 0xB5, 0xFF, 0xFF, 0xFF, 0xFF,
    0xCD, 0xB5, 0xCD, 0xB5, 0xFF, 0xFF, 0xFF, 0xFF, 0xCD, 0xB5, 0xCD, 0xB5, 0xFF, 0xFF, 0xFF, 0xFF,
    0xCD, 0xB5, 0xCD, 0xB5, 0xFF, 0xFF, 0xFF, 0xFF, 0xCD, 0xB5, 0xCD, 0xB5, 0xFF, 0xFF, 0xFF, 0xFF,
    0xCD, 0xB5, 0xCD, 0xB5, 0xFF, 0xFF, 0xFF, 0xFF, 0xB4, 0x51, 0xC5, 0x54, 0xFF, 0xD8, 0xD1, 0xF9,
    0xCD, 0xB5, 0xCD, 0xB5, 0xFF, 0xFF, 0xFF, 0xFF, 0xBC, 0xB2, 0xCD, 0x75, 0xF9, 0xF5, 0xD2, 0x40,
    0xAC, 0x0C, 0xCD, 0x55, 0xF5, 0x59, 0x69, 0x09, 0xB4, 0xF2, 0x72, 0xC9, 0x56, 0xD4, 0x38, 0x2C,
    0xC5, 0x55, 0xA3, 0xCC, 0xDE, 0x9E, 0x02, 0x83, 0xBC, 0xB3, 0x5B, 0x46, 0x2B, 0x31, 0xB3, 0xBA,
    0x53, 0x25, 0x63, 0xA6, 0x1F, 0xAF, 0x9F, 0x9F, 0x42, 0xC3, 0x53, 0x25, 0xFC, 0xF8, 0xE5, 0xD7,
    0x42, 0xC4, 0x5B, 0x86, 0x9F, 0x9F, 0x9C, 0xAA, 0x4B, 0x04, 0x53, 0x45, 0xA3, 0x6F, 0xBF, 0x3F,
    0x42, 0xC3, 0x5B, 0x86, 0x3F, 0xFC, 0xFA, 0xF9, 0x42, 0xC4, 0x5B, 0x66, 0x9F, 0x2F, 0x9F, 0x5F,
    0x4A, 0xE5, 0x6B, 0xE7, 0xC5, 0xD5, 0xD5, 0x19, 0x63, 0xA7, 0x6B, 0xE8, 0x0F, 0x6F, 0x5F, 0x5F,
    0x4A, 0xE5, 0x6B, 0xE8, 0xC5, 0xC5, 0xE6, 0xD6, 0x6C, 0x08, 0x5B, 0x86, 0xCB, 0x8F, 0x27, 0x15,
    0x4B, 0x05, 0x63, 0xC7, 0xD5, 0xD9, 0x29, 0x28, 0x5B, 0x86, 0x3A, 0x42, 0x00, 0x00, 0x88, 0x89,
    0x3A, 0x83, 0x5B, 0x86, 0x5F, 0x53, 0x63, 0x63, 0x53, 0x45, 0x74, 0x29, 0xF0, 0xCA, 0xEB, 0x27,
    0x3A, 0x42, 0x5B, 0x66, 0x6B, 0xA9, 0x29, 0x25, 0x5B, 0xA7, 0x6C, 0x08, 0x0F, 0x1F, 0x3F, 0x3F,
    0x84, 0x6A, 0x84, 0x6A, 0xFF, 0xFF, 0xFF, 0xFF, 0xCD, 0xB5, 0xCD, 0xB5, 0xFF, 0xFF, 0xFF, 0xFF,
    0xCD, 0x94, 0xCD, 0x94, 0xFF, 0xFF, 0xFF, 0xFF, 0xCD, 0xB5, 0xCD, 0xB5, 0xFF, 0xFF, 0xFF, 0xFF,
    0xCD, 0xB5, 0xCD, 0xB5, 0xFF, 0xFF, 0xFF, 0xFF, 0xCD, 0xB5, 0xCD, 0xB5, 0xFF, 0xFF, 0xFF, 0xFF,
    0xCD, 0xB5, 0xCD, 0xB5, 0xFF, 0xFF, 0xFF, 0xFF, 0xCD, 0xB5, 0xCD, 0xB5, 0xFF, 0xFF, 0xFF, 0xFF,
    0xCD, 0xB5, 0xCD, 0xB5, 0xFF, 0xFF, 0xFF, 0xFF, 0xBC, 0xF4, 0xD6, 0x18, 0xE0, 0xF5, 0xE5, 0xE5,
    0xC4, 0xF4, 0xD5, 0xD7, 0xFF, 0x55, 0x68, 0x00, 0xC4, 0xF3, 0xD5, 0xF7, 0xF5, 0x7E, 0x05, 0x25,
    0xD5, 0xF7, 0xBC, 0x8F, 0xA8, 0x0A, 0x2E, 0x97, 0x8C, 0x4B, 0xD5, 0xD7, 0x50, 0x54, 0xB6, 0xAC,
    0xDE, 0x18, 0xAB, 0xED, 0xD7, 0x97, 0xBF, 0x0A, 0xD5, 0xF7, 0xB4, 0x30, 0xB9, 0xDE, 0x5C, 0xDA,
    0x53, 0x45, 0x5B, 0x86, 0x20, 0x27, 0x17, 0x1F, 0x00, 0x00, 0x5B, 0x66, 0xFF, 0xFF, 0xFF, 0xFD,
    0x53, 0x45, 0x5B, 0xA6, 0x1F, 0x1F, 0x9F, 0x9F, 0x63, 0x87, 0x6B, 0xE8, 0xFC, 0xFE, 0xFD, 0xFD,
    0x6B, 0xC7, 0x53, 0x66, 0x0A, 0x08, 0x2C, 0x34, 0x63, 0xA7, 0x74, 0x08, 0x6B, 0x47, 0x47, 0x4B,
    0x6B, 0xC8, 0x53, 0x45, 0x34, 0x94, 0x9C, 0x94, 0x6C, 0x08, 0x4A, 0xE4, 0x29, 0x2D, 0x3D, 0xF7,
    0x4B, 0x04, 0x74, 0x08, 0x00, 0x02, 0x0D, 0x2F, 0x53, 0x25, 0x3A, 0x42, 0x0D, 0x2F, 0x2A, 0x2A,
    0x53, 0x45, 0x53, 0x66, 0x3F, 0x7F, 0xFF, 0xFF, 0x42, 0xA4, 0x5B, 0x86, 0x40, 0x42, 0xC1, 0xF1,
    0x3A, 0x83, 0x5B, 0xA6, 0x25, 0x15, 0x97, 0x57, 0x7C, 0x2A, 0x7C, 0x2A, 0xFF, 0xFF, 0xFF, 0xFF,
    0x5B, 0xA6, 0x74, 0x29, 0x0F, 0x2F, 0x3F, 0x7F, 0xCD, 0x94, 0xCD, 0x94, 0xFF, 0xFF, 0xFF, 0xFF,
    0xCD, 0xB5, 0xCD, 0xB5, 0xFF, 0xFF, 0xFF, 0xFF, 0xCD, 0xB5, 0xCD, 0xB5, 0xFF, 0xFF, 0xFF, 0xFF,
    0xCD, 0xB5, 0xCD, 0xB5, 0xFF, 0xFF, 0xFF, 0xFF, 0xCD, 0xB5, 0xCD, 0xB5, 0xFF, 0xFF, 0xFF, 0xFF,
    0xCD, 0xB5, 0xCD, 0xB5, 0xFF, 0xFF, 0xFF, 0xFF, 0xBC, 0xF3, 0xD5, 0xF7, 0xFF, 0xFC, 0xFD, 0xFD,
    0xCD, 0xB5, 0xCD, 0xB5, 0xFF, 0xFF, 0xFF, 0xFF, 0xCD, 0xB5, 0xCD, 0xB5, 0xFF, 0xFF, 0xFF, 0xFF,
    0xD5, 0xD6, 0xA3, 0xCB, 0xBE, 0xB5, 0x2D, 0x03, 0xD5, 0xF7, 0xB4, 0x50, 0xC0, 0x70, 0xE8, 0xEE,
    0xC5, 0x34, 0xDE, 0x18, 0xC0, 0xE9, 0xE5, 0xE5, 0xDE, 0x18, 0xBC, 0xB2, 0xF7, 0x28, 0x00, 0x00,
    0xD6, 0x18, 0xC5, 0x34, 0x05, 0x0A, 0x00, 0xB5, 0x84, 0x0B, 0xCD, 0xB6, 0xA5, 0x80, 0x6C, 0x94,
    0xC4, 0xF3, 0xA3, 0xAC, 0x00, 0x20, 0x36, 0x35, 0xB4, 0xF1, 0xB4, 0x51, 0xD2, 0xD4, 0xA6, 0x00,
    0x53, 0x45, 0x5B, 0xA7, 0x9F, 0x1F, 0x1F, 0x2F, 0x42, 0xC4, 0x6B, 0xC7, 0xFD, 0xFE, 0xFE, 0xFC,
    0x53, 0x25, 0x53, 0x66, 0x9F, 0x9F, 0x9F, 0xAF, 0x3A, 0x83, 0x3A, 0x83, 0xFF, 0xFF, 0xFF, 0xFF,
    0x6B, 0xC7, 0x4A, 0xE4, 0xB4, 0xF4, 0x9C, 0x9A, 0x42, 0xA4, 0x53, 0x45, 0x59, 0x6B, 0x63, 0x4F,
    0x4B, 0x05, 0x5B, 0x66, 0x46, 0x06, 0xEA, 0xE1, 0x3A, 0x63, 0x4A, 0xE4, 0x4F, 0x7F, 0x7F, 0xFF,
    0x6C, 0x08, 0x6C, 0x08, 0xFF, 0xFF, 0xFF, 0xFF, 0x4B, 0x25, 0x6C, 0x08, 0xF2, 0xC9, 0xCB, 0xA7,
    0x63, 0xA6, 0x63, 0xC7, 0xFF, 0xFD, 0xFD, 0xF8, 0x5B, 0x86, 0x7C, 0x4A, 0x0F, 0x1F, 0x3F, 0xBF,
    0x9C, 0xEE, 0x9C, 0xEE, 0xFF, 0xFF, 0xFF, 0xFF, 0xCD, 0xB5, 0xCD, 0xB5, 0xFF, 0xFF, 0xFF, 0xFF,
    0xCD, 0xB5, 0xCD, 0xB5, 0xFF, 0xFF, 0xFF, 0xFF, 0xCD, 0xB5, 0xCD, 0xB5, 0xFF, 0xFF, 0xFF, 0xFF,
    0xCD, 0xB5, 0xCD, 0xB5, 0xFF, 0xFF, 0xFF, 0xFF, 0xCD, 0xB5, 0xCD, 0xB5, 0xFF, 0xFF, 0xFF, 0xFF,
    0xCD, 0xB5, 0xCD, 0xB5, 0xFF, 0xFF, 0xFF, 0xFF, 0xCD, 0xB5, 0xCD, 0xB5, 0xFF, 0xFF, 0xFF, 0xFF,
    0xCD, 0xB5, 0xCD, 0xB5, 0xFF, 0xFF, 0xFF, 0xFF, 0x00, 0x00, 0xD5, 0xD6, 0xFF, 0xFF, 0xFF, 0xFD,
    0xCD, 0xB5, 0xCD, 0xB5, 0xFF, 0xFF, 0xFF, 0xFF, 0xBC, 0xD3, 0xD5, 0xD7, 0xFC, 0xFF, 0xF5, 0xF5,
    0xB4, 0x92, 0xCD, 0x76, 0xFF, 0xFF, 0x65, 0x26, 0xC5, 0x14, 0xD6, 0x18, 0xF5, 0xFA, 0x56, 0x02,
    0xCD, 0x96, 0xB4, 0x50, 0x8A, 0xEA, 0x9A, 0x95, 0xC5, 0x14, 0xA3, 0xCF, 0xAE, 0x09, 0x2F, 0x8B,
    0xDE, 0x18, 0xC5, 0x13, 0x35, 0x68, 0x80, 0x80, 0x6B, 0xC7, 0xCD, 0x96, 0x54, 0x5C, 0x7C, 0xFC,
    0x93, 0xAE, 0xDE, 0x18, 0x95, 0x2F, 0x0B, 0x00, 0x73, 0xC8, 0x74, 0x08, 0xFC, 0xFD, 0xFD, 0xFD,
    0x4B, 0x25, 0x5B, 0x66, 0xAF, 0xAF, 0x9F, 0x9F, 0x4B, 0x04, 0x53, 0x25, 0xFF, 0xFF, 0xFE, 0xFD,
    0x53, 0x45, 0x5B, 0xA6, 0x1F, 0x9F, 0x9F, 0x9F, 0x4A, 0xE4, 0x5B, 0x66, 0xF9, 0xC9, 0xEB, 0x17,
    0x4B, 0x05, 0x53, 0x25, 0x67, 0x57, 0x5F, 0x7F, 0x42, 0xE4, 0x42, 0xE4, 0xFF, 0xFF, 0xFF, 0xFF,
    0x53, 0x45, 0x53, 0x45, 0xFF, 0xFF, 0xFF, 0xFF, 0x42, 0xC4, 0x63, 0xC7, 0xFF, 0xFE, 0xFE, 0xF1,
    0x5B, 0xA6, 0x74, 0x08, 0xF8, 0xE2, 0xE3, 0x07, 0x94, 0xED, 0x94, 0xED, 0xFF, 0xFF, 0xFF, 0xFF,
    0x5B, 0x86, 0x74, 0x29, 0x0F, 0x2F, 0xBF, 0x7F, 0xCD, 0x95, 0xCD, 0x95, 0xFF, 0xFF, 0xFF, 0xFF,
    0xCD, 0xB5, 0xCD, 0xB5, 0xFF, 0xFF, 0xFF, 0xFF, 0xCD, 0xB5, 0xCD, 0xB5, 0xFF, 0xFF, 0xFF, 0xFF,
    0xCD, 0xB5, 0xCD, 0xB5, 0xFF, 0xFF, 0xFF, 0xFF, 0xCD, 0xB5, 0xCD, 0xB5, 0xFF, 0xFF, 0xFF, 0xFF,
    0xCD, 0xB5, 0xCD, 0xB5, 0xFF, 0xFF, 0xFF, 0xFF, 0xCD, 0xB5, 0xCD, 0xB5, 0xFF, 0xFF, 0xFF, 0xFF,
    0xCD, 0xB5, 0xCD, 0xB5, 0xFF, 0xFF, 0xFF, 0xFF, 0xCD, 0xB5, 0xCD, 0xB5, 0xFF, 0xFF, 0xFF, 0xFF,
    0xCD, 0xB5, 0xCD, 0xB5, 0xFF, 0xFF, 0xFF, 0xFF, 0xCD, 0x75, 0xDE, 0x18, 0xD5, 0xE5, 0xEA, 0xC9,
    0xCD, 0xB5, 0xCD, 0xB5, 0xFF, 0xFF, 0xFF, 0xFF, 0xCD, 0xB5, 0xCD, 0xB5, 0xFF, 0xFF, 0xFF, 0xFF,
    0xDE, 0x18, 0xA3, 0xC9, 0x95, 0xF5, 0xB5, 0x26, 0xDE, 0x18, 0xA3, 0xAC, 0x55, 0x7A, 0xEA, 0x82,
    0xBC, 0x91, 0xD5, 0xD7, 0xC6, 0xF5, 0xF5, 0xF5, 0xDE, 0x18, 0xC5, 0x54, 0x03, 0x00, 0x00, 0x01,
    0x8B, 0x6D, 0xB4, 0xB2, 0x8A, 0x6F, 0x6F, 0x5F, 0x7C, 0x29, 0xC5, 0x54, 0x2C, 0x48, 0xD2, 0xD5,
    0xB4, 0xD3, 0xC5, 0x55, 0x3F, 0xBF, 0x7F, 0xFF, 0xBC, 0x6C, 0xD5, 0xD6, 0xD4, 0xD6, 0xF9, 0xF5,
    0x4A, 0xE4, 0x5B, 0x86, 0x5C, 0x5C, 0x58, 0x56, 0x4A, 0xE4, 0x53, 0x25, 0x9F, 0xBF, 0xBF, 0xFF,
    0x5B, 0x66, 0x5B, 0xA6, 0x97, 0xAF, 0xAF, 0xAF, 0x4A, 0xE4, 0x4A, 0xE4, 0xFF, 0xFF, 0xFF, 0xFF,
    0x42, 0x83, 0x42, 0x83, 0xFF, 0xFF, 0xFF, 0xFF, 0x42, 0xC4, 0x63, 0xC7, 0xC9, 0xC5, 0xA7, 0x97,
    0x42, 0xC4, 0x63, 0xA7, 0xFE, 0xFD, 0xF9, 0xC5, 0x63, 0xA6, 0x7C, 0x6A, 0x0F, 0x1F, 0x7F, 0xFF,
    0x9C, 0xED, 0x9C, 0xED, 0xFF, 0xFF, 0xFF, 0xFF, 0xCD, 0xB5, 0xCD, 0xB5, 0xFF, 0xFF, 0xFF, 0xFF,
    0xCD, 0xB5, 0xCD, 0xB5, 0xFF, 0xFF, 0xFF, 0xFF, 0xCD, 0xB5, 0xCD, 0xB5, 0xFF, 0xFF, 0xFF, 0xFF,
    0xCD, 0xB5, 0xCD, 0xB5, 0xFF, 0xFF, 0xFF, 0xFF, 0xCD, 0xB5, 0xCD, 0xB5, 0xFF, 0xFF, 0xFF, 0xFF,
    0xCD, 0xB5, 0xCD, 0xB5, 0xFF, 0xFF, 0xFF, 0xFF, 0xCD, 0xB5, 0xCD, 0xB5, 0xFF, 0xFF, 0xFF, 0xFF,
    0xCD, 0xB5, 0xCD, 0xB5, 0xFF, 0xFF, 0xFF, 0xFF, 0xCD, 0xB5, 0xCD, 0xB5, 0xFF, 0xFF, 0xFF, 0xFF,
    0xCD, 0xB5, 0xCD, 0xB5, 0xFF, 0xFF, 0xFF, 0xFF, 0xCD, 0xB5, 0xCD, 0xB5, 0xFF, 0xFF, 0xFF, 0xFF,
    0xCD, 0xB5, 0xCD, 0xB5, 0xFF, 0xFF, 0xFF, 0xFF, 0xCD, 0xB5, 0xCD, 0xB5, 0xFF, 0xFF, 0xFF, 0xFF,
    0xCD, 0xB5, 0xCD, 0xB5, 0xFF, 0xFF, 0xFF, 0xFF, 0x00, 0x00, 0xCD, 0xB5, 0xFF, 0xFD, 0xFD, 0xFD,
    0xB4, 0xB2, 0xCD, 0x95, 0xF5, 0xF5, 0xF4, 0xD0, 0xD5, 0xD7, 0xAB, 0xEF, 0x0A, 0xBD, 0xD5, 0x55,
    0xC5, 0x96, 0xAC, 0x0F, 0x2F, 0x2B, 0x35, 0x2D, 0xB4, 0x51, 0x83, 0x06, 0x02, 0x00, 0x0B, 0xB5,
    0x9A, 0xEB, 0xB4, 0x51, 0xFF, 0x7F, 0xAF, 0xA2, 0x6B, 0xC7, 0xC5, 0xD5, 0xD5, 0xD5, 0xF6, 0x80,
    0xBC, 0xF3, 0xAB, 0xEF, 0x77, 0xFA, 0xE2, 0xC2, 0x7B, 0xC9, 0xC5, 0x34, 0xF4, 0x7C, 0x7C, 0xBC,
    0x5B, 0x66, 0x63, 0xA6, 0x5F, 0x5F, 0x9F, 0x1F, 0x00, 0x00, 0x53, 0x66, 0xFF, 0xFF, 0xFF, 0xFD,
    0x53, 0x45, 0x5B, 0xA7, 0x9F, 0x9F, 0xAF, 0x9F, 0x42, 0xA4, 0x5B, 0x86, 0xFD, 0xF5, 0xC5, 0xE5,
    0x5B, 0x86, 0x84, 0x8A, 0xC2, 0x03, 0x0B, 0x07, 0xAD, 0x90, 0xAD, 0x90, 0xFF, 0xFF, 0xFF, 0xFF,
    0x5B, 0x86, 0x84, 0xAB, 0x0F, 0x1F, 0x3F, 0x7F, 0xCD, 0xB5, 0xCD, 0xB5, 0xFF, 0xFF, 0xFF, 0xFF,
    0xCD, 0xB5, 0xCD, 0xB5, 0xFF, 0xFF, 0xFF, 0xFF, 0xCD, 0xB5, 0xCD, 0xB5, 0xFF, 0xFF, 0xFF, 0xFF,
    0xCD, 0xB5, 0xCD, 0xB5, 0xFF, 0xFF, 0xFF, 0xFF, 0xCD, 0xB5, 0xCD, 0xB5, 0xFF, 0xFF, 0xFF, 0xFF,
    0xCD, 0xB5, 0xCD, 0xB5, 0xFF, 0xFF, 0xFF, 0xFF, 0xCD, 0xB5, 0xCD, 0xB5, 0xFF, 0xFF, 0xFF, 0xFF,
    0xCD, 0xB5, 0xCD, 0xB5, 0xFF, 0xFF, 0xFF, 0xFF, 0xCD, 0xB5, 0xCD, 0xB5, 0xFF, 0xFF, 0xFF, 0xFF,
    0xCD, 0xB5, 0xCD, 0xB5, 0xFF, 0xFF, 0xFF, 0xFF, 0xCD, 0xB5, 0xCD, 0xB5, 0xFF, 0xFF, 0xFF, 0xFF,
    0xCD, 0xB5, 0xCD, 0xB5, 0xFF, 0xFF, 0xFF, 0xFF, 0xCD, 0xB5, 0xCD, 0xB5, 0xFF, 0xFF, 0xFF, 0xFF,
    0xCD, 0xB5, 0xCD, 0xB5, 0xFF, 0xFF, 0xFF, 0xFF, 0xB4, 0x92, 0xC5, 0x55, 0xFF, 0xFF, 0xFF, 0xF4,
    0xCD, 0xB5, 0xCD, 0xB5, 0xFF, 0xFF, 0xFF, 0xFF, 0xB4, 0x71, 0xBD, 0x14, 0xD0, 0xE8, 0x50, 0x80,
    0xA3, 0xAE, 0xC5, 0x34, 0xD6, 0xF5, 0x5A, 0x80, 0xC5, 0x54, 0x8A, 0xE7, 0xFD, 0xFC, 0x80, 0xE2,
    0xB4, 0xB3, 0xA3, 0xCF, 0xD5, 0x25, 0xAB, 0xBD, 0xBC, 0xF3, 0xA3, 0xAE, 0x54, 0xF4, 0xE8, 0xC8,
    0xCD, 0x96, 0xAC, 0x0F, 0x40, 0xC0, 0x80, 0x02, 0x63, 0x87, 0xC5, 0x55, 0x5C, 0x56, 0x55, 0x56,
    0xB4, 0x51, 0xC5, 0x75, 0x96, 0xC2, 0xF9, 0xFF, 0xBD, 0x14, 0xD5, 0xF7, 0x24, 0x2A, 0xD5, 0xD6,
    0x42, 0xA3, 0x5B, 0x86, 0x5F, 0x5F, 0x5C, 0x54, 0x42, 0x83, 0x63, 0xC7, 0x25, 0x97, 0x97, 0x9F,
    0x5B, 0x86, 0x3A, 0xA3, 0x01, 0x01, 0x03, 0x02, 0x53, 0x66, 0x6C, 0x08, 0x1F, 0xBF, 0x7F, 0xFF,
    0xB5, 0x91, 0xB5, 0x91, 0xFF, 0xFF, 0xFF, 0xFF, 0xCD, 0xB5, 0xCD, 0xB5, 0xFF, 0xFF, 0xFF, 0xFF,
    0xCD, 0xB5, 0xCD, 0xB5, 0xFF, 0xFF, 0xFF, 0xFF, 0xCD, 0xB5, 0xCD, 0xB5, 0xFF, 0xFF, 0xFF, 0xFF,
    0xCD, 0xB5, 0xCD, 0xB5, 0xFF, 0xFF, 0xFF, 0xFF, 0xCD, 0xB5, 0xCD, 0xB5, 0xFF, 0xFF, 0xFF, 0xFF,
    0xCD, 0xB5, 0xCD, 0xB5, 0xFF, 0xFF, 0xFF, 0xFF, 0xCD, 0xB5, 0xCD, 0xB5, 0xFF, 0xFF, 0xFF, 0xFF,
    0xCD, 0xB5, 0xCD, 0xB5, 0xFF, 0xFF, 0xFF, 0xFF, 0xCD, 0xB5, 0xCD, 0xB5, 0xFF, 0xFF, 0xFF, 0xFF,
    0xCD, 0xB5, 0xCD, 0xB5, 0xFF, 0xFF, 0xFF, 0xFF, 0xCD, 0xB5, 0xCD, 0xB5, 0xFF, 0xFF, 0xFF, 0xFF,
    0xCD, 0xB5, 0xCD, 0xB5, 0xFF, 0xFF, 0xFF, 0xFF, 0xCD, 0xB5, 0xCD, 0xB5, 0xFF, 0xFF, 0xFF, 0xFF,
    0xCD, 0xB5, 0xCD, 0xB5, 0xFF, 0xFF, 0xFF, 0xFF, 0xCD, 0xB5, 0xCD, 0xB5, 0xFF, 0xFF, 0xFF, 0xFF,
    0xCD, 0xB5, 0xCD, 0xB5, 0xFF, 0xFF, 0xFF, 0xFF, 0xC5, 0x75, 0xAB, 0xCB, 0x35, 0x2D, 0x01, 0x02,
    0xCD, 0xB5, 0xCD, 0xB5, 0xFF, 0xFF, 0xFF, 0xFF, 0xC5, 0x34, 0xCD, 0xB6, 0x55, 0xD4, 0xE8, 0xFF,
    0xBD, 0x13, 0x82, 0xC5, 0xD6, 0xF7, 0xFA, 0x00, 0xC5, 0x34, 0xAC, 0x71, 0xE7, 0xA3, 0xA0, 0x20,
    0xBC, 0x91, 0xC5, 0x76, 0x60, 0x22, 0xFF, 0xFF, 0xCD, 0xB5, 0xB4, 0xB2, 0xBA, 0xF6, 0xD5, 0x07,
    0xBD, 0x14, 0xC5, 0x34, 0x7F, 0x7F, 0xBF, 0x3F, 0x8C, 0x4B, 0xD5, 0xF7, 0xF6, 0xFC, 0xFC, 0xFC,
    0xBC, 0xD3, 0xBC, 0xF3, 0x7F, 0x3F, 0xFF, 0xFF, 0x8C, 0x4B, 0x8C, 0x6B, 0xFE, 0xFD, 0xFF, 0xFF,
    0x5B, 0x66, 0x6C, 0x28, 0x22, 0x23, 0x27, 0x2F, 0xB5, 0x90, 0xB5, 0x90, 0xFF, 0xFF, 0xFF, 0xFF,
    0x53, 0x44, 0x73, 0xA7, 0x3F, 0x76, 0xF4, 0xF8, 0x4B, 0x04, 0x53, 0x44, 0xFF, 0x56, 0x86, 0x96,
    0xCD, 0xB5, 0xCD, 0xB5, 0xFF, 0xFF, 0xFF, 0xFF, 0xCD, 0xB5, 0xCD, 0xB5, 0xFF, 0xFF, 0xFF, 0xFF,
    0x4A, 0xC4, 0x53, 0x44, 0xFF, 0x55, 0x95, 0x58, 0x4A, 0xE3, 0x5B, 0x65, 0xFF, 0x55, 0x5A, 0x20,
    0xCD, 0xB5, 0xCD, 0xB5, 0xFF, 0xFF, 0xFF, 0xFF, 0xCD, 0xB5, 0xCD, 0xB5, 0xFF, 0xFF, 0xFF, 0xFF,
    0x4B, 0x04, 0x6B, 0xC6, 0xFF, 0x55, 0xAA, 0x0A, 0x5B, 0x65, 0x5B, 0xA5, 0xFF, 0x55, 0x59, 0x50,
    0xCD, 0xB5, 0xCD, 0xB5, 0xFF, 0xFF, 0xFF, 0xFF, 0xCD, 0xB5, 0xCD, 0xB5, 0xFF, 0xFF, 0xFF, 0xFF,
    0x5B, 0xA5, 0x74, 0x07, 0xFF, 0xA5, 0x08, 0x08, 0x63, 0xA6, 0x6C, 0x05, 0xFF, 0x56, 0x08, 0x20,
    0xCD, 0xB5, 0xCD, 0xB5, 0xFF, 0xFF, 0xFF, 0xFF, 0xCD, 0xB5, 0xCD, 0xB5, 0xFF, 0xFF, 0xFF, 0xFF,
    0x5B, 0x85, 0x6C, 0x25, 0xFF, 0x95, 0xAA, 0x02, 0x63, 0xC5, 0x6B, 0xE6, 0xFF, 0x55, 0x25, 0x85,
    0xCD, 0xB5, 0xCD, 0xB5, 0xFF, 0xFF, 0xFF, 0xFF, 0xCD, 0xB5, 0xCD, 0xB5, 0xFF, 0xFF, 0xFF, 0xFF,
    0x5B, 0x86, 0x74, 0x07, 0xFF, 0x58, 0xA8, 0xAA, 0x63, 0xA6, 0x6C, 0x06, 0xFF, 0x65, 0x0A, 0xAA,
    0xCD, 0xB5, 0xCD, 0xB5, 0xFF, 0xFF, 0xFF, 0xFF, 0x00, 0x00, 0xCD, 0xB5, 0xF7, 0xFF, 0xFF, 0xFF,
    0x6B, 0xE7, 0x74, 0x46, 0xFF, 0x85, 0x06, 0xA6, 0x74, 0x27, 0x84, 0x49, 0xFF, 0x94, 0x02, 0x00,
    0xCD, 0xB5, 0xCD, 0xB5, 0xFF, 0xFF, 0xFF, 0xFF, 0xCD, 0xB5, 0xCD, 0xB5, 0xFF, 0xFF, 0xFF, 0xFF,
    0x7C, 0x28, 0x94, 0x8B, 0xFF, 0x2A, 0xA5, 0x0A, 0x84, 0x8A, 0x9C, 0xAD, 0xFF, 0x2A, 0x5A, 0x56,
};

/* 80526C18-805270E0 04C8+00 s=1 e=0 z=0  None .data      l_flowerPos2 */
SECTION_DATA static u8 l_flowerPos2[1224] = {
    0x40, 0x25, 0x9F, 0x34, 0x42, 0xC2, 0x95, 0x72, 0xC1, 0x22, 0x34, 0x78, 0x41, 0x4D, 0xF9, 0x63,
    0x43, 0x09, 0x35, 0x0D, 0x40, 0x97, 0xD7, 0x54, 0x41, 0x76, 0x80, 0x55, 0x42, 0xBA, 0x1C, 0xB4,
    0x41, 0x91, 0x3E, 0x0D, 0xC0, 0x99, 0x8D, 0x47, 0x42, 0xC2, 0x8D, 0xF5, 0x41, 0x12, 0xA1, 0x12,
    0x41, 0xB9, 0x1A, 0xFF, 0x42, 0xBA, 0x37, 0xE3, 0xBF, 0xBD, 0xD2, 0xA6, 0x41, 0x4D, 0xF9, 0x34,
    0x43, 0x09, 0x35, 0x0F, 0x40, 0x97, 0xD6, 0xB6, 0xC1, 0x07, 0x14, 0xD0, 0x42, 0xCC, 0x9E, 0xFD,
    0xC1, 0x42, 0x39, 0x8F, 0xC0, 0xC1, 0xA4, 0x94, 0x43, 0x14, 0xDF, 0xBB, 0x40, 0xD1, 0x75, 0xE2,
    0x40, 0x32, 0xFE, 0x8B, 0x42, 0xC7, 0x29, 0xAC, 0x41, 0x9E, 0x0C, 0xC8, 0xC0, 0xC1, 0xA4, 0xE1,
    0x43, 0x14, 0xDF, 0xBB, 0x40, 0xD1, 0x75, 0x8E, 0xC1, 0x95, 0xAF, 0x93, 0x42, 0xC4, 0x31, 0xF1,
    0x41, 0x1A, 0xB9, 0x87, 0x41, 0x51, 0x09, 0xAB, 0x42, 0xCF, 0x96, 0xC1, 0xC0, 0x03, 0x66, 0x1F,
    0xC1, 0x01, 0x95, 0x6E, 0x42, 0xB3, 0x6A, 0x42, 0xC1, 0x8B, 0x4C, 0x1D, 0xC0, 0xD4, 0xA5, 0x9C,
    0x42, 0xFE, 0x7B, 0x90, 0xC1, 0x0A, 0x4F, 0x99, 0x40, 0x1C, 0xE1, 0x15, 0x42, 0xC2, 0x2D, 0x47,
    0x41, 0x06, 0xA6, 0x41, 0xC1, 0x7B, 0x73, 0x6E, 0x42, 0xB8, 0x6D, 0x93, 0x3F, 0x5A, 0xCC, 0xA3,
    0x41, 0x21, 0x15, 0xF4, 0x42, 0xBD, 0x29, 0xFE, 0xC1, 0x1D, 0x9F, 0x3A, 0xC0, 0xD4, 0xA5, 0xEC,
    0x42, 0xFE, 0x7B, 0x93, 0xC1, 0x0A, 0x4F, 0xE9, 0x41, 0x06, 0x70, 0xFC, 0x42, 0xC4, 0x24, 0x9D,
    0x40, 0x7C, 0x3E, 0xE6, 0x41, 0x24, 0x1D, 0x91, 0x42, 0xC3, 0xD6, 0x8C, 0x40, 0x7C, 0x3E, 0xE6,
    0x3F, 0xEA, 0x26, 0xBB, 0xC1, 0x20, 0x00, 0x00, 0x3E, 0x25, 0x61, 0x91, 0xBF, 0x8B, 0x0E, 0xC3,
    0xC1, 0x20, 0x00, 0x01, 0x3E, 0x1C, 0xD6, 0x80, 0x41, 0x15, 0x52, 0x2B, 0x42, 0xC4, 0x0E, 0x24,
    0x40, 0x40, 0xBB, 0xC3, 0x41, 0x15, 0x3C, 0x61, 0x42, 0xC3, 0xED, 0x00, 0x40, 0x9B, 0xE1, 0x05,
    0x3E, 0xBE, 0xC3, 0xFC, 0xC1, 0x20, 0x00, 0x00, 0x3F, 0xCE, 0x28, 0xBB, 0x3E, 0xBE, 0xBA, 0x6B,
    0xC1, 0x1F, 0xFF, 0xFF, 0xBF, 0xA5, 0xFF, 0xCE, 0xC0, 0x6B, 0x3A, 0x75, 0x42, 0xC1, 0x3D, 0x51,
    0xC0, 0xA0, 0xCD, 0x8E, 0xBF, 0xDC, 0xEC, 0x63, 0x42, 0xC1, 0x54, 0xB6, 0xC0, 0xA0, 0x6C, 0x42,
    0x3F, 0x88, 0xCC, 0x2D, 0xC1, 0x1F, 0xFF, 0xFF, 0xBF, 0x24, 0x6B, 0xBE, 0xBF, 0xC0, 0xE6, 0x08,
    0xC1, 0x20, 0x00, 0x01, 0xBF, 0x29, 0x08, 0x81, 0xC0, 0x2C, 0x6A, 0x66, 0x42, 0xC1, 0x36, 0x4D,
    0xC0, 0xBF, 0xC9, 0xD6, 0xC0, 0x2D, 0x46, 0x30, 0x42, 0xC1, 0x5B, 0xB5, 0xC0, 0x81, 0x6F, 0xF4,
    0xBE, 0x68, 0x6B, 0xDF, 0xC1, 0x20, 0x00, 0x00, 0x3F, 0x23, 0x29, 0xD4, 0xBE, 0x58, 0xD0, 0xCC,
    0xC1, 0x20, 0x00, 0x01, 0xBF, 0xF8, 0x39, 0x71, 0xC0, 0x79, 0x82, 0x0E, 0x42, 0xD0, 0x8E, 0xE6,
    0x40, 0x7C, 0x3E, 0xE6, 0xC0, 0x00, 0x2E, 0x23, 0x42, 0xD0, 0xA5, 0xB2, 0x40, 0x7C, 0x3E, 0xE6,
    0x3F, 0x2F, 0x08, 0x57, 0xC1, 0x1F, 0x8E, 0x06, 0xBB, 0xAE, 0xF2, 0xC7, 0xBF, 0xD7, 0xC7, 0x1D,
    0xC1, 0x20, 0x71, 0xFC, 0xBB, 0xAE, 0xF2, 0xC7, 0xC0, 0x3C, 0xE3, 0xDE, 0x42, 0xD0, 0xAB, 0x13,
    0x40, 0x3F, 0x99, 0x18, 0xC0, 0x3C, 0xCC, 0x57, 0x42, 0xD0, 0x89, 0x86, 0x40, 0x9C, 0x72, 0x58,
    0xBF, 0x00, 0x08, 0x31, 0xC1, 0x20, 0xA7, 0xBD, 0x3F, 0x96, 0xEC, 0x4A, 0xBF, 0x00, 0x7D, 0xB3,
    0xC1, 0x1F, 0x58, 0x45, 0xBF, 0x98, 0x4A, 0x30, 0x40, 0xBD, 0x8F, 0x9B, 0x42, 0x63, 0xF3, 0x30,
    0x40, 0x23, 0x56, 0x11, 0x41, 0x65, 0x2F, 0xC6, 0x42, 0xBB, 0x00, 0xB1, 0xC1, 0x8C, 0x12, 0x7A,
    0x41, 0xCA, 0x62, 0xA7, 0x42, 0xBB, 0x00, 0xB0, 0x41, 0x28, 0xB1, 0x15, 0xC1, 0x5B, 0xA6, 0x8E,
    0x42, 0xBB, 0x00, 0xAE, 0xC0, 0xD1, 0x1E, 0x86, 0xC0, 0x30, 0x44, 0xBF, 0x42, 0xBB, 0x00, 0xAD,
    0x41, 0xAC, 0x23, 0x4E, 0xBF, 0xAD, 0xFA, 0x8F, 0x41, 0xB0, 0x93, 0x1B, 0x3F, 0x85, 0x39, 0x9F,
    0x41, 0x9F, 0x2B, 0xD3, 0x42, 0x90, 0x9F, 0x64, 0xC1, 0x8A, 0x85, 0x5E, 0x41, 0x7B, 0x1C, 0x3E,
    0x42, 0x90, 0x9F, 0x63, 0x41, 0xA7, 0xF3, 0x96, 0xC1, 0x13, 0xCB, 0x32, 0x42, 0x90, 0x9F, 0x65,
    0xC1, 0x92, 0x20, 0x52, 0xC1, 0x7F, 0xDB, 0xED, 0x42, 0x90, 0x9F, 0x65, 0x41, 0x46, 0xD3, 0x80,
    0xBF, 0x24, 0xCA, 0xC5, 0x42, 0x44, 0xF1, 0x22, 0xC0, 0x3B, 0xEA, 0xC4, 0xC0, 0x35, 0x33, 0xCE,
    0x42, 0x44, 0xDE, 0xC0, 0xC0, 0x3C, 0xDA, 0x27, 0xBF, 0xDF, 0x4A, 0x77, 0x42, 0x44, 0xF6, 0xA3,
    0xBF, 0xEC, 0xBC, 0x8C, 0xBF, 0xDD, 0x8A, 0x1A, 0x42, 0x44, 0xD9, 0x3D, 0xC0, 0x81, 0x30, 0x55,
    0xBF, 0x4A, 0x36, 0xF4, 0x42, 0x56, 0x1A, 0x91, 0x40, 0x0B, 0xFC, 0x11, 0xC0, 0x3B, 0xC6, 0x93,
    0x42, 0x55, 0xE6, 0xFE, 0x40, 0x0B, 0xFC, 0x0D, 0xBF, 0xEE, 0x39, 0xBD, 0x42, 0x55, 0xDA, 0xD7,
    0x40, 0x50, 0x93, 0xC4, 0xBF, 0xEE, 0x6E, 0xEB, 0x42, 0x56, 0x26, 0xB9, 0x3F, 0x8E, 0xC8, 0xB4,
    0x40, 0xBF, 0xC7, 0x22, 0x42, 0x8E, 0x14, 0xBA, 0x40, 0x3F, 0x9A, 0x4E, 0x41, 0x03, 0x00, 0x18,
    0x42, 0x8D, 0xE7, 0xA4, 0x40, 0x3F, 0xCE, 0xF6, 0x40, 0xE2, 0xF3, 0x95, 0x42, 0x8E, 0x07, 0xC0,
    0x3F, 0xF2, 0xF4, 0xA5, 0x40, 0xE2, 0xDA, 0xA3, 0x42, 0x8D, 0xF4, 0x9D, 0x40, 0x82, 0xF4, 0x90,
    0xBE, 0x9C, 0x1E, 0xDE, 0x42, 0x00, 0x1D, 0x6A, 0xC0, 0xD3, 0x0E, 0xA8, 0x41, 0x2D, 0xDB, 0x19,
    0x42, 0x00, 0x1D, 0x68, 0xC0, 0xC8, 0xE4, 0xE0, 0x40, 0x17, 0x47, 0xAA, 0x41, 0x99, 0xE3, 0xCB,
    0x3F, 0x88, 0x3F, 0x79, 0x41, 0x12, 0xF6, 0x8B, 0x42, 0x00, 0x1D, 0x67, 0x41, 0x10, 0xBB, 0x1F,
    0xC0, 0x40, 0x6B, 0x66, 0x42, 0x00, 0x1D, 0x68, 0x40, 0xB5, 0xCE, 0x40, 0x40, 0xB0, 0x3B, 0xDA,
    0x42, 0x08, 0x7F, 0x60, 0x40, 0xB3, 0xDC, 0xD7, 0xC0, 0x7B, 0x9C, 0x13, 0x42, 0x08, 0x7F, 0x5F,
    0x41, 0x39, 0xAA, 0x67, 0xBF, 0x7D, 0x10, 0x1B, 0x41, 0xB4, 0xF6, 0xEB, 0x3F, 0x43, 0x3A, 0x04,
    0xC1, 0x31, 0xB5, 0x84, 0x42, 0x08, 0x7F, 0x5E, 0xC0, 0x02, 0x89, 0x9C, 0x3F, 0x61, 0xC2, 0x2B,
    0x42, 0x08, 0x7F, 0x5F, 0xC0, 0xC2, 0x2D, 0xCD, 0xC0, 0xB7, 0xA5, 0x40, 0x42, 0x03, 0xBD, 0x64,
    0xC0, 0xF9, 0x2E, 0x71, 0x40, 0x97, 0xF6, 0x62, 0x42, 0x03, 0xBD, 0x63, 0xC1, 0x3A, 0x58, 0x92,
    0xBE, 0xD3, 0x65, 0xED, 0x41, 0x99, 0xE3, 0xCC, 0xBF, 0xD5, 0x9D, 0xED, 0x41, 0x0E, 0x33, 0x4E,
    0x42, 0x03, 0xBD, 0x61, 0x40, 0x4C, 0xFD, 0x0D, 0xBE, 0x25, 0xBF, 0xF0, 0x42, 0x09, 0x9F, 0xF5,
    0xC0, 0x05, 0xBD, 0x6F, 0x3F, 0x87, 0x66, 0x17, 0xC1, 0x1E, 0x5D, 0x2E, 0xBF, 0x22, 0xBD, 0x5E,
    0xBF, 0xBE, 0xED, 0x1C, 0xC1, 0x1E, 0x5D, 0x30, 0xBF, 0x27, 0x4E, 0x12, 0xC0, 0x0C, 0x84, 0x34,
    0x42, 0x09, 0x96, 0x95, 0xC0, 0x06, 0xA0, 0xBA, 0xBF, 0x97, 0xAF, 0xEA, 0x42, 0x09, 0xA2, 0xC4,
    0xBF, 0x8A, 0x29, 0x63, 0xBE, 0x66, 0x0B, 0x70, 0xC1, 0x1E, 0x5D, 0x2E, 0x3F, 0x21, 0x7E, 0xBB,
    0xBE, 0x56, 0x99, 0x42, 0xC1, 0x1E, 0x5D, 0x30, 0xBF, 0xF5, 0xAF, 0xB0, 0xBF, 0x96, 0x19, 0x3B,
    0x42, 0x09, 0x93, 0xC4, 0xC0, 0x47, 0x42, 0x91, 0xBE, 0xB2, 0xE9, 0xEE, 0x42, 0x09, 0x50, 0x68,
    0x3F, 0xB1, 0x1A, 0xCA, 0x3F, 0x2D, 0x3E, 0x2D, 0xC1, 0x1D, 0xEC, 0x5F, 0xBB, 0xAD, 0x2D, 0xCB,
    0xBF, 0xD5, 0x92, 0x4B, 0xC1, 0x1E, 0xCE, 0x00, 0xBB, 0xAD, 0x2D, 0xCB, 0xC0, 0x17, 0x75, 0x3A,
    0x42, 0x09, 0x1F, 0xE3, 0x3F, 0xB1, 0x1A, 0xCA, 0xBF, 0xAD, 0xB9, 0x73, 0x42, 0x09, 0x14, 0x75,
    0x40, 0x19, 0x14, 0xF9, 0xBE, 0xFD, 0x72, 0x15, 0xC1, 0x1F, 0x03, 0x34, 0x3F, 0x95, 0x61, 0x35,
    0xBE, 0xFE, 0x5A, 0xBC, 0xC1, 0x1D, 0xB7, 0x2A, 0xBF, 0x96, 0xBB, 0x88, 0xBF, 0xAD, 0xEB, 0x7D,
    0x42, 0x09, 0x5B, 0xD8, 0x3E, 0xC0, 0x2E, 0xA9, 0x40, 0x1E, 0x27, 0x67, 0x42, 0x02, 0x4C, 0x03,
    0x3F, 0xC0, 0x2D, 0xB6, 0x40, 0x94, 0xBE, 0xD1, 0x42, 0x02, 0x30, 0x38, 0x3F, 0xC0, 0xDA, 0xE4,
    0x3F, 0xE7, 0xC1, 0xCE, 0xC1, 0x1E, 0x5D, 0x2E, 0x3E, 0x23, 0xB0, 0x81, 0xBF, 0x89, 0xA2, 0xBE,
    0xC1, 0x1E, 0x5D, 0x30, 0x3E, 0x1B, 0x3B, 0xFB, 0x40, 0x63, 0xE5, 0x3F, 0x42, 0x02, 0x44, 0x03,
    0x3E, 0xD5, 0xAB, 0x19, 0x40, 0x63, 0xD6, 0x7C, 0x42, 0x02, 0x38, 0x37, 0x40, 0x25, 0xC5, 0x61,
    0x3E, 0xBC, 0xD0, 0x9A, 0xC1, 0x1E, 0x5D, 0x2E, 0x3F, 0xCC, 0x0D, 0x13, 0x3E, 0xBC, 0xC7, 0x2A,
    0xC1, 0x1E, 0x5D, 0x2D, 0xBF, 0xA4, 0x4D, 0x4D,
};

/* 805270E0-80527200 0120+00 s=1 e=0 z=0  None .data      l_flowerNormal2 */
SECTION_DATA static u8 l_flowerNormal2[288] = {
    0xBB, 0xC4, 0x93, 0x42, 0x3F, 0x7F, 0xF6, 0x6F, 0xBC, 0x83, 0x0E, 0x3D, 0x3C, 0x83, 0x0C, 0x24,
    0x3F, 0x7F, 0xF5, 0x84, 0x3C, 0x03, 0x0E, 0x3D, 0xB8, 0x51, 0xB7, 0x17, 0x3F, 0x7F, 0xF5, 0xF9,
    0x3C, 0x8F, 0x57, 0xF7, 0xBC, 0x8F, 0x57, 0xF7, 0x3F, 0x7F, 0xF5, 0xF9, 0x38, 0x1F, 0x62, 0x30,
    0xBD, 0xB8, 0xC9, 0xFB, 0x3F, 0x7E, 0x68, 0x3C, 0xBD, 0x85, 0xBD, 0x94, 0xBD, 0xD9, 0x65, 0xB2,
    0x3F, 0x7E, 0x28, 0x13, 0xBD, 0x63, 0x62, 0xA6, 0xBD, 0xB8, 0x12, 0x7B, 0x3F, 0x7E, 0x6B, 0x0E,
    0xBD, 0x85, 0x62, 0x5A, 0xBD, 0xFD, 0x2D, 0x88, 0x3F, 0x7D, 0x58, 0x32, 0xBD, 0x95, 0xE3, 0x97,
    0xBD, 0xB5, 0xC6, 0x3B, 0x3F, 0x7E, 0xFB, 0x4C, 0x3C, 0x01, 0xC7, 0x15, 0xB8, 0xFF, 0xDA, 0x40,
    0x3F, 0x7F, 0xF5, 0xF9, 0x3C, 0x8F, 0x57, 0xF7, 0x37, 0x38, 0x8C, 0xA4, 0x3F, 0x7F, 0xF5, 0xF9,
    0xBC, 0x8F, 0x57, 0xF7, 0xBC, 0x8F, 0x57, 0xF7, 0x3F, 0x7F, 0xF5, 0xF9, 0xB8, 0xBE, 0xD7, 0x41,
    0x38, 0x06, 0x37, 0xBD, 0x3F, 0x7F, 0xF5, 0xF9, 0xBC, 0x8F, 0x57, 0xF7, 0x37, 0x6A, 0xE1, 0x8B,
    0x3F, 0x7F, 0xF5, 0xF9, 0x3C, 0x8F, 0x57, 0xF7, 0xBC, 0x8E, 0xC7, 0x43, 0x3F, 0x7F, 0xF5, 0xF9,
    0x3A, 0xCB, 0xF2, 0xB2, 0xBC, 0x8F, 0x57, 0xF7, 0x3F, 0x7F, 0xF5, 0xF9, 0x00, 0x00, 0x00, 0x00,
    0xBC, 0x8F, 0x57, 0xF7, 0x3F, 0x7F, 0xF5, 0xF9, 0xB7, 0xD1, 0xB7, 0x17, 0xBC, 0x8F, 0x55, 0xDE,
    0x3F, 0x7F, 0xF5, 0xF9, 0x39, 0x4E, 0x91, 0xC9, 0xBA, 0x02, 0x49, 0x1B, 0x3F, 0x7F, 0xF5, 0xF9,
    0x3C, 0x8F, 0x49, 0x49, 0x3C, 0x80, 0x34, 0x6E, 0x3F, 0x7F, 0xF5, 0xF9, 0x3C, 0x00, 0x3C, 0xD1,
    0xBC, 0x8E, 0x7F, 0xF6, 0x3F, 0x7F, 0xF5, 0xF9, 0xBA, 0xF8, 0xE7, 0xDE, 0x3B, 0x98, 0xD4, 0x78,
    0x3F, 0x7F, 0xF5, 0xF9, 0xBC, 0x8A, 0x28, 0x78, 0x3C, 0x8B, 0xFE, 0x3B, 0x3F, 0x7F, 0xF5, 0xF9,
    0x3B, 0x76, 0x7B, 0x1C, 0x3B, 0x99, 0x6B, 0x76, 0x3F, 0x7F, 0xF5, 0xF9, 0xBC, 0x8A, 0x1D, 0xFC,
};

/* 80527200-80527208 0008+00 s=1 e=0 z=0  None .data      l_flowerColor2 */
SECTION_DATA static u8 l_flowerColor2[8] = {
    0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xB2, 0xFF,
};

/* 80527208-80527338 0120+10 s=1 e=0 z=0  None .data      l_flowerTexCoord2 */
SECTION_DATA static u8 l_flowerTexCoord2[288 + 16 /* padding */] = {
    0x3F,
    0xF3,
    0x6D,
    0x11,
    0x3F,
    0x72,
    0x0B,
    0xA2,
    0x3F,
    0x80,
    0x00,
    0x00,
    0x3C,
    0xAB,
    0xDC,
    0x27,
    0x3D,
    0xC9,
    0x2E,
    0xE8,
    0x3F,
    0x72,
    0x0B,
    0xA2,
    0x40,
    0x2B,
    0x93,
    0x9A,
    0x3F,
    0x81,
    0x7B,
    0x96,
    0x40,
    0x2B,
    0x93,
    0x9A,
    0x3F,
    0x7B,
    0xB5,
    0x18,
    0x40,
    0x06,
    0x1F,
    0xCD,
    0x3F,
    0x7B,
    0xB5,
    0x18,
    0x40,
    0x06,
    0x00,
    0x47,
    0x3F,
    0x81,
    0x7B,
    0x96,
    0x40,
    0x06,
    0x16,
    0xBE,
    0x3F,
    0x81,
    0x7B,
    0x96,
    0x40,
    0x06,
    0x09,
    0x5B,
    0x3F,
    0x7B,
    0xB5,
    0x18,
    0x40,
    0x07,
    0xBB,
    0x1F,
    0x3F,
    0x7B,
    0xB5,
    0x18,
    0x40,
    0x07,
    0xC2,
    0xF8,
    0x3F,
    0x81,
    0x7B,
    0x96,
    0x40,
    0x07,
    0xB8,
    0xC3,
    0x3F,
    0x81,
    0x7B,
    0x96,
    0x40,
    0x07,
    0xC5,
    0x50,
    0x3F,
    0x7B,
    0xB5,
    0x18,
    0x40,
    0x03,
    0xA9,
    0x58,
    0x3F,
    0x7B,
    0xB5,
    0x18,
    0x40,
    0x03,
    0xA9,
    0x58,
    0x3F,
    0x81,
    0x7B,
    0x96,
    0x40,
    0x00,
    0x7B,
    0xB7,
    0xC0,
    0xA0,
    0x9B,
    0xA2,
    0x40,
    0x39,
    0x01,
    0x1D,
    0xC0,
    0xBD,
    0x25,
    0x1C,
    0x40,
    0x00,
    0x7B,
    0xB7,
    0xC0,
    0xBE,
    0x0D,
    0xCC,
    0x40,
    0x00,
    0x7B,
    0xB7,
    0xC0,
    0xBD,
    0x25,
    0x1C,
    0x40,
    0x25,
    0xD5,
    0xA2,
    0x3F,
    0x7B,
    0xB5,
    0x18,
    0x40,
    0x25,
    0xD9,
    0x1F,
    0x3F,
    0x81,
    0x7B,
    0x96,
    0x40,
    0x25,
    0xD4,
    0x95,
    0x3F,
    0x81,
    0x7B,
    0x96,
    0x40,
    0x25,
    0xDA,
    0x2B,
    0x3F,
    0x7B,
    0xB5,
    0x18,
    0x40,
    0x24,
    0x06,
    0x9E,
    0x3F,
    0x7B,
    0xB5,
    0x18,
    0x40,
    0x24,
    0x06,
    0x9E,
    0x3F,
    0x81,
    0x7B,
    0x96,
    0x40,
    0x2F,
    0xF0,
    0x35,
    0x3F,
    0x81,
    0x7B,
    0x96,
    0x40,
    0x2F,
    0xF8,
    0x16,
    0x3F,
    0x7B,
    0xB5,
    0x18,
    0x40,
    0x2F,
    0xF2,
    0x78,
    0x3F,
    0x7B,
    0xB5,
    0x18,
    0x40,
    0x2F,
    0xF5,
    0xCF,
    0x3F,
    0x81,
    0x7B,
    0x96,
    0x40,
    0x66,
    0xBD,
    0x6A,
    0x3F,
    0x51,
    0x10,
    0x6F,
    0x40,
    0x66,
    0xBD,
    0x6A,
    0x3F,
    0x97,
    0xF6,
    0xBA,
    0x40,
    0x7C,
    0x19,
    0xB1,
    0x3F,
    0x80,
    0x5E,
    0x57,
    0x40,
    0x1B,
    0x7D,
    0x52,
    0x3F,
    0x97,
    0xF6,
    0xBA,
    0x40,
    0x04,
    0x26,
    0x74,
    0x3F,
    0x80,
    0x3F,
    0x79,
    0x40,
    0x1B,
    0x7D,
    0x52,
    0x3F,
    0x80,
    0x3F,
    0x79,
    0x40,
    0x1B,
    0x7D,
    0x52,
    0x3F,
    0x51,
    0x10,
    0x6F,
    /* padding */
    0x00,
    0x00,
    0x00,
    0x00,
    0x00,
    0x00,
    0x00,
    0x00,
    0x00,
    0x00,
    0x00,
    0x00,
    0x00,
    0x00,
    0x00,
    0x00,
};

/* 80527338-80527478 0138+08 s=1 e=0 z=0  None .data      l_J_hana01DL */
SECTION_DATA static u8 l_J_hana01DL[312 + 8 /* padding */] = {
    0x98,
    0x00,
    0x03,
    0x00,
    0x00,
    0x00,
    0x00,
    0x01,
    0x00,
    0x00,
    0x01,
    0x02,
    0x00,
    0x00,
    0x02,
    0x98,
    0x00,
    0x03,
    0x03,
    0x00,
    0x00,
    0x02,
    0x04,
    0x00,
    0x00,
    0x00,
    0x05,
    0x00,
    0x00,
    0x01,
    0x98,
    0x00,
    0x03,
    0x06,
    0x00,
    0x00,
    0x00,
    0x07,
    0x00,
    0x00,
    0x01,
    0x08,
    0x00,
    0x00,
    0x02,
    0x98,
    0x00,
    0x03,
    0x09,
    0x00,
    0x00,
    0x01,
    0x0A,
    0x00,
    0x00,
    0x02,
    0x0B,
    0x00,
    0x00,
    0x00,
    0x98,
    0x00,
    0x03,
    0x0C,
    0x00,
    0x00,
    0x00,
    0x0D,
    0x00,
    0x00,
    0x01,
    0x0E,
    0x00,
    0x00,
    0x02,
    0x98,
    0x00,
    0x03,
    0x0F,
    0x00,
    0x00,
    0x02,
    0x10,
    0x00,
    0x00,
    0x00,
    0x11,
    0x00,
    0x00,
    0x01,
    0x98,
    0x00,
    0x04,
    0x18,
    0x03,
    0x01,
    0x07,
    0x19,
    0x03,
    0x01,
    0x08,
    0x17,
    0x01,
    0x00,
    0x03,
    0x16,
    0x01,
    0x00,
    0x04,
    0x98,
    0x00,
    0x04,
    0x14,
    0x02,
    0x01,
    0x05,
    0x15,
    0x02,
    0x01,
    0x06,
    0x13,
    0x01,
    0x00,
    0x04,
    0x12,
    0x01,
    0x00,
    0x03,
    0x98,
    0x00,
    0x04,
    0x20,
    0x07,
    0x01,
    0x0B,
    0x21,
    0x07,
    0x01,
    0x0C,
    0x1F,
    0x06,
    0x00,
    0x03,
    0x1E,
    0x06,
    0x00,
    0x04,
    0x98,
    0x00,
    0x04,
    0x1C,
    0x05,
    0x01,
    0x09,
    0x1D,
    0x05,
    0x01,
    0x0A,
    0x1B,
    0x04,
    0x00,
    0x04,
    0x1A,
    0x04,
    0x00,
    0x03,
    0x98,
    0x00,
    0x04,
    0x28,
    0x08,
    0x01,
    0x0E,
    0x29,
    0x08,
    0x01,
    0x0D,
    0x27,
    0x08,
    0x00,
    0x03,
    0x26,
    0x08,
    0x00,
    0x04,
    0x98,
    0x00,
    0x04,
    0x24,
    0x08,
    0x01,
    0x0D,
    0x25,
    0x08,
    0x01,
    0x0E,
    0x23,
    0x08,
    0x00,
    0x04,
    0x22,
    0x08,
    0x00,
    0x03,
    0x98,
    0x00,
    0x05,
    0x2C,
    0x01,
    0x00,
    0x11,
    0x2E,
    0x01,
    0x00,
    0x10,
    0x2A,
    0x01,
    0x00,
    0x0F,
    0x2D,
    0x01,
    0x00,
    0x11,
    0x2B,
    0x01,
    0x00,
    0x10,
    0x98,
    0x00,
    0x03,
    0x2A,
    0x01,
    0x00,
    0x0F,
    0x2B,
    0x01,
    0x00,
    0x10,
    0x2C,
    0x01,
    0x00,
    0x11,
    0x98,
    0x00,
    0x05,
    0x31,
    0x01,
    0x00,
    0x12,
    0x33,
    0x01,
    0x00,
    0x10,
    0x2F,
    0x01,
    0x00,
    0x0F,
    0x32,
    0x01,
    0x00,
    0x12,
    0x30,
    0x01,
    0x00,
    0x10,
    0x98,
    0x00,
    0x03,
    0x2F,
    0x01,
    0x00,
    0x0F,
    0x30,
    0x01,
    0x00,
    0x10,
    0x31,
    0x01,
    0x00,
    0x12,
    0x00,
    0x00,
    0x00,
    0x00,
    0x00,
    0x00,
    0x00,
    0x00,
    0x00,
    0x00,
    0x00,
    0x00,
    0x00,
    0x00,
    0x00,
    0x00,
    0x00,
    0x00,
    0x00,
    0x00,
    0x00,
    0x00,
    0x00,
    0x00,
    0x00,
    0x00,
    0x00,
    0x00,
    0x00,
    0x00,
    0x00,
    0x00,
    /* padding */
    0x00,
    0x00,
    0x00,
    0x00,
    0x00,
    0x00,
    0x00,
    0x00,
};

/* 80527478-80527558 00DE+02 s=0 e=0 z=0  None .data      l_J_hana01_c_00DL */
SECTION_DATA u8 l_J_hana01_c_00DL[222 + 2 /* padding */] = {
    0x98,
    0x00,
    0x05,
    0x2C,
    0x01,
    0x00,
    0x11,
    0x2E,
    0x01,
    0x00,
    0x10,
    0x2A,
    0x01,
    0x00,
    0x0F,
    0x2D,
    0x01,
    0x00,
    0x11,
    0x2B,
    0x01,
    0x00,
    0x10,
    0x98,
    0x00,
    0x03,
    0x2A,
    0x01,
    0x00,
    0x0F,
    0x2B,
    0x01,
    0x00,
    0x10,
    0x2C,
    0x01,
    0x00,
    0x11,
    0x98,
    0x00,
    0x05,
    0x31,
    0x01,
    0x00,
    0x12,
    0x33,
    0x01,
    0x00,
    0x10,
    0x2F,
    0x01,
    0x00,
    0x0F,
    0x32,
    0x01,
    0x00,
    0x12,
    0x30,
    0x01,
    0x00,
    0x10,
    0x98,
    0x00,
    0x03,
    0x2F,
    0x01,
    0x00,
    0x0F,
    0x30,
    0x01,
    0x00,
    0x10,
    0x31,
    0x01,
    0x00,
    0x12,
    0x98,
    0x00,
    0x04,
    0x21,
    0x0C,
    0x01,
    0x0C,
    0x37,
    0x0B,
    0x00,
    0x16,
    0x20,
    0x0C,
    0x01,
    0x0B,
    0x36,
    0x0B,
    0x00,
    0x15,
    0x98,
    0x00,
    0x04,
    0x1D,
    0x0A,
    0x01,
    0x0A,
    0x35,
    0x09,
    0x00,
    0x14,
    0x1C,
    0x0A,
    0x01,
    0x09,
    0x34,
    0x09,
    0x00,
    0x13,
    0x98,
    0x00,
    0x04,
    0x29,
    0x03,
    0x01,
    0x0D,
    0x3B,
    0x0F,
    0x00,
    0x17,
    0x28,
    0x03,
    0x01,
    0x0E,
    0x3A,
    0x0F,
    0x00,
    0x18,
    0x98,
    0x00,
    0x04,
    0x25,
    0x0E,
    0x01,
    0x0E,
    0x39,
    0x0D,
    0x00,
    0x18,
    0x24,
    0x0E,
    0x01,
    0x0D,
    0x38,
    0x0D,
    0x00,
    0x17,
    0x98,
    0x00,
    0x04,
    0x18,
    0x0F,
    0x01,
    0x07,
    0x19,
    0x11,
    0x01,
    0x08,
    0x3F,
    0x10,
    0x00,
    0x1C,
    0x3E,
    0x10,
    0x00,
    0x1B,
    0x98,
    0x00,
    0x04,
    0x14,
    0x02,
    0x01,
    0x05,
    0x15,
    0x02,
    0x01,
    0x06,
    0x3D,
    0x02,
    0x00,
    0x1A,
    0x3C,
    0x02,
    0x00,
    0x19,
    0x00,
    0x00,
    0x00,
    0x00,
    0x00,
    0x00,
    0x00,
    0x00,
    0x00,
    0x00,
    0x00,
    0x00,
    0x00,
    0x00,
    0x00,
    0x00,
    0x00,
    0x00,
    0x00,
    0x00,
    0x00,
    0x00,
    0x00,
    0x00,
    0x00,
    0x00,
    0x00,
    0x00,
    0x00,
    0x00,
    0x00,
    0x00,
    /* padding */
    0x00,
    0x00,
};

/* 80527558-80527698 0128+18 s=1 e=0 z=0  None .data      l_J_hana01_c_01DL */
SECTION_DATA static u8 l_J_hana01_c_01DL[296 + 24 /* padding */] = {
    0x98,
    0x00,
    0x03,
    0x42,
    0x13,
    0x00,
    0x1F,
    0x44,
    0x16,
    0x00,
    0x1E,
    0x40,
    0x16,
    0x00,
    0x1D,
    0x98,
    0x00,
    0x03,
    0x42,
    0x13,
    0x00,
    0x1F,
    0x43,
    0x15,
    0x00,
    0x1D,
    0x44,
    0x15,
    0x00,
    0x1E,
    0x98,
    0x00,
    0x03,
    0x42,
    0x14,
    0x00,
    0x1F,
    0x41,
    0x14,
    0x00,
    0x1E,
    0x43,
    0x14,
    0x00,
    0x1D,
    0x98,
    0x00,
    0x03,
    0x40,
    0x12,
    0x00,
    0x1D,
    0x41,
    0x12,
    0x00,
    0x1E,
    0x42,
    0x13,
    0x00,
    0x1F,
    0x98,
    0x00,
    0x03,
    0x47,
    0x16,
    0x00,
    0x1F,
    0x49,
    0x16,
    0x00,
    0x1E,
    0x45,
    0x16,
    0x00,
    0x1D,
    0x98,
    0x00,
    0x03,
    0x47,
    0x15,
    0x00,
    0x1F,
    0x48,
    0x17,
    0x00,
    0x1D,
    0x49,
    0x15,
    0x00,
    0x1E,
    0x98,
    0x00,
    0x03,
    0x47,
    0x14,
    0x00,
    0x1F,
    0x46,
    0x14,
    0x00,
    0x1E,
    0x48,
    0x14,
    0x00,
    0x1D,
    0x98,
    0x00,
    0x03,
    0x45,
    0x12,
    0x00,
    0x1D,
    0x46,
    0x12,
    0x00,
    0x1E,
    0x47,
    0x12,
    0x00,
    0x1F,
    0x98,
    0x00,
    0x03,
    0x4C,
    0x14,
    0x00,
    0x22,
    0x4B,
    0x14,
    0x00,
    0x21,
    0x4D,
    0x14,
    0x00,
    0x23,
    0x98,
    0x00,
    0x03,
    0x4A,
    0x12,
    0x00,
    0x20,
    0x4B,
    0x12,
    0x00,
    0x21,
    0x4C,
    0x13,
    0x00,
    0x22,
    0x98,
    0x00,
    0x04,
    0x54,
    0x0C,
    0x01,
    0x0C,
    0x55,
    0x0B,
    0x00,
    0x16,
    0x53,
    0x0C,
    0x01,
    0x0B,
    0x52,
    0x0B,
    0x00,
    0x15,
    0x98,
    0x00,
    0x04,
    0x50,
    0x0A,
    0x01,
    0x0A,
    0x51,
    0x09,
    0x00,
    0x14,
    0x4F,
    0x0A,
    0x01,
    0x09,
    0x4E,
    0x09,
    0x00,
    0x13,
    0x98,
    0x00,
    0x04,
    0x5C,
    0x03,
    0x01,
    0x0D,
    0x5D,
    0x0F,
    0x00,
    0x17,
    0x5B,
    0x03,
    0x01,
    0x0E,
    0x5A,
    0x0F,
    0x00,
    0x18,
    0x98,
    0x00,
    0x04,
    0x58,
    0x0E,
    0x01,
    0x0E,
    0x59,
    0x0D,
    0x00,
    0x18,
    0x57,
    0x0E,
    0x01,
    0x0D,
    0x56,
    0x0D,
    0x00,
    0x17,
    0x98,
    0x00,
    0x04,
    0x64,
    0x0F,
    0x01,
    0x07,
    0x65,
    0x11,
    0x01,
    0x08,
    0x63,
    0x10,
    0x00,
    0x1C,
    0x62,
    0x10,
    0x00,
    0x1B,
    0x98,
    0x00,
    0x04,
    0x60,
    0x02,
    0x01,
    0x05,
    0x61,
    0x02,
    0x01,
    0x06,
    0x5F,
    0x02,
    0x00,
    0x1A,
    0x5E,
    0x02,
    0x00,
    0x19,
    0x00,
    0x00,
    0x00,
    0x00,
    0x00,
    0x00,
    0x00,
    0x00,
    0x00,
    0x00,
    0x00,
    0x00,
    0x00,
    0x00,
    0x00,
    0x00,
    0x00,
    0x00,
    0x00,
    0x00,
    0x00,
    0x00,
    0x00,
    0x00,
    0x00,
    0x00,
    0x00,
    0x00,
    0x00,
    0x00,
    0x00,
    0x00,
    /* padding */
    0x00,
    0x00,
    0x00,
    0x00,
    0x00,
    0x00,
    0x00,
    0x00,
    0x00,
    0x00,
    0x00,
    0x00,
    0x00,
    0x00,
    0x00,
    0x00,
    0x00,
    0x00,
    0x00,
    0x00,
    0x00,
    0x00,
    0x00,
    0x00,
};

/* 80527698-80527738 0099+07 s=2 e=0 z=0  None .data      l_mat2DL */
SECTION_DATA static u8 l_mat2DL[153 + 7 /* padding */] = {
    0x61,
    0x80,
    0x00,
    0x01,
    0x3A,
    0x61,
    0x84,
    0x00,
    0x00,
    0x00,
    0x61,
    0x88,
    0xE1,
    0xFC,
    0x3F,
    0x61,
    0x94,
    0x00,
    0x00,
    0x00,
    0x61,
    0x30,
    0x00,
    0x00,
    0x3F,
    0x61,
    0x31,
    0x00,
    0x00,
    0x7F,
    0x10,
    0x00,
    0x00,
    0x10,
    0x40,
    0xFF,
    0xFF,
    0x42,
    0x80,
    0x08,
    0x30,
    0x3C,
    0xF3,
    0xCF,
    0x00,
    0x10,
    0x00,
    0x00,
    0x10,
    0x18,
    0x3C,
    0xF3,
    0xCF,
    0x00,
    0x10,
    0x00,
    0x00,
    0x10,
    0x0E,
    0x00,
    0x00,
    0x7F,
    0x3B,
    0x61,
    0x28,
    0x38,
    0x00,
    0x40,
    0x61,
    0xC0,
    0x28,
    0xF8,
    0xA2,
    0x61,
    0xC1,
    0x08,
    0xFF,
    0xC0,
    0x61,
    0x43,
    0x00,
    0x00,
    0x01,
    0x61,
    0x40,
    0x00,
    0x00,
    0x17,
    0x61,
    0x41,
    0x00,
    0x31,
    0x0C,
    0x61,
    0xF3,
    0x1E,
    0xFF,
    0x80,
    0x10,
    0x00,
    0x00,
    0x10,
    0x3F,
    0x00,
    0x00,
    0x00,
    0x01,
    0x10,
    0x00,
    0x00,
    0x10,
    0x09,
    0x00,
    0x00,
    0x00,
    0x01,
    0x61,
    0x00,
    0x00,
    0x00,
    0x11,
    0x00,
    0x00,
    0x00,
    0x00,
    0x00,
    0x00,
    0x00,
    0x00,
    0x00,
    0x00,
    0x00,
    0x00,
    0x00,
    0x00,
    0x00,
    0x00,
    0x00,
    0x00,
    0x00,
    0x00,
    0x00,
    0x00,
    0x00,
    0x00,
    0x00,
    0x00,
    0x00,
    0x00,
    0x00,
    0x00,
    0x00,
    0x00,
    /* padding */
    0x00,
    0x00,
    0x00,
    0x00,
    0x00,
    0x00,
    0x00,
};

/* 80527738-805277D4 0099+03 s=2 e=0 z=0  None .data      l_mat2Light4DL */
SECTION_DATA static u8 l_mat2Light4DL[153 + 3 /* padding */] = {
    0x61,
    0x80,
    0x00,
    0x01,
    0x3A,
    0x61,
    0x84,
    0x00,
    0x00,
    0x00,
    0x61,
    0x88,
    0xE1,
    0xFC,
    0x3F,
    0x61,
    0x94,
    0x00,
    0x00,
    0x00,
    0x61,
    0x30,
    0x00,
    0x00,
    0x3F,
    0x61,
    0x31,
    0x00,
    0x00,
    0x7F,
    0x10,
    0x00,
    0x00,
    0x10,
    0x40,
    0xFF,
    0xFF,
    0x42,
    0x80,
    0x08,
    0x30,
    0x3C,
    0xF3,
    0xCF,
    0x00,
    0x10,
    0x00,
    0x00,
    0x10,
    0x18,
    0x3C,
    0xF3,
    0xCF,
    0x00,
    0x10,
    0x00,
    0x00,
    0x10,
    0x0E,
    0x00,
    0x00,
    0x0F,
    0x3B,
    0x61,
    0x28,
    0x38,
    0x00,
    0x40,
    0x61,
    0xC0,
    0x28,
    0xF8,
    0xA2,
    0x61,
    0xC1,
    0x08,
    0xFF,
    0xC0,
    0x61,
    0x43,
    0x00,
    0x00,
    0x01,
    0x61,
    0x40,
    0x00,
    0x00,
    0x17,
    0x61,
    0x41,
    0x00,
    0x31,
    0x0C,
    0x61,
    0xF3,
    0x1E,
    0xFF,
    0x80,
    0x10,
    0x00,
    0x00,
    0x10,
    0x3F,
    0x00,
    0x00,
    0x00,
    0x01,
    0x10,
    0x00,
    0x00,
    0x10,
    0x09,
    0x00,
    0x00,
    0x00,
    0x01,
    0x61,
    0x00,
    0x00,
    0x00,
    0x11,
    0x00,
    0x00,
    0x00,
    0x00,
    0x00,
    0x00,
    0x00,
    0x00,
    0x00,
    0x00,
    0x00,
    0x00,
    0x00,
    0x00,
    0x00,
    0x00,
    0x00,
    0x00,
    0x00,
    0x00,
    0x00,
    0x00,
    0x00,
    0x00,
    0x00,
    0x00,
    0x00,
    0x00,
    0x00,
    0x00,
    0x00,
    0x00,
    /* padding */
    0x00,
    0x00,
    0x00,
};

/* 805277D4-805277E0 000C+00 s=1 e=0 z=0  None .data      @5875 */
SECTION_DATA static void* lit_5875[3] = {
    (void*)NULL,
    (void*)0xFFFFFFFF,
    (void*)deleteRoom__16dFlower_packet_cFi,
};

/* 805277E0-80527800 0020+00 s=1 e=0 z=0  None .data      @6092 */
SECTION_DATA static void* lit_6092[8] = {
    (void*)(((char*)draw__16dFlower_packet_cFv) + 0x6EC),
    (void*)(((char*)draw__16dFlower_packet_cFv) + 0x708),
    (void*)(((char*)draw__16dFlower_packet_cFv) + 0x724),
    (void*)(((char*)draw__16dFlower_packet_cFv) + 0x740),
    (void*)(((char*)draw__16dFlower_packet_cFv) + 0x760),
    (void*)(((char*)draw__16dFlower_packet_cFv) + 0x780),
    (void*)(((char*)draw__16dFlower_packet_cFv) + 0x7A0),
    (void*)(((char*)draw__16dFlower_packet_cFv) + 0x7C0),
};

/* 80527800-80527840 0040+00 s=1 e=0 z=0  None .data
 * l_offsetData$localstatic15$create__9daGrass_cFv              */
SECTION_DATA static void* data_80527800[16] = {
    (void*)0x03000000,
    (void*)(((char*)&struct_80528900) + 0x0) /* l_setType2$localstatic7$create__9daGrass_cFv */,
    (void*)0x07000000,
    (void*)(((char*)&struct_80528854) + 0x0) /* l_setType0$localstatic3$create__9daGrass_cFv */,
    (void*)0x15000000,
    (void*)(((char*)&struct_80528880) + 0x0) /* l_setType1$localstatic5$create__9daGrass_cFv */,
    (void*)0x07000000,
    (void*)(((char*)&struct_80528854) + 0x0) /* l_setType0$localstatic3$create__9daGrass_cFv */,
    (void*)0x07000000,
    (void*)(((char*)&struct_80528914) + 0x0) /* l_setType3$localstatic9$create__9daGrass_cFv */,
    (void*)0x11000000,
    (void*)(((char*)&struct_80528940) + 0x0) /* l_setType4$localstatic11$create__9daGrass_cFv */,
    (void*)0x07000000,
    (void*)&data_805289A8,
    (void*)0x07000000,
    (void*)(((char*)&struct_80528854) + 0x0) /* l_setType0$localstatic3$create__9daGrass_cFv */,
};

/* 80527840-80527860 0020+00 s=1 e=0 z=0  None .data      daGrass_METHODS */
SECTION_DATA static void* daGrass_METHODS[8] = {
    (void*)daGrass_create__FP9daGrass_c,
    (void*)daGrass_Delete__FP9daGrass_c,
    (void*)daGrass_execute__FP9daGrass_c,
    (void*)NULL,
    (void*)daGrass_draw__FP9daGrass_c,
    (void*)NULL,
    (void*)NULL,
    (void*)NULL,
};

/* 80527860-80527890 0030+00 s=0 e=0 z=1  None .data      g_profile_GRASS */
SECTION_DATA void* g_profile_GRASS[12] = {
    (void*)0xFFFFFFFD, (void*)0x000BFFFD,
    (void*)0x03100000, (void*)&g_fpcLf_Method,
    (void*)0x00000570, (void*)NULL,
    (void*)NULL,       (void*)&g_fopAc_Method,
    (void*)0x00080000, (void*)&daGrass_METHODS,
    (void*)0x00060000, (void*)NULL,
};

/* 80527890-805278A4 0014+00 s=2 e=0 z=0  None .data      __vt__16dFlower_packet_c */
SECTION_DATA static void* __vt__16dFlower_packet_c[5] = {
    (void*)NULL,
    (void*)NULL,
    (void*)entry__9J3DPacketFP13J3DDrawBuffer,
    (void*)draw__16dFlower_packet_cFv,
    (void*)__dt__16dFlower_packet_cFv,
};

/* 805278A4-805278B8 0014+00 s=2 e=0 z=0  None .data      __vt__15dGrass_packet_c */
SECTION_DATA static void* __vt__15dGrass_packet_c[5] = {
    (void*)NULL,
    (void*)NULL,
    (void*)entry__9J3DPacketFP13J3DDrawBuffer,
    (void*)draw__15dGrass_packet_cFv,
    (void*)__dt__15dGrass_packet_cFv,
};

/* 805278D0-805278D4 0001+03 s=4 e=0 z=0  None .bss       @1109 */
static u8 lit_1109[1 + 3 /* padding */];

/* 805278D4-805278D8 0001+03 s=0 e=0 z=0  None .bss       @1107 */
u8 lit_1107[1 + 3 /* padding */];

/* 805278D8-805278DC 0001+03 s=0 e=0 z=0  None .bss       @1105 */
u8 lit_1105[1 + 3 /* padding */];

/* 805278DC-805278E0 0001+03 s=0 e=0 z=0  None .bss       @1104 */
u8 lit_1104[1 + 3 /* padding */];

/* 805278E0-805278E4 0001+03 s=0 e=0 z=0  None .bss       @1099 */
u8 lit_1099[1 + 3 /* padding */];

/* 805278E4-805278E8 0001+03 s=0 e=0 z=0  None .bss       @1097 */
u8 lit_1097[1 + 3 /* padding */];

/* 805278E8-805278EC 0001+03 s=0 e=0 z=0  None .bss       @1095 */
u8 lit_1095[1 + 3 /* padding */];

/* 805278EC-805278F0 0001+03 s=0 e=0 z=0  None .bss       @1094 */
u8 lit_1094[1 + 3 /* padding */];

/* 805278F0-805278F4 0001+03 s=0 e=0 z=0  None .bss       @1057 */
u8 lit_1057[1 + 3 /* padding */];

/* 805278F4-805278F8 0001+03 s=0 e=0 z=0  None .bss       @1055 */
u8 lit_1055[1 + 3 /* padding */];

/* 805278F8-805278FC 0001+03 s=0 e=0 z=0  None .bss       @1053 */
u8 lit_1053[1 + 3 /* padding */];

/* 805278FC-80527900 0001+03 s=0 e=0 z=0  None .bss       @1052 */
u8 lit_1052[1 + 3 /* padding */];

/* 80527900-80527904 0001+03 s=0 e=0 z=0  None .bss       @1014 */
u8 lit_1014[1 + 3 /* padding */];

/* 80527904-80527908 0001+03 s=0 e=0 z=0  None .bss       @1012 */
u8 lit_1012[1 + 3 /* padding */];

/* 80527908-8052790C 0001+03 s=0 e=0 z=0  None .bss       @1010 */
u8 lit_1010[1 + 3 /* padding */];

/* 8052790C-80527910 0001+03 s=0 e=0 z=0  None .bss       @1009 */
u8 lit_1009[1 + 3 /* padding */];

/* 80527910-80527920 000C+04 s=1 e=0 z=0  None .bss       @4293 */
static u8 lit_4293[12 + 4 /* padding */];

/* 80527920-80527930 000C+04 s=2 e=0 z=0  None .bss       None */
static u8 struct_80527920[12 + 4 /* padding */];

/* 80527930-805284E8 0BB8+00 s=1 e=0 z=0  None .bss       mAngleZ$5046 */
static u8 mAngleZ[3000];

/* 805284E8-805284EC 0004+00 s=2 e=0 z=0  None .bss       None */
static u8 data_805284E8[4];

/* 805284EC-805284FC 000C+04 s=1 e=0 z=0  None .bss       @5442 */
static u8 lit_5442[12 + 4 /* padding */];

/* 805284FC-80528504 0006+02 s=1 e=0 z=0  None .bss       ang$5441 */
static u8 ang[6 + 2 /* padding */];

/* 80528504-80528510 000C+00 s=1 e=0 z=0  None .bss       @6340 */
static u8 lit_6340[12];

/* 80528510-8052851C 000C+00 s=1 e=0 z=0  None .bss       @6342 */
static u8 lit_6342[12];

/* 8052851C-80528528 000C+00 s=1 e=0 z=0  None .bss       @6343 */
static u8 lit_6343[12];

/* 80528528-80528534 000C+00 s=1 e=0 z=0  None .bss       @6344 */
static u8 lit_6344[12];

/* 80528534-80528540 000C+00 s=1 e=0 z=0  None .bss       @6345 */
static u8 lit_6345[12];

/* 80528540-8052854C 000C+00 s=1 e=0 z=0  None .bss       @6346 */
static u8 lit_6346[12];

/* 8052854C-80528558 000C+00 s=1 e=0 z=0  None .bss       @6347 */
static u8 lit_6347[12];

/* 80528558-80528564 000C+00 s=1 e=0 z=0  None .bss       @6348 */
static u8 lit_6348[12];

/* 80528564-80528570 000C+00 s=1 e=0 z=0  None .bss       @6350 */
static u8 lit_6350[12];

/* 80528570-8052857C 000C+00 s=1 e=0 z=0  None .bss       @6351 */
static u8 lit_6351[12];

/* 8052857C-80528588 000C+00 s=1 e=0 z=0  None .bss       @6352 */
static u8 lit_6352[12];

/* 80528588-80528594 000C+00 s=1 e=0 z=0  None .bss       @6353 */
static u8 lit_6353[12];

/* 80528594-805285A0 000C+00 s=1 e=0 z=0  None .bss       @6354 */
static u8 lit_6354[12];

/* 805285A0-805285AC 000C+00 s=1 e=0 z=0  None .bss       @6355 */
static u8 lit_6355[12];

/* 805285AC-805285B8 000C+00 s=1 e=0 z=0  None .bss       @6356 */
static u8 lit_6356[12];

/* 805285B8-805285C4 000C+00 s=1 e=0 z=0  None .bss       @6357 */
static u8 lit_6357[12];

/* 805285C4-805285D0 000C+00 s=1 e=0 z=0  None .bss       @6358 */
static u8 lit_6358[12];

/* 805285D0-805285DC 000C+00 s=1 e=0 z=0  None .bss       @6359 */
static u8 lit_6359[12];

/* 805285DC-805285E8 000C+00 s=1 e=0 z=0  None .bss       @6360 */
static u8 lit_6360[12];

/* 805285E8-805285F4 000C+00 s=1 e=0 z=0  None .bss       @6361 */
static u8 lit_6361[12];

/* 805285F4-80528600 000C+00 s=1 e=0 z=0  None .bss       @6362 */
static u8 lit_6362[12];

/* 80528600-8052860C 000C+00 s=1 e=0 z=0  None .bss       @6363 */
static u8 lit_6363[12];

/* 8052860C-80528618 000C+00 s=1 e=0 z=0  None .bss       @6364 */
static u8 lit_6364[12];

/* 80528618-80528624 000C+00 s=1 e=0 z=0  None .bss       @6365 */
static u8 lit_6365[12];

/* 80528624-80528630 000C+00 s=1 e=0 z=0  None .bss       @6366 */
static u8 lit_6366[12];

/* 80528630-8052863C 000C+00 s=1 e=0 z=0  None .bss       @6367 */
static u8 lit_6367[12];

/* 8052863C-80528648 000C+00 s=1 e=0 z=0  None .bss       @6368 */
static u8 lit_6368[12];

/* 80528648-80528654 000C+00 s=1 e=0 z=0  None .bss       @6369 */
static u8 lit_6369[12];

/* 80528654-80528660 000C+00 s=1 e=0 z=0  None .bss       @6370 */
static u8 lit_6370[12];

/* 80528660-8052866C 000C+00 s=1 e=0 z=0  None .bss       @6372 */
static u8 lit_6372[12];

/* 8052866C-80528678 000C+00 s=1 e=0 z=0  None .bss       @6373 */
static u8 lit_6373[12];

/* 80528678-80528684 000C+00 s=1 e=0 z=0  None .bss       @6374 */
static u8 lit_6374[12];

/* 80528684-80528690 000C+00 s=1 e=0 z=0  None .bss       @6376 */
static u8 lit_6376[12];

/* 80528690-8052869C 000C+00 s=1 e=0 z=0  None .bss       @6377 */
static u8 lit_6377[12];

/* 8052869C-805286A8 000C+00 s=1 e=0 z=0  None .bss       @6378 */
static u8 lit_6378[12];

/* 805286A8-805286B4 000C+00 s=1 e=0 z=0  None .bss       @6379 */
static u8 lit_6379[12];

/* 805286B4-805286C0 000C+00 s=1 e=0 z=0  None .bss       @6380 */
static u8 lit_6380[12];

/* 805286C0-805286CC 000C+00 s=1 e=0 z=0  None .bss       @6381 */
static u8 lit_6381[12];

/* 805286CC-805286D8 000C+00 s=1 e=0 z=0  None .bss       @6382 */
static u8 lit_6382[12];

/* 805286D8-805286E4 000C+00 s=1 e=0 z=0  None .bss       @6384 */
static u8 lit_6384[12];

/* 805286E4-805286F0 000C+00 s=1 e=0 z=0  None .bss       @6385 */
static u8 lit_6385[12];

/* 805286F0-805286FC 000C+00 s=1 e=0 z=0  None .bss       @6386 */
static u8 lit_6386[12];

/* 805286FC-80528708 000C+00 s=1 e=0 z=0  None .bss       @6387 */
static u8 lit_6387[12];

/* 80528708-80528714 000C+00 s=1 e=0 z=0  None .bss       @6388 */
static u8 lit_6388[12];

/* 80528714-80528720 000C+00 s=1 e=0 z=0  None .bss       @6389 */
static u8 lit_6389[12];

/* 80528720-8052872C 000C+00 s=1 e=0 z=0  None .bss       @6390 */
static u8 lit_6390[12];

/* 8052872C-80528738 000C+00 s=1 e=0 z=0  None .bss       @6391 */
static u8 lit_6391[12];

/* 80528738-80528744 000C+00 s=1 e=0 z=0  None .bss       @6392 */
static u8 lit_6392[12];

/* 80528744-80528750 000C+00 s=1 e=0 z=0  None .bss       @6393 */
static u8 lit_6393[12];

/* 80528750-8052875C 000C+00 s=1 e=0 z=0  None .bss       @6394 */
static u8 lit_6394[12];

/* 8052875C-80528768 000C+00 s=1 e=0 z=0  None .bss       @6395 */
static u8 lit_6395[12];

/* 80528768-80528774 000C+00 s=1 e=0 z=0  None .bss       @6396 */
static u8 lit_6396[12];

/* 80528774-80528780 000C+00 s=1 e=0 z=0  None .bss       @6397 */
static u8 lit_6397[12];

/* 80528780-8052878C 000C+00 s=1 e=0 z=0  None .bss       @6398 */
static u8 lit_6398[12];

/* 8052878C-80528798 000C+00 s=1 e=0 z=0  None .bss       @6399 */
static u8 lit_6399[12];

/* 80528798-805287A4 000C+00 s=1 e=0 z=0  None .bss       @6400 */
static u8 lit_6400[12];

/* 805287A4-805287B0 000C+00 s=1 e=0 z=0  None .bss       @6402 */
static u8 lit_6402[12];

/* 805287B0-805287BC 000C+00 s=1 e=0 z=0  None .bss       @6403 */
static u8 lit_6403[12];

/* 805287BC-805287C8 000C+00 s=1 e=0 z=0  None .bss       @6404 */
static u8 lit_6404[12];

/* 805287C8-805287D4 000C+00 s=1 e=0 z=0  None .bss       @6405 */
static u8 lit_6405[12];

/* 805287D4-805287E0 000C+00 s=1 e=0 z=0  None .bss       @6406 */
static u8 lit_6406[12];

/* 805287E0-805287EC 000C+00 s=1 e=0 z=0  None .bss       @6407 */
static u8 lit_6407[12];

/* 805287EC-805287F0 0004+00 s=0 e=0 z=0  None .bss
 * sInstance__40JASGlobalInstance<19JASDefaultBankTable>        */
u8 data_805287EC[4];

/* 805287F0-805287F4 0004+00 s=0 e=0 z=0  None .bss
 * sInstance__35JASGlobalInstance<14JASAudioThread>             */
u8 data_805287F0[4];

/* 805287F4-805287F8 0004+00 s=0 e=0 z=0  None .bss       sInstance__27JASGlobalInstance<7Z2SeMgr>
 */
u8 data_805287F4[4];

/* 805287F8-805287FC 0004+00 s=0 e=0 z=0  None .bss       sInstance__28JASGlobalInstance<8Z2SeqMgr>
 */
u8 data_805287F8[4];

/* 805287FC-80528800 0004+00 s=0 e=0 z=0  None .bss sInstance__31JASGlobalInstance<10Z2SceneMgr>
 */
u8 data_805287FC[4];

/* 80528800-80528804 0004+00 s=0 e=0 z=0  None .bss sInstance__32JASGlobalInstance<11Z2StatusMgr>
 */
u8 data_80528800[4];

/* 80528804-80528808 0004+00 s=0 e=0 z=0  None .bss sInstance__31JASGlobalInstance<10Z2DebugSys>
 */
u8 data_80528804[4];

/* 80528808-8052880C 0004+00 s=0 e=0 z=0  None .bss
 * sInstance__36JASGlobalInstance<15JAISoundStarter>            */
u8 data_80528808[4];

/* 8052880C-80528810 0004+00 s=0 e=0 z=0  None .bss
 * sInstance__35JASGlobalInstance<14Z2SoundStarter>             */
u8 data_8052880C[4];

/* 80528810-80528814 0004+00 s=0 e=0 z=0  None .bss sInstance__33JASGlobalInstance<12Z2SpeechMgr2>
 */
u8 data_80528810[4];

/* 80528814-80528818 0004+00 s=0 e=0 z=0  None .bss       sInstance__28JASGlobalInstance<8JAISeMgr>
 */
u8 data_80528814[4];

/* 80528818-8052881C 0004+00 s=0 e=0 z=0  None .bss       sInstance__29JASGlobalInstance<9JAISeqMgr>
 */
u8 data_80528818[4];

/* 8052881C-80528820 0004+00 s=0 e=0 z=0  None .bss sInstance__33JASGlobalInstance<12JAIStreamMgr>
 */
u8 data_8052881C[4];

/* 80528820-80528824 0004+00 s=0 e=0 z=0  None .bss sInstance__31JASGlobalInstance<10Z2SoundMgr>
 */
u8 data_80528820[4];

/* 80528824-80528828 0004+00 s=0 e=0 z=0  None .bss sInstance__33JASGlobalInstance<12JAISoundInfo>
 */
u8 data_80528824[4];

/* 80528828-8052882C 0004+00 s=0 e=0 z=0  None .bss
 * sInstance__34JASGlobalInstance<13JAUSoundTable>              */
u8 data_80528828[4];

/* 8052882C-80528830 0004+00 s=0 e=0 z=0  None .bss
 * sInstance__38JASGlobalInstance<17JAUSoundNameTable>          */
u8 data_8052882C[4];

/* 80528830-80528834 0004+00 s=0 e=0 z=0  None .bss sInstance__33JASGlobalInstance<12JAUSoundInfo>
 */
u8 data_80528830[4];

/* 80528834-80528838 0004+00 s=0 e=0 z=0  None .bss sInstance__32JASGlobalInstance<11Z2SoundInfo>
 */
u8 data_80528834[4];

/* 80528838-8052883C 0004+00 s=0 e=0 z=0  None .bss
 * sInstance__34JASGlobalInstance<13Z2SoundObjMgr>              */
u8 data_80528838[4];

/* 8052883C-80528840 0004+00 s=0 e=0 z=0  None .bss sInstance__31JASGlobalInstance<10Z2Audience>
 */
u8 data_8052883C[4];

/* 80528840-80528844 0004+00 s=0 e=0 z=0  None .bss sInstance__32JASGlobalInstance<11Z2FxLineMgr>
 */
u8 data_80528840[4];

/* 80528844-80528848 0004+00 s=0 e=0 z=0  None .bss sInstance__31JASGlobalInstance<10Z2EnvSeMgr>
 */
u8 data_80528844[4];

/* 80528848-8052884C 0004+00 s=0 e=0 z=0  None .bss sInstance__32JASGlobalInstance<11Z2SpeechMgr>
 */
u8 data_80528848[4];

/* 8052884C-80528850 0004+00 s=0 e=0 z=0  None .bss
 * sInstance__34JASGlobalInstance<13Z2WolfHowlMgr>              */
u8 data_8052884C[4];

/* 80528850-80528854 0004+00 s=1 e=0 z=0  None .bss       None */
static u8 data_80528850[4];

/* 80528854-80528880 002C+00 s=2 e=0 z=0  None .bss       None */
static u8 struct_80528854[44];

/* 80528880-80528900 0080+00 s=2 e=0 z=0  None .bss       None */
static u8 struct_80528880[128];

/* 80528900-80528914 0014+00 s=2 e=0 z=0  None .bss       None */
static u8 struct_80528900[20];

/* 80528914-80528940 002C+00 s=2 e=0 z=0  None .bss       None */
static u8 struct_80528914[44];

/* 80528940-805289A8 0068+00 s=2 e=0 z=0  None .bss       None */
static u8 struct_80528940[104];

/* 805289A8-805289D2 002A+00 s=2 e=0 z=0  None .bss l_setType5$localstatic13$create__9daGrass_cFv
 */
static u8 data_805289A8[42];

/* 8051BFBC-8051C040 0084+00 s=1 e=0 z=0  None .text      __dt__15dGrass_packet_cFv */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm dGrass_packet_c::~dGrass_packet_c() {
    nofralloc
#include "asm/rel/d/a/d_a_grass/d_a_grass/__dt__15dGrass_packet_cFv.s"
}
#pragma pop

/* 8051C040-8051C074 0034+00 s=1 e=0 z=0  None .text      executeGrass__9daGrass_cFv */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void daGrass_c::executeGrass() {
    nofralloc
#include "asm/rel/d/a/d_a_grass/d_a_grass/executeGrass__9daGrass_cFv.s"
}
#pragma pop

/* 8051C074-8051C0A8 0034+00 s=1 e=0 z=0  None .text      drawGrass__9daGrass_cFv */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void daGrass_c::drawGrass() {
    nofralloc
#include "asm/rel/d/a/d_a_grass/d_a_grass/drawGrass__9daGrass_cFv.s"
}
#pragma pop

/* 8051C0A8-8051C0D4 002C+00 s=1 e=0 z=0  None .text      newGrassData__9daGrass_cFR4cXyziUcUcsUc */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void daGrass_c::newGrassData(cXyz& param_0, int param_1, u8 param_2, u8 param_3, s16 param_4,
                                 u8 param_5) {
    nofralloc
#include "asm/rel/d/a/d_a_grass/d_a_grass/newGrassData__9daGrass_cFR4cXyziUcUcsUc.s"
}
#pragma pop

/* 8051C0D4-8051C140 006C+00 s=1 e=0 z=0  None .text      createFlower__9daGrass_cFv */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void daGrass_c::createFlower() {
    nofralloc
#include "asm/rel/d/a/d_a_grass/d_a_grass/createFlower__9daGrass_cFv.s"
}
#pragma pop

/* 8051C140-8051C194 0054+00 s=1 e=0 z=0  None .text      deleteFlower__9daGrass_cFv */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void daGrass_c::deleteFlower() {
    nofralloc
#include "asm/rel/d/a/d_a_grass/d_a_grass/deleteFlower__9daGrass_cFv.s"
}
#pragma pop

/* 8051C194-8051C218 0084+00 s=1 e=0 z=0  None .text      __dt__16dFlower_packet_cFv */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm dFlower_packet_c::~dFlower_packet_c() {
    nofralloc
#include "asm/rel/d/a/d_a_grass/d_a_grass/__dt__16dFlower_packet_cFv.s"
}
#pragma pop

/* 8051C218-8051C24C 0034+00 s=1 e=0 z=0  None .text      executeFlower__9daGrass_cFv */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void daGrass_c::executeFlower() {
    nofralloc
#include "asm/rel/d/a/d_a_grass/d_a_grass/executeFlower__9daGrass_cFv.s"
}
#pragma pop

/* 8051C24C-8051C280 0034+00 s=1 e=0 z=0  None .text      drawFlower__9daGrass_cFv */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void daGrass_c::drawFlower() {
    nofralloc
#include "asm/rel/d/a/d_a_grass/d_a_grass/drawFlower__9daGrass_cFv.s"
}
#pragma pop

/* 8051C280-8051C2AC 002C+00 s=1 e=0 z=0  None .text      newFlowerData__9daGrass_cFScR4cXyziScs */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void daGrass_c::newFlowerData(s8 param_0, cXyz& param_1, int param_2, s8 param_3, s16 param_4) {
    nofralloc
#include "asm/rel/d/a/d_a_grass/d_a_grass/newFlowerData__9daGrass_cFScR4cXyziScs.s"
}
#pragma pop

/* 8051C2AC-8051C2B0 0004+00 s=1 e=0 z=0  None .text      dGrass_Tex_Change__Fv */
static void dGrass_Tex_Change() {
    /* empty function */
}

/* 8051C2B0-8051C304 0054+00 s=1 e=0 z=0  None .text      daGrass_create__FP9daGrass_c */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm static void daGrass_create(daGrass_c* param_0) {
    nofralloc
#include "asm/rel/d/a/d_a_grass/d_a_grass/daGrass_create__FP9daGrass_c.s"
}
#pragma pop

/* ############################################################################################## */
/* 805231B0-805231B4 0004+00 s=1 e=0 z=0  None .rodata    @6978 */
SECTION_RODATA static u32 const lit_6978 = 0x44960000;

/* 805231B4-805231B8 0004+00 s=1 e=0 z=0  None .rodata    @6979 */
SECTION_RODATA static u32 const lit_6979 = 0x42960000;

/* 805231B8-805231BC 0004+00 s=1 e=0 z=0  None .rodata    @6980 */
SECTION_RODATA static u32 const lit_6980 = 0x3F547AE1;

/* 805231BC-805231C0 0004+00 s=1 e=0 z=0  None .rodata    @6981 */
SECTION_RODATA static u32 const lit_6981 = 0x40133333;

/* 805231C0-805231D6 0016+00 s=4 e=0 z=0  None .rodata    @stringBase0 */
#pragma push
#pragma force_active on
#pragma section ".dead"
SECTION_DEAD char const* const stringBase_805231C0 = "D_MN01";
SECTION_DEAD char const* const stringBase_805231C7 = "D_MN54";
SECTION_DEAD char const* const stringBase_805231CE = "D_MN07A";
#pragma pop

/* 8051C304-8051D6CC 13C8+00 s=1 e=0 z=0  None .text      create__9daGrass_cFv */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void daGrass_c::create() {
    nofralloc
#include "asm/rel/d/a/d_a_grass/d_a_grass/create__9daGrass_cFv.s"
}
#pragma pop

/* 8051D6CC-8051D720 0054+00 s=1 e=0 z=0  None .text      daGrass_Delete__FP9daGrass_c */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm static void daGrass_Delete(daGrass_c* param_0) {
    nofralloc
#include "asm/rel/d/a/d_a_grass/d_a_grass/daGrass_Delete__FP9daGrass_c.s"
}
#pragma pop

/* 8051D720-8051D77C 005C+00 s=1 e=0 z=0  None .text      daGrass_execute__FP9daGrass_c */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm static void daGrass_execute(daGrass_c* param_0) {
    nofralloc
#include "asm/rel/d/a/d_a_grass/d_a_grass/daGrass_execute__FP9daGrass_c.s"
}
#pragma pop

/* 8051D77C-8051D7B4 0038+00 s=1 e=0 z=0  None .text      daGrass_draw__FP9daGrass_c */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm static void daGrass_draw(daGrass_c* param_0) {
    nofralloc
#include "asm/rel/d/a/d_a_grass/d_a_grass/daGrass_draw__FP9daGrass_c.s"
}
#pragma pop

/* 8051D7B4-8051D7D0 001C+00 s=1 e=0 z=0  None .text      cLib_calcTimer<Uc>__FPUc */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm static void cLib_calcTimer__template0(u8* param_0) {
    nofralloc
#include "asm/rel/d/a/d_a_grass/d_a_grass/func_8051D7B4.s"
}
#pragma pop

/* 8051D7D0-8051D88C 00BC+00 s=0 e=1 z=0  None .text      __sinit_d_a_grass_cpp */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
extern "C" asm void __sinit_d_a_grass_cpp() {
    nofralloc
#include "asm/rel/d/a/d_a_grass/d_a_grass/__sinit_d_a_grass_cpp.s"
}
#pragma pop

/* 8051D88C-8051DA20 0194+00 s=1 e=0 z=0  None .text      WorkCo__13dGrass_data_cFP10fopAc_ac_cUli
 */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void dGrass_data_c::WorkCo(fopAc_ac_c* param_0, u32 param_1, int param_2) {
    nofralloc
#include "asm/rel/d/a/d_a_grass/d_a_grass/WorkCo__13dGrass_data_cFP10fopAc_ac_cUli.s"
}
#pragma pop

/* 8051DA20-8051DF54 0534+00 s=1 e=0 z=0  None .text
 * WorkAt_NoCutAnim__13dGrass_data_cFP10fopAc_ac_cUliP15dCcMassS_HitInfP8cCcD_Obj */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void dGrass_data_c::WorkAt_NoCutAnim(fopAc_ac_c* param_0, u32 param_1, int param_2,
                                         dCcMassS_HitInf* param_3, cCcD_Obj* param_4) {
    nofralloc
#include "asm/rel/d/a/d_a_grass/d_a_grass/WorkAt_NoCutAnim__13dGrass_data_cFP10fopAc_ac_cUliP15dCcMassS_HitInfP8cCcD_Obj.s"
}
#pragma pop

/* 8051DF54-8051E1C8 0274+00 s=1 e=0 z=0  None .text
 * Direction_Set__13dGrass_data_cFP10fopAc_ac_cUliP15dCcMassS_HitInfP8cCcD_ObjP5csXyz */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void dGrass_data_c::Direction_Set(fopAc_ac_c* param_0, u32 param_1, int param_2,
                                      dCcMassS_HitInf* param_3, cCcD_Obj* param_4, csXyz* param_5) {
    nofralloc
#include "asm/rel/d/a/d_a_grass/d_a_grass/Direction_Set__13dGrass_data_cFP10fopAc_ac_cUliP15dCcMassS_HitInfP8cCcD_ObjP5csXyz.s"
}
#pragma pop

/* 8051E1C8-8051EB4C 0984+00 s=1 e=0 z=0  None .text
 * WorkAt__13dGrass_data_cFP10fopAc_ac_cUliP15dCcMassS_HitInfUs */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void dGrass_data_c::WorkAt(fopAc_ac_c* param_0, u32 param_1, int param_2,
                               dCcMassS_HitInf* param_3, u16 param_4) {
    nofralloc
#include "asm/rel/d/a/d_a_grass/d_a_grass/WorkAt__13dGrass_data_cFP10fopAc_ac_cUliP15dCcMassS_HitInfUs.s"
}
#pragma pop

/* 8051EB4C-8051EB88 003C+00 s=3 e=0 z=0  None .text      __dt__5csXyzFv */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm csXyz::~csXyz() {
    nofralloc
#include "asm/rel/d/a/d_a_grass/d_a_grass/__dt__5csXyzFv.s"
}
#pragma pop

/* ############################################################################################## */
/* 805278B8-805278C4 000C+00 s=3 e=0 z=0  None .data      __vt__15dCcMassS_HitInf */
SECTION_DATA static void* __vt__15dCcMassS_HitInf[3] = {
    (void*)NULL,
    (void*)NULL,
    (void*)__dt__15dCcMassS_HitInfFv,
};

/* 8051EB88-8051ED98 0210+00 s=1 e=0 z=0  None .text      hitCheck__13dGrass_data_cFiUs */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void dGrass_data_c::hitCheck(int param_0, u16 param_1) {
    nofralloc
#include "asm/rel/d/a/d_a_grass/d_a_grass/hitCheck__13dGrass_data_cFiUs.s"
}
#pragma pop

/* 8051ED98-8051EDE0 0048+00 s=1 e=0 z=0  None .text      __dt__15dCcMassS_HitInfFv */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm dCcMassS_HitInf::~dCcMassS_HitInf() {
    nofralloc
#include "asm/rel/d/a/d_a_grass/d_a_grass/__dt__15dCcMassS_HitInfFv.s"
}
#pragma pop

/* 8051EDE0-8051EDF0 0010+00 s=1 e=0 z=0  None .text      newData__13dGrass_room_cFP13dGrass_data_c
 */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void dGrass_room_c::newData(dGrass_data_c* param_0) {
    nofralloc
#include "asm/rel/d/a/d_a_grass/d_a_grass/newData__13dGrass_room_cFP13dGrass_data_c.s"
}
#pragma pop

/* 8051EDF0-8051EE8C 009C+00 s=1 e=0 z=0  None .text      deleteData__13dGrass_room_cFv */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void dGrass_room_c::deleteData() {
    nofralloc
#include "asm/rel/d/a/d_a_grass/d_a_grass/deleteData__13dGrass_room_cFv.s"
}
#pragma pop

/* 8051EE8C-8051F03C 01B0+00 s=1 e=0 z=0  None .text      __ct__15dGrass_packet_cFv */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm dGrass_packet_c::dGrass_packet_c() {
    nofralloc
#include "asm/rel/d/a/d_a_grass/d_a_grass/__ct__15dGrass_packet_cFv.s"
}
#pragma pop

/* 8051F03C-8051FABC 0A80+00 s=1 e=0 z=0  None .text      draw__15dGrass_packet_cFv */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void dGrass_packet_c::draw() {
    nofralloc
#include "asm/rel/d/a/d_a_grass/d_a_grass/draw__15dGrass_packet_cFv.s"
}
#pragma pop

/* 8051FABC-8051FF88 04CC+00 s=1 e=0 z=0  None .text      calc__15dGrass_packet_cFv */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void dGrass_packet_c::calc() {
    nofralloc
#include "asm/rel/d/a/d_a_grass/d_a_grass/calc__15dGrass_packet_cFv.s"
}
#pragma pop

/* 8051FF88-80520030 00A8+00 s=3 e=0 z=1  None .text      checkGroundY__FR4cXyz */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void checkGroundY(cXyz& param_0) {
    nofralloc
#include "asm/rel/d/a/d_a_grass/d_a_grass/checkGroundY__FR4cXyz.s"
}
#pragma pop

/* 80520030-8052067C 064C+00 s=1 e=0 z=0  None .text      update__15dGrass_packet_cFv */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void dGrass_packet_c::update() {
    nofralloc
#include "asm/rel/d/a/d_a_grass/d_a_grass/update__15dGrass_packet_cFv.s"
}
#pragma pop

/* 8052067C-80520770 00F4+00 s=1 e=0 z=0  None .text
 * setData__15dGrass_packet_cFP13dGrass_data_ciR4cXyziUcUcsUc   */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void dGrass_packet_c::setData(dGrass_data_c* param_0, int param_1, cXyz& param_2, int param_3,
                                  u8 param_4, u8 param_5, s16 param_6, u8 param_7) {
    nofralloc
#include "asm/rel/d/a/d_a_grass/d_a_grass/setData__15dGrass_packet_cFP13dGrass_data_ciR4cXyziUcUcsUc.s"
}
#pragma pop

/* 80520770-80520864 00F4+00 s=1 e=0 z=0  None .text      newData__15dGrass_packet_cFR4cXyziUcUcsUc
 */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void dGrass_packet_c::newData(cXyz& param_0, int param_1, u8 param_2, u8 param_3, s16 param_4,
                                  u8 param_5) {
    nofralloc
#include "asm/rel/d/a/d_a_grass/d_a_grass/newData__15dGrass_packet_cFR4cXyziUcUcsUc.s"
}
#pragma pop

/* 80520864-80520898 0034+00 s=1 e=0 z=0  None .text      deleteRoom__15dGrass_packet_cFi */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void dGrass_packet_c::deleteRoom(int param_0) {
    nofralloc
#include "asm/rel/d/a/d_a_grass/d_a_grass/deleteRoom__15dGrass_packet_cFi.s"
}
#pragma pop

/* 80520898-805208E4 004C+00 s=2 e=0 z=0  None .text      newAnm__15dGrass_packet_cFv */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void dGrass_packet_c::newAnm() {
    nofralloc
#include "asm/rel/d/a/d_a_grass/d_a_grass/newAnm__15dGrass_packet_cFv.s"
}
#pragma pop

/* 805208E4-8052090C 0028+00 s=1 e=0 z=0  None .text      setAnm__15dGrass_packet_cFis */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void dGrass_packet_c::setAnm(int param_0, s16 param_1) {
    nofralloc
#include "asm/rel/d/a/d_a_grass/d_a_grass/setAnm__15dGrass_packet_cFis.s"
}
#pragma pop

/* 8052090C-80520928 001C+00 s=1 e=0 z=0  None .text      getSwordTopPos__9daPy_py_cCFv */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void daPy_py_c::getSwordTopPos() const {
    nofralloc
#include "asm/rel/d/a/d_a_grass/d_a_grass/getSwordTopPos__9daPy_py_cCFv.s"
}
#pragma pop

/* 80520928-80520934 000C+00 s=1 e=0 z=0  None .text      __ct__13dGrass_room_cFv */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm dGrass_room_c::dGrass_room_c() {
    nofralloc
#include "asm/rel/d/a/d_a_grass/d_a_grass/__ct__13dGrass_room_cFv.s"
}
#pragma pop

/* 80520934-80520940 000C+00 s=1 e=0 z=0  None .text      __ct__12dGrass_anm_cFv */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm dGrass_anm_c::dGrass_anm_c() {
    nofralloc
#include "asm/rel/d/a/d_a_grass/d_a_grass/__ct__12dGrass_anm_cFv.s"
}
#pragma pop

/* 80520940-8052097C 003C+00 s=2 e=0 z=0  None .text      __dt__13dGrass_data_cFv */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm dGrass_data_c::~dGrass_data_c() {
    nofralloc
#include "asm/rel/d/a/d_a_grass/d_a_grass/__dt__13dGrass_data_cFv.s"
}
#pragma pop

/* 8052097C-80520988 000C+00 s=1 e=0 z=0  None .text      __ct__13dGrass_data_cFv */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm dGrass_data_c::dGrass_data_c() {
    nofralloc
#include "asm/rel/d/a/d_a_grass/d_a_grass/__ct__13dGrass_data_cFv.s"
}
#pragma pop

/* 80520988-80520AD8 0150+00 s=1 e=0 z=0  None .text      WorkCo__14dFlower_data_cFP10fopAc_ac_cUli
 */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void dFlower_data_c::WorkCo(fopAc_ac_c* param_0, u32 param_1, int param_2) {
    nofralloc
#include "asm/rel/d/a/d_a_grass/d_a_grass/WorkCo__14dFlower_data_cFP10fopAc_ac_cUli.s"
}
#pragma pop

/* 80520AD8-80520B34 005C+00 s=4 e=0 z=0  None .text      deleteAnm__14dFlower_data_cFv */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void dFlower_data_c::deleteAnm() {
    nofralloc
#include "asm/rel/d/a/d_a_grass/d_a_grass/deleteAnm__14dFlower_data_cFv.s"
}
#pragma pop

/* 80520B34-80520CFC 01C8+00 s=1 e=0 z=0  None .text
 * WorkAt_NoCutAnim__14dFlower_data_cFP10fopAc_ac_cUliP15dCcMassS_HitInfP8cCcD_Obj */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void dFlower_data_c::WorkAt_NoCutAnim(fopAc_ac_c* param_0, u32 param_1, int param_2,
                                          dCcMassS_HitInf* param_3, cCcD_Obj* param_4) {
    nofralloc
#include "asm/rel/d/a/d_a_grass/d_a_grass/WorkAt_NoCutAnim__14dFlower_data_cFP10fopAc_ac_cUliP15dCcMassS_HitInfP8cCcD_Obj.s"
}
#pragma pop

/* 80520CFC-80521A3C 0D40+00 s=1 e=0 z=0  None .text
 * WorkAt__14dFlower_data_cFP10fopAc_ac_cUliP15dCcMassS_HitInf  */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void dFlower_data_c::WorkAt(fopAc_ac_c* param_0, u32 param_1, int param_2,
                                dCcMassS_HitInf* param_3) {
    nofralloc
#include "asm/rel/d/a/d_a_grass/d_a_grass/WorkAt__14dFlower_data_cFP10fopAc_ac_cUliP15dCcMassS_HitInf.s"
}
#pragma pop

/* 80521A3C-80521BF8 01BC+00 s=1 e=0 z=0  None .text      hitCheck__14dFlower_data_cFP10fopAc_ac_ci
 */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void dFlower_data_c::hitCheck(fopAc_ac_c* param_0, int param_1) {
    nofralloc
#include "asm/rel/d/a/d_a_grass/d_a_grass/hitCheck__14dFlower_data_cFP10fopAc_ac_ci.s"
}
#pragma pop

/* 80521BF8-80521C08 0010+00 s=1 e=0 z=0  None .text newData__14dFlower_room_cFP14dFlower_data_c
 */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void dFlower_room_c::newData(dFlower_data_c* param_0) {
    nofralloc
#include "asm/rel/d/a/d_a_grass/d_a_grass/newData__14dFlower_room_cFP14dFlower_data_c.s"
}
#pragma pop

/* 80521C08-80521C64 005C+00 s=1 e=0 z=0  None .text      deleteData__14dFlower_room_cFv */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void dFlower_room_c::deleteData() {
    nofralloc
#include "asm/rel/d/a/d_a_grass/d_a_grass/deleteData__14dFlower_room_cFv.s"
}
#pragma pop

/* 80521C64-80521DAC 0148+00 s=1 e=0 z=0  None .text      __ct__16dFlower_packet_cFv */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm dFlower_packet_c::dFlower_packet_c() {
    nofralloc
#include "asm/rel/d/a/d_a_grass/d_a_grass/__ct__16dFlower_packet_cFv.s"
}
#pragma pop

/* 80521DAC-80522774 09C8+00 s=2 e=0 z=0  None .text      draw__16dFlower_packet_cFv */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void dFlower_packet_c::draw() {
    nofralloc
#include "asm/rel/d/a/d_a_grass/d_a_grass/draw__16dFlower_packet_cFv.s"
}
#pragma pop

/* 80522774-8052299C 0228+00 s=1 e=0 z=0  None .text      calc__16dFlower_packet_cFv */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void dFlower_packet_c::calc() {
    nofralloc
#include "asm/rel/d/a/d_a_grass/d_a_grass/calc__16dFlower_packet_cFv.s"
}
#pragma pop

/* 8052299C-80522A64 00C8+00 s=2 e=0 z=0  None .text      flowerCheckGroundY__FR4cXyz */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm static void flowerCheckGroundY(cXyz& param_0) {
    nofralloc
#include "asm/rel/d/a/d_a_grass/d_a_grass/flowerCheckGroundY__FR4cXyz.s"
}
#pragma pop

/* 80522A64-80522CBC 0258+00 s=1 e=0 z=0  None .text      update__16dFlower_packet_cFv */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void dFlower_packet_c::update() {
    nofralloc
#include "asm/rel/d/a/d_a_grass/d_a_grass/update__16dFlower_packet_cFv.s"
}
#pragma pop

/* 80522CBC-80522E28 016C+00 s=1 e=0 z=0  None .text
 * setData__16dFlower_packet_cFP14dFlower_data_ciScR4cXyziScs   */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void dFlower_packet_c::setData(dFlower_data_c* param_0, int param_1, s8 param_2, cXyz& param_3,
                                   int param_4, s8 param_5, s16 param_6) {
    nofralloc
#include "asm/rel/d/a/d_a_grass/d_a_grass/setData__16dFlower_packet_cFP14dFlower_data_ciScR4cXyziScs.s"
}
#pragma pop

/* 80522E28-80522F0C 00E4+00 s=1 e=0 z=0  None .text      newData__16dFlower_packet_cFScR4cXyziScs
 */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void dFlower_packet_c::newData(s8 param_0, cXyz& param_1, int param_2, s8 param_3,
                                   s16 param_4) {
    nofralloc
#include "asm/rel/d/a/d_a_grass/d_a_grass/newData__16dFlower_packet_cFScR4cXyziScs.s"
}
#pragma pop

/* 80522F0C-80522F40 0034+00 s=1 e=0 z=0  None .text      deleteRoom__16dFlower_packet_cFi */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void dFlower_packet_c::deleteRoom(int param_0) {
    nofralloc
#include "asm/rel/d/a/d_a_grass/d_a_grass/deleteRoom__16dFlower_packet_cFi.s"
}
#pragma pop

/* 80522F40-80522F8C 004C+00 s=2 e=0 z=0  None .text      newAnm__16dFlower_packet_cFv */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void dFlower_packet_c::newAnm() {
    nofralloc
#include "asm/rel/d/a/d_a_grass/d_a_grass/newAnm__16dFlower_packet_cFv.s"
}
#pragma pop

/* 80522F8C-80522FB4 0028+00 s=1 e=0 z=0  None .text      setAnm__16dFlower_packet_cFis */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void dFlower_packet_c::setAnm(int param_0, s16 param_1) {
    nofralloc
#include "asm/rel/d/a/d_a_grass/d_a_grass/setAnm__16dFlower_packet_cFis.s"
}
#pragma pop

/* 80522FB4-80522FC0 000C+00 s=1 e=0 z=0  None .text      __ct__14dFlower_room_cFv */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm dFlower_room_c::dFlower_room_c() {
    nofralloc
#include "asm/rel/d/a/d_a_grass/d_a_grass/__ct__14dFlower_room_cFv.s"
}
#pragma pop

/* 80522FC0-80522FCC 000C+00 s=1 e=0 z=0  None .text      __ct__13dFlower_anm_cFv */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm dFlower_anm_c::dFlower_anm_c() {
    nofralloc
#include "asm/rel/d/a/d_a_grass/d_a_grass/__ct__13dFlower_anm_cFv.s"
}
#pragma pop

/* 80522FCC-80523008 003C+00 s=2 e=0 z=0  None .text      __dt__14dFlower_data_cFv */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm dFlower_data_c::~dFlower_data_c() {
    nofralloc
#include "asm/rel/d/a/d_a_grass/d_a_grass/__dt__14dFlower_data_cFv.s"
}
#pragma pop

/* 80523008-80523014 000C+00 s=1 e=0 z=0  None .text      __ct__14dFlower_data_cFv */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm dFlower_data_c::dFlower_data_c() {
    nofralloc
#include "asm/rel/d/a/d_a_grass/d_a_grass/__ct__14dFlower_data_cFv.s"
}
#pragma pop
