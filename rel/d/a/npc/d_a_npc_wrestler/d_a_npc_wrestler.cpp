//
// Generated By: dol2asm
// Translation Unit: d_a_npc_wrestler
//

#include "rel/d/a/npc/d_a_npc_wrestler/d_a_npc_wrestler.h"
#include "dol2asm.h"
#include "dolphin/types.h"

//
// Types:
//

struct fopAc_ac_c {
    /* 80018B64 */ fopAc_ac_c();
    /* 80018C8C */ ~fopAc_ac_c();
};

struct J3DModel {};

struct J3DJoint {};

struct daNpcWrestler_c {
    /* 80B2F28C */ daNpcWrestler_c();
    /* 80B2F4A0 */ ~daNpcWrestler_c();
    /* 80B2F688 */ void Create();
    /* 80B2F974 */ void CreateHeap();
    /* 80B2FDB0 */ void Delete();
    /* 80B2FDE4 */ void Execute();
    /* 80B2FE1C */ void Draw();
    /* 80B2FE84 */ void ctrlJoint(J3DJoint*, J3DModel*);
    /* 80B30150 */ void createHeapCallBack(fopAc_ac_c*);
    /* 80B30170 */ void ctrlJointCallBack(J3DJoint*, int);
    /* 80B301BC */ void checkStartUp();
    /* 80B3023C */ void setExpressionAnm(int, bool);
    /* 80B30654 */ void setExpressionBtp(int);
    /* 80B3074C */ void setMotionAnm(int, f32);
    /* 80B308B0 */ void reset();
    /* 80B30AD8 */ void setAction(bool (daNpcWrestler_c::*)(void*));
    /* 80B30BEC */ void checkArenaInfo();
    /* 80B30CA4 */ void checkArenaSub(fopAc_ac_c*);
    /* 80B30D48 */ void setOnToArena(f32);
    /* 80B30F00 */ void wait(void*);
    /* 80B31680 */ void setMotion(int, f32, int);
    /* 80B316C8 */ void setExpression(int, f32);
    /* 80B316F4 */ void talk(void*);
    /* 80B31EB0 */ void demo(void*);
    /* 80B32058 */ void gotoArena(void*);
    /* 80B32444 */ void gotoLiving(void*);
    /* 80B32850 */ void sumouReady(void*);
    /* 80B331CC */ void sumouWait(void*);
    /* 80B339EC */ void checkOutOfArenaP();
    /* 80B33B3C */ void setNextAction();
    /* 80B34654 */ void sumouPunchHit(void*);
    /* 80B34CD0 */ void sumouPunchChaseHit(void*);
    /* 80B35364 */ void sumouPunchMiss(void*);
    /* 80B35780 */ void checkOutOfArenaW();
    /* 80B358F0 */ void getJointPos(int);
    /* 80B35968 */ void sumouPunchDraw(void*);
    /* 80B3606C */ void sumouTackleHit(void*);
    /* 80B36908 */ void sumouTackleMiss(void*);
    /* 80B36C8C */ void sumouTackleDraw(void*);
    /* 80B37270 */ void sumouSideStep(void*);
    /* 80B378F4 */ void sumouLostBalance(void*);
    /* 80B37C30 */ void sumouPunchShock(void*);
    /* 80B37FB8 */ void sumouPunchChaseShock(void*);
    /* 80B38518 */ void sumouPunchStagger(void*);
    /* 80B389A4 */ void sumouTackleShock(void*);
    /* 80B38C90 */ void sumouTackleStagger(void*);
    /* 80B39334 */ void sumouTackleStaggerRelease(void*);
    /* 80B39554 */ void sumouTacklePush(void*);
    /* 80B39C18 */ void sumouTackleRelease(void*);
    /* 80B39F88 */ void demoSumouReady(void*);
    /* 80B3AE24 */ void demoSumouWin(void*);
    /* 80B3B4B4 */ void demoSumouLose(void*);
    /* 80B3BC84 */ void demoSumouWin2(void*);
    /* 80B3C278 */ void demoSumouLose2(void*);
    /* 80B3CA2C */ void demoSumouUnilateralWin(void*);
    /* 80B3D0C0 */ void demoTalkAfterLose(void*);
    /* 80B3D584 */ void EvCut_grDSEntry(int);
    /* 80B3DB50 */ void EvCut_grDSEntry2(int);
    /* 80B3DCE8 */ void EvCut_grDSEntry3_4(int);
    /* 80B3E0FC */ void EvCut_grDSEntry5(int);
    /* 80B3E584 */ void EvCut_grDSLose(int);
    /* 80B3EAE4 */ void setParam();
    /* 80B3EB94 */ void main();
    /* 80B3EF10 */ void setWrestlerVoice();
    /* 80B3FCE8 */ void playMotion();
    /* 80B404FC */ void ctrlBtk();
    /* 80B405E8 */ void setAttnPos();
    /* 80B40B3C */ void lookat();
    /* 80B40D1C */ bool drawDbgInfo();
    /* 80B40D24 */ void drawOtherMdls();
    /* 80B4166C */ void adjustShapeAngle();
};

struct Vec {};

struct cXyz {
    /* 80266B34 */ void operator-(Vec const&) const;
    /* 80B40FCC */ ~cXyz();
    /* 80B41008 */ cXyz();
};

struct cM3dGCyl {
    /* 8026F1DC */ void SetC(cXyz const&);
    /* 8026F1F8 */ void SetH(f32);
    /* 8026F200 */ void SetR(f32);
    /* 80B2F410 */ ~cM3dGCyl();
};

struct cM3dGAab {
    /* 80B2F458 */ ~cM3dGAab();
};

struct J3DTevKColorAnm {
    /* 80B2FBF4 */ ~J3DTevKColorAnm();
    /* 80B2FC30 */ J3DTevKColorAnm();
};

struct J3DTevColorAnm {
    /* 80B2FC48 */ ~J3DTevColorAnm();
    /* 80B2FC84 */ J3DTevColorAnm();
};

struct J3DTexNoAnm {
    /* 80B2FC9C */ ~J3DTexNoAnm();
    /* 80B2FCE4 */ J3DTexNoAnm();
    /* 80B3EAB4 */ void calc(u16*) const;
};

struct J3DTexMtxAnm {
    /* 80B2FD08 */ ~J3DTexMtxAnm();
    /* 80B2FD44 */ J3DTexMtxAnm();
};

struct J3DMatColorAnm {
    /* 80B2FD5C */ ~J3DMatColorAnm();
    /* 80B2FD98 */ J3DMatColorAnm();
};

struct JMath {
    template <typename A1, typename B1>
    struct TSinCosTable {};
    /* TSinCosTable<13, f32> */
    struct TSinCosTable__template0 {
        /* 80B40D28 */ void sinShort(s16) const;
    };
};

struct daNpcF_ActorMngr_c {
    /* 801506B0 */ void initialize();
    /* 801506BC */ void entry(fopAc_ac_c*);
    /* 801506E0 */ void remove();
    /* 801506EC */ void getActorP();
    /* 80B40E38 */ ~daNpcF_ActorMngr_c();
    /* 80B40E80 */ daNpcF_ActorMngr_c();
};

struct csXyz {
    /* 80B40F8C */ ~csXyz();
    /* 80B40FC8 */ csXyz();
};

struct daNpcF_Lookat_c {
    /* 80151038 */ void initialize();
    /* 801510B8 */ void setParam(f32, f32, f32, f32, f32, f32, f32, f32, f32, f32, f32, f32, s16,
                                 cXyz*);
    /* 80151350 */ void calc(fopAc_ac_c*, f32 (*)[4], csXyz**, int, int, int);
    /* 80B40EBC */ ~daNpcF_Lookat_c();
};

struct J3DModelData {};

struct _GXColorS10 {};

struct J3DAnmTextureSRTKey {};

struct J3DAnmTexPattern {
    /* 8032AF50 */ void getTexNo(u16, u16*) const;
};

struct J3DAnmTransform {};

struct J3DAnmTransformKey {};

struct daNpcF_c {
    struct daNpcF_anmPlayData {};

    /* 80152014 */ void execute();
    /* 801522AC */ void draw(int, int, f32, _GXColorS10*, int);
    /* 8015276C */ void setMtx();
    /* 801527FC */ void setMtx2();
    /* 801528C8 */ void initialize();
    /* 80152B2C */ void getTrnsfrmKeyAnmP(char*, int);
    /* 80152B68 */ void getTexPtrnAnmP(char*, int);
    /* 80152BA4 */ void getTexSRTKeyAnmP(char*, int);
    /* 80152C1C */ void setMcaMorfAnm(J3DAnmTransformKey*, f32, f32, int, int, int);
    /* 80152C80 */ void setBckAnm(J3DAnmTransform*, f32, int, int, int, bool);
    /* 80152CC4 */ void setBtpAnm(J3DAnmTexPattern*, J3DModelData*, f32, int);
    /* 80152D04 */ void setBtkAnm(J3DAnmTextureSRTKey*, J3DModelData*, f32, int);
    /* 80152D84 */ void setEnvTevColor();
    /* 80152DE0 */ void setRoomNo();
    /* 80153150 */ void playExpressionAnm(daNpcF_c::daNpcF_anmPlayData***);
    /* 80153264 */ void playMotionAnm(daNpcF_c::daNpcF_anmPlayData***);
    /* 8015337C */ void setLookatMtx(int, int*, f32);
    /* 80153718 */ void ctrlMsgAnm(int&, int&, fopAc_ac_c*, int);
    /* 8015387C */ void orderEvent(int, char*, u16, u16, u8, u16);
    /* 80153954 */ void changeEvent(char*, char*, u16, u16);
    /* 80153BDC */ void chkActorInAttnArea(fopAc_ac_c*, fopAc_ac_c*, int);
    /* 80153D1C */ void initTalk(int, fopAc_ac_c**);
    /* 80153D84 */ void talkProc(int*, int, fopAc_ac_c**);
    /* 80153EF4 */ void turn(s16, f32, int);
    /* 80154250 */ void setAngle(s16);
    /* 80154278 */ void getDistTableIdx(int, int);
    /* 801542A0 */ void getEvtAreaTagP(int, int);
    /* 80B4100C */ ~daNpcF_c();
    /* 80B41258 */ daNpcF_c();
    /* 80B415CC */ void setCollisions();
};

struct dBgS_AcchCir {
    /* 80075EAC */ dBgS_AcchCir();
    /* 80075F40 */ void SetWallR(f32);
    /* 80075F58 */ void SetWall(f32, f32);
    /* 80B41448 */ ~dBgS_AcchCir();
};

struct dCcD_GStts {
    /* 80083760 */ dCcD_GStts();
    /* 80B414B8 */ ~dCcD_GStts();
};

struct dBgS_ObjAcch {
    /* 80B41514 */ ~dBgS_ObjAcch();
};

struct J3DFrameCtrl {
    /* 803283FC */ void init(s16);
    /* 8032842C */ void checkPass(f32);
    /* 80B41584 */ ~J3DFrameCtrl();
};

struct cCcD_GStts {
    /* 80B415D0 */ ~cCcD_GStts();
};

struct daTagArena_c {
    /* 80B41618 */ void getArenaPos();
};

struct daPy_py_c {
    /* 80B41634 */ void getRightFootPos() const;
    /* 80B41650 */ void getLeftFootPos() const;
};

struct daNpcWrestler_Param_c {
    /* 80B41670 */ ~daNpcWrestler_Param_c();
};

struct mDoGph_gInf_c {
    /* 800080D0 */ void fadeOut(f32);
};

struct mDoMtx_stack_c {
    /* 8000CCC8 */ void push();
    /* 8000CD14 */ void pop();
    /* 8000CD64 */ void transS(cXyz const&);
    /* 8000CDD4 */ void transM(cXyz const&);
    /* 8000CD9C */ void transM(f32, f32, f32);
};

struct mDoExt_bckAnm {
    /* 8000D990 */ void changeBckOnly(J3DAnmTransform*);
};

struct mDoExt_McaMorfCallBack2_c {};

struct Z2Creature {
    /* 802C03C8 */ Z2Creature();
    /* 802C0420 */ ~Z2Creature();
    /* 802C0530 */ void init(Vec*, Vec*, u8, u8);
};

struct mDoExt_McaMorfCallBack1_c {};

struct mDoExt_McaMorfSO {
    /* 800107D0 */ mDoExt_McaMorfSO(J3DModelData*, mDoExt_McaMorfCallBack1_c*,
                                    mDoExt_McaMorfCallBack2_c*, J3DAnmTransform*, int, f32, int,
                                    int, Z2Creature*, u32, u32);
    /* 800111EC */ void modelCalc();
    /* 80011310 */ void stopZelAnime();
};

struct dKy_tevstr_c {};

struct request_of_phase_process_class {};

struct dSv_info_c {
    /* 80035200 */ void onSwitch(int, int);
};

struct dRes_info_c {};

struct dRes_control_c {
    /* 8003C2EC */ void getRes(char const*, s32, dRes_info_c*, int);
};

struct dEvt_control_c {
    /* 80042468 */ void reset();
    /* 80042518 */ void reset(void*);
    /* 80042914 */ void setSkipProc(void*, int (*)(void*, int), int);
    /* 800436EC */ void setPtI_Id(unsigned int);
};

struct dEvent_manager_c {
    /* 80047758 */ void getEventIdx(fopAc_ac_c*, char const*, u8);
    /* 80047A78 */ void endCheck(s16);
    /* 80047B1C */ void getMyStaffId(char const*, fopAc_ac_c*, int);
    /* 80047D4C */ void getIsAddvance(int);
    /* 80047F5C */ void getMyNowCutName(int);
    /* 800480EC */ void getMySubstanceP(int, char const*, int);
    /* 8004817C */ void cutEnd(int);
    /* 800487F0 */ void ChkPresentEnd();
};

struct _GXColor {};

struct dPa_levelEcallBack {};

struct dPa_control_c {
    struct level_c {
        /* 8004B918 */ void getEmitter(u32);
    };

    /* 8004CA90 */ void set(u8, u16, cXyz const*, dKy_tevstr_c const*, csXyz const*, cXyz const*,
                            u8, dPa_levelEcallBack*, s8, _GXColor const*, _GXColor const*,
                            cXyz const*, f32);
};

struct dVibration_c {
    /* 8006FA24 */ void StartShock(int, int, cXyz);
};

struct dBgS {};

struct dBgS_Acch {
    /* 80075F94 */ ~dBgS_Acch();
    /* 800760A0 */ dBgS_Acch();
    /* 80076248 */ void Set(cXyz*, cXyz*, fopAc_ac_c*, int, dBgS_AcchCir*, cXyz*, csXyz*, csXyz*);
    /* 80076AAC */ void CrrPos(dBgS&);
};

struct dBgS_GndChk {
    /* 8007757C */ dBgS_GndChk();
    /* 800775F0 */ ~dBgS_GndChk();
};

struct dBgS_LinChk {
    /* 80077C68 */ dBgS_LinChk();
    /* 80077CDC */ ~dBgS_LinChk();
};

struct dBgS_PolyPassChk {
    /* 80078E68 */ void SetObj();
};

struct dCcD_Stts {
    /* 80083860 */ void Init(int, int, fopAc_ac_c*);
};

struct dCcD_GObjInf {
    /* 80083A28 */ dCcD_GObjInf();
    /* 800840E4 */ ~dCcD_GObjInf();
};

struct dCcD_SrcCyl {};

struct dCcD_Cyl {
    /* 800848B4 */ void Set(dCcD_SrcCyl const&);
};

struct daNpcF_MatAnm_c {
    /* 80150738 */ void initialize();
};

struct dCamera_c {
    /* 801614AC */ void Start();
    /* 801614D0 */ void Stop();
    /* 8016300C */ void SetTrimSize(s32);
    /* 80163D50 */ void ModeFix(s32);
    /* 80180AE0 */ void Set(cXyz, cXyz, f32, s16);
    /* 80180C18 */ void Reset(cXyz, cXyz);
    /* 80181E64 */ void Eye();
    /* 80181E98 */ void Center();
};

struct dMeter2Info_c {
    /* 8021C970 */ void setMeterString(s32);
    /* 8021CC00 */ void resetMeterString();
};

struct dMsgFlow_c {
    /* 80249F00 */ dMsgFlow_c();
    /* 80249F48 */ ~dMsgFlow_c();
    /* 8024A528 */ void getEventId(int*);
};

struct cCcD_Obj {};

struct cCcS {
    /* 80264BA8 */ void Set(cCcD_Obj*);
};

struct cBgS_GndChk {
    /* 80267C1C */ cBgS_GndChk();
    /* 80267C94 */ ~cBgS_GndChk();
};

struct cBgS_PolyInfo {
    /* 802680B0 */ ~cBgS_PolyInfo();
};

struct cM3dGCir {
    /* 8026EF18 */ ~cM3dGCir();
};

struct JGeometry {
    template <typename A1>
    struct TVec3 {};
    /* TVec3<f32> */
    struct TVec3__template0 {};
};

struct JAISoundID {};

struct Z2SeMgr {
    /* 802AB984 */ void seStart(JAISoundID, Vec const*, u32, s8, f32, f32, f32, f32, u8);
};

struct Z2SeqMgr {
    /* 802AF49C */ void subBgmStart(u32);
    /* 802AF884 */ void subBgmStop();
    /* 802B1DF4 */ void changeSubBgmStatus(s32);
};

struct J3DMaterialAnm {
    /* 8032C320 */ void initialize();
};

struct daNpc_grA_c {
    /* 809BF7A4 */ void setTagJump();
    /* 809BF99C */ void setHomeJump();
    /* 809C1160 */ void getMode1();
};

//
// Forward References:
//

static void s_sub1(void*, void*);           // 2
static void s_sub2(void*, void*);           // 2
static void daNpcWrestler_Create(void*);    // 2
static void daNpcWrestler_Delete(void*);    // 2
static void daNpcWrestler_Execute(void*);   // 2
static void daNpcWrestler_Draw(void*);      // 2
static bool daNpcWrestler_IsDelete(void*);  // 2

extern "C" void __ct__15daNpcWrestler_cFv();                                  // 1
extern "C" void __dt__8cM3dGCylFv();                                          // 1
extern "C" void __dt__8cM3dGAabFv();                                          // 1
extern "C" void __dt__15daNpcWrestler_cFv();                                  // 1
extern "C" void Create__15daNpcWrestler_cFv();                                // 1
extern "C" void CreateHeap__15daNpcWrestler_cFv();                            // 1
extern "C" void __dt__15J3DTevKColorAnmFv();                                  // 1
extern "C" void __ct__15J3DTevKColorAnmFv();                                  // 1
extern "C" void __dt__14J3DTevColorAnmFv();                                   // 1
extern "C" void __ct__14J3DTevColorAnmFv();                                   // 1
extern "C" void __dt__11J3DTexNoAnmFv();                                      // 1
extern "C" void __ct__11J3DTexNoAnmFv();                                      // 1
extern "C" void __dt__12J3DTexMtxAnmFv();                                     // 1
extern "C" void __ct__12J3DTexMtxAnmFv();                                     // 1
extern "C" void __dt__14J3DMatColorAnmFv();                                   // 1
extern "C" void __ct__14J3DMatColorAnmFv();                                   // 1
extern "C" void Delete__15daNpcWrestler_cFv();                                // 1
extern "C" void Execute__15daNpcWrestler_cFv();                               // 1
extern "C" void Draw__15daNpcWrestler_cFv();                                  // 1
extern "C" void ctrlJoint__15daNpcWrestler_cFP8J3DJointP8J3DModel();          // 1
extern "C" void createHeapCallBack__15daNpcWrestler_cFP10fopAc_ac_c();        // 1
extern "C" void ctrlJointCallBack__15daNpcWrestler_cFP8J3DJointi();           // 1
extern "C" void checkStartUp__15daNpcWrestler_cFv();                          // 1
extern "C" void setExpressionAnm__15daNpcWrestler_cFib();                     // 1
extern "C" void setExpressionBtp__15daNpcWrestler_cFi();                      // 1
extern "C" void setMotionAnm__15daNpcWrestler_cFif();                         // 1
extern "C" void reset__15daNpcWrestler_cFv();                                 // 1
extern "C" void setAction__15daNpcWrestler_cFM15daNpcWrestler_cFPCvPvPv_b();  // 1
extern "C" static void s_sub1__FPvPv();                                       // 1
extern "C" void checkArenaInfo__15daNpcWrestler_cFv();                        // 1
extern "C" void checkArenaSub__15daNpcWrestler_cFP10fopAc_ac_c();             // 1
extern "C" static void s_sub2__FPvPv();                                       // 1
extern "C" void setOnToArena__15daNpcWrestler_cFf();                          // 1
extern "C" void wait__15daNpcWrestler_cFPv();                                 // 1
extern "C" void setMotion__15daNpcWrestler_cFifi();                           // 1
extern "C" void setExpression__15daNpcWrestler_cFif();                        // 1
extern "C" void talk__15daNpcWrestler_cFPv();                                 // 1
extern "C" void demo__15daNpcWrestler_cFPv();                                 // 1
extern "C" void gotoArena__15daNpcWrestler_cFPv();                            // 1
extern "C" void gotoLiving__15daNpcWrestler_cFPv();                           // 1
extern "C" void sumouReady__15daNpcWrestler_cFPv();                           // 1
extern "C" void sumouWait__15daNpcWrestler_cFPv();                            // 1
extern "C" void checkOutOfArenaP__15daNpcWrestler_cFv();                      // 1
extern "C" void setNextAction__15daNpcWrestler_cFv();                         // 1
extern "C" void sumouPunchHit__15daNpcWrestler_cFPv();                        // 1
extern "C" void sumouPunchChaseHit__15daNpcWrestler_cFPv();                   // 1
extern "C" void sumouPunchMiss__15daNpcWrestler_cFPv();                       // 1
extern "C" void checkOutOfArenaW__15daNpcWrestler_cFv();                      // 1
extern "C" void getJointPos__15daNpcWrestler_cFi();                           // 1
extern "C" void sumouPunchDraw__15daNpcWrestler_cFPv();                       // 1
extern "C" void sumouTackleHit__15daNpcWrestler_cFPv();                       // 1
extern "C" void sumouTackleMiss__15daNpcWrestler_cFPv();                      // 1
extern "C" void sumouTackleDraw__15daNpcWrestler_cFPv();                      // 1
extern "C" void sumouSideStep__15daNpcWrestler_cFPv();                        // 1
extern "C" void sumouLostBalance__15daNpcWrestler_cFPv();                     // 1
extern "C" void sumouPunchShock__15daNpcWrestler_cFPv();                      // 1
extern "C" void sumouPunchChaseShock__15daNpcWrestler_cFPv();                 // 1
extern "C" void sumouPunchStagger__15daNpcWrestler_cFPv();                    // 1
extern "C" void sumouTackleShock__15daNpcWrestler_cFPv();                     // 1
extern "C" void sumouTackleStagger__15daNpcWrestler_cFPv();                   // 1
extern "C" void sumouTackleStaggerRelease__15daNpcWrestler_cFPv();            // 1
extern "C" void sumouTacklePush__15daNpcWrestler_cFPv();                      // 1
extern "C" void sumouTackleRelease__15daNpcWrestler_cFPv();                   // 1
extern "C" void demoSumouReady__15daNpcWrestler_cFPv();                       // 1
extern "C" void demoSumouWin__15daNpcWrestler_cFPv();                         // 1
extern "C" void demoSumouLose__15daNpcWrestler_cFPv();                        // 1
extern "C" void demoSumouWin2__15daNpcWrestler_cFPv();                        // 1
extern "C" void demoSumouLose2__15daNpcWrestler_cFPv();                       // 1
extern "C" void demoSumouUnilateralWin__15daNpcWrestler_cFPv();               // 1
extern "C" void demoTalkAfterLose__15daNpcWrestler_cFPv();                    // 1
extern "C" void EvCut_grDSEntry__15daNpcWrestler_cFi();                       // 1
extern "C" void EvCut_grDSEntry2__15daNpcWrestler_cFi();                      // 1
extern "C" void EvCut_grDSEntry3_4__15daNpcWrestler_cFi();                    // 1
extern "C" void EvCut_grDSEntry5__15daNpcWrestler_cFi();                      // 1
extern "C" void EvCut_grDSLose__15daNpcWrestler_cFi();                        // 1
extern "C" static void daNpcWrestler_Create__FPv();                           // 1
extern "C" static void daNpcWrestler_Delete__FPv();                           // 1
extern "C" static void daNpcWrestler_Execute__FPv();                          // 1
extern "C" static void daNpcWrestler_Draw__FPv();                             // 1
extern "C" static bool daNpcWrestler_IsDelete__FPv();                         // 1
extern "C" void calc__11J3DTexNoAnmCFPUs();                                   // 1
extern "C" void setParam__15daNpcWrestler_cFv();                              // 1
extern "C" void main__15daNpcWrestler_cFv();                                  // 1
extern "C" void setWrestlerVoice__15daNpcWrestler_cFv();                      // 1
extern "C" void playMotion__15daNpcWrestler_cFv();                            // 1
extern "C" void ctrlBtk__15daNpcWrestler_cFv();                               // 1
extern "C" void setAttnPos__15daNpcWrestler_cFv();                            // 1
extern "C" void lookat__15daNpcWrestler_cFv();                                // 1
extern "C" bool drawDbgInfo__15daNpcWrestler_cFv();                           // 1
extern "C" void drawOtherMdls__15daNpcWrestler_cFv();                         // 1
extern "C" void func_80B40D28();                                              // 1
extern "C" void __sinit_d_a_npc_wrestler_cpp();                               // 1
extern "C" void __dt__18daNpcF_ActorMngr_cFv();                               // 1
extern "C" void __ct__18daNpcF_ActorMngr_cFv();                               // 1
extern "C" void __dt__15daNpcF_Lookat_cFv();                                  // 1
extern "C" void __dt__5csXyzFv();                                             // 1
extern "C" void __ct__5csXyzFv();                                             // 1
extern "C" void __dt__4cXyzFv();                                              // 1
extern "C" void __ct__4cXyzFv();                                              // 1
extern "C" void __dt__8daNpcF_cFv();                                          // 1
extern "C" void __ct__8daNpcF_cFv();                                          // 1
extern "C" void __dt__12dBgS_AcchCirFv();                                     // 1
extern "C" void __dt__10dCcD_GSttsFv();                                       // 1
extern "C" void __dt__12dBgS_ObjAcchFv();                                     // 1
extern "C" void __dt__12J3DFrameCtrlFv();                                     // 1
extern "C" void setCollisions__8daNpcF_cFv();                                 // 1
extern "C" void __dt__10cCcD_GSttsFv();                                       // 1
extern "C" void getArenaPos__12daTagArena_cFv();                              // 1
extern "C" void getRightFootPos__9daPy_py_cCFv();                             // 1
extern "C" void getLeftFootPos__9daPy_py_cCFv();                              // 1
extern "C" void adjustShapeAngle__15daNpcWrestler_cFv();                      // 1
extern "C" void __dt__21daNpcWrestler_Param_cFv();                            // 1
extern "C" static void func_80B416B8();                                       // 1
extern "C" static void func_80B416C0();                                       // 1
extern "C" extern u32 const lit_4358;
extern "C" extern u32 const lit_4359;
extern "C" extern u32 const lit_4360;
extern "C" extern u32 const lit_4361;
extern "C" extern u32 const lit_4362;
extern "C" extern u32 const lit_4363;
extern "C" extern u32 const lit_4364;
extern "C" extern u32 const lit_4365;
extern "C" extern u32 const lit_4800;
extern "C" extern u32 const lit_4801;
extern "C" extern u32 const lit_4802;
extern "C" extern u32 const lit_4803;
extern "C" extern u8 const lit_4805[12];
extern "C" extern u8 const lit_4806[4];
extern "C" extern u8 const lit_4807[12];
extern "C" extern u8 const lit_4808[4];
extern "C" extern u8 const lit_4809[12];
extern "C" extern u8 const lit_4810[12];
extern "C" extern u8 const lit_4811[8];
extern "C" extern u8 const lit_4812[12];
extern "C" extern u8 const lit_4813[4];
extern "C" extern u8 const lit_4814[12];
extern "C" extern u8 const lit_4815[4];
extern "C" extern u8 const lit_4816[12];
extern "C" extern u8 const lit_4817[4];
extern "C" extern u8 const lit_4818[24];
extern "C" extern u8 const lit_4890[120];
extern "C" extern u32 const lit_5608;
extern "C" extern u32 const lit_5609;
extern "C" extern u32 const lit_5610;
extern "C" extern u32 const lit_5611[1 + 1 /* padding */];
extern "C" extern u8 const lit_5613[8];
extern "C" extern u32 const lit_5908;
extern "C" extern u32 const lit_6085;
extern "C" extern u32 const lit_6086;
extern "C" extern u32 const lit_6087;
extern "C" extern u32 const lit_6088;
extern "C" extern u32 const lit_6245[1 + 1 /* padding */];
extern "C" extern u32 const lit_6610;
extern "C" extern u32 const lit_6611;
extern "C" extern u32 const lit_6942;
extern "C" extern u32 const lit_6943;
extern "C" extern u32 const lit_7233;
extern "C" extern u32 const lit_7535;
extern "C" extern u32 const lit_7536;
extern "C" extern u32 const lit_7761;
extern "C" extern u32 const lit_7762;
extern "C" extern u32 const lit_7963;
extern "C" extern u32 const lit_7964;
extern "C" extern u32 const lit_8383;
extern "C" extern u32 const lit_8575[1 + 1 /* padding */];
extern "C" extern u8 const lit_8576[8];
extern "C" extern u8 const lit_8577[8];
extern "C" extern u8 const lit_8578[8];
extern "C" extern u32 const lit_8935;
extern "C" extern u32 const lit_9266;
extern "C" extern u32 const lit_9267;
extern "C" extern u32 const lit_9268;
extern "C" extern u32 const lit_9269;
extern "C" extern u32 const lit_9270;
extern "C" extern u32 const lit_9271;
extern "C" extern u32 const lit_9272;
extern "C" extern u32 const lit_9387;
extern "C" extern u32 const lit_9388;
extern "C" extern u32 const lit_9390;
extern "C" extern u32 const lit_9571;
extern "C" extern u32 const lit_9572;
extern "C" extern u32 const lit_9573;
extern "C" extern u32 const lit_9574;
extern "C" extern u32 const lit_9575;
extern "C" extern u32 const lit_9576;
extern "C" extern u32 const lit_9577;
extern "C" extern u32 const lit_9578;
extern "C" extern u32 const lit_9579;
extern "C" extern u32 const lit_9580;
extern "C" extern u32 const lit_9581;
extern "C" extern u32 const lit_10142;
extern "C" extern u32 const lit_10653;
extern "C" extern u32 const lit_10654;
extern "C" extern u32 const lit_10655;
extern "C" extern u32 const lit_10656;
extern "C" extern u32 const lit_10657;
extern "C" extern u32 const lit_10805;
extern "C" extern u32 const lit_10841;
extern "C" extern char const* const stringBase0;
extern "C" extern u32 lit_1787[1 + 4 /* padding */];
extern "C" extern void* l_anmList[2];
extern "C" extern void* l_myName;
extern "C" extern void* lit_4645[3];
extern "C" extern void* lit_4647[3];
extern "C" extern void* lit_4653[3];
extern "C" extern void* lit_4655[3];
extern "C" extern void* lit_5293[3];
extern "C" extern void* lit_5296[3];
extern "C" extern void* lit_5299[3];
extern "C" extern void* lit_5303[3];
extern "C" extern void* lit_5338[3];
extern "C" extern void* lit_5343[3];
extern "C" extern void* lit_5348[3];
extern "C" extern void* lit_5354[3];
extern "C" extern void* lit_5361[3];
extern "C" extern void* lit_5366[3];
extern "C" extern void* lit_5374[3];
extern "C" extern void* lit_5382[3];
extern "C" extern void* lit_5387[3];
extern "C" extern void* lit_5393[3];
extern "C" extern void* lit_5399[3];
extern "C" extern void* lit_5404[3];
extern "C" extern void* lit_5409[3];
extern "C" extern void* lit_5414[3];
extern "C" extern void* lit_5419[3];
extern "C" extern void* lit_5424[3];
extern "C" extern void* lit_5429[3];
extern "C" extern void* lit_5472[3];
extern "C" extern void* lit_5475[3];
extern "C" extern void* lit_5480[3];
extern "C" extern void* lit_5632[3];
extern "C" extern void* lit_5637[3];
extern "C" extern void* lit_5644[3];
extern "C" extern void* lit_5647[3];
extern "C" extern void* lit_5650[3];
extern "C" extern void* lit_5745[3];
extern "C" extern void* lit_6107[3];
extern "C" extern void* lit_6112[3];
extern "C" extern void* lit_6115[3];
extern "C" extern void* lit_6120[3];
extern "C" extern void* lit_6126[3];
extern "C" extern void* lit_6129[3];
extern "C" extern void* lit_6132[3];
extern "C" extern void* lit_6137[3];
extern "C" extern void* lit_6400[3];
extern "C" extern void* lit_6415[3];
extern "C" extern void* lit_6421[3];
extern "C" extern void* lit_6623[3];
extern "C" extern void* lit_6638[3];
extern "C" extern void* lit_6643[3];
extern "C" extern void* lit_7029[3];
extern "C" extern void* lit_7044[3];
extern "C" extern void* lit_7049[3];
extern "C" extern void* lit_7054[3];
extern "C" extern void* lit_7542[3];
extern "C" extern void* lit_7547[3];
extern "C" extern void* lit_7552[3];
extern "C" extern void* lit_7557[3];
extern "C" extern void* lit_7604[3];
extern "C" extern void* lit_7623[3];
extern "C" extern void* lit_7628[3];
extern "C" extern void* lit_7633[3];
extern "C" extern void* lit_7775[3];
extern "C" extern void* lit_7780[3];
extern "C" extern void* lit_7787[3];
extern "C" extern void* lit_7790[3];
extern "C" extern void* lit_7970[3];
extern "C" extern void* lit_7975[3];
extern "C" extern void* lit_7980[3];
extern "C" extern void* lit_7985[3];
extern "C" extern void* lit_8022[3];
extern "C" extern void* lit_8027[3];
extern "C" extern void* lit_8034[3];
extern "C" extern void* lit_8037[3];
extern "C" extern void* lit_8088[3];
extern "C" extern void* lit_8093[3];
extern "C" extern void* lit_8098[3];
extern "C" extern void* lit_8219[3];
extern "C" extern void* lit_8224[3];
extern "C" extern void* lit_8229[3];
extern "C" extern void* lit_8234[3];
extern "C" extern void* lit_8239[3];
extern "C" extern void* lit_9999[3];
extern "C" extern void* g_profile_NPC_WRESTLER[12];

//
// External References:
//

void mDoMtx_ZXYrotM(f32 (*)[4], s16, s16, s16);                         // 2
void mDoMtx_XrotM(f32 (*)[4], s16);                                     // 2
void mDoMtx_YrotS(f32 (*)[4], s16);                                     // 2
void mDoMtx_YrotM(f32 (*)[4], s16);                                     // 2
void mDoMtx_ZrotM(f32 (*)[4], s16);                                     // 2
void fopAc_IsActor(void*);                                              // 2
void fopAcM_delete(fopAc_ac_c*);                                        // 2
void fopAcM_entrySolidHeap(fopAc_ac_c*, int (*)(fopAc_ac_c*), u32);     // 2
void fopAcM_setCullSizeBox(fopAc_ac_c*, f32, f32, f32, f32, f32, f32);  // 2
void fopAcM_searchActorAngleY(fopAc_ac_c const*, fopAc_ac_c const*);    // 2
void fopAcM_searchActorDistance(fopAc_ac_c const*, fopAc_ac_c const*);  // 2
void fopAcM_orderSpeakEvent(fopAc_ac_c*, u16, u16);                     // 2
void fopAcM_orderChangeEventId(fopAc_ac_c*, s16, u16, u16);             // 2
void fopAcM_orderPotentialEvent(fopAc_ac_c*, u16, u16, u16);            // 2
void fopAcM_createItemForPresentDemo(cXyz const*, int, u8, int, int, csXyz const*,
                                     cXyz const*);  // 2
void fopAcM_effSmokeSet1(u32*, u32*, cXyz const*, csXyz const*, f32, dKy_tevstr_c const*,
                         int);                                                           // 2
void fpcEx_Search(void* (*)(void*, void*), void*);                                       // 2
void fpcEx_SearchByID(unsigned int);                                                     // 2
void dComIfG_resLoad(request_of_phase_process_class*, char const*);                      // 2
void dComIfG_resDelete(request_of_phase_process_class*, char const*);                    // 2
void dComIfG_TimerDeleteRequest(int);                                                    // 2
void dEv_noFinishSkipProc(void*, int);                                                   // 2
void daNpcF_chkEvtBit(u32);                                                              // 2
void daNpcF_onEvtBit(u32);                                                               // 2
void daNpcF_chkTmpBit(u32);                                                              // 2
void daNpcF_onTmpBit(u32);                                                               // 2
void dCam_getBody();                                                                     // 2
void dTimer_createTimer(s32, u32, u8, u8, f32, f32, f32, f32);                           // 2
void cM_atan2s(f32, f32);                                                                // 2
void cM_rnd();                                                                           // 2
void cLib_addCalc(f32*, f32, f32, f32, f32);                                             // 2
void cLib_addCalc2(f32*, f32, f32, f32);                                                 // 2
void cLib_addCalcPos(cXyz*, cXyz const&, f32, f32, f32);                                 // 2
void cLib_addCalcAngleS(s16*, s16, s16, s16, s16);                                       // 2
void cLib_chaseS(s16*, s16, s16);                                                        // 2
void cLib_chaseF(f32*, f32, f32);                                                        // 2
void cLib_chasePosXZ(cXyz*, cXyz const&, f32);                                           // 2
void cLib_chaseAngleS(s16*, s16, s16);                                                   // 2
void cLib_targetAngleY(Vec const*, Vec const*);                                          // 2
void cLib_targetAngleY(Vec const&, Vec const&);                                          // 2
void cLib_targetAngleX(cXyz const*, cXyz const*);                                        // 2
void cLib_distanceAngleS(s16, s16);                                                      // 2
void JPAGetXYZRotateMtx(s16, s16, s16, f32 (*)[4]);                                      // 2
void JPASetRMtxTVecfromMtx(f32 const (*)[4], f32 (*)[4], JGeometry::TVec3__template0*);  // 2
void* operator new(u32);                                                                 // 2
void operator delete(void*);                                                             // 2

extern "C" void fadeOut__13mDoGph_gInf_cFf();                         // 1
extern "C" void mDoMtx_ZXYrotM__FPA4_fsss();                          // 1
extern "C" void mDoMtx_XrotM__FPA4_fs();                              // 1
extern "C" void mDoMtx_YrotS__FPA4_fs();                              // 1
extern "C" void mDoMtx_YrotM__FPA4_fs();                              // 1
extern "C" void mDoMtx_ZrotM__FPA4_fs();                              // 1
extern "C" void push__14mDoMtx_stack_cFv();                           // 1
extern "C" void pop__14mDoMtx_stack_cFv();                            // 1
extern "C" void transS__14mDoMtx_stack_cFRC4cXyz();                   // 1
extern "C" void transM__14mDoMtx_stack_cFfff();                       // 1
extern "C" void transM__14mDoMtx_stack_cFRC4cXyz();                   // 1
extern "C" void changeBckOnly__13mDoExt_bckAnmFP15J3DAnmTransform();  // 1
extern "C" void
__ct__16mDoExt_McaMorfSOFP12J3DModelDataP25mDoExt_McaMorfCallBack1_cP25mDoExt_McaMorfCallBack2_cP15J3DAnmTransformifiiP10Z2CreatureUlUl();  // 1
extern "C" void modelCalc__16mDoExt_McaMorfSOFv();                                // 1
extern "C" void stopZelAnime__16mDoExt_McaMorfSOFv();                             // 1
extern "C" void __ct__10fopAc_ac_cFv();                                           // 1
extern "C" void __dt__10fopAc_ac_cFv();                                           // 1
extern "C" void fopAc_IsActor__FPv();                                             // 1
extern "C" void fopAcM_delete__FP10fopAc_ac_c();                                  // 1
extern "C" void fopAcM_entrySolidHeap__FP10fopAc_ac_cPFP10fopAc_ac_c_iUl();       // 1
extern "C" void fopAcM_setCullSizeBox__FP10fopAc_ac_cffffff();                    // 1
extern "C" void fopAcM_searchActorAngleY__FPC10fopAc_ac_cPC10fopAc_ac_c();        // 1
extern "C" void fopAcM_searchActorDistance__FPC10fopAc_ac_cPC10fopAc_ac_c();      // 1
extern "C" void fopAcM_orderSpeakEvent__FP10fopAc_ac_cUsUs();                     // 1
extern "C" void fopAcM_orderChangeEventId__FP10fopAc_ac_csUsUs();                 // 1
extern "C" void fopAcM_orderPotentialEvent__FP10fopAc_ac_cUsUsUs();               // 1
extern "C" void fopAcM_createItemForPresentDemo__FPC4cXyziUciiPC5csXyzPC4cXyz();  // 1
extern "C" void fopAcM_effSmokeSet1__FPUlPUlPC4cXyzPC5csXyzfPC12dKy_tevstr_ci();  // 1
extern "C" void fpcEx_Search__FPFPvPv_PvPv();                                     // 1
extern "C" void fpcEx_SearchByID__FUi();                                          // 1
extern "C" void dComIfG_resLoad__FP30request_of_phase_process_classPCc();         // 1
extern "C" void dComIfG_resDelete__FP30request_of_phase_process_classPCc();       // 1
extern "C" void dComIfG_TimerDeleteRequest__Fi();                                 // 1
extern "C" void onSwitch__10dSv_info_cFii();                                      // 1
extern "C" void getRes__14dRes_control_cFPCclP11dRes_info_ci();                   // 1
extern "C" void reset__14dEvt_control_cFv();                                      // 1
extern "C" void reset__14dEvt_control_cFPv();                                     // 1
extern "C" void dEv_noFinishSkipProc__FPvi();                                     // 1
extern "C" void setSkipProc__14dEvt_control_cFPvPFPvi_ii();                       // 1
extern "C" void setPtI_Id__14dEvt_control_cFUi();                                 // 1
extern "C" void getEventIdx__16dEvent_manager_cFP10fopAc_ac_cPCcUc();             // 1
extern "C" void endCheck__16dEvent_manager_cFs();                                 // 1
extern "C" void getMyStaffId__16dEvent_manager_cFPCcP10fopAc_ac_ci();             // 1
extern "C" void getIsAddvance__16dEvent_manager_cFi();                            // 1
extern "C" void getMyNowCutName__16dEvent_manager_cFi();                          // 1
extern "C" void getMySubstanceP__16dEvent_manager_cFiPCci();                      // 1
extern "C" void cutEnd__16dEvent_manager_cFi();                                   // 1
extern "C" void ChkPresentEnd__16dEvent_manager_cFv();                            // 1
extern "C" void getEmitter__Q213dPa_control_c7level_cFUl();                       // 1
extern "C" void
set__13dPa_control_cFUcUsPC4cXyzPC12dKy_tevstr_cPC5csXyzPC4cXyzUcP18dPa_levelEcallBackScPC8_GXColorPC8_GXColorPC4cXyzf();  // 1
extern "C" void StartShock__12dVibration_cFii4cXyz();  // 1
extern "C" void __ct__12dBgS_AcchCirFv();              // 1
extern "C" void SetWallR__12dBgS_AcchCirFf();          // 1
extern "C" void SetWall__12dBgS_AcchCirFff();          // 1
extern "C" void __dt__9dBgS_AcchFv();                  // 1
extern "C" void __ct__9dBgS_AcchFv();                  // 1
extern "C" void
Set__9dBgS_AcchFP4cXyzP4cXyzP10fopAc_ac_ciP12dBgS_AcchCirP4cXyzP5csXyzP5csXyz();    // 1
extern "C" void CrrPos__9dBgS_AcchFR4dBgS();                                        // 1
extern "C" void __ct__11dBgS_GndChkFv();                                            // 1
extern "C" void __dt__11dBgS_GndChkFv();                                            // 1
extern "C" void __ct__11dBgS_LinChkFv();                                            // 1
extern "C" void __dt__11dBgS_LinChkFv();                                            // 1
extern "C" void SetObj__16dBgS_PolyPassChkFv();                                     // 1
extern "C" void __ct__10dCcD_GSttsFv();                                             // 1
extern "C" void Init__9dCcD_SttsFiiP10fopAc_ac_c();                                 // 1
extern "C" void __ct__12dCcD_GObjInfFv();                                           // 1
extern "C" void __dt__12dCcD_GObjInfFv();                                           // 1
extern "C" void Set__8dCcD_CylFRC11dCcD_SrcCyl();                                   // 1
extern "C" void initialize__18daNpcF_ActorMngr_cFv();                               // 1
extern "C" void entry__18daNpcF_ActorMngr_cFP10fopAc_ac_c();                        // 1
extern "C" void remove__18daNpcF_ActorMngr_cFv();                                   // 1
extern "C" void getActorP__18daNpcF_ActorMngr_cFv();                                // 1
extern "C" void initialize__15daNpcF_MatAnm_cFv();                                  // 1
extern "C" void initialize__15daNpcF_Lookat_cFv();                                  // 1
extern "C" void setParam__15daNpcF_Lookat_cFffffffffffffsP4cXyz();                  // 1
extern "C" void calc__15daNpcF_Lookat_cFP10fopAc_ac_cPA4_fPP5csXyziii();            // 1
extern "C" void execute__8daNpcF_cFv();                                             // 1
extern "C" void draw__8daNpcF_cFiifP11_GXColorS10i();                               // 1
extern "C" void setMtx__8daNpcF_cFv();                                              // 1
extern "C" void setMtx2__8daNpcF_cFv();                                             // 1
extern "C" void initialize__8daNpcF_cFv();                                          // 1
extern "C" void getTrnsfrmKeyAnmP__8daNpcF_cFPci();                                 // 1
extern "C" void getTexPtrnAnmP__8daNpcF_cFPci();                                    // 1
extern "C" void getTexSRTKeyAnmP__8daNpcF_cFPci();                                  // 1
extern "C" void setMcaMorfAnm__8daNpcF_cFP18J3DAnmTransformKeyffiii();              // 1
extern "C" void setBckAnm__8daNpcF_cFP15J3DAnmTransformfiiib();                     // 1
extern "C" void setBtpAnm__8daNpcF_cFP16J3DAnmTexPatternP12J3DModelDatafi();        // 1
extern "C" void setBtkAnm__8daNpcF_cFP19J3DAnmTextureSRTKeyP12J3DModelDatafi();     // 1
extern "C" void setEnvTevColor__8daNpcF_cFv();                                      // 1
extern "C" void setRoomNo__8daNpcF_cFv();                                           // 1
extern "C" void playExpressionAnm__8daNpcF_cFPPPQ28daNpcF_c18daNpcF_anmPlayData();  // 1
extern "C" void playMotionAnm__8daNpcF_cFPPPQ28daNpcF_c18daNpcF_anmPlayData();      // 1
extern "C" void setLookatMtx__8daNpcF_cFiPif();                                     // 1
extern "C" void ctrlMsgAnm__8daNpcF_cFRiRiP10fopAc_ac_ci();                         // 1
extern "C" void orderEvent__8daNpcF_cFiPcUsUsUcUs();                                // 1
extern "C" void changeEvent__8daNpcF_cFPcPcUsUs();                                  // 1
extern "C" void chkActorInAttnArea__8daNpcF_cFP10fopAc_ac_cP10fopAc_ac_ci();        // 1
extern "C" void initTalk__8daNpcF_cFiPP10fopAc_ac_c();                              // 1
extern "C" void talkProc__8daNpcF_cFPiiPP10fopAc_ac_c();                            // 1
extern "C" void turn__8daNpcF_cFsfi();                                              // 1
extern "C" void setAngle__8daNpcF_cFs();                                            // 1
extern "C" void getDistTableIdx__8daNpcF_cFii();                                    // 1
extern "C" void getEvtAreaTagP__8daNpcF_cFii();                                     // 1
extern "C" void daNpcF_chkEvtBit__FUl();                                            // 1
extern "C" void daNpcF_onEvtBit__FUl();                                             // 1
extern "C" void daNpcF_chkTmpBit__FUl();                                            // 1
extern "C" void daNpcF_onTmpBit__FUl();                                             // 1
extern "C" void Start__9dCamera_cFv();                                              // 1
extern "C" void Stop__9dCamera_cFv();                                               // 1
extern "C" void SetTrimSize__9dCamera_cFl();                                        // 1
extern "C" void ModeFix__9dCamera_cFl();                                            // 1
extern "C" void Set__9dCamera_cF4cXyz4cXyzfs();                                     // 1
extern "C" void Reset__9dCamera_cF4cXyz4cXyz();                                     // 1
extern "C" void dCam_getBody__Fv();                                                 // 1
extern "C" void Eye__9dCamera_cFv();                                                // 1
extern "C" void Center__9dCamera_cFv();                                             // 1
extern "C" void setMeterString__13dMeter2Info_cFl();                                // 1
extern "C" void resetMeterString__13dMeter2Info_cFv();                              // 1
extern "C" void __ct__10dMsgFlow_cFv();                                             // 1
extern "C" void __dt__10dMsgFlow_cFv();                                             // 1
extern "C" void getEventId__10dMsgFlow_cFPi();                                      // 1
extern "C" void dTimer_createTimer__FlUlUcUcffff();                                 // 1
extern "C" void Set__4cCcSFP8cCcD_Obj();                                            // 1
extern "C" void __mi__4cXyzCFRC3Vec();                                              // 1
extern "C" void cM_atan2s__Fff();                                                   // 1
extern "C" void cM_rnd__Fv();                                                       // 1
extern "C" void __ct__11cBgS_GndChkFv();                                            // 1
extern "C" void __dt__11cBgS_GndChkFv();                                            // 1
extern "C" void __dt__13cBgS_PolyInfoFv();                                          // 1
extern "C" void __dt__8cM3dGCirFv();                                                // 1
extern "C" void SetC__8cM3dGCylFRC4cXyz();                                          // 1
extern "C" void SetH__8cM3dGCylFf();                                                // 1
extern "C" void SetR__8cM3dGCylFf();                                                // 1
extern "C" void cLib_addCalc__FPfffff();                                            // 1
extern "C" void cLib_addCalc2__FPffff();                                            // 1
extern "C" void cLib_addCalcPos__FP4cXyzRC4cXyzfff();                               // 1
extern "C" void cLib_addCalcAngleS__FPsssss();                                      // 1
extern "C" void cLib_chaseS__FPsss();                                               // 1
extern "C" void cLib_chaseF__FPfff();                                               // 1
extern "C" void cLib_chasePosXZ__FP4cXyzRC4cXyzf();                                 // 1
extern "C" void cLib_chaseAngleS__FPsss();                                          // 1
extern "C" void cLib_targetAngleY__FPC3VecPC3Vec();                                 // 1
extern "C" void cLib_targetAngleY__FRC3VecRC3Vec();                                 // 1
extern "C" void cLib_targetAngleX__FPC4cXyzPC4cXyz();                               // 1
extern "C" void cLib_distanceAngleS__Fss();                                         // 1
extern "C" void JPAGetXYZRotateMtx__FsssPA4_f();                                    // 1
extern "C" void func_802807E0();                                                    // 1
extern "C" void seStart__7Z2SeMgrF10JAISoundIDPC3VecUlScffffUc();                   // 1
extern "C" void subBgmStart__8Z2SeqMgrFUl();                                        // 1
extern "C" void subBgmStop__8Z2SeqMgrFv();                                          // 1
extern "C" void changeSubBgmStatus__8Z2SeqMgrFl();                                  // 1
extern "C" void __ct__10Z2CreatureFv();                                             // 1
extern "C" void __dt__10Z2CreatureFv();                                             // 1
extern "C" void init__10Z2CreatureFP3VecP3VecUcUc();                                // 1
extern "C" void* __nw__FUl();                                                       // 1
extern "C" void __dl__FPv();                                                        // 1
extern "C" void init__12J3DFrameCtrlFs();                                           // 1
extern "C" void checkPass__12J3DFrameCtrlFf();                                      // 1
extern "C" void getTexNo__16J3DAnmTexPatternCFUsPUs();                              // 1
extern "C" void initialize__14J3DMaterialAnmFv();                                   // 1
extern "C" void PSMTXCopy();                                                        // 1
extern "C" void PSMTXMultVec();                                                     // 1
extern "C" void PSVECAdd();                                                         // 1
extern "C" void PSVECSquareMag();                                                   // 1
extern "C" void PSVECSquareDistance();                                              // 1
extern "C" void __destroy_arr();                                                    // 1
extern "C" void __construct_array();                                                // 1
extern "C" void __ptmf_test();                                                      // 1
extern "C" void __ptmf_cmpr();                                                      // 1
extern "C" void __ptmf_scall();                                                     // 1
extern "C" void _savegpr_24();                                                      // 1
extern "C" void _savegpr_25();                                                      // 1
extern "C" void _savegpr_26();                                                      // 1
extern "C" void _savegpr_27();                                                      // 1
extern "C" void _savegpr_28();                                                      // 1
extern "C" void _savegpr_29();                                                      // 1
extern "C" void _restgpr_24();                                                      // 1
extern "C" void _restgpr_25();                                                      // 1
extern "C" void _restgpr_26();                                                      // 1
extern "C" void _restgpr_27();                                                      // 1
extern "C" void _restgpr_28();                                                      // 1
extern "C" void _restgpr_29();                                                      // 1
extern "C" void abs();                                                              // 1
extern "C" void pow();                                                              // 1
extern "C" extern u8 const __ptmf_null[12 + 4 /* padding */];
extern "C" extern void* g_fopAc_Method[8];
extern "C" extern void* g_fpcLf_Method[5 + 1 /* padding */];
extern "C" extern void* __vt__8dCcD_Cyl[36];
extern "C" extern void* __vt__9dCcD_Stts[11];
extern "C" extern u8 mCcDCyl__8daNpcF_c[68];
extern "C" extern void* __vt__8daNpcF_c[18];
extern "C" extern void* __vt__15daNpcF_MatAnm_c[4 + 6 /* padding */];
extern "C" extern void* __vt__12cCcD_CylAttr[25];
extern "C" extern void* __vt__14cCcD_ShapeAttr[22];
extern "C" extern void* __vt__9cCcD_Stts[8];
extern "C" extern void* __vt__14J3DMaterialAnm[4];
extern "C" extern u8 now__14mDoMtx_stack_c[48];
extern "C" extern u8 g_dComIfG_gameInfo[122384];
extern "C" extern u8 g_meter2_info[248];
extern "C" extern u8 j3dSys[284];
extern "C" extern u8 mCurrentMtx__6J3DSys[48];
extern "C" extern u8 sincosTable___5JMath[65536];
extern "C" extern u32 __float_nan;
extern "C" extern u8 mAudioMgrPtr__10Z2AudioMgr[4 + 4 /* padding */];
extern "C" void setTagJump__11daNpc_grA_cFv();   // 1
extern "C" void setHomeJump__11daNpc_grA_cFv();  // 1
extern "C" void getMode1__11daNpc_grA_cFv();     // 1
extern "C" void __register_global_object();      // 1

//
// Declarations:
//

/* ############################################################################################## */
/* 80B416DC-80B41870 0194+00 s=35 e=0 z=0  None .rodata    m__21daNpcWrestler_Param_c */
SECTION_RODATA static u8 const m__21daNpcWrestler_Param_c[404] = {
    0x43, 0x5C, 0x00, 0x00, 0xC0, 0x40, 0x00, 0x00, 0x3F, 0x80, 0x00, 0x00, 0x43, 0xC8, 0x00, 0x00,
    0x43, 0x7F, 0x00, 0x00, 0x43, 0x48, 0x00, 0x00, 0x42, 0x0C, 0x00, 0x00, 0x42, 0x20, 0x00, 0x00,
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x41, 0xF0, 0x00, 0x00, 0xC1, 0xF0, 0x00, 0x00,
    0x41, 0xF0, 0x00, 0x00, 0xC1, 0x20, 0x00, 0x00, 0x41, 0xF0, 0x00, 0x00, 0xC1, 0xF0, 0x00, 0x00,
    0x3F, 0x19, 0x99, 0x9A, 0x40, 0xC0, 0x00, 0x00, 0x00, 0x03, 0x00, 0x06, 0x00, 0x13, 0x00, 0x06,
    0x42, 0xA0, 0x00, 0x00, 0x43, 0xFA, 0x00, 0x00, 0x43, 0x96, 0x00, 0x00, 0xC3, 0x96, 0x00, 0x00,
    0x00, 0x3C, 0x00, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x1E,
    0x00, 0x3C, 0x00, 0x00, 0x00, 0x00, 0x00, 0x03, 0x00, 0x0A, 0x00, 0x00, 0x3F, 0x00, 0x00, 0x00,
    0x43, 0x34, 0x00, 0x00, 0x43, 0xFA, 0x00, 0x00, 0x3D, 0x4C, 0xCC, 0xCD, 0x00, 0x0F, 0x00, 0x00,
    0x00, 0x00, 0x00, 0x00, 0x41, 0xF0, 0x00, 0x00, 0x41, 0xA0, 0x00, 0x00, 0x41, 0x80, 0x00, 0x00,
    0x43, 0x16, 0x00, 0x00, 0x41, 0x20, 0x00, 0x00, 0x01, 0x90, 0x01, 0x90, 0xFF, 0x00, 0x00, 0x00,
    0x43, 0xC8, 0x00, 0x00, 0x00, 0x0E, 0x00, 0x0B, 0x00, 0x00, 0x00, 0x00, 0x40, 0xA0, 0x00, 0x00,
    0x43, 0xB4, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x3F, 0x80, 0x00, 0x00, 0x43, 0x70, 0x00, 0x00,
    0x00, 0x00, 0x00, 0x00, 0x40, 0xA0, 0x00, 0x00, 0x43, 0xAF, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
    0x41, 0x20, 0x00, 0x00, 0x43, 0x70, 0x00, 0x00, 0x0A, 0x8C, 0x10, 0x04, 0x0A, 0x28, 0x11, 0xF8,
    0x42, 0x30, 0x00, 0x00, 0x41, 0xF0, 0x00, 0x00, 0x42, 0x20, 0x00, 0x00, 0x43, 0x16, 0x00, 0x00,
    0x42, 0x0C, 0x00, 0x00, 0x42, 0x5C, 0x00, 0x00, 0x44, 0x48, 0x00, 0x00, 0x41, 0x50, 0x00, 0x00,
    0x43, 0x66, 0x00, 0x00, 0x43, 0x0C, 0x00, 0x00, 0x43, 0x16, 0x00, 0x00, 0x00, 0x14, 0x02, 0x58,
    0x00, 0x28, 0x00, 0x14, 0x00, 0x0C, 0x00, 0x00, 0x41, 0xA0, 0x00, 0x00, 0x41, 0xF0, 0x00, 0x00,
    0x41, 0xA0, 0x00, 0x00, 0x41, 0xF0, 0x00, 0x00, 0x41, 0xC8, 0x00, 0x00, 0x42, 0x48, 0x00, 0x00,
    0x41, 0xC8, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x43, 0x5C, 0x00, 0x00, 0x42, 0x0C, 0x00, 0x00,
    0x42, 0xAA, 0x00, 0x00, 0x44, 0x89, 0x80, 0x00, 0x41, 0x20, 0x00, 0x00, 0x43, 0x80, 0x80, 0x00,
    0x43, 0x34, 0x00, 0x00, 0x43, 0x16, 0x00, 0x00, 0x00, 0x14, 0x02, 0x58, 0x00, 0x1E, 0x00, 0x0F,
    0x00, 0x0C, 0x00, 0x00, 0x41, 0xA0, 0x00, 0x00, 0x41, 0xA0, 0x00, 0x00, 0x42, 0x70, 0x00, 0x00,
    0x00, 0x00, 0x00, 0x00, 0x41, 0xA0, 0x00, 0x00, 0x41, 0xA0, 0x00, 0x00, 0x42, 0x70, 0x00, 0x00,
    0x00, 0x00, 0x00, 0x00,
};

/* 80B41870-80B41874 0004+00 s=0 e=0 z=0  None .rodata    @4358 */
SECTION_RODATA u32 const lit_4358 = 0xC3200000;

/* 80B41874-80B41878 0004+00 s=0 e=0 z=0  None .rodata    @4359 */
SECTION_RODATA u32 const lit_4359 = 0xC2480000;

/* 80B41878-80B4187C 0004+00 s=0 e=0 z=0  None .rodata    @4360 */
SECTION_RODATA u32 const lit_4360 = 0x43200000;

/* 80B4187C-80B41880 0004+00 s=0 e=0 z=0  None .rodata    @4361 */
SECTION_RODATA u32 const lit_4361 = 0x435C0000;

/* 80B41880-80B41884 0004+00 s=0 e=0 z=0  None .rodata    @4362 */
SECTION_RODATA u32 const lit_4362 = 0x43520000;

/* 80B41884-80B41888 0004+00 s=0 e=0 z=0  None .rodata    @4363 */
SECTION_RODATA u32 const lit_4363 = 0x43CD0000;

/* 80B41888-80B4188C 0004+00 s=0 e=0 z=0  None .rodata    @4364 */
SECTION_RODATA u32 const lit_4364 = 0x42000000;

/* 80B4188C-80B41890 0004+00 s=0 e=0 z=0  None .rodata    @4365 */
SECTION_RODATA u32 const lit_4365 = 0x43D18000;

/* 80B41890-80B41894 0004+00 s=5 e=0 z=0  None .rodata    @4417 */
SECTION_RODATA static u32 const lit_4417 = 0x3F800000;

/* 80B41894-80B41898 0004+00 s=9 e=0 z=0  None .rodata    @4418 */
SECTION_RODATA static u8 const lit_4418[4] = {
    0x00,
    0x00,
    0x00,
    0x00,
};

/* 80B41898-80B418A4 000C+00 s=1 e=0 z=0  None .rodata    @4467 */
SECTION_RODATA static u8 const lit_4467[12] = {
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
};

/* 80B418A4-80B418A8 0004+00 s=5 e=0 z=0  None .rodata    @4799 */
SECTION_RODATA static u32 const lit_4799 = 0xBF800000;

/* 80B418A8-80B418AC 0004+00 s=0 e=0 z=0  None .rodata    @4800 */
SECTION_RODATA u32 const lit_4800 = 0xC3583F62;

/* 80B418AC-80B418B0 0004+00 s=0 e=0 z=0  None .rodata    @4801 */
SECTION_RODATA u32 const lit_4801 = 0xC32C199A;

/* 80B418B0-80B418B4 0004+00 s=0 e=0 z=0  None .rodata    @4802 */
SECTION_RODATA u32 const lit_4802 = 0x444980DD;

/* 80B418B4-80B418B8 0004+00 s=0 e=0 z=0  None .rodata    @4803 */
SECTION_RODATA u32 const lit_4803 = 0xC1C451EC;

/* 80B418B8-80B418BC 0004+00 s=1 e=0 z=0  None .rodata    @4804 */
SECTION_RODATA static u32 const lit_4804 = 0x42C80000;

/* 80B418BC-80B418C8 000C+00 s=0 e=0 z=0  None .rodata    @4805 */
SECTION_RODATA u8 const lit_4805[12] = {
    0x00, 0x13, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
};

/* 80B418C8-80B418CC 0004+00 s=0 e=0 z=0  None .rodata    @4806 */
SECTION_RODATA u8 const lit_4806[4] = {
    0x00,
    0x00,
    0x00,
    0x00,
};

/* 80B418CC-80B418D8 000C+00 s=0 e=0 z=0  None .rodata    @4807 */
SECTION_RODATA u8 const lit_4807[12] = {
    0x00, 0x17, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x01,
};

/* 80B418D8-80B418DC 0004+00 s=0 e=0 z=0  None .rodata    @4808 */
SECTION_RODATA u8 const lit_4808[4] = {
    0x00,
    0x00,
    0x00,
    0x00,
};

/* 80B418DC-80B418E8 000C+00 s=0 e=0 z=0  None .rodata    @4809 */
SECTION_RODATA u8 const lit_4809[12] = {
    0x00, 0x19, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x01,
};

/* 80B418E8-80B418F4 000C+00 s=0 e=0 z=0  None .rodata    @4810 */
SECTION_RODATA u8 const lit_4810[12] = {
    0x00, 0x1A, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
};

/* 80B418F4-80B418FC 0008+00 s=0 e=0 z=0  None .rodata    @4811 */
SECTION_RODATA u8 const lit_4811[8] = {
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
};

/* 80B418FC-80B41908 000C+00 s=0 e=0 z=0  None .rodata    @4812 */
SECTION_RODATA u8 const lit_4812[12] = {
    0x00, 0x18, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
};

/* 80B41908-80B4190C 0004+00 s=0 e=0 z=0  None .rodata    @4813 */
SECTION_RODATA u8 const lit_4813[4] = {
    0x00,
    0x00,
    0x00,
    0x00,
};

/* 80B4190C-80B41918 000C+00 s=0 e=0 z=0  None .rodata    @4814 */
SECTION_RODATA u8 const lit_4814[12] = {
    0x00, 0x1A, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
};

/* 80B41918-80B4191C 0004+00 s=0 e=0 z=0  None .rodata    @4815 */
SECTION_RODATA u8 const lit_4815[4] = {
    0x00,
    0x00,
    0x00,
    0x00,
};

/* 80B4191C-80B41928 000C+00 s=0 e=0 z=0  None .rodata    @4816 */
SECTION_RODATA u8 const lit_4816[12] = {
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
};

/* 80B41928-80B4192C 0004+00 s=0 e=0 z=0  None .rodata    @4817 */
SECTION_RODATA u8 const lit_4817[4] = {
    0x00,
    0x00,
    0x00,
    0x00,
};

/* 80B4192C-80B41944 0018+00 s=0 e=0 z=0  None .rodata    @4818 */
SECTION_RODATA u8 const lit_4818[24] = {
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
};

/* 80B41944-80B41950 000C+00 s=1 e=0 z=0  None .rodata    @4822 */
SECTION_RODATA static u8 const lit_4822[12] = {
    0x00, 0x39, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
};

/* 80B41950-80B41954 0004+00 s=1 e=0 z=0  None .rodata    @4823 */
SECTION_RODATA static u8 const lit_4823[4] = {
    0x00,
    0x00,
    0x00,
    0x00,
};

/* 80B41954-80B41960 000C+00 s=1 e=0 z=0  None .rodata    @4824 */
SECTION_RODATA static u8 const lit_4824[12] = {
    0x00, 0x39, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
};

/* 80B41960-80B41964 0004+00 s=1 e=0 z=0  None .rodata    @4825 */
SECTION_RODATA static u8 const lit_4825[4] = {
    0x00,
    0x00,
    0x00,
    0x00,
};

/* 80B41964-80B41970 000C+00 s=1 e=0 z=0  None .rodata    @4826 */
SECTION_RODATA static u8 const lit_4826[12] = {
    0x00, 0x3A, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x01,
};

/* 80B41970-80B4197C 000C+00 s=1 e=0 z=0  None .rodata    @4827 */
SECTION_RODATA static u8 const lit_4827[12] = {
    0x00, 0x3B, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
};

/* 80B4197C-80B41984 0008+00 s=1 e=0 z=0  None .rodata    @4828 */
SECTION_RODATA static u8 const lit_4828[8] = {
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
};

/* 80B41984-80B41990 000C+00 s=1 e=0 z=0  None .rodata    @4829 */
SECTION_RODATA static u8 const lit_4829[12] = {
    0x00, 0x3B, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
};

/* 80B41990-80B41994 0004+00 s=1 e=0 z=0  None .rodata    @4830 */
SECTION_RODATA static u8 const lit_4830[4] = {
    0x00,
    0x00,
    0x00,
    0x00,
};

/* 80B41994-80B419A0 000C+00 s=1 e=0 z=0  None .rodata    @4831 */
SECTION_RODATA static u8 const lit_4831[12] = {
    0x00, 0x3C, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x01,
};

/* 80B419A0-80B419AC 000C+00 s=1 e=0 z=0  None .rodata    @4832 */
SECTION_RODATA static u8 const lit_4832[12] = {
    0x00, 0x3B, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
};

/* 80B419AC-80B419B4 0008+00 s=1 e=0 z=0  None .rodata    @4833 */
SECTION_RODATA static u8 const lit_4833[8] = {
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
};

/* 80B419B4-80B419C0 000C+00 s=1 e=0 z=0  None .rodata    @4834 */
SECTION_RODATA static u8 const lit_4834[12] = {
    0x00, 0x3D, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x01,
};

/* 80B419C0-80B419CC 000C+00 s=1 e=0 z=0  None .rodata    @4835 */
SECTION_RODATA static u8 const lit_4835[12] = {
    0x00, 0x3B, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
};

/* 80B419CC-80B419D4 0008+00 s=1 e=0 z=0  None .rodata    @4836 */
SECTION_RODATA static u8 const lit_4836[8] = {
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
};

/* 80B419D4-80B419E0 000C+00 s=1 e=0 z=0  None .rodata    @4837 */
SECTION_RODATA static u8 const lit_4837[12] = {
    0x00, 0x1D, 0x00, 0x00, 0x40, 0x80, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
};

/* 80B419E0-80B419E4 0004+00 s=1 e=0 z=0  None .rodata    @4838 */
SECTION_RODATA static u8 const lit_4838[4] = {
    0x00,
    0x00,
    0x00,
    0x00,
};

/* 80B419E4-80B419F0 000C+00 s=1 e=0 z=0  None .rodata    @4839 */
SECTION_RODATA static u8 const lit_4839[12] = {
    0x00, 0x20, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x01,
};

/* 80B419F0-80B419FC 000C+00 s=1 e=0 z=0  None .rodata    @4840 */
SECTION_RODATA static u8 const lit_4840[12] = {
    0x00, 0x1E, 0x00, 0x00, 0x41, 0xC0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
};

/* 80B419FC-80B41A08 000C+00 s=1 e=0 z=0  None .rodata    @4841 */
SECTION_RODATA static u8 const lit_4841[12] = {
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
};

/* 80B41A08-80B41A14 000C+00 s=1 e=0 z=0  None .rodata    @4842 */
SECTION_RODATA static u8 const lit_4842[12] = {
    0x00, 0x21, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
};

/* 80B41A14-80B41A18 0004+00 s=1 e=0 z=0  None .rodata    @4843 */
SECTION_RODATA static u8 const lit_4843[4] = {
    0x00,
    0x00,
    0x00,
    0x00,
};

/* 80B41A18-80B41A24 000C+00 s=1 e=0 z=0  None .rodata    @4844 */
SECTION_RODATA static u8 const lit_4844[12] = {
    0x00, 0x22, 0x00, 0x00, 0x40, 0xC0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x01,
};

/* 80B41A24-80B41A2C 0008+00 s=1 e=0 z=0  None .rodata    @4845 */
SECTION_RODATA static u8 const lit_4845[8] = {
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
};

/* 80B41A2C-80B41A38 000C+00 s=1 e=0 z=0  None .rodata    @4846 */
SECTION_RODATA static u8 const lit_4846[12] = {
    0x00, 0x23, 0x00, 0x00, 0x40, 0xC0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
};

/* 80B41A38-80B41A3C 0004+00 s=1 e=0 z=0  None .rodata    @4847 */
SECTION_RODATA static u8 const lit_4847[4] = {
    0x00,
    0x00,
    0x00,
    0x00,
};

/* 80B41A3C-80B41A48 000C+00 s=1 e=0 z=0  None .rodata    @4848 */
SECTION_RODATA static u8 const lit_4848[12] = {
    0x00, 0x24, 0x00, 0x00, 0x40, 0xC0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
};

/* 80B41A48-80B41A4C 0004+00 s=1 e=0 z=0  None .rodata    @4849 */
SECTION_RODATA static u8 const lit_4849[4] = {
    0x00,
    0x00,
    0x00,
    0x00,
};

/* 80B41A4C-80B41A58 000C+00 s=1 e=0 z=0  None .rodata    @4850 */
SECTION_RODATA static u8 const lit_4850[12] = {
    0x00, 0x25, 0x00, 0x00, 0x40, 0xC0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x01,
};

/* 80B41A58-80B41A60 0008+00 s=1 e=0 z=0  None .rodata    @4851 */
SECTION_RODATA static u8 const lit_4851[8] = {
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
};

/* 80B41A60-80B41A6C 000C+00 s=1 e=0 z=0  None .rodata    @4852 */
SECTION_RODATA static u8 const lit_4852[12] = {
    0x00, 0x29, 0x00, 0x00, 0x40, 0xC0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x01,
};

/* 80B41A6C-80B41A74 0008+00 s=1 e=0 z=0  None .rodata    @4853 */
SECTION_RODATA static u8 const lit_4853[8] = {
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
};

/* 80B41A74-80B41A80 000C+00 s=1 e=0 z=0  None .rodata    @4854 */
SECTION_RODATA static u8 const lit_4854[12] = {
    0x00, 0x30, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
};

/* 80B41A80-80B41A84 0004+00 s=1 e=0 z=0  None .rodata    @4855 */
SECTION_RODATA static u8 const lit_4855[4] = {
    0x00,
    0x00,
    0x00,
    0x00,
};

/* 80B41A84-80B41A90 000C+00 s=1 e=0 z=0  None .rodata    @4856 */
SECTION_RODATA static u8 const lit_4856[12] = {
    0x00, 0x26, 0x00, 0x00, 0x40, 0xC0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x01,
};

/* 80B41A90-80B41A98 0008+00 s=1 e=0 z=0  None .rodata    @4857 */
SECTION_RODATA static u8 const lit_4857[8] = {
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
};

/* 80B41A98-80B41AA4 000C+00 s=1 e=0 z=0  None .rodata    @4858 */
SECTION_RODATA static u8 const lit_4858[12] = {
    0x00, 0x27, 0x00, 0x00, 0x40, 0xC0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x01,
};

/* 80B41AA4-80B41AAC 0008+00 s=1 e=0 z=0  None .rodata    @4859 */
SECTION_RODATA static u8 const lit_4859[8] = {
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
};

/* 80B41AAC-80B41AB8 000C+00 s=1 e=0 z=0  None .rodata    @4860 */
SECTION_RODATA static u8 const lit_4860[12] = {
    0x00, 0x28, 0x00, 0x00, 0x40, 0xC0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x01,
};

/* 80B41AB8-80B41AC0 0008+00 s=1 e=0 z=0  None .rodata    @4861 */
SECTION_RODATA static u8 const lit_4861[8] = {
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
};

/* 80B41AC0-80B41ACC 000C+00 s=1 e=0 z=0  None .rodata    @4862 */
SECTION_RODATA static u8 const lit_4862[12] = {
    0x00, 0x2B, 0x00, 0x00, 0x40, 0xC0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x01,
};

/* 80B41ACC-80B41AD4 0008+00 s=1 e=0 z=0  None .rodata    @4863 */
SECTION_RODATA static u8 const lit_4863[8] = {
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
};

/* 80B41AD4-80B41AE0 000C+00 s=1 e=0 z=0  None .rodata    @4864 */
SECTION_RODATA static u8 const lit_4864[12] = {
    0x00, 0x2E, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x01,
};

/* 80B41AE0-80B41AE8 0008+00 s=1 e=0 z=0  None .rodata    @4865 */
SECTION_RODATA static u8 const lit_4865[8] = {
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
};

/* 80B41AE8-80B41AF4 000C+00 s=1 e=0 z=0  None .rodata    @4866 */
SECTION_RODATA static u8 const lit_4866[12] = {
    0x00, 0x2F, 0x00, 0x00, 0x40, 0xC0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x01,
};

/* 80B41AF4-80B41AFC 0008+00 s=1 e=0 z=0  None .rodata    @4867 */
SECTION_RODATA static u8 const lit_4867[8] = {
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
};

/* 80B41AFC-80B41B08 000C+00 s=1 e=0 z=0  None .rodata    @4868 */
SECTION_RODATA static u8 const lit_4868[12] = {
    0x00, 0x2C, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
};

/* 80B41B08-80B41B0C 0004+00 s=1 e=0 z=0  None .rodata    @4869 */
SECTION_RODATA static u8 const lit_4869[4] = {
    0x00,
    0x00,
    0x00,
    0x00,
};

/* 80B41B0C-80B41B18 000C+00 s=1 e=0 z=0  None .rodata    @4870 */
SECTION_RODATA static u8 const lit_4870[12] = {
    0x00, 0x2D, 0x00, 0x00, 0x40, 0xC0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
};

/* 80B41B18-80B41B1C 0004+00 s=1 e=0 z=0  None .rodata    @4871 */
SECTION_RODATA static u8 const lit_4871[4] = {
    0x00,
    0x00,
    0x00,
    0x00,
};

/* 80B41B1C-80B41B28 000C+00 s=1 e=0 z=0  None .rodata    @4872 */
SECTION_RODATA static u8 const lit_4872[12] = {
    0x00, 0x31, 0x00, 0x00, 0x40, 0xC0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
};

/* 80B41B28-80B41B2C 0004+00 s=1 e=0 z=0  None .rodata    @4873 */
SECTION_RODATA static u8 const lit_4873[4] = {
    0x00,
    0x00,
    0x00,
    0x00,
};

/* 80B41B2C-80B41B38 000C+00 s=1 e=0 z=0  None .rodata    @4874 */
SECTION_RODATA static u8 const lit_4874[12] = {
    0x00, 0x32, 0x00, 0x00, 0x40, 0xC0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
};

/* 80B41B38-80B41B3C 0004+00 s=1 e=0 z=0  None .rodata    @4875 */
SECTION_RODATA static u8 const lit_4875[4] = {
    0x00,
    0x00,
    0x00,
    0x00,
};

/* 80B41B3C-80B41B48 000C+00 s=1 e=0 z=0  None .rodata    @4876 */
SECTION_RODATA static u8 const lit_4876[12] = {
    0x00, 0x38, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x01,
};

/* 80B41B48-80B41B54 000C+00 s=1 e=0 z=0  None .rodata    @4877 */
SECTION_RODATA static u8 const lit_4877[12] = {
    0x00, 0x39, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
};

/* 80B41B54-80B41B60 000C+00 s=1 e=0 z=0  None .rodata    @4878 */
SECTION_RODATA static u8 const lit_4878[12] = {
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
};

/* 80B41B60-80B41B6C 000C+00 s=1 e=0 z=0  None .rodata    @4879 */
SECTION_RODATA static u8 const lit_4879[12] = {
    0x00, 0x34, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x01,
};

/* 80B41B6C-80B41B78 000C+00 s=1 e=0 z=0  None .rodata    @4880 */
SECTION_RODATA static u8 const lit_4880[12] = {
    0x00, 0x36, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
};

/* 80B41B78-80B41B84 000C+00 s=1 e=0 z=0  None .rodata    @4881 */
SECTION_RODATA static u8 const lit_4881[12] = {
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
};

/* 80B41B84-80B41B90 000C+00 s=1 e=0 z=0  None .rodata    @4882 */
SECTION_RODATA static u8 const lit_4882[12] = {
    0x00, 0x35, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x01,
};

/* 80B41B90-80B41B9C 000C+00 s=1 e=0 z=0  None .rodata    @4883 */
SECTION_RODATA static u8 const lit_4883[12] = {
    0x00, 0x36, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
};

/* 80B41B9C-80B41BA8 000C+00 s=1 e=0 z=0  None .rodata    @4884 */
SECTION_RODATA static u8 const lit_4884[12] = {
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
};

/* 80B41BA8-80B41BB4 000C+00 s=1 e=0 z=0  None .rodata    @4885 */
SECTION_RODATA static u8 const lit_4885[12] = {
    0x00, 0x2A, 0x00, 0x00, 0x40, 0xC0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x01,
};

/* 80B41BB4-80B41BBC 0008+00 s=1 e=0 z=0  None .rodata    @4886 */
SECTION_RODATA static u8 const lit_4886[8] = {
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
};

/* 80B41BBC-80B41BC8 000C+00 s=1 e=0 z=0  None .rodata    @4887 */
SECTION_RODATA static u8 const lit_4887[12] = {
    0x00, 0x37, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x01,
};

/* 80B41BC8-80B41BD4 000C+00 s=1 e=0 z=0  None .rodata    @4888 */
SECTION_RODATA static u8 const lit_4888[12] = {
    0x00, 0x1B, 0x00, 0x00, 0x40, 0xC0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
};

/* 80B41BD4-80B41BDC 0008+00 s=1 e=0 z=0  None .rodata    @4889 */
SECTION_RODATA static u8 const lit_4889[8] = {
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
};

/* 80B41BDC-80B41C54 0078+00 s=0 e=0 z=0  None .rodata    @4890 */
SECTION_RODATA u8 const lit_4890[120] = {
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
};

/* 80B41C54-80B41C60 000C+00 s=1 e=0 z=0  None .rodata    @4911 */
SECTION_RODATA static u8 const lit_4911[12] = {
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
};

/* 80B41C60-80B41C64 0004+00 s=0 e=0 z=0  None .rodata    @5608 */
SECTION_RODATA u32 const lit_5608 = 0x43480000;

/* 80B41C64-80B41C68 0004+00 s=0 e=0 z=0  None .rodata    @5609 */
SECTION_RODATA u32 const lit_5609 = 0x3F000000;

/* 80B41C68-80B41C6C 0004+00 s=0 e=0 z=0  None .rodata    @5610 */
SECTION_RODATA u32 const lit_5610 = 0x3BB40000;

/* 80B41C6C-80B41C74 0004+04 s=0 e=0 z=0  None .rodata    @5611 */
SECTION_RODATA u32 const lit_5611[1 + 1 /* padding */] = {
    0x41700000,
    /* padding */
    0x00000000,
};

/* 80B41C74-80B41C7C 0008+00 s=0 e=0 z=0  None .rodata    @5613 */
SECTION_RODATA u8 const lit_5613[8] = {
    0x43, 0x30, 0x00, 0x00, 0x80, 0x00, 0x00, 0x00,
};

/* 80B41C7C-80B41C80 0004+00 s=1 e=0 z=0  None .rodata    @5759 */
SECTION_RODATA static u32 const lit_5759 = 0x41A00000;

/* 80B41C80-80B41C84 0004+00 s=0 e=0 z=0  None .rodata    @5908 */
SECTION_RODATA u32 const lit_5908 = 0x43D70000;

/* 80B41C84-80B41C88 0004+00 s=0 e=0 z=0  None .rodata    @6085 */
SECTION_RODATA u32 const lit_6085 = 0x477FFF00;

/* 80B41C88-80B41C8C 0004+00 s=0 e=0 z=0  None .rodata    @6086 */
SECTION_RODATA u32 const lit_6086 = 0x42480000;

/* 80B41C8C-80B41C90 0004+00 s=0 e=0 z=0  None .rodata    @6087 */
SECTION_RODATA u32 const lit_6087 = 0x42340000;

/* 80B41C90-80B41C94 0004+00 s=0 e=0 z=0  None .rodata    @6088 */
SECTION_RODATA u32 const lit_6088 = 0x40400000;

/* 80B41C94-80B41C9C 0004+04 s=0 e=0 z=0  None .rodata    @6245 */
SECTION_RODATA u32 const lit_6245[1 + 1 /* padding */] = {
    0x40C00000,
    /* padding */
    0x00000000,
};

/* 80B41C9C-80B41CA4 0008+00 s=2 e=0 z=0  None .rodata    @6299 */
SECTION_RODATA static u8 const lit_6299[8] = {
    0x40, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
};

/* 80B41CA4-80B41CA8 0004+00 s=0 e=0 z=0  None .rodata    @6610 */
SECTION_RODATA u32 const lit_6610 = 0x41500000;

/* 80B41CA8-80B41CAC 0004+00 s=0 e=0 z=0  None .rodata    @6611 */
SECTION_RODATA u32 const lit_6611 = 0xC27E0000;

/* 80B41CAC-80B41CB0 0004+00 s=0 e=0 z=0  None .rodata    @6942 */
SECTION_RODATA u32 const lit_6942 = 0x42080000;

/* 80B41CB0-80B41CB4 0004+00 s=0 e=0 z=0  None .rodata    @6943 */
SECTION_RODATA u32 const lit_6943 = 0x420C0000;

/* 80B41CB4-80B41CB8 0004+00 s=0 e=0 z=0  None .rodata    @7233 */
SECTION_RODATA u32 const lit_7233 = 0x41900000;

/* 80B41CB8-80B41CBC 0004+00 s=0 e=0 z=0  None .rodata    @7535 */
SECTION_RODATA u32 const lit_7535 = 0x41000000;

/* 80B41CBC-80B41CC0 0004+00 s=0 e=0 z=0  None .rodata    @7536 */
SECTION_RODATA u32 const lit_7536 = 0x42700000;

/* 80B41CC0-80B41CC4 0004+00 s=0 e=0 z=0  None .rodata    @7761 */
SECTION_RODATA u32 const lit_7761 = 0x40800000;

/* 80B41CC4-80B41CC8 0004+00 s=0 e=0 z=0  None .rodata    @7762 */
SECTION_RODATA u32 const lit_7762 = 0x41C00000;

/* 80B41CC8-80B41CCC 0004+00 s=0 e=0 z=0  None .rodata    @7963 */
SECTION_RODATA u32 const lit_7963 = 0x4019999A;

/* 80B41CCC-80B41CD0 0004+00 s=0 e=0 z=0  None .rodata    @7964 */
SECTION_RODATA u32 const lit_7964 = 0x3F4CCCCD;

/* 80B41CD0-80B41CD4 0004+00 s=0 e=0 z=0  None .rodata    @8383 */
SECTION_RODATA u32 const lit_8383 = 0x40A00000;

/* 80B41CD4-80B41CDC 0004+04 s=0 e=0 z=0  None .rodata    @8575 */
SECTION_RODATA u32 const lit_8575[1 + 1 /* padding */] = {
    0x3F666666,
    /* padding */
    0x00000000,
};

/* 80B41CDC-80B41CE4 0008+00 s=0 e=0 z=0  None .rodata    @8576 */
SECTION_RODATA u8 const lit_8576[8] = {
    0x3F, 0xE0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
};

/* 80B41CE4-80B41CEC 0008+00 s=0 e=0 z=0  None .rodata    @8577 */
SECTION_RODATA u8 const lit_8577[8] = {
    0x40, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
};

/* 80B41CEC-80B41CF4 0008+00 s=0 e=0 z=0  None .rodata    @8578 */
SECTION_RODATA u8 const lit_8578[8] = {
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
};

/* 80B41CF4-80B41CF8 0004+00 s=0 e=0 z=0  None .rodata    @8935 */
SECTION_RODATA u32 const lit_8935 = 0x41B80000;

/* 80B41CF8-80B41CFC 0004+00 s=0 e=0 z=0  None .rodata    @9266 */
SECTION_RODATA u32 const lit_9266 = 0x3C23D70A;

/* 80B41CFC-80B41D00 0004+00 s=0 e=0 z=0  None .rodata    @9267 */
SECTION_RODATA u32 const lit_9267 = 0x42200000;

/* 80B41D00-80B41D04 0004+00 s=0 e=0 z=0  None .rodata    @9268 */
SECTION_RODATA u32 const lit_9268 = 0xC2C80000;

/* 80B41D04-80B41D08 0004+00 s=0 e=0 z=0  None .rodata    @9269 */
SECTION_RODATA u32 const lit_9269 = 0x42CE0000;

/* 80B41D08-80B41D0C 0004+00 s=0 e=0 z=0  None .rodata    @9270 */
SECTION_RODATA u32 const lit_9270 = 0x42BC0000;

/* 80B41D0C-80B41D10 0004+00 s=0 e=0 z=0  None .rodata    @9271 */
SECTION_RODATA u32 const lit_9271 = 0x3E19999A;

/* 80B41D10-80B41D14 0004+00 s=0 e=0 z=0  None .rodata    @9272 */
SECTION_RODATA u32 const lit_9272 = 0x42FC0000;

/* 80B41D14-80B41D18 0004+00 s=0 e=0 z=0  None .rodata    @9387 */
SECTION_RODATA u32 const lit_9387 = 0x42A00000;

/* 80B41D18-80B41D1C 0004+00 s=0 e=0 z=0  None .rodata    @9388 */
SECTION_RODATA u32 const lit_9388 = 0x3DCCCCCD;

/* 80B41D1C-80B41D20 0004+00 s=1 e=0 z=0  None .rodata    @9389 */
SECTION_RODATA static u32 const lit_9389 = 0x3E4CCCCD;

/* 80B41D20-80B41D24 0004+00 s=0 e=0 z=0  None .rodata    @9390 */
SECTION_RODATA u32 const lit_9390 = 0x3D23D70A;

/* 80B41D24-80B41D28 0004+00 s=1 e=0 z=0  None .rodata    @9391 */
SECTION_RODATA static u32 const lit_9391 = 0x41200000;

/* 80B41D28-80B41D2C 0004+00 s=0 e=0 z=0  None .rodata    @9571 */
SECTION_RODATA u32 const lit_9571 = 0x43340000;

/* 80B41D2C-80B41D30 0004+00 s=0 e=0 z=0  None .rodata    @9572 */
SECTION_RODATA u32 const lit_9572 = 0x3FCCCCCD;

/* 80B41D30-80B41D34 0004+00 s=0 e=0 z=0  None .rodata    @9573 */
SECTION_RODATA u32 const lit_9573 = 0xC2AE28F6;

/* 80B41D34-80B41D38 0004+00 s=0 e=0 z=0  None .rodata    @9574 */
SECTION_RODATA u32 const lit_9574 = 0xC38570A4;

/* 80B41D38-80B41D3C 0004+00 s=0 e=0 z=0  None .rodata    @9575 */
SECTION_RODATA u32 const lit_9575 = 0xC2B9851F;

/* 80B41D3C-80B41D40 0004+00 s=0 e=0 z=0  None .rodata    @9576 */
SECTION_RODATA u32 const lit_9576 = 0xC397147B;

/* 80B41D40-80B41D44 0004+00 s=0 e=0 z=0  None .rodata    @9577 */
SECTION_RODATA u32 const lit_9577 = 0x3D4CCCCD;

/* 80B41D44-80B41D48 0004+00 s=0 e=0 z=0  None .rodata    @9578 */
SECTION_RODATA u32 const lit_9578 = 0x41F00000;

/* 80B41D48-80B41D4C 0004+00 s=0 e=0 z=0  None .rodata    @9579 */
SECTION_RODATA u32 const lit_9579 = 0x3DA3D70A;

/* 80B41D4C-80B41D50 0004+00 s=0 e=0 z=0  None .rodata    @9580 */
SECTION_RODATA u32 const lit_9580 = 0x3E99999A;

/* 80B41D50-80B41D54 0004+00 s=0 e=0 z=0  None .rodata    @9581 */
SECTION_RODATA u32 const lit_9581 = 0x428C0000;

/* 80B41D54-80B41D58 0004+00 s=0 e=0 z=0  None .rodata    @10142 */
SECTION_RODATA u32 const lit_10142 = 0x40600000;

/* 80B41D58-80B41D5C 0004+00 s=1 e=0 z=0  None .rodata    @10652 */
SECTION_RODATA static u32 const lit_10652 = 0x41300000;

/* 80B41D5C-80B41D60 0004+00 s=0 e=0 z=0  None .rodata    @10653 */
SECTION_RODATA u32 const lit_10653 = 0x40000000;

/* 80B41D60-80B41D64 0004+00 s=0 e=0 z=0  None .rodata    @10654 */
SECTION_RODATA u32 const lit_10654 = 0x40E00000;

/* 80B41D64-80B41D68 0004+00 s=0 e=0 z=0  None .rodata    @10655 */
SECTION_RODATA u32 const lit_10655 = 0x42140000;

/* 80B41D68-80B41D6C 0004+00 s=0 e=0 z=0  None .rodata    @10656 */
SECTION_RODATA u32 const lit_10656 = 0x42280000;

/* 80B41D6C-80B41D70 0004+00 s=0 e=0 z=0  None .rodata    @10657 */
SECTION_RODATA u32 const lit_10657 = 0x41400000;

/* 80B41D70-80B41D74 0004+00 s=1 e=0 z=0  None .rodata    @10804 */
SECTION_RODATA static u32 const lit_10804 = 0xC1200000;

/* 80B41D74-80B41D78 0004+00 s=0 e=0 z=0  None .rodata    @10805 */
SECTION_RODATA u32 const lit_10805 = 0x42FA0000;

/* 80B41D78-80B41D7C 0004+00 s=0 e=0 z=0  None .rodata    @10841 */
SECTION_RODATA u32 const lit_10841 = 0xC2A00000;

/* 80B41D7C-80B41D84 0008+00 s=4 e=0 z=0  None .rodata    @stringBase0 */
#pragma push
#pragma force_active on
#pragma section ".dead"
SECTION_DEAD char const* const stringBase_80B41D7C = "alSumou";
#pragma pop

/* 80B41D84-80B41DF8 0074+00 s=3 e=0 z=0  None .rodata    None */
SECTION_RODATA static u8 const struct_80B41D84[116] = {
    /* 80B41D84 0005 data_80B41D84 None */
    0x42,
    0x6F,
    0x75,
    0x33,
    0x00,
    /* 80B41D89 0005 data_80B41D89 None */
    0x67,
    0x72,
    0x44,
    0x53,
    0x00,
    /* 80B41D8E 000B data_80B41D8E None */
    0x47,
    0x52,
    0x44,
    0x53,
    0x5F,
    0x45,
    0x4E,
    0x54,
    0x52,
    0x59,
    0x00,
    /* 80B41D99 000C data_80B41D99 None */
    0x47,
    0x52,
    0x44,
    0x53,
    0x5F,
    0x45,
    0x4E,
    0x54,
    0x52,
    0x59,
    0x32,
    0x00,
    /* 80B41DA5 000C data_80B41DA5 None */
    0x47,
    0x52,
    0x44,
    0x53,
    0x5F,
    0x45,
    0x4E,
    0x54,
    0x52,
    0x59,
    0x33,
    0x00,
    /* 80B41DB1 000C data_80B41DB1 None */
    0x47,
    0x52,
    0x44,
    0x53,
    0x5F,
    0x45,
    0x4E,
    0x54,
    0x52,
    0x59,
    0x34,
    0x00,
    /* 80B41DBD 000C data_80B41DBD None */
    0x47,
    0x52,
    0x44,
    0x53,
    0x5F,
    0x45,
    0x4E,
    0x54,
    0x52,
    0x59,
    0x35,
    0x00,
    /* 80B41DC9 000A data_80B41DC9 None */
    0x47,
    0x52,
    0x44,
    0x53,
    0x5F,
    0x4C,
    0x4F,
    0x53,
    0x45,
    0x00,
    /* 80B41DD3 0025 data_80B41DD3 None */
    0x57,
    0x72,
    0x65,
    0x73,
    0x74,
    0x6C,
    0x65,
    0x72,
    0x00,
    0x44,
    0x45,
    0x46,
    0x41,
    0x55,
    0x4C,
    0x54,
    0x5F,
    0x47,
    0x45,
    0x54,
    0x49,
    0x54,
    0x45,
    0x4D,
    0x00,
    0x70,
    0x6F,
    0x73,
    0x00,
    0x61,
    0x6E,
    0x67,
    0x6C,
    0x65,
    0x00,
    0x00,
    0x00,
};

/* 80B41DF8-80B41E04 000C+00 s=20 e=0 z=0  None .data      cNullVec__6Z2Calc */
SECTION_DATA static u8 cNullVec__6Z2Calc[12] = {
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
};

/* 80B41E04-80B41E18 0004+10 s=0 e=0 z=0  None .data      @1787 */
SECTION_DATA u32 lit_1787[1 + 4 /* padding */] = {
    0x02000201,
    /* padding */
    0x40080000,
    0x00000000,
    0x3FE00000,
    0x00000000,
};

/* 80B41E18-80B41E1C 0004+00 s=1 e=0 z=0  None .data      l_resALink */
SECTION_DATA static void* l_resALink = (void*)&stringBase0;

/* 80B41E1C-80B41E30 0014+00 s=9 e=0 z=0  None .data      l_resName */
SECTION_DATA static void* l_resName[5] = {
    /* 0    */ (void*)(((char*)&struct_80B41D84) + 0x0) /* None */,
    /* 1    */ (void*)(((char*)&struct_80B41D84) + 0x5) /* None */,
    /* 2    */ (void*)NULL,
    /* 3    */ (void*)NULL,
    /* 4    */ (void*)NULL,
};

/* 80B41E30-80B41E44 0014+00 s=1 e=0 z=0  None .data      l_bmdGetParamList */
SECTION_DATA static u8 l_bmdGetParamList[20] = {
    0x00, 0x00, 0x00, 0x3E, 0x00, 0x00, 0x00, 0x47, 0x00, 0x00,
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
};

/* 80B41E44-80B4203C 01F8+00 s=1 e=0 z=0  None .data      l_BouBckParamList */
SECTION_DATA static u8 l_BouBckParamList[504] = {
    0xFF, 0xFF, 0xFF, 0xFF, 0x00, 0x00, 0x00, 0x02, 0x00, 0x00, 0x00, 0x07, 0x00, 0x00, 0x00, 0x02,
    0x00, 0x00, 0x00, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x09, 0x00, 0x00, 0x00, 0x00,
    0x00, 0x00, 0x00, 0x0A, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x0B, 0x00, 0x00, 0x00, 0x00,
    0x00, 0x00, 0x00, 0x0C, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x0D, 0x00, 0x00, 0x00, 0x00,
    0x00, 0x00, 0x00, 0x0E, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x0F, 0x00, 0x00, 0x00, 0x00,
    0x00, 0x00, 0x00, 0x10, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x11, 0x00, 0x00, 0x00, 0x02,
    0x00, 0x00, 0x00, 0x12, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x13, 0x00, 0x00, 0x00, 0x00,
    0x00, 0x00, 0x00, 0x14, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x15, 0x00, 0x00, 0x00, 0x00,
    0x00, 0x00, 0x00, 0x16, 0x00, 0x00, 0x00, 0x02, 0x00, 0x00, 0x00, 0x17, 0x00, 0x00, 0x00, 0x02,
    0x00, 0x00, 0x00, 0x18, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x19, 0x00, 0x00, 0x00, 0x02,
    0x00, 0x00, 0x00, 0x1A, 0x00, 0x00, 0x00, 0x02, 0x00, 0x00, 0x00, 0x1B, 0x00, 0x00, 0x00, 0x00,
    0x00, 0x00, 0x00, 0x1C, 0x00, 0x00, 0x00, 0x00, 0xFF, 0xFF, 0xFF, 0xFF, 0x00, 0x00, 0x00, 0x02,
    0xFF, 0xFF, 0xFF, 0xFF, 0x00, 0x00, 0x00, 0x02, 0xFF, 0xFF, 0xFF, 0xFF, 0x00, 0x00, 0x00, 0x02,
    0xFF, 0xFF, 0xFF, 0xFF, 0x00, 0x00, 0x00, 0x02, 0x00, 0x00, 0x00, 0x37, 0x00, 0x00, 0x00, 0x02,
    0xFF, 0xFF, 0xFF, 0xFF, 0x00, 0x00, 0x00, 0x02, 0x00, 0x00, 0x00, 0x2F, 0x00, 0x00, 0x00, 0x00,
    0x00, 0x00, 0x00, 0x25, 0x00, 0x00, 0x00, 0x02, 0x00, 0x00, 0x00, 0x21, 0x00, 0x00, 0x00, 0x00,
    0x00, 0x00, 0x00, 0x2D, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x20, 0x00, 0x00, 0x00, 0x02,
    0x00, 0x00, 0x00, 0x1D, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x1E, 0x00, 0x00, 0x00, 0x02,
    0x00, 0x00, 0x00, 0x1F, 0x00, 0x00, 0x00, 0x02, 0x00, 0x00, 0x00, 0x27, 0x00, 0x00, 0x00, 0x00,
    0x00, 0x00, 0x00, 0x28, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x29, 0x00, 0x00, 0x00, 0x00,
    0x00, 0x00, 0x00, 0x2A, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x30, 0x00, 0x00, 0x00, 0x00,
    0x00, 0x00, 0x00, 0x31, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x32, 0x00, 0x00, 0x00, 0x00,
    0x00, 0x00, 0x00, 0x34, 0x00, 0x00, 0x00, 0x02, 0x00, 0x00, 0x00, 0x35, 0x00, 0x00, 0x00, 0x02,
    0x00, 0x00, 0x00, 0x33, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x36, 0x00, 0x00, 0x00, 0x00,
    0x00, 0x00, 0x00, 0x2E, 0x00, 0x00, 0x00, 0x02, 0x00, 0x00, 0x00, 0x26, 0x00, 0x00, 0x00, 0x00,
    0x00, 0x00, 0x00, 0x2B, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x39, 0x00, 0x00, 0x00, 0x00,
    0x00, 0x00, 0x00, 0x23, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x24, 0x00, 0x00, 0x00, 0x00,
    0x00, 0x00, 0x00, 0x06, 0x00, 0x00, 0x00, 0x02, 0x00, 0x00, 0x00, 0x22, 0x00, 0x00, 0x00, 0x00,
    0x00, 0x00, 0x00, 0x3A, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x38, 0x00, 0x00, 0x00, 0x02,
    0xFF, 0xFF, 0xFF, 0xFF, 0x00, 0x00, 0x00, 0x02, 0xFF, 0xFF, 0xFF, 0xFF, 0x00, 0x00, 0x00, 0x02,
    0xFF, 0xFF, 0xFF, 0xFF, 0x00, 0x00, 0x00, 0x02, 0xFF, 0xFF, 0xFF, 0xFF, 0x00, 0x00, 0x00, 0x02,
    0xFF, 0xFF, 0xFF, 0xFF, 0x00, 0x00, 0x00, 0x02,
};

/* 80B4203C-80B42150 0114+00 s=1 e=0 z=0  None .data      l_BouFaceParamList */
SECTION_DATA static u8 l_BouFaceParamList[276] = {
    0xFF, 0xFF, 0xFF, 0xFF, 0x00, 0x00, 0x00, 0x44, 0x00, 0x00, 0x00, 0x02, 0x00, 0x00, 0x00, 0x07,
    0x00, 0x00, 0x00, 0x45, 0x00, 0x00, 0x00, 0x02, 0x00, 0x00, 0x00, 0x08, 0x00, 0x00, 0x00, 0x46,
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x09, 0x00, 0x00, 0x00, 0x47, 0x00, 0x00, 0x00, 0x00,
    0x00, 0x00, 0x00, 0x0A, 0x00, 0x00, 0x00, 0x48, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x0B,
    0x00, 0x00, 0x00, 0x49, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x0C, 0x00, 0x00, 0x00, 0x4A,
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x0D, 0x00, 0x00, 0x00, 0x4B, 0x00, 0x00, 0x00, 0x00,
    0x00, 0x00, 0x00, 0x0E, 0x00, 0x00, 0x00, 0x4C, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x0F,
    0x00, 0x00, 0x00, 0x4D, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x10, 0x00, 0x00, 0x00, 0x4E,
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x11, 0x00, 0x00, 0x00, 0x4F, 0x00, 0x00, 0x00, 0x02,
    0x00, 0x00, 0x00, 0x12, 0x00, 0x00, 0x00, 0x50, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x13,
    0x00, 0x00, 0x00, 0x51, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x14, 0x00, 0x00, 0x00, 0x52,
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x15, 0x00, 0x00, 0x00, 0x53, 0x00, 0x00, 0x00, 0x00,
    0x00, 0x00, 0x00, 0x16, 0x00, 0x00, 0x00, 0x54, 0x00, 0x00, 0x00, 0x02, 0x00, 0x00, 0x00, 0x17,
    0x00, 0x00, 0x00, 0x55, 0x00, 0x00, 0x00, 0x02, 0x00, 0x00, 0x00, 0x18, 0x00, 0x00, 0x00, 0x56,
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x19, 0xFF, 0xFF, 0xFF, 0xFF, 0x00, 0x00, 0x00, 0x02,
    0x00, 0x00, 0x00, 0x1A, 0x00, 0x00, 0x00, 0x57, 0x00, 0x00, 0x00, 0x02, 0x00, 0x00, 0x00, 0x1B,
    0x00, 0x00, 0x00, 0x58, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x1C, 0x00, 0x00, 0x00, 0x59,
    0x00, 0x00, 0x00, 0x00,
};

/* 80B42150-80B42208 00B8+00 s=1 e=0 z=0  None .data      l_BouBtpParamList */
SECTION_DATA static u8 l_BouBtpParamList[184] = {
    0x00, 0x00, 0x00, 0x44, 0x00, 0x00, 0x00, 0x02, 0x00, 0x00, 0x00, 0x45, 0x00, 0x00, 0x00, 0x00,
    0x00, 0x00, 0x00, 0x46, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x47, 0x00, 0x00, 0x00, 0x00,
    0x00, 0x00, 0x00, 0x48, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x49, 0x00, 0x00, 0x00, 0x00,
    0x00, 0x00, 0x00, 0x4A, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x4B, 0x00, 0x00, 0x00, 0x00,
    0x00, 0x00, 0x00, 0x4C, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x4D, 0x00, 0x00, 0x00, 0x00,
    0x00, 0x00, 0x00, 0x4E, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x4F, 0x00, 0x00, 0x00, 0x02,
    0x00, 0x00, 0x00, 0x50, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x51, 0x00, 0x00, 0x00, 0x00,
    0x00, 0x00, 0x00, 0x52, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x53, 0x00, 0x00, 0x00, 0x00,
    0x00, 0x00, 0x00, 0x54, 0x00, 0x00, 0x00, 0x02, 0x00, 0x00, 0x00, 0x55, 0x00, 0x00, 0x00, 0x02,
    0x00, 0x00, 0x00, 0x56, 0x00, 0x00, 0x00, 0x00, 0xFF, 0xFF, 0xFF, 0xFF, 0x00, 0x00, 0x00, 0x02,
    0x00, 0x00, 0x00, 0x57, 0x00, 0x00, 0x00, 0x02, 0x00, 0x00, 0x00, 0x58, 0x00, 0x00, 0x00, 0x02,
    0x00, 0x00, 0x00, 0x59, 0x00, 0x00, 0x00, 0x00,
};

/* 80B42208-80B42210 0008+00 s=1 e=0 z=0  None .data      l_BouBtkParamList */
SECTION_DATA static u8 l_BouBtkParamList[8] = {
    0x00, 0x00, 0x00, 0x41, 0x00, 0x00, 0x00, 0x02,
};

/* 80B42210-80B42220 0010+00 s=1 e=0 z=0  None .data      l_BouAnmParamList */
SECTION_DATA static void* l_BouAnmParamList[4] = {
    /* 0    */ (void*)&l_BouBckParamList,
    /* 1    */ (void*)&l_BouFaceParamList,
    /* 2    */ (void*)&l_BouBtpParamList,
    /* 3    */ (void*)&l_BouBtkParamList,
};

/* 80B42220-80B42418 01F8+00 s=1 e=0 z=0  None .data      l_GrdBckParamList */
SECTION_DATA static u8 l_GrdBckParamList[504] = {
    0xFF, 0xFF, 0xFF, 0xFF, 0x00, 0x00, 0x00, 0x02, 0x00, 0x00, 0x00, 0x08, 0x00, 0x00, 0x00, 0x02,
    0x00, 0x00, 0x00, 0x09, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x0A, 0x00, 0x00, 0x00, 0x00,
    0x00, 0x00, 0x00, 0x0B, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x0D, 0x00, 0x00, 0x00, 0x00,
    0x00, 0x00, 0x00, 0x0E, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x0F, 0x00, 0x00, 0x00, 0x00,
    0x00, 0x00, 0x00, 0x10, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x11, 0x00, 0x00, 0x00, 0x00,
    0x00, 0x00, 0x00, 0x12, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x14, 0x00, 0x00, 0x00, 0x02,
    0x00, 0x00, 0x00, 0x15, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x16, 0x00, 0x00, 0x00, 0x00,
    0x00, 0x00, 0x00, 0x17, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x18, 0x00, 0x00, 0x00, 0x00,
    0x00, 0x00, 0x00, 0x19, 0x00, 0x00, 0x00, 0x02, 0x00, 0x00, 0x00, 0x1A, 0x00, 0x00, 0x00, 0x02,
    0x00, 0x00, 0x00, 0x1B, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x1C, 0x00, 0x00, 0x00, 0x02,
    0x00, 0x00, 0x00, 0x1D, 0x00, 0x00, 0x00, 0x02, 0x00, 0x00, 0x00, 0x1E, 0x00, 0x00, 0x00, 0x00,
    0x00, 0x00, 0x00, 0x1F, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x0C, 0x00, 0x00, 0x00, 0x00,
    0x00, 0x00, 0x00, 0x20, 0x00, 0x00, 0x00, 0x02, 0x00, 0x00, 0x00, 0x13, 0x00, 0x00, 0x00, 0x00,
    0x00, 0x00, 0x00, 0x21, 0x00, 0x00, 0x00, 0x02, 0x00, 0x00, 0x00, 0x3F, 0x00, 0x00, 0x00, 0x02,
    0xFF, 0xFF, 0xFF, 0xFF, 0x00, 0x00, 0x00, 0x02, 0x00, 0x00, 0x00, 0x34, 0x00, 0x00, 0x00, 0x00,
    0x00, 0x00, 0x00, 0x2A, 0x00, 0x00, 0x00, 0x02, 0x00, 0x00, 0x00, 0x26, 0x00, 0x00, 0x00, 0x00,
    0x00, 0x00, 0x00, 0x31, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x25, 0x00, 0x00, 0x00, 0x02,
    0x00, 0x00, 0x00, 0x22, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x23, 0x00, 0x00, 0x00, 0x02,
    0x00, 0x00, 0x00, 0x24, 0x00, 0x00, 0x00, 0x02, 0x00, 0x00, 0x00, 0x2C, 0x00, 0x00, 0x00, 0x00,
    0x00, 0x00, 0x00, 0x2D, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x2E, 0x00, 0x00, 0x00, 0x00,
    0x00, 0x00, 0x00, 0x2F, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x35, 0x00, 0x00, 0x00, 0x00,
    0x00, 0x00, 0x00, 0x36, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x37, 0x00, 0x00, 0x00, 0x00,
    0x00, 0x00, 0x00, 0x39, 0x00, 0x00, 0x00, 0x02, 0x00, 0x00, 0x00, 0x3A, 0x00, 0x00, 0x00, 0x02,
    0x00, 0x00, 0x00, 0x38, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x3B, 0x00, 0x00, 0x00, 0x00,
    0x00, 0x00, 0x00, 0x33, 0x00, 0x00, 0x00, 0x02, 0x00, 0x00, 0x00, 0x2B, 0x00, 0x00, 0x00, 0x00,
    0x00, 0x00, 0x00, 0x30, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x43, 0x00, 0x00, 0x00, 0x00,
    0x00, 0x00, 0x00, 0x28, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x29, 0x00, 0x00, 0x00, 0x00,
    0x00, 0x00, 0x00, 0x07, 0x00, 0x00, 0x00, 0x02, 0x00, 0x00, 0x00, 0x27, 0x00, 0x00, 0x00, 0x00,
    0x00, 0x00, 0x00, 0x44, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x40, 0x00, 0x00, 0x00, 0x02,
    0x00, 0x00, 0x00, 0x3E, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x41, 0x00, 0x00, 0x00, 0x02,
    0x00, 0x00, 0x00, 0x3C, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x3D, 0x00, 0x00, 0x00, 0x00,
    0x00, 0x00, 0x00, 0x42, 0x00, 0x00, 0x00, 0x02,
};

/* 80B42418-80B4252C 0114+00 s=1 e=0 z=0  None .data      l_GrdFaceParamList */
SECTION_DATA static u8 l_GrdFaceParamList[276] = {
    0xFF, 0xFF, 0xFF, 0xFF, 0x00, 0x00, 0x00, 0x4D, 0x00, 0x00, 0x00, 0x02, 0x00, 0x00, 0x00, 0x08,
    0x00, 0x00, 0x00, 0x4E, 0x00, 0x00, 0x00, 0x02, 0x00, 0x00, 0x00, 0x09, 0x00, 0x00, 0x00, 0x4F,
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x0A, 0x00, 0x00, 0x00, 0x50, 0x00, 0x00, 0x00, 0x00,
    0x00, 0x00, 0x00, 0x0B, 0x00, 0x00, 0x00, 0x51, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x0D,
    0x00, 0x00, 0x00, 0x52, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x0E, 0xFF, 0xFF, 0xFF, 0xFF,
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x0F, 0x00, 0x00, 0x00, 0x53, 0x00, 0x00, 0x00, 0x00,
    0x00, 0x00, 0x00, 0x10, 0x00, 0x00, 0x00, 0x54, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x11,
    0x00, 0x00, 0x00, 0x55, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x12, 0x00, 0x00, 0x00, 0x56,
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x14, 0x00, 0x00, 0x00, 0x57, 0x00, 0x00, 0x00, 0x02,
    0x00, 0x00, 0x00, 0x15, 0x00, 0x00, 0x00, 0x58, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x16,
    0x00, 0x00, 0x00, 0x59, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x17, 0x00, 0x00, 0x00, 0x5A,
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x18, 0x00, 0x00, 0x00, 0x5B, 0x00, 0x00, 0x00, 0x00,
    0x00, 0x00, 0x00, 0x19, 0x00, 0x00, 0x00, 0x5C, 0x00, 0x00, 0x00, 0x02, 0x00, 0x00, 0x00, 0x1A,
    0xFF, 0xFF, 0xFF, 0xFF, 0x00, 0x00, 0x00, 0x02, 0x00, 0x00, 0x00, 0x1B, 0x00, 0x00, 0x00, 0x5D,
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x1C, 0xFF, 0xFF, 0xFF, 0xFF, 0x00, 0x00, 0x00, 0x02,
    0x00, 0x00, 0x00, 0x1D, 0x00, 0x00, 0x00, 0x5E, 0x00, 0x00, 0x00, 0x02, 0x00, 0x00, 0x00, 0x1E,
    0x00, 0x00, 0x00, 0x5F, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x1F, 0xFF, 0xFF, 0xFF, 0xFF,
    0x00, 0x00, 0x00, 0x00,
};

/* 80B4252C-80B425E4 00B8+00 s=1 e=0 z=0  None .data      l_GrdBtpParamList */
SECTION_DATA static u8 l_GrdBtpParamList[184] = {
    0x00, 0x00, 0x00, 0x4D, 0x00, 0x00, 0x00, 0x02, 0x00, 0x00, 0x00, 0x4E, 0x00, 0x00, 0x00, 0x02,
    0x00, 0x00, 0x00, 0x4F, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x50, 0x00, 0x00, 0x00, 0x00,
    0x00, 0x00, 0x00, 0x51, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x52, 0x00, 0x00, 0x00, 0x00,
    0xFF, 0xFF, 0xFF, 0xFF, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x53, 0x00, 0x00, 0x00, 0x00,
    0x00, 0x00, 0x00, 0x54, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x55, 0x00, 0x00, 0x00, 0x00,
    0x00, 0x00, 0x00, 0x56, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x57, 0x00, 0x00, 0x00, 0x02,
    0x00, 0x00, 0x00, 0x58, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x59, 0x00, 0x00, 0x00, 0x00,
    0x00, 0x00, 0x00, 0x5A, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x5B, 0x00, 0x00, 0x00, 0x00,
    0x00, 0x00, 0x00, 0x5C, 0x00, 0x00, 0x00, 0x02, 0xFF, 0xFF, 0xFF, 0xFF, 0x00, 0x00, 0x00, 0x02,
    0x00, 0x00, 0x00, 0x5D, 0x00, 0x00, 0x00, 0x00, 0xFF, 0xFF, 0xFF, 0xFF, 0x00, 0x00, 0x00, 0x02,
    0x00, 0x00, 0x00, 0x5E, 0x00, 0x00, 0x00, 0x02, 0x00, 0x00, 0x00, 0x5F, 0x00, 0x00, 0x00, 0x00,
    0xFF, 0xFF, 0xFF, 0xFF, 0x00, 0x00, 0x00, 0x00,
};

/* 80B425E4-80B425EC 0008+00 s=1 e=0 z=0  None .data      l_GrdBtkParamList */
SECTION_DATA static u8 l_GrdBtkParamList[8] = {
    0x00, 0x00, 0x00, 0x4A, 0x00, 0x00, 0x00, 0x02,
};

/* 80B425EC-80B425FC 0010+00 s=1 e=0 z=0  None .data      l_GrdAnmParamList */
SECTION_DATA static void* l_GrdAnmParamList[4] = {
    /* 0    */ (void*)&l_GrdBckParamList,
    /* 1    */ (void*)&l_GrdFaceParamList,
    /* 2    */ (void*)&l_GrdBtpParamList,
    /* 3    */ (void*)&l_GrdBtkParamList,
};

/* 80B425FC-80B42604 0008+00 s=0 e=0 z=0  None .data      l_anmList */
SECTION_DATA void* l_anmList[2] = {
    /* 0    */ (void*)&l_BouAnmParamList,
    /* 1    */ (void*)&l_GrdAnmParamList,
};

/* 80B42604-80B42620 001C+00 s=2 e=0 z=0  None .data      l_evtNames */
SECTION_DATA static void* l_evtNames[7] = {
    /* 0    */ (void*)NULL,
    /* 1    */ (void*)(((char*)&struct_80B41D84) + 0xA) /* None */,
    /* 2    */ (void*)(((char*)&struct_80B41D84) + 0x15) /* None */,
    /* 3    */ (void*)(((char*)&struct_80B41D84) + 0x21) /* None */,
    /* 4    */ (void*)(((char*)&struct_80B41D84) + 0x2D) /* None */,
    /* 5    */ (void*)(((char*)&struct_80B41D84) + 0x39) /* None */,
    /* 6    */ (void*)(((char*)&struct_80B41D84) + 0x45) /* None */,
};

/* 80B42620-80B42624 0004+00 s=0 e=0 z=0  None .data      l_myName */
SECTION_DATA void* l_myName = (void*)(((char*)&struct_80B41D84) + 0x4F) /* None */;

/* 80B42624-80B42630 000C+00 s=1 e=0 z=0  None .data      @3975 */
SECTION_DATA static void* lit_3975[3] = {
    /* 0    */ (void*)NULL,
    /* 1    */ (void*)0xFFFFFFFF,
    /* 2    */ (void*)EvCut_grDSEntry__15daNpcWrestler_cFi,
};

/* 80B42630-80B4263C 000C+00 s=1 e=0 z=0  None .data      @3976 */
SECTION_DATA static void* lit_3976[3] = {
    /* 0    */ (void*)NULL,
    /* 1    */ (void*)0xFFFFFFFF,
    /* 2    */ (void*)EvCut_grDSEntry2__15daNpcWrestler_cFi,
};

/* 80B4263C-80B42648 000C+00 s=1 e=0 z=0  None .data      @3977 */
SECTION_DATA static void* lit_3977[3] = {
    /* 0    */ (void*)NULL,
    /* 1    */ (void*)0xFFFFFFFF,
    /* 2    */ (void*)EvCut_grDSEntry3_4__15daNpcWrestler_cFi,
};

/* 80B42648-80B42654 000C+00 s=1 e=0 z=0  None .data      @3978 */
SECTION_DATA static void* lit_3978[3] = {
    /* 0    */ (void*)NULL,
    /* 1    */ (void*)0xFFFFFFFF,
    /* 2    */ (void*)EvCut_grDSEntry3_4__15daNpcWrestler_cFi,
};

/* 80B42654-80B42660 000C+00 s=1 e=0 z=0  None .data      @3979 */
SECTION_DATA static void* lit_3979[3] = {
    /* 0    */ (void*)NULL,
    /* 1    */ (void*)0xFFFFFFFF,
    /* 2    */ (void*)EvCut_grDSEntry5__15daNpcWrestler_cFi,
};

/* 80B42660-80B4266C 000C+00 s=1 e=0 z=0  None .data      @3980 */
SECTION_DATA static void* lit_3980[3] = {
    /* 0    */ (void*)NULL,
    /* 1    */ (void*)0xFFFFFFFF,
    /* 2    */ (void*)EvCut_grDSLose__15daNpcWrestler_cFi,
};

/* 80B4266C-80B426C0 0054+00 s=1 e=0 z=0  None .data      mEvtSeqList__15daNpcWrestler_c */
SECTION_DATA static u8 mEvtSeqList__15daNpcWrestler_c[84] = {
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
};

/* 80B426C0-80B426CC 000C+00 s=1 e=0 z=0  None .data      @4604 */
SECTION_DATA static void* lit_4604[3] = {
    /* 0    */ (void*)NULL,
    /* 1    */ (void*)0xFFFFFFFF,
    /* 2    */ (void*)gotoArena__15daNpcWrestler_cFPv,
};

/* 80B426CC-80B426D8 000C+00 s=0 e=0 z=0  None .data      @4645 */
SECTION_DATA void* lit_4645[3] = {
    /* 0    */ (void*)NULL,
    /* 1    */ (void*)0xFFFFFFFF,
    /* 2    */ (void*)wait__15daNpcWrestler_cFPv,
};

/* 80B426D8-80B426E4 000C+00 s=0 e=0 z=0  None .data      @4647 */
SECTION_DATA void* lit_4647[3] = {
    /* 0    */ (void*)NULL,
    /* 1    */ (void*)0xFFFFFFFF,
    /* 2    */ (void*)talk__15daNpcWrestler_cFPv,
};

/* 80B426E4-80B426F0 000C+00 s=0 e=0 z=0  None .data      @4653 */
SECTION_DATA void* lit_4653[3] = {
    /* 0    */ (void*)NULL,
    /* 1    */ (void*)0xFFFFFFFF,
    /* 2    */ (void*)wait__15daNpcWrestler_cFPv,
};

/* 80B426F0-80B426FC 000C+00 s=0 e=0 z=0  None .data      @4655 */
SECTION_DATA void* lit_4655[3] = {
    /* 0    */ (void*)NULL,
    /* 1    */ (void*)0xFFFFFFFF,
    /* 2    */ (void*)talk__15daNpcWrestler_cFPv,
};

/* 80B426FC-80B42768 006C+00 s=1 e=0 z=0  None .data      @4706 */
SECTION_DATA static void* lit_4706[27] = {
    /* 0    */ (void*)(((char*)setExpressionAnm__15daNpcWrestler_cFib) + 0x9C),
    /* 1    */ (void*)(((char*)setExpressionAnm__15daNpcWrestler_cFib) + 0xB8),
    /* 2    */ (void*)(((char*)setExpressionAnm__15daNpcWrestler_cFib) + 0xD4),
    /* 3    */ (void*)(((char*)setExpressionAnm__15daNpcWrestler_cFib) + 0xF0),
    /* 4    */ (void*)(((char*)setExpressionAnm__15daNpcWrestler_cFib) + 0x10C),
    /* 5    */ (void*)(((char*)setExpressionAnm__15daNpcWrestler_cFib) + 0x128),
    /* 6    */ (void*)(((char*)setExpressionAnm__15daNpcWrestler_cFib) + 0x144),
    /* 7    */ (void*)(((char*)setExpressionAnm__15daNpcWrestler_cFib) + 0x160),
    /* 8    */ (void*)(((char*)setExpressionAnm__15daNpcWrestler_cFib) + 0x17C),
    /* 9    */ (void*)(((char*)setExpressionAnm__15daNpcWrestler_cFib) + 0x198),
    /* 10   */ (void*)(((char*)setExpressionAnm__15daNpcWrestler_cFib) + 0x1B4),
    /* 11   */ (void*)(((char*)setExpressionAnm__15daNpcWrestler_cFib) + 0x1D0),
    /* 12   */ (void*)(((char*)setExpressionAnm__15daNpcWrestler_cFib) + 0x1EC),
    /* 13   */ (void*)(((char*)setExpressionAnm__15daNpcWrestler_cFib) + 0x208),
    /* 14   */ (void*)(((char*)setExpressionAnm__15daNpcWrestler_cFib) + 0x224),
    /* 15   */ (void*)(((char*)setExpressionAnm__15daNpcWrestler_cFib) + 0x240),
    /* 16   */ (void*)(((char*)setExpressionAnm__15daNpcWrestler_cFib) + 0x25C),
    /* 17   */ (void*)(((char*)setExpressionAnm__15daNpcWrestler_cFib) + 0x278),
    /* 18   */ (void*)(((char*)setExpressionAnm__15daNpcWrestler_cFib) + 0x294),
    /* 19   */ (void*)(((char*)setExpressionAnm__15daNpcWrestler_cFib) + 0x2B0),
    /* 20   */ (void*)(((char*)setExpressionAnm__15daNpcWrestler_cFib) + 0x2CC),
    /* 21   */ (void*)(((char*)setExpressionAnm__15daNpcWrestler_cFib) + 0x2E8),
    /* 22   */ (void*)(((char*)setExpressionAnm__15daNpcWrestler_cFib) + 0x304),
    /* 23   */ (void*)(((char*)setExpressionAnm__15daNpcWrestler_cFib) + 0x320),
    /* 24   */ (void*)(((char*)setExpressionAnm__15daNpcWrestler_cFib) + 0x33C),
    /* 25   */ (void*)(((char*)setExpressionAnm__15daNpcWrestler_cFib) + 0x358),
    /* 26   */ (void*)(((char*)setExpressionAnm__15daNpcWrestler_cFib) + 0x374),
};

/* 80B42768-80B42774 000C+00 s=1 e=0 z=0  None .data      @4776 */
SECTION_DATA static void* lit_4776[3] = {
    /* 0    */ (void*)NULL,
    /* 1    */ (void*)0xFFFFFFFF,
    /* 2    */ (void*)gotoArena__15daNpcWrestler_cFPv,
};

/* 80B42774-80B42780 000C+00 s=1 e=0 z=0  None .data      @4779 */
SECTION_DATA static void* lit_4779[3] = {
    /* 0    */ (void*)NULL,
    /* 1    */ (void*)0xFFFFFFFF,
    /* 2    */ (void*)wait__15daNpcWrestler_cFPv,
};

/* 80B42780-80B4278C 000C+00 s=0 e=0 z=0  None .data      @5293 */
SECTION_DATA void* lit_5293[3] = {
    /* 0    */ (void*)NULL,
    /* 1    */ (void*)0xFFFFFFFF,
    /* 2    */ (void*)demoSumouReady__15daNpcWrestler_cFPv,
};

/* 80B4278C-80B42798 000C+00 s=0 e=0 z=0  None .data      @5296 */
SECTION_DATA void* lit_5296[3] = {
    /* 0    */ (void*)NULL,
    /* 1    */ (void*)0xFFFFFFFF,
    /* 2    */ (void*)sumouReady__15daNpcWrestler_cFPv,
};

/* 80B42798-80B427A4 000C+00 s=0 e=0 z=0  None .data      @5299 */
SECTION_DATA void* lit_5299[3] = {
    /* 0    */ (void*)NULL,
    /* 1    */ (void*)0xFFFFFFFF,
    /* 2    */ (void*)gotoLiving__15daNpcWrestler_cFPv,
};

/* 80B427A4-80B427B0 000C+00 s=0 e=0 z=0  None .data      @5303 */
SECTION_DATA void* lit_5303[3] = {
    /* 0    */ (void*)NULL,
    /* 1    */ (void*)0xFFFFFFFF,
    /* 2    */ (void*)wait__15daNpcWrestler_cFPv,
};

/* 80B427B0-80B427BC 000C+00 s=0 e=0 z=0  None .data      @5338 */
SECTION_DATA void* lit_5338[3] = {
    /* 0    */ (void*)NULL,
    /* 1    */ (void*)0xFFFFFFFF,
    /* 2    */ (void*)sumouPunchChaseHit__15daNpcWrestler_cFPv,
};

/* 80B427BC-80B427C8 000C+00 s=0 e=0 z=0  None .data      @5343 */
SECTION_DATA void* lit_5343[3] = {
    /* 0    */ (void*)NULL,
    /* 1    */ (void*)0xFFFFFFFF,
    /* 2    */ (void*)sumouPunchDraw__15daNpcWrestler_cFPv,
};

/* 80B427C8-80B427D4 000C+00 s=0 e=0 z=0  None .data      @5348 */
SECTION_DATA void* lit_5348[3] = {
    /* 0    */ (void*)NULL,
    /* 1    */ (void*)0xFFFFFFFF,
    /* 2    */ (void*)sumouTackleDraw__15daNpcWrestler_cFPv,
};

/* 80B427D4-80B427E0 000C+00 s=0 e=0 z=0  None .data      @5354 */
SECTION_DATA void* lit_5354[3] = {
    /* 0    */ (void*)NULL,
    /* 1    */ (void*)0xFFFFFFFF,
    /* 2    */ (void*)sumouTackleHit__15daNpcWrestler_cFPv,
};

/* 80B427E0-80B427EC 000C+00 s=0 e=0 z=0  None .data      @5361 */
SECTION_DATA void* lit_5361[3] = {
    /* 0    */ (void*)NULL,
    /* 1    */ (void*)0xFFFFFFFF,
    /* 2    */ (void*)sumouSideStep__15daNpcWrestler_cFPv,
};

/* 80B427EC-80B427F8 000C+00 s=0 e=0 z=0  None .data      @5366 */
SECTION_DATA void* lit_5366[3] = {
    /* 0    */ (void*)NULL,
    /* 1    */ (void*)0xFFFFFFFF,
    /* 2    */ (void*)sumouPunchChaseShock__15daNpcWrestler_cFPv,
};

/* 80B427F8-80B42804 000C+00 s=0 e=0 z=0  None .data      @5374 */
SECTION_DATA void* lit_5374[3] = {
    /* 0    */ (void*)NULL,
    /* 1    */ (void*)0xFFFFFFFF,
    /* 2    */ (void*)sumouSideStep__15daNpcWrestler_cFPv,
};

/* 80B42804-80B42810 000C+00 s=0 e=0 z=0  None .data      @5382 */
SECTION_DATA void* lit_5382[3] = {
    /* 0    */ (void*)NULL,
    /* 1    */ (void*)0xFFFFFFFF,
    /* 2    */ (void*)sumouPunchChaseHit__15daNpcWrestler_cFPv,
};

/* 80B42810-80B4281C 000C+00 s=0 e=0 z=0  None .data      @5387 */
SECTION_DATA void* lit_5387[3] = {
    /* 0    */ (void*)NULL,
    /* 1    */ (void*)0xFFFFFFFF,
    /* 2    */ (void*)sumouPunchDraw__15daNpcWrestler_cFPv,
};

/* 80B4281C-80B42828 000C+00 s=0 e=0 z=0  None .data      @5393 */
SECTION_DATA void* lit_5393[3] = {
    /* 0    */ (void*)NULL,
    /* 1    */ (void*)0xFFFFFFFF,
    /* 2    */ (void*)sumouPunchMiss__15daNpcWrestler_cFPv,
};

/* 80B42828-80B42834 000C+00 s=0 e=0 z=0  None .data      @5399 */
SECTION_DATA void* lit_5399[3] = {
    /* 0    */ (void*)NULL,
    /* 1    */ (void*)0xFFFFFFFF,
    /* 2    */ (void*)sumouTackleMiss__15daNpcWrestler_cFPv,
};

/* 80B42834-80B42840 000C+00 s=0 e=0 z=0  None .data      @5404 */
SECTION_DATA void* lit_5404[3] = {
    /* 0    */ (void*)NULL,
    /* 1    */ (void*)0xFFFFFFFF,
    /* 2    */ (void*)sumouTackleHit__15daNpcWrestler_cFPv,
};

/* 80B42840-80B4284C 000C+00 s=0 e=0 z=0  None .data      @5409 */
SECTION_DATA void* lit_5409[3] = {
    /* 0    */ (void*)NULL,
    /* 1    */ (void*)0xFFFFFFFF,
    /* 2    */ (void*)sumouTackleDraw__15daNpcWrestler_cFPv,
};

/* 80B4284C-80B42858 000C+00 s=0 e=0 z=0  None .data      @5414 */
SECTION_DATA void* lit_5414[3] = {
    /* 0    */ (void*)NULL,
    /* 1    */ (void*)0xFFFFFFFF,
    /* 2    */ (void*)sumouTackleShock__15daNpcWrestler_cFPv,
};

/* 80B42858-80B42864 000C+00 s=0 e=0 z=0  None .data      @5419 */
SECTION_DATA void* lit_5419[3] = {
    /* 0    */ (void*)NULL,
    /* 1    */ (void*)0xFFFFFFFF,
    /* 2    */ (void*)sumouSideStep__15daNpcWrestler_cFPv,
};

/* 80B42864-80B42870 000C+00 s=0 e=0 z=0  None .data      @5424 */
SECTION_DATA void* lit_5424[3] = {
    /* 0    */ (void*)NULL,
    /* 1    */ (void*)0xFFFFFFFF,
    /* 2    */ (void*)sumouPunchShock__15daNpcWrestler_cFPv,
};

/* 80B42870-80B4287C 000C+00 s=0 e=0 z=0  None .data      @5429 */
SECTION_DATA void* lit_5429[3] = {
    /* 0    */ (void*)NULL,
    /* 1    */ (void*)0xFFFFFFFF,
    /* 2    */ (void*)sumouTackleHit__15daNpcWrestler_cFPv,
};

/* 80B4287C-80B42888 000C+00 s=0 e=0 z=0  None .data      @5472 */
SECTION_DATA void* lit_5472[3] = {
    /* 0    */ (void*)NULL,
    /* 1    */ (void*)0xFFFFFFFF,
    /* 2    */ (void*)demo__15daNpcWrestler_cFPv,
};

/* 80B42888-80B42894 000C+00 s=0 e=0 z=0  None .data      @5475 */
SECTION_DATA void* lit_5475[3] = {
    /* 0    */ (void*)NULL,
    /* 1    */ (void*)0xFFFFFFFF,
    /* 2    */ (void*)talk__15daNpcWrestler_cFPv,
};

/* 80B42894-80B428A0 000C+00 s=0 e=0 z=0  None .data      @5480 */
SECTION_DATA void* lit_5480[3] = {
    /* 0    */ (void*)NULL,
    /* 1    */ (void*)0xFFFFFFFF,
    /* 2    */ (void*)demo__15daNpcWrestler_cFPv,
};

/* 80B428A0-80B428AC 000C+00 s=0 e=0 z=0  None .data      @5632 */
SECTION_DATA void* lit_5632[3] = {
    /* 0    */ (void*)NULL,
    /* 1    */ (void*)0xFFFFFFFF,
    /* 2    */ (void*)wait__15daNpcWrestler_cFPv,
};

/* 80B428AC-80B428B8 000C+00 s=0 e=0 z=0  None .data      @5637 */
SECTION_DATA void* lit_5637[3] = {
    /* 0    */ (void*)NULL,
    /* 1    */ (void*)0xFFFFFFFF,
    /* 2    */ (void*)gotoArena__15daNpcWrestler_cFPv,
};

/* 80B428B8-80B428C4 000C+00 s=0 e=0 z=0  None .data      @5644 */
SECTION_DATA void* lit_5644[3] = {
    /* 0    */ (void*)NULL,
    /* 1    */ (void*)0xFFFFFFFF,
    /* 2    */ (void*)gotoArena__15daNpcWrestler_cFPv,
};

/* 80B428C4-80B428D0 000C+00 s=0 e=0 z=0  None .data      @5647 */
SECTION_DATA void* lit_5647[3] = {
    /* 0    */ (void*)NULL,
    /* 1    */ (void*)0xFFFFFFFF,
    /* 2    */ (void*)demo__15daNpcWrestler_cFPv,
};

/* 80B428D0-80B428DC 000C+00 s=0 e=0 z=0  None .data      @5650 */
SECTION_DATA void* lit_5650[3] = {
    /* 0    */ (void*)NULL,
    /* 1    */ (void*)0xFFFFFFFF,
    /* 2    */ (void*)wait__15daNpcWrestler_cFPv,
};

/* 80B428DC-80B428E8 000C+00 s=0 e=0 z=0  None .data      @5745 */
SECTION_DATA void* lit_5745[3] = {
    /* 0    */ (void*)NULL,
    /* 1    */ (void*)0xFFFFFFFF,
    /* 2    */ (void*)wait__15daNpcWrestler_cFPv,
};

/* 80B428E8-80B428F4 000C+00 s=1 e=0 z=0  None .data      @5820 */
SECTION_DATA static void* lit_5820[3] = {
    /* 0    */ (void*)NULL,
    /* 1    */ (void*)0xFFFFFFFF,
    /* 2    */ (void*)wait__15daNpcWrestler_cFPv,
};

/* 80B428F4-80B42900 000C+00 s=1 e=0 z=0  None .data      @5948 */
SECTION_DATA static void* lit_5948[3] = {
    /* 0    */ (void*)NULL,
    /* 1    */ (void*)0xFFFFFFFF,
    /* 2    */ (void*)sumouWait__15daNpcWrestler_cFPv,
};

/* 80B42900-80B4290C 000C+00 s=1 e=0 z=0  None .data      @5951 */
SECTION_DATA static void* lit_5951[3] = {
    /* 0    */ (void*)NULL,
    /* 1    */ (void*)0xFFFFFFFF,
    /* 2    */ (void*)sumouWait__15daNpcWrestler_cFPv,
};

/* 80B4290C-80B42928 001C+00 s=1 e=0 z=0  None .data      @6092 */
SECTION_DATA static void* lit_6092[7] = {
    /* 0    */ (void*)(((char*)sumouReady__15daNpcWrestler_cFPv) + 0x2E4),
    /* 1    */ (void*)(((char*)sumouReady__15daNpcWrestler_cFPv) + 0x3DC),
    /* 2    */ (void*)(((char*)sumouReady__15daNpcWrestler_cFPv) + 0x404),
    /* 3    */ (void*)(((char*)sumouReady__15daNpcWrestler_cFPv) + 0x534),
    /* 4    */ (void*)(((char*)sumouReady__15daNpcWrestler_cFPv) + 0x6AC),
    /* 5    */ (void*)(((char*)sumouReady__15daNpcWrestler_cFPv) + 0x72C),
    /* 6    */ (void*)(((char*)sumouReady__15daNpcWrestler_cFPv) + 0x800),
};

/* 80B42928-80B42934 000C+00 s=0 e=0 z=0  None .data      @6107 */
SECTION_DATA void* lit_6107[3] = {
    /* 0    */ (void*)NULL,
    /* 1    */ (void*)0xFFFFFFFF,
    /* 2    */ (void*)sumouPunchHit__15daNpcWrestler_cFPv,
};

/* 80B42934-80B42940 000C+00 s=0 e=0 z=0  None .data      @6112 */
SECTION_DATA void* lit_6112[3] = {
    /* 0    */ (void*)NULL,
    /* 1    */ (void*)0xFFFFFFFF,
    /* 2    */ (void*)sumouSideStep__15daNpcWrestler_cFPv,
};

/* 80B42940-80B4294C 000C+00 s=0 e=0 z=0  None .data      @6115 */
SECTION_DATA void* lit_6115[3] = {
    /* 0    */ (void*)NULL,
    /* 1    */ (void*)0xFFFFFFFF,
    /* 2    */ (void*)sumouPunchHit__15daNpcWrestler_cFPv,
};

/* 80B4294C-80B42958 000C+00 s=0 e=0 z=0  None .data      @6120 */
SECTION_DATA void* lit_6120[3] = {
    /* 0    */ (void*)NULL,
    /* 1    */ (void*)0xFFFFFFFF,
    /* 2    */ (void*)sumouTackleHit__15daNpcWrestler_cFPv,
};

/* 80B42958-80B42964 000C+00 s=0 e=0 z=0  None .data      @6126 */
SECTION_DATA void* lit_6126[3] = {
    /* 0    */ (void*)NULL,
    /* 1    */ (void*)0xFFFFFFFF,
    /* 2    */ (void*)sumouTackleMiss__15daNpcWrestler_cFPv,
};

/* 80B42964-80B42970 000C+00 s=0 e=0 z=0  None .data      @6129 */
SECTION_DATA void* lit_6129[3] = {
    /* 0    */ (void*)NULL,
    /* 1    */ (void*)0xFFFFFFFF,
    /* 2    */ (void*)sumouWait__15daNpcWrestler_cFPv,
};

/* 80B42970-80B4297C 000C+00 s=0 e=0 z=0  None .data      @6132 */
SECTION_DATA void* lit_6132[3] = {
    /* 0    */ (void*)NULL,
    /* 1    */ (void*)0xFFFFFFFF,
    /* 2    */ (void*)sumouWait__15daNpcWrestler_cFPv,
};

/* 80B4297C-80B42988 000C+00 s=0 e=0 z=0  None .data      @6137 */
SECTION_DATA void* lit_6137[3] = {
    /* 0    */ (void*)NULL,
    /* 1    */ (void*)0xFFFFFFFF,
    /* 2    */ (void*)demoSumouWin2__15daNpcWrestler_cFPv,
};

/* 80B42988-80B42994 000C+00 s=0 e=0 z=0  None .data      @6400 */
SECTION_DATA void* lit_6400[3] = {
    /* 0    */ (void*)NULL,
    /* 1    */ (void*)0xFFFFFFFF,
    /* 2    */ (void*)demoSumouUnilateralWin__15daNpcWrestler_cFPv,
};

/* 80B42994-80B429A0 000C+00 s=0 e=0 z=0  None .data      @6415 */
SECTION_DATA void* lit_6415[3] = {
    /* 0    */ (void*)NULL,
    /* 1    */ (void*)0xFFFFFFFF,
    /* 2    */ (void*)demoSumouWin2__15daNpcWrestler_cFPv,
};

/* 80B429A0-80B429AC 000C+00 s=0 e=0 z=0  None .data      @6421 */
SECTION_DATA void* lit_6421[3] = {
    /* 0    */ (void*)NULL,
    /* 1    */ (void*)0xFFFFFFFF,
    /* 2    */ (void*)sumouWait__15daNpcWrestler_cFPv,
};

/* 80B429AC-80B429B8 000C+00 s=0 e=0 z=0  None .data      @6623 */
SECTION_DATA void* lit_6623[3] = {
    /* 0    */ (void*)NULL,
    /* 1    */ (void*)0xFFFFFFFF,
    /* 2    */ (void*)demoSumouUnilateralWin__15daNpcWrestler_cFPv,
};

/* 80B429B8-80B429C4 000C+00 s=0 e=0 z=0  None .data      @6638 */
SECTION_DATA void* lit_6638[3] = {
    /* 0    */ (void*)NULL,
    /* 1    */ (void*)0xFFFFFFFF,
    /* 2    */ (void*)demoSumouWin2__15daNpcWrestler_cFPv,
};

/* 80B429C4-80B429D0 000C+00 s=0 e=0 z=0  None .data      @6643 */
SECTION_DATA void* lit_6643[3] = {
    /* 0    */ (void*)NULL,
    /* 1    */ (void*)0xFFFFFFFF,
    /* 2    */ (void*)sumouWait__15daNpcWrestler_cFPv,
};

/* 80B429D0-80B429DC 000C+00 s=1 e=0 z=0  None .data      @6833 */
SECTION_DATA static void* lit_6833[3] = {
    /* 0    */ (void*)NULL,
    /* 1    */ (void*)0xFFFFFFFF,
    /* 2    */ (void*)demoSumouLose__15daNpcWrestler_cFPv,
};

/* 80B429DC-80B429E8 000C+00 s=1 e=0 z=0  None .data      @6838 */
SECTION_DATA static void* lit_6838[3] = {
    /* 0    */ (void*)NULL,
    /* 1    */ (void*)0xFFFFFFFF,
    /* 2    */ (void*)sumouTackleStagger__15daNpcWrestler_cFPv,
};

/* 80B429E8-80B429F4 000C+00 s=0 e=0 z=0  None .data      @7029 */
SECTION_DATA void* lit_7029[3] = {
    /* 0    */ (void*)NULL,
    /* 1    */ (void*)0xFFFFFFFF,
    /* 2    */ (void*)demoSumouUnilateralWin__15daNpcWrestler_cFPv,
};

/* 80B429F4-80B42A00 000C+00 s=0 e=0 z=0  None .data      @7044 */
SECTION_DATA void* lit_7044[3] = {
    /* 0    */ (void*)NULL,
    /* 1    */ (void*)0xFFFFFFFF,
    /* 2    */ (void*)demoSumouLose2__15daNpcWrestler_cFPv,
};

/* 80B42A00-80B42A0C 000C+00 s=0 e=0 z=0  None .data      @7049 */
SECTION_DATA void* lit_7049[3] = {
    /* 0    */ (void*)NULL,
    /* 1    */ (void*)0xFFFFFFFF,
    /* 2    */ (void*)demoSumouWin2__15daNpcWrestler_cFPv,
};

/* 80B42A0C-80B42A18 000C+00 s=0 e=0 z=0  None .data      @7054 */
SECTION_DATA void* lit_7054[3] = {
    /* 0    */ (void*)NULL,
    /* 1    */ (void*)0xFFFFFFFF,
    /* 2    */ (void*)sumouWait__15daNpcWrestler_cFPv,
};

/* 80B42A18-80B42A24 000C+00 s=1 e=0 z=0  None .data      @7272 */
SECTION_DATA static void* lit_7272[3] = {
    /* 0    */ (void*)NULL,
    /* 1    */ (void*)0xFFFFFFFF,
    /* 2    */ (void*)demoSumouWin__15daNpcWrestler_cFPv,
};

/* 80B42A24-80B42A30 000C+00 s=1 e=0 z=0  None .data      @7277 */
SECTION_DATA static void* lit_7277[3] = {
    /* 0    */ (void*)NULL,
    /* 1    */ (void*)0xFFFFFFFF,
    /* 2    */ (void*)sumouTacklePush__15daNpcWrestler_cFPv,
};

/* 80B42A30-80B42A3C 000C+00 s=0 e=0 z=0  None .data      @7542 */
SECTION_DATA void* lit_7542[3] = {
    /* 0    */ (void*)NULL,
    /* 1    */ (void*)0xFFFFFFFF,
    /* 2    */ (void*)demoSumouWin2__15daNpcWrestler_cFPv,
};

/* 80B42A3C-80B42A48 000C+00 s=0 e=0 z=0  None .data      @7547 */
SECTION_DATA void* lit_7547[3] = {
    /* 0    */ (void*)NULL,
    /* 1    */ (void*)0xFFFFFFFF,
    /* 2    */ (void*)sumouTackleShock__15daNpcWrestler_cFPv,
};

/* 80B42A48-80B42A54 000C+00 s=0 e=0 z=0  None .data      @7552 */
SECTION_DATA void* lit_7552[3] = {
    /* 0    */ (void*)NULL,
    /* 1    */ (void*)0xFFFFFFFF,
    /* 2    */ (void*)sumouPunchShock__15daNpcWrestler_cFPv,
};

/* 80B42A54-80B42A60 000C+00 s=0 e=0 z=0  None .data      @7557 */
SECTION_DATA void* lit_7557[3] = {
    /* 0    */ (void*)NULL,
    /* 1    */ (void*)0xFFFFFFFF,
    /* 2    */ (void*)sumouLostBalance__15daNpcWrestler_cFPv,
};

/* 80B42A60-80B42A6C 000C+00 s=0 e=0 z=0  None .data      @7604 */
SECTION_DATA void* lit_7604[3] = {
    /* 0    */ (void*)NULL,
    /* 1    */ (void*)0xFFFFFFFF,
    /* 2    */ (void*)demoSumouUnilateralWin__15daNpcWrestler_cFPv,
};

/* 80B42A6C-80B42A78 000C+00 s=0 e=0 z=0  None .data      @7623 */
SECTION_DATA void* lit_7623[3] = {
    /* 0    */ (void*)NULL,
    /* 1    */ (void*)0xFFFFFFFF,
    /* 2    */ (void*)demoSumouLose2__15daNpcWrestler_cFPv,
};

/* 80B42A78-80B42A84 000C+00 s=0 e=0 z=0  None .data      @7628 */
SECTION_DATA void* lit_7628[3] = {
    /* 0    */ (void*)NULL,
    /* 1    */ (void*)0xFFFFFFFF,
    /* 2    */ (void*)demoSumouWin2__15daNpcWrestler_cFPv,
};

/* 80B42A84-80B42A90 000C+00 s=0 e=0 z=0  None .data      @7633 */
SECTION_DATA void* lit_7633[3] = {
    /* 0    */ (void*)NULL,
    /* 1    */ (void*)0xFFFFFFFF,
    /* 2    */ (void*)sumouWait__15daNpcWrestler_cFPv,
};

/* 80B42A90-80B42A9C 000C+00 s=0 e=0 z=0  None .data      @7775 */
SECTION_DATA void* lit_7775[3] = {
    /* 0    */ (void*)NULL,
    /* 1    */ (void*)0xFFFFFFFF,
    /* 2    */ (void*)demoSumouWin2__15daNpcWrestler_cFPv,
};

/* 80B42A9C-80B42AA8 000C+00 s=0 e=0 z=0  None .data      @7780 */
SECTION_DATA void* lit_7780[3] = {
    /* 0    */ (void*)NULL,
    /* 1    */ (void*)0xFFFFFFFF,
    /* 2    */ (void*)sumouPunchChaseShock__15daNpcWrestler_cFPv,
};

/* 80B42AA8-80B42AB4 000C+00 s=0 e=0 z=0  None .data      @7787 */
SECTION_DATA void* lit_7787[3] = {
    /* 0    */ (void*)NULL,
    /* 1    */ (void*)0xFFFFFFFF,
    /* 2    */ (void*)sumouTackleHit__15daNpcWrestler_cFPv,
};

/* 80B42AB4-80B42AC0 000C+00 s=0 e=0 z=0  None .data      @7790 */
SECTION_DATA void* lit_7790[3] = {
    /* 0    */ (void*)NULL,
    /* 1    */ (void*)0xFFFFFFFF,
    /* 2    */ (void*)sumouWait__15daNpcWrestler_cFPv,
};

/* 80B42AC0-80B42ACC 000C+00 s=0 e=0 z=0  None .data      @7970 */
SECTION_DATA void* lit_7970[3] = {
    /* 0    */ (void*)NULL,
    /* 1    */ (void*)0xFFFFFFFF,
    /* 2    */ (void*)sumouWait__15daNpcWrestler_cFPv,
};

/* 80B42ACC-80B42AD8 000C+00 s=0 e=0 z=0  None .data      @7975 */
SECTION_DATA void* lit_7975[3] = {
    /* 0    */ (void*)NULL,
    /* 1    */ (void*)0xFFFFFFFF,
    /* 2    */ (void*)demoSumouWin2__15daNpcWrestler_cFPv,
};

/* 80B42AD8-80B42AE4 000C+00 s=0 e=0 z=0  None .data      @7980 */
SECTION_DATA void* lit_7980[3] = {
    /* 0    */ (void*)NULL,
    /* 1    */ (void*)0xFFFFFFFF,
    /* 2    */ (void*)sumouTackleShock__15daNpcWrestler_cFPv,
};

/* 80B42AE4-80B42AF0 000C+00 s=0 e=0 z=0  None .data      @7985 */
SECTION_DATA void* lit_7985[3] = {
    /* 0    */ (void*)NULL,
    /* 1    */ (void*)0xFFFFFFFF,
    /* 2    */ (void*)sumouPunchShock__15daNpcWrestler_cFPv,
};

/* 80B42AF0-80B42AFC 000C+00 s=0 e=0 z=0  None .data      @8022 */
SECTION_DATA void* lit_8022[3] = {
    /* 0    */ (void*)NULL,
    /* 1    */ (void*)0xFFFFFFFF,
    /* 2    */ (void*)demoSumouLose2__15daNpcWrestler_cFPv,
};

/* 80B42AFC-80B42B08 000C+00 s=0 e=0 z=0  None .data      @8027 */
SECTION_DATA void* lit_8027[3] = {
    /* 0    */ (void*)NULL,
    /* 1    */ (void*)0xFFFFFFFF,
    /* 2    */ (void*)demoSumouWin2__15daNpcWrestler_cFPv,
};

/* 80B42B08-80B42B14 000C+00 s=0 e=0 z=0  None .data      @8034 */
SECTION_DATA void* lit_8034[3] = {
    /* 0    */ (void*)NULL,
    /* 1    */ (void*)0xFFFFFFFF,
    /* 2    */ (void*)sumouWait__15daNpcWrestler_cFPv,
};

/* 80B42B14-80B42B20 000C+00 s=0 e=0 z=0  None .data      @8037 */
SECTION_DATA void* lit_8037[3] = {
    /* 0    */ (void*)NULL,
    /* 1    */ (void*)0xFFFFFFFF,
    /* 2    */ (void*)sumouPunchStagger__15daNpcWrestler_cFPv,
};

/* 80B42B20-80B42B2C 000C+00 s=0 e=0 z=0  None .data      @8088 */
SECTION_DATA void* lit_8088[3] = {
    /* 0    */ (void*)NULL,
    /* 1    */ (void*)0xFFFFFFFF,
    /* 2    */ (void*)demoSumouLose2__15daNpcWrestler_cFPv,
};

/* 80B42B2C-80B42B38 000C+00 s=0 e=0 z=0  None .data      @8093 */
SECTION_DATA void* lit_8093[3] = {
    /* 0    */ (void*)NULL,
    /* 1    */ (void*)0xFFFFFFFF,
    /* 2    */ (void*)demoSumouWin2__15daNpcWrestler_cFPv,
};

/* 80B42B38-80B42B44 000C+00 s=0 e=0 z=0  None .data      @8098 */
SECTION_DATA void* lit_8098[3] = {
    /* 0    */ (void*)NULL,
    /* 1    */ (void*)0xFFFFFFFF,
    /* 2    */ (void*)sumouPunchStagger__15daNpcWrestler_cFPv,
};

/* 80B42B44-80B42B50 000C+00 s=0 e=0 z=0  None .data      @8219 */
SECTION_DATA void* lit_8219[3] = {
    /* 0    */ (void*)NULL,
    /* 1    */ (void*)0xFFFFFFFF,
    /* 2    */ (void*)demoSumouLose2__15daNpcWrestler_cFPv,
};

/* 80B42B50-80B42B5C 000C+00 s=0 e=0 z=0  None .data      @8224 */
SECTION_DATA void* lit_8224[3] = {
    /* 0    */ (void*)NULL,
    /* 1    */ (void*)0xFFFFFFFF,
    /* 2    */ (void*)demoSumouWin2__15daNpcWrestler_cFPv,
};

/* 80B42B5C-80B42B68 000C+00 s=0 e=0 z=0  None .data      @8229 */
SECTION_DATA void* lit_8229[3] = {
    /* 0    */ (void*)NULL,
    /* 1    */ (void*)0xFFFFFFFF,
    /* 2    */ (void*)sumouTackleShock__15daNpcWrestler_cFPv,
};

/* 80B42B68-80B42B74 000C+00 s=0 e=0 z=0  None .data      @8234 */
SECTION_DATA void* lit_8234[3] = {
    /* 0    */ (void*)NULL,
    /* 1    */ (void*)0xFFFFFFFF,
    /* 2    */ (void*)sumouPunchShock__15daNpcWrestler_cFPv,
};

/* 80B42B74-80B42B80 000C+00 s=0 e=0 z=0  None .data      @8239 */
SECTION_DATA void* lit_8239[3] = {
    /* 0    */ (void*)NULL,
    /* 1    */ (void*)0xFFFFFFFF,
    /* 2    */ (void*)sumouWait__15daNpcWrestler_cFPv,
};

/* 80B42B80-80B42B8C 000C+00 s=1 e=0 z=0  None .data      @8323 */
SECTION_DATA static void* lit_8323[3] = {
    /* 0    */ (void*)NULL,
    /* 1    */ (void*)0xFFFFFFFF,
    /* 2    */ (void*)demoSumouLose__15daNpcWrestler_cFPv,
};

/* 80B42B8C-80B42B98 000C+00 s=1 e=0 z=0  None .data      @8328 */
SECTION_DATA static void* lit_8328[3] = {
    /* 0    */ (void*)NULL,
    /* 1    */ (void*)0xFFFFFFFF,
    /* 2    */ (void*)sumouTackleStagger__15daNpcWrestler_cFPv,
};

/* 80B42B98-80B42BA4 000C+00 s=1 e=0 z=0  None .data      @8395 */
SECTION_DATA static void* lit_8395[3] = {
    /* 0    */ (void*)NULL,
    /* 1    */ (void*)0xFFFFFFFF,
    /* 2    */ (void*)demoSumouLose__15daNpcWrestler_cFPv,
};

/* 80B42BA4-80B42BB0 000C+00 s=1 e=0 z=0  None .data      @8400 */
SECTION_DATA static void* lit_8400[3] = {
    /* 0    */ (void*)NULL,
    /* 1    */ (void*)0xFFFFFFFF,
    /* 2    */ (void*)sumouTackleStaggerRelease__15daNpcWrestler_cFPv,
};

/* 80B42BB0-80B42BBC 000C+00 s=1 e=0 z=0  None .data      @8584 */
SECTION_DATA static void* lit_8584[3] = {
    /* 0    */ (void*)NULL,
    /* 1    */ (void*)0xFFFFFFFF,
    /* 2    */ (void*)sumouWait__15daNpcWrestler_cFPv,
};

/* 80B42BBC-80B42BC8 000C+00 s=1 e=0 z=0  None .data      @8642 */
SECTION_DATA static void* lit_8642[3] = {
    /* 0    */ (void*)NULL,
    /* 1    */ (void*)0xFFFFFFFF,
    /* 2    */ (void*)demoSumouWin__15daNpcWrestler_cFPv,
};

/* 80B42BC8-80B42BD4 000C+00 s=1 e=0 z=0  None .data      @8647 */
SECTION_DATA static void* lit_8647[3] = {
    /* 0    */ (void*)NULL,
    /* 1    */ (void*)0xFFFFFFFF,
    /* 2    */ (void*)sumouTackleRelease__15daNpcWrestler_cFPv,
};

/* 80B42BD4-80B42BE0 000C+00 s=1 e=0 z=0  None .data      @8834 */
SECTION_DATA static void* lit_8834[3] = {
    /* 0    */ (void*)NULL,
    /* 1    */ (void*)0xFFFFFFFF,
    /* 2    */ (void*)sumouWait__15daNpcWrestler_cFPv,
};

/* 80B42BE0-80B42BEC 000C+00 s=1 e=0 z=0  None .data      @8996 */
SECTION_DATA static void* lit_8996[3] = {
    /* 0    */ (void*)NULL,
    /* 1    */ (void*)0xFFFFFFFF,
    /* 2    */ (void*)gotoArena__15daNpcWrestler_cFPv,
};

/* 80B42BEC-80B42C18 002C+00 s=1 e=0 z=0  None .data      @9274 */
SECTION_DATA static void* lit_9274[11] = {
    /* 0    */ (void*)(((char*)demoSumouReady__15daNpcWrestler_cFPv) + 0x2D0),
    /* 1    */ (void*)(((char*)demoSumouReady__15daNpcWrestler_cFPv) + 0x3F4),
    /* 2    */ (void*)(((char*)demoSumouReady__15daNpcWrestler_cFPv) + 0x400),
    /* 3    */ (void*)(((char*)demoSumouReady__15daNpcWrestler_cFPv) + 0x53C),
    /* 4    */ (void*)(((char*)demoSumouReady__15daNpcWrestler_cFPv) + 0x5F0),
    /* 5    */ (void*)(((char*)demoSumouReady__15daNpcWrestler_cFPv) + 0x7EC),
    /* 6    */ (void*)(((char*)demoSumouReady__15daNpcWrestler_cFPv) + 0x960),
    /* 7    */ (void*)(((char*)demoSumouReady__15daNpcWrestler_cFPv) + 0xAAC),
    /* 8    */ (void*)(((char*)demoSumouReady__15daNpcWrestler_cFPv) + 0xB80),
    /* 9    */ (void*)(((char*)demoSumouReady__15daNpcWrestler_cFPv) + 0xCF4),
    /* 10   */ (void*)(((char*)demoSumouReady__15daNpcWrestler_cFPv) + 0xD74),
};

/* 80B42C18-80B42C24 000C+00 s=1 e=0 z=0  None .data      @9296 */
SECTION_DATA static void* lit_9296[3] = {
    /* 0    */ (void*)NULL,
    /* 1    */ (void*)0xFFFFFFFF,
    /* 2    */ (void*)wait__15daNpcWrestler_cFPv,
};

/* 80B42C24-80B42C30 000C+00 s=1 e=0 z=0  None .data      @9429 */
SECTION_DATA static void* lit_9429[3] = {
    /* 0    */ (void*)NULL,
    /* 1    */ (void*)0xFFFFFFFF,
    /* 2    */ (void*)wait__15daNpcWrestler_cFPv,
};

/* 80B42C30-80B42C3C 000C+00 s=1 e=0 z=0  None .data      @9432 */
SECTION_DATA static void* lit_9432[3] = {
    /* 0    */ (void*)NULL,
    /* 1    */ (void*)0xFFFFFFFF,
    /* 2    */ (void*)demoTalkAfterLose__15daNpcWrestler_cFPv,
};

/* 80B42C3C-80B42C48 000C+00 s=1 e=0 z=0  None .data      @9598 */
SECTION_DATA static void* lit_9598[3] = {
    /* 0    */ (void*)NULL,
    /* 1    */ (void*)0xFFFFFFFF,
    /* 2    */ (void*)wait__15daNpcWrestler_cFPv,
};

/* 80B42C48-80B42C54 000C+00 s=1 e=0 z=0  None .data      @9717 */
SECTION_DATA static void* lit_9717[3] = {
    /* 0    */ (void*)NULL,
    /* 1    */ (void*)0xFFFFFFFF,
    /* 2    */ (void*)wait__15daNpcWrestler_cFPv,
};

/* 80B42C54-80B42C60 000C+00 s=1 e=0 z=0  None .data      @9720 */
SECTION_DATA static void* lit_9720[3] = {
    /* 0    */ (void*)NULL,
    /* 1    */ (void*)0xFFFFFFFF,
    /* 2    */ (void*)demoTalkAfterLose__15daNpcWrestler_cFPv,
};

/* 80B42C60-80B42C6C 000C+00 s=1 e=0 z=0  None .data      @9878 */
SECTION_DATA static void* lit_9878[3] = {
    /* 0    */ (void*)NULL,
    /* 1    */ (void*)0xFFFFFFFF,
    /* 2    */ (void*)wait__15daNpcWrestler_cFPv,
};

/* 80B42C6C-80B42C78 000C+00 s=0 e=0 z=0  None .data      @9999 */
SECTION_DATA void* lit_9999[3] = {
    /* 0    */ (void*)NULL,
    /* 1    */ (void*)0xFFFFFFFF,
    /* 2    */ (void*)demo__15daNpcWrestler_cFPv,
};

/* 80B42C78-80B42C9C 0024+00 s=1 e=0 z=0  None .data      @10144 */
SECTION_DATA static void* lit_10144[9] = {
    /* 0    */ (void*)(((char*)EvCut_grDSEntry__15daNpcWrestler_cFi) + 0x238),
    /* 1    */ (void*)(((char*)EvCut_grDSEntry__15daNpcWrestler_cFi) + 0x240),
    /* 2    */ (void*)(((char*)EvCut_grDSEntry__15daNpcWrestler_cFi) + 0x478),
    /* 3    */ (void*)(((char*)EvCut_grDSEntry__15daNpcWrestler_cFi) + 0x4B8),
    /* 4    */ (void*)(((char*)EvCut_grDSEntry__15daNpcWrestler_cFi) + 0x240),
    /* 5    */ (void*)(((char*)EvCut_grDSEntry__15daNpcWrestler_cFi) + 0x240),
    /* 6    */ (void*)(((char*)EvCut_grDSEntry__15daNpcWrestler_cFi) + 0x238),
    /* 7    */ (void*)(((char*)EvCut_grDSEntry__15daNpcWrestler_cFi) + 0x240),
    /* 8    */ (void*)(((char*)EvCut_grDSEntry__15daNpcWrestler_cFi) + 0x240),
};

/* 80B42C9C-80B42CC0 0024+00 s=1 e=0 z=0  None .data      @10143 */
SECTION_DATA static void* lit_10143[9] = {
    /* 0    */ (void*)(((char*)EvCut_grDSEntry__15daNpcWrestler_cFi) + 0x7C),
    /* 1    */ (void*)(((char*)EvCut_grDSEntry__15daNpcWrestler_cFi) + 0xC8),
    /* 2    */ (void*)(((char*)EvCut_grDSEntry__15daNpcWrestler_cFi) + 0xE8),
    /* 3    */ (void*)(((char*)EvCut_grDSEntry__15daNpcWrestler_cFi) + 0x104),
    /* 4    */ (void*)(((char*)EvCut_grDSEntry__15daNpcWrestler_cFi) + 0xC8),
    /* 5    */ (void*)(((char*)EvCut_grDSEntry__15daNpcWrestler_cFi) + 0xC8),
    /* 6    */ (void*)(((char*)EvCut_grDSEntry__15daNpcWrestler_cFi) + 0xA8),
    /* 7    */ (void*)(((char*)EvCut_grDSEntry__15daNpcWrestler_cFi) + 0xC8),
    /* 8    */ (void*)(((char*)EvCut_grDSEntry__15daNpcWrestler_cFi) + 0xC8),
};

/* 80B42CC0-80B42CCC 000C+00 s=1 e=0 z=0  None .data      @10156 */
SECTION_DATA static void* lit_10156[3] = {
    /* 0    */ (void*)NULL,
    /* 1    */ (void*)0xFFFFFFFF,
    /* 2    */ (void*)gotoArena__15daNpcWrestler_cFPv,
};

/* 80B42CCC-80B42CD8 000C+00 s=1 e=0 z=0  None .data      @10254 */
SECTION_DATA static void* lit_10254[3] = {
    /* 0    */ (void*)NULL,
    /* 1    */ (void*)0xFFFFFFFF,
    /* 2    */ (void*)gotoArena__15daNpcWrestler_cFPv,
};

/* 80B42CD8-80B42CF8 0020+00 s=1 e=0 z=0  None .data      daNpcWrestler_MethodTable */
SECTION_DATA static void* daNpcWrestler_MethodTable[8] = {
    /* 0    */ (void*)daNpcWrestler_Create__FPv,
    /* 1    */ (void*)daNpcWrestler_Delete__FPv,
    /* 2    */ (void*)daNpcWrestler_Execute__FPv,
    /* 3    */ (void*)daNpcWrestler_IsDelete__FPv,
    /* 4    */ (void*)daNpcWrestler_Draw__FPv,
    /* 5    */ (void*)NULL,
    /* 6    */ (void*)NULL,
    /* 7    */ (void*)NULL,
};

/* 80B42CF8-80B42D28 0030+00 s=0 e=0 z=1  None .data      g_profile_NPC_WRESTLER */
SECTION_DATA void* g_profile_NPC_WRESTLER[12] = {
    /* 0    */ (void*)0xFFFFFFFD,
    /* 1    */ (void*)0x0007FFFD,
    /* 2    */ (void*)0x024B0000,
    /* 3    */ (void*)&g_fpcLf_Method,
    /* 4    */ (void*)0x00000EA0,
    /* 5    */ (void*)NULL,
    /* 6    */ (void*)NULL,
    /* 7    */ (void*)&g_fopAc_Method,
    /* 8    */ (void*)0x01490000,
    /* 9    */ (void*)&daNpcWrestler_MethodTable,
    /* 10   */ (void*)0x00044007,
    /* 11   */ (void*)0x040E0000,
};

/* 80B42D28-80B42D34 000C+00 s=2 e=0 z=0  None .data      __vt__11J3DTexNoAnm */
SECTION_DATA static void* __vt__11J3DTexNoAnm[3] = {
    /* 0    */ (void*)NULL /* RTTI */,
    /* 1    */ (void*)NULL,
    /* 2    */ (void*)calc__11J3DTexNoAnmCFPUs,
};

/* 80B42D34-80B42D7C 0048+00 s=2 e=0 z=0  None .data      __vt__15daNpcWrestler_c */
SECTION_DATA static void* __vt__15daNpcWrestler_c[18] = {
    /* 0    */ (void*)NULL /* RTTI */,
    /* 1    */ (void*)NULL,
    /* 2    */ (void*)__dt__15daNpcWrestler_cFv,
    /* 3    */ (void*)setParam__15daNpcWrestler_cFv,
    /* 4    */ (void*)main__15daNpcWrestler_cFv,
    /* 5    */ (void*)ctrlBtk__15daNpcWrestler_cFv,
    /* 6    */ (void*)adjustShapeAngle__15daNpcWrestler_cFv,
    /* 7    */ (void*)setMtx__8daNpcF_cFv,
    /* 8    */ (void*)setMtx2__8daNpcF_cFv,
    /* 9    */ (void*)setAttnPos__15daNpcWrestler_cFv,
    /* 10   */ (void*)setCollisions__8daNpcF_cFv,
    /* 11   */ (void*)setExpressionAnm__15daNpcWrestler_cFib,
    /* 12   */ (void*)setExpressionBtp__15daNpcWrestler_cFi,
    /* 13   */ (void*)setExpression__15daNpcWrestler_cFif,
    /* 14   */ (void*)setMotionAnm__15daNpcWrestler_cFif,
    /* 15   */ (void*)setMotion__15daNpcWrestler_cFifi,
    /* 16   */ (void*)drawDbgInfo__15daNpcWrestler_cFv,
    /* 17   */ (void*)drawOtherMdls__15daNpcWrestler_cFv,
};

/* 80B42D7C-80B42D88 000C+00 s=3 e=0 z=0  None .data      __vt__12J3DFrameCtrl */
SECTION_DATA static void* __vt__12J3DFrameCtrl[3] = {
    /* 0    */ (void*)NULL /* RTTI */,
    /* 1    */ (void*)NULL,
    /* 2    */ (void*)__dt__12J3DFrameCtrlFv,
};

/* 80B42D88-80B42DAC 0024+00 s=3 e=0 z=0  None .data      __vt__12dBgS_ObjAcch */
SECTION_DATA static void* __vt__12dBgS_ObjAcch[9] = {
    /* 0    */ (void*)NULL /* RTTI */,
    /* 1    */ (void*)NULL,
    /* 2    */ (void*)__dt__12dBgS_ObjAcchFv,
    /* 3    */ (void*)NULL,
    /* 4    */ (void*)NULL,
    /* 5    */ (void*)func_80B416C0,
    /* 6    */ (void*)NULL,
    /* 7    */ (void*)NULL,
    /* 8    */ (void*)func_80B416B8,
};

/* 80B42DAC-80B42DB8 000C+00 s=3 e=0 z=0  None .data      __vt__10cCcD_GStts */
SECTION_DATA static void* __vt__10cCcD_GStts[3] = {
    /* 0    */ (void*)NULL /* RTTI */,
    /* 1    */ (void*)NULL,
    /* 2    */ (void*)__dt__10cCcD_GSttsFv,
};

/* 80B42DB8-80B42DC4 000C+00 s=2 e=0 z=0  None .data      __vt__10dCcD_GStts */
SECTION_DATA static void* __vt__10dCcD_GStts[3] = {
    /* 0    */ (void*)NULL /* RTTI */,
    /* 1    */ (void*)NULL,
    /* 2    */ (void*)__dt__10dCcD_GSttsFv,
};

/* 80B42DC4-80B42DD0 000C+00 s=2 e=0 z=0  None .data      __vt__12dBgS_AcchCir */
SECTION_DATA static void* __vt__12dBgS_AcchCir[3] = {
    /* 0    */ (void*)NULL /* RTTI */,
    /* 1    */ (void*)NULL,
    /* 2    */ (void*)__dt__12dBgS_AcchCirFv,
};

/* 80B42DD0-80B42DDC 000C+00 s=4 e=0 z=0  None .data      __vt__18daNpcF_ActorMngr_c */
SECTION_DATA static void* __vt__18daNpcF_ActorMngr_c[3] = {
    /* 0    */ (void*)NULL /* RTTI */,
    /* 1    */ (void*)NULL,
    /* 2    */ (void*)__dt__18daNpcF_ActorMngr_cFv,
};

/* 80B42DDC-80B42DE8 000C+00 s=3 e=0 z=0  None .data      __vt__8cM3dGCyl */
SECTION_DATA static void* __vt__8cM3dGCyl[3] = {
    /* 0    */ (void*)NULL /* RTTI */,
    /* 1    */ (void*)NULL,
    /* 2    */ (void*)__dt__8cM3dGCylFv,
};

/* 80B42DE8-80B42DF4 000C+00 s=3 e=0 z=0  None .data      __vt__8cM3dGAab */
SECTION_DATA static void* __vt__8cM3dGAab[3] = {
    /* 0    */ (void*)NULL /* RTTI */,
    /* 1    */ (void*)NULL,
    /* 2    */ (void*)__dt__8cM3dGAabFv,
};

/* 80B42DF4-80B42E00 000C+00 s=3 e=0 z=0  None .data      __vt__15daNpcF_Lookat_c */
SECTION_DATA static void* __vt__15daNpcF_Lookat_c[3] = {
    /* 0    */ (void*)NULL /* RTTI */,
    /* 1    */ (void*)NULL,
    /* 2    */ (void*)__dt__15daNpcF_Lookat_cFv,
};

/* 80B2F28C-80B2F410 0184+00 s=1 e=0 z=0  None .text      __ct__15daNpcWrestler_cFv */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm daNpcWrestler_c::daNpcWrestler_c() {
    nofralloc
#include "asm/rel/d/a/npc/d_a_npc_wrestler/d_a_npc_wrestler/__ct__15daNpcWrestler_cFv.s"
}
#pragma pop

/* 80B2F410-80B2F458 0048+00 s=1 e=0 z=0  None .text      __dt__8cM3dGCylFv */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm cM3dGCyl::~cM3dGCyl() {
    nofralloc
#include "asm/rel/d/a/npc/d_a_npc_wrestler/d_a_npc_wrestler/__dt__8cM3dGCylFv.s"
}
#pragma pop

/* 80B2F458-80B2F4A0 0048+00 s=1 e=0 z=0  None .text      __dt__8cM3dGAabFv */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm cM3dGAab::~cM3dGAab() {
    nofralloc
#include "asm/rel/d/a/npc/d_a_npc_wrestler/d_a_npc_wrestler/__dt__8cM3dGAabFv.s"
}
#pragma pop

/* 80B2F4A0-80B2F688 01E8+00 s=1 e=0 z=0  None .text      __dt__15daNpcWrestler_cFv */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm daNpcWrestler_c::~daNpcWrestler_c() {
    nofralloc
#include "asm/rel/d/a/npc/d_a_npc_wrestler/d_a_npc_wrestler/__dt__15daNpcWrestler_cFv.s"
}
#pragma pop

/* 80B2F688-80B2F974 02EC+00 s=1 e=0 z=0  None .text      Create__15daNpcWrestler_cFv */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void daNpcWrestler_c::Create() {
    nofralloc
#include "asm/rel/d/a/npc/d_a_npc_wrestler/d_a_npc_wrestler/Create__15daNpcWrestler_cFv.s"
}
#pragma pop

/* 80B2F974-80B2FBF4 0280+00 s=1 e=0 z=0  None .text      CreateHeap__15daNpcWrestler_cFv */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void daNpcWrestler_c::CreateHeap() {
    nofralloc
#include "asm/rel/d/a/npc/d_a_npc_wrestler/d_a_npc_wrestler/CreateHeap__15daNpcWrestler_cFv.s"
}
#pragma pop

/* 80B2FBF4-80B2FC30 003C+00 s=1 e=0 z=0  None .text      __dt__15J3DTevKColorAnmFv */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm J3DTevKColorAnm::~J3DTevKColorAnm() {
    nofralloc
#include "asm/rel/d/a/npc/d_a_npc_wrestler/d_a_npc_wrestler/__dt__15J3DTevKColorAnmFv.s"
}
#pragma pop

/* 80B2FC30-80B2FC48 0018+00 s=1 e=0 z=0  None .text      __ct__15J3DTevKColorAnmFv */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm J3DTevKColorAnm::J3DTevKColorAnm() {
    nofralloc
#include "asm/rel/d/a/npc/d_a_npc_wrestler/d_a_npc_wrestler/__ct__15J3DTevKColorAnmFv.s"
}
#pragma pop

/* 80B2FC48-80B2FC84 003C+00 s=1 e=0 z=0  None .text      __dt__14J3DTevColorAnmFv */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm J3DTevColorAnm::~J3DTevColorAnm() {
    nofralloc
#include "asm/rel/d/a/npc/d_a_npc_wrestler/d_a_npc_wrestler/__dt__14J3DTevColorAnmFv.s"
}
#pragma pop

/* 80B2FC84-80B2FC9C 0018+00 s=1 e=0 z=0  None .text      __ct__14J3DTevColorAnmFv */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm J3DTevColorAnm::J3DTevColorAnm() {
    nofralloc
#include "asm/rel/d/a/npc/d_a_npc_wrestler/d_a_npc_wrestler/__ct__14J3DTevColorAnmFv.s"
}
#pragma pop

/* 80B2FC9C-80B2FCE4 0048+00 s=1 e=0 z=0  None .text      __dt__11J3DTexNoAnmFv */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm J3DTexNoAnm::~J3DTexNoAnm() {
    nofralloc
#include "asm/rel/d/a/npc/d_a_npc_wrestler/d_a_npc_wrestler/__dt__11J3DTexNoAnmFv.s"
}
#pragma pop

/* 80B2FCE4-80B2FD08 0024+00 s=1 e=0 z=0  None .text      __ct__11J3DTexNoAnmFv */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm J3DTexNoAnm::J3DTexNoAnm() {
    nofralloc
#include "asm/rel/d/a/npc/d_a_npc_wrestler/d_a_npc_wrestler/__ct__11J3DTexNoAnmFv.s"
}
#pragma pop

/* 80B2FD08-80B2FD44 003C+00 s=1 e=0 z=0  None .text      __dt__12J3DTexMtxAnmFv */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm J3DTexMtxAnm::~J3DTexMtxAnm() {
    nofralloc
#include "asm/rel/d/a/npc/d_a_npc_wrestler/d_a_npc_wrestler/__dt__12J3DTexMtxAnmFv.s"
}
#pragma pop

/* 80B2FD44-80B2FD5C 0018+00 s=1 e=0 z=0  None .text      __ct__12J3DTexMtxAnmFv */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm J3DTexMtxAnm::J3DTexMtxAnm() {
    nofralloc
#include "asm/rel/d/a/npc/d_a_npc_wrestler/d_a_npc_wrestler/__ct__12J3DTexMtxAnmFv.s"
}
#pragma pop

/* 80B2FD5C-80B2FD98 003C+00 s=1 e=0 z=0  None .text      __dt__14J3DMatColorAnmFv */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm J3DMatColorAnm::~J3DMatColorAnm() {
    nofralloc
#include "asm/rel/d/a/npc/d_a_npc_wrestler/d_a_npc_wrestler/__dt__14J3DMatColorAnmFv.s"
}
#pragma pop

/* 80B2FD98-80B2FDB0 0018+00 s=1 e=0 z=0  None .text      __ct__14J3DMatColorAnmFv */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm J3DMatColorAnm::J3DMatColorAnm() {
    nofralloc
#include "asm/rel/d/a/npc/d_a_npc_wrestler/d_a_npc_wrestler/__ct__14J3DMatColorAnmFv.s"
}
#pragma pop

/* 80B2FDB0-80B2FDE4 0034+00 s=1 e=0 z=0  None .text      Delete__15daNpcWrestler_cFv */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void daNpcWrestler_c::Delete() {
    nofralloc
#include "asm/rel/d/a/npc/d_a_npc_wrestler/d_a_npc_wrestler/Delete__15daNpcWrestler_cFv.s"
}
#pragma pop

/* 80B2FDE4-80B2FE1C 0038+00 s=2 e=0 z=0  None .text      Execute__15daNpcWrestler_cFv */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void daNpcWrestler_c::Execute() {
    nofralloc
#include "asm/rel/d/a/npc/d_a_npc_wrestler/d_a_npc_wrestler/Execute__15daNpcWrestler_cFv.s"
}
#pragma pop

/* 80B2FE1C-80B2FE84 0068+00 s=1 e=0 z=0  None .text      Draw__15daNpcWrestler_cFv */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void daNpcWrestler_c::Draw() {
    nofralloc
#include "asm/rel/d/a/npc/d_a_npc_wrestler/d_a_npc_wrestler/Draw__15daNpcWrestler_cFv.s"
}
#pragma pop

/* 80B2FE84-80B30150 02CC+00 s=1 e=0 z=0  None .text
 * ctrlJoint__15daNpcWrestler_cFP8J3DJointP8J3DModel            */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void daNpcWrestler_c::ctrlJoint(J3DJoint* param_0, J3DModel* param_1) {
    nofralloc
#include "asm/rel/d/a/npc/d_a_npc_wrestler/d_a_npc_wrestler/ctrlJoint__15daNpcWrestler_cFP8J3DJointP8J3DModel.s"
}
#pragma pop

/* 80B30150-80B30170 0020+00 s=1 e=0 z=0  None .text
 * createHeapCallBack__15daNpcWrestler_cFP10fopAc_ac_c          */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void daNpcWrestler_c::createHeapCallBack(fopAc_ac_c* param_0) {
    nofralloc
#include "asm/rel/d/a/npc/d_a_npc_wrestler/d_a_npc_wrestler/createHeapCallBack__15daNpcWrestler_cFP10fopAc_ac_c.s"
}
#pragma pop

/* 80B30170-80B301BC 004C+00 s=1 e=0 z=0  None .text
 * ctrlJointCallBack__15daNpcWrestler_cFP8J3DJointi             */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void daNpcWrestler_c::ctrlJointCallBack(J3DJoint* param_0, int param_1) {
    nofralloc
#include "asm/rel/d/a/npc/d_a_npc_wrestler/d_a_npc_wrestler/ctrlJointCallBack__15daNpcWrestler_cFP8J3DJointi.s"
}
#pragma pop

/* 80B301BC-80B3023C 0080+00 s=0 e=0 z=1  None .text      checkStartUp__15daNpcWrestler_cFv */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void daNpcWrestler_c::checkStartUp() {
    nofralloc
#include "asm/rel/d/a/npc/d_a_npc_wrestler/d_a_npc_wrestler/checkStartUp__15daNpcWrestler_cFv.s"
}
#pragma pop

/* 80B3023C-80B30654 0418+00 s=2 e=0 z=0  None .text      setExpressionAnm__15daNpcWrestler_cFib */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void daNpcWrestler_c::setExpressionAnm(int param_0, bool param_1) {
    nofralloc
#include "asm/rel/d/a/npc/d_a_npc_wrestler/d_a_npc_wrestler/setExpressionAnm__15daNpcWrestler_cFib.s"
}
#pragma pop

/* 80B30654-80B3074C 00F8+00 s=1 e=0 z=0  None .text      setExpressionBtp__15daNpcWrestler_cFi */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void daNpcWrestler_c::setExpressionBtp(int param_0) {
    nofralloc
#include "asm/rel/d/a/npc/d_a_npc_wrestler/d_a_npc_wrestler/setExpressionBtp__15daNpcWrestler_cFi.s"
}
#pragma pop

/* 80B3074C-80B308B0 0164+00 s=1 e=0 z=0  None .text      setMotionAnm__15daNpcWrestler_cFif */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void daNpcWrestler_c::setMotionAnm(int param_0, f32 param_1) {
    nofralloc
#include "asm/rel/d/a/npc/d_a_npc_wrestler/d_a_npc_wrestler/setMotionAnm__15daNpcWrestler_cFif.s"
}
#pragma pop

/* 80B308B0-80B30AD8 0228+00 s=1 e=0 z=0  None .text      reset__15daNpcWrestler_cFv */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void daNpcWrestler_c::reset() {
    nofralloc
#include "asm/rel/d/a/npc/d_a_npc_wrestler/d_a_npc_wrestler/reset__15daNpcWrestler_cFv.s"
}
#pragma pop

/* 80B30AD8-80B30B80 00A8+00 s=1 e=0 z=0  None .text
 * setAction__15daNpcWrestler_cFM15daNpcWrestler_cFPCvPvPv_b    */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void daNpcWrestler_c::setAction(bool (daNpcWrestler_c::*)(void*)) {
    nofralloc
#include "asm/rel/d/a/npc/d_a_npc_wrestler/d_a_npc_wrestler/setAction__15daNpcWrestler_cFM15daNpcWrestler_cFPCvPvPv_b.s"
}
#pragma pop

/* 80B30B80-80B30BEC 006C+00 s=1 e=0 z=0  None .text      s_sub1__FPvPv */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm static void s_sub1(void* param_0, void* param_1) {
    nofralloc
#include "asm/rel/d/a/npc/d_a_npc_wrestler/d_a_npc_wrestler/s_sub1__FPvPv.s"
}
#pragma pop

/* 80B30BEC-80B30CA4 00B8+00 s=2 e=0 z=0  None .text      checkArenaInfo__15daNpcWrestler_cFv */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void daNpcWrestler_c::checkArenaInfo() {
    nofralloc
#include "asm/rel/d/a/npc/d_a_npc_wrestler/d_a_npc_wrestler/checkArenaInfo__15daNpcWrestler_cFv.s"
}
#pragma pop

/* 80B30CA4-80B30CC8 0024+00 s=1 e=0 z=0  None .text
 * checkArenaSub__15daNpcWrestler_cFP10fopAc_ac_c               */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void daNpcWrestler_c::checkArenaSub(fopAc_ac_c* param_0) {
    nofralloc
#include "asm/rel/d/a/npc/d_a_npc_wrestler/d_a_npc_wrestler/checkArenaSub__15daNpcWrestler_cFP10fopAc_ac_c.s"
}
#pragma pop

/* 80B30CC8-80B30D48 0080+00 s=1 e=0 z=0  None .text      s_sub2__FPvPv */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm static void s_sub2(void* param_0, void* param_1) {
    nofralloc
#include "asm/rel/d/a/npc/d_a_npc_wrestler/d_a_npc_wrestler/s_sub2__FPvPv.s"
}
#pragma pop

/* 80B30D48-80B30F00 01B8+00 s=2 e=0 z=0  None .text      setOnToArena__15daNpcWrestler_cFf */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void daNpcWrestler_c::setOnToArena(f32 param_0) {
    nofralloc
#include "asm/rel/d/a/npc/d_a_npc_wrestler/d_a_npc_wrestler/setOnToArena__15daNpcWrestler_cFf.s"
}
#pragma pop

/* 80B30F00-80B31680 0780+00 s=13 e=0 z=0  None .text      wait__15daNpcWrestler_cFPv */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void daNpcWrestler_c::wait(void* param_0) {
    nofralloc
#include "asm/rel/d/a/npc/d_a_npc_wrestler/d_a_npc_wrestler/wait__15daNpcWrestler_cFPv.s"
}
#pragma pop

/* 80B31680-80B316C8 0048+00 s=1 e=0 z=0  None .text      setMotion__15daNpcWrestler_cFifi */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void daNpcWrestler_c::setMotion(int param_0, f32 param_1, int param_2) {
    nofralloc
#include "asm/rel/d/a/npc/d_a_npc_wrestler/d_a_npc_wrestler/setMotion__15daNpcWrestler_cFifi.s"
}
#pragma pop

/* 80B316C8-80B316F4 002C+00 s=1 e=0 z=0  None .text      setExpression__15daNpcWrestler_cFif */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void daNpcWrestler_c::setExpression(int param_0, f32 param_1) {
    nofralloc
#include "asm/rel/d/a/npc/d_a_npc_wrestler/d_a_npc_wrestler/setExpression__15daNpcWrestler_cFif.s"
}
#pragma pop

/* 80B316F4-80B31EB0 07BC+00 s=3 e=0 z=0  None .text      talk__15daNpcWrestler_cFPv */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void daNpcWrestler_c::talk(void* param_0) {
    nofralloc
#include "asm/rel/d/a/npc/d_a_npc_wrestler/d_a_npc_wrestler/talk__15daNpcWrestler_cFPv.s"
}
#pragma pop

/* 80B31EB0-80B32058 01A8+00 s=4 e=0 z=0  None .text      demo__15daNpcWrestler_cFPv */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void daNpcWrestler_c::demo(void* param_0) {
    nofralloc
#include "asm/rel/d/a/npc/d_a_npc_wrestler/d_a_npc_wrestler/demo__15daNpcWrestler_cFPv.s"
}
#pragma pop

/* 80B32058-80B32444 03EC+00 s=7 e=0 z=0  None .text      gotoArena__15daNpcWrestler_cFPv */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void daNpcWrestler_c::gotoArena(void* param_0) {
    nofralloc
#include "asm/rel/d/a/npc/d_a_npc_wrestler/d_a_npc_wrestler/gotoArena__15daNpcWrestler_cFPv.s"
}
#pragma pop

/* 80B32444-80B32850 040C+00 s=1 e=0 z=0  None .text      gotoLiving__15daNpcWrestler_cFPv */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void daNpcWrestler_c::gotoLiving(void* param_0) {
    nofralloc
#include "asm/rel/d/a/npc/d_a_npc_wrestler/d_a_npc_wrestler/gotoLiving__15daNpcWrestler_cFPv.s"
}
#pragma pop

/* 80B32850-80B331CC 097C+00 s=2 e=0 z=0  None .text      sumouReady__15daNpcWrestler_cFPv */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void daNpcWrestler_c::sumouReady(void* param_0) {
    nofralloc
#include "asm/rel/d/a/npc/d_a_npc_wrestler/d_a_npc_wrestler/sumouReady__15daNpcWrestler_cFPv.s"
}
#pragma pop

/* 80B331CC-80B339EC 0820+00 s=14 e=0 z=0  None .text      sumouWait__15daNpcWrestler_cFPv */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void daNpcWrestler_c::sumouWait(void* param_0) {
    nofralloc
#include "asm/rel/d/a/npc/d_a_npc_wrestler/d_a_npc_wrestler/sumouWait__15daNpcWrestler_cFPv.s"
}
#pragma pop

/* 80B339EC-80B33B3C 0150+00 s=13 e=0 z=0  None .text      checkOutOfArenaP__15daNpcWrestler_cFv */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void daNpcWrestler_c::checkOutOfArenaP() {
    nofralloc
#include "asm/rel/d/a/npc/d_a_npc_wrestler/d_a_npc_wrestler/checkOutOfArenaP__15daNpcWrestler_cFv.s"
}
#pragma pop

/* 80B33B3C-80B34654 0B18+00 s=1 e=0 z=0  None .text      setNextAction__15daNpcWrestler_cFv */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void daNpcWrestler_c::setNextAction() {
    nofralloc
#include "asm/rel/d/a/npc/d_a_npc_wrestler/d_a_npc_wrestler/setNextAction__15daNpcWrestler_cFv.s"
}
#pragma pop

/* 80B34654-80B34CD0 067C+00 s=2 e=0 z=0  None .text      sumouPunchHit__15daNpcWrestler_cFPv */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void daNpcWrestler_c::sumouPunchHit(void* param_0) {
    nofralloc
#include "asm/rel/d/a/npc/d_a_npc_wrestler/d_a_npc_wrestler/sumouPunchHit__15daNpcWrestler_cFPv.s"
}
#pragma pop

/* 80B34CD0-80B35364 0694+00 s=2 e=0 z=0  None .text      sumouPunchChaseHit__15daNpcWrestler_cFPv
 */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void daNpcWrestler_c::sumouPunchChaseHit(void* param_0) {
    nofralloc
#include "asm/rel/d/a/npc/d_a_npc_wrestler/d_a_npc_wrestler/sumouPunchChaseHit__15daNpcWrestler_cFPv.s"
}
#pragma pop

/* 80B35364-80B35780 041C+00 s=1 e=0 z=0  None .text      sumouPunchMiss__15daNpcWrestler_cFPv */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void daNpcWrestler_c::sumouPunchMiss(void* param_0) {
    nofralloc
#include "asm/rel/d/a/npc/d_a_npc_wrestler/d_a_npc_wrestler/sumouPunchMiss__15daNpcWrestler_cFPv.s"
}
#pragma pop

/* 80B35780-80B358F0 0170+00 s=8 e=0 z=0  None .text      checkOutOfArenaW__15daNpcWrestler_cFv */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void daNpcWrestler_c::checkOutOfArenaW() {
    nofralloc
#include "asm/rel/d/a/npc/d_a_npc_wrestler/d_a_npc_wrestler/checkOutOfArenaW__15daNpcWrestler_cFv.s"
}
#pragma pop

/* 80B358F0-80B35968 0078+00 s=4 e=0 z=0  None .text      getJointPos__15daNpcWrestler_cFi */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void daNpcWrestler_c::getJointPos(int param_0) {
    nofralloc
#include "asm/rel/d/a/npc/d_a_npc_wrestler/d_a_npc_wrestler/getJointPos__15daNpcWrestler_cFi.s"
}
#pragma pop

/* 80B35968-80B3606C 0704+00 s=2 e=0 z=0  None .text      sumouPunchDraw__15daNpcWrestler_cFPv */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void daNpcWrestler_c::sumouPunchDraw(void* param_0) {
    nofralloc
#include "asm/rel/d/a/npc/d_a_npc_wrestler/d_a_npc_wrestler/sumouPunchDraw__15daNpcWrestler_cFPv.s"
}
#pragma pop

/* 80B3606C-80B36908 089C+00 s=5 e=0 z=0  None .text      sumouTackleHit__15daNpcWrestler_cFPv */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void daNpcWrestler_c::sumouTackleHit(void* param_0) {
    nofralloc
#include "asm/rel/d/a/npc/d_a_npc_wrestler/d_a_npc_wrestler/sumouTackleHit__15daNpcWrestler_cFPv.s"
}
#pragma pop

/* 80B36908-80B36C8C 0384+00 s=2 e=0 z=0  None .text      sumouTackleMiss__15daNpcWrestler_cFPv */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void daNpcWrestler_c::sumouTackleMiss(void* param_0) {
    nofralloc
#include "asm/rel/d/a/npc/d_a_npc_wrestler/d_a_npc_wrestler/sumouTackleMiss__15daNpcWrestler_cFPv.s"
}
#pragma pop

/* 80B36C8C-80B37270 05E4+00 s=2 e=0 z=0  None .text      sumouTackleDraw__15daNpcWrestler_cFPv */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void daNpcWrestler_c::sumouTackleDraw(void* param_0) {
    nofralloc
#include "asm/rel/d/a/npc/d_a_npc_wrestler/d_a_npc_wrestler/sumouTackleDraw__15daNpcWrestler_cFPv.s"
}
#pragma pop

/* 80B37270-80B378F4 0684+00 s=4 e=0 z=0  None .text      sumouSideStep__15daNpcWrestler_cFPv */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void daNpcWrestler_c::sumouSideStep(void* param_0) {
    nofralloc
#include "asm/rel/d/a/npc/d_a_npc_wrestler/d_a_npc_wrestler/sumouSideStep__15daNpcWrestler_cFPv.s"
}
#pragma pop

/* 80B378F4-80B37C30 033C+00 s=1 e=0 z=0  None .text      sumouLostBalance__15daNpcWrestler_cFPv */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void daNpcWrestler_c::sumouLostBalance(void* param_0) {
    nofralloc
#include "asm/rel/d/a/npc/d_a_npc_wrestler/d_a_npc_wrestler/sumouLostBalance__15daNpcWrestler_cFPv.s"
}
#pragma pop

/* 80B37C30-80B37FB8 0388+00 s=4 e=0 z=0  None .text      sumouPunchShock__15daNpcWrestler_cFPv */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void daNpcWrestler_c::sumouPunchShock(void* param_0) {
    nofralloc
#include "asm/rel/d/a/npc/d_a_npc_wrestler/d_a_npc_wrestler/sumouPunchShock__15daNpcWrestler_cFPv.s"
}
#pragma pop

/* 80B37FB8-80B38518 0560+00 s=2 e=0 z=0  None .text      sumouPunchChaseShock__15daNpcWrestler_cFPv
 */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void daNpcWrestler_c::sumouPunchChaseShock(void* param_0) {
    nofralloc
#include "asm/rel/d/a/npc/d_a_npc_wrestler/d_a_npc_wrestler/sumouPunchChaseShock__15daNpcWrestler_cFPv.s"
}
#pragma pop

/* 80B38518-80B389A4 048C+00 s=2 e=0 z=0  None .text      sumouPunchStagger__15daNpcWrestler_cFPv */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void daNpcWrestler_c::sumouPunchStagger(void* param_0) {
    nofralloc
#include "asm/rel/d/a/npc/d_a_npc_wrestler/d_a_npc_wrestler/sumouPunchStagger__15daNpcWrestler_cFPv.s"
}
#pragma pop

/* 80B389A4-80B38C90 02EC+00 s=4 e=0 z=0  None .text      sumouTackleShock__15daNpcWrestler_cFPv */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void daNpcWrestler_c::sumouTackleShock(void* param_0) {
    nofralloc
#include "asm/rel/d/a/npc/d_a_npc_wrestler/d_a_npc_wrestler/sumouTackleShock__15daNpcWrestler_cFPv.s"
}
#pragma pop

/* 80B38C90-80B39334 06A4+00 s=2 e=0 z=0  None .text      sumouTackleStagger__15daNpcWrestler_cFPv
 */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void daNpcWrestler_c::sumouTackleStagger(void* param_0) {
    nofralloc
#include "asm/rel/d/a/npc/d_a_npc_wrestler/d_a_npc_wrestler/sumouTackleStagger__15daNpcWrestler_cFPv.s"
}
#pragma pop

/* 80B39334-80B39554 0220+00 s=1 e=0 z=0  None .text
 * sumouTackleStaggerRelease__15daNpcWrestler_cFPv              */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void daNpcWrestler_c::sumouTackleStaggerRelease(void* param_0) {
    nofralloc
#include "asm/rel/d/a/npc/d_a_npc_wrestler/d_a_npc_wrestler/sumouTackleStaggerRelease__15daNpcWrestler_cFPv.s"
}
#pragma pop

/* 80B39554-80B39C18 06C4+00 s=1 e=0 z=0  None .text      sumouTacklePush__15daNpcWrestler_cFPv */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void daNpcWrestler_c::sumouTacklePush(void* param_0) {
    nofralloc
#include "asm/rel/d/a/npc/d_a_npc_wrestler/d_a_npc_wrestler/sumouTacklePush__15daNpcWrestler_cFPv.s"
}
#pragma pop

/* 80B39C18-80B39F88 0370+00 s=1 e=0 z=0  None .text      sumouTackleRelease__15daNpcWrestler_cFPv
 */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void daNpcWrestler_c::sumouTackleRelease(void* param_0) {
    nofralloc
#include "asm/rel/d/a/npc/d_a_npc_wrestler/d_a_npc_wrestler/sumouTackleRelease__15daNpcWrestler_cFPv.s"
}
#pragma pop

/* 80B39F88-80B3AE24 0E9C+00 s=2 e=0 z=0  None .text      demoSumouReady__15daNpcWrestler_cFPv */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void daNpcWrestler_c::demoSumouReady(void* param_0) {
    nofralloc
#include "asm/rel/d/a/npc/d_a_npc_wrestler/d_a_npc_wrestler/demoSumouReady__15daNpcWrestler_cFPv.s"
}
#pragma pop

/* 80B3AE24-80B3B4B4 0690+00 s=2 e=0 z=0  None .text      demoSumouWin__15daNpcWrestler_cFPv */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void daNpcWrestler_c::demoSumouWin(void* param_0) {
    nofralloc
#include "asm/rel/d/a/npc/d_a_npc_wrestler/d_a_npc_wrestler/demoSumouWin__15daNpcWrestler_cFPv.s"
}
#pragma pop

/* 80B3B4B4-80B3BC84 07D0+00 s=3 e=0 z=0  None .text      demoSumouLose__15daNpcWrestler_cFPv */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void daNpcWrestler_c::demoSumouLose(void* param_0) {
    nofralloc
#include "asm/rel/d/a/npc/d_a_npc_wrestler/d_a_npc_wrestler/demoSumouLose__15daNpcWrestler_cFPv.s"
}
#pragma pop

/* 80B3BC84-80B3C278 05F4+00 s=11 e=0 z=0  None .text      demoSumouWin2__15daNpcWrestler_cFPv */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void daNpcWrestler_c::demoSumouWin2(void* param_0) {
    nofralloc
#include "asm/rel/d/a/npc/d_a_npc_wrestler/d_a_npc_wrestler/demoSumouWin2__15daNpcWrestler_cFPv.s"
}
#pragma pop

/* 80B3C278-80B3CA2C 07B4+00 s=5 e=0 z=0  None .text      demoSumouLose2__15daNpcWrestler_cFPv */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void daNpcWrestler_c::demoSumouLose2(void* param_0) {
    nofralloc
#include "asm/rel/d/a/npc/d_a_npc_wrestler/d_a_npc_wrestler/demoSumouLose2__15daNpcWrestler_cFPv.s"
}
#pragma pop

/* 80B3CA2C-80B3D0C0 0694+00 s=4 e=0 z=0  None .text demoSumouUnilateralWin__15daNpcWrestler_cFPv
 */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void daNpcWrestler_c::demoSumouUnilateralWin(void* param_0) {
    nofralloc
#include "asm/rel/d/a/npc/d_a_npc_wrestler/d_a_npc_wrestler/demoSumouUnilateralWin__15daNpcWrestler_cFPv.s"
}
#pragma pop

/* 80B3D0C0-80B3D584 04C4+00 s=2 e=0 z=0  None .text      demoTalkAfterLose__15daNpcWrestler_cFPv */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void daNpcWrestler_c::demoTalkAfterLose(void* param_0) {
    nofralloc
#include "asm/rel/d/a/npc/d_a_npc_wrestler/d_a_npc_wrestler/demoTalkAfterLose__15daNpcWrestler_cFPv.s"
}
#pragma pop

/* 80B3D584-80B3DB50 05CC+00 s=3 e=0 z=0  None .text      EvCut_grDSEntry__15daNpcWrestler_cFi */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void daNpcWrestler_c::EvCut_grDSEntry(int param_0) {
    nofralloc
#include "asm/rel/d/a/npc/d_a_npc_wrestler/d_a_npc_wrestler/EvCut_grDSEntry__15daNpcWrestler_cFi.s"
}
#pragma pop

/* 80B3DB50-80B3DCE8 0198+00 s=1 e=0 z=0  None .text      EvCut_grDSEntry2__15daNpcWrestler_cFi */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void daNpcWrestler_c::EvCut_grDSEntry2(int param_0) {
    nofralloc
#include "asm/rel/d/a/npc/d_a_npc_wrestler/d_a_npc_wrestler/EvCut_grDSEntry2__15daNpcWrestler_cFi.s"
}
#pragma pop

/* 80B3DCE8-80B3E0FC 0414+00 s=2 e=0 z=0  None .text      EvCut_grDSEntry3_4__15daNpcWrestler_cFi */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void daNpcWrestler_c::EvCut_grDSEntry3_4(int param_0) {
    nofralloc
#include "asm/rel/d/a/npc/d_a_npc_wrestler/d_a_npc_wrestler/EvCut_grDSEntry3_4__15daNpcWrestler_cFi.s"
}
#pragma pop

/* 80B3E0FC-80B3E584 0488+00 s=1 e=0 z=0  None .text      EvCut_grDSEntry5__15daNpcWrestler_cFi */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void daNpcWrestler_c::EvCut_grDSEntry5(int param_0) {
    nofralloc
#include "asm/rel/d/a/npc/d_a_npc_wrestler/d_a_npc_wrestler/EvCut_grDSEntry5__15daNpcWrestler_cFi.s"
}
#pragma pop

/* 80B3E584-80B3EA2C 04A8+00 s=1 e=0 z=0  None .text      EvCut_grDSLose__15daNpcWrestler_cFi */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void daNpcWrestler_c::EvCut_grDSLose(int param_0) {
    nofralloc
#include "asm/rel/d/a/npc/d_a_npc_wrestler/d_a_npc_wrestler/EvCut_grDSLose__15daNpcWrestler_cFi.s"
}
#pragma pop

/* 80B3EA2C-80B3EA4C 0020+00 s=1 e=0 z=0  None .text      daNpcWrestler_Create__FPv */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm static void daNpcWrestler_Create(void* param_0) {
    nofralloc
#include "asm/rel/d/a/npc/d_a_npc_wrestler/d_a_npc_wrestler/daNpcWrestler_Create__FPv.s"
}
#pragma pop

/* 80B3EA4C-80B3EA6C 0020+00 s=1 e=0 z=0  None .text      daNpcWrestler_Delete__FPv */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm static void daNpcWrestler_Delete(void* param_0) {
    nofralloc
#include "asm/rel/d/a/npc/d_a_npc_wrestler/d_a_npc_wrestler/daNpcWrestler_Delete__FPv.s"
}
#pragma pop

/* 80B3EA6C-80B3EA8C 0020+00 s=1 e=0 z=0  None .text      daNpcWrestler_Execute__FPv */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm static void daNpcWrestler_Execute(void* param_0) {
    nofralloc
#include "asm/rel/d/a/npc/d_a_npc_wrestler/d_a_npc_wrestler/daNpcWrestler_Execute__FPv.s"
}
#pragma pop

/* 80B3EA8C-80B3EAAC 0020+00 s=1 e=0 z=0  None .text      daNpcWrestler_Draw__FPv */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm static void daNpcWrestler_Draw(void* param_0) {
    nofralloc
#include "asm/rel/d/a/npc/d_a_npc_wrestler/d_a_npc_wrestler/daNpcWrestler_Draw__FPv.s"
}
#pragma pop

/* 80B3EAAC-80B3EAB4 0008+00 s=1 e=0 z=0  None .text      daNpcWrestler_IsDelete__FPv */
static bool daNpcWrestler_IsDelete(void* param_0) {
    return true;
}

/* 80B3EAB4-80B3EAE4 0030+00 s=1 e=0 z=0  None .text      calc__11J3DTexNoAnmCFPUs */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void J3DTexNoAnm::calc(u16* param_0) const {
    nofralloc
#include "asm/rel/d/a/npc/d_a_npc_wrestler/d_a_npc_wrestler/calc__11J3DTexNoAnmCFPUs.s"
}
#pragma pop

/* 80B3EAE4-80B3EB94 00B0+00 s=1 e=0 z=0  None .text      setParam__15daNpcWrestler_cFv */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void daNpcWrestler_c::setParam() {
    nofralloc
#include "asm/rel/d/a/npc/d_a_npc_wrestler/d_a_npc_wrestler/setParam__15daNpcWrestler_cFv.s"
}
#pragma pop

/* 80B3EB94-80B3EF10 037C+00 s=1 e=0 z=0  None .text      main__15daNpcWrestler_cFv */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void daNpcWrestler_c::main() {
    nofralloc
#include "asm/rel/d/a/npc/d_a_npc_wrestler/d_a_npc_wrestler/main__15daNpcWrestler_cFv.s"
}
#pragma pop

/* 80B3EF10-80B3FCE8 0DD8+00 s=1 e=0 z=0  None .text      setWrestlerVoice__15daNpcWrestler_cFv */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void daNpcWrestler_c::setWrestlerVoice() {
    nofralloc
#include "asm/rel/d/a/npc/d_a_npc_wrestler/d_a_npc_wrestler/setWrestlerVoice__15daNpcWrestler_cFv.s"
}
#pragma pop

/* 80B3FCE8-80B404FC 0814+00 s=2 e=1 z=0  None .text      playMotion__15daNpcWrestler_cFv */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void daNpcWrestler_c::playMotion() {
    nofralloc
#include "asm/rel/d/a/npc/d_a_npc_wrestler/d_a_npc_wrestler/playMotion__15daNpcWrestler_cFv.s"
}
#pragma pop

/* 80B404FC-80B405E8 00EC+00 s=1 e=0 z=0  None .text      ctrlBtk__15daNpcWrestler_cFv */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void daNpcWrestler_c::ctrlBtk() {
    nofralloc
#include "asm/rel/d/a/npc/d_a_npc_wrestler/d_a_npc_wrestler/ctrlBtk__15daNpcWrestler_cFv.s"
}
#pragma pop

/* ############################################################################################## */
/* 80B42E18-80B42E24 000C+00 s=1 e=0 z=0  None .bss       @3974 */
static u8 lit_3974[12];

/* 80B42E24-80B42E28 0004+00 s=1 e=0 z=0  None .bss       l_HIO */
static u8 l_HIO[4];

/* 80B42E28-80B42E34 000C+00 s=1 e=0 z=0  None .bss       @4628 */
static u8 lit_4628[12];

/* 80B42E34-80B42E38 0004+00 s=1 e=0 z=0  None .bss       None */
static u8 data_80B42E34[4];

/* 80B42E38-80B42E44 000C+00 s=1 e=0 z=0  None .bss
 * eyeOffset$localstatic3$setAttnPos__15daNpcWrestler_cFv       */
static u8 data_80B42E38[12];

/* 80B405E8-80B40B3C 0554+00 s=1 e=0 z=0  None .text      setAttnPos__15daNpcWrestler_cFv */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void daNpcWrestler_c::setAttnPos() {
    nofralloc
#include "asm/rel/d/a/npc/d_a_npc_wrestler/d_a_npc_wrestler/setAttnPos__15daNpcWrestler_cFv.s"
}
#pragma pop

/* 80B40B3C-80B40D1C 01E0+00 s=1 e=0 z=0  None .text      lookat__15daNpcWrestler_cFv */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void daNpcWrestler_c::lookat() {
    nofralloc
#include "asm/rel/d/a/npc/d_a_npc_wrestler/d_a_npc_wrestler/lookat__15daNpcWrestler_cFv.s"
}
#pragma pop

/* 80B40D1C-80B40D24 0008+00 s=1 e=0 z=0  None .text      drawDbgInfo__15daNpcWrestler_cFv */
bool daNpcWrestler_c::drawDbgInfo() {
    return false;
}

/* 80B40D24-80B40D28 0004+00 s=1 e=0 z=0  None .text      drawOtherMdls__15daNpcWrestler_cFv */
void daNpcWrestler_c::drawOtherMdls() {
    /* empty function */
}

/* 80B40D28-80B40D34 000C+00 s=2 e=0 z=0  None .text      sinShort__Q25JMath18TSinCosTable<13,f>CFs
 */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void JMath::TSinCosTable__template0::sinShort(s16 param_0) const {
    nofralloc
#include "asm/rel/d/a/npc/d_a_npc_wrestler/d_a_npc_wrestler/func_80B40D28.s"
}
#pragma pop

/* ############################################################################################## */
/* 80B42E00-80B42E0C 000C+00 s=2 e=0 z=0  None .data      __vt__21daNpcWrestler_Param_c */
SECTION_DATA static void* __vt__21daNpcWrestler_Param_c[3] = {
    /* 0    */ (void*)NULL /* RTTI */,
    /* 1    */ (void*)NULL,
    /* 2    */ (void*)__dt__21daNpcWrestler_Param_cFv,
};

/* 80B40D34-80B40E38 0104+00 s=0 e=1 z=0  None .text      __sinit_d_a_npc_wrestler_cpp */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
extern "C" asm void __sinit_d_a_npc_wrestler_cpp() {
    nofralloc
#include "asm/rel/d/a/npc/d_a_npc_wrestler/d_a_npc_wrestler/__sinit_d_a_npc_wrestler_cpp.s"
}
#pragma pop

/* 80B40E38-80B40E80 0048+00 s=5 e=0 z=0  None .text      __dt__18daNpcF_ActorMngr_cFv */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm daNpcF_ActorMngr_c::~daNpcF_ActorMngr_c() {
    nofralloc
#include "asm/rel/d/a/npc/d_a_npc_wrestler/d_a_npc_wrestler/__dt__18daNpcF_ActorMngr_cFv.s"
}
#pragma pop

/* 80B40E80-80B40EBC 003C+00 s=2 e=0 z=0  None .text      __ct__18daNpcF_ActorMngr_cFv */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm daNpcF_ActorMngr_c::daNpcF_ActorMngr_c() {
    nofralloc
#include "asm/rel/d/a/npc/d_a_npc_wrestler/d_a_npc_wrestler/__ct__18daNpcF_ActorMngr_cFv.s"
}
#pragma pop

/* 80B40EBC-80B40F8C 00D0+00 s=1 e=0 z=0  None .text      __dt__15daNpcF_Lookat_cFv */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm daNpcF_Lookat_c::~daNpcF_Lookat_c() {
    nofralloc
#include "asm/rel/d/a/npc/d_a_npc_wrestler/d_a_npc_wrestler/__dt__15daNpcF_Lookat_cFv.s"
}
#pragma pop

/* 80B40F8C-80B40FC8 003C+00 s=5 e=0 z=0  None .text      __dt__5csXyzFv */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm csXyz::~csXyz() {
    nofralloc
#include "asm/rel/d/a/npc/d_a_npc_wrestler/d_a_npc_wrestler/__dt__5csXyzFv.s"
}
#pragma pop

/* 80B40FC8-80B40FCC 0004+00 s=2 e=0 z=0  None .text      __ct__5csXyzFv */
csXyz::csXyz() {
    /* empty function */
}

/* 80B40FCC-80B41008 003C+00 s=6 e=0 z=0  None .text      __dt__4cXyzFv */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm cXyz::~cXyz() {
    nofralloc
#include "asm/rel/d/a/npc/d_a_npc_wrestler/d_a_npc_wrestler/__dt__4cXyzFv.s"
}
#pragma pop

/* 80B41008-80B4100C 0004+00 s=2 e=0 z=0  None .text      __ct__4cXyzFv */
cXyz::cXyz() {
    /* empty function */
}

/* 80B4100C-80B41258 024C+00 s=1 e=0 z=0  None .text      __dt__8daNpcF_cFv */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm daNpcF_c::~daNpcF_c() {
    nofralloc
#include "asm/rel/d/a/npc/d_a_npc_wrestler/d_a_npc_wrestler/__dt__8daNpcF_cFv.s"
}
#pragma pop

/* 80B41258-80B41448 01F0+00 s=1 e=0 z=0  None .text      __ct__8daNpcF_cFv */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm daNpcF_c::daNpcF_c() {
    nofralloc
#include "asm/rel/d/a/npc/d_a_npc_wrestler/d_a_npc_wrestler/__ct__8daNpcF_cFv.s"
}
#pragma pop

/* 80B41448-80B414B8 0070+00 s=1 e=0 z=0  None .text      __dt__12dBgS_AcchCirFv */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm dBgS_AcchCir::~dBgS_AcchCir() {
    nofralloc
#include "asm/rel/d/a/npc/d_a_npc_wrestler/d_a_npc_wrestler/__dt__12dBgS_AcchCirFv.s"
}
#pragma pop

/* 80B414B8-80B41514 005C+00 s=1 e=0 z=0  None .text      __dt__10dCcD_GSttsFv */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm dCcD_GStts::~dCcD_GStts() {
    nofralloc
#include "asm/rel/d/a/npc/d_a_npc_wrestler/d_a_npc_wrestler/__dt__10dCcD_GSttsFv.s"
}
#pragma pop

/* 80B41514-80B41584 0070+00 s=3 e=0 z=0  None .text      __dt__12dBgS_ObjAcchFv */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm dBgS_ObjAcch::~dBgS_ObjAcch() {
    nofralloc
#include "asm/rel/d/a/npc/d_a_npc_wrestler/d_a_npc_wrestler/__dt__12dBgS_ObjAcchFv.s"
}
#pragma pop

/* 80B41584-80B415CC 0048+00 s=1 e=0 z=0  None .text      __dt__12J3DFrameCtrlFv */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm J3DFrameCtrl::~J3DFrameCtrl() {
    nofralloc
#include "asm/rel/d/a/npc/d_a_npc_wrestler/d_a_npc_wrestler/__dt__12J3DFrameCtrlFv.s"
}
#pragma pop

/* 80B415CC-80B415D0 0004+00 s=1 e=0 z=0  None .text      setCollisions__8daNpcF_cFv */
void daNpcF_c::setCollisions() {
    /* empty function */
}

/* 80B415D0-80B41618 0048+00 s=1 e=0 z=0  None .text      __dt__10cCcD_GSttsFv */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm cCcD_GStts::~cCcD_GStts() {
    nofralloc
#include "asm/rel/d/a/npc/d_a_npc_wrestler/d_a_npc_wrestler/__dt__10cCcD_GSttsFv.s"
}
#pragma pop

/* 80B41618-80B41634 001C+00 s=1 e=0 z=0  None .text      getArenaPos__12daTagArena_cFv */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void daTagArena_c::getArenaPos() {
    nofralloc
#include "asm/rel/d/a/npc/d_a_npc_wrestler/d_a_npc_wrestler/getArenaPos__12daTagArena_cFv.s"
}
#pragma pop

/* 80B41634-80B41650 001C+00 s=2 e=0 z=0  None .text      getRightFootPos__9daPy_py_cCFv */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void daPy_py_c::getRightFootPos() const {
    nofralloc
#include "asm/rel/d/a/npc/d_a_npc_wrestler/d_a_npc_wrestler/getRightFootPos__9daPy_py_cCFv.s"
}
#pragma pop

/* 80B41650-80B4166C 001C+00 s=2 e=0 z=0  None .text      getLeftFootPos__9daPy_py_cCFv */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void daPy_py_c::getLeftFootPos() const {
    nofralloc
#include "asm/rel/d/a/npc/d_a_npc_wrestler/d_a_npc_wrestler/getLeftFootPos__9daPy_py_cCFv.s"
}
#pragma pop

/* 80B4166C-80B41670 0004+00 s=1 e=0 z=0  None .text      adjustShapeAngle__15daNpcWrestler_cFv */
void daNpcWrestler_c::adjustShapeAngle() {
    /* empty function */
}

/* 80B41670-80B416B8 0048+00 s=2 e=0 z=0  None .text      __dt__21daNpcWrestler_Param_cFv */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm daNpcWrestler_Param_c::~daNpcWrestler_Param_c() {
    nofralloc
#include "asm/rel/d/a/npc/d_a_npc_wrestler/d_a_npc_wrestler/__dt__21daNpcWrestler_Param_cFv.s"
}
#pragma pop

/* 80B416B8-80B416C0 0008+00 s=1 e=0 z=0  None .text      @36@__dt__12dBgS_ObjAcchFv */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
extern "C" asm static void func_80B416B8() {
    nofralloc
#include "asm/rel/d/a/npc/d_a_npc_wrestler/d_a_npc_wrestler/func_80B416B8.s"
}
#pragma pop

/* 80B416C0-80B416C8 0008+00 s=1 e=0 z=0  None .text      @20@__dt__12dBgS_ObjAcchFv */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
extern "C" asm static void func_80B416C0() {
    nofralloc
#include "asm/rel/d/a/npc/d_a_npc_wrestler/d_a_npc_wrestler/func_80B416C0.s"
}
#pragma pop
