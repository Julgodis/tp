// 
// Generated By: dol2asm
// Translation Unit: d_a_npc_inko
// 

#include "dolphin/types.h"

// 
// Types:
// 

struct npc_inko_class;
struct J3DJoint;
struct fopAc_ac_c;

// 
// Forward References:
// 

void nodeCallBack(J3DJoint*, s32);
void daNpc_Inko_Draw(npc_inko_class*);
void anm_init(npc_inko_class*, s32, f32, u8, f32);
void daNpc_Inko_Execute(npc_inko_class*);
bool daNpc_Inko_IsDelete(npc_inko_class*);
void daNpc_Inko_Delete(npc_inko_class*);
void useHeapInit(fopAc_ac_c*);
void daNpc_Inko_Create(fopAc_ac_c*);

extern "C" void nodeCallBack__FP8J3DJointi();
extern "C" void daNpc_Inko_Draw__FP14npc_inko_class();
extern "C" void anm_init__FP14npc_inko_classifUcf();
extern "C" void daNpc_Inko_Execute__FP14npc_inko_class();
extern "C" bool daNpc_Inko_IsDelete__FP14npc_inko_class();
extern "C" void daNpc_Inko_Delete__FP14npc_inko_class();
extern "C" void useHeapInit__FP10fopAc_ac_c();
extern "C" void daNpc_Inko_Create__FP10fopAc_ac_c();
SECTION_RODATA extern const u8 lit_3849[4];
SECTION_RODATA extern const u32 lit_3850;
SECTION_RODATA extern const u32 lit_4329;
SECTION_RODATA extern const u32 lit_4330;
SECTION_RODATA extern const u32 lit_4331;
SECTION_RODATA extern const u32 lit_4332;
SECTION_RODATA extern const u32 lit_4333;
SECTION_RODATA extern const u32 lit_4334;
SECTION_RODATA extern const u32 lit_4335;
SECTION_RODATA extern const u32 lit_4336;
SECTION_RODATA extern const u32 lit_4337;
SECTION_RODATA extern const u32 lit_4338;
SECTION_RODATA extern const u32 lit_4339;
SECTION_RODATA extern const u32 lit_4340;
SECTION_RODATA extern const u32 lit_4341;
SECTION_RODATA extern const u32 lit_4342;
SECTION_RODATA extern const u32 lit_4343;
SECTION_RODATA extern const u32 lit_4344;
SECTION_RODATA extern const u32 lit_4345;
SECTION_RODATA extern const u32 lit_4346;
SECTION_RODATA extern const u32 lit_4347;
SECTION_RODATA extern const u32 lit_4348;
SECTION_RODATA extern const u32 lit_4349;
SECTION_RODATA extern const u32 lit_4350;
SECTION_RODATA extern const u32 lit_4351;
SECTION_RODATA extern const u32 lit_4352;
SECTION_RODATA extern const u32 lit_4353;
SECTION_RODATA extern const u32 lit_4354;
SECTION_RODATA extern const u8 lit_4355[8];
SECTION_RODATA extern const u8 lit_4356[8];
SECTION_RODATA extern const u8 lit_4357[8];
SECTION_RODATA extern const u32 lit_4358;
SECTION_RODATA extern const u32 lit_4359;
SECTION_RODATA extern const u32 lit_4360;
SECTION_RODATA extern const u32 lit_4361;
SECTION_RODATA extern const u32 lit_4362;
SECTION_RODATA extern const u32 lit_4363;
SECTION_RODATA extern const u32 lit_4364;
SECTION_RODATA extern const u32 lit_4365;
SECTION_RODATA extern const u32 lit_4366;
SECTION_RODATA extern const u32 lit_4367;
SECTION_RODATA extern const u32 lit_4461;
SECTION_RODATA extern const u32 lit_4462;
SECTION_RODATA extern const u8 stringBase0[9];
SECTION_DATA extern u8 data_80A0E0D8[16];
SECTION_DATA extern u8 data_80A0E0E8[16];
SECTION_DATA extern u8 l_daNpc_Inko_Method[32];
SECTION_DATA extern u8 g_profile_NPC_INKO[48];

// 
// External References:
// 

extern "C" void _unresolved();

extern "C" void _unresolved();

// 
// Declarations:
// 

/* 80A0C998-80A0CBB0 0218+00 .text      nodeCallBack__FP8J3DJointi                                   */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void nodeCallBack(J3DJoint* field_0, s32 field_1) {
	nofralloc
#include "asm/rel/d/a/npc/d_a_npc_inko/d_a_npc_inko/nodeCallBack__FP8J3DJointi.s"
}
#pragma pop


/* 80A0CBB0-80A0CC18 0068+00 .text      daNpc_Inko_Draw__FP14npc_inko_class                          */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void daNpc_Inko_Draw(npc_inko_class* field_0) {
	nofralloc
#include "asm/rel/d/a/npc/d_a_npc_inko/d_a_npc_inko/daNpc_Inko_Draw__FP14npc_inko_class.s"
}
#pragma pop


/* 80A0CC18-80A0CCC8 00B0+00 .text      anm_init__FP14npc_inko_classifUcf                            */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void anm_init(npc_inko_class* field_0, s32 field_1, f32 field_2, u8 field_3, f32 field_4) {
	nofralloc
#include "asm/rel/d/a/npc/d_a_npc_inko/d_a_npc_inko/anm_init__FP14npc_inko_classifUcf.s"
}
#pragma pop


/* 80A0CCC8-80A0DD70 10A8+00 .text      daNpc_Inko_Execute__FP14npc_inko_class                       */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void daNpc_Inko_Execute(npc_inko_class* field_0) {
	nofralloc
#include "asm/rel/d/a/npc/d_a_npc_inko/d_a_npc_inko/daNpc_Inko_Execute__FP14npc_inko_class.s"
}
#pragma pop


/* 80A0DD70-80A0DD78 0008+00 .text      daNpc_Inko_IsDelete__FP14npc_inko_class                      */
bool daNpc_Inko_IsDelete(npc_inko_class* field_0) {
	return true;
}


/* 80A0DD78-80A0DDC8 0050+00 .text      daNpc_Inko_Delete__FP14npc_inko_class                        */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void daNpc_Inko_Delete(npc_inko_class* field_0) {
	nofralloc
#include "asm/rel/d/a/npc/d_a_npc_inko/d_a_npc_inko/daNpc_Inko_Delete__FP14npc_inko_class.s"
}
#pragma pop


/* 80A0DDC8-80A0DF08 0140+00 .text      useHeapInit__FP10fopAc_ac_c                                  */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void useHeapInit(fopAc_ac_c* field_0) {
	nofralloc
#include "asm/rel/d/a/npc/d_a_npc_inko/d_a_npc_inko/useHeapInit__FP10fopAc_ac_c.s"
}
#pragma pop


/* 80A0DF08-80A0E00C 0104+00 .text      daNpc_Inko_Create__FP10fopAc_ac_c                            */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void daNpc_Inko_Create(fopAc_ac_c* field_0) {
	nofralloc
#include "asm/rel/d/a/npc/d_a_npc_inko/d_a_npc_inko/daNpc_Inko_Create__FP10fopAc_ac_c.s"
}
#pragma pop


/* ############################################################################################## */
/* 80A0E014-80A0E018 0004+00 .rodata    @3849                                                        */
SECTION_RODATA const u8 lit_3849[4] = {
	0x00, 0x00, 0x00, 0x00,
};

/* 80A0E018-80A0E01C 0004+00 .rodata    @3850                                                        */
SECTION_RODATA const u32 lit_3850 = 0xBF800000;

/* 80A0E01C-80A0E020 0004+00 .rodata    @4329                                                        */
SECTION_RODATA const u32 lit_4329 = 0xC29C0000;

/* 80A0E020-80A0E024 0004+00 .rodata    @4330                                                        */
SECTION_RODATA const u32 lit_4330 = 0xC0A00000;

/* 80A0E024-80A0E028 0004+00 .rodata    @4331                                                        */
SECTION_RODATA const u32 lit_4331 = 0x42200000;

/* 80A0E028-80A0E02C 0004+00 .rodata    @4332                                                        */
SECTION_RODATA const u32 lit_4332 = 0x41F00000;

/* 80A0E02C-80A0E030 0004+00 .rodata    @4333                                                        */
SECTION_RODATA const u32 lit_4333 = 0x428C0000;

/* 80A0E030-80A0E034 0004+00 .rodata    @4334                                                        */
SECTION_RODATA const u32 lit_4334 = 0x41200000;

/* 80A0E034-80A0E038 0004+00 .rodata    @4335                                                        */
SECTION_RODATA const u32 lit_4335 = 0x3F800000;

/* 80A0E038-80A0E03C 0004+00 .rodata    @4336                                                        */
SECTION_RODATA const u32 lit_4336 = 0x3FC00000;

/* 80A0E03C-80A0E040 0004+00 .rodata    @4337                                                        */
SECTION_RODATA const u32 lit_4337 = 0x40000000;

/* 80A0E040-80A0E044 0004+00 .rodata    @4338                                                        */
SECTION_RODATA const u32 lit_4338 = 0x44A28000;

/* 80A0E044-80A0E048 0004+00 .rodata    @4339                                                        */
SECTION_RODATA const u32 lit_4339 = 0x447A0000;

/* 80A0E048-80A0E04C 0004+00 .rodata    @4340                                                        */
SECTION_RODATA const u32 lit_4340 = 0x3E99999A;

/* 80A0E04C-80A0E050 0004+00 .rodata    @4341                                                        */
SECTION_RODATA const u32 lit_4341 = 0x3F99999A;

/* 80A0E050-80A0E054 0004+00 .rodata    @4342                                                        */
SECTION_RODATA const u32 lit_4342 = 0x40400000;

/* 80A0E054-80A0E058 0004+00 .rodata    @4343                                                        */
SECTION_RODATA const u32 lit_4343 = 0x42C80000;

/* 80A0E058-80A0E05C 0004+00 .rodata    @4344                                                        */
SECTION_RODATA const u32 lit_4344 = 0x45DAC000;

/* 80A0E05C-80A0E060 0004+00 .rodata    @4345                                                        */
SECTION_RODATA const u32 lit_4345 = 0x3F000000;

/* 80A0E060-80A0E064 0004+00 .rodata    @4346                                                        */
SECTION_RODATA const u32 lit_4346 = 0x41000000;

/* 80A0E064-80A0E068 0004+00 .rodata    @4347                                                        */
SECTION_RODATA const u32 lit_4347 = 0x42240000;

/* 80A0E068-80A0E06C 0004+00 .rodata    @4348                                                        */
SECTION_RODATA const u32 lit_4348 = 0x41600000;

/* 80A0E06C-80A0E070 0004+00 .rodata    @4349                                                        */
SECTION_RODATA const u32 lit_4349 = 0x3C23D70A;

/* 80A0E070-80A0E074 0004+00 .rodata    @4350                                                        */
SECTION_RODATA const u32 lit_4350 = 0x41A00000;

/* 80A0E074-80A0E078 0004+00 .rodata    @4351                                                        */
SECTION_RODATA const u32 lit_4351 = 0x43480000;

/* 80A0E078-80A0E07C 0004+00 .rodata    @4352                                                        */
SECTION_RODATA const u32 lit_4352 = 0x47000000;

/* 80A0E07C-80A0E080 0004+00 .rodata    @4353                                                        */
SECTION_RODATA const u32 lit_4353 = 0x3F4CCCCD;

/* 80A0E080-80A0E084 0004+00 .rodata    @4354                                                        */
SECTION_RODATA const u32 lit_4354 = 0x40A00000;

/* 80A0E084-80A0E08C 0008+00 .rodata    @4355                                                        */
SECTION_RODATA const u8 lit_4355[8] = {
	0x3F, 0xE0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
};

/* 80A0E08C-80A0E094 0008+00 .rodata    @4356                                                        */
SECTION_RODATA const u8 lit_4356[8] = {
	0x40, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
};

/* 80A0E094-80A0E09C 0008+00 .rodata    @4357                                                        */
SECTION_RODATA const u8 lit_4357[8] = {
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
};

/* 80A0E09C-80A0E0A0 0004+00 .rodata    @4358                                                        */
SECTION_RODATA const u32 lit_4358 = 0x3DCCCCCD;

/* 80A0E0A0-80A0E0A4 0004+00 .rodata    @4359                                                        */
SECTION_RODATA const u32 lit_4359 = 0x43960000;

/* 80A0E0A4-80A0E0A8 0004+00 .rodata    @4360                                                        */
SECTION_RODATA const u32 lit_4360 = 0x3F666666;

/* 80A0E0A8-80A0E0AC 0004+00 .rodata    @4361                                                        */
SECTION_RODATA const u32 lit_4361 = 0x40200000;

/* 80A0E0AC-80A0E0B0 0004+00 .rodata    @4362                                                        */
SECTION_RODATA const u32 lit_4362 = 0x453B8000;

/* 80A0E0B0-80A0E0B4 0004+00 .rodata    @4363                                                        */
SECTION_RODATA const u32 lit_4363 = 0x42B40000;

/* 80A0E0B4-80A0E0B8 0004+00 .rodata    @4364                                                        */
SECTION_RODATA const u32 lit_4364 = 0x43FA0000;

/* 80A0E0B8-80A0E0BC 0004+00 .rodata    @4365                                                        */
SECTION_RODATA const u32 lit_4365 = 0xC0000000;

/* 80A0E0BC-80A0E0C0 0004+00 .rodata    @4366                                                        */
SECTION_RODATA const u32 lit_4366 = 0x46B3B000;

/* 80A0E0C0-80A0E0C4 0004+00 .rodata    @4367                                                        */
SECTION_RODATA const u32 lit_4367 = 0x43160000;

/* 80A0E0C4-80A0E0C8 0004+00 .rodata    @4461                                                        */
SECTION_RODATA const u32 lit_4461 = 0x47800000;

/* 80A0E0C8-80A0E0CC 0004+00 .rodata    @4462                                                        */
SECTION_RODATA const u32 lit_4462 = 0xC3480000;

/* 80A0E0CC-80A0E0D5 0009+00 .rodata    @stringBase0                                                 */
#pragma push
#pragma force_active on
#pragma section ".dead"
SECTION_DEAD char* const stringBase_80A0E0CC = "Npc_inko";
#pragma pop

/* 80A0E0D8-80A0E0E8 0010+00 .data      mes_0$3966                                                   */
u8 data_80A0E0D8[16] = {
	0x00, 0x00, 0x03, 0x57, 0x00, 0x00, 0x03, 0x58, 0x00, 0x00, 0x03, 0x59, 0x00, 0x00, 0x03, 0x5A,
};

/* 80A0E0E8-80A0E0F8 0010+00 .data      mes_1$3967                                                   */
u8 data_80A0E0E8[16] = {
	0x00, 0x00, 0x03, 0x5B, 0x00, 0x00, 0x03, 0x5C, 0x00, 0x00, 0x03, 0x5D, 0x00, 0x00, 0x03, 0x5E,
};

/* 80A0E0F8-80A0E118 0020+00 .data      l_daNpc_Inko_Method                                          */
u8 l_daNpc_Inko_Method[32] = {
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
};

/* 80A0E118-80A0E148 0030+00 .data      g_profile_NPC_INKO                                           */
u8 g_profile_NPC_INKO[48] = {
	0xFF, 0xFF, 0xFF, 0xFD, 0x00, 0x08, 0xFF, 0xFD, 0x02, 0xFF, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
	0x00, 0x00, 0x06, 0x48, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
	0x02, 0xC0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x04, 0x01, 0x00, 0x00, 0x0E, 0x00, 0x00,
};

