//
// Generated By: dol2asm
// Translation Unit: d_a_npc_seib
//

#include "rel/d/a/npc/d_a_npc_seib/d_a_npc_seib.h"
#include "dol2asm.h"
#include "dolphin/types.h"

//
// Types:
//

struct J3DAnmTransform {};

struct Vec {};

struct Z2Creature {
    /* 802C03C8 */ Z2Creature();
    /* 802C0420 */ ~Z2Creature();
    /* 802C0530 */ void init(Vec*, Vec*, u8, u8);
};

struct mDoExt_McaMorfCallBack1_c {};

struct mDoExt_McaMorfCallBack2_c {};

struct J3DModelData {};

struct mDoExt_McaMorfSO {
    /* 800107D0 */ mDoExt_McaMorfSO(J3DModelData*, mDoExt_McaMorfCallBack1_c*,
                                    mDoExt_McaMorfCallBack2_c*, J3DAnmTransform*, int, f32, int,
                                    int, Z2Creature*, u32, u32);
    /* 80011310 */ void stopZelAnime();
};

struct fopAc_ac_c {
    /* 80018B64 */ fopAc_ac_c();
    /* 80018C8C */ ~fopAc_ac_c();
};

struct daNpcT_motionAnmData_c {};

struct daNpcT_faceMotionAnmData_c {};

struct daNpcT_evtData_c {};

struct daNpcT_MotionSeqMngr_c {
    struct sequenceStepData_c {};

    /* 80145898 */ void initialize();
    /* 80145A24 */ void checkEndSequence();
    /* 80AC6C2C */ ~daNpcT_MotionSeqMngr_c();
};

struct daNpc_seiB_c {
    /* 80AC50EC */ ~daNpc_seiB_c();
    /* 80AC5188 */ void create();
    /* 80AC53C8 */ void CreateHeap();
    /* 80AC5520 */ void Delete();
    /* 80AC5554 */ void Execute();
    /* 80AC5574 */ void Draw();
    /* 80AC5608 */ void createHeapCallBack(fopAc_ac_c*);
    /* 80AC5628 */ void getType();
    /* 80AC5648 */ void getFlowNodeNo();
    /* 80AC5664 */ bool isDelete();
    /* 80AC566C */ void reset();
    /* 80AC57C4 */ void setParam();
    /* 80AC58F0 */ void srchActors();
    /* 80AC58F4 */ void evtTalk();
    /* 80AC59F4 */ void evtCutProc();
    /* 80AC5ABC */ void action();
    /* 80AC5B44 */ void beforeMove();
    /* 80AC5BC4 */ void setAttnPos();
    /* 80AC5C20 */ bool drawDbgInfo();
    /* 80AC5C28 */ void afterSetMotionAnm(int, int, f32, int);
    /* 80AC5DC0 */ void selectAction();
    /* 80AC5E08 */ void chkAction(int (daNpc_seiB_c::*)(void*));
    /* 80AC5E34 */ void setAction(int (daNpc_seiB_c::*)(void*));
    /* 80AC5EDC */ void ctrlWaitAnm();
    /* 80AC6140 */ void wait(void*);
    /* 80AC616C */ void talk(void*);
    /* 80AC6F74 */ daNpc_seiB_c(daNpcT_faceMotionAnmData_c const*, daNpcT_motionAnmData_c const*,
                                daNpcT_MotionSeqMngr_c::sequenceStepData_c const*, int,
                                daNpcT_MotionSeqMngr_c::sequenceStepData_c const*, int,
                                daNpcT_evtData_c const*, char**);
};

struct daNpc_seiB_Param_c {
    /* 80AC6FB8 */ ~daNpc_seiB_Param_c();
};

struct cXyz {
    /* 80AC6664 */ ~cXyz();
    /* 80AC6BE0 */ cXyz();
};

struct J3DJoint {};

struct _GXColorS10 {};

struct J3DModel {};

struct J3DAnmTevRegKey {};

struct J3DAnmTextureSRTKey {};

struct daNpcT_c {
    /* 8014810C */ void getTexSRTKeyAnmP(char const*, int);
    /* 80148148 */ void getTevRegKeyAnmP(char const*, int);
    /* 80148338 */ void setBtkAnm(J3DAnmTextureSRTKey*, J3DModelData*, f32, int);
    /* 80148378 */ void setBrkAnm(J3DAnmTevRegKey*, J3DModelData*, f32, int);
    /* 801483F8 */ void loadRes(s8 const*, char const**);
    /* 801484AC */ void deleteRes(s8 const*, char const**);
    /* 8014852C */ void execute();
    /* 8014886C */ void draw(int, int, f32, _GXColorS10*, f32, int, int, int);
    /* 80148C70 */ void setEnvTevColor();
    /* 80148CCC */ void setRoomNo();
    /* 801490D4 */ void ctrlBtk();
    /* 80149190 */ void setMtx();
    /* 8014951C */ void ctrlJoint(J3DJoint*, J3DModel*);
    /* 8014997C */ void evtProc();
    /* 80149BB4 */ void setFootPos();
    /* 80149D7C */ void setFootPrtcl(cXyz*, f32, f32);
    /* 8014A05C */ bool checkCullDraw();
    /* 8014A064 */ void twilight();
    /* 8014A0B0 */ void evtOrder();
    /* 8014A224 */ void evtChange();
    /* 8014A324 */ void clrParam();
    /* 8014A388 */ void setFaceMotionAnm(int, bool);
    /* 8014A628 */ void setMotionAnm(int, f32, int);
    /* 8014AA18 */ void setAngle(s16);
    /* 8014BBF0 */ void initTalk(int, fopAc_ac_c**);
    /* 8014BC78 */ void talkProc(int*, int, fopAc_ac_c**, int);
    /* 80AC62DC */ ~daNpcT_c();
    /* 80AC66DC */ daNpcT_c(daNpcT_faceMotionAnmData_c const*, daNpcT_motionAnmData_c const*,
                            daNpcT_MotionSeqMngr_c::sequenceStepData_c const*, int,
                            daNpcT_MotionSeqMngr_c::sequenceStepData_c const*, int,
                            daNpcT_evtData_c const*, char**);
    /* 80AC6DF8 */ bool getEyeballMaterialNo();
    /* 80AC6E00 */ void ctrlSubFaceMotion(int);
    /* 80AC6E04 */ bool checkChangeJoint(int);
    /* 80AC6E0C */ bool checkRemoveJoint(int);
    /* 80AC6E14 */ s32 getBackboneJointNo();
    /* 80AC6E1C */ s32 getNeckJointNo();
    /* 80AC6E24 */ s32 getHeadJointNo();
    /* 80AC6E2C */ s32 getFootLJointNo();
    /* 80AC6E34 */ s32 getFootRJointNo();
    /* 80AC6E3C */ bool getEyeballLMaterialNo();
    /* 80AC6E44 */ bool getEyeballRMaterialNo();
    /* 80AC6E4C */ void afterJntAnm(int);
    /* 80AC6E50 */ bool checkChangeEvt();
    /* 80AC6E58 */ bool evtEndProc();
    /* 80AC6E60 */ void setAfterTalkMotion();
    /* 80AC6E64 */ void afterMoved();
    /* 80AC6E68 */ void setCollision();
    /* 80AC6E6C */ bool chkXYItems();
    /* 80AC6E74 */ void decTmr();
    /* 80AC6E8C */ void drawOtherMdl();
    /* 80AC6E90 */ void drawGhost();
    /* 80AC6E94 */ bool afterSetFaceMotionAnm(int, int, f32, int);
    /* 80AC6E9C */ void getFaceMotionAnm(daNpcT_faceMotionAnmData_c);
    /* 80AC6ECC */ void getMotionAnm(daNpcT_motionAnmData_c);
    /* 80AC6EFC */ void changeAnm(int*, int*);
    /* 80AC6F00 */ void changeBck(int*, int*);
    /* 80AC6F04 */ void changeBtp(int*, int*);
    /* 80AC6F08 */ void changeBtk(int*, int*);
};

struct daNpcT_MatAnm_c {
    /* 80145764 */ void initialize();
};

struct daNpcT_JntAnm_c {
    /* 80146C98 */ void initialize();
    /* 80AC6AE4 */ ~daNpcT_JntAnm_c();
};

struct daNpcT_ActorMngr_c {
    /* 801456D4 */ void initialize();
    /* 80AC6BE4 */ ~daNpcT_ActorMngr_c();
};

struct dRes_info_c {};

struct dRes_control_c {
    /* 8003C2EC */ void getRes(char const*, s32, dRes_info_c*, int);
};

struct dMsgFlow_c {
    /* 80249F00 */ dMsgFlow_c();
    /* 80249F48 */ ~dMsgFlow_c();
};

struct dEvt_control_c {
    /* 80042468 */ void reset();
};

struct dEvent_manager_c {
    /* 80047B1C */ void getMyStaffId(char const*, fopAc_ac_c*, int);
    /* 80047E10 */ void getMyActIdx(int, char const* const*, int, int, int);
    /* 8004817C */ void cutEnd(int);
    /* 800487F0 */ void ChkPresentEnd();
};

struct dCcD_Stts {
    /* 80083860 */ void Init(int, int, fopAc_ac_c*);
};

struct dCcD_GStts {
    /* 80083760 */ dCcD_GStts();
    /* 80AC6CE4 */ ~dCcD_GStts();
};

struct dBgS_PolyPassChk {
    /* 80078E68 */ void SetObj();
};

struct dBgS_ObjAcch {
    /* 80AC6D40 */ ~dBgS_ObjAcch();
};

struct dBgS_LinChk {
    /* 80077C68 */ dBgS_LinChk();
    /* 80077CDC */ ~dBgS_LinChk();
};

struct dBgS_GndChk {
    /* 8007757C */ dBgS_GndChk();
    /* 800775F0 */ ~dBgS_GndChk();
};

struct dBgS_AcchCir {
    /* 80075EAC */ dBgS_AcchCir();
    /* 80075F40 */ void SetWallR(f32);
    /* 80AC6C74 */ ~dBgS_AcchCir();
};

struct csXyz {
    /* 80AC66A0 */ ~csXyz();
    /* 80AC6AE0 */ csXyz();
};

struct dBgS {};

struct dBgS_Acch {
    /* 80075F94 */ ~dBgS_Acch();
    /* 800760A0 */ dBgS_Acch();
    /* 80076248 */ void Set(cXyz*, cXyz*, fopAc_ac_c*, int, dBgS_AcchCir*, cXyz*, csXyz*, csXyz*);
    /* 80076AAC */ void CrrPos(dBgS&);
};

struct dAttention_c {
    /* 80AC58DC */ void getDistTable(int);
};

struct cM3dGCir {
    /* 8026EF18 */ ~cM3dGCir();
};

struct cCcD_GStts {
    /* 80AC6294 */ ~cCcD_GStts();
};

struct cBgS_PolyInfo {
    /* 802680B0 */ ~cBgS_PolyInfo();
};

struct cBgS_GndChk {
    /* 80267C1C */ cBgS_GndChk();
    /* 80267C94 */ ~cBgS_GndChk();
};

struct J3DFrameCtrl {
    /* 803283FC */ void init(s16);
    /* 80AC6DB0 */ ~J3DFrameCtrl();
};

//
// Forward References:
//

static void daNpc_seiB_Create(void*);
static void daNpc_seiB_Delete(void*);
static void daNpc_seiB_Execute(void*);
static void daNpc_seiB_Draw(void*);
static bool daNpc_seiB_IsDelete(void*);
extern "C" extern u32 lit_1787[1 + 4 /* padding */];
extern "C" extern void* g_profile_NPC_SEIB[12];

extern "C" void __dt__12daNpc_seiB_cFv();
extern "C" void create__12daNpc_seiB_cFv();
extern "C" void CreateHeap__12daNpc_seiB_cFv();
extern "C" void Delete__12daNpc_seiB_cFv();
extern "C" void Execute__12daNpc_seiB_cFv();
extern "C" void Draw__12daNpc_seiB_cFv();
extern "C" void createHeapCallBack__12daNpc_seiB_cFP10fopAc_ac_c();
extern "C" void getType__12daNpc_seiB_cFv();
extern "C" void getFlowNodeNo__12daNpc_seiB_cFv();
extern "C" bool isDelete__12daNpc_seiB_cFv();
extern "C" void reset__12daNpc_seiB_cFv();
extern "C" void setParam__12daNpc_seiB_cFv();
extern "C" void getDistTable__12dAttention_cFi();
extern "C" void srchActors__12daNpc_seiB_cFv();
extern "C" void evtTalk__12daNpc_seiB_cFv();
extern "C" void evtCutProc__12daNpc_seiB_cFv();
extern "C" void action__12daNpc_seiB_cFv();
extern "C" void beforeMove__12daNpc_seiB_cFv();
extern "C" void setAttnPos__12daNpc_seiB_cFv();
extern "C" bool drawDbgInfo__12daNpc_seiB_cFv();
extern "C" void afterSetMotionAnm__12daNpc_seiB_cFiifi();
extern "C" void selectAction__12daNpc_seiB_cFv();
extern "C" void chkAction__12daNpc_seiB_cFM12daNpc_seiB_cFPCvPvPv_i();
extern "C" void setAction__12daNpc_seiB_cFM12daNpc_seiB_cFPCvPvPv_i();
extern "C" void ctrlWaitAnm__12daNpc_seiB_cFv();
extern "C" void wait__12daNpc_seiB_cFPv();
extern "C" void talk__12daNpc_seiB_cFPv();
extern "C" static void daNpc_seiB_Create__FPv();
extern "C" static void daNpc_seiB_Delete__FPv();
extern "C" static void daNpc_seiB_Execute__FPv();
extern "C" static void daNpc_seiB_Draw__FPv();
extern "C" static bool daNpc_seiB_IsDelete__FPv();
extern "C" void __dt__10cCcD_GSttsFv();
extern "C" void __dt__8daNpcT_cFv();
extern "C" void __dt__4cXyzFv();
extern "C" void __dt__5csXyzFv();
extern "C" void
__ct__8daNpcT_cFPC26daNpcT_faceMotionAnmData_cPC22daNpcT_motionAnmData_cPCQ222daNpcT_MotionSeqMngr_c18sequenceStepData_ciPCQ222daNpcT_MotionSeqMngr_c18sequenceStepData_ciPC16daNpcT_evtData_cPPc();
extern "C" void __ct__5csXyzFv();
extern "C" void __dt__15daNpcT_JntAnm_cFv();
extern "C" void __ct__4cXyzFv();
extern "C" void __dt__18daNpcT_ActorMngr_cFv();
extern "C" void __dt__22daNpcT_MotionSeqMngr_cFv();
extern "C" void __dt__12dBgS_AcchCirFv();
extern "C" void __dt__10dCcD_GSttsFv();
extern "C" void __dt__12dBgS_ObjAcchFv();
extern "C" void __dt__12J3DFrameCtrlFv();
extern "C" bool getEyeballMaterialNo__8daNpcT_cFv();
extern "C" void ctrlSubFaceMotion__8daNpcT_cFi();
extern "C" bool checkChangeJoint__8daNpcT_cFi();
extern "C" bool checkRemoveJoint__8daNpcT_cFi();
extern "C" s32 getBackboneJointNo__8daNpcT_cFv();
extern "C" s32 getNeckJointNo__8daNpcT_cFv();
extern "C" s32 getHeadJointNo__8daNpcT_cFv();
extern "C" s32 getFootLJointNo__8daNpcT_cFv();
extern "C" s32 getFootRJointNo__8daNpcT_cFv();
extern "C" bool getEyeballLMaterialNo__8daNpcT_cFv();
extern "C" bool getEyeballRMaterialNo__8daNpcT_cFv();
extern "C" void afterJntAnm__8daNpcT_cFi();
extern "C" bool checkChangeEvt__8daNpcT_cFv();
extern "C" bool evtEndProc__8daNpcT_cFv();
extern "C" void setAfterTalkMotion__8daNpcT_cFv();
extern "C" void afterMoved__8daNpcT_cFv();
extern "C" void setCollision__8daNpcT_cFv();
extern "C" bool chkXYItems__8daNpcT_cFv();
extern "C" void decTmr__8daNpcT_cFv();
extern "C" void drawOtherMdl__8daNpcT_cFv();
extern "C" void drawGhost__8daNpcT_cFv();
extern "C" bool afterSetFaceMotionAnm__8daNpcT_cFiifi();
extern "C" void getFaceMotionAnm__8daNpcT_cF26daNpcT_faceMotionAnmData_c();
extern "C" void getMotionAnm__8daNpcT_cF22daNpcT_motionAnmData_c();
extern "C" void changeAnm__8daNpcT_cFPiPi();
extern "C" void changeBck__8daNpcT_cFPiPi();
extern "C" void changeBtp__8daNpcT_cFPiPi();
extern "C" void changeBtk__8daNpcT_cFPiPi();
extern "C" void __sinit_d_a_npc_seib_cpp();
extern "C" void
__ct__12daNpc_seiB_cFPC26daNpcT_faceMotionAnmData_cPC22daNpcT_motionAnmData_cPCQ222daNpcT_MotionSeqMngr_c18sequenceStepData_ciPCQ222daNpcT_MotionSeqMngr_c18sequenceStepData_ciPC16daNpcT_evtData_cPPc();
extern "C" void __dt__18daNpc_seiB_Param_cFv();
extern "C" static void func_80AC7000();
extern "C" static void func_80AC7008();
extern "C" extern u32 lit_1787[1 + 4 /* padding */];
extern "C" extern void* g_profile_NPC_SEIB[12];

//
// External References:
//

void fopAcM_entrySolidHeap(fopAc_ac_c*, int (*)(fopAc_ac_c*), u32);
void dComIfGs_wolfeye_effect_check();
void cM_rndF(f32);
void* operator new(u32);
void operator delete(void*);
extern "C" extern u8 const __ptmf_null[12 + 4 /* padding */];
extern "C" extern void* g_fopAc_Method[8];
extern "C" extern void* g_fpcLf_Method[5 + 1 /* padding */];
extern "C" extern u8 dist_table__12dAttention_c[6552];
extern "C" extern void* __vt__9dCcD_Stts[11];
extern "C" extern void* __vt__8daNpcT_c[49];
extern "C" extern void* __vt__9cCcD_Stts[8];
extern "C" extern u8 g_dComIfG_gameInfo[122384];

SECTION_INIT void memset();
extern "C" void
__ct__16mDoExt_McaMorfSOFP12J3DModelDataP25mDoExt_McaMorfCallBack1_cP25mDoExt_McaMorfCallBack2_cP15J3DAnmTransformifiiP10Z2CreatureUlUl();
extern "C" void stopZelAnime__16mDoExt_McaMorfSOFv();
extern "C" void __ct__10fopAc_ac_cFv();
extern "C" void __dt__10fopAc_ac_cFv();
extern "C" void fopAcM_entrySolidHeap__FP10fopAc_ac_cPFP10fopAc_ac_c_iUl();
extern "C" void dComIfGs_wolfeye_effect_check__Fv();
extern "C" void getRes__14dRes_control_cFPCclP11dRes_info_ci();
extern "C" void reset__14dEvt_control_cFv();
extern "C" void getMyStaffId__16dEvent_manager_cFPCcP10fopAc_ac_ci();
extern "C" void getMyActIdx__16dEvent_manager_cFiPCPCciii();
extern "C" void cutEnd__16dEvent_manager_cFi();
extern "C" void ChkPresentEnd__16dEvent_manager_cFv();
extern "C" void __ct__12dBgS_AcchCirFv();
extern "C" void SetWallR__12dBgS_AcchCirFf();
extern "C" void __dt__9dBgS_AcchFv();
extern "C" void __ct__9dBgS_AcchFv();
extern "C" void Set__9dBgS_AcchFP4cXyzP4cXyzP10fopAc_ac_ciP12dBgS_AcchCirP4cXyzP5csXyzP5csXyz();
extern "C" void CrrPos__9dBgS_AcchFR4dBgS();
extern "C" void __ct__11dBgS_GndChkFv();
extern "C" void __dt__11dBgS_GndChkFv();
extern "C" void __ct__11dBgS_LinChkFv();
extern "C" void __dt__11dBgS_LinChkFv();
extern "C" void SetObj__16dBgS_PolyPassChkFv();
extern "C" void __ct__10dCcD_GSttsFv();
extern "C" void Init__9dCcD_SttsFiiP10fopAc_ac_c();
extern "C" void initialize__18daNpcT_ActorMngr_cFv();
extern "C" void initialize__15daNpcT_MatAnm_cFv();
extern "C" void initialize__22daNpcT_MotionSeqMngr_cFv();
extern "C" void checkEndSequence__22daNpcT_MotionSeqMngr_cFv();
extern "C" void initialize__15daNpcT_JntAnm_cFv();
extern "C" void getTexSRTKeyAnmP__8daNpcT_cFPCci();
extern "C" void getTevRegKeyAnmP__8daNpcT_cFPCci();
extern "C" void setBtkAnm__8daNpcT_cFP19J3DAnmTextureSRTKeyP12J3DModelDatafi();
extern "C" void setBrkAnm__8daNpcT_cFP15J3DAnmTevRegKeyP12J3DModelDatafi();
extern "C" void loadRes__8daNpcT_cFPCScPPCc();
extern "C" void deleteRes__8daNpcT_cFPCScPPCc();
extern "C" void execute__8daNpcT_cFv();
extern "C" void draw__8daNpcT_cFiifP11_GXColorS10fiii();
extern "C" void setEnvTevColor__8daNpcT_cFv();
extern "C" void setRoomNo__8daNpcT_cFv();
extern "C" void ctrlBtk__8daNpcT_cFv();
extern "C" void setMtx__8daNpcT_cFv();
extern "C" void ctrlJoint__8daNpcT_cFP8J3DJointP8J3DModel();
extern "C" void evtProc__8daNpcT_cFv();
extern "C" void setFootPos__8daNpcT_cFv();
extern "C" void setFootPrtcl__8daNpcT_cFP4cXyzff();
extern "C" bool checkCullDraw__8daNpcT_cFv();
extern "C" void twilight__8daNpcT_cFv();
extern "C" void evtOrder__8daNpcT_cFv();
extern "C" void evtChange__8daNpcT_cFv();
extern "C" void clrParam__8daNpcT_cFv();
extern "C" void setFaceMotionAnm__8daNpcT_cFib();
extern "C" void setMotionAnm__8daNpcT_cFifi();
extern "C" void setAngle__8daNpcT_cFs();
extern "C" void initTalk__8daNpcT_cFiPP10fopAc_ac_c();
extern "C" void talkProc__8daNpcT_cFPiiPP10fopAc_ac_ci();
extern "C" void __ct__10dMsgFlow_cFv();
extern "C" void __dt__10dMsgFlow_cFv();
extern "C" void cM_rndF__Ff();
extern "C" void __ct__11cBgS_GndChkFv();
extern "C" void __dt__11cBgS_GndChkFv();
extern "C" void __dt__13cBgS_PolyInfoFv();
extern "C" void __dt__8cM3dGCirFv();
extern "C" void __ct__10Z2CreatureFv();
extern "C" void __dt__10Z2CreatureFv();
extern "C" void init__10Z2CreatureFP3VecP3VecUcUc();
extern "C" void* __nw__FUl();
extern "C" void __dl__FPv();
extern "C" void init__12J3DFrameCtrlFs();
extern "C" void __destroy_arr();
extern "C" void __construct_array();
extern "C" void __ptmf_test();
extern "C" void __ptmf_cmpr();
extern "C" void __ptmf_scall();
extern "C" void _savegpr_22();
extern "C" void _savegpr_25();
extern "C" void _savegpr_29();
extern "C" void _restgpr_22();
extern "C" void _restgpr_25();
extern "C" void _restgpr_29();
extern "C" extern u8 const __ptmf_null[12 + 4 /* padding */];
extern "C" extern void* g_fopAc_Method[8];
extern "C" extern void* g_fpcLf_Method[5 + 1 /* padding */];
extern "C" extern u8 dist_table__12dAttention_c[6552];
extern "C" extern void* __vt__9dCcD_Stts[11];
extern "C" extern void* __vt__8daNpcT_c[49];
extern "C" extern void* __vt__9cCcD_Stts[8];
extern "C" extern u8 g_dComIfG_gameInfo[122384];
extern "C" void __register_global_object();

//
// Declarations:
//

/* ############################################################################################## */
/* 80AC7024-80AC70B8 0094+00 s=4 e=0 z=0  None .rodata    m__18daNpc_seiB_Param_c */
SECTION_RODATA static u8 const m__18daNpc_seiB_Param_c[148] = {
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x3F, 0x80, 0x00, 0x00, 0x45, 0x7A, 0x00,
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x44, 0x96, 0x00, 0x00,
};

/* 80AC70B8-80AC70BC 0004+00 s=3 e=0 z=0  None .rodata    @4089 */
SECTION_RODATA static u8 const lit_4089[4] = {
    0x00,
    0x00,
    0x00,
    0x00,
};

/* 80AC70BC-80AC70C0 0004+00 s=2 e=0 z=0  None .rodata    @4090 */
SECTION_RODATA static u32 const lit_4090 = 0x47800000;

/* 80AC70C0-80AC70C4 0004+00 s=2 e=0 z=0  None .rodata    @4091 */
SECTION_RODATA static u32 const lit_4091 = 0x3E4CCCCD;

/* 80AC70C4-80AC70C8 0004+00 s=2 e=0 z=0  None .rodata    @4215 */
SECTION_RODATA static u32 const lit_4215 = 0x3F800000;

/* 80AC70C8-80AC70CC 0004+00 s=1 e=0 z=0  None .rodata    @4247 */
SECTION_RODATA static u32 const lit_4247 = 0x42C80000;

/* 80AC70CC-80AC70D0 0004+00 s=2 e=0 z=0  None .rodata    @4292 */
SECTION_RODATA static u32 const lit_4292 = 0xBF800000;

/* 80AC70D0-80AC70F8 0028+00 s=4 e=0 z=0  None .rodata    None */
SECTION_RODATA static u8 const struct_80AC70D0[40] = {
    /* 80AC70D0 0001 stringBase_80AC70D0 @stringBase0 */
    0x00,
    /* 80AC70D1 0010 data_80AC70D1 None */
    0x44,
    0x45,
    0x46,
    0x41,
    0x55,
    0x4C,
    0x54,
    0x5F,
    0x47,
    0x45,
    0x54,
    0x49,
    0x54,
    0x45,
    0x4D,
    0x00,
    /* 80AC70E1 000C data_80AC70E1 None */
    0x4E,
    0x4F,
    0x5F,
    0x52,
    0x45,
    0x53,
    0x50,
    0x4F,
    0x4E,
    0x53,
    0x45,
    0x00,
    /* 80AC70ED 000B data_80AC70ED None */
    0x73,
    0x65,
    0x69,
    0x42,
    0x00,
    0x53,
    0x65,
    0x69,
    0x62,
    0x00,
    0x00,
};

/* 80AC70F8-80AC7104 000C+00 s=2 e=0 z=0  None .data      cNullVec__6Z2Calc */
SECTION_DATA static u8 cNullVec__6Z2Calc[12] = {
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
};

/* 80AC7104-80AC7118 0004+10 s=0 e=0 z=0  None .data      @1787 */
SECTION_DATA u32 lit_1787[1 + 4 /* padding */] = {
    0x02000201,
    /* padding */
    0x40080000,
    0x00000000,
    0x3FE00000,
    0x00000000,
};

/* 80AC7118-80AC7120 0008+00 s=1 e=0 z=0  None .data      l_bmdData */
SECTION_DATA static u8 l_bmdData[8] = {
    0x00, 0x00, 0x00, 0x0C, 0x00, 0x00, 0x00, 0x01,
};

/* 80AC7120-80AC7138 0018+00 s=1 e=0 z=0  None .data      l_evtList */
SECTION_DATA static void* l_evtList[6] = {
    (void*)(((char*)&struct_80AC70D0) + 0x0) /* @stringBase0 */, (void*)NULL,
    (void*)(((char*)&struct_80AC70D0) + 0x1) /* None */,         (void*)NULL,
    (void*)(((char*)&struct_80AC70D0) + 0x11) /* None */,        (void*)NULL,
};

/* 80AC7138-80AC7140 0008+00 s=4 e=0 z=0  None .data      l_resNameList */
SECTION_DATA static void* l_resNameList[2] = {
    (void*)(((char*)&struct_80AC70D0) + 0x0) /* @stringBase0 */,
    (void*)(((char*)&struct_80AC70D0) + 0x1D) /* None */,
};

/* 80AC7140-80AC7144 0002+02 s=1 e=0 z=0  None .data      l_loadResPtrn0 */
SECTION_DATA static u16 l_loadResPtrn0[1 + 1 /* padding */] = {
    0x01FF,
    /* padding */
    0x0000,
};

/* 80AC7144-80AC714C 0008+00 s=2 e=0 z=0  None .data      l_loadResPtrnList */
SECTION_DATA static void* l_loadResPtrnList[2] = {
    (void*)&l_loadResPtrn0,
    (void*)&l_loadResPtrn0,
};

/* 80AC714C-80AC7168 001C+00 s=1 e=0 z=0  None .data      l_faceMotionAnmData */
SECTION_DATA static u8 l_faceMotionAnmData[28] = {
    0xFF, 0xFF, 0xFF, 0xFF, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xFF, 0xFF,
    0xFF, 0xFF, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
};

/* 80AC7168-80AC71D8 0070+00 s=1 e=0 z=0  None .data      l_motionAnmData */
SECTION_DATA static u8 l_motionAnmData[112] = {
    0x00, 0x00, 0x00, 0x09, 0x00, 0x00, 0x00, 0x02, 0x00, 0x00, 0x00, 0x01, 0xFF, 0xFF, 0xFF, 0xFF,
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x07,
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x01, 0xFF, 0xFF, 0xFF, 0xFF, 0x00, 0x00, 0x00, 0x00,
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x06, 0x00, 0x00, 0x00, 0x02,
    0x00, 0x00, 0x00, 0x01, 0xFF, 0xFF, 0xFF, 0xFF, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x01,
    0xFF, 0xFF, 0xFF, 0xFF, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
};

/* 80AC71D8-80AC71E8 0010+00 s=1 e=0 z=0  None .data      l_faceMotionSequenceData */
SECTION_DATA static u8 l_faceMotionSequenceData[16] = {
    0xFF, 0xFF, 0x00, 0x00, 0xFF, 0xFF, 0x00, 0x00, 0xFF, 0xFF, 0x00, 0x00, 0xFF, 0xFF, 0x00, 0x00,
};

/* 80AC71E8-80AC7228 0040+00 s=1 e=0 z=0  None .data      l_motionSequenceData */
SECTION_DATA static u8 l_motionSequenceData[64] = {
    0x00, 0x00, 0x00, 0x00, 0xFF, 0xFF, 0x00, 0x00, 0xFF, 0xFF, 0x00, 0x00, 0xFF, 0xFF, 0x00, 0x00,
    0x00, 0x01, 0x00, 0x01, 0xFF, 0xFF, 0x00, 0x00, 0xFF, 0xFF, 0x00, 0x00, 0xFF, 0xFF, 0x00, 0x00,
    0x00, 0x02, 0x00, 0x00, 0xFF, 0xFF, 0x00, 0x00, 0xFF, 0xFF, 0x00, 0x00, 0xFF, 0xFF, 0x00, 0x00,
    0x00, 0x03, 0x00, 0x01, 0xFF, 0xFF, 0x00, 0x00, 0xFF, 0xFF, 0x00, 0x00, 0xFF, 0xFF, 0x00, 0x00,
};

/* 80AC7228-80AC722C 0004+00 s=1 e=0 z=0  None .data      mCutNameList__12daNpc_seiB_c */
SECTION_DATA static void* mCutNameList__12daNpc_seiB_c =
    (void*)(((char*)&struct_80AC70D0) + 0x0) /* @stringBase0 */;

/* 80AC722C-80AC7238 000C+00 s=2 e=0 z=0  None .data      mCutList__12daNpc_seiB_c */
SECTION_DATA static u8 mCutList__12daNpc_seiB_c[12] = {
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
};

/* 80AC7238-80AC7244 000C+00 s=1 e=0 z=0  None .data      @4342 */
SECTION_DATA static void* lit_4342[3] = {
    (void*)NULL,
    (void*)0xFFFFFFFF,
    (void*)talk__12daNpc_seiB_cFPv,
};

/* 80AC7244-80AC7250 000C+00 s=1 e=0 z=0  None .data      @4352 */
SECTION_DATA static void* lit_4352[3] = {
    (void*)NULL,
    (void*)0xFFFFFFFF,
    (void*)talk__12daNpc_seiB_cFPv,
};

/* 80AC7250-80AC7270 0020+00 s=1 e=0 z=0  None .data      btkAnmData$4416 */
SECTION_DATA static u8 btkAnmData[32] = {
    0x00, 0x00, 0x00, 0x12, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x12, 0x00, 0x00, 0x00, 0x01,
    0x00, 0x00, 0x00, 0x12, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x12, 0x00, 0x00, 0x00, 0x01,
};

/* 80AC7270-80AC7290 0020+00 s=1 e=0 z=0  None .data      brkAnmData$4417 */
SECTION_DATA static u8 brkAnmData[32] = {
    0x00, 0x00, 0x00, 0x0F, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x0F, 0x00, 0x00, 0x00, 0x01,
    0x00, 0x00, 0x00, 0x0F, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x0F, 0x00, 0x00, 0x00, 0x01,
};

/* 80AC7290-80AC729C 000C+00 s=1 e=0 z=0  None .data      @4467 */
SECTION_DATA static void* lit_4467[3] = {
    (void*)NULL,
    (void*)0xFFFFFFFF,
    (void*)wait__12daNpc_seiB_cFPv,
};

/* 80AC729C-80AC72BC 0020+00 s=1 e=0 z=0  None .data      daNpc_seiB_MethodTable */
SECTION_DATA static void* daNpc_seiB_MethodTable[8] = {
    (void*)daNpc_seiB_Create__FPv,
    (void*)daNpc_seiB_Delete__FPv,
    (void*)daNpc_seiB_Execute__FPv,
    (void*)daNpc_seiB_IsDelete__FPv,
    (void*)daNpc_seiB_Draw__FPv,
    (void*)NULL,
    (void*)NULL,
    (void*)NULL,
};

/* 80AC72BC-80AC72EC 0030+00 s=0 e=0 z=1  None .data      g_profile_NPC_SEIB */
SECTION_DATA void* g_profile_NPC_SEIB[12] = {
    (void*)0xFFFFFFFD, (void*)0x0007FFFD,
    (void*)0x02650000, (void*)&g_fpcLf_Method,
    (void*)0x00000E68, (void*)NULL,
    (void*)NULL,       (void*)&g_fopAc_Method,
    (void*)0x01660000, (void*)&daNpc_seiB_MethodTable,
    (void*)0x00044000, (void*)0x000E0000,
};

/* 80AC72EC-80AC72F8 000C+00 s=3 e=0 z=0  None .data      __vt__12J3DFrameCtrl */
SECTION_DATA static void* __vt__12J3DFrameCtrl[3] = {
    (void*)NULL,
    (void*)NULL,
    (void*)__dt__12J3DFrameCtrlFv,
};

/* 80AC72F8-80AC731C 0024+00 s=3 e=0 z=0  None .data      __vt__12dBgS_ObjAcch */
SECTION_DATA static void* __vt__12dBgS_ObjAcch[9] = {
    (void*)NULL, (void*)NULL, (void*)__dt__12dBgS_ObjAcchFv,
    (void*)NULL, (void*)NULL, (void*)func_80AC7008,
    (void*)NULL, (void*)NULL, (void*)func_80AC7000,
};

/* 80AC731C-80AC7328 000C+00 s=2 e=0 z=0  None .data      __vt__12dBgS_AcchCir */
SECTION_DATA static void* __vt__12dBgS_AcchCir[3] = {
    (void*)NULL,
    (void*)NULL,
    (void*)__dt__12dBgS_AcchCirFv,
};

/* 80AC7328-80AC7334 000C+00 s=3 e=0 z=0  None .data      __vt__10cCcD_GStts */
SECTION_DATA static void* __vt__10cCcD_GStts[3] = {
    (void*)NULL,
    (void*)NULL,
    (void*)__dt__10cCcD_GSttsFv,
};

/* 80AC7334-80AC7340 000C+00 s=2 e=0 z=0  None .data      __vt__10dCcD_GStts */
SECTION_DATA static void* __vt__10dCcD_GStts[3] = {
    (void*)NULL,
    (void*)NULL,
    (void*)__dt__10dCcD_GSttsFv,
};

/* 80AC7340-80AC734C 000C+00 s=3 e=0 z=0  None .data      __vt__22daNpcT_MotionSeqMngr_c */
SECTION_DATA static void* __vt__22daNpcT_MotionSeqMngr_c[3] = {
    (void*)NULL,
    (void*)NULL,
    (void*)__dt__22daNpcT_MotionSeqMngr_cFv,
};

/* 80AC734C-80AC7358 000C+00 s=4 e=0 z=0  None .data      __vt__18daNpcT_ActorMngr_c */
SECTION_DATA static void* __vt__18daNpcT_ActorMngr_c[3] = {
    (void*)NULL,
    (void*)NULL,
    (void*)__dt__18daNpcT_ActorMngr_cFv,
};

/* 80AC7358-80AC7364 000C+00 s=3 e=0 z=0  None .data      __vt__15daNpcT_JntAnm_c */
SECTION_DATA static void* __vt__15daNpcT_JntAnm_c[3] = {
    (void*)NULL,
    (void*)NULL,
    (void*)__dt__15daNpcT_JntAnm_cFv,
};

/* 80AC7364-80AC7428 00C4+00 s=2 e=0 z=0  None .data      __vt__12daNpc_seiB_c */
SECTION_DATA static void* __vt__12daNpc_seiB_c[49] = {
    (void*)NULL,
    (void*)NULL,
    (void*)__dt__12daNpc_seiB_cFv,
    (void*)ctrlBtk__8daNpcT_cFv,
    (void*)ctrlSubFaceMotion__8daNpcT_cFi,
    (void*)checkChangeJoint__8daNpcT_cFi,
    (void*)checkRemoveJoint__8daNpcT_cFi,
    (void*)getBackboneJointNo__8daNpcT_cFv,
    (void*)getNeckJointNo__8daNpcT_cFv,
    (void*)getHeadJointNo__8daNpcT_cFv,
    (void*)getFootLJointNo__8daNpcT_cFv,
    (void*)getFootRJointNo__8daNpcT_cFv,
    (void*)getEyeballLMaterialNo__8daNpcT_cFv,
    (void*)getEyeballRMaterialNo__8daNpcT_cFv,
    (void*)getEyeballMaterialNo__8daNpcT_cFv,
    (void*)ctrlJoint__8daNpcT_cFP8J3DJointP8J3DModel,
    (void*)afterJntAnm__8daNpcT_cFi,
    (void*)setParam__12daNpc_seiB_cFv,
    (void*)checkChangeEvt__8daNpcT_cFv,
    (void*)evtTalk__12daNpc_seiB_cFv,
    (void*)evtEndProc__8daNpcT_cFv,
    (void*)evtCutProc__12daNpc_seiB_cFv,
    (void*)setAfterTalkMotion__8daNpcT_cFv,
    (void*)evtProc__8daNpcT_cFv,
    (void*)action__12daNpc_seiB_cFv,
    (void*)beforeMove__12daNpc_seiB_cFv,
    (void*)afterMoved__8daNpcT_cFv,
    (void*)setAttnPos__12daNpc_seiB_cFv,
    (void*)setFootPos__8daNpcT_cFv,
    (void*)setCollision__8daNpcT_cFv,
    (void*)setFootPrtcl__8daNpcT_cFP4cXyzff,
    (void*)checkCullDraw__8daNpcT_cFv,
    (void*)twilight__8daNpcT_cFv,
    (void*)chkXYItems__8daNpcT_cFv,
    (void*)evtOrder__8daNpcT_cFv,
    (void*)decTmr__8daNpcT_cFv,
    (void*)clrParam__8daNpcT_cFv,
    (void*)drawDbgInfo__12daNpc_seiB_cFv,
    (void*)drawOtherMdl__8daNpcT_cFv,
    (void*)drawGhost__8daNpcT_cFv,
    (void*)afterSetFaceMotionAnm__8daNpcT_cFiifi,
    (void*)afterSetMotionAnm__12daNpc_seiB_cFiifi,
    (void*)getFaceMotionAnm__8daNpcT_cF26daNpcT_faceMotionAnmData_c,
    (void*)getMotionAnm__8daNpcT_cF22daNpcT_motionAnmData_c,
    (void*)changeAnm__8daNpcT_cFPiPi,
    (void*)changeBck__8daNpcT_cFPiPi,
    (void*)changeBtp__8daNpcT_cFPiPi,
    (void*)changeBtk__8daNpcT_cFPiPi,
    (void*)setMotionAnm__8daNpcT_cFifi,
};

/* 80AC50EC-80AC5188 009C+00 s=1 e=0 z=0  None .text      __dt__12daNpc_seiB_cFv */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm daNpc_seiB_c::~daNpc_seiB_c() {
    nofralloc
#include "asm/rel/d/a/npc/d_a_npc_seib/d_a_npc_seib/__dt__12daNpc_seiB_cFv.s"
}
#pragma pop

/* 80AC5188-80AC53C8 0240+00 s=1 e=0 z=0  None .text      create__12daNpc_seiB_cFv */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void daNpc_seiB_c::create() {
    nofralloc
#include "asm/rel/d/a/npc/d_a_npc_seib/d_a_npc_seib/create__12daNpc_seiB_cFv.s"
}
#pragma pop

/* 80AC53C8-80AC5520 0158+00 s=1 e=0 z=0  None .text      CreateHeap__12daNpc_seiB_cFv */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void daNpc_seiB_c::CreateHeap() {
    nofralloc
#include "asm/rel/d/a/npc/d_a_npc_seib/d_a_npc_seib/CreateHeap__12daNpc_seiB_cFv.s"
}
#pragma pop

/* 80AC5520-80AC5554 0034+00 s=1 e=0 z=0  None .text      Delete__12daNpc_seiB_cFv */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void daNpc_seiB_c::Delete() {
    nofralloc
#include "asm/rel/d/a/npc/d_a_npc_seib/d_a_npc_seib/Delete__12daNpc_seiB_cFv.s"
}
#pragma pop

/* 80AC5554-80AC5574 0020+00 s=2 e=0 z=0  None .text      Execute__12daNpc_seiB_cFv */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void daNpc_seiB_c::Execute() {
    nofralloc
#include "asm/rel/d/a/npc/d_a_npc_seib/d_a_npc_seib/Execute__12daNpc_seiB_cFv.s"
}
#pragma pop

/* 80AC5574-80AC5608 0094+00 s=1 e=0 z=0  None .text      Draw__12daNpc_seiB_cFv */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void daNpc_seiB_c::Draw() {
    nofralloc
#include "asm/rel/d/a/npc/d_a_npc_seib/d_a_npc_seib/Draw__12daNpc_seiB_cFv.s"
}
#pragma pop

/* 80AC5608-80AC5628 0020+00 s=1 e=0 z=0  None .text
 * createHeapCallBack__12daNpc_seiB_cFP10fopAc_ac_c             */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void daNpc_seiB_c::createHeapCallBack(fopAc_ac_c* param_0) {
    nofralloc
#include "asm/rel/d/a/npc/d_a_npc_seib/d_a_npc_seib/createHeapCallBack__12daNpc_seiB_cFP10fopAc_ac_c.s"
}
#pragma pop

/* 80AC5628-80AC5648 0020+00 s=1 e=0 z=0  None .text      getType__12daNpc_seiB_cFv */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void daNpc_seiB_c::getType() {
    nofralloc
#include "asm/rel/d/a/npc/d_a_npc_seib/d_a_npc_seib/getType__12daNpc_seiB_cFv.s"
}
#pragma pop

/* 80AC5648-80AC5664 001C+00 s=1 e=0 z=0  None .text      getFlowNodeNo__12daNpc_seiB_cFv */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void daNpc_seiB_c::getFlowNodeNo() {
    nofralloc
#include "asm/rel/d/a/npc/d_a_npc_seib/d_a_npc_seib/getFlowNodeNo__12daNpc_seiB_cFv.s"
}
#pragma pop

/* 80AC5664-80AC566C 0008+00 s=1 e=0 z=0  None .text      isDelete__12daNpc_seiB_cFv */
bool daNpc_seiB_c::isDelete() {
    return false;
}

/* 80AC566C-80AC57C4 0158+00 s=1 e=0 z=0  None .text      reset__12daNpc_seiB_cFv */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void daNpc_seiB_c::reset() {
    nofralloc
#include "asm/rel/d/a/npc/d_a_npc_seib/d_a_npc_seib/reset__12daNpc_seiB_cFv.s"
}
#pragma pop

/* 80AC57C4-80AC58DC 0118+00 s=1 e=0 z=0  None .text      setParam__12daNpc_seiB_cFv */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void daNpc_seiB_c::setParam() {
    nofralloc
#include "asm/rel/d/a/npc/d_a_npc_seib/d_a_npc_seib/setParam__12daNpc_seiB_cFv.s"
}
#pragma pop

/* 80AC58DC-80AC58F0 0014+00 s=1 e=0 z=0  None .text      getDistTable__12dAttention_cFi */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void dAttention_c::getDistTable(int param_0) {
    nofralloc
#include "asm/rel/d/a/npc/d_a_npc_seib/d_a_npc_seib/getDistTable__12dAttention_cFi.s"
}
#pragma pop

/* 80AC58F0-80AC58F4 0004+00 s=1 e=0 z=0  None .text      srchActors__12daNpc_seiB_cFv */
void daNpc_seiB_c::srchActors() {
    /* empty function */
}

/* 80AC58F4-80AC59F4 0100+00 s=1 e=0 z=0  None .text      evtTalk__12daNpc_seiB_cFv */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void daNpc_seiB_c::evtTalk() {
    nofralloc
#include "asm/rel/d/a/npc/d_a_npc_seib/d_a_npc_seib/evtTalk__12daNpc_seiB_cFv.s"
}
#pragma pop

/* 80AC59F4-80AC5ABC 00C8+00 s=1 e=0 z=0  None .text      evtCutProc__12daNpc_seiB_cFv */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void daNpc_seiB_c::evtCutProc() {
    nofralloc
#include "asm/rel/d/a/npc/d_a_npc_seib/d_a_npc_seib/evtCutProc__12daNpc_seiB_cFv.s"
}
#pragma pop

/* 80AC5ABC-80AC5B44 0088+00 s=1 e=0 z=0  None .text      action__12daNpc_seiB_cFv */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void daNpc_seiB_c::action() {
    nofralloc
#include "asm/rel/d/a/npc/d_a_npc_seib/d_a_npc_seib/action__12daNpc_seiB_cFv.s"
}
#pragma pop

/* 80AC5B44-80AC5BC4 0080+00 s=1 e=0 z=0  None .text      beforeMove__12daNpc_seiB_cFv */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void daNpc_seiB_c::beforeMove() {
    nofralloc
#include "asm/rel/d/a/npc/d_a_npc_seib/d_a_npc_seib/beforeMove__12daNpc_seiB_cFv.s"
}
#pragma pop

/* 80AC5BC4-80AC5C20 005C+00 s=1 e=0 z=0  None .text      setAttnPos__12daNpc_seiB_cFv */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void daNpc_seiB_c::setAttnPos() {
    nofralloc
#include "asm/rel/d/a/npc/d_a_npc_seib/d_a_npc_seib/setAttnPos__12daNpc_seiB_cFv.s"
}
#pragma pop

/* 80AC5C20-80AC5C28 0008+00 s=1 e=0 z=0  None .text      drawDbgInfo__12daNpc_seiB_cFv */
bool daNpc_seiB_c::drawDbgInfo() {
    return false;
}

/* 80AC5C28-80AC5DC0 0198+00 s=1 e=0 z=0  None .text      afterSetMotionAnm__12daNpc_seiB_cFiifi */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void daNpc_seiB_c::afterSetMotionAnm(int param_0, int param_1, f32 param_2, int param_3) {
    nofralloc
#include "asm/rel/d/a/npc/d_a_npc_seib/d_a_npc_seib/afterSetMotionAnm__12daNpc_seiB_cFiifi.s"
}
#pragma pop

/* 80AC5DC0-80AC5E08 0048+00 s=1 e=0 z=0  None .text      selectAction__12daNpc_seiB_cFv */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void daNpc_seiB_c::selectAction() {
    nofralloc
#include "asm/rel/d/a/npc/d_a_npc_seib/d_a_npc_seib/selectAction__12daNpc_seiB_cFv.s"
}
#pragma pop

/* 80AC5E08-80AC5E34 002C+00 s=1 e=0 z=0  None .text
 * chkAction__12daNpc_seiB_cFM12daNpc_seiB_cFPCvPvPv_i          */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void daNpc_seiB_c::chkAction(int (daNpc_seiB_c::*)(void*)) {
    nofralloc
#include "asm/rel/d/a/npc/d_a_npc_seib/d_a_npc_seib/chkAction__12daNpc_seiB_cFM12daNpc_seiB_cFPCvPvPv_i.s"
}
#pragma pop

/* 80AC5E34-80AC5EDC 00A8+00 s=2 e=0 z=0  None .text
 * setAction__12daNpc_seiB_cFM12daNpc_seiB_cFPCvPvPv_i          */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void daNpc_seiB_c::setAction(int (daNpc_seiB_c::*)(void*)) {
    nofralloc
#include "asm/rel/d/a/npc/d_a_npc_seib/d_a_npc_seib/setAction__12daNpc_seiB_cFM12daNpc_seiB_cFPCvPvPv_i.s"
}
#pragma pop

/* 80AC5EDC-80AC6140 0264+00 s=1 e=0 z=0  None .text      ctrlWaitAnm__12daNpc_seiB_cFv */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void daNpc_seiB_c::ctrlWaitAnm() {
    nofralloc
#include "asm/rel/d/a/npc/d_a_npc_seib/d_a_npc_seib/ctrlWaitAnm__12daNpc_seiB_cFv.s"
}
#pragma pop

/* 80AC6140-80AC616C 002C+00 s=1 e=0 z=0  None .text      wait__12daNpc_seiB_cFPv */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void daNpc_seiB_c::wait(void* param_0) {
    nofralloc
#include "asm/rel/d/a/npc/d_a_npc_seib/d_a_npc_seib/wait__12daNpc_seiB_cFPv.s"
}
#pragma pop

/* 80AC616C-80AC620C 00A0+00 s=2 e=0 z=0  None .text      talk__12daNpc_seiB_cFPv */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void daNpc_seiB_c::talk(void* param_0) {
    nofralloc
#include "asm/rel/d/a/npc/d_a_npc_seib/d_a_npc_seib/talk__12daNpc_seiB_cFPv.s"
}
#pragma pop

/* 80AC620C-80AC622C 0020+00 s=1 e=0 z=0  None .text      daNpc_seiB_Create__FPv */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm static void daNpc_seiB_Create(void* param_0) {
    nofralloc
#include "asm/rel/d/a/npc/d_a_npc_seib/d_a_npc_seib/daNpc_seiB_Create__FPv.s"
}
#pragma pop

/* 80AC622C-80AC624C 0020+00 s=1 e=0 z=0  None .text      daNpc_seiB_Delete__FPv */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm static void daNpc_seiB_Delete(void* param_0) {
    nofralloc
#include "asm/rel/d/a/npc/d_a_npc_seib/d_a_npc_seib/daNpc_seiB_Delete__FPv.s"
}
#pragma pop

/* 80AC624C-80AC626C 0020+00 s=1 e=0 z=0  None .text      daNpc_seiB_Execute__FPv */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm static void daNpc_seiB_Execute(void* param_0) {
    nofralloc
#include "asm/rel/d/a/npc/d_a_npc_seib/d_a_npc_seib/daNpc_seiB_Execute__FPv.s"
}
#pragma pop

/* 80AC626C-80AC628C 0020+00 s=1 e=0 z=0  None .text      daNpc_seiB_Draw__FPv */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm static void daNpc_seiB_Draw(void* param_0) {
    nofralloc
#include "asm/rel/d/a/npc/d_a_npc_seib/d_a_npc_seib/daNpc_seiB_Draw__FPv.s"
}
#pragma pop

/* 80AC628C-80AC6294 0008+00 s=1 e=0 z=0  None .text      daNpc_seiB_IsDelete__FPv */
static bool daNpc_seiB_IsDelete(void* param_0) {
    return true;
}

/* 80AC6294-80AC62DC 0048+00 s=1 e=0 z=0  None .text      __dt__10cCcD_GSttsFv */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm cCcD_GStts::~cCcD_GStts() {
    nofralloc
#include "asm/rel/d/a/npc/d_a_npc_seib/d_a_npc_seib/__dt__10cCcD_GSttsFv.s"
}
#pragma pop

/* 80AC62DC-80AC6664 0388+00 s=1 e=0 z=0  None .text      __dt__8daNpcT_cFv */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm daNpcT_c::~daNpcT_c() {
    nofralloc
#include "asm/rel/d/a/npc/d_a_npc_seib/d_a_npc_seib/__dt__8daNpcT_cFv.s"
}
#pragma pop

/* 80AC6664-80AC66A0 003C+00 s=3 e=0 z=0  None .text      __dt__4cXyzFv */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm cXyz::~cXyz() {
    nofralloc
#include "asm/rel/d/a/npc/d_a_npc_seib/d_a_npc_seib/__dt__4cXyzFv.s"
}
#pragma pop

/* 80AC66A0-80AC66DC 003C+00 s=2 e=0 z=0  None .text      __dt__5csXyzFv */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm csXyz::~csXyz() {
    nofralloc
#include "asm/rel/d/a/npc/d_a_npc_seib/d_a_npc_seib/__dt__5csXyzFv.s"
}
#pragma pop

/* 80AC66DC-80AC6AE0 0404+00 s=1 e=0 z=0  None .text
 * __ct__8daNpcT_cFPC26daNpcT_faceMotionAnmData_cPC22daNpcT_motionAnmData_cPCQ222daNpcT_MotionSeqMngr_c18sequenceStepData_ciPCQ222daNpcT_MotionSeqMngr_c18sequenceStepData_ciPC16daNpcT_evtData_cPPc
 */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm daNpcT_c::daNpcT_c(daNpcT_faceMotionAnmData_c const* param_0,
                       daNpcT_motionAnmData_c const* param_1,
                       daNpcT_MotionSeqMngr_c::sequenceStepData_c const* param_2, int param_3,
                       daNpcT_MotionSeqMngr_c::sequenceStepData_c const* param_4, int param_5,
                       daNpcT_evtData_c const* param_6, char** param_7) {
    nofralloc
#include "asm/rel/d/a/npc/d_a_npc_seib/d_a_npc_seib/func_80AC66DC.s"
}
#pragma pop

/* 80AC6AE0-80AC6AE4 0004+00 s=1 e=0 z=0  None .text      __ct__5csXyzFv */
csXyz::csXyz() {
    /* empty function */
}

/* 80AC6AE4-80AC6BE0 00FC+00 s=1 e=0 z=0  None .text      __dt__15daNpcT_JntAnm_cFv */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm daNpcT_JntAnm_c::~daNpcT_JntAnm_c() {
    nofralloc
#include "asm/rel/d/a/npc/d_a_npc_seib/d_a_npc_seib/__dt__15daNpcT_JntAnm_cFv.s"
}
#pragma pop

/* 80AC6BE0-80AC6BE4 0004+00 s=1 e=0 z=0  None .text      __ct__4cXyzFv */
cXyz::cXyz() {
    /* empty function */
}

/* 80AC6BE4-80AC6C2C 0048+00 s=1 e=0 z=0  None .text      __dt__18daNpcT_ActorMngr_cFv */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm daNpcT_ActorMngr_c::~daNpcT_ActorMngr_c() {
    nofralloc
#include "asm/rel/d/a/npc/d_a_npc_seib/d_a_npc_seib/__dt__18daNpcT_ActorMngr_cFv.s"
}
#pragma pop

/* 80AC6C2C-80AC6C74 0048+00 s=1 e=0 z=0  None .text      __dt__22daNpcT_MotionSeqMngr_cFv */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm daNpcT_MotionSeqMngr_c::~daNpcT_MotionSeqMngr_c() {
    nofralloc
#include "asm/rel/d/a/npc/d_a_npc_seib/d_a_npc_seib/__dt__22daNpcT_MotionSeqMngr_cFv.s"
}
#pragma pop

/* 80AC6C74-80AC6CE4 0070+00 s=1 e=0 z=0  None .text      __dt__12dBgS_AcchCirFv */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm dBgS_AcchCir::~dBgS_AcchCir() {
    nofralloc
#include "asm/rel/d/a/npc/d_a_npc_seib/d_a_npc_seib/__dt__12dBgS_AcchCirFv.s"
}
#pragma pop

/* 80AC6CE4-80AC6D40 005C+00 s=1 e=0 z=0  None .text      __dt__10dCcD_GSttsFv */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm dCcD_GStts::~dCcD_GStts() {
    nofralloc
#include "asm/rel/d/a/npc/d_a_npc_seib/d_a_npc_seib/__dt__10dCcD_GSttsFv.s"
}
#pragma pop

/* 80AC6D40-80AC6DB0 0070+00 s=3 e=0 z=0  None .text      __dt__12dBgS_ObjAcchFv */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm dBgS_ObjAcch::~dBgS_ObjAcch() {
    nofralloc
#include "asm/rel/d/a/npc/d_a_npc_seib/d_a_npc_seib/__dt__12dBgS_ObjAcchFv.s"
}
#pragma pop

/* 80AC6DB0-80AC6DF8 0048+00 s=1 e=0 z=0  None .text      __dt__12J3DFrameCtrlFv */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm J3DFrameCtrl::~J3DFrameCtrl() {
    nofralloc
#include "asm/rel/d/a/npc/d_a_npc_seib/d_a_npc_seib/__dt__12J3DFrameCtrlFv.s"
}
#pragma pop

/* 80AC6DF8-80AC6E00 0008+00 s=1 e=0 z=0  None .text      getEyeballMaterialNo__8daNpcT_cFv */
bool daNpcT_c::getEyeballMaterialNo() {
    return false;
}

/* 80AC6E00-80AC6E04 0004+00 s=1 e=0 z=0  None .text      ctrlSubFaceMotion__8daNpcT_cFi */
void daNpcT_c::ctrlSubFaceMotion(int param_0) {
    /* empty function */
}

/* 80AC6E04-80AC6E0C 0008+00 s=1 e=0 z=0  None .text      checkChangeJoint__8daNpcT_cFi */
bool daNpcT_c::checkChangeJoint(int param_0) {
    return false;
}

/* 80AC6E0C-80AC6E14 0008+00 s=1 e=0 z=0  None .text      checkRemoveJoint__8daNpcT_cFi */
bool daNpcT_c::checkRemoveJoint(int param_0) {
    return false;
}

/* 80AC6E14-80AC6E1C 0008+00 s=1 e=0 z=0  None .text      getBackboneJointNo__8daNpcT_cFv */
s32 daNpcT_c::getBackboneJointNo() {
    return -1;
}

/* 80AC6E1C-80AC6E24 0008+00 s=1 e=0 z=0  None .text      getNeckJointNo__8daNpcT_cFv */
s32 daNpcT_c::getNeckJointNo() {
    return -1;
}

/* 80AC6E24-80AC6E2C 0008+00 s=1 e=0 z=0  None .text      getHeadJointNo__8daNpcT_cFv */
s32 daNpcT_c::getHeadJointNo() {
    return -1;
}

/* 80AC6E2C-80AC6E34 0008+00 s=1 e=0 z=0  None .text      getFootLJointNo__8daNpcT_cFv */
s32 daNpcT_c::getFootLJointNo() {
    return -1;
}

/* 80AC6E34-80AC6E3C 0008+00 s=1 e=0 z=0  None .text      getFootRJointNo__8daNpcT_cFv */
s32 daNpcT_c::getFootRJointNo() {
    return -1;
}

/* 80AC6E3C-80AC6E44 0008+00 s=1 e=0 z=0  None .text      getEyeballLMaterialNo__8daNpcT_cFv */
bool daNpcT_c::getEyeballLMaterialNo() {
    return false;
}

/* 80AC6E44-80AC6E4C 0008+00 s=1 e=0 z=0  None .text      getEyeballRMaterialNo__8daNpcT_cFv */
bool daNpcT_c::getEyeballRMaterialNo() {
    return false;
}

/* 80AC6E4C-80AC6E50 0004+00 s=1 e=0 z=0  None .text      afterJntAnm__8daNpcT_cFi */
void daNpcT_c::afterJntAnm(int param_0) {
    /* empty function */
}

/* 80AC6E50-80AC6E58 0008+00 s=1 e=0 z=0  None .text      checkChangeEvt__8daNpcT_cFv */
bool daNpcT_c::checkChangeEvt() {
    return false;
}

/* 80AC6E58-80AC6E60 0008+00 s=1 e=0 z=0  None .text      evtEndProc__8daNpcT_cFv */
bool daNpcT_c::evtEndProc() {
    return true;
}

/* 80AC6E60-80AC6E64 0004+00 s=1 e=0 z=0  None .text      setAfterTalkMotion__8daNpcT_cFv */
void daNpcT_c::setAfterTalkMotion() {
    /* empty function */
}

/* 80AC6E64-80AC6E68 0004+00 s=1 e=0 z=0  None .text      afterMoved__8daNpcT_cFv */
void daNpcT_c::afterMoved() {
    /* empty function */
}

/* 80AC6E68-80AC6E6C 0004+00 s=1 e=0 z=0  None .text      setCollision__8daNpcT_cFv */
void daNpcT_c::setCollision() {
    /* empty function */
}

/* 80AC6E6C-80AC6E74 0008+00 s=1 e=0 z=0  None .text      chkXYItems__8daNpcT_cFv */
bool daNpcT_c::chkXYItems() {
    return false;
}

/* 80AC6E74-80AC6E8C 0018+00 s=1 e=0 z=0  None .text      decTmr__8daNpcT_cFv */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void daNpcT_c::decTmr() {
    nofralloc
#include "asm/rel/d/a/npc/d_a_npc_seib/d_a_npc_seib/decTmr__8daNpcT_cFv.s"
}
#pragma pop

/* 80AC6E8C-80AC6E90 0004+00 s=1 e=0 z=0  None .text      drawOtherMdl__8daNpcT_cFv */
void daNpcT_c::drawOtherMdl() {
    /* empty function */
}

/* 80AC6E90-80AC6E94 0004+00 s=1 e=0 z=0  None .text      drawGhost__8daNpcT_cFv */
void daNpcT_c::drawGhost() {
    /* empty function */
}

/* 80AC6E94-80AC6E9C 0008+00 s=1 e=0 z=0  None .text      afterSetFaceMotionAnm__8daNpcT_cFiifi */
bool daNpcT_c::afterSetFaceMotionAnm(int param_0, int param_1, f32 param_2, int param_3) {
    return true;
}

/* 80AC6E9C-80AC6ECC 0030+00 s=1 e=0 z=0  None .text
 * getFaceMotionAnm__8daNpcT_cF26daNpcT_faceMotionAnmData_c     */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void daNpcT_c::getFaceMotionAnm(daNpcT_faceMotionAnmData_c param_0) {
    nofralloc
#include "asm/rel/d/a/npc/d_a_npc_seib/d_a_npc_seib/getFaceMotionAnm__8daNpcT_cF26daNpcT_faceMotionAnmData_c.s"
}
#pragma pop

/* 80AC6ECC-80AC6EFC 0030+00 s=1 e=0 z=0  None .text
 * getMotionAnm__8daNpcT_cF22daNpcT_motionAnmData_c             */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void daNpcT_c::getMotionAnm(daNpcT_motionAnmData_c param_0) {
    nofralloc
#include "asm/rel/d/a/npc/d_a_npc_seib/d_a_npc_seib/getMotionAnm__8daNpcT_cF22daNpcT_motionAnmData_c.s"
}
#pragma pop

/* 80AC6EFC-80AC6F00 0004+00 s=1 e=0 z=0  None .text      changeAnm__8daNpcT_cFPiPi */
void daNpcT_c::changeAnm(int* param_0, int* param_1) {
    /* empty function */
}

/* 80AC6F00-80AC6F04 0004+00 s=1 e=0 z=0  None .text      changeBck__8daNpcT_cFPiPi */
void daNpcT_c::changeBck(int* param_0, int* param_1) {
    /* empty function */
}

/* 80AC6F04-80AC6F08 0004+00 s=1 e=0 z=0  None .text      changeBtp__8daNpcT_cFPiPi */
void daNpcT_c::changeBtp(int* param_0, int* param_1) {
    /* empty function */
}

/* 80AC6F08-80AC6F0C 0004+00 s=1 e=0 z=0  None .text      changeBtk__8daNpcT_cFPiPi */
void daNpcT_c::changeBtk(int* param_0, int* param_1) {
    /* empty function */
}

/* ############################################################################################## */
/* 80AC7428-80AC7434 000C+00 s=2 e=0 z=0  None .data      __vt__18daNpc_seiB_Param_c */
SECTION_DATA static void* __vt__18daNpc_seiB_Param_c[3] = {
    (void*)NULL,
    (void*)NULL,
    (void*)__dt__18daNpc_seiB_Param_cFv,
};

/* 80AC7440-80AC744C 000C+00 s=1 e=0 z=0  None .bss       @3814 */
static u8 lit_3814[12];

/* 80AC744C-80AC7450 0004+00 s=1 e=0 z=0  None .bss       l_HIO */
static u8 l_HIO[4];

/* 80AC6F0C-80AC6F74 0068+00 s=0 e=1 z=0  None .text      __sinit_d_a_npc_seib_cpp */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
extern "C" asm void __sinit_d_a_npc_seib_cpp() {
    nofralloc
#include "asm/rel/d/a/npc/d_a_npc_seib/d_a_npc_seib/__sinit_d_a_npc_seib_cpp.s"
}
#pragma pop

/* 80AC6F74-80AC6FB8 0044+00 s=1 e=0 z=0  None .text
 * __ct__12daNpc_seiB_cFPC26daNpcT_faceMotionAnmData_cPC22daNpcT_motionAnmData_cPCQ222daNpcT_MotionSeqMngr_c18sequenceStepData_ciPCQ222daNpcT_MotionSeqMngr_c18sequenceStepData_ciPC16daNpcT_evtData_cPPc
 */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm daNpc_seiB_c::daNpc_seiB_c(daNpcT_faceMotionAnmData_c const* param_0,
                               daNpcT_motionAnmData_c const* param_1,
                               daNpcT_MotionSeqMngr_c::sequenceStepData_c const* param_2,
                               int param_3,
                               daNpcT_MotionSeqMngr_c::sequenceStepData_c const* param_4,
                               int param_5, daNpcT_evtData_c const* param_6, char** param_7) {
    nofralloc
#include "asm/rel/d/a/npc/d_a_npc_seib/d_a_npc_seib/func_80AC6F74.s"
}
#pragma pop

/* 80AC6FB8-80AC7000 0048+00 s=2 e=0 z=0  None .text      __dt__18daNpc_seiB_Param_cFv */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm daNpc_seiB_Param_c::~daNpc_seiB_Param_c() {
    nofralloc
#include "asm/rel/d/a/npc/d_a_npc_seib/d_a_npc_seib/__dt__18daNpc_seiB_Param_cFv.s"
}
#pragma pop

/* 80AC7000-80AC7008 0008+00 s=1 e=0 z=0  None .text      @36@__dt__12dBgS_ObjAcchFv */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
extern "C" asm static void func_80AC7000() {
    nofralloc
#include "asm/rel/d/a/npc/d_a_npc_seib/d_a_npc_seib/func_80AC7000.s"
}
#pragma pop

/* 80AC7008-80AC7010 0008+00 s=1 e=0 z=0  None .text      @20@__dt__12dBgS_ObjAcchFv */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
extern "C" asm static void func_80AC7008() {
    nofralloc
#include "asm/rel/d/a/npc/d_a_npc_seib/d_a_npc_seib/func_80AC7008.s"
}
#pragma pop
