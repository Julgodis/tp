//
// Generated By: dol2asm
// Translation Unit: d_a_mg_fish
//

#include "rel/d/a/d_a_mg_fish/d_a_mg_fish.h"
#include "dol2asm.h"
#include "dolphin/types.h"

//
// Types:
//

struct daMg_Fish_HIO_c {
    /* 80529D2C */ daMg_Fish_HIO_c();
    /* 805360A8 */ ~daMg_Fish_HIO_c();
};

struct mg_fish_class {};

struct Vec {};

struct cXyz {
    /* 80266B34 */ void operator-(Vec const&) const;
    /* 80529E4C */ ~cXyz();
    /* 8053605C */ cXyz();
};

struct J3DJoint {};

struct dBgS_ObjGndChk {
    /* 8052BAB8 */ ~dBgS_ObjGndChk();
};

struct mf_ke_s {
    /* 80535F74 */ ~mf_ke_s();
    /* 80535FD4 */ mf_ke_s();
};

struct fopAc_ac_c {
    /* 80018B64 */ fopAc_ac_c();
};

struct J3DFrameCtrl {
    /* 803283FC */ void init(s16);
    /* 80534E90 */ ~J3DFrameCtrl();
};

struct cM3dGCyl {
    /* 8026F1DC */ void SetC(cXyz const&);
    /* 8026F1F8 */ void SetH(f32);
    /* 8026F200 */ void SetR(f32);
    /* 80535DA8 */ ~cM3dGCyl();
};

struct cM3dGAab {
    /* 80535DF0 */ ~cM3dGAab();
};

struct dCcD_GStts {
    /* 80083760 */ dCcD_GStts();
    /* 80535E38 */ ~dCcD_GStts();
};

struct dBgS_ObjAcch {
    /* 80535E94 */ ~dBgS_ObjAcch();
};

struct dBgS_AcchCir {
    /* 80075EAC */ dBgS_AcchCir();
    /* 80075F58 */ void SetWall(f32, f32);
    /* 80535F04 */ ~dBgS_AcchCir();
};

struct csXyz {
    /* 8053601C */ ~csXyz();
    /* 80536058 */ csXyz();
};

struct cCcD_GStts {
    /* 80536060 */ ~cCcD_GStts();
};

struct mDoMtx_stack_c {
    /* 8000CD9C */ void transM(f32, f32, f32);
    /* 8000CE38 */ void scaleM(f32, f32, f32);
};

struct mDoExt_baseAnm {
    /* 8000D428 */ void play();
};

struct J3DAnmTexPattern {};

struct J3DMaterialTable {};

struct mDoExt_btpAnm {
    /* 8000D54C */ void init(J3DMaterialTable*, J3DAnmTexPattern*, int, int, f32, s16, s16);
    /* 8000D5E8 */ void entry(J3DMaterialTable*, s16);
};

struct J3DAnmTevRegKey {};

struct mDoExt_brkAnm {
    /* 8000D70C */ void init(J3DMaterialTable*, J3DAnmTevRegKey*, int, int, f32, s16, s16);
    /* 8000D7A8 */ void entry(J3DMaterialTable*, f32);
};

struct J3DModel {};

struct mDoExt_McaMorfCallBack2_c {};

struct J3DAnmTransform {};

struct mDoExt_McaMorfCallBack1_c {};

struct J3DModelData {};

struct mDoExt_McaMorf {
    /* 8000FC4C */ mDoExt_McaMorf(J3DModelData*, mDoExt_McaMorfCallBack1_c*,
                                  mDoExt_McaMorfCallBack2_c*, J3DAnmTransform*, int, f32, int, int,
                                  int, void*, u32, u32);
    /* 8001037C */ void setAnm(J3DAnmTransform*, int, f32, f32, f32, f32, void*);
    /* 800105C8 */ void play(Vec*, u32, s8);
    /* 80010680 */ void entryDL();
    /* 800106AC */ void modelCalc();
};

struct _GXColor {};

struct dKy_tevstr_c {};

struct mDoExt_3DlineMat0_c {
    /* 800125E0 */ void init(u16, u16, int);
    /* 80012E3C */ void update(int, _GXColor&, dKy_tevstr_c*);
};

struct mDoExt_3DlineMat_c {};

struct mDoExt_3DlineMatSortPacket {
    /* 80014738 */ void setMat(mDoExt_3DlineMat_c*);
};

struct request_of_phase_process_class {};

struct cBgS_PolyInfo {
    /* 802680B0 */ ~cBgS_PolyInfo();
};

struct _GXTexObj {};

struct dSv_event_c {
    /* 8003498C */ void onEventBit(u16);
    /* 800349E0 */ void setEventReg(u16, u8);
    /* 80034A04 */ void getEventReg(u16) const;
};

struct dSv_info_c {
    /* 80035360 */ void isSwitch(int, int) const;
};

struct dRes_info_c {};

struct dRes_control_c {
    /* 8003C2EC */ void getRes(char const*, s32, dRes_info_c*, int);
};

struct dPa_levelEcallBack {};

struct dPa_control_c {
    struct level_c {
        /* 8004B918 */ void getEmitter(u32);
    };

    /* 8004D4CC */ void set(u32, u8, u16, cXyz const*, dKy_tevstr_c const*, csXyz const*,
                            cXyz const*, u8, dPa_levelEcallBack*, s8, _GXColor const*,
                            _GXColor const*, cXyz const*, f32);
};

struct dVibration_c {
    /* 8006FA24 */ void StartShock(int, int, cXyz);
};

struct cBgS_GndChk {
    /* 80267D28 */ void SetPos(cXyz const*);
};

struct cBgS_LinChk {};

struct cBgS {
    /* 800743B4 */ void LineCross(cBgS_LinChk*);
    /* 800744A0 */ void GroundCross(cBgS_GndChk*);
};

struct dBgS {};

struct dBgS_Acch {
    /* 80075F94 */ ~dBgS_Acch();
    /* 800760A0 */ dBgS_Acch();
    /* 80076248 */ void Set(cXyz*, cXyz*, fopAc_ac_c*, int, dBgS_AcchCir*, cXyz*, csXyz*, csXyz*);
    /* 80076AAC */ void CrrPos(dBgS&);
};

struct dBgS_GndChk {
    /* 8007757C */ dBgS_GndChk();
    /* 800775F0 */ ~dBgS_GndChk();
};

struct dBgS_ObjGndChk_Spl {
    /* 800777B0 */ dBgS_ObjGndChk_Spl();
    /* 80077848 */ ~dBgS_ObjGndChk_Spl();
};

struct dBgS_LinChk {
    /* 80077C68 */ dBgS_LinChk();
    /* 80077CDC */ ~dBgS_LinChk();
    /* 80077D64 */ void Set(cXyz const*, cXyz const*, fopAc_ac_c const*);
};

struct dBgS_PolyPassChk {
    /* 80078E68 */ void SetObj();
};

struct dCcD_Stts {
    /* 80083860 */ void Init(int, int, fopAc_ac_c*);
};

struct dCcD_GObjInf {
    /* 80083A28 */ dCcD_GObjInf();
};

struct dCcD_SrcCyl {};

struct dCcD_Cyl {
    /* 800848B4 */ void Set(dCcD_SrcCyl const&);
};

struct daPy_py_c {
    /* 8015F4F0 */ void setLookPos(cXyz*);
};

struct dScnKy_env_light_c {
    /* 801A37C4 */ void settingTevStruct(int, cXyz*, dKy_tevstr_c*);
    /* 801A4DA0 */ void setLightTevColorType_MAJI(J3DModelData*, dKy_tevstr_c*);
};

struct cCcD_Obj {};

struct cCcS {
    /* 80264BA8 */ void Set(cCcD_Obj*);
};

struct cM3dGCir {
    /* 8026EF18 */ ~cM3dGCir();
};

struct JGeometry {
    template <typename A1>
    struct TVec3 {};
    /* TVec3<f32> */
    struct TVec3__template0 {};
};

struct JAISoundID {};

struct Z2SeMgr {
    /* 802AB984 */ void seStart(JAISoundID, Vec const*, u32, s8, f32, f32, f32, f32, u8);
};

struct Z2SeqMgr {
    /* 802AFF8C */ void changeBgmStatus(s32);
    /* 802B2A88 */ void changeFishingBgm(s32);
};

struct Z2Creature {
    /* 802C03C8 */ Z2Creature();
    /* 802C0530 */ void init(Vec*, Vec*, u8, u8);
};

//
// Forward References:
//

static void hit_vib_set(mg_fish_class*);                  // 2
static void sibuki_set(mg_fish_class*, f32, cXyz);        // 2
static void s_hitfish_sub(void*, void*);                  // 2
static void pl_check(mg_fish_class*, f32);                // 2
static void anm_init(mg_fish_class*, int, f32, u8, f32);  // 2
static void mouth_open(mg_fish_class*);                   // 2
static void mouth_close(mg_fish_class*);                  // 2
static void s_lure_sub(void*, void*);                     // 2
static void s_esa_sub(void*, void*);                      // 2
static void s_bait_sub(void*, void*);                     // 2
static void s_other_search_sub(void*, void*);             // 2
static void search_lure(mg_fish_class*, int);             // 2
static void s_other_bait_sub(void*, void*);               // 2
static void search_bait(mg_fish_class*);                  // 2
static void nodeCallBack(J3DJoint*, int);                 // 2
static void nodeCallBack2(J3DJoint*, int);                // 2
static void nodeCallBackLH(J3DJoint*, int);               // 2
static void nodeCallBackBB(J3DJoint*, int);               // 2
static void s_bt_sub(void*, void*);                       // 2
static void s_sp_sub(void*, void*);                       // 2
static void s_lh_sub(void*, void*);                       // 2
static void s_bin_sub(void*, void*);                      // 2
static void s_kn_sub(void*, void*);                       // 2
static void s_ed_sub(void*, void*);                       // 2
static void s_sy_sub(void*, void*);                       // 2
static void s_bb_sub(void*, void*);                       // 2
static void s_bb2_sub(void*, void*);                      // 2
static void s_sg_sub(void*, void*);                       // 2
static void daMg_Fish_Draw(mg_fish_class*);               // 2
static void get_surface_y(mg_fish_class*, cXyz*);         // 2
static void get_ground_y(mg_fish_class*, cXyz*);          // 2
static void mf_swim(mg_fish_class*);                      // 2
static void pos_bg_check(cXyz*, cXyz*);                   // 2
static void path_search(mg_fish_class*);                  // 2
static void mf_swim_p(mg_fish_class*);                    // 2
static void mf_swim_s(mg_fish_class*);                    // 2
static void mf_stay(mg_fish_class*);                      // 2
static void mf_away(mg_fish_class*);                      // 2
static void ri_swim(mg_fish_class*);                      // 2
static void dmcalc(mg_fish_class*);                       // 2
static void mf_lure_search(mg_fish_class*);               // 2
static void mf_bait_search(mg_fish_class*);               // 2
static void mf_hit(mg_fish_class*);                       // 2
void mf_jump(mg_fish_class*);                             // 2
static void pota_set(mg_fish_class*);                     // 2
static void mf_catch(mg_fish_class*);                     // 2
static void mf_esa_search(mg_fish_class*);                // 2
static void mf_esa_hit(mg_fish_class*);                   // 2
static void mf_esa_catch(mg_fish_class*);                 // 2
static void mf_aqua(mg_fish_class*);                      // 2
static void ri_aqua(mg_fish_class*);                      // 2
static void mf_aqua_tilt(mg_fish_class*);                 // 2
static void action(mg_fish_class*);                       // 2
static void ke_control(mg_fish_class*, mf_ke_s*);         // 2
static void ke_move(mg_fish_class*, mf_ke_s*, int);       // 2
static void daMg_Fish_Execute(mg_fish_class*);            // 2
static bool daMg_Fish_IsDelete(mg_fish_class*);           // 2
static void daMg_Fish_Delete(mg_fish_class*);             // 2
static void useHeapInit2(fopAc_ac_c*);                    // 2
static void useHeapImg_fisht(fopAc_ac_c*);                // 2
static void daMg_Fish_Create(fopAc_ac_c*);                // 2

extern "C" void __ct__15daMg_Fish_HIO_cFv();                      // 1
extern "C" static void hit_vib_set__FP13mg_fish_class();          // 1
extern "C" void __dt__4cXyzFv();                                  // 1
extern "C" static void sibuki_set__FP13mg_fish_classf4cXyz();     // 1
extern "C" static void s_hitfish_sub__FPvPv();                    // 1
extern "C" static void pl_check__FP13mg_fish_classf();            // 1
extern "C" static void anm_init__FP13mg_fish_classifUcf();        // 1
extern "C" static void mouth_open__FP13mg_fish_class();           // 1
extern "C" static void mouth_close__FP13mg_fish_class();          // 1
extern "C" static void s_lure_sub__FPvPv();                       // 1
extern "C" static void s_esa_sub__FPvPv();                        // 1
extern "C" static void s_bait_sub__FPvPv();                       // 1
extern "C" static void s_other_search_sub__FPvPv();               // 1
extern "C" static void search_lure__FP13mg_fish_classi();         // 1
extern "C" static void s_other_bait_sub__FPvPv();                 // 1
extern "C" static void search_bait__FP13mg_fish_class();          // 1
extern "C" static void nodeCallBack__FP8J3DJointi();              // 1
extern "C" static void nodeCallBack2__FP8J3DJointi();             // 1
extern "C" static void nodeCallBackLH__FP8J3DJointi();            // 1
extern "C" static void nodeCallBackBB__FP8J3DJointi();            // 1
extern "C" static void s_bt_sub__FPvPv();                         // 1
extern "C" static void s_sp_sub__FPvPv();                         // 1
extern "C" static void s_lh_sub__FPvPv();                         // 1
extern "C" static void s_bin_sub__FPvPv();                        // 1
extern "C" static void s_kn_sub__FPvPv();                         // 1
extern "C" static void s_ed_sub__FPvPv();                         // 1
extern "C" static void s_sy_sub__FPvPv();                         // 1
extern "C" static void s_bb_sub__FPvPv();                         // 1
extern "C" static void s_bb2_sub__FPvPv();                        // 1
extern "C" static void s_sg_sub__FPvPv();                         // 1
extern "C" static void daMg_Fish_Draw__FP13mg_fish_class();       // 1
extern "C" static void get_surface_y__FP13mg_fish_classP4cXyz();  // 1
extern "C" static void get_ground_y__FP13mg_fish_classP4cXyz();   // 1
extern "C" void __dt__14dBgS_ObjGndChkFv();                       // 1
extern "C" static void mf_swim__FP13mg_fish_class();              // 1
extern "C" static void pos_bg_check__FP4cXyzP4cXyz();             // 1
extern "C" static void path_search__FP13mg_fish_class();          // 1
extern "C" static void mf_swim_p__FP13mg_fish_class();            // 1
extern "C" static void mf_swim_s__FP13mg_fish_class();            // 1
extern "C" static void mf_stay__FP13mg_fish_class();              // 1
extern "C" static void mf_away__FP13mg_fish_class();              // 1
extern "C" static void ri_swim__FP13mg_fish_class();              // 1
extern "C" static void dmcalc__FP13mg_fish_class();               // 1
extern "C" static void mf_lure_search__FP13mg_fish_class();       // 1
extern "C" static void mf_bait_search__FP13mg_fish_class();       // 1
extern "C" static void mf_hit__FP13mg_fish_class();               // 1
extern "C" void mf_jump__FP13mg_fish_class();                     // 1
extern "C" static void pota_set__FP13mg_fish_class();             // 1
extern "C" static void mf_catch__FP13mg_fish_class();             // 1
extern "C" static void mf_esa_search__FP13mg_fish_class();        // 1
extern "C" static void mf_esa_hit__FP13mg_fish_class();           // 1
extern "C" static void mf_esa_catch__FP13mg_fish_class();         // 1
extern "C" static void mf_aqua__FP13mg_fish_class();              // 1
extern "C" static void ri_aqua__FP13mg_fish_class();              // 1
extern "C" static void mf_aqua_tilt__FP13mg_fish_class();         // 1
extern "C" static void action__FP13mg_fish_class();               // 1
extern "C" static void ke_control__FP13mg_fish_classP7mf_ke_s();  // 1
extern "C" static void ke_move__FP13mg_fish_classP7mf_ke_si();    // 1
extern "C" static void daMg_Fish_Execute__FP13mg_fish_class();    // 1
extern "C" static bool daMg_Fish_IsDelete__FP13mg_fish_class();   // 1
extern "C" static void daMg_Fish_Delete__FP13mg_fish_class();     // 1
extern "C" static void useHeapInit2__FP10fopAc_ac_c();            // 1
extern "C" void __dt__12J3DFrameCtrlFv();                         // 1
extern "C" static void useHeapImg_fisht__FP10fopAc_ac_c();        // 1
extern "C" static void daMg_Fish_Create__FP10fopAc_ac_c();        // 1
extern "C" void __dt__8cM3dGCylFv();                              // 1
extern "C" void __dt__8cM3dGAabFv();                              // 1
extern "C" void __dt__10dCcD_GSttsFv();                           // 1
extern "C" void __dt__12dBgS_ObjAcchFv();                         // 1
extern "C" void __dt__12dBgS_AcchCirFv();                         // 1
extern "C" void __dt__7mf_ke_sFv();                               // 1
extern "C" void __ct__7mf_ke_sFv();                               // 1
extern "C" void __dt__5csXyzFv();                                 // 1
extern "C" void __ct__5csXyzFv();                                 // 1
extern "C" void __ct__4cXyzFv();                                  // 1
extern "C" void __dt__10cCcD_GSttsFv();                           // 1
extern "C" void __dt__15daMg_Fish_HIO_cFv();                      // 1
extern "C" void __sinit_d_a_mg_fish_cpp();                        // 1
extern "C" static void func_8053612C();                           // 1
extern "C" static void func_80536134();                           // 1
extern "C" static void func_8053613C();                           // 1
extern "C" static void func_80536144();                           // 1
extern "C" static void func_8053614C();                           // 1
extern "C" extern u32 const lit_3759;
extern "C" extern u8 const lit_3813[8];
extern "C" extern u8 const lit_3814[8];
extern "C" extern u8 const lit_3815[8];
extern "C" extern u32 const lit_3988;
extern "C" extern u32 const lit_3989;
extern "C" extern u32 const lit_3990;
extern "C" extern u32 const lit_3991;
extern "C" extern u32 const lit_4523;
extern "C" extern u32 const lit_4524;
extern "C" extern u32 const lit_4525;
extern "C" extern u32 const lit_4648;
extern "C" extern u32 const lit_4739;
extern "C" extern u32 const lit_4806;
extern "C" extern u32 const lit_4807;
extern "C" extern u32 const lit_5103;
extern "C" extern u32 const lit_5104;
extern "C" extern u32 const lit_5280;
extern "C" extern u32 const lit_5281;
extern "C" extern u32 const lit_5282;
extern "C" extern u32 const lit_5283;
extern "C" extern u32 const lit_5284;
extern "C" extern u32 const lit_5285;
extern "C" extern u32 const lit_5286;
extern "C" extern u32 const lit_5287;
extern "C" extern u32 const lit_5288;
extern "C" extern void* const lit_5316[11];
extern "C" extern u32 const lit_5379;
extern "C" extern u32 const lit_5380;
extern "C" extern u32 const lit_5381;
extern "C" extern u32 const lit_5382;
extern "C" extern u32 const lit_5632;
extern "C" extern u32 const lit_5633;
extern "C" extern u32 const lit_5634;
extern "C" extern u32 const lit_5635;
extern "C" extern u32 const lit_5636;
extern "C" extern u32 const lit_5637;
extern "C" extern u32 const lit_5638;
extern "C" extern u32 const lit_5639;
extern "C" extern u32 const lit_5640;
extern "C" extern u32 const lit_5781;
extern "C" extern u32 const lit_5957;
extern "C" extern u32 const lit_5958;
extern "C" extern u32 const lit_5959;
extern "C" extern u32 const lit_5960;
extern "C" extern u32 const lit_5961;
extern "C" extern u32 const lit_5962;
extern "C" extern u32 const lit_5963;
extern "C" extern u32 const lit_5964;
extern "C" extern u32 const lit_5965;
extern "C" extern u32 const lit_5966;
extern "C" extern u32 const lit_5967;
extern "C" extern u32 const lit_5968;
extern "C" extern u32 const lit_6132;
extern "C" extern u32 const lit_6133;
extern "C" extern u32 const lit_6134;
extern "C" extern u32 const lit_6135;
extern "C" extern u32 const lit_6136;
extern "C" extern u32 const lit_6293;
extern "C" extern u32 const lit_6455;
extern "C" extern u32 const lit_6456;
extern "C" extern u32 const lit_6457;
extern "C" extern u32 const lit_6458;
extern "C" extern u32 const lit_6459;
extern "C" extern u32 const lit_6648;
extern "C" extern u32 const lit_6649;
extern "C" extern u32 const lit_6650;
extern "C" extern u32 const lit_6651;
extern "C" extern u32 const lit_6652;
extern "C" extern u32 const lit_6653;
extern "C" extern u32 const lit_6722;
extern "C" extern u32 const lit_6723;
extern "C" extern u32 const lit_6724;
extern "C" extern u32 const lit_6725;
extern "C" extern u32 const lit_6847;
extern "C" extern u32 const lit_6848;
extern "C" extern u32 const lit_6849;
extern "C" extern u32 const lit_6893;
extern "C" extern u32 const lit_7221;
extern "C" extern u32 const lit_7222;
extern "C" extern u32 const lit_7223;
extern "C" extern u32 const lit_7224;
extern "C" extern u32 const lit_7225;
extern "C" extern u32 const lit_7226;
extern "C" extern u32 const lit_7227;
extern "C" extern u32 const lit_7228;
extern "C" extern u32 const lit_7229;
extern "C" extern u32 const lit_7230;
extern "C" extern u32 const lit_7231;
extern "C" extern u32 const lit_7232;
extern "C" extern u32 const lit_7233;
extern "C" extern u32 const lit_7234;
extern "C" extern u32 const lit_7235;
extern "C" extern u32 const lit_7236;
extern "C" extern u32 const lit_7237;
extern "C" extern u32 const lit_7238;
extern "C" extern u32 const lit_7239;
extern "C" extern u32 const lit_7240;
extern "C" extern u32 const lit_7241;
extern "C" extern u8 const lit_7384[12];
extern "C" extern u8 const lit_7398[12];
extern "C" extern u32 const lit_8029;
extern "C" extern u32 const lit_8030;
extern "C" extern u32 const lit_8031;
extern "C" extern u32 const lit_8032;
extern "C" extern u32 const lit_8033;
extern "C" extern u32 const lit_8034;
extern "C" extern u32 const lit_8035;
extern "C" extern u32 const lit_8036;
extern "C" extern u32 const lit_8037;
extern "C" extern u32 const lit_8038;
extern "C" extern u32 const lit_8039;
extern "C" extern u32 const lit_8040;
extern "C" extern u32 const lit_8041;
extern "C" extern u32 const lit_8042;
extern "C" extern u32 const lit_8043;
extern "C" extern u32 const lit_8044;
extern "C" extern u32 const lit_8045;
extern "C" extern u32 const lit_8046;
extern "C" extern u32 const lit_8047;
extern "C" extern u32 const lit_8763;
extern "C" extern u32 const lit_8764;
extern "C" extern u32 const lit_8765;
extern "C" extern u32 const lit_8766;
extern "C" extern u32 const lit_8767;
extern "C" extern u32 const lit_8768;
extern "C" extern u32 const lit_8769;
extern "C" extern u32 const lit_8770;
extern "C" extern u32 const lit_8771;
extern "C" extern u32 const lit_8772;
extern "C" extern u32 const lit_8773;
extern "C" extern u32 const lit_8774;
extern "C" extern u32 const lit_8775;
extern "C" extern u32 const lit_8776;
extern "C" extern u32 const lit_8777;
extern "C" extern u32 const lit_8778;
extern "C" extern u32 const lit_8779;
extern "C" extern u8 const lit_8781[8];
extern "C" extern u8 const lit_8782[8];
extern "C" extern char const* const stringBase0;
extern "C" extern u32 lit_1787[1 + 4 /* padding */];
extern "C" extern u8 check_kind[8];
extern "C" extern u8 data_80536808[6 + 2 /* padding */];
extern "C" extern u8 data_80536810[22 + 2 /* padding */];
extern "C" extern u8 data_80536828[44];
extern "C" extern u8 data_805369FC[68];
extern "C" extern u8 data_80536A40[44];
extern "C" extern void* g_profile_MG_FISH[12];
extern "C" extern u8 lit_1107[1 + 3 /* padding */];
extern "C" extern u8 lit_1105[1 + 3 /* padding */];
extern "C" extern u8 lit_1104[1 + 3 /* padding */];
extern "C" extern u8 lit_1099[1 + 3 /* padding */];
extern "C" extern u8 lit_1097[1 + 3 /* padding */];
extern "C" extern u8 lit_1095[1 + 3 /* padding */];
extern "C" extern u8 lit_1094[1 + 3 /* padding */];
extern "C" extern u8 lit_1057[1 + 3 /* padding */];
extern "C" extern u8 lit_1055[1 + 3 /* padding */];
extern "C" extern u8 lit_1053[1 + 3 /* padding */];
extern "C" extern u8 lit_1052[1 + 3 /* padding */];
extern "C" extern u8 lit_1014[1 + 3 /* padding */];
extern "C" extern u8 lit_1012[1 + 3 /* padding */];
extern "C" extern u8 lit_1010[1 + 3 /* padding */];
extern "C" extern u8 lit_1009[1 + 1 /* padding */];
extern "C" extern u8 lit_7455[12 + 4 /* padding */];
extern "C" extern u8 lit_7458[12];
extern "C" extern u8 lit_7459[12];
extern "C" extern u8 lit_7460[12];
extern "C" extern u8 lit_7461[12];
extern "C" extern u8 lit_7462[12];
extern "C" extern u8 lit_7463[12];
extern "C" extern u8 lit_7464[12];
extern "C" extern u8 lit_7465[12];
extern "C" extern u8 lit_7466[12];
extern "C" extern u8 lit_7467[12];
extern "C" extern u8 data_80536C74[132];
extern "C" extern u8 data_80536CF8[4];
extern "C" extern u8 data_80536CFC[4];
extern "C" extern u8 data_80536D00[4];
extern "C" extern u8 data_80536D04[4];
extern "C" extern u8 data_80536D08[4];
extern "C" extern u8 data_80536D0C[4];
extern "C" extern u8 data_80536D10[4];
extern "C" extern u8 data_80536D14[4];
extern "C" extern u8 data_80536D18[4];
extern "C" extern u8 data_80536D1C[4];
extern "C" extern u8 data_80536D20[4];
extern "C" extern u8 data_80536D24[4];
extern "C" extern u8 data_80536D28[4];
extern "C" extern u8 data_80536D2C[4];
extern "C" extern u8 data_80536D30[4];
extern "C" extern u8 data_80536D34[4];
extern "C" extern u8 data_80536D38[4];
extern "C" extern u8 data_80536D3C[4];
extern "C" extern u8 data_80536D40[4];
extern "C" extern u8 data_80536D44[4];
extern "C" extern u8 data_80536D48[4];
extern "C" extern u8 data_80536D4C[4];
extern "C" extern u8 data_80536D50[4];
extern "C" extern u8 data_80536D54[4];
extern "C" extern u8 data_80536D58[4];

//
// External References:
//

void mDoMtx_XrotM(f32 (*)[4], s16);                                             // 2
void mDoMtx_YrotS(f32 (*)[4], s16);                                             // 2
void mDoMtx_YrotM(f32 (*)[4], s16);                                             // 2
void mDoMtx_ZrotM(f32 (*)[4], s16);                                             // 2
void mDoExt_modelUpdateDL(J3DModel*);                                           // 2
void mDoExt_J3DModel__create(J3DModelData*, u32, u32);                          // 2
void fopAc_IsActor(void*);                                                      // 2
void fopAcIt_Judge(void* (*)(void*, void*), void*);                             // 2
void fopAcM_delete(fopAc_ac_c*);                                                // 2
void fopAcM_create(s16, u32, cXyz const*, int, csXyz const*, cXyz const*, s8);  // 2
void fopAcM_createChild(s16, unsigned int, u32, cXyz const*, int, csXyz const*, cXyz const*, s8,
                        int (*)(void*));                                             // 2
void fopAcM_entrySolidHeap(fopAc_ac_c*, int (*)(fopAc_ac_c*), u32);                  // 2
void fopAcM_SetMin(fopAc_ac_c*, f32, f32, f32);                                      // 2
void fopAcM_SetMax(fopAc_ac_c*, f32, f32, f32);                                      // 2
void fopAcM_searchActorAngleY(fopAc_ac_c const*, fopAc_ac_c const*);                 // 2
void fopAcM_searchActorDistanceXZ(fopAc_ac_c const*, fopAc_ac_c const*);             // 2
void fopAcM_createItem(cXyz const*, int, int, int, csXyz const*, cXyz const*, int);  // 2
void fopAcM_effSmokeSet1(u32*, u32*, cXyz const*, csXyz const*, f32, dKy_tevstr_c const*,
                         int);                                         // 2
void fopAcM_effHamonSet(u32*, cXyz const*, f32, f32);                  // 2
void fopKyM_createWpillar(cXyz const*, f32, int);                      // 2
void fpcEx_Search(void* (*)(void*, void*), void*);                     // 2
void fpcSch_JudgeForPName(void*, void*);                               // 2
void fpcSch_JudgeByID(void*, void*);                                   // 2
void dComIfG_resLoad(request_of_phase_process_class*, char const*);    // 2
void dComIfG_resDelete(request_of_phase_process_class*, char const*);  // 2
void dComIfGp_getReverb(int);                                          // 2
void dComIfGd_setShadow(u32, s8, J3DModel*, cXyz*, f32, f32, f32, f32, cBgS_PolyInfo&,
                        dKy_tevstr_c*, s16, f32, _GXTexObj*);  // 2
void dKy_Sound_set(cXyz, int, unsigned int, int);              // 2
void cM_atan2s(f32, f32);                                      // 2
void cM_rndF(f32);                                             // 2
void cM_rndFX(f32);                                            // 2
void cLib_addCalc2(f32*, f32, f32, f32);                       // 2
void cLib_addCalcAngleS2(s16*, s16, s16, s16);                 // 2
void MtxTrans(f32, f32, f32, u8);                              // 2
void MtxScale(f32, f32, f32, u8);                              // 2
void MtxPosition(cXyz*, cXyz*);                                // 2
void JPASetRMtxSTVecfromMtx(f32 const (*)[4], f32 (*)[4], JGeometry::TVec3__template0*,
                            JGeometry::TVec3__template0*);  // 2
void* operator new(u32);                                    // 2
void operator delete(void*);                                // 2

extern "C" void mDoMtx_XrotM__FPA4_fs();                                              // 1
extern "C" void mDoMtx_YrotS__FPA4_fs();                                              // 1
extern "C" void mDoMtx_YrotM__FPA4_fs();                                              // 1
extern "C" void mDoMtx_ZrotM__FPA4_fs();                                              // 1
extern "C" void transM__14mDoMtx_stack_cFfff();                                       // 1
extern "C" void scaleM__14mDoMtx_stack_cFfff();                                       // 1
extern "C" void play__14mDoExt_baseAnmFv();                                           // 1
extern "C" void init__13mDoExt_btpAnmFP16J3DMaterialTableP16J3DAnmTexPatterniifss();  // 1
extern "C" void entry__13mDoExt_btpAnmFP16J3DMaterialTables();                        // 1
extern "C" void init__13mDoExt_brkAnmFP16J3DMaterialTableP15J3DAnmTevRegKeyiifss();   // 1
extern "C" void entry__13mDoExt_brkAnmFP16J3DMaterialTablef();                        // 1
extern "C" void mDoExt_modelUpdateDL__FP8J3DModel();                                  // 1
extern "C" void
__ct__14mDoExt_McaMorfFP12J3DModelDataP25mDoExt_McaMorfCallBack1_cP25mDoExt_McaMorfCallBack2_cP15J3DAnmTransformifiiiPvUlUl();  // 1
extern "C" void setAnm__14mDoExt_McaMorfFP15J3DAnmTransformiffffPv();             // 1
extern "C" void play__14mDoExt_McaMorfFP3VecUlSc();                               // 1
extern "C" void entryDL__14mDoExt_McaMorfFv();                                    // 1
extern "C" void modelCalc__14mDoExt_McaMorfFv();                                  // 1
extern "C" void init__19mDoExt_3DlineMat0_cFUsUsi();                              // 1
extern "C" void update__19mDoExt_3DlineMat0_cFiR8_GXColorP12dKy_tevstr_c();       // 1
extern "C" void setMat__26mDoExt_3DlineMatSortPacketFP18mDoExt_3DlineMat_c();     // 1
extern "C" void mDoExt_J3DModel__create__FP12J3DModelDataUlUl();                  // 1
extern "C" void __ct__10fopAc_ac_cFv();                                           // 1
extern "C" void fopAc_IsActor__FPv();                                             // 1
extern "C" void fopAcIt_Judge__FPFPvPv_PvPv();                                    // 1
extern "C" void fopAcM_delete__FP10fopAc_ac_c();                                  // 1
extern "C" void fopAcM_create__FsUlPC4cXyziPC5csXyzPC4cXyzSc();                   // 1
extern "C" void fopAcM_createChild__FsUiUlPC4cXyziPC5csXyzPC4cXyzScPFPv_i();      // 1
extern "C" void fopAcM_entrySolidHeap__FP10fopAc_ac_cPFP10fopAc_ac_c_iUl();       // 1
extern "C" void fopAcM_SetMin__FP10fopAc_ac_cfff();                               // 1
extern "C" void fopAcM_SetMax__FP10fopAc_ac_cfff();                               // 1
extern "C" void fopAcM_searchActorAngleY__FPC10fopAc_ac_cPC10fopAc_ac_c();        // 1
extern "C" void fopAcM_searchActorDistanceXZ__FPC10fopAc_ac_cPC10fopAc_ac_c();    // 1
extern "C" void fopAcM_createItem__FPC4cXyziiiPC5csXyzPC4cXyzi();                 // 1
extern "C" void fopAcM_effSmokeSet1__FPUlPUlPC4cXyzPC5csXyzfPC12dKy_tevstr_ci();  // 1
extern "C" void fopAcM_effHamonSet__FPUlPC4cXyzff();                              // 1
extern "C" void fopKyM_createWpillar__FPC4cXyzfi();                               // 1
extern "C" void fpcEx_Search__FPFPvPv_PvPv();                                     // 1
extern "C" void fpcSch_JudgeForPName__FPvPv();                                    // 1
extern "C" void fpcSch_JudgeByID__FPvPv();                                        // 1
extern "C" void dComIfG_resLoad__FP30request_of_phase_process_classPCc();         // 1
extern "C" void dComIfG_resDelete__FP30request_of_phase_process_classPCc();       // 1
extern "C" void dComIfGp_getReverb__Fi();                                         // 1
extern "C" void
dComIfGd_setShadow__FUlScP8J3DModelP4cXyzffffR13cBgS_PolyInfoP12dKy_tevstr_csfP9_GXTexObj();  // 1
extern "C" void onEventBit__11dSv_event_cFUs();                                               // 1
extern "C" void setEventReg__11dSv_event_cFUsUc();                                            // 1
extern "C" void getEventReg__11dSv_event_cCFUs();                                             // 1
extern "C" void isSwitch__10dSv_info_cCFii();                                                 // 1
extern "C" void getRes__14dRes_control_cFPCclP11dRes_info_ci();                               // 1
extern "C" void getEmitter__Q213dPa_control_c7level_cFUl();                                   // 1
extern "C" void
set__13dPa_control_cFUlUcUsPC4cXyzPC12dKy_tevstr_cPC5csXyzPC4cXyzUcP18dPa_levelEcallBackScPC8_GXColorPC8_GXColorPC4cXyzf();  // 1
extern "C" void StartShock__12dVibration_cFii4cXyz();  // 1
extern "C" void LineCross__4cBgSFP11cBgS_LinChk();     // 1
extern "C" void GroundCross__4cBgSFP11cBgS_GndChk();   // 1
extern "C" void __ct__12dBgS_AcchCirFv();              // 1
extern "C" void SetWall__12dBgS_AcchCirFff();          // 1
extern "C" void __dt__9dBgS_AcchFv();                  // 1
extern "C" void __ct__9dBgS_AcchFv();                  // 1
extern "C" void
Set__9dBgS_AcchFP4cXyzP4cXyzP10fopAc_ac_ciP12dBgS_AcchCirP4cXyzP5csXyzP5csXyz();  // 1
extern "C" void CrrPos__9dBgS_AcchFR4dBgS();                                      // 1
extern "C" void __ct__11dBgS_GndChkFv();                                          // 1
extern "C" void __dt__11dBgS_GndChkFv();                                          // 1
extern "C" void __ct__18dBgS_ObjGndChk_SplFv();                                   // 1
extern "C" void __dt__18dBgS_ObjGndChk_SplFv();                                   // 1
extern "C" void __ct__11dBgS_LinChkFv();                                          // 1
extern "C" void __dt__11dBgS_LinChkFv();                                          // 1
extern "C" void Set__11dBgS_LinChkFPC4cXyzPC4cXyzPC10fopAc_ac_c();                // 1
extern "C" void SetObj__16dBgS_PolyPassChkFv();                                   // 1
extern "C" void __ct__10dCcD_GSttsFv();                                           // 1
extern "C" void Init__9dCcD_SttsFiiP10fopAc_ac_c();                               // 1
extern "C" void __ct__12dCcD_GObjInfFv();                                         // 1
extern "C" void Set__8dCcD_CylFRC11dCcD_SrcCyl();                                 // 1
extern "C" void setLookPos__9daPy_py_cFP4cXyz();                                  // 1
extern "C" void settingTevStruct__18dScnKy_env_light_cFiP4cXyzP12dKy_tevstr_c();  // 1
extern "C" void
setLightTevColorType_MAJI__18dScnKy_env_light_cFP12J3DModelDataP12dKy_tevstr_c();  // 1
extern "C" void dKy_Sound_set__F4cXyziUii();                                       // 1
extern "C" void Set__4cCcSFP8cCcD_Obj();                                           // 1
extern "C" void __mi__4cXyzCFRC3Vec();                                             // 1
extern "C" void cM_atan2s__Fff();                                                  // 1
extern "C" void cM_rndF__Ff();                                                     // 1
extern "C" void cM_rndFX__Ff();                                                    // 1
extern "C" void SetPos__11cBgS_GndChkFPC4cXyz();                                   // 1
extern "C" void __dt__13cBgS_PolyInfoFv();                                         // 1
extern "C" void __dt__8cM3dGCirFv();                                               // 1
extern "C" void SetC__8cM3dGCylFRC4cXyz();                                         // 1
extern "C" void SetH__8cM3dGCylFf();                                               // 1
extern "C" void SetR__8cM3dGCylFf();                                               // 1
extern "C" void cLib_addCalc2__FPffff();                                           // 1
extern "C" void cLib_addCalcAngleS2__FPssss();                                     // 1
extern "C" void MtxTrans__FfffUc();                                                // 1
extern "C" void MtxScale__FfffUc();                                                // 1
extern "C" void MtxPosition__FP4cXyzP4cXyz();                                      // 1
extern "C" void func_80280808();                                                   // 1
extern "C" void seStart__7Z2SeMgrF10JAISoundIDPC3VecUlScffffUc();                  // 1
extern "C" void changeBgmStatus__8Z2SeqMgrFl();                                    // 1
extern "C" void changeFishingBgm__8Z2SeqMgrFl();                                   // 1
extern "C" void __ct__10Z2CreatureFv();                                            // 1
extern "C" void init__10Z2CreatureFP3VecP3VecUcUc();                               // 1
extern "C" void* __nw__FUl();                                                      // 1
extern "C" void __dl__FPv();                                                       // 1
extern "C" void init__12J3DFrameCtrlFs();                                          // 1
extern "C" void PSMTXCopy();                                                       // 1
extern "C" void PSMTXTrans();                                                      // 1
extern "C" void PSMTXScale();                                                      // 1
extern "C" void PSVECAdd();                                                        // 1
extern "C" void PSVECSquareMag();                                                  // 1
extern "C" void __destroy_arr();                                                   // 1
extern "C" void __construct_array();                                               // 1
extern "C" void _savegpr_20();                                                     // 1
extern "C" void _savegpr_22();                                                     // 1
extern "C" void _savegpr_24();                                                     // 1
extern "C" void _savegpr_25();                                                     // 1
extern "C" void _savegpr_26();                                                     // 1
extern "C" void _savegpr_27();                                                     // 1
extern "C" void _savegpr_28();                                                     // 1
extern "C" void _savegpr_29();                                                     // 1
extern "C" void _restgpr_20();                                                     // 1
extern "C" void _restgpr_22();                                                     // 1
extern "C" void _restgpr_24();                                                     // 1
extern "C" void _restgpr_25();                                                     // 1
extern "C" void _restgpr_26();                                                     // 1
extern "C" void _restgpr_27();                                                     // 1
extern "C" void _restgpr_28();                                                     // 1
extern "C" void _restgpr_29();                                                     // 1
extern "C" void strcmp();                                                          // 1
extern "C" extern void* __vt__19mDoExt_3DlineMat0_c[5];
extern "C" extern void* g_fopAc_Method[8];
extern "C" extern void* g_fpcLf_Method[5 + 1 /* padding */];
extern "C" extern u8 saveBitLabels__16dSv_event_flag_c[1644 + 4 /* padding */];
extern "C" extern void* __vt__8dCcD_Cyl[36];
extern "C" extern void* __vt__9dCcD_Stts[11];
extern "C" extern void* __vt__12cCcD_CylAttr[25];
extern "C" extern void* __vt__14cCcD_ShapeAttr[22];
extern "C" extern void* __vt__9cCcD_Stts[8];
extern "C" extern u8 m_cpadInfo__8mDoCPd_c[256];
extern "C" extern u8 now__14mDoMtx_stack_c[48];
extern "C" extern u8 g_dComIfG_gameInfo[122384];
extern "C" extern u8 mSimpleTexObj__21dDlst_shadowControl_c[32];
extern "C" extern u8 g_env_light[4880];
extern "C" extern u8 g_Counter[12 + 4 /* padding */];
extern "C" extern u8 j3dSys[284];
extern "C" extern u8 mCurrentMtx__6J3DSys[48];
extern "C" extern u8 sincosTable___5JMath[65536];
extern "C" extern void* calc_mtx[1 + 1 /* padding */];
extern "C" extern u32 __float_nan;
extern "C" extern u8 mAudioMgrPtr__10Z2AudioMgr[4 + 4 /* padding */];
extern "C" void __register_global_object();  // 1

//
// Declarations:
//

/* ############################################################################################## */
/* 80536168-8053616C 0004+00 s=36 e=0 z=0  None .rodata    @3679 */
SECTION_RODATA static u32 const lit_3679 = 0x3F800000;

/* 8053616C-80536170 0004+00 s=1 e=0 z=0  None .rodata    @3680 */
SECTION_RODATA static u32 const lit_3680 = 0x40A00000;

/* 80536170-80536174 0004+00 s=1 e=0 z=0  None .rodata    @3681 */
SECTION_RODATA static u32 const lit_3681 = 0x43960000;

/* 80536174-80536178 0004+00 s=1 e=0 z=0  None .rodata    @3682 */
SECTION_RODATA static u32 const lit_3682 = 0x43C80000;

/* 805364A4-805364B0 000C+00 s=2 e=0 z=0  None .data      cNullVec__6Z2Calc */
SECTION_DATA static u8 cNullVec__6Z2Calc[12] = {
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
};

/* 805364B0-805364C4 0004+10 s=0 e=0 z=0  None .data      @1787 */
SECTION_DATA u32 lit_1787[1 + 4 /* padding */] = {
    0x02000201,
    /* padding */
    0x40080000,
    0x00000000,
    0x3FE00000,
    0x00000000,
};

/* 805364C4-805364CC 0008+00 s=0 e=0 z=0  None .data      check_kind */
SECTION_DATA u8 check_kind[8] = {
    0xF5, 0x7F, 0xF4, 0x7F, 0xF3, 0x7F, 0xF2, 0x7F,
};

/* 805364CC-805364DC 0010+00 s=1 e=0 z=0  None .data      vib_p$3694 */
SECTION_DATA static u8 data_805364CC[16] = {
    0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x02, 0x00, 0x00, 0x00, 0x03, 0x00, 0x00, 0x00, 0x04,
};

/* 805364DC-805364E4 0005+03 s=1 e=0 z=0  None .data      learn_d$3913 */
SECTION_DATA static u8 data_805364DC[5 + 3 /* padding */] = {
    0x01,
    0x02,
    0x04,
    0x08,
    0x10,
    /* padding */
    0x00,
    0x00,
    0x00,
};

/* 805364E4-80536794 02B0+00 s=2 e=0 z=0  None .data      swim_path127 */
SECTION_DATA static u8 swim_path127[688] = {
    0x00, 0x00, 0x00, 0x00, 0xC4, 0xAE, 0x40, 0x00, 0xC2, 0xA0, 0x00, 0x00, 0x44, 0x0B, 0xC0, 0x00,
    0x00, 0x01, 0x00, 0x00, 0xC5, 0x11, 0x70, 0x00, 0xC2, 0xA0, 0x00, 0x00, 0x44, 0x9B, 0x00, 0x00,
    0x00, 0x02, 0x00, 0x00, 0xC5, 0x3B, 0xA0, 0x00, 0xC2, 0xA0, 0x00, 0x00, 0x44, 0xB9, 0x20, 0x00,
    0x00, 0x03, 0x00, 0x00, 0xC5, 0x85, 0x60, 0x00, 0xC2, 0xA0, 0x00, 0x00, 0x44, 0xD7, 0x60, 0x00,
    0x00, 0x04, 0x00, 0x00, 0xC5, 0x9F, 0xD0, 0x00, 0xC2, 0xA0, 0x00, 0x00, 0x44, 0xDF, 0x40, 0x00,
    0x00, 0x05, 0x00, 0x00, 0xC5, 0xC0, 0x98, 0x00, 0xC2, 0xA0, 0x00, 0x00, 0x45, 0x0B, 0x60, 0x00,
    0x00, 0x06, 0x00, 0x00, 0xC5, 0xD8, 0x60, 0x00, 0xC2, 0xA0, 0x00, 0x00, 0x45, 0x21, 0xF0, 0x00,
    0x00, 0x07, 0x00, 0x00, 0xC5, 0xF5, 0x00, 0x00, 0xC2, 0xA0, 0x00, 0x00, 0x45, 0x1B, 0xE0, 0x00,
    0x00, 0x08, 0x00, 0x00, 0xC6, 0x02, 0x5C, 0x00, 0xC2, 0xA0, 0x00, 0x00, 0x45, 0x04, 0x80, 0x00,
    0x00, 0x09, 0x00, 0x00, 0xC5, 0xFB, 0xE0, 0x00, 0xC2, 0xA0, 0x00, 0x00, 0x44, 0xAA, 0x20, 0x00,
    0x00, 0x0A, 0x00, 0x00, 0xC5, 0xF2, 0x50, 0x00, 0xC2, 0xA0, 0x00, 0x00, 0x44, 0x41, 0x40, 0x00,
    0x00, 0x0B, 0x00, 0x00, 0xC5, 0xE6, 0x98, 0x00, 0xC2, 0xA0, 0x00, 0x00, 0x44, 0x00, 0xC0, 0x00,
    0x00, 0x0C, 0x00, 0x00, 0xC5, 0xD4, 0xB8, 0x00, 0xC2, 0xA0, 0x00, 0x00, 0x44, 0x09, 0x40, 0x00,
    0x00, 0x0D, 0x00, 0x00, 0xC5, 0xC2, 0x70, 0x00, 0xC2, 0xA0, 0x00, 0x00, 0x44, 0x07, 0x00, 0x00,
    0x00, 0x0E, 0x00, 0x00, 0xC5, 0xA6, 0xF8, 0x00, 0xC2, 0xA0, 0x00, 0x00, 0x41, 0xA8, 0x00, 0x00,
    0x00, 0x0F, 0x00, 0x00, 0xC5, 0x9A, 0xB8, 0x00, 0xC2, 0xA0, 0x00, 0x00, 0xC4, 0x08, 0xC0, 0x00,
    0x00, 0x10, 0x00, 0x00, 0xC5, 0x96, 0xC8, 0x00, 0xC2, 0xA0, 0x00, 0x00, 0xC4, 0x8B, 0x00, 0x00,
    0x00, 0x11, 0x00, 0x00, 0xC5, 0x81, 0x20, 0x00, 0xC2, 0xA0, 0x00, 0x00, 0xC4, 0xC5, 0x40, 0x00,
    0x00, 0x12, 0x00, 0x00, 0xC5, 0x5E, 0x90, 0x00, 0xC2, 0xA0, 0x00, 0x00, 0xC4, 0xEC, 0x60, 0x00,
    0x00, 0x13, 0x00, 0x00, 0xC5, 0x4C, 0xA0, 0x00, 0xC2, 0xA0, 0x00, 0x00, 0xC5, 0x30, 0x80, 0x00,
    0x00, 0x14, 0x00, 0x00, 0xC5, 0x28, 0x50, 0x00, 0xC2, 0xA0, 0x00, 0x00, 0xC5, 0x56, 0xA0, 0x00,
    0x00, 0x15, 0x00, 0x00, 0xC4, 0xEF, 0x60, 0x00, 0xC2, 0xA0, 0x00, 0x00, 0xC5, 0x60, 0x20, 0x00,
    0x00, 0x16, 0x00, 0x00, 0xC4, 0xAA, 0x00, 0x00, 0xC2, 0xA0, 0x00, 0x00, 0xC5, 0x6D, 0x80, 0x00,
    0x00, 0x17, 0x00, 0x00, 0xC2, 0x3C, 0x00, 0x00, 0xC2, 0xA0, 0x00, 0x00, 0xC5, 0x75, 0x10, 0x00,
    0x00, 0x18, 0x00, 0x00, 0x44, 0x33, 0x00, 0x00, 0xC2, 0xA0, 0x00, 0x00, 0xC5, 0x46, 0xC0, 0x00,
    0x00, 0x19, 0x00, 0x00, 0x44, 0x2E, 0x00, 0x00, 0xC2, 0xA0, 0x00, 0x00, 0xC5, 0x1B, 0xA0, 0x00,
    0x00, 0x1A, 0x00, 0x00, 0xC3, 0xC3, 0x80, 0x00, 0xC2, 0xA0, 0x00, 0x00, 0xC4, 0x87, 0xC0, 0x00,
    0x00, 0x1B, 0x00, 0x00, 0xC4, 0x9C, 0x40, 0x00, 0xC2, 0xA0, 0x00, 0x00, 0x43, 0xA9, 0x00, 0x00,
    0x00, 0x1C, 0x00, 0x00, 0xC4, 0xB7, 0x20, 0x00, 0xC2, 0xA0, 0x00, 0x00, 0x44, 0x96, 0x60, 0x00,
    0x00, 0x1D, 0x00, 0x00, 0xC4, 0xC2, 0x20, 0x00, 0xC2, 0xA0, 0x00, 0x00, 0x45, 0x14, 0xC0, 0x00,
    0x00, 0x1E, 0x00, 0x00, 0xC3, 0xF6, 0x80, 0x00, 0xC2, 0xA0, 0x00, 0x00, 0x45, 0x42, 0x20, 0x00,
    0x00, 0x1F, 0x00, 0x00, 0x43, 0xA5, 0x00, 0x00, 0xC2, 0xA0, 0x00, 0x00, 0x45, 0x54, 0xB0, 0x00,
    0x00, 0x20, 0x00, 0x00, 0x44, 0xC9, 0xE0, 0x00, 0xC2, 0xA0, 0x00, 0x00, 0x45, 0x52, 0x10, 0x00,
    0x00, 0x21, 0x00, 0x00, 0x45, 0x55, 0xE0, 0x00, 0xC2, 0xA0, 0x00, 0x00, 0x45, 0x19, 0xC0, 0x00,
    0x00, 0x22, 0x00, 0x00, 0x45, 0x51, 0x30, 0x00, 0xC2, 0xA0, 0x00, 0x00, 0x44, 0x96, 0x60, 0x00,
    0x00, 0x23, 0x00, 0x00, 0x45, 0x44, 0x00, 0x00, 0xC2, 0xA0, 0x00, 0x00, 0x44, 0x51, 0xC0, 0x00,
    0x00, 0x24, 0x00, 0x00, 0x45, 0x2C, 0x20, 0x00, 0xC2, 0xA0, 0x00, 0x00, 0x43, 0x74, 0x00, 0x00,
    0x00, 0x25, 0x00, 0x00, 0x45, 0x03, 0x00, 0x00, 0xC2, 0xA0, 0x00, 0x00, 0xC2, 0xFE, 0x00, 0x00,
    0x00, 0x26, 0x00, 0x00, 0x44, 0xB5, 0x80, 0x00, 0xC2, 0xA0, 0x00, 0x00, 0xC4, 0x71, 0x00, 0x00,
    0x00, 0x27, 0x00, 0x00, 0x43, 0x7C, 0x00, 0x00, 0xC2, 0xA0, 0x00, 0x00, 0xC4, 0xC2, 0x80, 0x00,
    0x00, 0x28, 0x00, 0x00, 0xC3, 0x57, 0x00, 0x00, 0xC2, 0xA0, 0x00, 0x00, 0xC4, 0x99, 0x60, 0x00,
    0x00, 0x29, 0x00, 0x00, 0xC4, 0x8F, 0xA0, 0x00, 0xC2, 0xA0, 0x00, 0x00, 0x43, 0x88, 0x00, 0x00,
    0xFF, 0xFF, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
};

/* 80536794-805367A0 000C+00 s=1 e=0 z=0  None .data      joint_offset_LM$5310 */
SECTION_DATA static u8 data_80536794[12] = {
    0x41, 0xA0, 0x00, 0x00, 0x41, 0xA0, 0x00, 0x00, 0x41, 0xA0, 0x00, 0x00,
};

/* 805367A0-805367A8 0008+00 s=1 e=0 z=0  None .data      joint_offset_BG$5311 */
SECTION_DATA static u8 data_805367A0[8] = {
    0x41, 0xA0, 0x00, 0x00, 0x41, 0xA0, 0x00, 0x00,
};

/* 805367A8-805367C0 0018+00 s=1 e=0 z=0  None .data      joint_offset_NP$5312 */
SECTION_DATA static u8 data_805367A8[24] = {
    0x41, 0x78, 0x00, 0x00, 0x41, 0x78, 0x00, 0x00, 0x41, 0x78, 0x00, 0x00,
    0x41, 0x20, 0x00, 0x00, 0x41, 0x20, 0x00, 0x00, 0x41, 0x70, 0x00, 0x00,
};

/* 805367C0-805367D8 0018+00 s=1 e=0 z=0  None .data      joint_offset_KS$5313 */
SECTION_DATA static u8 data_805367C0[24] = {
    0x41, 0x78, 0x00, 0x00, 0x41, 0x78, 0x00, 0x00, 0x41, 0x20, 0x00, 0x00,
    0x40, 0xA0, 0x00, 0x00, 0x41, 0x20, 0x00, 0x00, 0x41, 0x70, 0x00, 0x00,
};

/* 805367D8-805367F0 0018+00 s=1 e=0 z=0  None .data      joint_offset_CF$5314 */
SECTION_DATA static u8 data_805367D8[24] = {
    0x41, 0x70, 0x00, 0x00, 0x41, 0x70, 0x00, 0x00, 0x41, 0x70, 0x00, 0x00,
    0x41, 0x70, 0x00, 0x00, 0x41, 0x70, 0x00, 0x00, 0x41, 0x70, 0x00, 0x00,
};

/* 805367F0-80536808 0018+00 s=1 e=0 z=0  None .data      joint_offset_RI$5315 */
SECTION_DATA static u8 data_805367F0[24] = {
    0x41, 0x84, 0x00, 0x00, 0x41, 0xB0, 0x00, 0x00, 0x41, 0xB0, 0x00, 0x00,
    0x41, 0x20, 0x00, 0x00, 0x41, 0x70, 0x00, 0x00, 0x41, 0x70, 0x00, 0x00,
};

/* 80536808-80536810 0006+02 s=0 e=0 z=0  None .data      b_id$6145 */
SECTION_DATA u8 data_80536808[6 + 2 /* padding */] = {
    0x87,
    0x3A,
    0x87,
    0x3B,
    0x87,
    0x3C,
    /* padding */
    0x00,
    0x00,
};

/* 80536810-80536828 0016+02 s=0 e=0 z=0  None .data      h_id$6156 */
SECTION_DATA u8 data_80536810[22 + 2 /* padding */] = {
    0x87,
    0x38,
    0x87,
    0x39,
    0x87,
    0x39,
    0x87,
    0x37,
    0x87,
    0x39,
    0x87,
    0x36,
    0x87,
    0x38,
    0x87,
    0x39,
    0x87,
    0x39,
    0x87,
    0x37,
    0x87,
    0x39,
    /* padding */
    0x00,
    0x00,
};

/* 80536828-80536854 002C+00 s=0 e=0 z=0  None .data      h_jnt$6157 */
SECTION_DATA u8 data_80536828[44] = {
    0x00, 0x00, 0x00, 0x02, 0x00, 0x00, 0x00, 0x02, 0x00, 0x00, 0x00, 0x02, 0x00, 0x00, 0x00,
    0x02, 0x00, 0x00, 0x00, 0x02, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x02, 0x00, 0x00,
    0x00, 0x02, 0x00, 0x00, 0x00, 0x02, 0x00, 0x00, 0x00, 0x02, 0x00, 0x00, 0x00, 0x02,
};

/* 80536854-80536978 0124+00 s=1 e=0 z=0  None .data      @7242 */
SECTION_DATA static void* lit_7242[73] = {
    /* 0    */ (void*)(((char*)action__FP13mg_fish_class) + 0x1E4),
    /* 1    */ (void*)(((char*)action__FP13mg_fish_class) + 0x200),
    /* 2    */ (void*)(((char*)action__FP13mg_fish_class) + 0x234),
    /* 3    */ (void*)(((char*)action__FP13mg_fish_class) + 0x374),
    /* 4    */ (void*)(((char*)action__FP13mg_fish_class) + 0x244),
    /* 5    */ (void*)(((char*)action__FP13mg_fish_class) + 0x258),
    /* 6    */ (void*)(((char*)action__FP13mg_fish_class) + 0x374),
    /* 7    */ (void*)(((char*)action__FP13mg_fish_class) + 0x374),
    /* 8    */ (void*)(((char*)action__FP13mg_fish_class) + 0x374),
    /* 9    */ (void*)(((char*)action__FP13mg_fish_class) + 0x374),
    /* 10   */ (void*)(((char*)action__FP13mg_fish_class) + 0x274),
    /* 11   */ (void*)(((char*)action__FP13mg_fish_class) + 0x374),
    /* 12   */ (void*)(((char*)action__FP13mg_fish_class) + 0x374),
    /* 13   */ (void*)(((char*)action__FP13mg_fish_class) + 0x374),
    /* 14   */ (void*)(((char*)action__FP13mg_fish_class) + 0x374),
    /* 15   */ (void*)(((char*)action__FP13mg_fish_class) + 0x374),
    /* 16   */ (void*)(((char*)action__FP13mg_fish_class) + 0x374),
    /* 17   */ (void*)(((char*)action__FP13mg_fish_class) + 0x374),
    /* 18   */ (void*)(((char*)action__FP13mg_fish_class) + 0x374),
    /* 19   */ (void*)(((char*)action__FP13mg_fish_class) + 0x374),
    /* 20   */ (void*)(((char*)action__FP13mg_fish_class) + 0x2A4),
    /* 21   */ (void*)(((char*)action__FP13mg_fish_class) + 0x2B8),
    /* 22   */ (void*)(((char*)action__FP13mg_fish_class) + 0x2CC),
    /* 23   */ (void*)(((char*)action__FP13mg_fish_class) + 0x374),
    /* 24   */ (void*)(((char*)action__FP13mg_fish_class) + 0x374),
    /* 25   */ (void*)(((char*)action__FP13mg_fish_class) + 0x374),
    /* 26   */ (void*)(((char*)action__FP13mg_fish_class) + 0x374),
    /* 27   */ (void*)(((char*)action__FP13mg_fish_class) + 0x374),
    /* 28   */ (void*)(((char*)action__FP13mg_fish_class) + 0x374),
    /* 29   */ (void*)(((char*)action__FP13mg_fish_class) + 0x374),
    /* 30   */ (void*)(((char*)action__FP13mg_fish_class) + 0x374),
    /* 31   */ (void*)(((char*)action__FP13mg_fish_class) + 0x374),
    /* 32   */ (void*)(((char*)action__FP13mg_fish_class) + 0x374),
    /* 33   */ (void*)(((char*)action__FP13mg_fish_class) + 0x374),
    /* 34   */ (void*)(((char*)action__FP13mg_fish_class) + 0x374),
    /* 35   */ (void*)(((char*)action__FP13mg_fish_class) + 0x374),
    /* 36   */ (void*)(((char*)action__FP13mg_fish_class) + 0x374),
    /* 37   */ (void*)(((char*)action__FP13mg_fish_class) + 0x374),
    /* 38   */ (void*)(((char*)action__FP13mg_fish_class) + 0x374),
    /* 39   */ (void*)(((char*)action__FP13mg_fish_class) + 0x374),
    /* 40   */ (void*)(((char*)action__FP13mg_fish_class) + 0x374),
    /* 41   */ (void*)(((char*)action__FP13mg_fish_class) + 0x374),
    /* 42   */ (void*)(((char*)action__FP13mg_fish_class) + 0x374),
    /* 43   */ (void*)(((char*)action__FP13mg_fish_class) + 0x374),
    /* 44   */ (void*)(((char*)action__FP13mg_fish_class) + 0x374),
    /* 45   */ (void*)(((char*)action__FP13mg_fish_class) + 0x374),
    /* 46   */ (void*)(((char*)action__FP13mg_fish_class) + 0x374),
    /* 47   */ (void*)(((char*)action__FP13mg_fish_class) + 0x374),
    /* 48   */ (void*)(((char*)action__FP13mg_fish_class) + 0x374),
    /* 49   */ (void*)(((char*)action__FP13mg_fish_class) + 0x374),
    /* 50   */ (void*)(((char*)action__FP13mg_fish_class) + 0x2E0),
    /* 51   */ (void*)(((char*)action__FP13mg_fish_class) + 0x2F0),
    /* 52   */ (void*)(((char*)action__FP13mg_fish_class) + 0x300),
    /* 53   */ (void*)(((char*)action__FP13mg_fish_class) + 0x310),
    /* 54   */ (void*)(((char*)action__FP13mg_fish_class) + 0x374),
    /* 55   */ (void*)(((char*)action__FP13mg_fish_class) + 0x374),
    /* 56   */ (void*)(((char*)action__FP13mg_fish_class) + 0x374),
    /* 57   */ (void*)(((char*)action__FP13mg_fish_class) + 0x374),
    /* 58   */ (void*)(((char*)action__FP13mg_fish_class) + 0x374),
    /* 59   */ (void*)(((char*)action__FP13mg_fish_class) + 0x374),
    /* 60   */ (void*)(((char*)action__FP13mg_fish_class) + 0x324),
    /* 61   */ (void*)(((char*)action__FP13mg_fish_class) + 0x374),
    /* 62   */ (void*)(((char*)action__FP13mg_fish_class) + 0x374),
    /* 63   */ (void*)(((char*)action__FP13mg_fish_class) + 0x374),
    /* 64   */ (void*)(((char*)action__FP13mg_fish_class) + 0x374),
    /* 65   */ (void*)(((char*)action__FP13mg_fish_class) + 0x374),
    /* 66   */ (void*)(((char*)action__FP13mg_fish_class) + 0x374),
    /* 67   */ (void*)(((char*)action__FP13mg_fish_class) + 0x374),
    /* 68   */ (void*)(((char*)action__FP13mg_fish_class) + 0x374),
    /* 69   */ (void*)(((char*)action__FP13mg_fish_class) + 0x374),
    /* 70   */ (void*)(((char*)action__FP13mg_fish_class) + 0x33C),
    /* 71   */ (void*)(((char*)action__FP13mg_fish_class) + 0x350),
    /* 72   */ (void*)(((char*)action__FP13mg_fish_class) + 0x360),
};

/* 80536978-805369A4 002C+00 s=1 e=0 z=0  None .data      mouth_idx$7453 */
SECTION_DATA static u8 data_80536978[44] = {
    0x00, 0x00, 0x00, 0x07, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x09, 0x00, 0x00, 0x00,
    0x07, 0x00, 0x00, 0x00, 0x09, 0x00, 0x00, 0x00, 0x04, 0x00, 0x00, 0x00, 0x07, 0x00, 0x00,
    0x00, 0x00, 0x00, 0x00, 0x00, 0x09, 0x00, 0x00, 0x00, 0x07, 0x00, 0x00, 0x00, 0x09,
};

/* 805369A4-805369D0 002C+00 s=1 e=0 z=0  None .data      fish_bmd$8228 */
SECTION_DATA static u8 data_805369A4[44] = {
    0x00, 0x00, 0x00, 0x08, 0x00, 0x00, 0x00, 0x03, 0x00, 0x00, 0x00, 0x03, 0x00, 0x00, 0x00,
    0x03, 0x00, 0x00, 0x00, 0x04, 0x00, 0x00, 0x00, 0x03, 0x00, 0x00, 0x00, 0x08, 0x00, 0x00,
    0x00, 0x03, 0x00, 0x00, 0x00, 0x03, 0x00, 0x00, 0x00, 0x03, 0x00, 0x00, 0x00, 0x04,
};

/* 805369D0-805369FC 002C+00 s=1 e=0 z=0  None .data      fish_joint$8229 */
SECTION_DATA static u8 data_805369D0[44] = {
    0x00, 0x00, 0x00, 0x04, 0x00, 0x00, 0x00, 0x06, 0x00, 0x00, 0x00, 0x06, 0x00, 0x00, 0x00,
    0x06, 0x00, 0x00, 0x00, 0x06, 0x00, 0x00, 0x00, 0x03, 0x00, 0x00, 0x00, 0x04, 0x00, 0x00,
    0x00, 0x06, 0x00, 0x00, 0x00, 0x06, 0x00, 0x00, 0x00, 0x06, 0x00, 0x00, 0x00, 0x06,
};

/* 805369FC-80536A40 0044+00 s=0 e=0 z=0  None .data      cc_cyl_src$8395 */
SECTION_DATA u8 data_805369FC[68] = {
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x75,
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
    0x00, 0x02, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
    0x00, 0x00, 0x00, 0x00, 0x42, 0x0C, 0x00, 0x00, 0x42, 0x0C, 0x00, 0x00,
};

/* 80536A40-80536A6C 002C+00 s=0 e=0 z=0  None .data      fish_max$8453 */
SECTION_DATA u8 data_80536A40[44] = {
    0x3F, 0x53, 0xF7, 0xCF, 0x3F, 0x7F, 0x7C, 0xEE, 0x3F, 0x7F, 0x7C, 0xEE, 0x3F, 0x7F, 0x7C,
    0xEE, 0x3F, 0x35, 0x3F, 0x7D, 0x3E, 0xDB, 0x22, 0xD1, 0x3E, 0xE5, 0x60, 0x42, 0x3F, 0x16,
    0x87, 0x2B, 0x3F, 0x16, 0x87, 0x2B, 0x3F, 0x0C, 0x49, 0xBA, 0x3F, 0x35, 0x3F, 0x7D,
};

/* 80536A6C-80536A8C 0020+00 s=1 e=0 z=0  None .data      l_daMg_Fish_Method */
SECTION_DATA static void* l_daMg_Fish_Method[8] = {
    /* 0    */ (void*)daMg_Fish_Create__FP10fopAc_ac_c,
    /* 1    */ (void*)daMg_Fish_Delete__FP13mg_fish_class,
    /* 2    */ (void*)daMg_Fish_Execute__FP13mg_fish_class,
    /* 3    */ (void*)daMg_Fish_IsDelete__FP13mg_fish_class,
    /* 4    */ (void*)daMg_Fish_Draw__FP13mg_fish_class,
    /* 5    */ (void*)NULL,
    /* 6    */ (void*)NULL,
    /* 7    */ (void*)NULL,
};

/* 80536A8C-80536ABC 0030+00 s=0 e=0 z=1  None .data      g_profile_MG_FISH */
SECTION_DATA void* g_profile_MG_FISH[12] = {
    /* 0    */ (void*)0xFFFFFFFD,
    /* 1    */ (void*)0x0007FFFD,
    /* 2    */ (void*)0x01360000,
    /* 3    */ (void*)&g_fpcLf_Method,
    /* 4    */ (void*)0x00000C50,
    /* 5    */ (void*)NULL,
    /* 6    */ (void*)NULL,
    /* 7    */ (void*)&g_fopAc_Method,
    /* 8    */ (void*)0x02D00000,
    /* 9    */ (void*)&l_daMg_Fish_Method,
    /* 10   */ (void*)0x00040100,
    /* 11   */ (void*)0x000E0000,
};

/* 80536ABC-80536AC8 000C+00 s=1 e=0 z=0  None .data      __vt__12dBgS_AcchCir */
SECTION_DATA static void* __vt__12dBgS_AcchCir[3] = {
    /* 0    */ (void*)NULL /* RTTI */,
    /* 1    */ (void*)NULL,
    /* 2    */ (void*)__dt__12dBgS_AcchCirFv,
};

/* 80536AC8-80536AD4 000C+00 s=2 e=0 z=0  None .data      __vt__10cCcD_GStts */
SECTION_DATA static void* __vt__10cCcD_GStts[3] = {
    /* 0    */ (void*)NULL /* RTTI */,
    /* 1    */ (void*)NULL,
    /* 2    */ (void*)__dt__10cCcD_GSttsFv,
};

/* 80536AD4-80536AE0 000C+00 s=1 e=0 z=0  None .data      __vt__10dCcD_GStts */
SECTION_DATA static void* __vt__10dCcD_GStts[3] = {
    /* 0    */ (void*)NULL /* RTTI */,
    /* 1    */ (void*)NULL,
    /* 2    */ (void*)__dt__10dCcD_GSttsFv,
};

/* 80536AE0-80536AEC 000C+00 s=2 e=0 z=0  None .data      __vt__8cM3dGCyl */
SECTION_DATA static void* __vt__8cM3dGCyl[3] = {
    /* 0    */ (void*)NULL /* RTTI */,
    /* 1    */ (void*)NULL,
    /* 2    */ (void*)__dt__8cM3dGCylFv,
};

/* 80536AEC-80536AF8 000C+00 s=2 e=0 z=0  None .data      __vt__8cM3dGAab */
SECTION_DATA static void* __vt__8cM3dGAab[3] = {
    /* 0    */ (void*)NULL /* RTTI */,
    /* 1    */ (void*)NULL,
    /* 2    */ (void*)__dt__8cM3dGAabFv,
};

/* 80536AF8-80536B1C 0024+00 s=2 e=0 z=0  None .data      __vt__12dBgS_ObjAcch */
SECTION_DATA static void* __vt__12dBgS_ObjAcch[9] = {
    /* 0    */ (void*)NULL /* RTTI */,
    /* 1    */ (void*)NULL,
    /* 2    */ (void*)__dt__12dBgS_ObjAcchFv,
    /* 3    */ (void*)NULL,
    /* 4    */ (void*)NULL,
    /* 5    */ (void*)func_8053614C,
    /* 6    */ (void*)NULL,
    /* 7    */ (void*)NULL,
    /* 8    */ (void*)func_80536144,
};

/* 80536B1C-80536B30 0014+00 s=1 e=0 z=0  None .data      __vt__18mDoExt_3DlineMat_c */
SECTION_DATA static void* __vt__18mDoExt_3DlineMat_c[5] = {
    /* 0    */ (void*)NULL /* RTTI */,
    /* 1    */ (void*)NULL,
    /* 2    */ (void*)NULL,
    /* 3    */ (void*)NULL,
    /* 4    */ (void*)NULL,
};

/* 80536B30-80536B3C 000C+00 s=3 e=0 z=0  None .data      __vt__12J3DFrameCtrl */
SECTION_DATA static void* __vt__12J3DFrameCtrl[3] = {
    /* 0    */ (void*)NULL /* RTTI */,
    /* 1    */ (void*)NULL,
    /* 2    */ (void*)__dt__12J3DFrameCtrlFv,
};

/* 80536B3C-80536B6C 0030+00 s=2 e=0 z=0  None .data      __vt__14dBgS_ObjGndChk */
SECTION_DATA static void* __vt__14dBgS_ObjGndChk[12] = {
    /* 0    */ (void*)NULL /* RTTI */,
    /* 1    */ (void*)NULL,
    /* 2    */ (void*)__dt__14dBgS_ObjGndChkFv,
    /* 3    */ (void*)NULL,
    /* 4    */ (void*)NULL,
    /* 5    */ (void*)func_8053612C,
    /* 6    */ (void*)NULL,
    /* 7    */ (void*)NULL,
    /* 8    */ (void*)func_8053613C,
    /* 9    */ (void*)NULL,
    /* 10   */ (void*)NULL,
    /* 11   */ (void*)func_80536134,
};

/* 80536B6C-80536B78 000C+00 s=2 e=0 z=0  None .data      __vt__15daMg_Fish_HIO_c */
SECTION_DATA static void* __vt__15daMg_Fish_HIO_c[3] = {
    /* 0    */ (void*)NULL /* RTTI */,
    /* 1    */ (void*)NULL,
    /* 2    */ (void*)__dt__15daMg_Fish_HIO_cFv,
};

/* 80529D2C-80529D7C 0050+00 s=1 e=0 z=0  None .text      __ct__15daMg_Fish_HIO_cFv */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm daMg_Fish_HIO_c::daMg_Fish_HIO_c() {
    nofralloc
#include "asm/rel/d/a/d_a_mg_fish/d_a_mg_fish/__ct__15daMg_Fish_HIO_cFv.s"
}
#pragma pop

/* ############################################################################################## */
/* 80536178-8053617C 0004+00 s=1 e=0 z=0  None .rodata    @3713 */
SECTION_RODATA static u32 const lit_3713 = 0x3CA3D70A;

/* 8053617C-80536180 0004+00 s=2 e=0 z=0  None .rodata    @3714 */
SECTION_RODATA static u32 const lit_3714 = 0x42C80000;

/* 80529D7C-80529E4C 00D0+00 s=3 e=0 z=0  None .text      hit_vib_set__FP13mg_fish_class */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm static void hit_vib_set(mg_fish_class* param_0) {
    nofralloc
#include "asm/rel/d/a/d_a_mg_fish/d_a_mg_fish/hit_vib_set__FP13mg_fish_class.s"
}
#pragma pop

/* 80529E4C-80529E88 003C+00 s=4 e=0 z=0  None .text      __dt__4cXyzFv */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm cXyz::~cXyz() {
    nofralloc
#include "asm/rel/d/a/d_a_mg_fish/d_a_mg_fish/__dt__4cXyzFv.s"
}
#pragma pop

/* ############################################################################################## */
/* 80536180-80536184 0004+00 s=11 e=0 z=0  None .rodata    @3715 */
SECTION_RODATA static u8 const lit_3715[4] = {
    0x00,
    0x00,
    0x00,
    0x00,
};

/* 80536184-80536188 0004+00 s=2 e=0 z=0  None .rodata    @3723 */
SECTION_RODATA static u32 const lit_3723 = 0x3ECCCCCD;

/* 80536188-8053618C 0004+00 s=1 e=0 z=0  None .rodata    @3724 */
SECTION_RODATA static u32 const lit_3724 = 0x3E4CCCCD;

/* 80529E88-80529F10 0088+00 s=6 e=0 z=0  None .text      sibuki_set__FP13mg_fish_classf4cXyz */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm static void sibuki_set(mg_fish_class* param_0, f32 param_1, cXyz param_2) {
    nofralloc
#include "asm/rel/d/a/d_a_mg_fish/d_a_mg_fish/sibuki_set__FP13mg_fish_classf4cXyz.s"
}
#pragma pop

/* 80529F10-80529F68 0058+00 s=1 e=0 z=0  None .text      s_hitfish_sub__FPvPv */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm static void s_hitfish_sub(void* param_0, void* param_1) {
    nofralloc
#include "asm/rel/d/a/d_a_mg_fish/d_a_mg_fish/s_hitfish_sub__FPvPv.s"
}
#pragma pop

/* ############################################################################################## */
/* 8053618C-80536190 0004+00 s=0 e=0 z=0  None .rodata    @3759 */
SECTION_RODATA u32 const lit_3759 = 0x41F00000;

/* 80536190-80536198 0004+04 s=2 e=0 z=0  None .rodata    @3812 */
SECTION_RODATA static u32 const lit_3812[1 + 1 /* padding */] = {
    0x41200000,
    /* padding */
    0x00000000,
};

/* 80529F68-8052A114 01AC+00 s=2 e=0 z=0  None .text      pl_check__FP13mg_fish_classf */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm static void pl_check(mg_fish_class* param_0, f32 param_1) {
    nofralloc
#include "asm/rel/d/a/d_a_mg_fish/d_a_mg_fish/pl_check__FP13mg_fish_classf.s"
}
#pragma pop

/* ############################################################################################## */
/* 80536198-805361A0 0008+00 s=0 e=0 z=0  None .rodata    @3813 */
SECTION_RODATA u8 const lit_3813[8] = {
    0x3F, 0xE0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
};

/* 805361A0-805361A8 0008+00 s=0 e=0 z=0  None .rodata    @3814 */
SECTION_RODATA u8 const lit_3814[8] = {
    0x40, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
};

/* 805361A8-805361B0 0008+00 s=0 e=0 z=0  None .rodata    @3815 */
SECTION_RODATA u8 const lit_3815[8] = {
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
};

/* 805361B0-805361B4 0004+00 s=1 e=0 z=0  None .rodata    @3823 */
SECTION_RODATA static u32 const lit_3823 = 0xBF800000;

/* 8052A114-8052A1C0 00AC+00 s=2 e=0 z=0  None .text      anm_init__FP13mg_fish_classifUcf */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm static void anm_init(mg_fish_class* param_0, int param_1, f32 param_2, u8 param_3,
                         f32 param_4) {
    nofralloc
#include "asm/rel/d/a/d_a_mg_fish/d_a_mg_fish/anm_init__FP13mg_fish_classifUcf.s"
}
#pragma pop

/* ############################################################################################## */
/* 805361B4-805361B8 0004+00 s=2 e=0 z=0  None .rodata    @3833 */
SECTION_RODATA static u32 const lit_3833 = 0x40000000;

/* 8052A1C0-8052A21C 005C+00 s=3 e=0 z=0  None .text      mouth_open__FP13mg_fish_class */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm static void mouth_open(mg_fish_class* param_0) {
    nofralloc
#include "asm/rel/d/a/d_a_mg_fish/d_a_mg_fish/mouth_open__FP13mg_fish_class.s"
}
#pragma pop

/* 8052A21C-8052A278 005C+00 s=6 e=0 z=0  None .text      mouth_close__FP13mg_fish_class */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm static void mouth_close(mg_fish_class* param_0) {
    nofralloc
#include "asm/rel/d/a/d_a_mg_fish/d_a_mg_fish/mouth_close__FP13mg_fish_class.s"
}
#pragma pop

/* 8052A278-8052A2F4 007C+00 s=1 e=0 z=0  None .text      s_lure_sub__FPvPv */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm static void s_lure_sub(void* param_0, void* param_1) {
    nofralloc
#include "asm/rel/d/a/d_a_mg_fish/d_a_mg_fish/s_lure_sub__FPvPv.s"
}
#pragma pop

/* ############################################################################################## */
/* 805361B8-805361BC 0004+00 s=1 e=0 z=0  None .rodata    @3869 */
SECTION_RODATA static u32 const lit_3869 = 0x41A00000;

/* 8052A2F4-8052A380 008C+00 s=1 e=0 z=0  None .text      s_esa_sub__FPvPv */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm static void s_esa_sub(void* param_0, void* param_1) {
    nofralloc
#include "asm/rel/d/a/d_a_mg_fish/d_a_mg_fish/s_esa_sub__FPvPv.s"
}
#pragma pop

/* 8052A380-8052A3EC 006C+00 s=1 e=0 z=0  None .text      s_bait_sub__FPvPv */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm static void s_bait_sub(void* param_0, void* param_1) {
    nofralloc
#include "asm/rel/d/a/d_a_mg_fish/d_a_mg_fish/s_bait_sub__FPvPv.s"
}
#pragma pop

/* ############################################################################################## */
/* 80536B80-80536B84 0001+03 s=2 e=0 z=0  None .bss       @1109 */
static u8 lit_1109[1 + 3 /* padding */];

/* 80536B84-80536B88 0001+03 s=0 e=0 z=0  None .bss       @1107 */
u8 lit_1107[1 + 3 /* padding */];

/* 80536B88-80536B8C 0001+03 s=0 e=0 z=0  None .bss       @1105 */
u8 lit_1105[1 + 3 /* padding */];

/* 80536B8C-80536B90 0001+03 s=0 e=0 z=0  None .bss       @1104 */
u8 lit_1104[1 + 3 /* padding */];

/* 80536B90-80536B94 0001+03 s=0 e=0 z=0  None .bss       @1099 */
u8 lit_1099[1 + 3 /* padding */];

/* 80536B94-80536B98 0001+03 s=0 e=0 z=0  None .bss       @1097 */
u8 lit_1097[1 + 3 /* padding */];

/* 80536B98-80536B9C 0001+03 s=0 e=0 z=0  None .bss       @1095 */
u8 lit_1095[1 + 3 /* padding */];

/* 80536B9C-80536BA0 0001+03 s=0 e=0 z=0  None .bss       @1094 */
u8 lit_1094[1 + 3 /* padding */];

/* 80536BA0-80536BA4 0001+03 s=0 e=0 z=0  None .bss       @1057 */
u8 lit_1057[1 + 3 /* padding */];

/* 80536BA4-80536BA8 0001+03 s=0 e=0 z=0  None .bss       @1055 */
u8 lit_1055[1 + 3 /* padding */];

/* 80536BA8-80536BAC 0001+03 s=0 e=0 z=0  None .bss       @1053 */
u8 lit_1053[1 + 3 /* padding */];

/* 80536BAC-80536BB0 0001+03 s=0 e=0 z=0  None .bss       @1052 */
u8 lit_1052[1 + 3 /* padding */];

/* 80536BB0-80536BB4 0001+03 s=0 e=0 z=0  None .bss       @1014 */
u8 lit_1014[1 + 3 /* padding */];

/* 80536BB4-80536BB8 0001+03 s=0 e=0 z=0  None .bss       @1012 */
u8 lit_1012[1 + 3 /* padding */];

/* 80536BB8-80536BBC 0001+03 s=0 e=0 z=0  None .bss       @1010 */
u8 lit_1010[1 + 3 /* padding */];

/* 80536BBC-80536BBE 0001+01 s=0 e=0 z=0  None .bss       @1009 */
u8 lit_1009[1 + 1 /* padding */];

/* 80536BBE-80536BC0 0002+00 s=1 e=0 z=0  None .bss       None */
static u8 data_80536BBE[2];

/* 80536BC0-80536BCC 000C+00 s=1 e=0 z=0  None .bss       @3674 */
static u8 lit_3674[12];

/* 80536BCC-80536BE8 001C+00 s=4 e=0 z=0  None .bss       l_HIO */
static u8 l_HIO[28];

/* 80536BE8-80536BEC 0004+00 s=2 e=0 z=0  None .bss       s_fish_ct */
static u8 s_fish_ct[4];

/* 8052A3EC-8052A464 0078+00 s=1 e=0 z=0  None .text      s_other_search_sub__FPvPv */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm static void s_other_search_sub(void* param_0, void* param_1) {
    nofralloc
#include "asm/rel/d/a/d_a_mg_fish/d_a_mg_fish/s_other_search_sub__FPvPv.s"
}
#pragma pop

/* ############################################################################################## */
/* 805361BC-805361C0 0004+00 s=2 e=0 z=0  None .rodata    @3987 */
SECTION_RODATA static u32 const lit_3987 = 0x447A0000;

/* 8052A464-8052A7BC 0358+00 s=1 e=0 z=0  None .text      search_lure__FP13mg_fish_classi */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm static void search_lure(mg_fish_class* param_0, int param_1) {
    nofralloc
#include "asm/rel/d/a/d_a_mg_fish/d_a_mg_fish/search_lure__FP13mg_fish_classi.s"
}
#pragma pop

/* 8052A7BC-8052A838 007C+00 s=1 e=0 z=0  None .text      s_other_bait_sub__FPvPv */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm static void s_other_bait_sub(void* param_0, void* param_1) {
    nofralloc
#include "asm/rel/d/a/d_a_mg_fish/d_a_mg_fish/s_other_bait_sub__FPvPv.s"
}
#pragma pop

/* 8052A838-8052A9F0 01B8+00 s=1 e=0 z=0  None .text      search_bait__FP13mg_fish_class */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm static void search_bait(mg_fish_class* param_0) {
    nofralloc
#include "asm/rel/d/a/d_a_mg_fish/d_a_mg_fish/search_bait__FP13mg_fish_class.s"
}
#pragma pop

/* 8052A9F0-8052ADBC 03CC+00 s=2 e=0 z=0  None .text      nodeCallBack__FP8J3DJointi */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm static void nodeCallBack(J3DJoint* param_0, int param_1) {
    nofralloc
#include "asm/rel/d/a/d_a_mg_fish/d_a_mg_fish/nodeCallBack__FP8J3DJointi.s"
}
#pragma pop

/* 8052ADBC-8052AFA0 01E4+00 s=2 e=0 z=0  None .text      nodeCallBack2__FP8J3DJointi */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm static void nodeCallBack2(J3DJoint* param_0, int param_1) {
    nofralloc
#include "asm/rel/d/a/d_a_mg_fish/d_a_mg_fish/nodeCallBack2__FP8J3DJointi.s"
}
#pragma pop

/* 8052AFA0-8052B070 00D0+00 s=1 e=0 z=0  None .text      nodeCallBackLH__FP8J3DJointi */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm static void nodeCallBackLH(J3DJoint* param_0, int param_1) {
    nofralloc
#include "asm/rel/d/a/d_a_mg_fish/d_a_mg_fish/nodeCallBackLH__FP8J3DJointi.s"
}
#pragma pop

/* 8052B070-8052B148 00D8+00 s=1 e=0 z=0  None .text      nodeCallBackBB__FP8J3DJointi */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm static void nodeCallBackBB(J3DJoint* param_0, int param_1) {
    nofralloc
#include "asm/rel/d/a/d_a_mg_fish/d_a_mg_fish/nodeCallBackBB__FP8J3DJointi.s"
}
#pragma pop

/* 8052B148-8052B1A0 0058+00 s=3 e=0 z=0  None .text      s_bt_sub__FPvPv */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm static void s_bt_sub(void* param_0, void* param_1) {
    nofralloc
#include "asm/rel/d/a/d_a_mg_fish/d_a_mg_fish/s_bt_sub__FPvPv.s"
}
#pragma pop

/* 8052B1A0-8052B1F8 0058+00 s=2 e=0 z=0  None .text      s_sp_sub__FPvPv */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm static void s_sp_sub(void* param_0, void* param_1) {
    nofralloc
#include "asm/rel/d/a/d_a_mg_fish/d_a_mg_fish/s_sp_sub__FPvPv.s"
}
#pragma pop

/* 8052B1F8-8052B264 006C+00 s=2 e=0 z=0  None .text      s_lh_sub__FPvPv */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm static void s_lh_sub(void* param_0, void* param_1) {
    nofralloc
#include "asm/rel/d/a/d_a_mg_fish/d_a_mg_fish/s_lh_sub__FPvPv.s"
}
#pragma pop

/* 8052B264-8052B2BC 0058+00 s=2 e=0 z=0  None .text      s_bin_sub__FPvPv */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm static void s_bin_sub(void* param_0, void* param_1) {
    nofralloc
#include "asm/rel/d/a/d_a_mg_fish/d_a_mg_fish/s_bin_sub__FPvPv.s"
}
#pragma pop

/* 8052B2BC-8052B314 0058+00 s=2 e=0 z=0  None .text      s_kn_sub__FPvPv */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm static void s_kn_sub(void* param_0, void* param_1) {
    nofralloc
#include "asm/rel/d/a/d_a_mg_fish/d_a_mg_fish/s_kn_sub__FPvPv.s"
}
#pragma pop

/* 8052B314-8052B36C 0058+00 s=2 e=0 z=0  None .text      s_ed_sub__FPvPv */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm static void s_ed_sub(void* param_0, void* param_1) {
    nofralloc
#include "asm/rel/d/a/d_a_mg_fish/d_a_mg_fish/s_ed_sub__FPvPv.s"
}
#pragma pop

/* 8052B36C-8052B3C4 0058+00 s=2 e=0 z=0  None .text      s_sy_sub__FPvPv */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm static void s_sy_sub(void* param_0, void* param_1) {
    nofralloc
#include "asm/rel/d/a/d_a_mg_fish/d_a_mg_fish/s_sy_sub__FPvPv.s"
}
#pragma pop

/* 8052B3C4-8052B41C 0058+00 s=3 e=0 z=0  None .text      s_bb_sub__FPvPv */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm static void s_bb_sub(void* param_0, void* param_1) {
    nofralloc
#include "asm/rel/d/a/d_a_mg_fish/d_a_mg_fish/s_bb_sub__FPvPv.s"
}
#pragma pop

/* 8052B41C-8052B468 004C+00 s=1 e=0 z=0  None .text      s_bb2_sub__FPvPv */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm static void s_bb2_sub(void* param_0, void* param_1) {
    nofralloc
#include "asm/rel/d/a/d_a_mg_fish/d_a_mg_fish/s_bb2_sub__FPvPv.s"
}
#pragma pop

/* 8052B468-8052B4B4 004C+00 s=1 e=0 z=0  None .text      s_sg_sub__FPvPv */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm static void s_sg_sub(void* param_0, void* param_1) {
    nofralloc
#include "asm/rel/d/a/d_a_mg_fish/d_a_mg_fish/s_sg_sub__FPvPv.s"
}
#pragma pop

/* 8052B4B4-8052B928 0474+00 s=1 e=0 z=0  None .text      daMg_Fish_Draw__FP13mg_fish_class */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm static void daMg_Fish_Draw(mg_fish_class* param_0) {
    nofralloc
#include "asm/rel/d/a/d_a_mg_fish/d_a_mg_fish/daMg_Fish_Draw__FP13mg_fish_class.s"
}
#pragma pop

/* ############################################################################################## */
/* 805361C0-805361C4 0004+00 s=0 e=0 z=0  None .rodata    @3988 */
SECTION_RODATA u32 const lit_3988 = 0x3FC00000;

/* 805361C4-805361C8 0004+00 s=0 e=0 z=0  None .rodata    @3989 */
SECTION_RODATA u32 const lit_3989 = 0x3F000000;

/* 805361C8-805361CC 0004+00 s=0 e=0 z=0  None .rodata    @3990 */
SECTION_RODATA u32 const lit_3990 = 0xC2A00000;

/* 805361CC-805361D0 0004+00 s=0 e=0 z=0  None .rodata    @3991 */
SECTION_RODATA u32 const lit_3991 = 0x42700000;

/* 805361D0-805361D4 0004+00 s=0 e=0 z=0  None .rodata    @4523 */
SECTION_RODATA u32 const lit_4523 = 0x461C4000;

/* 805361D4-805361D8 0004+00 s=0 e=0 z=0  None .rodata    @4524 */
SECTION_RODATA u32 const lit_4524 = 0x42480000;

/* 805361D8-805361DC 0004+00 s=0 e=0 z=0  None .rodata    @4525 */
SECTION_RODATA u32 const lit_4525 = 0x44160000;

/* 805361DC-805361E0 0004+00 s=2 e=0 z=0  None .rodata    @4538 */
SECTION_RODATA static u32 const lit_4538 = 0x44BB8000;

/* 805361E0-805361E4 0004+00 s=1 e=0 z=0  None .rodata    @4539 */
SECTION_RODATA static u32 const lit_4539 = 0xC7C35000;

/* 8052B928-8052B9CC 00A4+00 s=1 e=0 z=0  None .text      get_surface_y__FP13mg_fish_classP4cXyz */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm static void get_surface_y(mg_fish_class* param_0, cXyz* param_1) {
    nofralloc
#include "asm/rel/d/a/d_a_mg_fish/d_a_mg_fish/get_surface_y__FP13mg_fish_classP4cXyz.s"
}
#pragma pop

/* 8052B9CC-8052BAB8 00EC+00 s=7 e=0 z=0  None .text      get_ground_y__FP13mg_fish_classP4cXyz */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm static void get_ground_y(mg_fish_class* param_0, cXyz* param_1) {
    nofralloc
#include "asm/rel/d/a/d_a_mg_fish/d_a_mg_fish/get_ground_y__FP13mg_fish_classP4cXyz.s"
}
#pragma pop

/* 8052BAB8-8052BB30 0078+00 s=4 e=0 z=0  None .text      __dt__14dBgS_ObjGndChkFv */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm dBgS_ObjGndChk::~dBgS_ObjGndChk() {
    nofralloc
#include "asm/rel/d/a/d_a_mg_fish/d_a_mg_fish/__dt__14dBgS_ObjGndChkFv.s"
}
#pragma pop

/* 8052BB30-8052BF68 0438+00 s=1 e=0 z=0  None .text      mf_swim__FP13mg_fish_class */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm static void mf_swim(mg_fish_class* param_0) {
    nofralloc
#include "asm/rel/d/a/d_a_mg_fish/d_a_mg_fish/mf_swim__FP13mg_fish_class.s"
}
#pragma pop

/* 8052BF68-8052BFF8 0090+00 s=1 e=0 z=0  None .text      pos_bg_check__FP4cXyzP4cXyz */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm static void pos_bg_check(cXyz* param_0, cXyz* param_1) {
    nofralloc
#include "asm/rel/d/a/d_a_mg_fish/d_a_mg_fish/pos_bg_check__FP4cXyzP4cXyz.s"
}
#pragma pop

/* ############################################################################################## */
/* 805361E4-805361E8 0004+00 s=2 e=0 z=0  None .rodata    @4647 */
SECTION_RODATA static u32 const lit_4647 = 0x44FA0000;

/* 805361E8-805361EC 0004+00 s=0 e=0 z=0  None .rodata    @4648 */
SECTION_RODATA u32 const lit_4648 = 0x3DCCCCCD;

/* 805361EC-805361F0 0004+00 s=1 e=0 z=0  None .rodata    @4738 */
SECTION_RODATA static u32 const lit_4738 = 0x43FA0000;

/* 8052BFF8-8052C230 0238+00 s=1 e=0 z=0  None .text      path_search__FP13mg_fish_class */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm static void path_search(mg_fish_class* param_0) {
    nofralloc
#include "asm/rel/d/a/d_a_mg_fish/d_a_mg_fish/path_search__FP13mg_fish_class.s"
}
#pragma pop

/* 8052C230-8052C574 0344+00 s=1 e=0 z=0  None .text      mf_swim_p__FP13mg_fish_class */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm static void mf_swim_p(mg_fish_class* param_0) {
    nofralloc
#include "asm/rel/d/a/d_a_mg_fish/d_a_mg_fish/mf_swim_p__FP13mg_fish_class.s"
}
#pragma pop

/* 8052C574-8052CAA0 052C+00 s=1 e=0 z=0  None .text      mf_swim_s__FP13mg_fish_class */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm static void mf_swim_s(mg_fish_class* param_0) {
    nofralloc
#include "asm/rel/d/a/d_a_mg_fish/d_a_mg_fish/mf_swim_s__FP13mg_fish_class.s"
}
#pragma pop

/* ############################################################################################## */
/* 805361F0-805361F4 0004+00 s=0 e=0 z=0  None .rodata    @4739 */
SECTION_RODATA u32 const lit_4739 = 0x45DAC000;

/* 805361F4-805361F8 0004+00 s=0 e=0 z=0  None .rodata    @4806 */
SECTION_RODATA u32 const lit_4806 = 0x43480000;

/* 805361F8-805361FC 0004+00 s=0 e=0 z=0  None .rodata    @4807 */
SECTION_RODATA u32 const lit_4807 = 0x42200000;

/* 805361FC-80536200 0004+00 s=3 e=0 z=0  None .rodata    @4976 */
SECTION_RODATA static u32 const lit_4976 = 0x3C23D70A;

/* 8052CAA0-8052CD68 02C8+00 s=1 e=0 z=0  None .text      mf_stay__FP13mg_fish_class */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm static void mf_stay(mg_fish_class* param_0) {
    nofralloc
#include "asm/rel/d/a/d_a_mg_fish/d_a_mg_fish/mf_stay__FP13mg_fish_class.s"
}
#pragma pop

/* 8052CD68-8052D3BC 0654+00 s=1 e=0 z=0  None .text      mf_away__FP13mg_fish_class */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm static void mf_away(mg_fish_class* param_0) {
    nofralloc
#include "asm/rel/d/a/d_a_mg_fish/d_a_mg_fish/mf_away__FP13mg_fish_class.s"
}
#pragma pop

/* 8052D3BC-8052DAE4 0728+00 s=1 e=0 z=0  None .text      ri_swim__FP13mg_fish_class */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm static void ri_swim(mg_fish_class* param_0) {
    nofralloc
#include "asm/rel/d/a/d_a_mg_fish/d_a_mg_fish/ri_swim__FP13mg_fish_class.s"
}
#pragma pop

/* 8052DAE4-8052DEB8 03D4+00 s=1 e=0 z=0  None .text      dmcalc__FP13mg_fish_class */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm static void dmcalc(mg_fish_class* param_0) {
    nofralloc
#include "asm/rel/d/a/d_a_mg_fish/d_a_mg_fish/dmcalc__FP13mg_fish_class.s"
}
#pragma pop

/* 8052DEB8-8052EAA0 0BE8+00 s=1 e=0 z=0  None .text      mf_lure_search__FP13mg_fish_class */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm static void mf_lure_search(mg_fish_class* param_0) {
    nofralloc
#include "asm/rel/d/a/d_a_mg_fish/d_a_mg_fish/mf_lure_search__FP13mg_fish_class.s"
}
#pragma pop

/* 8052EAA0-8052F120 0680+00 s=1 e=0 z=0  None .text      mf_bait_search__FP13mg_fish_class */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm static void mf_bait_search(mg_fish_class* param_0) {
    nofralloc
#include "asm/rel/d/a/d_a_mg_fish/d_a_mg_fish/mf_bait_search__FP13mg_fish_class.s"
}
#pragma pop

/* 8052F120-8052FA4C 092C+00 s=1 e=0 z=0  None .text      mf_hit__FP13mg_fish_class */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm static void mf_hit(mg_fish_class* param_0) {
    nofralloc
#include "asm/rel/d/a/d_a_mg_fish/d_a_mg_fish/mf_hit__FP13mg_fish_class.s"
}
#pragma pop

/* 8052FA4C-8053036C 0920+00 s=1 e=1 z=0  None .text      mf_jump__FP13mg_fish_class */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void mf_jump(mg_fish_class* param_0) {
    nofralloc
#include "asm/rel/d/a/d_a_mg_fish/d_a_mg_fish/mf_jump__FP13mg_fish_class.s"
}
#pragma pop

/* 8053036C-8053055C 01F0+00 s=2 e=0 z=0  None .text      pota_set__FP13mg_fish_class */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm static void pota_set(mg_fish_class* param_0) {
    nofralloc
#include "asm/rel/d/a/d_a_mg_fish/d_a_mg_fish/pota_set__FP13mg_fish_class.s"
}
#pragma pop

/* 8053055C-80530924 03C8+00 s=1 e=0 z=0  None .text      mf_catch__FP13mg_fish_class */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm static void mf_catch(mg_fish_class* param_0) {
    nofralloc
#include "asm/rel/d/a/d_a_mg_fish/d_a_mg_fish/mf_catch__FP13mg_fish_class.s"
}
#pragma pop

/* 80530924-8053109C 0778+00 s=1 e=0 z=0  None .text      mf_esa_search__FP13mg_fish_class */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm static void mf_esa_search(mg_fish_class* param_0) {
    nofralloc
#include "asm/rel/d/a/d_a_mg_fish/d_a_mg_fish/mf_esa_search__FP13mg_fish_class.s"
}
#pragma pop

/* 8053109C-805313D8 033C+00 s=1 e=0 z=0  None .text      mf_esa_hit__FP13mg_fish_class */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm static void mf_esa_hit(mg_fish_class* param_0) {
    nofralloc
#include "asm/rel/d/a/d_a_mg_fish/d_a_mg_fish/mf_esa_hit__FP13mg_fish_class.s"
}
#pragma pop

/* 805313D8-8053198C 05B4+00 s=1 e=0 z=0  None .text      mf_esa_catch__FP13mg_fish_class */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm static void mf_esa_catch(mg_fish_class* param_0) {
    nofralloc
#include "asm/rel/d/a/d_a_mg_fish/d_a_mg_fish/mf_esa_catch__FP13mg_fish_class.s"
}
#pragma pop

/* 8053198C-80531CD4 0348+00 s=1 e=0 z=0  None .text      mf_aqua__FP13mg_fish_class */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm static void mf_aqua(mg_fish_class* param_0) {
    nofralloc
#include "asm/rel/d/a/d_a_mg_fish/d_a_mg_fish/mf_aqua__FP13mg_fish_class.s"
}
#pragma pop

/* 80531CD4-805322E0 060C+00 s=1 e=0 z=0  None .text      ri_aqua__FP13mg_fish_class */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm static void ri_aqua(mg_fish_class* param_0) {
    nofralloc
#include "asm/rel/d/a/d_a_mg_fish/d_a_mg_fish/ri_aqua__FP13mg_fish_class.s"
}
#pragma pop

/* 805322E0-805324D8 01F8+00 s=1 e=0 z=0  None .text      mf_aqua_tilt__FP13mg_fish_class */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm static void mf_aqua_tilt(mg_fish_class* param_0) {
    nofralloc
#include "asm/rel/d/a/d_a_mg_fish/d_a_mg_fish/mf_aqua_tilt__FP13mg_fish_class.s"
}
#pragma pop

/* ############################################################################################## */
/* 80536794-805367A0 000C+00 s=1 e=0 z=0  None .data      joint_offset_LM$5310 */
extern "C" u8 data_80536794[12];

/* 805367A0-805367A8 0008+00 s=1 e=0 z=0  None .data      joint_offset_BG$5311 */
extern "C" u8 data_805367A0[8];

/* 805367A8-805367C0 0018+00 s=1 e=0 z=0  None .data      joint_offset_NP$5312 */
extern "C" u8 data_805367A8[24];

/* 805367C0-805367D8 0018+00 s=1 e=0 z=0  None .data      joint_offset_KS$5313 */
extern "C" u8 data_805367C0[24];

/* 805367D8-805367F0 0018+00 s=1 e=0 z=0  None .data      joint_offset_CF$5314 */
extern "C" u8 data_805367D8[24];

/* 805367F0-80536808 0018+00 s=1 e=0 z=0  None .data      joint_offset_RI$5315 */
extern "C" u8 data_805367F0[24];

/* 80536200-80536204 0004+00 s=0 e=0 z=0  None .rodata    @5103 */
SECTION_RODATA u32 const lit_5103 = 0x465AC000;

/* 80536204-80536208 0004+00 s=0 e=0 z=0  None .rodata    @5104 */
SECTION_RODATA u32 const lit_5104 = 0x43160000;

/* 80536208-8053620C 0004+00 s=1 e=0 z=0  None .rodata    @5105 */
SECTION_RODATA static u32 const lit_5105 = 0x3E99999A;

/* 8053620C-80536210 0004+00 s=0 e=0 z=0  None .rodata    @5280 */
SECTION_RODATA u32 const lit_5280 = 0x45FA0000;

/* 80536210-80536214 0004+00 s=0 e=0 z=0  None .rodata    @5281 */
SECTION_RODATA u32 const lit_5281 = 0x3E800000;

/* 80536214-80536218 0004+00 s=0 e=0 z=0  None .rodata    @5282 */
SECTION_RODATA u32 const lit_5282 = 0x47800000;

/* 80536218-8053621C 0004+00 s=0 e=0 z=0  None .rodata    @5283 */
SECTION_RODATA u32 const lit_5283 = 0xC1F00000;

/* 8053621C-80536220 0004+00 s=0 e=0 z=0  None .rodata    @5284 */
SECTION_RODATA u32 const lit_5284 = 0x3D4CCCCD;

/* 80536220-80536224 0004+00 s=0 e=0 z=0  None .rodata    @5285 */
SECTION_RODATA u32 const lit_5285 = 0xC1200000;

/* 80536224-80536228 0004+00 s=0 e=0 z=0  None .rodata    @5286 */
SECTION_RODATA u32 const lit_5286 = 0xBDCCCCCD;

/* 80536228-8053622C 0004+00 s=0 e=0 z=0  None .rodata    @5287 */
SECTION_RODATA u32 const lit_5287 = 0x3B03126F;

/* 8053622C-80536230 0004+00 s=0 e=0 z=0  None .rodata    @5288 */
SECTION_RODATA u32 const lit_5288 = 0x44A28000;

/* 80536230-8053625C 002C+00 s=0 e=0 z=0  None .rodata    @5316 */
SECTION_RODATA void* const lit_5316[11] = {
    /* 0    */ (void*)&data_80536794,
    /* 1    */ (void*)&data_805367F0,
    /* 2    */ (void*)&data_805367A8,
    /* 3    */ (void*)&data_805367D8,
    /* 4    */ (void*)&data_805367C0,
    /* 5    */ (void*)&data_805367A0,
    /* 6    */ (void*)&data_80536794,
    /* 7    */ (void*)&data_805367F0,
    /* 8    */ (void*)&data_805367A8,
    /* 9    */ (void*)&data_805367D8,
    /* 10   */ (void*)&data_805367C0,
};

/* 8053625C-80536260 0004+00 s=0 e=0 z=0  None .rodata    @5379 */
SECTION_RODATA u32 const lit_5379 = 0x40E00000;

/* 80536260-80536264 0004+00 s=0 e=0 z=0  None .rodata    @5380 */
SECTION_RODATA u32 const lit_5380 = 0x40400000;

/* 80536264-80536268 0004+00 s=0 e=0 z=0  None .rodata    @5381 */
SECTION_RODATA u32 const lit_5381 = 0x40300000;

/* 80536268-8053626C 0004+00 s=0 e=0 z=0  None .rodata    @5382 */
SECTION_RODATA u32 const lit_5382 = 0x3FA66666;

/* 8053626C-80536270 0004+00 s=0 e=0 z=0  None .rodata    @5632 */
SECTION_RODATA u32 const lit_5632 = 0x3CCCCCCD;

/* 80536270-80536274 0004+00 s=0 e=0 z=0  None .rodata    @5633 */
SECTION_RODATA u32 const lit_5633 = 0x3E19999A;

/* 80536274-80536278 0004+00 s=0 e=0 z=0  None .rodata    @5634 */
SECTION_RODATA u32 const lit_5634 = 0x41700000;

/* 80536278-8053627C 0004+00 s=0 e=0 z=0  None .rodata    @5635 */
SECTION_RODATA u32 const lit_5635 = 0x3FE00000;

/* 8053627C-80536280 0004+00 s=0 e=0 z=0  None .rodata    @5636 */
SECTION_RODATA u32 const lit_5636 = 0x41400000;

/* 80536280-80536284 0004+00 s=0 e=0 z=0  None .rodata    @5637 */
SECTION_RODATA u32 const lit_5637 = 0x3F19999A;

/* 80536284-80536288 0004+00 s=0 e=0 z=0  None .rodata    @5638 */
SECTION_RODATA u32 const lit_5638 = 0x41C80000;

/* 80536288-8053628C 0004+00 s=0 e=0 z=0  None .rodata    @5639 */
SECTION_RODATA u32 const lit_5639 = 0x40200000;

/* 8053628C-80536290 0004+00 s=0 e=0 z=0  None .rodata    @5640 */
SECTION_RODATA u32 const lit_5640 = 0xBE19999A;

/* 80536290-80536294 0004+00 s=0 e=0 z=0  None .rodata    @5781 */
SECTION_RODATA u32 const lit_5781 = 0x3F333333;

/* 80536294-80536298 0004+00 s=0 e=0 z=0  None .rodata    @5957 */
SECTION_RODATA u32 const lit_5957 = 0x3F4CCCCD;

/* 80536298-8053629C 0004+00 s=0 e=0 z=0  None .rodata    @5958 */
SECTION_RODATA u32 const lit_5958 = 0x3EB33333;

/* 8053629C-805362A0 0004+00 s=0 e=0 z=0  None .rodata    @5959 */
SECTION_RODATA u32 const lit_5959 = 0x3F0CCCCD;

/* 805362A0-805362A4 0004+00 s=0 e=0 z=0  None .rodata    @5960 */
SECTION_RODATA u32 const lit_5960 = 0x41500000;

/* 805362A4-805362A8 0004+00 s=0 e=0 z=0  None .rodata    @5961 */
SECTION_RODATA u32 const lit_5961 = 0x3F266666;

/* 805362A8-805362AC 0004+00 s=0 e=0 z=0  None .rodata    @5962 */
SECTION_RODATA u32 const lit_5962 = 0x42340000;

/* 805362AC-805362B0 0004+00 s=0 e=0 z=0  None .rodata    @5963 */
SECTION_RODATA u32 const lit_5963 = 0x41300000;

/* 805362B0-805362B4 0004+00 s=0 e=0 z=0  None .rodata    @5964 */
SECTION_RODATA u32 const lit_5964 = 0x41100000;

/* 805362B4-805362B8 0004+00 s=0 e=0 z=0  None .rodata    @5965 */
SECTION_RODATA u32 const lit_5965 = 0x41000000;

/* 805362B8-805362BC 0004+00 s=0 e=0 z=0  None .rodata    @5966 */
SECTION_RODATA u32 const lit_5966 = 0x40C00000;

/* 805362BC-805362C0 0004+00 s=0 e=0 z=0  None .rodata    @5967 */
SECTION_RODATA u32 const lit_5967 = 0x42B40000;

/* 805362C0-805362C4 0004+00 s=0 e=0 z=0  None .rodata    @5968 */
SECTION_RODATA u32 const lit_5968 = 0x457A0000;

/* 805362C4-805362C8 0004+00 s=0 e=0 z=0  None .rodata    @6132 */
SECTION_RODATA u32 const lit_6132 = 0x46800000;

/* 805362C8-805362CC 0004+00 s=0 e=0 z=0  None .rodata    @6133 */
SECTION_RODATA u32 const lit_6133 = 0x43C00000;

/* 805362CC-805362D0 0004+00 s=0 e=0 z=0  None .rodata    @6134 */
SECTION_RODATA u32 const lit_6134 = 0x41B80000;

/* 805362D0-805362D4 0004+00 s=0 e=0 z=0  None .rodata    @6135 */
SECTION_RODATA u32 const lit_6135 = 0xBF000000;

/* 805362D4-805362D8 0004+00 s=0 e=0 z=0  None .rodata    @6136 */
SECTION_RODATA u32 const lit_6136 = 0x464B2000;

/* 805362D8-805362DC 0004+00 s=0 e=0 z=0  None .rodata    @6293 */
SECTION_RODATA u32 const lit_6293 = 0x453B8000;

/* 805362DC-805362E0 0004+00 s=0 e=0 z=0  None .rodata    @6455 */
SECTION_RODATA u32 const lit_6455 = 0x42A00000;

/* 805362E0-805362E4 0004+00 s=0 e=0 z=0  None .rodata    @6456 */
SECTION_RODATA u32 const lit_6456 = 0xBB03126F;

/* 805362E4-805362E8 0004+00 s=0 e=0 z=0  None .rodata    @6457 */
SECTION_RODATA u32 const lit_6457 = 0xBE4CCCCD;

/* 805362E8-805362EC 0004+00 s=0 e=0 z=0  None .rodata    @6458 */
SECTION_RODATA u32 const lit_6458 = 0x41600000;

/* 805362EC-805362F0 0004+00 s=0 e=0 z=0  None .rodata    @6459 */
SECTION_RODATA u32 const lit_6459 = 0x47000000;

/* 805362F0-805362F4 0004+00 s=0 e=0 z=0  None .rodata    @6648 */
SECTION_RODATA u32 const lit_6648 = 0x459C4000;

/* 805362F4-805362F8 0004+00 s=0 e=0 z=0  None .rodata    @6649 */
SECTION_RODATA u32 const lit_6649 = 0x442F0000;

/* 805362F8-805362FC 0004+00 s=0 e=0 z=0  None .rodata    @6650 */
SECTION_RODATA u32 const lit_6650 = 0x43340000;

/* 805362FC-80536300 0004+00 s=0 e=0 z=0  None .rodata    @6651 */
SECTION_RODATA u32 const lit_6651 = 0x43200000;

/* 80536300-80536304 0004+00 s=0 e=0 z=0  None .rodata    @6652 */
SECTION_RODATA u32 const lit_6652 = 0x42680000;

/* 80536304-80536308 0004+00 s=0 e=0 z=0  None .rodata    @6653 */
SECTION_RODATA u32 const lit_6653 = 0x3BA3D70A;

/* 80536308-8053630C 0004+00 s=0 e=0 z=0  None .rodata    @6722 */
SECTION_RODATA u32 const lit_6722 = 0x428C0000;

/* 8053630C-80536310 0004+00 s=0 e=0 z=0  None .rodata    @6723 */
SECTION_RODATA u32 const lit_6723 = 0x433E0000;

/* 80536310-80536314 0004+00 s=0 e=0 z=0  None .rodata    @6724 */
SECTION_RODATA u32 const lit_6724 = 0xC4340000;

/* 80536314-80536318 0004+00 s=0 e=0 z=0  None .rodata    @6725 */
SECTION_RODATA u32 const lit_6725 = 0x3B83126F;

/* 80536318-8053631C 0004+00 s=0 e=0 z=0  None .rodata    @6847 */
SECTION_RODATA u32 const lit_6847 = 0x42F00000;

/* 8053631C-80536320 0004+00 s=0 e=0 z=0  None .rodata    @6848 */
SECTION_RODATA u32 const lit_6848 = 0x430C0000;

/* 80536320-80536324 0004+00 s=0 e=0 z=0  None .rodata    @6849 */
SECTION_RODATA u32 const lit_6849 = 0x435C0000;

/* 80536324-80536328 0004+00 s=0 e=0 z=0  None .rodata    @6893 */
SECTION_RODATA u32 const lit_6893 = 0x3F99999A;

/* 80536328-8053632C 0004+00 s=0 e=0 z=0  None .rodata    @7221 */
SECTION_RODATA u32 const lit_7221 = 0x458CA000;

/* 8053632C-80536330 0004+00 s=0 e=0 z=0  None .rodata    @7222 */
SECTION_RODATA u32 const lit_7222 = 0x402CCCCD;

/* 80536330-80536334 0004+00 s=0 e=0 z=0  None .rodata    @7223 */
SECTION_RODATA u32 const lit_7223 = 0x38D1B717;

/* 80536334-80536338 0004+00 s=0 e=0 z=0  None .rodata    @7224 */
SECTION_RODATA u32 const lit_7224 = 0x391D4952;

/* 80536338-8053633C 0004+00 s=0 e=0 z=0  None .rodata    @7225 */
SECTION_RODATA u32 const lit_7225 = 0x3951B717;

/* 8053633C-80536340 0004+00 s=0 e=0 z=0  None .rodata    @7226 */
SECTION_RODATA u32 const lit_7226 = 0x399D4952;

/* 80536340-80536344 0004+00 s=0 e=0 z=0  None .rodata    @7227 */
SECTION_RODATA u32 const lit_7227 = 0x39D1B717;

/* 80536344-80536348 0004+00 s=0 e=0 z=0  None .rodata    @7228 */
SECTION_RODATA u32 const lit_7228 = 0x3983126F;

/* 80536348-8053634C 0004+00 s=0 e=0 z=0  None .rodata    @7229 */
SECTION_RODATA u32 const lit_7229 = 0x420C0000;

/* 8053634C-80536350 0004+00 s=0 e=0 z=0  None .rodata    @7230 */
SECTION_RODATA u32 const lit_7230 = 0xC60CA000;

/* 80536350-80536354 0004+00 s=0 e=0 z=0  None .rodata    @7231 */
SECTION_RODATA u32 const lit_7231 = 0xC47A0000;

/* 80536354-80536358 0004+00 s=0 e=0 z=0  None .rodata    @7232 */
SECTION_RODATA u32 const lit_7232 = 0x451C4000;

/* 80536358-8053635C 0004+00 s=0 e=0 z=0  None .rodata    @7233 */
SECTION_RODATA u32 const lit_7233 = 0x40900000;

/* 8053635C-80536360 0004+00 s=0 e=0 z=0  None .rodata    @7234 */
SECTION_RODATA u32 const lit_7234 = 0x3D23D70A;

/* 80536360-80536364 0004+00 s=0 e=0 z=0  None .rodata    @7235 */
SECTION_RODATA u32 const lit_7235 = 0xC428C000;

/* 80536364-80536368 0004+00 s=0 e=0 z=0  None .rodata    @7236 */
SECTION_RODATA u32 const lit_7236 = 0xC43F4000;

/* 80536368-8053636C 0004+00 s=0 e=0 z=0  None .rodata    @7237 */
SECTION_RODATA u32 const lit_7237 = 0x43910000;

/* 8053636C-80536370 0004+00 s=0 e=0 z=0  None .rodata    @7238 */
SECTION_RODATA u32 const lit_7238 = 0xC3160000;

/* 80536370-80536374 0004+00 s=0 e=0 z=0  None .rodata    @7239 */
SECTION_RODATA u32 const lit_7239 = 0x455AC000;

/* 80536374-80536378 0004+00 s=0 e=0 z=0  None .rodata    @7240 */
SECTION_RODATA u32 const lit_7240 = 0x46B64A00;

/* 80536378-8053637C 0004+00 s=0 e=0 z=0  None .rodata    @7241 */
SECTION_RODATA u32 const lit_7241 = 0x44480000;

/* 8053637C-80536380 0004+00 s=1 e=0 z=0  None .rodata    @7288 */
SECTION_RODATA static u32 const lit_7288 = 0xC0400000;

/* 80536380-8053638C 000C+00 s=0 e=0 z=0  None .rodata    @7384 */
SECTION_RODATA u8 const lit_7384[12] = {
    0x3F, 0x80, 0x00, 0x00, 0x40, 0x00, 0x00, 0x00, 0x40, 0x60, 0x00, 0x00,
};

/* 8053638C-80536398 000C+00 s=0 e=0 z=0  None .rodata    @7398 */
SECTION_RODATA u8 const lit_7398[12] = {
    0x3F, 0x80, 0x00, 0x00, 0x40, 0x00, 0x00, 0x00, 0x40, 0x60, 0x00, 0x00,
};

/* 80536398-8053639C 0004+00 s=0 e=0 z=0  None .rodata    @8029 */
SECTION_RODATA u32 const lit_8029 = 0xC0A00000;

/* 8053639C-805363A0 0004+00 s=0 e=0 z=0  None .rodata    @8030 */
SECTION_RODATA u32 const lit_8030 = 0xC2C80000;

/* 805363A0-805363A4 0004+00 s=0 e=0 z=0  None .rodata    @8031 */
SECTION_RODATA u32 const lit_8031 = 0x3F8F5C29;

/* 805363A4-805363A8 0004+00 s=0 e=0 z=0  None .rodata    @8032 */
SECTION_RODATA u32 const lit_8032 = 0xC1C80000;

/* 805363A8-805363AC 0004+00 s=0 e=0 z=0  None .rodata    @8033 */
SECTION_RODATA u32 const lit_8033 = 0xC1700000;

/* 805363AC-805363B0 0004+00 s=0 e=0 z=0  None .rodata    @8034 */
SECTION_RODATA u32 const lit_8034 = 0x3F8CCCCD;

/* 805363B0-805363B4 0004+00 s=0 e=0 z=0  None .rodata    @8035 */
SECTION_RODATA u32 const lit_8035 = 0x41E80000;

/* 805363B4-805363B8 0004+00 s=0 e=0 z=0  None .rodata    @8036 */
SECTION_RODATA u32 const lit_8036 = 0x3EB851EC;

/* 805363B8-805363BC 0004+00 s=0 e=0 z=0  None .rodata    @8037 */
SECTION_RODATA u32 const lit_8037 = 0xC2200000;

/* 805363BC-805363C0 0004+00 s=0 e=0 z=0  None .rodata    @8038 */
SECTION_RODATA u32 const lit_8038 = 0x41880000;

/* 805363C0-805363C4 0004+00 s=0 e=0 z=0  None .rodata    @8039 */
SECTION_RODATA u32 const lit_8039 = 0xC1100000;

/* 805363C4-805363C8 0004+00 s=0 e=0 z=0  None .rodata    @8040 */
SECTION_RODATA u32 const lit_8040 = 0x45228000;

/* 805363C8-805363CC 0004+00 s=0 e=0 z=0  None .rodata    @8041 */
SECTION_RODATA u32 const lit_8041 = 0xC1000000;

/* 805363CC-805363D0 0004+00 s=0 e=0 z=0  None .rodata    @8042 */
SECTION_RODATA u32 const lit_8042 = 0xC1600000;

/* 805363D0-805363D4 0004+00 s=0 e=0 z=0  None .rodata    @8043 */
SECTION_RODATA u32 const lit_8043 = 0xC1980000;

/* 805363D4-805363D8 0004+00 s=0 e=0 z=0  None .rodata    @8044 */
SECTION_RODATA u32 const lit_8044 = 0xC0000000;

/* 805363D8-805363DC 0004+00 s=0 e=0 z=0  None .rodata    @8045 */
SECTION_RODATA u32 const lit_8045 = 0x3EF5C28F;

/* 805363DC-805363E0 0004+00 s=0 e=0 z=0  None .rodata    @8046 */
SECTION_RODATA u32 const lit_8046 = 0xC2340000;

/* 805363E0-805363E4 0004+00 s=0 e=0 z=0  None .rodata    @8047 */
SECTION_RODATA u32 const lit_8047 = 0xC20C0000;

/* 805363E4-805363E8 0004+00 s=0 e=0 z=0  None .rodata    @8763 */
SECTION_RODATA u32 const lit_8763 = 0xC3480000;

/* 805363E8-805363EC 0004+00 s=0 e=0 z=0  None .rodata    @8764 */
SECTION_RODATA u32 const lit_8764 = 0x40228F5C;

/* 805363EC-805363F0 0004+00 s=0 e=0 z=0  None .rodata    @8765 */
SECTION_RODATA u32 const lit_8765 = 0x3D5A7B0B;

/* 805363F0-805363F4 0004+00 s=0 e=0 z=0  None .rodata    @8766 */
SECTION_RODATA u32 const lit_8766 = 0x3CAC0831;

/* 805363F4-805363F8 0004+00 s=0 e=0 z=0  None .rodata    @8767 */
SECTION_RODATA u32 const lit_8767 = 0x3E8F5C29;

/* 805363F8-805363FC 0004+00 s=0 e=0 z=0  None .rodata    @8768 */
SECTION_RODATA u32 const lit_8768 = 0x3F2B851F;

/* 805363FC-80536400 0004+00 s=0 e=0 z=0  None .rodata    @8769 */
SECTION_RODATA u32 const lit_8769 = 0x3D1FBE77;

/* 80536400-80536404 0004+00 s=0 e=0 z=0  None .rodata    @8770 */
SECTION_RODATA u32 const lit_8770 = 0x3CF5C28F;

/* 80536404-80536408 0004+00 s=0 e=0 z=0  None .rodata    @8771 */
SECTION_RODATA u32 const lit_8771 = 0x3CE6F71A;

/* 80536408-8053640C 0004+00 s=0 e=0 z=0  None .rodata    @8772 */
SECTION_RODATA u32 const lit_8772 = 0x3C35DCC6;

/* 8053640C-80536410 0004+00 s=0 e=0 z=0  None .rodata    @8773 */
SECTION_RODATA u32 const lit_8773 = 0x3F59999A;

/* 80536410-80536414 0004+00 s=0 e=0 z=0  None .rodata    @8774 */
SECTION_RODATA u32 const lit_8774 = 0x3F666666;

/* 80536414-80536418 0004+00 s=0 e=0 z=0  None .rodata    @8775 */
SECTION_RODATA u32 const lit_8775 = 0x3ED70A3D;

/* 80536418-8053641C 0004+00 s=0 e=0 z=0  None .rodata    @8776 */
SECTION_RODATA u32 const lit_8776 = 0x469C4000;

/* 8053641C-80536420 0004+00 s=0 e=0 z=0  None .rodata    @8777 */
SECTION_RODATA u32 const lit_8777 = 0x42DC0000;

/* 80536420-80536424 0004+00 s=0 e=0 z=0  None .rodata    @8778 */
SECTION_RODATA u32 const lit_8778 = 0x48435000;

/* 80536424-80536428 0004+00 s=0 e=0 z=0  None .rodata    @8779 */
SECTION_RODATA u32 const lit_8779 = 0x47C35000;

/* 80536428-80536430 0008+00 s=0 e=0 z=0  None .rodata    @8781 */
SECTION_RODATA u8 const lit_8781[8] = {
    0x43, 0x30, 0x00, 0x00, 0x80, 0x00, 0x00, 0x00,
};

/* 80536430-80536438 0008+00 s=0 e=0 z=0  None .rodata    @8782 */
SECTION_RODATA u8 const lit_8782[8] = {
    0x43, 0x30, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
};

/* 80536438-805364A2 006A+00 s=2 e=0 z=0  None .rodata    @stringBase0 */
#pragma push
#pragma force_active on
#pragma section ".dead"
SECTION_DEAD char const* const stringBase_80536438 = "F_SP127";
SECTION_DEAD char const* const stringBase_80536440 = "Mg_f_lm";
SECTION_DEAD char const* const stringBase_80536448 = "Mg_f_np";
SECTION_DEAD char const* const stringBase_80536450 = "Mg_f_cf";
SECTION_DEAD char const* const stringBase_80536458 = "Mg_f_ri";
SECTION_DEAD char const* const stringBase_80536460 = "Mg_f_ks";
SECTION_DEAD char const* const stringBase_80536468 = "Mg_f_bg";
SECTION_DEAD char const* const stringBase_80536470 = "Mg_f_bt";
SECTION_DEAD char const* const stringBase_80536478 = "Mg_f_sp";
SECTION_DEAD char const* const stringBase_80536480 = "Mg_f_bb";
SECTION_DEAD char const* const stringBase_80536488 = "Mg_f_lh";
SECTION_DEAD char const* const stringBase_80536490 = "O_gD_bott";
SECTION_DEAD char const* const stringBase_8053649A = "R_SP127";
#pragma pop

/* 805324D8-80533268 0D90+00 s=2 e=0 z=0  None .text      action__FP13mg_fish_class */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm static void action(mg_fish_class* param_0) {
    nofralloc
#include "asm/rel/d/a/d_a_mg_fish/d_a_mg_fish/action__FP13mg_fish_class.s"
}
#pragma pop

/* 80533268-80533484 021C+00 s=1 e=0 z=0  None .text      ke_control__FP13mg_fish_classP7mf_ke_s */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm static void ke_control(mg_fish_class* param_0, mf_ke_s* param_1) {
    nofralloc
#include "asm/rel/d/a/d_a_mg_fish/d_a_mg_fish/ke_control__FP13mg_fish_classP7mf_ke_s.s"
}
#pragma pop

/* 80533484-80533540 00BC+00 s=1 e=0 z=0  None .text      ke_move__FP13mg_fish_classP7mf_ke_si */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm static void ke_move(mg_fish_class* param_0, mf_ke_s* param_1, int param_2) {
    nofralloc
#include "asm/rel/d/a/d_a_mg_fish/d_a_mg_fish/ke_move__FP13mg_fish_classP7mf_ke_si.s"
}
#pragma pop

/* 80533540-80534964 1424+00 s=2 e=0 z=0  None .text      daMg_Fish_Execute__FP13mg_fish_class */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm static void daMg_Fish_Execute(mg_fish_class* param_0) {
    nofralloc
#include "asm/rel/d/a/d_a_mg_fish/d_a_mg_fish/daMg_Fish_Execute__FP13mg_fish_class.s"
}
#pragma pop

/* 80534964-8053496C 0008+00 s=1 e=0 z=0  None .text      daMg_Fish_IsDelete__FP13mg_fish_class */
static bool daMg_Fish_IsDelete(mg_fish_class* param_0) {
    return true;
}

/* 8053496C-805349DC 0070+00 s=1 e=0 z=0  None .text      daMg_Fish_Delete__FP13mg_fish_class */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm static void daMg_Fish_Delete(mg_fish_class* param_0) {
    nofralloc
#include "asm/rel/d/a/d_a_mg_fish/d_a_mg_fish/daMg_Fish_Delete__FP13mg_fish_class.s"
}
#pragma pop

/* 805349DC-80534E90 04B4+00 s=1 e=0 z=0  None .text      useHeapInit2__FP10fopAc_ac_c */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm static void useHeapInit2(fopAc_ac_c* param_0) {
    nofralloc
#include "asm/rel/d/a/d_a_mg_fish/d_a_mg_fish/useHeapInit2__FP10fopAc_ac_c.s"
}
#pragma pop

/* 80534E90-80534ED8 0048+00 s=1 e=0 z=0  None .text      __dt__12J3DFrameCtrlFv */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm J3DFrameCtrl::~J3DFrameCtrl() {
    nofralloc
#include "asm/rel/d/a/d_a_mg_fish/d_a_mg_fish/__dt__12J3DFrameCtrlFv.s"
}
#pragma pop

/* 80534ED8-80535138 0260+00 s=1 e=0 z=0  None .text      useHeapImg_fisht__FP10fopAc_ac_c */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm static void useHeapImg_fisht(fopAc_ac_c* param_0) {
    nofralloc
#include "asm/rel/d/a/d_a_mg_fish/d_a_mg_fish/useHeapImg_fisht__FP10fopAc_ac_c.s"
}
#pragma pop

/* 80535138-80535DA8 0C70+00 s=1 e=0 z=0  None .text      daMg_Fish_Create__FP10fopAc_ac_c */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm static void daMg_Fish_Create(fopAc_ac_c* param_0) {
    nofralloc
#include "asm/rel/d/a/d_a_mg_fish/d_a_mg_fish/daMg_Fish_Create__FP10fopAc_ac_c.s"
}
#pragma pop

/* 80535DA8-80535DF0 0048+00 s=1 e=0 z=0  None .text      __dt__8cM3dGCylFv */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm cM3dGCyl::~cM3dGCyl() {
    nofralloc
#include "asm/rel/d/a/d_a_mg_fish/d_a_mg_fish/__dt__8cM3dGCylFv.s"
}
#pragma pop

/* 80535DF0-80535E38 0048+00 s=1 e=0 z=0  None .text      __dt__8cM3dGAabFv */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm cM3dGAab::~cM3dGAab() {
    nofralloc
#include "asm/rel/d/a/d_a_mg_fish/d_a_mg_fish/__dt__8cM3dGAabFv.s"
}
#pragma pop

/* 80535E38-80535E94 005C+00 s=1 e=0 z=0  None .text      __dt__10dCcD_GSttsFv */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm dCcD_GStts::~dCcD_GStts() {
    nofralloc
#include "asm/rel/d/a/d_a_mg_fish/d_a_mg_fish/__dt__10dCcD_GSttsFv.s"
}
#pragma pop

/* 80535E94-80535F04 0070+00 s=3 e=0 z=0  None .text      __dt__12dBgS_ObjAcchFv */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm dBgS_ObjAcch::~dBgS_ObjAcch() {
    nofralloc
#include "asm/rel/d/a/d_a_mg_fish/d_a_mg_fish/__dt__12dBgS_ObjAcchFv.s"
}
#pragma pop

/* 80535F04-80535F74 0070+00 s=1 e=0 z=0  None .text      __dt__12dBgS_AcchCirFv */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm dBgS_AcchCir::~dBgS_AcchCir() {
    nofralloc
#include "asm/rel/d/a/d_a_mg_fish/d_a_mg_fish/__dt__12dBgS_AcchCirFv.s"
}
#pragma pop

/* 80535F74-80535FD4 0060+00 s=1 e=0 z=0  None .text      __dt__7mf_ke_sFv */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm mf_ke_s::~mf_ke_s() {
    nofralloc
#include "asm/rel/d/a/d_a_mg_fish/d_a_mg_fish/__dt__7mf_ke_sFv.s"
}
#pragma pop

/* 80535FD4-8053601C 0048+00 s=1 e=0 z=0  None .text      __ct__7mf_ke_sFv */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm mf_ke_s::mf_ke_s() {
    nofralloc
#include "asm/rel/d/a/d_a_mg_fish/d_a_mg_fish/__ct__7mf_ke_sFv.s"
}
#pragma pop

/* 8053601C-80536058 003C+00 s=1 e=0 z=0  None .text      __dt__5csXyzFv */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm csXyz::~csXyz() {
    nofralloc
#include "asm/rel/d/a/d_a_mg_fish/d_a_mg_fish/__dt__5csXyzFv.s"
}
#pragma pop

/* 80536058-8053605C 0004+00 s=1 e=0 z=0  None .text      __ct__5csXyzFv */
csXyz::csXyz() {
    /* empty function */
}

/* 8053605C-80536060 0004+00 s=2 e=0 z=0  None .text      __ct__4cXyzFv */
cXyz::cXyz() {
    /* empty function */
}

/* 80536060-805360A8 0048+00 s=1 e=0 z=0  None .text      __dt__10cCcD_GSttsFv */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm cCcD_GStts::~cCcD_GStts() {
    nofralloc
#include "asm/rel/d/a/d_a_mg_fish/d_a_mg_fish/__dt__10cCcD_GSttsFv.s"
}
#pragma pop

/* 805360A8-805360F0 0048+00 s=2 e=0 z=0  None .text      __dt__15daMg_Fish_HIO_cFv */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm daMg_Fish_HIO_c::~daMg_Fish_HIO_c() {
    nofralloc
#include "asm/rel/d/a/d_a_mg_fish/d_a_mg_fish/__dt__15daMg_Fish_HIO_cFv.s"
}
#pragma pop

/* 805360F0-8053612C 003C+00 s=0 e=1 z=0  None .text      __sinit_d_a_mg_fish_cpp */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
extern "C" asm void __sinit_d_a_mg_fish_cpp() {
    nofralloc
#include "asm/rel/d/a/d_a_mg_fish/d_a_mg_fish/__sinit_d_a_mg_fish_cpp.s"
}
#pragma pop

/* 8053612C-80536134 0008+00 s=1 e=0 z=0  None .text      @20@__dt__14dBgS_ObjGndChkFv */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
extern "C" asm static void func_8053612C() {
    nofralloc
#include "asm/rel/d/a/d_a_mg_fish/d_a_mg_fish/func_8053612C.s"
}
#pragma pop

/* 80536134-8053613C 0008+00 s=1 e=0 z=0  None .text      @76@__dt__14dBgS_ObjGndChkFv */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
extern "C" asm static void func_80536134() {
    nofralloc
#include "asm/rel/d/a/d_a_mg_fish/d_a_mg_fish/func_80536134.s"
}
#pragma pop

/* 8053613C-80536144 0008+00 s=1 e=0 z=0  None .text      @60@__dt__14dBgS_ObjGndChkFv */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
extern "C" asm static void func_8053613C() {
    nofralloc
#include "asm/rel/d/a/d_a_mg_fish/d_a_mg_fish/func_8053613C.s"
}
#pragma pop

/* 80536144-8053614C 0008+00 s=1 e=0 z=0  None .text      @36@__dt__12dBgS_ObjAcchFv */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
extern "C" asm static void func_80536144() {
    nofralloc
#include "asm/rel/d/a/d_a_mg_fish/d_a_mg_fish/func_80536144.s"
}
#pragma pop

/* 8053614C-80536154 0008+00 s=1 e=0 z=0  None .text      @20@__dt__12dBgS_ObjAcchFv */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
extern "C" asm static void func_8053614C() {
    nofralloc
#include "asm/rel/d/a/d_a_mg_fish/d_a_mg_fish/func_8053614C.s"
}
#pragma pop

/* ############################################################################################## */
/* 80536BEC-80536BFC 000C+04 s=0 e=0 z=0  None .bss       @7455 */
u8 lit_7455[12 + 4 /* padding */];

/* 80536BFC-80536C08 000C+00 s=0 e=0 z=0  None .bss       @7458 */
u8 lit_7458[12];

/* 80536C08-80536C14 000C+00 s=0 e=0 z=0  None .bss       @7459 */
u8 lit_7459[12];

/* 80536C14-80536C20 000C+00 s=0 e=0 z=0  None .bss       @7460 */
u8 lit_7460[12];

/* 80536C20-80536C2C 000C+00 s=0 e=0 z=0  None .bss       @7461 */
u8 lit_7461[12];

/* 80536C2C-80536C38 000C+00 s=0 e=0 z=0  None .bss       @7462 */
u8 lit_7462[12];

/* 80536C38-80536C44 000C+00 s=0 e=0 z=0  None .bss       @7463 */
u8 lit_7463[12];

/* 80536C44-80536C50 000C+00 s=0 e=0 z=0  None .bss       @7464 */
u8 lit_7464[12];

/* 80536C50-80536C5C 000C+00 s=0 e=0 z=0  None .bss       @7465 */
u8 lit_7465[12];

/* 80536C5C-80536C68 000C+00 s=0 e=0 z=0  None .bss       @7466 */
u8 lit_7466[12];

/* 80536C68-80536C74 000C+00 s=0 e=0 z=0  None .bss       @7467 */
u8 lit_7467[12];

/* 80536C74-80536CF8 0084+00 s=0 e=0 z=0  None .bss       mouth_off$7454 */
u8 data_80536C74[132];

/* 80536CF8-80536CFC 0004+00 s=0 e=0 z=0  None .bss
 * sInstance__40JASGlobalInstance<19JASDefaultBankTable>        */
u8 data_80536CF8[4];

/* 80536CFC-80536D00 0004+00 s=0 e=0 z=0  None .bss
 * sInstance__35JASGlobalInstance<14JASAudioThread>             */
u8 data_80536CFC[4];

/* 80536D00-80536D04 0004+00 s=0 e=0 z=0  None .bss       sInstance__27JASGlobalInstance<7Z2SeMgr>
 */
u8 data_80536D00[4];

/* 80536D04-80536D08 0004+00 s=0 e=0 z=0  None .bss       sInstance__28JASGlobalInstance<8Z2SeqMgr>
 */
u8 data_80536D04[4];

/* 80536D08-80536D0C 0004+00 s=0 e=0 z=0  None .bss sInstance__31JASGlobalInstance<10Z2SceneMgr>
 */
u8 data_80536D08[4];

/* 80536D0C-80536D10 0004+00 s=0 e=0 z=0  None .bss sInstance__32JASGlobalInstance<11Z2StatusMgr>
 */
u8 data_80536D0C[4];

/* 80536D10-80536D14 0004+00 s=0 e=0 z=0  None .bss sInstance__31JASGlobalInstance<10Z2DebugSys>
 */
u8 data_80536D10[4];

/* 80536D14-80536D18 0004+00 s=0 e=0 z=0  None .bss
 * sInstance__36JASGlobalInstance<15JAISoundStarter>            */
u8 data_80536D14[4];

/* 80536D18-80536D1C 0004+00 s=0 e=0 z=0  None .bss
 * sInstance__35JASGlobalInstance<14Z2SoundStarter>             */
u8 data_80536D18[4];

/* 80536D1C-80536D20 0004+00 s=0 e=0 z=0  None .bss sInstance__33JASGlobalInstance<12Z2SpeechMgr2>
 */
u8 data_80536D1C[4];

/* 80536D20-80536D24 0004+00 s=0 e=0 z=0  None .bss       sInstance__28JASGlobalInstance<8JAISeMgr>
 */
u8 data_80536D20[4];

/* 80536D24-80536D28 0004+00 s=0 e=0 z=0  None .bss       sInstance__29JASGlobalInstance<9JAISeqMgr>
 */
u8 data_80536D24[4];

/* 80536D28-80536D2C 0004+00 s=0 e=0 z=0  None .bss sInstance__33JASGlobalInstance<12JAIStreamMgr>
 */
u8 data_80536D28[4];

/* 80536D2C-80536D30 0004+00 s=0 e=0 z=0  None .bss sInstance__31JASGlobalInstance<10Z2SoundMgr>
 */
u8 data_80536D2C[4];

/* 80536D30-80536D34 0004+00 s=0 e=0 z=0  None .bss sInstance__33JASGlobalInstance<12JAISoundInfo>
 */
u8 data_80536D30[4];

/* 80536D34-80536D38 0004+00 s=0 e=0 z=0  None .bss
 * sInstance__34JASGlobalInstance<13JAUSoundTable>              */
u8 data_80536D34[4];

/* 80536D38-80536D3C 0004+00 s=0 e=0 z=0  None .bss
 * sInstance__38JASGlobalInstance<17JAUSoundNameTable>          */
u8 data_80536D38[4];

/* 80536D3C-80536D40 0004+00 s=0 e=0 z=0  None .bss sInstance__33JASGlobalInstance<12JAUSoundInfo>
 */
u8 data_80536D3C[4];

/* 80536D40-80536D44 0004+00 s=0 e=0 z=0  None .bss sInstance__32JASGlobalInstance<11Z2SoundInfo>
 */
u8 data_80536D40[4];

/* 80536D44-80536D48 0004+00 s=0 e=0 z=0  None .bss
 * sInstance__34JASGlobalInstance<13Z2SoundObjMgr>              */
u8 data_80536D44[4];

/* 80536D48-80536D4C 0004+00 s=0 e=0 z=0  None .bss sInstance__31JASGlobalInstance<10Z2Audience>
 */
u8 data_80536D48[4];

/* 80536D4C-80536D50 0004+00 s=0 e=0 z=0  None .bss sInstance__32JASGlobalInstance<11Z2FxLineMgr>
 */
u8 data_80536D4C[4];

/* 80536D50-80536D54 0004+00 s=0 e=0 z=0  None .bss sInstance__31JASGlobalInstance<10Z2EnvSeMgr>
 */
u8 data_80536D50[4];

/* 80536D54-80536D58 0004+00 s=0 e=0 z=0  None .bss sInstance__32JASGlobalInstance<11Z2SpeechMgr>
 */
u8 data_80536D54[4];

/* 80536D58-80536D5C 0004+00 s=0 e=0 z=0  None .bss
 * sInstance__34JASGlobalInstance<13Z2WolfHowlMgr>              */
u8 data_80536D58[4];
