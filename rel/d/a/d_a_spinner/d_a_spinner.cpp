//
// Generated By: dol2asm
// Translation Unit: d_a_spinner
//

#include "rel/d/a/d_a_spinner/d_a_spinner.h"
#include "dol2asm.h"
#include "dolphin/types.h"

//
// Types:
//

struct Vec {};

struct cXyz {
    /* 80266B34 */ void operator-(Vec const&) const;
    /* 80266F48 */ void normalizeZP();
    /* 80267128 */ void atan2sX_Z() const;
    /* 80267150 */ void atan2sY_XZ() const;
    /* 804D1E4C */ ~cXyz();
};

struct csXyz {};

struct mDoMtx_stack_c {
    /* 8000CD64 */ void transS(cXyz const&);
    /* 8000CF44 */ void ZXYrotM(csXyz const&);
};

struct J3DAnmTransform {};

struct J3DModelData {};

struct mDoExt_bckAnm {
    /* 8000D7DC */ void init(J3DAnmTransform*, int, int, f32, s16, s16, bool);
    /* 8000D9CC */ void entry(J3DModelData*, f32);
};

struct mDoExt_baseAnm {
    /* 8000D428 */ void play();
};

struct fopAc_ac_c {
    /* 80018B64 */ fopAc_ac_c();
    /* 80018C8C */ ~fopAc_ac_c();
};

struct daSpinner_c {
    /* 804D198C */ void createHeap();
    /* 804D1A70 */ void create();
    /* 804D1FD0 */ ~daSpinner_c();
    /* 804D21E0 */ void setRoomInfo();
    /* 804D2278 */ void setMatrix();
    /* 804D2320 */ void setEffect();
    /* 804D25F4 */ void posMove();
    /* 804D3090 */ void setReflectAngle();
    /* 804D3174 */ void setWallHit(s16, u32);
    /* 804D34B0 */ void setAnm();
    /* 804D3618 */ void setNextPathNum();
    /* 804D3694 */ void getPathNextPos();
    /* 804D36F4 */ void checkLineWallHit(cXyz*, cXyz*);
    /* 804D3774 */ void checkPathMove();
    /* 804D3D60 */ void setSpreadEffect();
    /* 804D3F14 */ void clearSpreadEffect();
    /* 804D3F8C */ void execute();
    /* 804D4BB4 */ void draw();
};

struct J3DModel {};

struct daMirror_c {
    /* 8003194C */ void entry(J3DModel*);
};

struct daAlink_c {
    /* 8009D884 */ void getAlinkArcName();
    /* 8009DA60 */ void checkStageName(char const*);
    /* 8010D93C */ void getSpinnerGravity() const;
    /* 8010D94C */ void getSpinnerMaxFallSpeed() const;
    /* 8010D95C */ void getSpinnerJumpRate() const;
    /* 8010D96C */ void getSpinnerRideMoveTime();
    /* 8010D9B0 */ void getSpinnerRideSpeedF();
    /* 8010D9F4 */ void getSpinnerRideDecSpeedMax() const;
    /* 8010DA04 */ void getSpinnerRideDecSpeedMin() const;
    /* 8010DA14 */ void getSpinnerRideDecSpeedRate() const;
    /* 8010DA24 */ void getSpinnerRideRotAngleMax() const;
    /* 8010DA34 */ void getSpinnerRideRotAngleMin() const;
};

struct dVibration_c {
    /* 8006FA24 */ void StartShock(int, int, cXyz);
};

struct dKy_tevstr_c {};

struct dScnKy_env_light_c {
    /* 801A37C4 */ void settingTevStruct(int, cXyz*, dKy_tevstr_c*);
    /* 801A4DA0 */ void setLightTevColorType_MAJI(J3DModelData*, dKy_tevstr_c*);
};

struct dRes_info_c {};

struct dRes_control_c {
    /* 8003C2EC */ void getRes(char const*, s32, dRes_info_c*, int);
};

struct dPa_levelEcallBack {};

struct _GXColor {};

struct cBgS_PolyInfo {
    /* 802680B0 */ ~cBgS_PolyInfo();
};

struct dPa_control_c {
    struct level_c {
        /* 8004B918 */ void getEmitter(u32);
    };

    /* 8004C218 */ void setHitMark(u16, fopAc_ac_c*, cXyz const*, csXyz const*, cXyz const*, u32);
    /* 8004D068 */ void setPoly(u16, cBgS_PolyInfo&, cXyz const*, dKy_tevstr_c const*, csXyz const*,
                                cXyz const*, int, dPa_levelEcallBack*, s8, cXyz const*);
    /* 8004D4CC */ void set(u32, u8, u16, cXyz const*, dKy_tevstr_c const*, csXyz const*,
                            cXyz const*, u8, dPa_levelEcallBack*, s8, _GXColor const*,
                            _GXColor const*, cXyz const*, f32);
};

struct dBgS {
    /* 80074BE8 */ void GetPolyColor(cBgS_PolyInfo const&);
    /* 80074CBC */ void GetSpecialCode(cBgS_PolyInfo const&);
    /* 80074E50 */ void GetPolyAtt0(cBgS_PolyInfo const&);
    /* 80074EF0 */ void GetGroundCode(cBgS_PolyInfo const&);
    /* 80075100 */ void GetRoomId(cBgS_PolyInfo const&);
};

struct dBgS_AcchCir {
    /* 80075EAC */ dBgS_AcchCir();
    /* 80075F40 */ void SetWallR(f32);
    /* 80075F58 */ void SetWall(f32, f32);
    /* 804D1EF8 */ ~dBgS_AcchCir();
};

struct dBgS_Acch {
    /* 80075F94 */ ~dBgS_Acch();
    /* 800760A0 */ dBgS_Acch();
    /* 80076288 */ void Set(fopAc_ac_c*, int, dBgS_AcchCir*);
    /* 80076AAC */ void CrrPos(dBgS&);
};

struct dPaPo_c {
    /* 80050C9C */ void init(dBgS_Acch*, f32, f32);
    /* 80051008 */ void setEffectCenter(dKy_tevstr_c const*, cXyz const*, u32, u32, cXyz const*,
                                        csXyz const*, cXyz const*, s8, f32, f32);
};

struct cCcD_Obj {};

struct dCcMassS_Mng {
    /* 80085D98 */ void Set(cCcD_Obj*, u8);
};

struct dCcD_Stts {
    /* 80083860 */ void Init(int, int, fopAc_ac_c*);
};

struct dCcD_SrcCyl {};

struct dCcD_GStts {
    /* 80083760 */ dCcD_GStts();
    /* 804D1DF0 */ ~dCcD_GStts();
};

struct dCcD_GObjInf {
    /* 80083A28 */ dCcD_GObjInf();
    /* 800840E4 */ ~dCcD_GObjInf();
    /* 800842C0 */ void ChkAtHit();
    /* 800843A8 */ void GetAtHitGObj();
};

struct dCcD_GAtTgCoCommonBase {
    /* 80083688 */ void GetAc();
};

struct dCcD_Cyl {
    /* 800848B4 */ void Set(dCcD_SrcCyl const&);
    /* 80084908 */ void StartCAt(cXyz&);
    /* 80084954 */ void MoveCAt(cXyz&);
};

struct dBgS_PolyPassChk {
    /* 80078E98 */ void SetLink();
};

struct dBgS_LinkLinChk {
    /* 80078030 */ dBgS_LinkLinChk();
    /* 8007808C */ ~dBgS_LinkLinChk();
};

struct dBgS_LinkAcch {
    /* 804D1E88 */ ~dBgS_LinkAcch();
};

struct dBgS_LinChk {
    /* 80077D64 */ void Set(cXyz const*, cXyz const*, fopAc_ac_c const*);
};

struct camera_class {};

struct cM3dGPla {
    /* 804D3468 */ ~cM3dGPla();
};

struct cM3dGLin {
    /* 8026F31C */ void SetStartEnd(Vec const&, Vec const&);
    /* 804D3048 */ ~cM3dGLin();
};

struct cM3dGCyl {
    /* 8026F200 */ void SetR(f32);
    /* 804D1D60 */ ~cM3dGCyl();
};

struct cM3dGCir {
    /* 8026EF18 */ ~cM3dGCir();
};

struct cM3dGAab {
    /* 804D1DA8 */ ~cM3dGAab();
};

struct cCcS {
    /* 80264BA8 */ void Set(cCcD_Obj*);
};

struct cCcD_GStts {
    /* 804D4D28 */ ~cCcD_GStts();
};

struct cBgS_LinChk {};

struct cBgS {
    /* 800743B4 */ void LineCross(cBgS_LinChk*);
    /* 80074744 */ void GetTriPla(cBgS_PolyInfo const&, cM3dGPla*) const;
};

struct _GXTexObj {};

struct Z2SoundObjSimple {
    /* 802BE844 */ Z2SoundObjSimple();
};

struct Z2SoundObjBase {
    /* 802BDF48 */ ~Z2SoundObjBase();
    /* 802BDFF8 */ void deleteObject();
};

struct Z2CreatureLink {
    /* 802C4814 */ void startHitItemSE(u32, u32, Z2SoundObjBase*, f32);
};

struct JGeometry {
    template <typename A1>
    struct TVec3 {};
    /* TVec3<f32> */
    struct TVec3__template0 {};
};

struct J3DFrameCtrl {
    /* 803283FC */ void init(s16);
    /* 804D1F68 */ ~J3DFrameCtrl();
};

//
// Forward References:
//

static void daSpinner_createHeap(fopAc_ac_c*);
static void daSpinner_Create(fopAc_ac_c*);
static void daSpinner_Delete(daSpinner_c*);
static void daSpinner_Execute(daSpinner_c*);
static void daSpinner_Draw(daSpinner_c*);
extern "C" extern char const* const stringBase0;
extern "C" extern void* g_profile_SPINNER[12];
extern "C" extern u8 lit_1107[1 + 3 /* padding */];
extern "C" extern u8 lit_1105[1 + 3 /* padding */];
extern "C" extern u8 lit_1104[1 + 3 /* padding */];
extern "C" extern u8 lit_1099[1 + 3 /* padding */];
extern "C" extern u8 lit_1097[1 + 3 /* padding */];
extern "C" extern u8 lit_1095[1 + 3 /* padding */];
extern "C" extern u8 lit_1094[1 + 3 /* padding */];
extern "C" extern u8 lit_1057[1 + 3 /* padding */];
extern "C" extern u8 lit_1055[1 + 3 /* padding */];
extern "C" extern u8 lit_1053[1 + 3 /* padding */];
extern "C" extern u8 lit_1052[1 + 3 /* padding */];
extern "C" extern u8 lit_1014[1 + 3 /* padding */];
extern "C" extern u8 lit_1012[1 + 3 /* padding */];
extern "C" extern u8 lit_1010[1 + 3 /* padding */];
extern "C" extern u8 lit_1009[1 + 3 /* padding */];
extern "C" extern u8 data_804D5030[4];
extern "C" extern u8 data_804D5034[4];
extern "C" extern u8 data_804D5038[4];
extern "C" extern u8 data_804D503C[4];
extern "C" extern u8 data_804D5040[4];
extern "C" extern u8 data_804D5044[4];
extern "C" extern u8 data_804D5048[4];
extern "C" extern u8 data_804D504C[4];
extern "C" extern u8 data_804D5050[4];
extern "C" extern u8 data_804D5054[4];
extern "C" extern u8 data_804D5058[4];
extern "C" extern u8 data_804D505C[4];
extern "C" extern u8 data_804D5060[4];
extern "C" extern u8 data_804D5064[4];
extern "C" extern u8 data_804D5068[4];
extern "C" extern u8 data_804D506C[4];
extern "C" extern u8 data_804D5070[4];
extern "C" extern u8 data_804D5074[4];
extern "C" extern u8 data_804D5078[4];
extern "C" extern u8 data_804D507C[4];
extern "C" extern u8 data_804D5080[4];
extern "C" extern u8 data_804D5084[4];
extern "C" extern u8 data_804D5088[4];
extern "C" extern u8 data_804D508C[4];
extern "C" extern u8 data_804D5090[4];
extern "C" extern u8 data_804D5094[4];

extern "C" void createHeap__11daSpinner_cFv();
extern "C" static void daSpinner_createHeap__FP10fopAc_ac_c();
extern "C" void create__11daSpinner_cFv();
extern "C" void __dt__8cM3dGCylFv();
extern "C" void __dt__8cM3dGAabFv();
extern "C" void __dt__10dCcD_GSttsFv();
extern "C" void __dt__4cXyzFv();
extern "C" void __dt__13dBgS_LinkAcchFv();
extern "C" void __dt__12dBgS_AcchCirFv();
extern "C" void __dt__12J3DFrameCtrlFv();
extern "C" static void daSpinner_Create__FP10fopAc_ac_c();
extern "C" void __dt__11daSpinner_cFv();
extern "C" static void daSpinner_Delete__FP11daSpinner_c();
extern "C" void setRoomInfo__11daSpinner_cFv();
extern "C" void setMatrix__11daSpinner_cFv();
extern "C" void setEffect__11daSpinner_cFv();
extern "C" void posMove__11daSpinner_cFv();
extern "C" void __dt__8cM3dGLinFv();
extern "C" void setReflectAngle__11daSpinner_cFv();
extern "C" void setWallHit__11daSpinner_cFsUl();
extern "C" void __dt__8cM3dGPlaFv();
extern "C" void setAnm__11daSpinner_cFv();
extern "C" void setNextPathNum__11daSpinner_cFv();
extern "C" void getPathNextPos__11daSpinner_cFv();
extern "C" void checkLineWallHit__11daSpinner_cFP4cXyzP4cXyz();
extern "C" void checkPathMove__11daSpinner_cFv();
extern "C" void setSpreadEffect__11daSpinner_cFv();
extern "C" void clearSpreadEffect__11daSpinner_cFv();
extern "C" void execute__11daSpinner_cFv();
extern "C" static void daSpinner_Execute__FP11daSpinner_c();
extern "C" void draw__11daSpinner_cFv();
extern "C" static void daSpinner_Draw__FP11daSpinner_c();
extern "C" void __dt__10cCcD_GSttsFv();
extern "C" static void func_804D4D70();
extern "C" static void func_804D4D78();
extern "C" extern char const* const stringBase0;
extern "C" extern void* g_profile_SPINNER[12];
extern "C" extern u8 lit_1107[1 + 3 /* padding */];
extern "C" extern u8 lit_1105[1 + 3 /* padding */];
extern "C" extern u8 lit_1104[1 + 3 /* padding */];
extern "C" extern u8 lit_1099[1 + 3 /* padding */];
extern "C" extern u8 lit_1097[1 + 3 /* padding */];
extern "C" extern u8 lit_1095[1 + 3 /* padding */];
extern "C" extern u8 lit_1094[1 + 3 /* padding */];
extern "C" extern u8 lit_1057[1 + 3 /* padding */];
extern "C" extern u8 lit_1055[1 + 3 /* padding */];
extern "C" extern u8 lit_1053[1 + 3 /* padding */];
extern "C" extern u8 lit_1052[1 + 3 /* padding */];
extern "C" extern u8 lit_1014[1 + 3 /* padding */];
extern "C" extern u8 lit_1012[1 + 3 /* padding */];
extern "C" extern u8 lit_1010[1 + 3 /* padding */];
extern "C" extern u8 lit_1009[1 + 3 /* padding */];
extern "C" extern u8 data_804D5030[4];
extern "C" extern u8 data_804D5034[4];
extern "C" extern u8 data_804D5038[4];
extern "C" extern u8 data_804D503C[4];
extern "C" extern u8 data_804D5040[4];
extern "C" extern u8 data_804D5044[4];
extern "C" extern u8 data_804D5048[4];
extern "C" extern u8 data_804D504C[4];
extern "C" extern u8 data_804D5050[4];
extern "C" extern u8 data_804D5054[4];
extern "C" extern u8 data_804D5058[4];
extern "C" extern u8 data_804D505C[4];
extern "C" extern u8 data_804D5060[4];
extern "C" extern u8 data_804D5064[4];
extern "C" extern u8 data_804D5068[4];
extern "C" extern u8 data_804D506C[4];
extern "C" extern u8 data_804D5070[4];
extern "C" extern u8 data_804D5074[4];
extern "C" extern u8 data_804D5078[4];
extern "C" extern u8 data_804D507C[4];
extern "C" extern u8 data_804D5080[4];
extern "C" extern u8 data_804D5084[4];
extern "C" extern u8 data_804D5088[4];
extern "C" extern u8 data_804D508C[4];
extern "C" extern u8 data_804D5090[4];
extern "C" extern u8 data_804D5094[4];

//
// External References:
//

void mDoMtx_XrotM(f32 (*)[4], s16);
void mDoMtx_YrotM(f32 (*)[4], s16);
void mDoExt_modelEntryDL(J3DModel*);
void mDoExt_J3DModel__create(J3DModelData*, u32, u32);
void fopAcM_setStageLayer(void*);
void fopAcM_delete(fopAc_ac_c*);
void fopAcM_entrySolidHeap(fopAc_ac_c*, int (*)(fopAc_ac_c*), u32);
void fopAcM_getPolygonAngle(cBgS_PolyInfo const&, s16);
void dComIfGp_getReverb(int);
void dComIfGs_isZoneSwitch(int, int);
void dComIfGd_setShadow(u32, s8, J3DModel*, cXyz*, f32, f32, f32, f32, cBgS_PolyInfo&,
                        dKy_tevstr_c*, s16, f32, _GXTexObj*);
void dComIfG_getTrigA(u32);
void dBgS_CheckBWallPoly(cBgS_PolyInfo const&);
void dCam_getControledAngleY(camera_class*);
void dKy_pol_sound_get(cBgS_PolyInfo const*);
void cM_atan2s(f32, f32);
void cM_rndF(f32);
void cM3d_Len3dSqPntAndSegLine(cM3dGLin const*, Vec const*, Vec*, f32*);
void cLib_addCalc(f32*, f32, f32, f32, f32);
void cLib_addCalcAngleS(s16*, s16, s16, s16, s16);
void cLib_chaseF(f32*, f32, f32);
void cLib_chasePosXZ(cXyz*, cXyz const&, f32);
void cLib_targetAngleY(Vec const*, Vec const*);
void cLib_distanceAngleS(s16, s16);
void JPASetRMtxTVecfromMtx(f32 const (*)[4], f32 (*)[4], JGeometry::TVec3__template0*);
void operator delete(void*);
extern "C" extern void* g_fopAc_Method[8];
extern "C" extern void* g_fpcLf_Method[5 + 1 /* padding */];
extern "C" extern void* __vt__8dCcD_Cyl[36];
extern "C" extern void* __vt__9dCcD_Stts[11];
extern "C" extern void* __vt__12cCcD_CylAttr[25];
extern "C" extern void* __vt__14cCcD_ShapeAttr[22];
extern "C" extern void* __vt__9cCcD_Stts[8];
extern "C" extern void* __vt__16Z2SoundObjSimple[8];
extern "C" extern u8 m_cpadInfo__8mDoCPd_c[256];
extern "C" extern u8 now__14mDoMtx_stack_c[48];
extern "C" extern u8 g_dComIfG_gameInfo[122384];
extern "C" extern u8 mSimpleTexObj__21dDlst_shadowControl_c[32];
extern "C" extern u8 g_env_light[4880];
extern "C" extern u8 sincosTable___5JMath[65536];
extern "C" extern u32 __float_nan;
extern "C" extern u8 struct_80450D64[4];

extern "C" void mDoMtx_XrotM__FPA4_fs();
extern "C" void mDoMtx_YrotM__FPA4_fs();
extern "C" void transS__14mDoMtx_stack_cFRC4cXyz();
extern "C" void ZXYrotM__14mDoMtx_stack_cFRC5csXyz();
extern "C" void play__14mDoExt_baseAnmFv();
extern "C" void init__13mDoExt_bckAnmFP15J3DAnmTransformiifssb();
extern "C" void entry__13mDoExt_bckAnmFP12J3DModelDataf();
extern "C" void mDoExt_modelEntryDL__FP8J3DModel();
extern "C" void mDoExt_J3DModel__create__FP12J3DModelDataUlUl();
extern "C" void __ct__10fopAc_ac_cFv();
extern "C" void __dt__10fopAc_ac_cFv();
extern "C" void fopAcM_setStageLayer__FPv();
extern "C" void fopAcM_delete__FP10fopAc_ac_c();
extern "C" void fopAcM_entrySolidHeap__FP10fopAc_ac_cPFP10fopAc_ac_c_iUl();
extern "C" void fopAcM_getPolygonAngle__FRC13cBgS_PolyInfos();
extern "C" void dComIfGp_getReverb__Fi();
extern "C" void dComIfGs_isZoneSwitch__Fii();
extern "C" void
dComIfGd_setShadow__FUlScP8J3DModelP4cXyzffffR13cBgS_PolyInfoP12dKy_tevstr_csfP9_GXTexObj();
extern "C" void dComIfG_getTrigA__FUl();
extern "C" void entry__10daMirror_cFP8J3DModel();
extern "C" void getRes__14dRes_control_cFPCclP11dRes_info_ci();
extern "C" void getEmitter__Q213dPa_control_c7level_cFUl();
extern "C" void setHitMark__13dPa_control_cFUsP10fopAc_ac_cPC4cXyzPC5csXyzPC4cXyzUl();
extern "C" void
setPoly__13dPa_control_cFUsR13cBgS_PolyInfoPC4cXyzPC12dKy_tevstr_cPC5csXyzPC4cXyziP18dPa_levelEcallBackScPC4cXyz();
extern "C" void
set__13dPa_control_cFUlUcUsPC4cXyzPC12dKy_tevstr_cPC5csXyzPC4cXyzUcP18dPa_levelEcallBackScPC8_GXColorPC8_GXColorPC4cXyzf();
extern "C" void init__7dPaPo_cFP9dBgS_Acchff();
extern "C" void setEffectCenter__7dPaPo_cFPC12dKy_tevstr_cPC4cXyzUlUlPC4cXyzPC5csXyzPC4cXyzScff();
extern "C" void StartShock__12dVibration_cFii4cXyz();
extern "C" void LineCross__4cBgSFP11cBgS_LinChk();
extern "C" void GetTriPla__4cBgSCFRC13cBgS_PolyInfoP8cM3dGPla();
extern "C" void GetPolyColor__4dBgSFRC13cBgS_PolyInfo();
extern "C" void GetSpecialCode__4dBgSFRC13cBgS_PolyInfo();
extern "C" void GetPolyAtt0__4dBgSFRC13cBgS_PolyInfo();
extern "C" void GetGroundCode__4dBgSFRC13cBgS_PolyInfo();
extern "C" void GetRoomId__4dBgSFRC13cBgS_PolyInfo();
extern "C" void dBgS_CheckBWallPoly__FRC13cBgS_PolyInfo();
extern "C" void __ct__12dBgS_AcchCirFv();
extern "C" void SetWallR__12dBgS_AcchCirFf();
extern "C" void SetWall__12dBgS_AcchCirFff();
extern "C" void __dt__9dBgS_AcchFv();
extern "C" void __ct__9dBgS_AcchFv();
extern "C" void Set__9dBgS_AcchFP10fopAc_ac_ciP12dBgS_AcchCir();
extern "C" void CrrPos__9dBgS_AcchFR4dBgS();
extern "C" void Set__11dBgS_LinChkFPC4cXyzPC4cXyzPC10fopAc_ac_c();
extern "C" void __ct__15dBgS_LinkLinChkFv();
extern "C" void __dt__15dBgS_LinkLinChkFv();
extern "C" void SetLink__16dBgS_PolyPassChkFv();
extern "C" void GetAc__22dCcD_GAtTgCoCommonBaseFv();
extern "C" void __ct__10dCcD_GSttsFv();
extern "C" void Init__9dCcD_SttsFiiP10fopAc_ac_c();
extern "C" void __ct__12dCcD_GObjInfFv();
extern "C" void __dt__12dCcD_GObjInfFv();
extern "C" void ChkAtHit__12dCcD_GObjInfFv();
extern "C" void GetAtHitGObj__12dCcD_GObjInfFv();
extern "C" void Set__8dCcD_CylFRC11dCcD_SrcCyl();
extern "C" void StartCAt__8dCcD_CylFR4cXyz();
extern "C" void MoveCAt__8dCcD_CylFR4cXyz();
extern "C" void Set__12dCcMassS_MngFP8cCcD_ObjUc();
extern "C" void getAlinkArcName__9daAlink_cFv();
extern "C" void checkStageName__9daAlink_cFPCc();
extern "C" void getSpinnerGravity__9daAlink_cCFv();
extern "C" void getSpinnerMaxFallSpeed__9daAlink_cCFv();
extern "C" void getSpinnerJumpRate__9daAlink_cCFv();
extern "C" void getSpinnerRideMoveTime__9daAlink_cFv();
extern "C" void getSpinnerRideSpeedF__9daAlink_cFv();
extern "C" void getSpinnerRideDecSpeedMax__9daAlink_cCFv();
extern "C" void getSpinnerRideDecSpeedMin__9daAlink_cCFv();
extern "C" void getSpinnerRideDecSpeedRate__9daAlink_cCFv();
extern "C" void getSpinnerRideRotAngleMax__9daAlink_cCFv();
extern "C" void getSpinnerRideRotAngleMin__9daAlink_cCFv();
extern "C" void dCam_getControledAngleY__FP12camera_class();
extern "C" void settingTevStruct__18dScnKy_env_light_cFiP4cXyzP12dKy_tevstr_c();
extern "C" void setLightTevColorType_MAJI__18dScnKy_env_light_cFP12J3DModelDataP12dKy_tevstr_c();
extern "C" void dKy_pol_sound_get__FPC13cBgS_PolyInfo();
extern "C" void Set__4cCcSFP8cCcD_Obj();
extern "C" void __mi__4cXyzCFRC3Vec();
extern "C" void normalizeZP__4cXyzFv();
extern "C" void atan2sX_Z__4cXyzCFv();
extern "C" void atan2sY_XZ__4cXyzCFv();
extern "C" void cM_atan2s__Fff();
extern "C" void cM_rndF__Ff();
extern "C" void __dt__13cBgS_PolyInfoFv();
extern "C" void cM3d_Len3dSqPntAndSegLine__FPC8cM3dGLinPC3VecP3VecPf();
extern "C" void __dt__8cM3dGCirFv();
extern "C" void SetR__8cM3dGCylFf();
extern "C" void SetStartEnd__8cM3dGLinFRC3VecRC3Vec();
extern "C" void cLib_addCalc__FPfffff();
extern "C" void cLib_addCalcAngleS__FPsssss();
extern "C" void cLib_chaseF__FPfff();
extern "C" void cLib_chasePosXZ__FP4cXyzRC4cXyzf();
extern "C" void cLib_targetAngleY__FPC3VecPC3Vec();
extern "C" void cLib_distanceAngleS__Fss();
extern "C" void func_802807E0();
extern "C" void __dt__14Z2SoundObjBaseFv();
extern "C" void deleteObject__14Z2SoundObjBaseFv();
extern "C" void __ct__16Z2SoundObjSimpleFv();
extern "C" void startHitItemSE__14Z2CreatureLinkFUlUlP14Z2SoundObjBasef();
extern "C" void __dl__FPv();
extern "C" void init__12J3DFrameCtrlFs();
extern "C" void PSMTXCopy();
extern "C" void PSMTXTrans();
extern "C" void PSMTXMultVec();
extern "C" void PSVECAdd();
extern "C" void PSVECScale();
extern "C" void PSVECSquareMag();
extern "C" void PSVECSquareDistance();
extern "C" void __destroy_arr();
extern "C" void __construct_array();
extern "C" void _savegpr_21();
extern "C" void _savegpr_24();
extern "C" void _savegpr_25();
extern "C" void _savegpr_26();
extern "C" void _savegpr_28();
extern "C" void _savegpr_29();
extern "C" void _restgpr_21();
extern "C" void _restgpr_24();
extern "C" void _restgpr_25();
extern "C" void _restgpr_26();
extern "C" void _restgpr_28();
extern "C" void _restgpr_29();
extern "C" void abs();
extern "C" extern void* g_fopAc_Method[8];
extern "C" extern void* g_fpcLf_Method[5 + 1 /* padding */];
extern "C" extern void* __vt__8dCcD_Cyl[36];
extern "C" extern void* __vt__9dCcD_Stts[11];
extern "C" extern void* __vt__12cCcD_CylAttr[25];
extern "C" extern void* __vt__14cCcD_ShapeAttr[22];
extern "C" extern void* __vt__9cCcD_Stts[8];
extern "C" extern void* __vt__16Z2SoundObjSimple[8];
extern "C" extern u8 m_cpadInfo__8mDoCPd_c[256];
extern "C" extern u8 now__14mDoMtx_stack_c[48];
extern "C" extern u8 g_dComIfG_gameInfo[122384];
extern "C" extern u8 mSimpleTexObj__21dDlst_shadowControl_c[32];
extern "C" extern u8 g_env_light[4880];
extern "C" extern u8 sincosTable___5JMath[65536];
extern "C" extern u32 __float_nan;
extern "C" extern u8 struct_80450D64[4];
extern "C" void __register_global_object();

//
// Declarations:
//

/* ############################################################################################## */
/* 804D4D90-804D4D9C 000C+00 s=9 e=0 z=0  None .rodata    @3768 */
SECTION_RODATA static u8 const lit_3768[12] = {
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
};

/* 804D4D9C-804D4DA0 0004+00 s=8 e=0 z=0  None .rodata    @4168 */
SECTION_RODATA static u32 const lit_4168 = 0x3F800000;

/* 804D198C-804D1A50 00C4+00 s=1 e=0 z=0  None .text      createHeap__11daSpinner_cFv */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void daSpinner_c::createHeap() {
    nofralloc
#include "asm/rel/d/a/d_a_spinner/d_a_spinner/createHeap__11daSpinner_cFv.s"
}
#pragma pop

/* 804D1A50-804D1A70 0020+00 s=1 e=0 z=0  None .text      daSpinner_createHeap__FP10fopAc_ac_c */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm static void daSpinner_createHeap(fopAc_ac_c* param_0) {
    nofralloc
#include "asm/rel/d/a/d_a_spinner/d_a_spinner/daSpinner_createHeap__FP10fopAc_ac_c.s"
}
#pragma pop

/* ############################################################################################## */
/* 804D4DA0-804D4DA4 0004+00 s=1 e=0 z=0  None .rodata    @4241 */
SECTION_RODATA static u32 const lit_4241 = 0x461C4000;

/* 804D4DA4-804D4DA8 0004+00 s=1 e=0 z=0  None .rodata    @4242 */
SECTION_RODATA static u32 const lit_4242 = 0x42480A3D;

/* 804D4DA8-804D4DAC 0004+00 s=4 e=0 z=0  None .rodata    @4243 */
SECTION_RODATA static u32 const lit_4243 = 0x42680000;

/* 804D4DAC-804D4DB0 0004+00 s=1 e=0 z=0  None .rodata    @4244 */
SECTION_RODATA static u32 const lit_4244 = 0x4301FD71;

/* 804D4DB0-804D4DB4 0004+00 s=1 e=0 z=0  None .rodata    @4245 */
SECTION_RODATA static u32 const lit_4245 = 0x420C0000;

/* 804D4DB4-804D4DB8 0004+00 s=1 e=0 z=0  None .rodata    @4246 */
SECTION_RODATA static u32 const lit_4246 = 0x42AA0000;

/* 804D4DB8-804D4DC0 0004+04 s=9 e=0 z=0  None .rodata    @4247 */
SECTION_RODATA static u8 const lit_4247[4 + 4 /* padding */] = {
    0x00,
    0x00,
    0x00,
    0x00,
    /* padding */
    0x00,
    0x00,
    0x00,
    0x00,
};

/* 804D4DC0-804D4DC8 0008+00 s=2 e=0 z=0  None .rodata    @4249 */
SECTION_RODATA static u8 const lit_4249[8] = {
    0x43, 0x30, 0x00, 0x00, 0x80, 0x00, 0x00, 0x00,
};

/* 804D4EA8-804D4EEC 0044+00 s=1 e=0 z=0  None .data      l_cylSrc */
SECTION_DATA static u8 l_cylSrc[68] = {
    0x00, 0x00, 0x00, 0x00, 0x00, 0x08, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00,
    0x00, 0x12, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x69,
    0x13, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
    0x00, 0x00, 0x00, 0x00, 0x42, 0x20, 0x00, 0x00, 0x42, 0xAA, 0x00, 0x00,
};

/* 804D4EEC-804D4F0C 0020+00 s=1 e=0 z=0  None .data      l_daSpinner_Method */
SECTION_DATA static void* l_daSpinner_Method[8] = {
    (void*)daSpinner_Create__FP10fopAc_ac_c,
    (void*)daSpinner_Delete__FP11daSpinner_c,
    (void*)daSpinner_Execute__FP11daSpinner_c,
    (void*)NULL,
    (void*)daSpinner_Draw__FP11daSpinner_c,
    (void*)NULL,
    (void*)NULL,
    (void*)NULL,
};

/* 804D4F0C-804D4F3C 0030+00 s=0 e=0 z=1  None .data      g_profile_SPINNER */
SECTION_DATA void* g_profile_SPINNER[12] = {
    (void*)0xFFFFFFFD, (void*)0x0004FFFD,
    (void*)0x00F20000, (void*)&g_fpcLf_Method,
    (void*)0x00000ABC, (void*)NULL,
    (void*)NULL,       (void*)&g_fopAc_Method,
    (void*)0x02AF0000, (void*)&l_daSpinner_Method,
    (void*)0x00060000, (void*)0x05000000,
};

/* 804D4F3C-804D4F48 000C+00 s=4 e=0 z=0  None .data      __vt__8cM3dGPla */
SECTION_DATA static void* __vt__8cM3dGPla[3] = {
    (void*)NULL,
    (void*)NULL,
    (void*)__dt__8cM3dGPlaFv,
};

/* 804D4F48-804D4F54 000C+00 s=2 e=0 z=0  None .data      __vt__8cM3dGLin */
SECTION_DATA static void* __vt__8cM3dGLin[3] = {
    (void*)NULL,
    (void*)NULL,
    (void*)__dt__8cM3dGLinFv,
};

/* 804D4F54-804D4F60 000C+00 s=1 e=0 z=0  None .data      __vt__12dBgS_AcchCir */
SECTION_DATA static void* __vt__12dBgS_AcchCir[3] = {
    (void*)NULL,
    (void*)NULL,
    (void*)__dt__12dBgS_AcchCirFv,
};

/* 804D4F60-804D4F6C 000C+00 s=3 e=0 z=0  None .data      __vt__10cCcD_GStts */
SECTION_DATA static void* __vt__10cCcD_GStts[3] = {
    (void*)NULL,
    (void*)NULL,
    (void*)__dt__10cCcD_GSttsFv,
};

/* 804D4F6C-804D4F78 000C+00 s=2 e=0 z=0  None .data      __vt__10dCcD_GStts */
SECTION_DATA static void* __vt__10dCcD_GStts[3] = {
    (void*)NULL,
    (void*)NULL,
    (void*)__dt__10dCcD_GSttsFv,
};

/* 804D4F78-804D4F84 000C+00 s=3 e=0 z=0  None .data      __vt__8cM3dGCyl */
SECTION_DATA static void* __vt__8cM3dGCyl[3] = {
    (void*)NULL,
    (void*)NULL,
    (void*)__dt__8cM3dGCylFv,
};

/* 804D4F84-804D4F90 000C+00 s=3 e=0 z=0  None .data      __vt__8cM3dGAab */
SECTION_DATA static void* __vt__8cM3dGAab[3] = {
    (void*)NULL,
    (void*)NULL,
    (void*)__dt__8cM3dGAabFv,
};

/* 804D4F90-804D4FB4 0024+00 s=3 e=0 z=0  None .data      __vt__13dBgS_LinkAcch */
SECTION_DATA static void* __vt__13dBgS_LinkAcch[9] = {
    (void*)NULL, (void*)NULL, (void*)__dt__13dBgS_LinkAcchFv,
    (void*)NULL, (void*)NULL, (void*)func_804D4D78,
    (void*)NULL, (void*)NULL, (void*)func_804D4D70,
};

/* 804D4FB4-804D4FC0 000C+00 s=3 e=0 z=0  None .data      __vt__12J3DFrameCtrl */
SECTION_DATA static void* __vt__12J3DFrameCtrl[3] = {
    (void*)NULL,
    (void*)NULL,
    (void*)__dt__12J3DFrameCtrlFv,
};

/* 804D1A70-804D1D60 02F0+00 s=1 e=0 z=0  None .text      create__11daSpinner_cFv */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void daSpinner_c::create() {
    nofralloc
#include "asm/rel/d/a/d_a_spinner/d_a_spinner/create__11daSpinner_cFv.s"
}
#pragma pop

/* 804D1D60-804D1DA8 0048+00 s=1 e=0 z=0  None .text      __dt__8cM3dGCylFv */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm cM3dGCyl::~cM3dGCyl() {
    nofralloc
#include "asm/rel/d/a/d_a_spinner/d_a_spinner/__dt__8cM3dGCylFv.s"
}
#pragma pop

/* 804D1DA8-804D1DF0 0048+00 s=1 e=0 z=0  None .text      __dt__8cM3dGAabFv */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm cM3dGAab::~cM3dGAab() {
    nofralloc
#include "asm/rel/d/a/d_a_spinner/d_a_spinner/__dt__8cM3dGAabFv.s"
}
#pragma pop

/* 804D1DF0-804D1E4C 005C+00 s=1 e=0 z=0  None .text      __dt__10dCcD_GSttsFv */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm dCcD_GStts::~dCcD_GStts() {
    nofralloc
#include "asm/rel/d/a/d_a_spinner/d_a_spinner/__dt__10dCcD_GSttsFv.s"
}
#pragma pop

/* 804D1E4C-804D1E88 003C+00 s=1 e=0 z=0  None .text      __dt__4cXyzFv */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm cXyz::~cXyz() {
    nofralloc
#include "asm/rel/d/a/d_a_spinner/d_a_spinner/__dt__4cXyzFv.s"
}
#pragma pop

/* 804D1E88-804D1EF8 0070+00 s=3 e=0 z=0  None .text      __dt__13dBgS_LinkAcchFv */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm dBgS_LinkAcch::~dBgS_LinkAcch() {
    nofralloc
#include "asm/rel/d/a/d_a_spinner/d_a_spinner/__dt__13dBgS_LinkAcchFv.s"
}
#pragma pop

/* 804D1EF8-804D1F68 0070+00 s=3 e=0 z=0  None .text      __dt__12dBgS_AcchCirFv */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm dBgS_AcchCir::~dBgS_AcchCir() {
    nofralloc
#include "asm/rel/d/a/d_a_spinner/d_a_spinner/__dt__12dBgS_AcchCirFv.s"
}
#pragma pop

/* 804D1F68-804D1FB0 0048+00 s=1 e=0 z=0  None .text      __dt__12J3DFrameCtrlFv */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm J3DFrameCtrl::~J3DFrameCtrl() {
    nofralloc
#include "asm/rel/d/a/d_a_spinner/d_a_spinner/__dt__12J3DFrameCtrlFv.s"
}
#pragma pop

/* 804D1FB0-804D1FD0 0020+00 s=1 e=0 z=0  None .text      daSpinner_Create__FP10fopAc_ac_c */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm static void daSpinner_Create(fopAc_ac_c* param_0) {
    nofralloc
#include "asm/rel/d/a/d_a_spinner/d_a_spinner/daSpinner_Create__FP10fopAc_ac_c.s"
}
#pragma pop

/* 804D1FD0-804D21B8 01E8+00 s=1 e=0 z=0  None .text      __dt__11daSpinner_cFv */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm daSpinner_c::~daSpinner_c() {
    nofralloc
#include "asm/rel/d/a/d_a_spinner/d_a_spinner/__dt__11daSpinner_cFv.s"
}
#pragma pop

/* 804D21B8-804D21E0 0028+00 s=1 e=0 z=0  None .text      daSpinner_Delete__FP11daSpinner_c */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm static void daSpinner_Delete(daSpinner_c* param_0) {
    nofralloc
#include "asm/rel/d/a/d_a_spinner/d_a_spinner/daSpinner_Delete__FP11daSpinner_c.s"
}
#pragma pop

/* ############################################################################################## */
/* 804D4DC8-804D4DCC 0004+00 s=1 e=0 z=0  None .rodata    @4409 */
SECTION_RODATA static u32 const lit_4409 = 0xCE6E6B28;

/* 804D21E0-804D2278 0098+00 s=2 e=0 z=0  None .text      setRoomInfo__11daSpinner_cFv */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void daSpinner_c::setRoomInfo() {
    nofralloc
#include "asm/rel/d/a/d_a_spinner/d_a_spinner/setRoomInfo__11daSpinner_cFv.s"
}
#pragma pop

/* ############################################################################################## */
/* 804D4DCC-804D4DD0 0004+00 s=1 e=0 z=0  None .rodata    @4429 */
SECTION_RODATA static u32 const lit_4429 = 0x42B40000;

/* 804D2278-804D2320 00A8+00 s=2 e=0 z=0  None .text      setMatrix__11daSpinner_cFv */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void daSpinner_c::setMatrix() {
    nofralloc
#include "asm/rel/d/a/d_a_spinner/d_a_spinner/setMatrix__11daSpinner_cFv.s"
}
#pragma pop

/* ############################################################################################## */
/* 804D4DD0-804D4DD4 0004+00 s=1 e=0 z=0  None .rodata    @4591 */
SECTION_RODATA static u32 const lit_4591 = 0x3FC00000;

/* 804D4DD4-804D4DD8 0004+00 s=2 e=0 z=0  None .rodata    @4592 */
SECTION_RODATA static u32 const lit_4592 = 0x40400000;

/* 804D4DD8-804D4DDC 0004+00 s=1 e=0 z=0  None .rodata    @4593 */
SECTION_RODATA static u32 const lit_4593 = 0x40000000;

/* 804D4FC8-804D4FCC 0001+03 s=1 e=0 z=0  None .bss       @1109 */
static u8 lit_1109[1 + 3 /* padding */];

/* 804D4FCC-804D4FD0 0001+03 s=0 e=0 z=0  None .bss       @1107 */
u8 lit_1107[1 + 3 /* padding */];

/* 804D4FD0-804D4FD4 0001+03 s=0 e=0 z=0  None .bss       @1105 */
u8 lit_1105[1 + 3 /* padding */];

/* 804D4FD4-804D4FD8 0001+03 s=0 e=0 z=0  None .bss       @1104 */
u8 lit_1104[1 + 3 /* padding */];

/* 804D4FD8-804D4FDC 0001+03 s=0 e=0 z=0  None .bss       @1099 */
u8 lit_1099[1 + 3 /* padding */];

/* 804D4FDC-804D4FE0 0001+03 s=0 e=0 z=0  None .bss       @1097 */
u8 lit_1097[1 + 3 /* padding */];

/* 804D4FE0-804D4FE4 0001+03 s=0 e=0 z=0  None .bss       @1095 */
u8 lit_1095[1 + 3 /* padding */];

/* 804D4FE4-804D4FE8 0001+03 s=0 e=0 z=0  None .bss       @1094 */
u8 lit_1094[1 + 3 /* padding */];

/* 804D4FE8-804D4FEC 0001+03 s=0 e=0 z=0  None .bss       @1057 */
u8 lit_1057[1 + 3 /* padding */];

/* 804D4FEC-804D4FF0 0001+03 s=0 e=0 z=0  None .bss       @1055 */
u8 lit_1055[1 + 3 /* padding */];

/* 804D4FF0-804D4FF4 0001+03 s=0 e=0 z=0  None .bss       @1053 */
u8 lit_1053[1 + 3 /* padding */];

/* 804D4FF4-804D4FF8 0001+03 s=0 e=0 z=0  None .bss       @1052 */
u8 lit_1052[1 + 3 /* padding */];

/* 804D4FF8-804D4FFC 0001+03 s=0 e=0 z=0  None .bss       @1014 */
u8 lit_1014[1 + 3 /* padding */];

/* 804D4FFC-804D5000 0001+03 s=0 e=0 z=0  None .bss       @1012 */
u8 lit_1012[1 + 3 /* padding */];

/* 804D5000-804D5004 0001+03 s=0 e=0 z=0  None .bss       @1010 */
u8 lit_1010[1 + 3 /* padding */];

/* 804D5004-804D5008 0001+03 s=0 e=0 z=0  None .bss       @1009 */
u8 lit_1009[1 + 3 /* padding */];

/* 804D5008-804D5014 000C+00 s=1 e=0 z=0  None .bss       effDirection$4433 */
static u8 effDirection[12];

/* 804D5014-804D5024 000C+04 s=1 e=0 z=0  None .bss       @4437 */
static u8 lit_4437[12 + 4 /* padding */];

/* 804D5024-804D5030 000C+00 s=1 e=0 z=0  None .bss       particleScale$4436 */
static u8 particleScale[12];

/* 804D2320-804D25F4 02D4+00 s=1 e=0 z=0  None .text      setEffect__11daSpinner_cFv */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void daSpinner_c::setEffect() {
    nofralloc
#include "asm/rel/d/a/d_a_spinner/d_a_spinner/setEffect__11daSpinner_cFv.s"
}
#pragma pop

/* ############################################################################################## */
/* 804D4DDC-804D4DE0 0004+00 s=2 e=0 z=0  None .rodata    @4930 */
SECTION_RODATA static u32 const lit_4930 = 0xC1A00000;

/* 804D4DE0-804D4DE8 0004+04 s=1 e=0 z=0  None .rodata    @4931 */
SECTION_RODATA static u32 const lit_4931[1 + 1 /* padding */] = {
    0x4250CCCC,
    /* padding */
    0x00000000,
};

/* 804D4DE8-804D4DF0 0008+00 s=3 e=0 z=0  None .rodata    @4932 */
SECTION_RODATA static u8 const lit_4932[8] = {
    0x3F, 0xE0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
};

/* 804D4DF0-804D4DF8 0008+00 s=3 e=0 z=0  None .rodata    @4933 */
SECTION_RODATA static u8 const lit_4933[8] = {
    0x40, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
};

/* 804D4DF8-804D4E00 0008+00 s=3 e=0 z=0  None .rodata    @4934 */
SECTION_RODATA static u8 const lit_4934[8] = {
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
};

/* 804D4E00-804D4E04 0004+00 s=1 e=0 z=0  None .rodata    @4935 */
SECTION_RODATA static u32 const lit_4935 = 0x3BB6365E;

/* 804D4E04-804D4E08 0004+00 s=1 e=0 z=0  None .rodata    @4936 */
SECTION_RODATA static u32 const lit_4936 = 0x4333D588;

/* 804D4E08-804D4E0C 0004+00 s=1 e=0 z=0  None .rodata    @4937 */
SECTION_RODATA static u32 const lit_4937 = 0x41E80000;

/* 804D4E0C-804D4E10 0004+00 s=1 e=0 z=0  None .rodata    @4938 */
SECTION_RODATA static u32 const lit_4938 = 0x42480000;

/* 804D25F4-804D3048 0A54+00 s=1 e=0 z=0  None .text      posMove__11daSpinner_cFv */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void daSpinner_c::posMove() {
    nofralloc
#include "asm/rel/d/a/d_a_spinner/d_a_spinner/posMove__11daSpinner_cFv.s"
}
#pragma pop

/* 804D3048-804D3090 0048+00 s=1 e=0 z=0  None .text      __dt__8cM3dGLinFv */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm cM3dGLin::~cM3dGLin() {
    nofralloc
#include "asm/rel/d/a/d_a_spinner/d_a_spinner/__dt__8cM3dGLinFv.s"
}
#pragma pop

/* 804D3090-804D3174 00E4+00 s=3 e=0 z=0  None .text      setReflectAngle__11daSpinner_cFv */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void daSpinner_c::setReflectAngle() {
    nofralloc
#include "asm/rel/d/a/d_a_spinner/d_a_spinner/setReflectAngle__11daSpinner_cFv.s"
}
#pragma pop

/* ############################################################################################## */
/* 804D4E10-804D4E14 0004+00 s=1 e=0 z=0  None .rodata    @5053 */
SECTION_RODATA static u32 const lit_5053 = 0xBF800000;

/* 804D3174-804D3468 02F4+00 s=1 e=0 z=0  None .text      setWallHit__11daSpinner_cFsUl */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void daSpinner_c::setWallHit(s16 param_0, u32 param_1) {
    nofralloc
#include "asm/rel/d/a/d_a_spinner/d_a_spinner/setWallHit__11daSpinner_cFsUl.s"
}
#pragma pop

/* 804D3468-804D34B0 0048+00 s=1 e=0 z=0  None .text      __dt__8cM3dGPlaFv */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm cM3dGPla::~cM3dGPla() {
    nofralloc
#include "asm/rel/d/a/d_a_spinner/d_a_spinner/__dt__8cM3dGPlaFv.s"
}
#pragma pop

/* ############################################################################################## */
/* 804D4E14-804D4E18 0004+00 s=1 e=0 z=0  None .rodata    @5091 */
SECTION_RODATA static u32 const lit_5091 = 0x41A00000;

/* 804D34B0-804D3618 0168+00 s=1 e=0 z=0  None .text      setAnm__11daSpinner_cFv */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void daSpinner_c::setAnm() {
    nofralloc
#include "asm/rel/d/a/d_a_spinner/d_a_spinner/setAnm__11daSpinner_cFv.s"
}
#pragma pop

/* 804D3618-804D3694 007C+00 s=2 e=0 z=0  None .text      setNextPathNum__11daSpinner_cFv */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void daSpinner_c::setNextPathNum() {
    nofralloc
#include "asm/rel/d/a/d_a_spinner/d_a_spinner/setNextPathNum__11daSpinner_cFv.s"
}
#pragma pop

/* 804D3694-804D36F4 0060+00 s=1 e=0 z=0  None .text      getPathNextPos__11daSpinner_cFv */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void daSpinner_c::getPathNextPos() {
    nofralloc
#include "asm/rel/d/a/d_a_spinner/d_a_spinner/getPathNextPos__11daSpinner_cFv.s"
}
#pragma pop

/* ############################################################################################## */
/* 804D4E18-804D4E24 000C+00 s=1 e=0 z=0  None .rodata    sideCheckVec0$5143 */
SECTION_RODATA static u8 const sideCheckVec0[12] = {
    0x41, 0xF0, 0x00, 0x00, 0x41, 0x20, 0x00, 0x00, 0x40, 0xA0, 0x00, 0x00,
};

/* 804D4E24-804D4E30 000C+00 s=1 e=0 z=0  None .rodata    sideCheckVec1$5144 */
SECTION_RODATA static u8 const sideCheckVec1[12] = {
    0xC1, 0xF0, 0x00, 0x00, 0x41, 0x20, 0x00, 0x00, 0x40, 0xA0, 0x00, 0x00,
};

/* 804D4E30-804D4E3C 000C+00 s=1 e=0 z=0  None .rodata    initSide0$5145 */
SECTION_RODATA static u8 const initSide0[12] = {
    0x42, 0x54, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
};

/* 804D4E3C-804D4E48 000C+00 s=1 e=0 z=0  None .rodata    initSide1$5146 */
SECTION_RODATA static u8 const initSide1[12] = {
    0xC2, 0x54, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
};

/* 804D4E48-804D4E54 000C+00 s=1 e=0 z=0  None .rodata    initSideOld0$5147 */
SECTION_RODATA static u8 const initSideOld0[12] = {
    0x42, 0x9C, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
};

/* 804D4E54-804D4E60 000C+00 s=1 e=0 z=0  None .rodata    initSideOld1$5148 */
SECTION_RODATA static u8 const initSideOld1[12] = {
    0xC2, 0x9C, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
};

/* 804D4E60-804D4E68 0008+00 s=1 e=0 z=0  None .rodata    @5295 */
SECTION_RODATA static u8 const lit_5295[8] = {
    0x43, 0x30, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
};

/* 804D4E68-804D4E6C 0004+00 s=1 e=0 z=0  None .rodata    effName$5299 */
SECTION_RODATA static u8 const effName[4] = {
    0x08,
    0xC5,
    0x08,
    0xC6,
};

/* 804D4E6C-804D4E70 0004+00 s=1 e=0 z=0  None .rodata    @5361 */
SECTION_RODATA static u32 const lit_5361 = 0x41200000;

/* 804D4E70-804D4E74 0004+00 s=1 e=0 z=0  None .rodata    @5671 */
SECTION_RODATA static u32 const lit_5671 = 0x3C23D70A;

/* 804D4E74-804D4E78 0004+00 s=1 e=0 z=0  None .rodata    @5672 */
SECTION_RODATA static u32 const lit_5672 = 0x4511A000;

/* 804D4E78-804D4E7C 0004+00 s=1 e=0 z=0  None .rodata    @5673 */
SECTION_RODATA static u32 const lit_5673 = 0x3F59999A;

/* 804D4E7C-804D4E80 0004+00 s=1 e=0 z=0  None .rodata    @5674 */
SECTION_RODATA static u32 const lit_5674 = 0x3E99999A;

/* 804D4E80-804D4E84 0004+00 s=1 e=0 z=0  None .rodata    @5675 */
SECTION_RODATA static u32 const lit_5675 = 0x40A00000;

/* 804D4E84-804D4E88 0004+00 s=1 e=0 z=0  None .rodata    @5676 */
SECTION_RODATA static u32 const lit_5676 = 0x3F000000;

/* 804D4E88-804D4E8C 0004+00 s=1 e=0 z=0  None .rodata    @5677 */
SECTION_RODATA static u32 const lit_5677 = 0x3DCCCCCD;

/* 804D4E8C-804D4E90 0004+00 s=1 e=0 z=0  None .rodata    @5678 */
SECTION_RODATA static u32 const lit_5678 = 0x44FA0000;

/* 804D4E90-804D4E94 0004+00 s=1 e=0 z=0  None .rodata    @5679 */
SECTION_RODATA static u32 const lit_5679 = 0x41100000;

/* 804D4E94-804D4E98 0004+00 s=1 e=0 z=0  None .rodata    @5680 */
SECTION_RODATA static u32 const lit_5680 = 0x42C80000;

/* 804D4E98-804D4E9C 0004+00 s=1 e=0 z=0  None .rodata    @5723 */
SECTION_RODATA static u32 const lit_5723 = 0x428C0000;

/* 804D4E9C-804D4EA0 0004+00 s=1 e=0 z=0  None .rodata    @5724 */
SECTION_RODATA static u32 const lit_5724 = 0x43960000;

/* 804D4EA0-804D4EA8 0008+00 s=2 e=0 z=0  None .rodata    @stringBase0 */
#pragma push
#pragma force_active on
#pragma section ".dead"
SECTION_DEAD char const* const stringBase_804D4EA0 = "D_MN10A";
#pragma pop

/* 804D36F4-804D3774 0080+00 s=1 e=0 z=0  None .text checkLineWallHit__11daSpinner_cFP4cXyzP4cXyz
 */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void daSpinner_c::checkLineWallHit(cXyz* param_0, cXyz* param_1) {
    nofralloc
#include "asm/rel/d/a/d_a_spinner/d_a_spinner/checkLineWallHit__11daSpinner_cFP4cXyzP4cXyz.s"
}
#pragma pop

/* 804D3774-804D3D60 05EC+00 s=1 e=0 z=0  None .text      checkPathMove__11daSpinner_cFv */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void daSpinner_c::checkPathMove() {
    nofralloc
#include "asm/rel/d/a/d_a_spinner/d_a_spinner/checkPathMove__11daSpinner_cFv.s"
}
#pragma pop

/* 804D3D60-804D3F14 01B4+00 s=1 e=0 z=0  None .text      setSpreadEffect__11daSpinner_cFv */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void daSpinner_c::setSpreadEffect() {
    nofralloc
#include "asm/rel/d/a/d_a_spinner/d_a_spinner/setSpreadEffect__11daSpinner_cFv.s"
}
#pragma pop

/* 804D3F14-804D3F8C 0078+00 s=2 e=0 z=0  None .text      clearSpreadEffect__11daSpinner_cFv */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void daSpinner_c::clearSpreadEffect() {
    nofralloc
#include "asm/rel/d/a/d_a_spinner/d_a_spinner/clearSpreadEffect__11daSpinner_cFv.s"
}
#pragma pop

/* 804D3F8C-804D4B94 0C08+00 s=1 e=0 z=0  None .text      execute__11daSpinner_cFv */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void daSpinner_c::execute() {
    nofralloc
#include "asm/rel/d/a/d_a_spinner/d_a_spinner/execute__11daSpinner_cFv.s"
}
#pragma pop

/* 804D4B94-804D4BB4 0020+00 s=1 e=0 z=0  None .text      daSpinner_Execute__FP11daSpinner_c */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm static void daSpinner_Execute(daSpinner_c* param_0) {
    nofralloc
#include "asm/rel/d/a/d_a_spinner/d_a_spinner/daSpinner_Execute__FP11daSpinner_c.s"
}
#pragma pop

/* 804D4BB4-804D4D08 0154+00 s=1 e=0 z=0  None .text      draw__11daSpinner_cFv */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void daSpinner_c::draw() {
    nofralloc
#include "asm/rel/d/a/d_a_spinner/d_a_spinner/draw__11daSpinner_cFv.s"
}
#pragma pop

/* 804D4D08-804D4D28 0020+00 s=1 e=0 z=0  None .text      daSpinner_Draw__FP11daSpinner_c */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm static void daSpinner_Draw(daSpinner_c* param_0) {
    nofralloc
#include "asm/rel/d/a/d_a_spinner/d_a_spinner/daSpinner_Draw__FP11daSpinner_c.s"
}
#pragma pop

/* 804D4D28-804D4D70 0048+00 s=1 e=0 z=0  None .text      __dt__10cCcD_GSttsFv */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm cCcD_GStts::~cCcD_GStts() {
    nofralloc
#include "asm/rel/d/a/d_a_spinner/d_a_spinner/__dt__10cCcD_GSttsFv.s"
}
#pragma pop

/* 804D4D70-804D4D78 0008+00 s=1 e=0 z=0  None .text      @36@__dt__13dBgS_LinkAcchFv */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
extern "C" asm static void func_804D4D70() {
    nofralloc
#include "asm/rel/d/a/d_a_spinner/d_a_spinner/func_804D4D70.s"
}
#pragma pop

/* 804D4D78-804D4D80 0008+00 s=1 e=0 z=0  None .text      @20@__dt__13dBgS_LinkAcchFv */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
extern "C" asm static void func_804D4D78() {
    nofralloc
#include "asm/rel/d/a/d_a_spinner/d_a_spinner/func_804D4D78.s"
}
#pragma pop

/* ############################################################################################## */
/* 804D5030-804D5034 0004+00 s=0 e=0 z=0  None .bss
 * sInstance__40JASGlobalInstance<19JASDefaultBankTable>        */
u8 data_804D5030[4];

/* 804D5034-804D5038 0004+00 s=0 e=0 z=0  None .bss
 * sInstance__35JASGlobalInstance<14JASAudioThread>             */
u8 data_804D5034[4];

/* 804D5038-804D503C 0004+00 s=0 e=0 z=0  None .bss       sInstance__27JASGlobalInstance<7Z2SeMgr>
 */
u8 data_804D5038[4];

/* 804D503C-804D5040 0004+00 s=0 e=0 z=0  None .bss       sInstance__28JASGlobalInstance<8Z2SeqMgr>
 */
u8 data_804D503C[4];

/* 804D5040-804D5044 0004+00 s=0 e=0 z=0  None .bss sInstance__31JASGlobalInstance<10Z2SceneMgr>
 */
u8 data_804D5040[4];

/* 804D5044-804D5048 0004+00 s=0 e=0 z=0  None .bss sInstance__32JASGlobalInstance<11Z2StatusMgr>
 */
u8 data_804D5044[4];

/* 804D5048-804D504C 0004+00 s=0 e=0 z=0  None .bss sInstance__31JASGlobalInstance<10Z2DebugSys>
 */
u8 data_804D5048[4];

/* 804D504C-804D5050 0004+00 s=0 e=0 z=0  None .bss
 * sInstance__36JASGlobalInstance<15JAISoundStarter>            */
u8 data_804D504C[4];

/* 804D5050-804D5054 0004+00 s=0 e=0 z=0  None .bss
 * sInstance__35JASGlobalInstance<14Z2SoundStarter>             */
u8 data_804D5050[4];

/* 804D5054-804D5058 0004+00 s=0 e=0 z=0  None .bss sInstance__33JASGlobalInstance<12Z2SpeechMgr2>
 */
u8 data_804D5054[4];

/* 804D5058-804D505C 0004+00 s=0 e=0 z=0  None .bss       sInstance__28JASGlobalInstance<8JAISeMgr>
 */
u8 data_804D5058[4];

/* 804D505C-804D5060 0004+00 s=0 e=0 z=0  None .bss       sInstance__29JASGlobalInstance<9JAISeqMgr>
 */
u8 data_804D505C[4];

/* 804D5060-804D5064 0004+00 s=0 e=0 z=0  None .bss sInstance__33JASGlobalInstance<12JAIStreamMgr>
 */
u8 data_804D5060[4];

/* 804D5064-804D5068 0004+00 s=0 e=0 z=0  None .bss sInstance__31JASGlobalInstance<10Z2SoundMgr>
 */
u8 data_804D5064[4];

/* 804D5068-804D506C 0004+00 s=0 e=0 z=0  None .bss sInstance__33JASGlobalInstance<12JAISoundInfo>
 */
u8 data_804D5068[4];

/* 804D506C-804D5070 0004+00 s=0 e=0 z=0  None .bss
 * sInstance__34JASGlobalInstance<13JAUSoundTable>              */
u8 data_804D506C[4];

/* 804D5070-804D5074 0004+00 s=0 e=0 z=0  None .bss
 * sInstance__38JASGlobalInstance<17JAUSoundNameTable>          */
u8 data_804D5070[4];

/* 804D5074-804D5078 0004+00 s=0 e=0 z=0  None .bss sInstance__33JASGlobalInstance<12JAUSoundInfo>
 */
u8 data_804D5074[4];

/* 804D5078-804D507C 0004+00 s=0 e=0 z=0  None .bss sInstance__32JASGlobalInstance<11Z2SoundInfo>
 */
u8 data_804D5078[4];

/* 804D507C-804D5080 0004+00 s=0 e=0 z=0  None .bss
 * sInstance__34JASGlobalInstance<13Z2SoundObjMgr>              */
u8 data_804D507C[4];

/* 804D5080-804D5084 0004+00 s=0 e=0 z=0  None .bss sInstance__31JASGlobalInstance<10Z2Audience>
 */
u8 data_804D5080[4];

/* 804D5084-804D5088 0004+00 s=0 e=0 z=0  None .bss sInstance__32JASGlobalInstance<11Z2FxLineMgr>
 */
u8 data_804D5084[4];

/* 804D5088-804D508C 0004+00 s=0 e=0 z=0  None .bss sInstance__31JASGlobalInstance<10Z2EnvSeMgr>
 */
u8 data_804D5088[4];

/* 804D508C-804D5090 0004+00 s=0 e=0 z=0  None .bss sInstance__32JASGlobalInstance<11Z2SpeechMgr>
 */
u8 data_804D508C[4];

/* 804D5090-804D5094 0004+00 s=0 e=0 z=0  None .bss
 * sInstance__34JASGlobalInstance<13Z2WolfHowlMgr>              */
u8 data_804D5090[4];

/* 804D5094-804D5098 0004+00 s=0 e=0 z=0  None .bss
 * sInstance__35JASGlobalInstance<14JAUSectionHeap>             */
u8 data_804D5094[4];
