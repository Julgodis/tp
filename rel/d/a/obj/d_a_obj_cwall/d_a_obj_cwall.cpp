// 
// Generated By: dol2asm
// Translation Unit: d_a_obj_cwall
// 

#include "dolphin/types.h"

// 
// Types:
// 

struct cXyz;
struct daObjCwall_c;

struct daObjCwall_c {
	struct chain_s {
		~daObjCwall_c::chain_s();
		daObjCwall_c::chain_s();
	};

	void initBaseMtx();
	void setBaseMtx();
	void Create();
	void CreateHeap();
	void create1st();
	void setTension();
	void calcSePos();
	void getChainBasePos(cXyz*);
	void setChainMtx();
	void chain_control();
	void chain_control2();
	void block_mode_proc_call();
	void initWait();
	void modeWait();
	void initWalk();
	void modeWalk();
	void initClose();
	void modeClose();
	void checkWall();
	void checkPullNow();
	void checkPull();
	void Draw();
	void Delete();
};

struct cXyz {
	~cXyz();
	cXyz();
};

struct dCcD_Cyl {
	dCcD_Cyl();
	~dCcD_Cyl();
};

struct cM3dGSph {
	~cM3dGSph();
};

struct cM3dGCyl {
	~cM3dGCyl();
};

struct cM3dGAab {
	~cM3dGAab();
};

struct dCcD_GStts {
	~dCcD_GStts();
};

struct cCcD_GStts {
	~cCcD_GStts();
};

struct daPy_py_c {
	void getRightHandPos() const;
};

// 
// Forward References:
// 

extern "C" void Execute__12daObjCwall_cFPPA3_A4_f();
extern "C" void setPower__12daObjCwall_cFfPs();
void daObjCwall_create1st(daObjCwall_c*);
void daObjCwall_MoveBGDelete(daObjCwall_c*);
void daObjCwall_MoveBGExecute(daObjCwall_c*);
void daObjCwall_MoveBGDraw(daObjCwall_c*);
extern "C" void func_80BD9EAC();
extern "C" void func_80BD9EC8();
extern "C" void __sinit_d_a_obj_cwall_cpp();

extern "C" void initBaseMtx__12daObjCwall_cFv();
extern "C" void setBaseMtx__12daObjCwall_cFv();
extern "C" void Create__12daObjCwall_cFv();
extern "C" void __dt__4cXyzFv();
extern "C" void CreateHeap__12daObjCwall_cFv();
extern "C" void __dt__Q212daObjCwall_c7chain_sFv();
extern "C" void __ct__Q212daObjCwall_c7chain_sFv();
extern "C" void create1st__12daObjCwall_cFv();
extern "C" void Execute__12daObjCwall_cFPPA3_A4_f();
extern "C" void setTension__12daObjCwall_cFv();
extern "C" void calcSePos__12daObjCwall_cFv();
extern "C" void getChainBasePos__12daObjCwall_cFP4cXyz();
extern "C" void setChainMtx__12daObjCwall_cFv();
extern "C" void chain_control__12daObjCwall_cFv();
extern "C" void chain_control2__12daObjCwall_cFv();
extern "C" void block_mode_proc_call__12daObjCwall_cFv();
extern "C" void initWait__12daObjCwall_cFv();
extern "C" void modeWait__12daObjCwall_cFv();
extern "C" void initWalk__12daObjCwall_cFv();
extern "C" void modeWalk__12daObjCwall_cFv();
extern "C" void initClose__12daObjCwall_cFv();
extern "C" void modeClose__12daObjCwall_cFv();
extern "C" void setPower__12daObjCwall_cFfPs();
extern "C" void checkWall__12daObjCwall_cFv();
extern "C" void checkPullNow__12daObjCwall_cFv();
extern "C" void checkPull__12daObjCwall_cFv();
extern "C" void Draw__12daObjCwall_cFv();
extern "C" void Delete__12daObjCwall_cFv();
extern "C" void daObjCwall_create1st__FP12daObjCwall_c();
extern "C" void __ct__4cXyzFv();
extern "C" void __ct__8dCcD_CylFv();
extern "C" void __dt__8cM3dGSphFv();
extern "C" void __dt__8dCcD_CylFv();
extern "C" void __dt__8cM3dGCylFv();
extern "C" void __dt__8cM3dGAabFv();
extern "C" void __dt__10dCcD_GSttsFv();
extern "C" void daObjCwall_MoveBGDelete__FP12daObjCwall_c();
extern "C" void daObjCwall_MoveBGExecute__FP12daObjCwall_c();
extern "C" void daObjCwall_MoveBGDraw__FP12daObjCwall_c();
extern "C" void __dt__10cCcD_GSttsFv();
extern "C" void func_80BD9EAC();
extern "C" void func_80BD9EC8();
extern "C" void __sinit_d_a_obj_cwall_cpp();
extern "C" void getRightHandPos__9daPy_py_cCFv();
SECTION_RODATA extern const u8 l_wallBmd[8];
SECTION_RODATA extern const u8 l_chainBmd[8];
SECTION_RODATA extern const u8 l_handleBmd[8];
SECTION_RODATA extern const u8 l_dzb[8];
SECTION_RODATA extern const u8 l_heap_size[8];
SECTION_RODATA extern const u8 l_top_co_offset[12];
SECTION_RODATA extern const u8 l_check_min[12];
SECTION_RODATA extern const u8 l_check_max[12];
SECTION_RODATA extern const u8 l_check_min_wolf[12];
SECTION_RODATA extern const u8 l_check_max_wolf[12];
SECTION_RODATA extern const u8 lit_3829[4];
SECTION_RODATA extern const u32 lit_3830;
SECTION_RODATA extern const u8 lit_4114[8];
SECTION_RODATA extern const u8 lit_4115[8];
SECTION_RODATA extern const u8 lit_4116[8];
SECTION_RODATA extern const u32 lit_4117;
SECTION_RODATA extern const u32 lit_4118;
SECTION_RODATA extern const u32 lit_4119;
SECTION_RODATA extern const u32 lit_4130;
SECTION_RODATA extern const u32 lit_4316;
SECTION_RODATA extern const u32 lit_4317;
SECTION_RODATA extern const u32 lit_4318;
SECTION_RODATA extern const u32 lit_4319;
SECTION_RODATA extern const u32 lit_4320;
SECTION_RODATA extern const u32 lit_4321;
SECTION_RODATA extern const u32 lit_4322;
SECTION_RODATA extern const u32 lit_4323;
SECTION_RODATA extern const u32 lit_4486;
SECTION_RODATA extern const u32 lit_4487;
SECTION_RODATA extern const u32 lit_4488;
SECTION_RODATA extern const u32 lit_4489;
SECTION_RODATA extern const u32 lit_4490;
SECTION_RODATA extern const u32 lit_4491;
SECTION_RODATA extern const u32 lit_4665;
SECTION_RODATA extern const u32 lit_4666;
SECTION_RODATA extern const u32 lit_4667;
SECTION_RODATA extern const u8 lit_4669[8];
SECTION_RODATA extern const u32 lit_4884;
SECTION_RODATA extern const u32 lit_4885;
SECTION_RODATA extern const u32 lit_4961;
SECTION_RODATA extern const u32 lit_4962;
SECTION_RODATA extern const u32 lit_5019;
SECTION_RODATA extern const u32 lit_5316;
SECTION_RODATA extern const u32 lit_5317;
SECTION_RODATA extern const u32 lit_5318;
SECTION_RODATA extern const u8 stringBase0[18];
SECTION_DATA extern u8 cNullVec__6Z2Calc[12];
SECTION_DATA extern u32 lit_1787;
SECTION_DATA extern u8 pad_80BDA0D0[16];
SECTION_DATA extern u8 l_arcName[8];
SECTION_DATA extern u8 l_cull_box[24];
SECTION_DATA extern u8 l_side_co_offset[48];
SECTION_DATA extern u8 l_cyl_src[68];
SECTION_DATA extern u8 l_cyl_src2[68];
SECTION_DATA extern u8 l_sph_src[64];
SECTION_DATA extern u8 lit_4501[12];
SECTION_DATA extern u8 lit_4502[12];
SECTION_DATA extern u8 lit_4503[12];
SECTION_DATA extern u8 data_80BDA21C[36];
SECTION_DATA extern u8 daObjCwall_METHODS[32];
SECTION_DATA extern u8 g_profile_Obj_ChainWall[48];
SECTION_DATA extern void*const __vt__10cCcD_GStts[3];
SECTION_DATA extern void*const __vt__10dCcD_GStts[3];
SECTION_DATA extern void*const __vt__8cM3dGSph[3];
SECTION_DATA extern void*const __vt__8cM3dGCyl[3];
SECTION_DATA extern void*const __vt__8cM3dGAab[3];
SECTION_DATA extern void*const __vt__12daObjCwall_c[10];
SECTION_BSS extern u8 lit_1109[1 + 3 /* padding */];
SECTION_BSS extern u8 lit_1107[1 + 3 /* padding */];
SECTION_BSS extern u8 lit_1105[1 + 3 /* padding */];
SECTION_BSS extern u8 lit_1104[1 + 3 /* padding */];
SECTION_BSS extern u8 lit_1099[1 + 3 /* padding */];
SECTION_BSS extern u8 lit_1097[1 + 3 /* padding */];
SECTION_BSS extern u8 lit_1095[1 + 3 /* padding */];
SECTION_BSS extern u8 lit_1094[1 + 3 /* padding */];
SECTION_BSS extern u8 lit_1057[1 + 3 /* padding */];
SECTION_BSS extern u8 lit_1055[1 + 3 /* padding */];
SECTION_BSS extern u8 lit_1053[1 + 3 /* padding */];
SECTION_BSS extern u8 lit_1052[1 + 3 /* padding */];
SECTION_BSS extern u8 lit_1014[1 + 3 /* padding */];
SECTION_BSS extern u8 lit_1012[1 + 3 /* padding */];
SECTION_BSS extern u8 lit_1010[1 + 3 /* padding */];
SECTION_BSS extern u8 lit_1009[1 + 3 /* padding */];
SECTION_BSS extern u8 lit_3759[12];
SECTION_BSS extern u8 l_chainOffset[12];
SECTION_BSS extern u8 lit_3760[12];
SECTION_BSS extern u8 l_smokeSetOffset[12];
SECTION_BSS extern u8 data_80BDA370[4];
SECTION_BSS extern u8 data_80BDA374[4];
SECTION_BSS extern u8 data_80BDA378[4];
SECTION_BSS extern u8 data_80BDA37C[4];
SECTION_BSS extern u8 data_80BDA380[4];
SECTION_BSS extern u8 data_80BDA384[4];
SECTION_BSS extern u8 data_80BDA388[4];
SECTION_BSS extern u8 data_80BDA38C[4];
SECTION_BSS extern u8 data_80BDA390[4];
SECTION_BSS extern u8 data_80BDA394[4];
SECTION_BSS extern u8 data_80BDA398[4];
SECTION_BSS extern u8 data_80BDA39C[4];
SECTION_BSS extern u8 data_80BDA3A0[4];
SECTION_BSS extern u8 data_80BDA3A4[4];
SECTION_BSS extern u8 data_80BDA3A8[4];
SECTION_BSS extern u8 data_80BDA3AC[4];
SECTION_BSS extern u8 data_80BDA3B0[4];
SECTION_BSS extern u8 data_80BDA3B4[4];
SECTION_BSS extern u8 data_80BDA3B8[4];
SECTION_BSS extern u8 data_80BDA3BC[4];
SECTION_BSS extern u8 data_80BDA3C0[4];
SECTION_BSS extern u8 data_80BDA3C4[4];
SECTION_BSS extern u8 data_80BDA3C8[4];
SECTION_BSS extern u8 data_80BDA3CC[4];
SECTION_BSS extern u8 data_80BDA3D0[4];
SECTION_BSS extern u8 data_80BDA3D4[4];

// 
// External References:
// 

extern "C" void _unresolved();
extern "C" void __register_global_object();

extern "C" void _unresolved();
extern "C" void __register_global_object();

// 
// Declarations:
// 

/* 80BD6A4C-80BD6A88 003C+00 .text      initBaseMtx__12daObjCwall_cFv                                */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void daObjCwall_c::initBaseMtx() {
	nofralloc
#include "asm/rel/d/a/obj/d_a_obj_cwall/d_a_obj_cwall/initBaseMtx__12daObjCwall_cFv.s"
}
#pragma pop


/* 80BD6A88-80BD6AEC 0064+00 .text      setBaseMtx__12daObjCwall_cFv                                 */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void daObjCwall_c::setBaseMtx() {
	nofralloc
#include "asm/rel/d/a/obj/d_a_obj_cwall/d_a_obj_cwall/setBaseMtx__12daObjCwall_cFv.s"
}
#pragma pop


/* 80BD6AEC-80BD6CCC 01E0+00 .text      Create__12daObjCwall_cFv                                     */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void daObjCwall_c::Create() {
	nofralloc
#include "asm/rel/d/a/obj/d_a_obj_cwall/d_a_obj_cwall/Create__12daObjCwall_cFv.s"
}
#pragma pop


/* 80BD6CCC-80BD6D08 003C+00 .text      __dt__4cXyzFv                                                */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm cXyz::~cXyz() {
	nofralloc
#include "asm/rel/d/a/obj/d_a_obj_cwall/d_a_obj_cwall/__dt__4cXyzFv.s"
}
#pragma pop


/* 80BD6D08-80BD6E94 018C+00 .text      CreateHeap__12daObjCwall_cFv                                 */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void daObjCwall_c::CreateHeap() {
	nofralloc
#include "asm/rel/d/a/obj/d_a_obj_cwall/d_a_obj_cwall/CreateHeap__12daObjCwall_cFv.s"
}
#pragma pop


/* 80BD6E94-80BD6ED0 003C+00 .text      __dt__Q212daObjCwall_c7chain_sFv                             */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm daObjCwall_c::chain_s::~daObjCwall_c::chain_s() {
	nofralloc
#include "asm/rel/d/a/obj/d_a_obj_cwall/d_a_obj_cwall/__dt__Q212daObjCwall_c7chain_sFv.s"
}
#pragma pop


/* 80BD6ED0-80BD6ED4 0004+00 .text      __ct__Q212daObjCwall_c7chain_sFv                             */
daObjCwall_c::chain_s::daObjCwall_c::chain_s() {
	/* empty function */
}


/* 80BD6ED4-80BD6F80 00AC+00 .text      create1st__12daObjCwall_cFv                                  */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void daObjCwall_c::create1st() {
	nofralloc
#include "asm/rel/d/a/obj/d_a_obj_cwall/d_a_obj_cwall/create1st__12daObjCwall_cFv.s"
}
#pragma pop


/* 80BD6F80-80BD7288 0308+00 .text      Execute__12daObjCwall_cFPPA3_A4_f                            */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
extern "C" asm void Execute__12daObjCwall_cFPPA3_A4_f() {
	nofralloc
#include "asm/rel/d/a/obj/d_a_obj_cwall/d_a_obj_cwall/Execute__12daObjCwall_cFPPA3_A4_f.s"
}
#pragma pop


/* 80BD7288-80BD7718 0490+00 .text      setTension__12daObjCwall_cFv                                 */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void daObjCwall_c::setTension() {
	nofralloc
#include "asm/rel/d/a/obj/d_a_obj_cwall/d_a_obj_cwall/setTension__12daObjCwall_cFv.s"
}
#pragma pop


/* 80BD7718-80BD7788 0070+00 .text      calcSePos__12daObjCwall_cFv                                  */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void daObjCwall_c::calcSePos() {
	nofralloc
#include "asm/rel/d/a/obj/d_a_obj_cwall/d_a_obj_cwall/calcSePos__12daObjCwall_cFv.s"
}
#pragma pop


/* 80BD7788-80BD7804 007C+00 .text      getChainBasePos__12daObjCwall_cFP4cXyz                       */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void daObjCwall_c::getChainBasePos(cXyz* field_0) {
	nofralloc
#include "asm/rel/d/a/obj/d_a_obj_cwall/d_a_obj_cwall/getChainBasePos__12daObjCwall_cFP4cXyz.s"
}
#pragma pop


/* 80BD7804-80BD7AD4 02D0+00 .text      setChainMtx__12daObjCwall_cFv                                */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void daObjCwall_c::setChainMtx() {
	nofralloc
#include "asm/rel/d/a/obj/d_a_obj_cwall/d_a_obj_cwall/setChainMtx__12daObjCwall_cFv.s"
}
#pragma pop


/* 80BD7AD4-80BD7ED8 0404+00 .text      chain_control__12daObjCwall_cFv                              */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void daObjCwall_c::chain_control() {
	nofralloc
#include "asm/rel/d/a/obj/d_a_obj_cwall/d_a_obj_cwall/chain_control__12daObjCwall_cFv.s"
}
#pragma pop


/* 80BD7ED8-80BD84C0 05E8+00 .text      chain_control2__12daObjCwall_cFv                             */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void daObjCwall_c::chain_control2() {
	nofralloc
#include "asm/rel/d/a/obj/d_a_obj_cwall/d_a_obj_cwall/chain_control2__12daObjCwall_cFv.s"
}
#pragma pop


/* 80BD84C0-80BD8594 00D4+00 .text      block_mode_proc_call__12daObjCwall_cFv                       */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void daObjCwall_c::block_mode_proc_call() {
	nofralloc
#include "asm/rel/d/a/obj/d_a_obj_cwall/d_a_obj_cwall/block_mode_proc_call__12daObjCwall_cFv.s"
}
#pragma pop


/* 80BD8594-80BD85C0 002C+00 .text      initWait__12daObjCwall_cFv                                   */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void daObjCwall_c::initWait() {
	nofralloc
#include "asm/rel/d/a/obj/d_a_obj_cwall/d_a_obj_cwall/initWait__12daObjCwall_cFv.s"
}
#pragma pop


/* 80BD85C0-80BD8748 0188+00 .text      modeWait__12daObjCwall_cFv                                   */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void daObjCwall_c::modeWait() {
	nofralloc
#include "asm/rel/d/a/obj/d_a_obj_cwall/d_a_obj_cwall/modeWait__12daObjCwall_cFv.s"
}
#pragma pop


/* 80BD8748-80BD8778 0030+00 .text      initWalk__12daObjCwall_cFv                                   */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void daObjCwall_c::initWalk() {
	nofralloc
#include "asm/rel/d/a/obj/d_a_obj_cwall/d_a_obj_cwall/initWalk__12daObjCwall_cFv.s"
}
#pragma pop


/* 80BD8778-80BD8BC8 0450+00 .text      modeWalk__12daObjCwall_cFv                                   */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void daObjCwall_c::modeWalk() {
	nofralloc
#include "asm/rel/d/a/obj/d_a_obj_cwall/d_a_obj_cwall/modeWalk__12daObjCwall_cFv.s"
}
#pragma pop


/* 80BD8BC8-80BD8BF0 0028+00 .text      initClose__12daObjCwall_cFv                                  */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void daObjCwall_c::initClose() {
	nofralloc
#include "asm/rel/d/a/obj/d_a_obj_cwall/d_a_obj_cwall/initClose__12daObjCwall_cFv.s"
}
#pragma pop


/* 80BD8BF0-80BD935C 076C+00 .text      modeClose__12daObjCwall_cFv                                  */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void daObjCwall_c::modeClose() {
	nofralloc
#include "asm/rel/d/a/obj/d_a_obj_cwall/d_a_obj_cwall/modeClose__12daObjCwall_cFv.s"
}
#pragma pop


/* 80BD935C-80BD9414 00B8+00 .text      setPower__12daObjCwall_cFfPs                                 */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
extern "C" asm void setPower__12daObjCwall_cFfPs() {
	nofralloc
#include "asm/rel/d/a/obj/d_a_obj_cwall/d_a_obj_cwall/setPower__12daObjCwall_cFfPs.s"
}
#pragma pop


/* 80BD9414-80BD95A0 018C+00 .text      checkWall__12daObjCwall_cFv                                  */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void daObjCwall_c::checkWall() {
	nofralloc
#include "asm/rel/d/a/obj/d_a_obj_cwall/d_a_obj_cwall/checkWall__12daObjCwall_cFv.s"
}
#pragma pop


/* 80BD95A0-80BD977C 01DC+00 .text      checkPullNow__12daObjCwall_cFv                               */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void daObjCwall_c::checkPullNow() {
	nofralloc
#include "asm/rel/d/a/obj/d_a_obj_cwall/d_a_obj_cwall/checkPullNow__12daObjCwall_cFv.s"
}
#pragma pop


/* 80BD977C-80BD9848 00CC+00 .text      checkPull__12daObjCwall_cFv                                  */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void daObjCwall_c::checkPull() {
	nofralloc
#include "asm/rel/d/a/obj/d_a_obj_cwall/d_a_obj_cwall/checkPull__12daObjCwall_cFv.s"
}
#pragma pop


/* 80BD9848-80BD9948 0100+00 .text      Draw__12daObjCwall_cFv                                       */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void daObjCwall_c::Draw() {
	nofralloc
#include "asm/rel/d/a/obj/d_a_obj_cwall/d_a_obj_cwall/Draw__12daObjCwall_cFv.s"
}
#pragma pop


/* 80BD9948-80BD9988 0040+00 .text      Delete__12daObjCwall_cFv                                     */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void daObjCwall_c::Delete() {
	nofralloc
#include "asm/rel/d/a/obj/d_a_obj_cwall/d_a_obj_cwall/Delete__12daObjCwall_cFv.s"
}
#pragma pop


/* 80BD9988-80BD9B70 01E8+00 .text      daObjCwall_create1st__FP12daObjCwall_c                       */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void daObjCwall_create1st(daObjCwall_c* field_0) {
	nofralloc
#include "asm/rel/d/a/obj/d_a_obj_cwall/d_a_obj_cwall/daObjCwall_create1st__FP12daObjCwall_c.s"
}
#pragma pop


/* 80BD9B70-80BD9B74 0004+00 .text      __ct__4cXyzFv                                                */
cXyz::cXyz() {
	/* empty function */
}


/* 80BD9B74-80BD9BF8 0084+00 .text      __ct__8dCcD_CylFv                                            */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm dCcD_Cyl::dCcD_Cyl() {
	nofralloc
#include "asm/rel/d/a/obj/d_a_obj_cwall/d_a_obj_cwall/__ct__8dCcD_CylFv.s"
}
#pragma pop


/* 80BD9BF8-80BD9C40 0048+00 .text      __dt__8cM3dGSphFv                                            */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm cM3dGSph::~cM3dGSph() {
	nofralloc
#include "asm/rel/d/a/obj/d_a_obj_cwall/d_a_obj_cwall/__dt__8cM3dGSphFv.s"
}
#pragma pop


/* 80BD9C40-80BD9D0C 00CC+00 .text      __dt__8dCcD_CylFv                                            */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm dCcD_Cyl::~dCcD_Cyl() {
	nofralloc
#include "asm/rel/d/a/obj/d_a_obj_cwall/d_a_obj_cwall/__dt__8dCcD_CylFv.s"
}
#pragma pop


/* 80BD9D0C-80BD9D54 0048+00 .text      __dt__8cM3dGCylFv                                            */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm cM3dGCyl::~cM3dGCyl() {
	nofralloc
#include "asm/rel/d/a/obj/d_a_obj_cwall/d_a_obj_cwall/__dt__8cM3dGCylFv.s"
}
#pragma pop


/* 80BD9D54-80BD9D9C 0048+00 .text      __dt__8cM3dGAabFv                                            */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm cM3dGAab::~cM3dGAab() {
	nofralloc
#include "asm/rel/d/a/obj/d_a_obj_cwall/d_a_obj_cwall/__dt__8cM3dGAabFv.s"
}
#pragma pop


/* 80BD9D9C-80BD9DF8 005C+00 .text      __dt__10dCcD_GSttsFv                                         */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm dCcD_GStts::~dCcD_GStts() {
	nofralloc
#include "asm/rel/d/a/obj/d_a_obj_cwall/d_a_obj_cwall/__dt__10dCcD_GSttsFv.s"
}
#pragma pop


/* 80BD9DF8-80BD9E18 0020+00 .text      daObjCwall_MoveBGDelete__FP12daObjCwall_c                    */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void daObjCwall_MoveBGDelete(daObjCwall_c* field_0) {
	nofralloc
#include "asm/rel/d/a/obj/d_a_obj_cwall/d_a_obj_cwall/daObjCwall_MoveBGDelete__FP12daObjCwall_c.s"
}
#pragma pop


/* 80BD9E18-80BD9E38 0020+00 .text      daObjCwall_MoveBGExecute__FP12daObjCwall_c                   */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void daObjCwall_MoveBGExecute(daObjCwall_c* field_0) {
	nofralloc
#include "asm/rel/d/a/obj/d_a_obj_cwall/d_a_obj_cwall/daObjCwall_MoveBGExecute__FP12daObjCwall_c.s"
}
#pragma pop


/* 80BD9E38-80BD9E64 002C+00 .text      daObjCwall_MoveBGDraw__FP12daObjCwall_c                      */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void daObjCwall_MoveBGDraw(daObjCwall_c* field_0) {
	nofralloc
#include "asm/rel/d/a/obj/d_a_obj_cwall/d_a_obj_cwall/daObjCwall_MoveBGDraw__FP12daObjCwall_c.s"
}
#pragma pop


/* 80BD9E64-80BD9EAC 0048+00 .text      __dt__10cCcD_GSttsFv                                         */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm cCcD_GStts::~cCcD_GStts() {
	nofralloc
#include "asm/rel/d/a/obj/d_a_obj_cwall/d_a_obj_cwall/__dt__10cCcD_GSttsFv.s"
}
#pragma pop


/* 80BD9EAC-80BD9EC8 001C+00 .text      cLib_calcTimer<s>__FPs                                       */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
extern "C" asm void func_80BD9EAC() {
	nofralloc
#include "asm/rel/d/a/obj/d_a_obj_cwall/d_a_obj_cwall/func_80BD9EAC.s"
}
#pragma pop


/* 80BD9EC8-80BD9EE4 001C+00 .text      cLib_calcTimer<Uc>__FPUc                                     */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
extern "C" asm void func_80BD9EC8() {
	nofralloc
#include "asm/rel/d/a/obj/d_a_obj_cwall/d_a_obj_cwall/func_80BD9EC8.s"
}
#pragma pop


/* 80BD9EE4-80BD9F74 0090+00 .text      __sinit_d_a_obj_cwall_cpp                                    */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
extern "C" asm void __sinit_d_a_obj_cwall_cpp() {
	nofralloc
#include "asm/rel/d/a/obj/d_a_obj_cwall/d_a_obj_cwall/__sinit_d_a_obj_cwall_cpp.s"
}
#pragma pop


/* 80BD9F74-80BD9F90 001C+00 .text      getRightHandPos__9daPy_py_cCFv                               */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void daPy_py_c::getRightHandPos() const {
	nofralloc
#include "asm/rel/d/a/obj/d_a_obj_cwall/d_a_obj_cwall/getRightHandPos__9daPy_py_cCFv.s"
}
#pragma pop


/* ############################################################################################## */
/* 80BD9FA4-80BD9FAC 0008+00 .rodata    l_wallBmd                                                    */
SECTION_RODATA const u8 l_wallBmd[8] = {
	0x00, 0x00, 0x00, 0x05, 0x00, 0x00, 0x00, 0x05,
};

/* 80BD9FAC-80BD9FB4 0008+00 .rodata    l_chainBmd                                                   */
SECTION_RODATA const u8 l_chainBmd[8] = {
	0x00, 0x00, 0x00, 0x04, 0x00, 0x00, 0x00, 0x04,
};

/* 80BD9FB4-80BD9FBC 0008+00 .rodata    l_handleBmd                                                  */
SECTION_RODATA const u8 l_handleBmd[8] = {
	0x00, 0x00, 0x00, 0x06, 0x00, 0x00, 0x00, 0x06,
};

/* 80BD9FBC-80BD9FC4 0008+00 .rodata    l_dzb                                                        */
SECTION_RODATA const u8 l_dzb[8] = {
	0x00, 0x00, 0x00, 0x09, 0x00, 0x00, 0x00, 0x09,
};

/* 80BD9FC4-80BD9FCC 0008+00 .rodata    l_heap_size                                                  */
SECTION_RODATA const u8 l_heap_size[8] = {
	0x00, 0x00, 0x46, 0x00, 0x00, 0x00, 0x5F, 0x00,
};

/* 80BD9FCC-80BD9FD8 000C+00 .rodata    l_top_co_offset                                              */
SECTION_RODATA const u8 l_top_co_offset[12] = {
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xC4, 0x16, 0x00, 0x00,
};

/* 80BD9FD8-80BD9FE4 000C+00 .rodata    l_check_min                                                  */
SECTION_RODATA const u8 l_check_min[12] = {
	0xC2, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xC1, 0xA0, 0x00, 0x00,
};

/* 80BD9FE4-80BD9FF0 000C+00 .rodata    l_check_max                                                  */
SECTION_RODATA const u8 l_check_max[12] = {
	0x42, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x42, 0xA0, 0x00, 0x00,
};

/* 80BD9FF0-80BD9FFC 000C+00 .rodata    l_check_min_wolf                                             */
SECTION_RODATA const u8 l_check_min_wolf[12] = {
	0xC2, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x42, 0x48, 0x00, 0x00,
};

/* 80BD9FFC-80BDA008 000C+00 .rodata    l_check_max_wolf                                             */
SECTION_RODATA const u8 l_check_max_wolf[12] = {
	0x42, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x43, 0x20, 0x00, 0x00,
};

/* 80BDA008-80BDA00C 0004+00 .rodata    @3829                                                        */
SECTION_RODATA const u8 lit_3829[4] = {
	0x00, 0x00, 0x00, 0x00,
};

/* 80BDA00C-80BDA014 0004+04 .rodata    @3830                                                        */
SECTION_RODATA const u32 lit_3830 = 0x42480000;
/* padding 4 bytes */

/* 80BDA014-80BDA01C 0008+00 .rodata    @4114                                                        */
SECTION_RODATA const u8 lit_4114[8] = {
	0x3F, 0xE0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
};

/* 80BDA01C-80BDA024 0008+00 .rodata    @4115                                                        */
SECTION_RODATA const u8 lit_4115[8] = {
	0x40, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
};

/* 80BDA024-80BDA02C 0008+00 .rodata    @4116                                                        */
SECTION_RODATA const u8 lit_4116[8] = {
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
};

/* 80BDA02C-80BDA030 0004+00 .rodata    @4117                                                        */
SECTION_RODATA const u32 lit_4117 = 0x43A90000;

/* 80BDA030-80BDA034 0004+00 .rodata    @4118                                                        */
SECTION_RODATA const u32 lit_4118 = 0x43500000;

/* 80BDA034-80BDA038 0004+00 .rodata    @4119                                                        */
SECTION_RODATA const u32 lit_4119 = 0x43280000;

/* 80BDA038-80BDA03C 0004+00 .rodata    @4130                                                        */
SECTION_RODATA const u32 lit_4130 = 0x43960000;

/* 80BDA03C-80BDA040 0004+00 .rodata    @4316                                                        */
SECTION_RODATA const u32 lit_4316 = 0xC0C00000;

/* 80BDA040-80BDA044 0004+00 .rodata    @4317                                                        */
SECTION_RODATA const u32 lit_4317 = 0x40A00000;

/* 80BDA044-80BDA048 0004+00 .rodata    @4318                                                        */
SECTION_RODATA const u32 lit_4318 = 0x3DCCCCCD;

/* 80BDA048-80BDA04C 0004+00 .rodata    @4319                                                        */
SECTION_RODATA const u32 lit_4319 = 0x42C80000;

/* 80BDA04C-80BDA050 0004+00 .rodata    @4320                                                        */
SECTION_RODATA const u32 lit_4320 = 0x41700000;

/* 80BDA050-80BDA054 0004+00 .rodata    @4321                                                        */
SECTION_RODATA const u32 lit_4321 = 0x42180000;

/* 80BDA054-80BDA058 0004+00 .rodata    @4322                                                        */
SECTION_RODATA const u32 lit_4322 = 0x41000000;

/* 80BDA058-80BDA05C 0004+00 .rodata    @4323                                                        */
SECTION_RODATA const u32 lit_4323 = 0x3F000000;

/* 80BDA05C-80BDA060 0004+00 .rodata    @4486                                                        */
SECTION_RODATA const u32 lit_4486 = 0x42700000;

/* 80BDA060-80BDA064 0004+00 .rodata    @4487                                                        */
SECTION_RODATA const u32 lit_4487 = 0xC1200000;

/* 80BDA064-80BDA068 0004+00 .rodata    @4488                                                        */
SECTION_RODATA const u32 lit_4488 = 0x41C80000;

/* 80BDA068-80BDA06C 0004+00 .rodata    @4489                                                        */
SECTION_RODATA const u32 lit_4489 = 0x41200000;

/* 80BDA06C-80BDA070 0004+00 .rodata    @4490                                                        */
SECTION_RODATA const u32 lit_4490 = 0x433C0000;

/* 80BDA070-80BDA074 0004+00 .rodata    @4491                                                        */
SECTION_RODATA const u32 lit_4491 = 0x40C00000;

/* 80BDA074-80BDA078 0004+00 .rodata    @4665                                                        */
SECTION_RODATA const u32 lit_4665 = 0x3F800000;

/* 80BDA078-80BDA07C 0004+00 .rodata    @4666                                                        */
SECTION_RODATA const u32 lit_4666 = 0x42960000;

/* 80BDA07C-80BDA084 0004+04 .rodata    @4667                                                        */
SECTION_RODATA const u32 lit_4667 = 0xBF800000;
/* padding 4 bytes */

/* 80BDA084-80BDA08C 0008+00 .rodata    @4669                                                        */
SECTION_RODATA const u8 lit_4669[8] = {
	0x43, 0x30, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
};

/* 80BDA08C-80BDA090 0004+00 .rodata    @4884                                                        */
SECTION_RODATA const u32 lit_4884 = 0x3C23D70A;

/* 80BDA090-80BDA094 0004+00 .rodata    @4885                                                        */
SECTION_RODATA const u32 lit_4885 = 0x3FC00000;

/* 80BDA094-80BDA098 0004+00 .rodata    @4961                                                        */
SECTION_RODATA const u32 lit_4961 = 0xC2BE0000;

/* 80BDA098-80BDA09C 0004+00 .rodata    @4962                                                        */
SECTION_RODATA const u32 lit_4962 = 0x42BE0000;

/* 80BDA09C-80BDA0A0 0004+00 .rodata    @5019                                                        */
SECTION_RODATA const u32 lit_5019 = 0x43910000;

/* 80BDA0A0-80BDA0A4 0004+00 .rodata    @5316                                                        */
SECTION_RODATA const u32 lit_5316 = 0x42D20000;

/* 80BDA0A4-80BDA0A8 0004+00 .rodata    @5317                                                        */
SECTION_RODATA const u32 lit_5317 = 0x41F00000;

/* 80BDA0A8-80BDA0AC 0004+00 .rodata    @5318                                                        */
SECTION_RODATA const u32 lit_5318 = 0xC3480000;

/* 80BDA0AC-80BDA0BE 0012+00 .rodata    @stringBase0                                                 */
#pragma push
#pragma force_active on
#pragma section ".dead"
SECTION_DEAD char* const stringBase_80BDA0AC = "P_Cwall";
SECTION_DEAD char* const stringBase_80BDA0B4 = "P_L4Cwall";
#pragma pop

/* 80BDA0C0-80BDA0CC 000C+00 .data      cNullVec__6Z2Calc                                            */
u8 cNullVec__6Z2Calc[12] = {
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
};

/* 80BDA0CC-80BDA0D0 0004+00 .data      @1787                                                        */
u32 lit_1787 = 0x02000201;

/* 80BDA0D0-80BDA0E0 0010+00 .data      None                                                         */
u8 pad_80BDA0D0[16] = {
	0x40, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x3F, 0xE0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
};

/* 80BDA0E0-80BDA0E8 0008+00 .data      l_arcName                                                    */
u8 l_arcName[8] = {
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
};

/* 80BDA0E8-80BDA100 0018+00 .data      l_cull_box                                                   */
u8 l_cull_box[24] = {
	0xC3, 0x96, 0x00, 0x00, 0xC2, 0xC8, 0x00, 0x00, 0xC4, 0x22, 0x80, 0x00, 0x43, 0x96, 0x00, 0x00,
	0x43, 0xFA, 0x00, 0x00, 0x43, 0x96, 0x00, 0x00,
};

/* 80BDA100-80BDA130 0030+00 .data      l_side_co_offset                                             */
u8 l_side_co_offset[48] = {
	0xC3, 0x7F, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xC1, 0xF0, 0x00, 0x00, 0xC3, 0x07, 0x00, 0x00,
	0x00, 0x00, 0x00, 0x00, 0xC1, 0xF0, 0x00, 0x00, 0x43, 0x07, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
	0xC1, 0xF0, 0x00, 0x00, 0x43, 0x7F, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xC1, 0xF0, 0x00, 0x00,
};

/* 80BDA130-80BDA174 0044+00 .data      l_cyl_src                                                    */
u8 l_cyl_src[68] = {
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x79, 0x00, 0x01, 0x00, 0x00,
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x06, 0x00, 0x00, 0x00, 0x00,
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x42, 0x8C, 0x00, 0x00,
	0x43, 0xE1, 0x00, 0x00,
};

/* 80BDA174-80BDA1B8 0044+00 .data      l_cyl_src2                                                   */
u8 l_cyl_src2[68] = {
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x19, 0x00, 0x00, 0x00, 0x00,
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x06, 0x00, 0x00, 0x00, 0x00,
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x42, 0x70, 0x00, 0x00,
	0x43, 0x96, 0x00, 0x00,
};

/* 80BDA1B8-80BDA1F8 0040+00 .data      l_sph_src                                                    */
u8 l_sph_src[64] = {
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
	0x00, 0x00, 0x40, 0x00, 0x00, 0x00, 0x00, 0x11, 0x00, 0x00, 0x00, 0x58, 0x00, 0x00, 0x00, 0x00,
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x42, 0x48, 0x00, 0x00,
};

/* 80BDA1F8-80BDA204 000C+00 .data      @4501                                                        */
u8 lit_4501[12] = {
	0x00, 0x00, 0x00, 0x00, 0xFF, 0xFF, 0xFF, 0xFF, 0x00, 0x00, 0x00, 0x00,
};

/* 80BDA204-80BDA210 000C+00 .data      @4502                                                        */
u8 lit_4502[12] = {
	0x00, 0x00, 0x00, 0x00, 0xFF, 0xFF, 0xFF, 0xFF, 0x00, 0x00, 0x00, 0x00,
};

/* 80BDA210-80BDA21C 000C+00 .data      @4503                                                        */
u8 lit_4503[12] = {
	0x00, 0x00, 0x00, 0x00, 0xFF, 0xFF, 0xFF, 0xFF, 0x00, 0x00, 0x00, 0x00,
};

/* 80BDA21C-80BDA240 0024+00 .data      l_func$4500                                                  */
u8 data_80BDA21C[36] = {
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
	0x00, 0x00, 0x00, 0x00,
};

/* 80BDA240-80BDA260 0020+00 .data      daObjCwall_METHODS                                           */
u8 daObjCwall_METHODS[32] = {
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
};

/* 80BDA260-80BDA290 0030+00 .data      g_profile_Obj_ChainWall                                      */
u8 g_profile_Obj_ChainWall[48] = {
	0xFF, 0xFF, 0xFF, 0xFD, 0x00, 0x03, 0xFF, 0xFD, 0x00, 0x7F, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
	0x00, 0x00, 0x0F, 0x5C, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
	0x02, 0x56, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x0C, 0x00, 0x00, 0x00, 0x0E, 0x00, 0x00,
};

/* 80BDA290-80BDA29C 000C+00 .data      __vt__10cCcD_GStts                                           */
void* const __vt__10cCcD_GStts[3] = {
	NULL, /* RTTI */
	NULL,
	NULL,
};

/* 80BDA29C-80BDA2A8 000C+00 .data      __vt__10dCcD_GStts                                           */
void* const __vt__10dCcD_GStts[3] = {
	NULL, /* RTTI */
	NULL,
	NULL,
};

/* 80BDA2A8-80BDA2B4 000C+00 .data      __vt__8cM3dGSph                                              */
void* const __vt__8cM3dGSph[3] = {
	NULL, /* RTTI */
	NULL,
	NULL,
};

/* 80BDA2B4-80BDA2C0 000C+00 .data      __vt__8cM3dGCyl                                              */
void* const __vt__8cM3dGCyl[3] = {
	NULL, /* RTTI */
	NULL,
	NULL,
};

/* 80BDA2C0-80BDA2CC 000C+00 .data      __vt__8cM3dGAab                                              */
void* const __vt__8cM3dGAab[3] = {
	NULL, /* RTTI */
	NULL,
	NULL,
};

/* 80BDA2CC-80BDA2F4 0028+00 .data      __vt__12daObjCwall_c                                         */
void* const __vt__12daObjCwall_c[10] = {
	NULL, /* RTTI */
	NULL,
	NULL,
	NULL,
	NULL,
	NULL,
	NULL,
	NULL,
	NULL,
	NULL,
};

/* 80BDA300-80BDA304 0001+03 .bss       @1109                                                        */
u8 lit_1109[1 + 3 /* padding */];

/* 80BDA304-80BDA308 0001+03 .bss       @1107                                                        */
u8 lit_1107[1 + 3 /* padding */];

/* 80BDA308-80BDA30C 0001+03 .bss       @1105                                                        */
u8 lit_1105[1 + 3 /* padding */];

/* 80BDA30C-80BDA310 0001+03 .bss       @1104                                                        */
u8 lit_1104[1 + 3 /* padding */];

/* 80BDA310-80BDA314 0001+03 .bss       @1099                                                        */
u8 lit_1099[1 + 3 /* padding */];

/* 80BDA314-80BDA318 0001+03 .bss       @1097                                                        */
u8 lit_1097[1 + 3 /* padding */];

/* 80BDA318-80BDA31C 0001+03 .bss       @1095                                                        */
u8 lit_1095[1 + 3 /* padding */];

/* 80BDA31C-80BDA320 0001+03 .bss       @1094                                                        */
u8 lit_1094[1 + 3 /* padding */];

/* 80BDA320-80BDA324 0001+03 .bss       @1057                                                        */
u8 lit_1057[1 + 3 /* padding */];

/* 80BDA324-80BDA328 0001+03 .bss       @1055                                                        */
u8 lit_1055[1 + 3 /* padding */];

/* 80BDA328-80BDA32C 0001+03 .bss       @1053                                                        */
u8 lit_1053[1 + 3 /* padding */];

/* 80BDA32C-80BDA330 0001+03 .bss       @1052                                                        */
u8 lit_1052[1 + 3 /* padding */];

/* 80BDA330-80BDA334 0001+03 .bss       @1014                                                        */
u8 lit_1014[1 + 3 /* padding */];

/* 80BDA334-80BDA338 0001+03 .bss       @1012                                                        */
u8 lit_1012[1 + 3 /* padding */];

/* 80BDA338-80BDA33C 0001+03 .bss       @1010                                                        */
u8 lit_1010[1 + 3 /* padding */];

/* 80BDA33C-80BDA340 0001+03 .bss       @1009                                                        */
u8 lit_1009[1 + 3 /* padding */];

/* 80BDA340-80BDA34C 000C+00 .bss       @3759                                                        */
u8 lit_3759[12];

/* 80BDA34C-80BDA358 000C+00 .bss       l_chainOffset                                                */
u8 l_chainOffset[12];

/* 80BDA358-80BDA364 000C+00 .bss       @3760                                                        */
u8 lit_3760[12];

/* 80BDA364-80BDA370 000C+00 .bss       l_smokeSetOffset                                             */
u8 l_smokeSetOffset[12];

/* 80BDA370-80BDA374 0004+00 .bss       None                                                         */
u8 data_80BDA370[4];

/* 80BDA374-80BDA378 0004+00 .bss       sInstance__40JASGlobalInstance<19JASDefaultBankTable>        */
u8 data_80BDA374[4];

/* 80BDA378-80BDA37C 0004+00 .bss       sInstance__35JASGlobalInstance<14JASAudioThread>             */
u8 data_80BDA378[4];

/* 80BDA37C-80BDA380 0004+00 .bss       sInstance__27JASGlobalInstance<7Z2SeMgr>                     */
u8 data_80BDA37C[4];

/* 80BDA380-80BDA384 0004+00 .bss       sInstance__28JASGlobalInstance<8Z2SeqMgr>                    */
u8 data_80BDA380[4];

/* 80BDA384-80BDA388 0004+00 .bss       sInstance__31JASGlobalInstance<10Z2SceneMgr>                 */
u8 data_80BDA384[4];

/* 80BDA388-80BDA38C 0004+00 .bss       sInstance__32JASGlobalInstance<11Z2StatusMgr>                */
u8 data_80BDA388[4];

/* 80BDA38C-80BDA390 0004+00 .bss       sInstance__31JASGlobalInstance<10Z2DebugSys>                 */
u8 data_80BDA38C[4];

/* 80BDA390-80BDA394 0004+00 .bss       sInstance__36JASGlobalInstance<15JAISoundStarter>            */
u8 data_80BDA390[4];

/* 80BDA394-80BDA398 0004+00 .bss       sInstance__35JASGlobalInstance<14Z2SoundStarter>             */
u8 data_80BDA394[4];

/* 80BDA398-80BDA39C 0004+00 .bss       sInstance__33JASGlobalInstance<12Z2SpeechMgr2>               */
u8 data_80BDA398[4];

/* 80BDA39C-80BDA3A0 0004+00 .bss       sInstance__28JASGlobalInstance<8JAISeMgr>                    */
u8 data_80BDA39C[4];

/* 80BDA3A0-80BDA3A4 0004+00 .bss       sInstance__29JASGlobalInstance<9JAISeqMgr>                   */
u8 data_80BDA3A0[4];

/* 80BDA3A4-80BDA3A8 0004+00 .bss       sInstance__33JASGlobalInstance<12JAIStreamMgr>               */
u8 data_80BDA3A4[4];

/* 80BDA3A8-80BDA3AC 0004+00 .bss       sInstance__31JASGlobalInstance<10Z2SoundMgr>                 */
u8 data_80BDA3A8[4];

/* 80BDA3AC-80BDA3B0 0004+00 .bss       sInstance__33JASGlobalInstance<12JAISoundInfo>               */
u8 data_80BDA3AC[4];

/* 80BDA3B0-80BDA3B4 0004+00 .bss       sInstance__34JASGlobalInstance<13JAUSoundTable>              */
u8 data_80BDA3B0[4];

/* 80BDA3B4-80BDA3B8 0004+00 .bss       sInstance__38JASGlobalInstance<17JAUSoundNameTable>          */
u8 data_80BDA3B4[4];

/* 80BDA3B8-80BDA3BC 0004+00 .bss       sInstance__33JASGlobalInstance<12JAUSoundInfo>               */
u8 data_80BDA3B8[4];

/* 80BDA3BC-80BDA3C0 0004+00 .bss       sInstance__32JASGlobalInstance<11Z2SoundInfo>                */
u8 data_80BDA3BC[4];

/* 80BDA3C0-80BDA3C4 0004+00 .bss       sInstance__34JASGlobalInstance<13Z2SoundObjMgr>              */
u8 data_80BDA3C0[4];

/* 80BDA3C4-80BDA3C8 0004+00 .bss       sInstance__31JASGlobalInstance<10Z2Audience>                 */
u8 data_80BDA3C4[4];

/* 80BDA3C8-80BDA3CC 0004+00 .bss       sInstance__32JASGlobalInstance<11Z2FxLineMgr>                */
u8 data_80BDA3C8[4];

/* 80BDA3CC-80BDA3D0 0004+00 .bss       sInstance__31JASGlobalInstance<10Z2EnvSeMgr>                 */
u8 data_80BDA3CC[4];

/* 80BDA3D0-80BDA3D4 0004+00 .bss       sInstance__32JASGlobalInstance<11Z2SpeechMgr>                */
u8 data_80BDA3D0[4];

/* 80BDA3D4-80BDA3D8 0004+00 .bss       sInstance__34JASGlobalInstance<13Z2WolfHowlMgr>              */
u8 data_80BDA3D4[4];

