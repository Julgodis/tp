// 
// Generated By: dol2asm
// Translation Unit: d_a_obj_cowdoor
// 

#include "dol2asm.h"
#include "dolphin/types.h"
#include "rel/d/a/obj/d_a_obj_cowdoor/d_a_obj_cowdoor.h"

// 
// Types:
// 

struct daCowdoor_c {
	/* 80BCC7F8 */ void setBaseMtx();
	/* 80BCC86C */ void Create();
	/* 80BCC8C4 */ void CreateHeap();
	/* 80BCC93C */ void create();
	/* 80BCCA1C */ void Execute(f32 (** )[3][4]);
	/* 80BCCA48 */ void Draw();
	/* 80BCCAEC */ void Delete();
};

struct fopAc_ac_c {
};

struct J3DModel {
};

struct J3DModelData {
};

struct request_of_phase_process_class {
};

struct dRes_info_c {
};

struct dRes_control_c {
	/* 8003C37C */ void getRes(char const*, char const*, dRes_info_c*, int);
	/* 8003C6B8 */ void getObjectResName2Index(char const*, char const*);
};

struct dBgW {
};

struct cBgS_PolyInfo {
};

struct cXyz {
};

struct csXyz {
};

struct dBgS_MoveBgActor {
	/* 80078624 */ dBgS_MoveBgActor();
	/* 800786B0 */ bool IsDelete();
	/* 800786B8 */ bool ToFore();
	/* 800786C0 */ bool ToBack();
	/* 800787BC */ void MoveBGCreate(char const*, int, void (*)(dBgW*, void*, cBgS_PolyInfo const&, bool, cXyz*, csXyz*, csXyz*), u32, f32 (* )[3][4]);
	/* 800788DC */ void MoveBGDelete();
	/* 80078950 */ void MoveBGExecute();
};

struct dKy_tevstr_c {
};

struct dScnKy_env_light_c {
	/* 801A37C4 */ void settingTevStruct(int, cXyz*, dKy_tevstr_c*);
	/* 801A4DA0 */ void setLightTevColorType_MAJI(J3DModelData*, dKy_tevstr_c*);
};

// 
// Forward References:
// 

static void daCowdoor_Draw(daCowdoor_c*); // 2
static void daCowdoor_Execute(daCowdoor_c*); // 2
static void daCowdoor_Delete(daCowdoor_c*); // 2
static void daCowdoor_Create(fopAc_ac_c*); // 2

extern "C" void setBaseMtx__11daCowdoor_cFv(); // 1
extern "C" void Create__11daCowdoor_cFv(); // 1
extern "C" void CreateHeap__11daCowdoor_cFv(); // 1
extern "C" void create__11daCowdoor_cFv(); // 1
extern "C" void Execute__11daCowdoor_cFPPA3_A4_f(); // 1
extern "C" void Draw__11daCowdoor_cFv(); // 1
extern "C" void Delete__11daCowdoor_cFv(); // 1
extern "C" static void daCowdoor_Draw__FP11daCowdoor_c(); // 1
extern "C" static void daCowdoor_Execute__FP11daCowdoor_c(); // 1
extern "C" static void daCowdoor_Delete__FP11daCowdoor_c(); // 1
extern "C" static void daCowdoor_Create__FP10fopAc_ac_c(); // 1
extern "C" extern void* g_profile_Obj_Cowdoor[12];

// 
// External References:
// 

void mDoMtx_YrotM(f32 (* )[4], s16); // 2
void mDoExt_modelUpdateDL(J3DModel*); // 2
void mDoExt_J3DModel__create(J3DModelData*, u32, u32); // 2
void fopAcM_setCullSizeBox2(fopAc_ac_c*, J3DModelData*); // 2
void dComIfG_resLoad(request_of_phase_process_class*, char const*); // 2
void dComIfG_resDelete(request_of_phase_process_class*, char const*); // 2
void dBgS_MoveBGProc_TypicalRotY(dBgW*, void*, cBgS_PolyInfo const&, bool, cXyz*, csXyz*, csXyz*); // 2

extern "C" void mDoMtx_YrotM__FPA4_fs(); // 1
extern "C" void mDoExt_modelUpdateDL__FP8J3DModel(); // 1
extern "C" void mDoExt_J3DModel__create__FP12J3DModelDataUlUl(); // 1
extern "C" void fopAcM_setCullSizeBox2__FP10fopAc_ac_cP12J3DModelData(); // 1
extern "C" void dComIfG_resLoad__FP30request_of_phase_process_classPCc(); // 1
extern "C" void dComIfG_resDelete__FP30request_of_phase_process_classPCc(); // 1
extern "C" void getRes__14dRes_control_cFPCcPCcP11dRes_info_ci(); // 1
extern "C" void getObjectResName2Index__14dRes_control_cFPCcPCc(); // 1
extern "C" void dBgS_MoveBGProc_TypicalRotY__FP4dBgWPvRC13cBgS_PolyInfobP4cXyzP5csXyzP5csXyz(); // 1
extern "C" void __ct__16dBgS_MoveBgActorFv(); // 1
extern "C" bool IsDelete__16dBgS_MoveBgActorFv(); // 1
extern "C" bool ToFore__16dBgS_MoveBgActorFv(); // 1
extern "C" bool ToBack__16dBgS_MoveBgActorFv(); // 1
extern "C" void MoveBGCreate__16dBgS_MoveBgActorFPCciPFP4dBgWPvRC13cBgS_PolyInfobP4cXyzP5csXyzP5csXyz_vUlPA3_A4_f(); // 1
extern "C" void MoveBGDelete__16dBgS_MoveBgActorFv(); // 1
extern "C" void MoveBGExecute__16dBgS_MoveBgActorFv(); // 1
extern "C" void settingTevStruct__18dScnKy_env_light_cFiP4cXyzP12dKy_tevstr_c(); // 1
extern "C" void setLightTevColorType_MAJI__18dScnKy_env_light_cFP12J3DModelDataP12dKy_tevstr_c(); // 1
extern "C" void PSMTXCopy(); // 1
extern "C" void PSMTXTrans(); // 1
extern "C" extern void* g_fopAc_Method[8];
extern "C" extern void* g_fpcLf_Method[5 + 1 /* padding */];
extern "C" extern u8 now__14mDoMtx_stack_c[48];
extern "C" extern u8 g_dComIfG_gameInfo[122384];
extern "C" extern u8 g_env_light[4880];
extern "C" extern u8 j3dSys[284];

// 
// Declarations:
// 

/* 80BCC7F8-80BCC86C 0074+00 s=2 e=0 z=0  None .text      setBaseMtx__11daCowdoor_cFv                                  */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void daCowdoor_c::setBaseMtx() {
	nofralloc
#include "asm/rel/d/a/obj/d_a_obj_cowdoor/d_a_obj_cowdoor/setBaseMtx__11daCowdoor_cFv.s"
}
#pragma pop


/* ############################################################################################## */
/* 80BCCBB4-80BCCBB8 0004+00 s=1 e=0 z=0  None .rodata    @3648                                                        */
SECTION_RODATA static u32 const lit_3648 = 0x40A00000;

/* 80BCC86C-80BCC8C4 0058+00 s=1 e=0 z=0  None .text      Create__11daCowdoor_cFv                                      */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void daCowdoor_c::Create() {
	nofralloc
#include "asm/rel/d/a/obj/d_a_obj_cowdoor/d_a_obj_cowdoor/Create__11daCowdoor_cFv.s"
}
#pragma pop


/* ############################################################################################## */
/* 80BCCBB8-80BCCBDC 0024+00 s=3 e=0 z=0  None .rodata    None                                                         */
SECTION_RODATA static u8 const struct_80BCCBB8[36] = {
	/* 80BCCBB8 0009 stringBase_80BCCBB8 @stringBase0 */
	0x41, 0x5F, 0x55, 0x48, 0x44, 0x6F, 0x6F, 0x72, 0x00,
	/* 80BCCBC1 000D data_80BCCBC1 None */
	0x41, 0x5F, 0x55, 0x48, 0x44, 0x6F, 0x6F, 0x72, 0x2E, 0x62, 0x6D, 0x64, 0x00,
	/* 80BCCBCE 000E data_80BCCBCE None */
	0x41, 0x5F, 0x55, 0x48, 0x44, 0x6F, 0x6F, 0x72, 0x2E, 0x64, 0x7A, 0x62, 0x00, 0x00,
};

/* 80BCCBDC-80BCCBE0 0004+00 s=3 e=0 z=0  None .data      l_arcName                                                    */
SECTION_DATA static void* l_arcName = (void*)(((char*)&struct_80BCCBB8)+0x0) /* @stringBase0 */;

/* 80BCCBE0-80BCCBE4 0004+00 s=1 e=0 z=0  None .data      l_bmdName                                                    */
SECTION_DATA static void* l_bmdName = (void*)(((char*)&struct_80BCCBB8)+0x9) /* None */;

/* 80BCC8C4-80BCC93C 0078+00 s=1 e=0 z=0  None .text      CreateHeap__11daCowdoor_cFv                                  */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void daCowdoor_c::CreateHeap() {
	nofralloc
#include "asm/rel/d/a/obj/d_a_obj_cowdoor/d_a_obj_cowdoor/CreateHeap__11daCowdoor_cFv.s"
}
#pragma pop


/* ############################################################################################## */
/* 80BCCBE4-80BCCBE8 0004+00 s=1 e=0 z=0  None .data      l_dzbName                                                    */
SECTION_DATA static void* l_dzbName = (void*)(((char*)&struct_80BCCBB8)+0x16) /* None */;

/* 80BCCBE8-80BCCC08 0020+00 s=1 e=0 z=0  None .data      l_daCowdoor_Method                                           */
SECTION_DATA static void* l_daCowdoor_Method[8] = {
	/* 0    */ (void*)daCowdoor_Create__FP10fopAc_ac_c,
	/* 1    */ (void*)daCowdoor_Delete__FP11daCowdoor_c,
	/* 2    */ (void*)daCowdoor_Execute__FP11daCowdoor_c,
	/* 3    */ (void*)NULL,
	/* 4    */ (void*)daCowdoor_Draw__FP11daCowdoor_c,
	/* 5    */ (void*)NULL,
	/* 6    */ (void*)NULL,
	/* 7    */ (void*)NULL,
};

/* 80BCCC08-80BCCC38 0030+00 s=0 e=0 z=1  None .data      g_profile_Obj_Cowdoor                                        */
SECTION_DATA void* g_profile_Obj_Cowdoor[12] = {
	/* 0    */ (void*)0xFFFFFFFD,
	/* 1    */ (void*)0x0003FFFD,
	/* 2    */ (void*)0x005D0000,
	/* 3    */ (void*)&g_fpcLf_Method,
	/* 4    */ (void*)0x000005AC,
	/* 5    */ (void*)NULL,
	/* 6    */ (void*)NULL,
	/* 7    */ (void*)&g_fopAc_Method,
	/* 8    */ (void*)0x01BF0000,
	/* 9    */ (void*)&l_daCowdoor_Method,
	/* 10   */ (void*)0x00040100,
	/* 11   */ (void*)0x000E0000,
};

/* 80BCCC38-80BCCC60 0028+00 s=1 e=0 z=0  None .data      __vt__11daCowdoor_c                                          */
SECTION_DATA static void* __vt__11daCowdoor_c[10] = {
	/* 0    */ (void*)NULL /* RTTI */,
	/* 1    */ (void*)NULL,
	/* 2    */ (void*)CreateHeap__11daCowdoor_cFv,
	/* 3    */ (void*)Create__11daCowdoor_cFv,
	/* 4    */ (void*)Execute__11daCowdoor_cFPPA3_A4_f,
	/* 5    */ (void*)Draw__11daCowdoor_cFv,
	/* 6    */ (void*)Delete__11daCowdoor_cFv,
	/* 7    */ (void*)IsDelete__16dBgS_MoveBgActorFv,
	/* 8    */ (void*)ToFore__16dBgS_MoveBgActorFv,
	/* 9    */ (void*)ToBack__16dBgS_MoveBgActorFv,
};

/* 80BCC93C-80BCCA1C 00E0+00 s=1 e=0 z=0  None .text      create__11daCowdoor_cFv                                      */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void daCowdoor_c::create() {
	nofralloc
#include "asm/rel/d/a/obj/d_a_obj_cowdoor/d_a_obj_cowdoor/func_80BCC93C.s"
}
#pragma pop


/* 80BCCA1C-80BCCA48 002C+00 s=1 e=0 z=0  None .text      Execute__11daCowdoor_cFPPA3_A4_f                             */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void daCowdoor_c::Execute(f32 (** param_0)[3][4]) {
	nofralloc
#include "asm/rel/d/a/obj/d_a_obj_cowdoor/d_a_obj_cowdoor/Execute__11daCowdoor_cFPPA3_A4_f.s"
}
#pragma pop


/* 80BCCA48-80BCCAEC 00A4+00 s=1 e=0 z=0  None .text      Draw__11daCowdoor_cFv                                        */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void daCowdoor_c::Draw() {
	nofralloc
#include "asm/rel/d/a/obj/d_a_obj_cowdoor/d_a_obj_cowdoor/Draw__11daCowdoor_cFv.s"
}
#pragma pop


/* 80BCCAEC-80BCCB20 0034+00 s=1 e=0 z=0  None .text      Delete__11daCowdoor_cFv                                      */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void daCowdoor_c::Delete() {
	nofralloc
#include "asm/rel/d/a/obj/d_a_obj_cowdoor/d_a_obj_cowdoor/Delete__11daCowdoor_cFv.s"
}
#pragma pop


/* 80BCCB20-80BCCB4C 002C+00 s=1 e=0 z=0  None .text      daCowdoor_Draw__FP11daCowdoor_c                              */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm static void daCowdoor_Draw(daCowdoor_c* param_0) {
	nofralloc
#include "asm/rel/d/a/obj/d_a_obj_cowdoor/d_a_obj_cowdoor/daCowdoor_Draw__FP11daCowdoor_c.s"
}
#pragma pop


/* 80BCCB4C-80BCCB6C 0020+00 s=1 e=0 z=0  None .text      daCowdoor_Execute__FP11daCowdoor_c                           */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm static void daCowdoor_Execute(daCowdoor_c* param_0) {
	nofralloc
#include "asm/rel/d/a/obj/d_a_obj_cowdoor/d_a_obj_cowdoor/daCowdoor_Execute__FP11daCowdoor_c.s"
}
#pragma pop


/* 80BCCB6C-80BCCB8C 0020+00 s=1 e=0 z=0  None .text      daCowdoor_Delete__FP11daCowdoor_c                            */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm static void daCowdoor_Delete(daCowdoor_c* param_0) {
	nofralloc
#include "asm/rel/d/a/obj/d_a_obj_cowdoor/d_a_obj_cowdoor/daCowdoor_Delete__FP11daCowdoor_c.s"
}
#pragma pop


/* 80BCCB8C-80BCCBAC 0020+00 s=1 e=0 z=0  None .text      daCowdoor_Create__FP10fopAc_ac_c                             */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm static void daCowdoor_Create(fopAc_ac_c* param_0) {
	nofralloc
#include "asm/rel/d/a/obj/d_a_obj_cowdoor/d_a_obj_cowdoor/daCowdoor_Create__FP10fopAc_ac_c.s"
}
#pragma pop


