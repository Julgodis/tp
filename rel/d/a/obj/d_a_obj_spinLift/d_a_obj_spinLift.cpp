// 
// Generated By: dol2asm
// Translation Unit: d_a_obj_spinLift
// 

#include "dolphin/types.h"

// 
// Forward References:
// 

extern "C" extern void __ct__16daSpinLift_HIO_cFv();
extern "C" extern void __dt__14mDoHIO_entry_cFv();
extern "C" extern void setBaseMtx__12daSpinLift_cFv();
extern "C" extern void CreateHeap__12daSpinLift_cFv();
extern "C" extern void create__12daSpinLift_cFv();
extern "C" extern void Execute__12daSpinLift_cFPPA3_A4_f();
extern "C" extern void moveLift__12daSpinLift_cFv();
extern "C" extern void init_modeWait__12daSpinLift_cFv();
extern "C" extern void modeWait__12daSpinLift_cFv();
extern "C" extern void init_modeUpMove__12daSpinLift_cFv();
extern "C" extern void modeUpMove__12daSpinLift_cFv();
extern "C" extern void init_modeDownMove__12daSpinLift_cFv();
extern "C" extern void modeDownMove__12daSpinLift_cFv();
extern "C" extern void init_modeMoveEnd__12daSpinLift_cFv();
extern "C" extern void modeMoveEnd__12daSpinLift_cFv();
extern "C" extern void Draw__12daSpinLift_cFv();
extern "C" extern void Delete__12daSpinLift_cFv();
extern "C" extern void daSpinLift_Draw__FP12daSpinLift_c();
extern "C" extern void daSpinLift_Execute__FP12daSpinLift_c();
extern "C" extern void daSpinLift_Delete__FP12daSpinLift_c();
extern "C" extern void daSpinLift_Create__FP10fopAc_ac_c();
extern "C" extern void __dt__16daSpinLift_HIO_cFv();
extern "C" extern void __sinit_d_a_obj_spinLift_cpp();
SECTION_RODATA extern const u8 lit_3637[4];
SECTION_RODATA extern const u8 l_bmdIdx[36];
SECTION_RODATA extern const u8 l_dzbIdx[36];
SECTION_RODATA extern const u32 lit_3731;
SECTION_RODATA extern const u8 lit_3733[8];
SECTION_RODATA extern const u8 lit_3735[8];
SECTION_RODATA extern const u32 lit_3877;
SECTION_RODATA extern const u32 lit_3878;
SECTION_RODATA extern const u32 lit_3879;
SECTION_RODATA extern const u32 lit_3880;
SECTION_RODATA extern const u32 lit_3907;
SECTION_RODATA extern const u8 stringBase0[88];
SECTION_DATA extern u8 cNullVec__6Z2Calc[12];
SECTION_DATA extern u32 lit_1787;
SECTION_DATA extern u8 pad_80CE4D98[16];
SECTION_DATA extern u8 l_resNameIdx[36];
SECTION_DATA extern u8 lit_3749[12];
SECTION_DATA extern u8 lit_3750[12];
SECTION_DATA extern u8 lit_3751[12];
SECTION_DATA extern u8 lit_3752[12];
SECTION_DATA extern u8 data_80CE4DFC[48];
SECTION_DATA extern u8 l_daSpinLift_Method[32];
SECTION_DATA extern u8 g_profile_Obj_SpinLift[48];
SECTION_DATA extern void*const __vt__12daSpinLift_c[10];
SECTION_DATA extern void*const __vt__16daSpinLift_HIO_c[3];
SECTION_DATA extern void*const __vt__14mDoHIO_entry_c[3];
SECTION_BSS extern u8 lit_3631[12];
SECTION_BSS extern u8 l_HIO[16];
SECTION_BSS extern u8 data_80CE4EE4[4];

// 
// External References:
// 

extern "C" extern void _unresolved();
extern "C" extern void __register_global_object();

// 
// Declarations:
// 

/* 80CE3DAC-80CE3DE4 0038+00 .text      __ct__16daSpinLift_HIO_cFv                                   */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
ASM_FUNCTION(__ct__16daSpinLift_HIO_cFv) {
	nofralloc
#include "asm/rel/d/a/obj/d_a_obj_spinLift/d_a_obj_spinLift/__ct__16daSpinLift_HIO_cFv.s"
}
#pragma pop


/* 80CE3DE4-80CE3E2C 0048+00 .text      __dt__14mDoHIO_entry_cFv                                     */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
ASM_FUNCTION(__dt__14mDoHIO_entry_cFv) {
	nofralloc
#include "asm/rel/d/a/obj/d_a_obj_spinLift/d_a_obj_spinLift/__dt__14mDoHIO_entry_cFv.s"
}
#pragma pop


/* 80CE3E2C-80CE3E9C 0070+00 .text      setBaseMtx__12daSpinLift_cFv                                 */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
ASM_FUNCTION(setBaseMtx__12daSpinLift_cFv) {
	nofralloc
#include "asm/rel/d/a/obj/d_a_obj_spinLift/d_a_obj_spinLift/setBaseMtx__12daSpinLift_cFv.s"
}
#pragma pop


/* 80CE3E9C-80CE3F1C 0080+00 .text      CreateHeap__12daSpinLift_cFv                                 */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
ASM_FUNCTION(CreateHeap__12daSpinLift_cFv) {
	nofralloc
#include "asm/rel/d/a/obj/d_a_obj_spinLift/d_a_obj_spinLift/CreateHeap__12daSpinLift_cFv.s"
}
#pragma pop


/* 80CE3F1C-80CE40FC 01E0+00 .text      create__12daSpinLift_cFv                                     */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
ASM_FUNCTION(create__12daSpinLift_cFv) {
	nofralloc
#include "asm/rel/d/a/obj/d_a_obj_spinLift/d_a_obj_spinLift/create__12daSpinLift_cFv.s"
}
#pragma pop


/* 80CE40FC-80CE414C 0050+00 .text      Execute__12daSpinLift_cFPPA3_A4_f                            */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
ASM_FUNCTION(Execute__12daSpinLift_cFPPA3_A4_f) {
	nofralloc
#include "asm/rel/d/a/obj/d_a_obj_spinLift/d_a_obj_spinLift/Execute__12daSpinLift_cFPPA3_A4_f.s"
}
#pragma pop


/* 80CE414C-80CE4290 0144+00 .text      moveLift__12daSpinLift_cFv                                   */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
ASM_FUNCTION(moveLift__12daSpinLift_cFv) {
	nofralloc
#include "asm/rel/d/a/obj/d_a_obj_spinLift/d_a_obj_spinLift/moveLift__12daSpinLift_cFv.s"
}
#pragma pop


/* 80CE4290-80CE429C 000C+00 .text      init_modeWait__12daSpinLift_cFv                              */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
ASM_FUNCTION(init_modeWait__12daSpinLift_cFv) {
	nofralloc
#include "asm/rel/d/a/obj/d_a_obj_spinLift/d_a_obj_spinLift/init_modeWait__12daSpinLift_cFv.s"
}
#pragma pop


/* 80CE429C-80CE42A0 0004+00 .text      modeWait__12daSpinLift_cFv                                   */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
ASM_FUNCTION(modeWait__12daSpinLift_cFv) {
	nofralloc
#include "asm/rel/d/a/obj/d_a_obj_spinLift/d_a_obj_spinLift/modeWait__12daSpinLift_cFv.s"
}
#pragma pop


/* 80CE42A0-80CE42C4 0024+00 .text      init_modeUpMove__12daSpinLift_cFv                            */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
ASM_FUNCTION(init_modeUpMove__12daSpinLift_cFv) {
	nofralloc
#include "asm/rel/d/a/obj/d_a_obj_spinLift/d_a_obj_spinLift/init_modeUpMove__12daSpinLift_cFv.s"
}
#pragma pop


/* 80CE42C4-80CE468C 03C8+00 .text      modeUpMove__12daSpinLift_cFv                                 */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
ASM_FUNCTION(modeUpMove__12daSpinLift_cFv) {
	nofralloc
#include "asm/rel/d/a/obj/d_a_obj_spinLift/d_a_obj_spinLift/modeUpMove__12daSpinLift_cFv.s"
}
#pragma pop


/* 80CE468C-80CE4698 000C+00 .text      init_modeDownMove__12daSpinLift_cFv                          */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
ASM_FUNCTION(init_modeDownMove__12daSpinLift_cFv) {
	nofralloc
#include "asm/rel/d/a/obj/d_a_obj_spinLift/d_a_obj_spinLift/init_modeDownMove__12daSpinLift_cFv.s"
}
#pragma pop


/* 80CE4698-80CE4790 00F8+00 .text      modeDownMove__12daSpinLift_cFv                               */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
ASM_FUNCTION(modeDownMove__12daSpinLift_cFv) {
	nofralloc
#include "asm/rel/d/a/obj/d_a_obj_spinLift/d_a_obj_spinLift/modeDownMove__12daSpinLift_cFv.s"
}
#pragma pop


/* 80CE4790-80CE4A9C 030C+00 .text      init_modeMoveEnd__12daSpinLift_cFv                           */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
ASM_FUNCTION(init_modeMoveEnd__12daSpinLift_cFv) {
	nofralloc
#include "asm/rel/d/a/obj/d_a_obj_spinLift/d_a_obj_spinLift/init_modeMoveEnd__12daSpinLift_cFv.s"
}
#pragma pop


/* 80CE4A9C-80CE4AA0 0004+00 .text      modeMoveEnd__12daSpinLift_cFv                                */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
ASM_FUNCTION(modeMoveEnd__12daSpinLift_cFv) {
	nofralloc
#include "asm/rel/d/a/obj/d_a_obj_spinLift/d_a_obj_spinLift/modeMoveEnd__12daSpinLift_cFv.s"
}
#pragma pop


/* 80CE4AA0-80CE4B44 00A4+00 .text      Draw__12daSpinLift_cFv                                       */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
ASM_FUNCTION(Draw__12daSpinLift_cFv) {
	nofralloc
#include "asm/rel/d/a/obj/d_a_obj_spinLift/d_a_obj_spinLift/Draw__12daSpinLift_cFv.s"
}
#pragma pop


/* 80CE4B44-80CE4B84 0040+00 .text      Delete__12daSpinLift_cFv                                     */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
ASM_FUNCTION(Delete__12daSpinLift_cFv) {
	nofralloc
#include "asm/rel/d/a/obj/d_a_obj_spinLift/d_a_obj_spinLift/Delete__12daSpinLift_cFv.s"
}
#pragma pop


/* 80CE4B84-80CE4BB0 002C+00 .text      daSpinLift_Draw__FP12daSpinLift_c                            */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
ASM_FUNCTION(daSpinLift_Draw__FP12daSpinLift_c) {
	nofralloc
#include "asm/rel/d/a/obj/d_a_obj_spinLift/d_a_obj_spinLift/daSpinLift_Draw__FP12daSpinLift_c.s"
}
#pragma pop


/* 80CE4BB0-80CE4BD0 0020+00 .text      daSpinLift_Execute__FP12daSpinLift_c                         */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
ASM_FUNCTION(daSpinLift_Execute__FP12daSpinLift_c) {
	nofralloc
#include "asm/rel/d/a/obj/d_a_obj_spinLift/d_a_obj_spinLift/daSpinLift_Execute__FP12daSpinLift_c.s"
}
#pragma pop


/* 80CE4BD0-80CE4BF0 0020+00 .text      daSpinLift_Delete__FP12daSpinLift_c                          */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
ASM_FUNCTION(daSpinLift_Delete__FP12daSpinLift_c) {
	nofralloc
#include "asm/rel/d/a/obj/d_a_obj_spinLift/d_a_obj_spinLift/daSpinLift_Delete__FP12daSpinLift_c.s"
}
#pragma pop


/* 80CE4BF0-80CE4C10 0020+00 .text      daSpinLift_Create__FP10fopAc_ac_c                            */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
ASM_FUNCTION(daSpinLift_Create__FP10fopAc_ac_c) {
	nofralloc
#include "asm/rel/d/a/obj/d_a_obj_spinLift/d_a_obj_spinLift/daSpinLift_Create__FP10fopAc_ac_c.s"
}
#pragma pop


/* 80CE4C10-80CE4C6C 005C+00 .text      __dt__16daSpinLift_HIO_cFv                                   */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
ASM_FUNCTION(__dt__16daSpinLift_HIO_cFv) {
	nofralloc
#include "asm/rel/d/a/obj/d_a_obj_spinLift/d_a_obj_spinLift/__dt__16daSpinLift_HIO_cFv.s"
}
#pragma pop


/* 80CE4C6C-80CE4CA8 003C+00 .text      __sinit_d_a_obj_spinLift_cpp                                 */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
ASM_FUNCTION(__sinit_d_a_obj_spinLift_cpp) {
	nofralloc
#include "asm/rel/d/a/obj/d_a_obj_spinLift/d_a_obj_spinLift/__sinit_d_a_obj_spinLift_cpp.s"
}
#pragma pop


/* ############################################################################################## */
/* 80CE4CBC-80CE4CC0 0004+00 .rodata    @3637                                                        */
SECTION_RODATA const u8 lit_3637[4] = {
	0x00, 0x00, 0x00, 0x00,
};

/* 80CE4CC0-80CE4CE4 0024+00 .rodata    l_bmdIdx                                                     */
SECTION_RODATA const u8 l_bmdIdx[36] = {
	0x00, 0x00, 0x00, 0x04, 0x00, 0x00, 0x00, 0x04, 0x00, 0x00, 0x00, 0x04, 0x00, 0x00, 0x00, 0x04,
	0x00, 0x00, 0x00, 0x04, 0x00, 0x00, 0x00, 0x04, 0x00, 0x00, 0x00, 0x04, 0x00, 0x00, 0x00, 0x04,
	0x00, 0x00, 0x00, 0x04,
};

/* 80CE4CE4-80CE4D08 0024+00 .rodata    l_dzbIdx                                                     */
SECTION_RODATA const u8 l_dzbIdx[36] = {
	0x00, 0x00, 0x00, 0x07, 0x00, 0x00, 0x00, 0x07, 0x00, 0x00, 0x00, 0x07, 0x00, 0x00, 0x00, 0x07,
	0x00, 0x00, 0x00, 0x07, 0x00, 0x00, 0x00, 0x07, 0x00, 0x00, 0x00, 0x07, 0x00, 0x00, 0x00, 0x07,
	0x00, 0x00, 0x00, 0x07,
};

/* 80CE4D08-80CE4D0C 0004+00 .rodata    @3731                                                        */
SECTION_RODATA const u32 lit_3731 = 0x42480000;

/* 80CE4D0C-80CE4D14 0008+00 .rodata    @3733                                                        */
SECTION_RODATA const u8 lit_3733[8] = {
	0x43, 0x30, 0x00, 0x00, 0x80, 0x00, 0x00, 0x00,
};

/* 80CE4D14-80CE4D1C 0008+00 .rodata    @3735                                                        */
SECTION_RODATA const u8 lit_3735[8] = {
	0x43, 0x30, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
};

/* 80CE4D1C-80CE4D20 0004+00 .rodata    @3877                                                        */
SECTION_RODATA const u32 lit_3877 = 0x41F00000;

/* 80CE4D20-80CE4D24 0004+00 .rodata    @3878                                                        */
SECTION_RODATA const u32 lit_3878 = 0x3F800000;

/* 80CE4D24-80CE4D28 0004+00 .rodata    @3879                                                        */
SECTION_RODATA const u32 lit_3879 = 0x3DCCCCCD;

/* 80CE4D28-80CE4D2C 0004+00 .rodata    @3880                                                        */
SECTION_RODATA const u32 lit_3880 = 0xBF800000;

/* 80CE4D2C-80CE4D30 0004+00 .rodata    @3907                                                        */
SECTION_RODATA const u32 lit_3907 = 0x3E99999A;

/* 80CE4D30-80CE4D88 0058+00 .rodata    @stringBase0                                                 */
#pragma push
#pragma force_active on
#pragma section ".dead"
SECTION_DEAD char* const stringBase_80CE4D30 = "L4_N_Entr";
SECTION_DEAD char* const stringBase_80CE4D3A = "L4_N_SlpH";
SECTION_DEAD char* const stringBase_80CE4D44 = "L4_N_SlpL";
SECTION_DEAD char* const stringBase_80CE4D4E = "L4_Center";
SECTION_DEAD char* const stringBase_80CE4D58 = "L4_Switch";
SECTION_DEAD char* const stringBase_80CE4D62 = "L4_S_Slp";
SECTION_DEAD char* const stringBase_80CE4D6B = "L4_Wal_ZE";
SECTION_DEAD char* const stringBase_80CE4D75 = "L4_Wal_ZW";
SECTION_DEAD char* const stringBase_80CE4D7F = "L4_Wal_X";
#pragma pop

/* 80CE4D88-80CE4D94 000C+00 .data      cNullVec__6Z2Calc                                            */
u8 cNullVec__6Z2Calc[12] = {
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
};

/* 80CE4D94-80CE4D98 0004+00 .data      @1787                                                        */
u32 lit_1787 = 0x02000201;

/* 80CE4D98-80CE4DA8 0010+00 .data      None                                                         */
u8 pad_80CE4D98[16] = {
	0x40, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x3F, 0xE0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
};

/* 80CE4DA8-80CE4DCC 0024+00 .data      l_resNameIdx                                                 */
u8 l_resNameIdx[36] = {
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
	0x00, 0x00, 0x00, 0x00,
};

/* 80CE4DCC-80CE4DD8 000C+00 .data      @3749                                                        */
u8 lit_3749[12] = {
	0x00, 0x00, 0x00, 0x00, 0xFF, 0xFF, 0xFF, 0xFF, 0x00, 0x00, 0x00, 0x00,
};

/* 80CE4DD8-80CE4DE4 000C+00 .data      @3750                                                        */
u8 lit_3750[12] = {
	0x00, 0x00, 0x00, 0x00, 0xFF, 0xFF, 0xFF, 0xFF, 0x00, 0x00, 0x00, 0x00,
};

/* 80CE4DE4-80CE4DF0 000C+00 .data      @3751                                                        */
u8 lit_3751[12] = {
	0x00, 0x00, 0x00, 0x00, 0xFF, 0xFF, 0xFF, 0xFF, 0x00, 0x00, 0x00, 0x00,
};

/* 80CE4DF0-80CE4DFC 000C+00 .data      @3752                                                        */
u8 lit_3752[12] = {
	0x00, 0x00, 0x00, 0x00, 0xFF, 0xFF, 0xFF, 0xFF, 0x00, 0x00, 0x00, 0x00,
};

/* 80CE4DFC-80CE4E2C 0030+00 .data      mode_proc$3748                                               */
u8 data_80CE4DFC[48] = {
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
};

/* 80CE4E2C-80CE4E4C 0020+00 .data      l_daSpinLift_Method                                          */
u8 l_daSpinLift_Method[32] = {
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
};

/* 80CE4E4C-80CE4E7C 0030+00 .data      g_profile_Obj_SpinLift                                       */
u8 g_profile_Obj_SpinLift[48] = {
	0xFF, 0xFF, 0xFF, 0xFD, 0x00, 0x03, 0xFF, 0xFD, 0x00, 0x41, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
	0x00, 0x00, 0x05, 0xC0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
	0x02, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x04, 0x01, 0x00, 0x00, 0x0E, 0x00, 0x00,
};

/* 80CE4E7C-80CE4EA4 0028+00 .data      __vt__12daSpinLift_c                                         */
void* const __vt__12daSpinLift_c[10] = {
	NULL, /* RTTI */
	NULL,
	NULL,
	NULL,
	NULL,
	NULL,
	NULL,
	NULL,
	NULL,
	NULL,
};

/* 80CE4EA4-80CE4EB0 000C+00 .data      __vt__16daSpinLift_HIO_c                                     */
void* const __vt__16daSpinLift_HIO_c[3] = {
	NULL, /* RTTI */
	NULL,
	NULL,
};

/* 80CE4EB0-80CE4EBC 000C+00 .data      __vt__14mDoHIO_entry_c                                       */
void* const __vt__14mDoHIO_entry_c[3] = {
	NULL, /* RTTI */
	NULL,
	NULL,
};

/* 80CE4EC8-80CE4ED4 000C+00 .bss       @3631                                                        */
u8 lit_3631[12];

/* 80CE4ED4-80CE4EE4 0010+00 .bss       l_HIO                                                        */
u8 l_HIO[16];

/* 80CE4EE4-80CE4EE8 0004+00 .bss       None                                                         */
u8 data_80CE4EE4[4];

