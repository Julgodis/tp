//
// Generated By: dol2asm
// Translation Unit: d_a_obj_flag2
//

#include "rel/d/a/obj/d_a_obj_flag2/d_a_obj_flag2.h"
#include "dol2asm.h"
#include "dolphin/types.h"

//
// Types:
//

struct request_of_phase_process_class {};

struct Vec {};

struct cXyz {
    /* 80266B34 */ void operator-(Vec const&) const;
    /* 80266B84 */ void operator*(f32) const;
    /* 80266CBC */ void outprod(Vec const&) const;
    /* 80266DC4 */ void normZC() const;
    /* 80266F48 */ void normalizeZP();
    /* 80BEC790 */ ~cXyz();
    /* 80BEDB70 */ cXyz();
};

struct mDoMtx_stack_c {
    /* 8000CD64 */ void transS(cXyz const&);
};

struct fopAc_ac_c {
    /* 80018B64 */ fopAc_ac_c();
    /* 80018C8C */ ~fopAc_ac_c();
};

struct daSetBgObj_c {
    /* 80031870 */ void getArcName(fopAc_ac_c*);
};

struct daObjFlag2_c {
    /* 80BED22C */ void create_init();
    /* 80BED368 */ void initBaseMtx();
    /* 80BED3B8 */ void initCollision();
    /* 80BED44C */ void setCollision();
    /* 80BED480 */ void createHeap();
    /* 80BED6A0 */ void create();
    /* 80BED7A4 */ daObjFlag2_c();
    /* 80BEDCE0 */ void draw();
    /* 80BEDEE0 */ ~daObjFlag2_c();
};

struct J3DModelData {};

struct dKy_tevstr_c {};

struct dScnKy_env_light_c {
    /* 801A37C4 */ void settingTevStruct(int, cXyz*, dKy_tevstr_c*);
    /* 801A4DA0 */ void setLightTevColorType_MAJI(J3DModelData*, dKy_tevstr_c*);
};

struct dRes_info_c {};

struct dRes_control_c {
    /* 8003C37C */ void getRes(char const*, char const*, dRes_info_c*, int);
};

struct dCcD_Stts {
    /* 80083860 */ void Init(int, int, fopAc_ac_c*);
};

struct dCcD_SrcSph {};

struct dCcD_SrcCyl {};

struct dCcD_Sph {
    /* 80084A34 */ void Set(dCcD_SrcSph const&);
};

struct dCcD_GStts {
    /* 80083760 */ dCcD_GStts();
    /* 80BEDC84 */ ~dCcD_GStts();
};

struct dCcD_GObjInf {
    /* 80083A28 */ dCcD_GObjInf();
    /* 800840E4 */ ~dCcD_GObjInf();
    /* 80084460 */ void ChkTgHit();
    /* 800844F8 */ void GetTgHitObj();
};

struct dCcD_Cyl {
    /* 800848B4 */ void Set(dCcD_SrcCyl const&);
};

struct cM3dGSph {
    /* 8026F648 */ void SetC(cXyz const&);
    /* 80BEDB74 */ ~cM3dGSph();
};

struct cM3dGCyl {
    /* 8026F1DC */ void SetC(cXyz const&);
    /* 8026F1F8 */ void SetH(f32);
    /* 8026F200 */ void SetR(f32);
    /* 80BEDBF4 */ ~cM3dGCyl();
};

struct cM3dGAab {
    /* 80BEDC3C */ ~cM3dGAab();
};

struct cCcD_Obj {};

struct cCcS {
    /* 80264BA8 */ void Set(cCcD_Obj*);
};

struct cCcD_GStts {
    /* 80BEE070 */ ~cCcD_GStts();
};

struct JAISoundID {};

struct Z2SeMgr {
    /* 802AC50C */ void seStartLevel(JAISoundID, Vec const*, u32, s8, f32, f32, f32, f32, u8);
};

struct J3DSys {
    /* 8031073C */ void reinitGX();
};

struct J3DPacket;
struct J3DDrawBuffer {
    /* 8032548C */ void entryImm(J3DPacket*, u16);
};

struct J3DPacket {
    /* 80312750 */ bool entry(J3DDrawBuffer*);
};

struct J3DModel {};

struct J3DLightObj {
    /* 80BEDBBC */ J3DLightObj();
};

struct J3DLightInfo {
    /* 803256C4 */ void operator=(J3DLightInfo const&);
};

struct FlagCloth_c {
    /* 80BEC658 */ void initFlagPos(cXyz*, fopAc_ac_c*);
    /* 80BEC7CC */ void calcFlagFactor(cXyz*, cXyz*, cXyz*, int);
    /* 80BEC928 */ void calcFlagFactorSub(cXyz*, cXyz*, cXyz*, f32);
    /* 80BECAE0 */ void calcFlagNormal(cXyz*, int);
    /* 80BECC34 */ void calcFlagNormalBack();
    /* 80BECC78 */ void initCcSphere(fopAc_ac_c*);
    /* 80BECCE4 */ void setCcSphere();
    /* 80BECD98 */ void execute();
    /* 80BECF30 */ void draw();
    /* 80BED9C4 */ ~FlagCloth_c();
    /* 80BEE0B8 */ void getTargetPos();
};

//
// Forward References:
//

static void createSolidHeap(fopAc_ac_c*);
static void daObjFlag2_Draw(daObjFlag2_c*);
static void daObjFlag2_Execute(daObjFlag2_c*);
static bool daObjFlag2_IsDelete(daObjFlag2_c*);
static void daObjFlag2_Delete(daObjFlag2_c*);
static void daObjFlag2_Create(fopAc_ac_c*);
extern "C" extern char const* const stringBase0;
extern "C" extern void* g_profile_Obj_Flag2[12];

extern "C" void initFlagPos__11FlagCloth_cFP4cXyzP10fopAc_ac_c();
extern "C" void __dt__4cXyzFv();
extern "C" void calcFlagFactor__11FlagCloth_cFP4cXyzP4cXyzP4cXyzi();
extern "C" void calcFlagFactorSub__11FlagCloth_cFP4cXyzP4cXyzP4cXyzf();
extern "C" void calcFlagNormal__11FlagCloth_cFP4cXyzi();
extern "C" void calcFlagNormalBack__11FlagCloth_cFv();
extern "C" void initCcSphere__11FlagCloth_cFP10fopAc_ac_c();
extern "C" void setCcSphere__11FlagCloth_cFv();
extern "C" void execute__11FlagCloth_cFv();
extern "C" void draw__11FlagCloth_cFv();
extern "C" void create_init__12daObjFlag2_cFv();
extern "C" void initBaseMtx__12daObjFlag2_cFv();
extern "C" void initCollision__12daObjFlag2_cFv();
extern "C" void setCollision__12daObjFlag2_cFv();
extern "C" void createHeap__12daObjFlag2_cFv();
extern "C" static void createSolidHeap__FP10fopAc_ac_c();
extern "C" void create__12daObjFlag2_cFv();
extern "C" void __ct__12daObjFlag2_cFv();
extern "C" void __dt__11FlagCloth_cFv();
extern "C" void __ct__4cXyzFv();
extern "C" void __dt__8cM3dGSphFv();
extern "C" void __ct__11J3DLightObjFv();
extern "C" void __dt__8cM3dGCylFv();
extern "C" void __dt__8cM3dGAabFv();
extern "C" void __dt__10dCcD_GSttsFv();
extern "C" void draw__12daObjFlag2_cFv();
extern "C" static void daObjFlag2_Draw__FP12daObjFlag2_c();
extern "C" static void daObjFlag2_Execute__FP12daObjFlag2_c();
extern "C" static bool daObjFlag2_IsDelete__FP12daObjFlag2_c();
extern "C" static void daObjFlag2_Delete__FP12daObjFlag2_c();
extern "C" void __dt__12daObjFlag2_cFv();
extern "C" static void daObjFlag2_Create__FP10fopAc_ac_c();
extern "C" void __dt__10cCcD_GSttsFv();
extern "C" void getTargetPos__11FlagCloth_cFv();
extern "C" extern char const* const stringBase0;
extern "C" extern void* g_profile_Obj_Flag2[12];

//
// External References:
//

void mDoExt_modelUpdateDL(J3DModel*);
void mDoExt_J3DModel__create(J3DModelData*, u32, u32);
void fopAcM_entrySolidHeap(fopAc_ac_c*, int (*)(fopAc_ac_c*), u32);
void fopAcM_setCullSizeBox(fopAc_ac_c*, f32, f32, f32, f32, f32, f32);
void dComIfG_resLoad(request_of_phase_process_class*, char const*);
void dComIfG_resDelete(request_of_phase_process_class*, char const*);
void dKyw_get_AllWind_vec(cXyz*, cXyz*, f32*);
void dKy_setLight_again();
void dKy_Global_amb_set(dKy_tevstr_c*);
void dKy_GxFog_tevstr_set(dKy_tevstr_c*);
void dKy_setLight_mine(dKy_tevstr_c*);
void dKy_tevstr_init(dKy_tevstr_c*, s8, u8);
void cM_rndFX(f32);
void operator delete(void*);
extern "C" extern u8 const j3dDefaultLightInfo[52];
extern "C" extern void* g_fopAc_Method[8];
extern "C" extern void* g_fpcLf_Method[5 + 1 /* padding */];
extern "C" extern void* __vt__8dCcD_Sph[36];
extern "C" extern void* __vt__8dCcD_Cyl[36];
extern "C" extern void* __vt__9dCcD_Stts[11];
extern "C" extern void* __vt__12cCcD_SphAttr[25];
extern "C" extern void* __vt__12cCcD_CylAttr[25];
extern "C" extern void* __vt__14cCcD_ShapeAttr[22];
extern "C" extern void* __vt__9cCcD_Stts[8];
extern "C" extern void* __vt__9J3DPacket[5];
extern "C" extern u8 now__14mDoMtx_stack_c[48];
extern "C" extern u8 g_dComIfG_gameInfo[122384];
extern "C" extern u8 g_env_light[4880];
extern "C" extern f32 Zero__4cXyz[3];
extern "C" extern u8 j3dSys[284];
extern "C" extern u32 __float_nan;
extern "C" extern u8 mAudioMgrPtr__10Z2AudioMgr[4 + 4 /* padding */];
extern "C" extern u8 sOldVcdVatCmd__8J3DShape[4];

extern "C" void transS__14mDoMtx_stack_cFRC4cXyz();
extern "C" void mDoExt_modelUpdateDL__FP8J3DModel();
extern "C" void mDoExt_J3DModel__create__FP12J3DModelDataUlUl();
extern "C" void __ct__10fopAc_ac_cFv();
extern "C" void __dt__10fopAc_ac_cFv();
extern "C" void fopAcM_entrySolidHeap__FP10fopAc_ac_cPFP10fopAc_ac_c_iUl();
extern "C" void fopAcM_setCullSizeBox__FP10fopAc_ac_cffffff();
extern "C" void dComIfG_resLoad__FP30request_of_phase_process_classPCc();
extern "C" void dComIfG_resDelete__FP30request_of_phase_process_classPCc();
extern "C" void getArcName__12daSetBgObj_cFP10fopAc_ac_c();
extern "C" void getRes__14dRes_control_cFPCcPCcP11dRes_info_ci();
extern "C" void dKyw_get_AllWind_vec__FP4cXyzP4cXyzPf();
extern "C" void __ct__10dCcD_GSttsFv();
extern "C" void Init__9dCcD_SttsFiiP10fopAc_ac_c();
extern "C" void __ct__12dCcD_GObjInfFv();
extern "C" void __dt__12dCcD_GObjInfFv();
extern "C" void ChkTgHit__12dCcD_GObjInfFv();
extern "C" void GetTgHitObj__12dCcD_GObjInfFv();
extern "C" void Set__8dCcD_CylFRC11dCcD_SrcCyl();
extern "C" void Set__8dCcD_SphFRC11dCcD_SrcSph();
extern "C" void settingTevStruct__18dScnKy_env_light_cFiP4cXyzP12dKy_tevstr_c();
extern "C" void setLightTevColorType_MAJI__18dScnKy_env_light_cFP12J3DModelDataP12dKy_tevstr_c();
extern "C" void dKy_setLight_again__Fv();
extern "C" void dKy_Global_amb_set__FP12dKy_tevstr_c();
extern "C" void dKy_GxFog_tevstr_set__FP12dKy_tevstr_c();
extern "C" void dKy_setLight_mine__FP12dKy_tevstr_c();
extern "C" void dKy_tevstr_init__FP12dKy_tevstr_cScUc();
extern "C" void Set__4cCcSFP8cCcD_Obj();
extern "C" void __mi__4cXyzCFRC3Vec();
extern "C" void __ml__4cXyzCFf();
extern "C" void outprod__4cXyzCFRC3Vec();
extern "C" void normZC__4cXyzCFv();
extern "C" void normalizeZP__4cXyzFv();
extern "C" void cM_rndFX__Ff();
extern "C" void SetC__8cM3dGCylFRC4cXyz();
extern "C" void SetH__8cM3dGCylFf();
extern "C" void SetR__8cM3dGCylFf();
extern "C" void SetC__8cM3dGSphFRC4cXyz();
extern "C" void seStartLevel__7Z2SeMgrF10JAISoundIDPC3VecUlScffffUc();
extern "C" void __dl__FPv();
extern "C" void reinitGX__6J3DSysFv();
extern "C" bool entry__9J3DPacketFP13J3DDrawBuffer();
extern "C" void entryImm__13J3DDrawBufferFP9J3DPacketUs();
extern "C" void __as__12J3DLightInfoFRC12J3DLightInfo();
extern "C" void DCStoreRangeNoSync();
extern "C" void PSMTXCopy();
extern "C" void PSMTXConcat();
extern "C" void PSVECAdd();
extern "C" void PSVECScale();
extern "C" void PSVECSquareMag();
extern "C" void PSVECDotProduct();
extern "C" void GXSetVtxDesc();
extern "C" void GXClearVtxDesc();
extern "C" void GXSetVtxAttrFmt();
extern "C" void GXSetArray();
extern "C" void GXSetTexCoordGen2();
extern "C" void GXSetNumTexGens();
extern "C" void GXSetCullMode();
extern "C" void GXSetNumChans();
extern "C" void GXSetChanCtrl();
extern "C" void GXInitTexObj();
extern "C" void GXInitTexObjLOD();
extern "C" void GXLoadTexObj();
extern "C" void GXSetNumIndStages();
extern "C" void GXSetTevColorIn();
extern "C" void GXSetTevAlphaIn();
extern "C" void GXSetTevColorOp();
extern "C" void GXSetTevAlphaOp();
extern "C" void GXSetTevColor();
extern "C" void GXSetTevKColor();
extern "C" void GXSetTevKColorSel();
extern "C" void GXSetTevKAlphaSel();
extern "C" void GXSetTevSwapMode();
extern "C" void GXSetAlphaCompare();
extern "C" void GXSetTevOrder();
extern "C" void GXSetNumTevStages();
extern "C" void GXSetZMode();
extern "C" void GXSetZCompLoc();
extern "C" void GXCallDisplayList();
extern "C" void GXLoadPosMtxImm();
extern "C" void GXLoadNrmMtxImm();
extern "C" void GXSetClipMode();
extern "C" void __destroy_arr();
extern "C" void __construct_array();
extern "C" void __cvt_fp2unsigned();
extern "C" void _savegpr_23();
extern "C" void _savegpr_26();
extern "C" void _savegpr_28();
extern "C" void _savegpr_29();
extern "C" void _restgpr_23();
extern "C" void _restgpr_26();
extern "C" void _restgpr_28();
extern "C" void _restgpr_29();
extern "C" void abs();
extern "C" void sprintf();
extern "C" extern u8 const j3dDefaultLightInfo[52];
extern "C" extern void* g_fopAc_Method[8];
extern "C" extern void* g_fpcLf_Method[5 + 1 /* padding */];
extern "C" extern void* __vt__8dCcD_Sph[36];
extern "C" extern void* __vt__8dCcD_Cyl[36];
extern "C" extern void* __vt__9dCcD_Stts[11];
extern "C" extern void* __vt__12cCcD_SphAttr[25];
extern "C" extern void* __vt__12cCcD_CylAttr[25];
extern "C" extern void* __vt__14cCcD_ShapeAttr[22];
extern "C" extern void* __vt__9cCcD_Stts[8];
extern "C" extern void* __vt__9J3DPacket[5];
extern "C" extern u8 now__14mDoMtx_stack_c[48];
extern "C" extern u8 g_dComIfG_gameInfo[122384];
extern "C" extern u8 g_env_light[4880];
extern "C" extern f32 Zero__4cXyz[3];
extern "C" extern u8 j3dSys[284];
extern "C" extern u32 __float_nan;
extern "C" extern u8 mAudioMgrPtr__10Z2AudioMgr[4 + 4 /* padding */];
extern "C" extern u8 sOldVcdVatCmd__8J3DShape[4];

//
// Declarations:
//

/* ############################################################################################## */
/* 80BEE0DC-80BEE0F0 0014+00 s=5 e=0 z=0  None .rodata    M_attr__12daObjFlag2_c */
SECTION_RODATA static u8 const M_attr__12daObjFlag2_c[20] = {
    0xC0, 0x00, 0x00, 0x00, 0x3F, 0x3D, 0x70, 0xA4, 0x3F, 0x2E,
    0x14, 0x7B, 0x42, 0x20, 0x00, 0x00, 0x42, 0xC8, 0x00, 0x00,
};

/* 80BEE0F0-80BEE0F4 0004+00 s=1 e=0 z=0  None .rodata    @3643 */
SECTION_RODATA static u32 const lit_3643 = 0x41200000;

/* 80BEE220-80BEE31C 00FC+00 s=1 e=0 z=0  None .data      l_pennant_flag_pos */
SECTION_DATA static u8 l_pennant_flag_pos[252] = {
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x43, 0xFA, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
    0x41, 0xF0, 0x00, 0x00, 0x43, 0xC8, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xC1, 0xF0, 0x00, 0x00,
    0x43, 0xC8, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x42, 0x70, 0x00, 0x00, 0x43, 0x96, 0x00, 0x00,
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x43, 0x96, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
    0xC2, 0x70, 0x00, 0x00, 0x43, 0x96, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x42, 0xB4, 0x00, 0x00,
    0x43, 0x48, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x41, 0xF0, 0x00, 0x00, 0x43, 0x48, 0x00, 0x00,
    0x00, 0x00, 0x00, 0x00, 0xC1, 0xF0, 0x00, 0x00, 0x43, 0x48, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
    0xC2, 0xB4, 0x00, 0x00, 0x43, 0x48, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x42, 0xF0, 0x00, 0x00,
    0x42, 0xC8, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x42, 0x70, 0x00, 0x00, 0x42, 0xC8, 0x00, 0x00,
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x42, 0xC8, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
    0xC2, 0x70, 0x00, 0x00, 0x42, 0xC8, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xC2, 0xF0, 0x00, 0x00,
    0x42, 0xC8, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x43, 0x16, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
    0x00, 0x00, 0x00, 0x00, 0x42, 0xB4, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
    0x41, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xC1, 0xF0, 0x00, 0x00,
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xC2, 0xB4, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
    0x00, 0x00, 0x00, 0x00, 0xC3, 0x16, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
};

/* 80BEC658-80BEC790 0138+00 s=1 e=0 z=0  None .text
 * initFlagPos__11FlagCloth_cFP4cXyzP10fopAc_ac_c               */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void FlagCloth_c::initFlagPos(cXyz* param_0, fopAc_ac_c* param_1) {
    nofralloc
#include "asm/rel/d/a/obj/d_a_obj_flag2/d_a_obj_flag2/initFlagPos__11FlagCloth_cFP4cXyzP10fopAc_ac_c.s"
}
#pragma pop

/* 80BEC790-80BEC7CC 003C+00 s=2 e=0 z=0  None .text      __dt__4cXyzFv */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm cXyz::~cXyz() {
    nofralloc
#include "asm/rel/d/a/obj/d_a_obj_flag2/d_a_obj_flag2/__dt__4cXyzFv.s"
}
#pragma pop

/* ############################################################################################## */
/* 80BEE0F4-80BEE0F8 0004+00 s=4 e=0 z=0  None .rodata    @3685 */
SECTION_RODATA static u8 const lit_3685[4] = {
    0x00,
    0x00,
    0x00,
    0x00,
};

/* 80BEE0F8-80BEE0FC 0004+00 s=1 e=0 z=0  None .rodata    @3686 */
SECTION_RODATA static u32 const lit_3686 = 0x42D0CE5F;

/* 80BEE0FC-80BEE104 0004+04 s=1 e=0 z=0  None .rodata    @3687 */
SECTION_RODATA static u32 const lit_3687[1 + 1 /* padding */] = {
    0x42700000,
    /* padding */
    0x00000000,
};

/* 80BEE31C-80BEE3C4 00A8+00 s=1 e=0 z=0  None .data      l_texCoord_64x64 */
SECTION_DATA static u8 l_texCoord_64x64[168] = {
    0x3F, 0x80, 0x00, 0x00, 0x3F, 0x00, 0x00, 0x00, 0x3F, 0x4C, 0xCC, 0xCD, 0x3E, 0xCC, 0xCC, 0xCD,
    0x3F, 0x4C, 0xCC, 0xCD, 0x3F, 0x19, 0x99, 0x9A, 0x3F, 0x19, 0x99, 0x9A, 0x3E, 0x99, 0x99, 0x9A,
    0x3F, 0x19, 0x99, 0x9A, 0x3F, 0x00, 0x00, 0x00, 0x3F, 0x19, 0x99, 0x9A, 0x3F, 0x33, 0x33, 0x33,
    0x3E, 0xCC, 0xCC, 0xCD, 0x3E, 0x4C, 0xCC, 0xCD, 0x3E, 0xCC, 0xCC, 0xCD, 0x3E, 0xCC, 0xCC, 0xCD,
    0x3E, 0xCC, 0xCC, 0xCD, 0x3F, 0x19, 0x99, 0x9A, 0x3E, 0xCC, 0xCC, 0xCD, 0x3F, 0x4C, 0xCC, 0xCD,
    0x3E, 0x4C, 0xCC, 0xCD, 0x3D, 0xCC, 0xCC, 0xCD, 0x3E, 0x4C, 0xCC, 0xCD, 0x3E, 0x99, 0x99, 0x9A,
    0x3E, 0x4C, 0xCC, 0xCD, 0x3F, 0x00, 0x00, 0x00, 0x3E, 0x4C, 0xCC, 0xCD, 0x3F, 0x33, 0x33, 0x33,
    0x3E, 0x4C, 0xCC, 0xCD, 0x3F, 0x66, 0x66, 0x66, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
    0x00, 0x00, 0x00, 0x00, 0x3E, 0x4C, 0xCC, 0xCD, 0x00, 0x00, 0x00, 0x00, 0x3E, 0xCC, 0xCC, 0xCD,
    0x00, 0x00, 0x00, 0x00, 0x3F, 0x19, 0x99, 0x9A, 0x00, 0x00, 0x00, 0x00, 0x3F, 0x4C, 0xCC, 0xCD,
    0x00, 0x00, 0x00, 0x00, 0x3F, 0x80, 0x00, 0x00,
};

/* 80BEE3C4-80BEE480 00A8+14 s=1 e=0 z=0  None .data      l_texCoord */
SECTION_DATA static u8 l_texCoord[168 + 20 /* padding */] = {
    0x00,
    0x00,
    0x00,
    0x00,
    0x3F,
    0x00,
    0x00,
    0x00,
    0x3E,
    0x4C,
    0xCC,
    0xCD,
    0x3E,
    0xCC,
    0xCC,
    0xCD,
    0x3E,
    0x4C,
    0xCC,
    0xCD,
    0x3F,
    0x19,
    0x99,
    0x9A,
    0x3E,
    0xCC,
    0xCC,
    0xCD,
    0x3E,
    0x99,
    0x99,
    0x9A,
    0x3E,
    0xCC,
    0xCC,
    0xCD,
    0x3F,
    0x00,
    0x00,
    0x00,
    0x3E,
    0xCC,
    0xCC,
    0xCD,
    0x3F,
    0x33,
    0x33,
    0x33,
    0x3F,
    0x19,
    0x99,
    0x9A,
    0x3E,
    0x4C,
    0xCC,
    0xCD,
    0x3F,
    0x19,
    0x99,
    0x9A,
    0x3E,
    0xCC,
    0xCC,
    0xCD,
    0x3F,
    0x19,
    0x99,
    0x9A,
    0x3F,
    0x19,
    0x99,
    0x9A,
    0x3F,
    0x19,
    0x99,
    0x9A,
    0x3F,
    0x4C,
    0xCC,
    0xCD,
    0x3F,
    0x4C,
    0xCC,
    0xCD,
    0x3D,
    0xCC,
    0xCC,
    0xCD,
    0x3F,
    0x4C,
    0xCC,
    0xCD,
    0x3E,
    0x99,
    0x99,
    0x9A,
    0x3F,
    0x4C,
    0xCC,
    0xCD,
    0x3F,
    0x00,
    0x00,
    0x00,
    0x3F,
    0x4C,
    0xCC,
    0xCD,
    0x3F,
    0x33,
    0x33,
    0x33,
    0x3F,
    0x4C,
    0xCC,
    0xCD,
    0x3F,
    0x66,
    0x66,
    0x66,
    0x3F,
    0x80,
    0x00,
    0x00,
    0x00,
    0x00,
    0x00,
    0x00,
    0x3F,
    0x80,
    0x00,
    0x00,
    0x3E,
    0x4C,
    0xCC,
    0xCD,
    0x3F,
    0x80,
    0x00,
    0x00,
    0x3E,
    0xCC,
    0xCC,
    0xCD,
    0x3F,
    0x80,
    0x00,
    0x00,
    0x3F,
    0x19,
    0x99,
    0x9A,
    0x3F,
    0x80,
    0x00,
    0x00,
    0x3F,
    0x4C,
    0xCC,
    0xCD,
    0x3F,
    0x80,
    0x00,
    0x00,
    0x3F,
    0x80,
    0x00,
    0x00,
    /* padding */
    0x00,
    0x00,
    0x00,
    0x00,
    0x00,
    0x00,
    0x00,
    0x00,
    0x00,
    0x00,
    0x00,
    0x00,
    0x00,
    0x00,
    0x00,
    0x00,
    0x00,
    0x00,
    0x00,
    0x00,
};

/* 80BEE480-80BEE518 0098+00 s=1 e=0 z=0  None .data      l_pennant_flagDL */
SECTION_DATA static u8 l_pennant_flagDL[152] = {
    0x98, 0x00, 0x0B, 0x00, 0x00, 0x00, 0x01, 0x01, 0x01, 0x02, 0x02, 0x02, 0x04, 0x04, 0x04, 0x05,
    0x05, 0x05, 0x08, 0x08, 0x08, 0x09, 0x09, 0x09, 0x0D, 0x0D, 0x0D, 0x0E, 0x0E, 0x0E, 0x13, 0x13,
    0x13, 0x14, 0x14, 0x14, 0x98, 0x00, 0x09, 0x01, 0x01, 0x01, 0x03, 0x03, 0x03, 0x04, 0x04, 0x04,
    0x07, 0x07, 0x07, 0x08, 0x08, 0x08, 0x0C, 0x0C, 0x0C, 0x0D, 0x0D, 0x0D, 0x12, 0x12, 0x12, 0x13,
    0x13, 0x13, 0x98, 0x00, 0x07, 0x03, 0x03, 0x03, 0x06, 0x06, 0x06, 0x07, 0x07, 0x07, 0x0B, 0x0B,
    0x0B, 0x0C, 0x0C, 0x0C, 0x11, 0x11, 0x11, 0x12, 0x12, 0x12, 0x98, 0x00, 0x05, 0x06, 0x06, 0x06,
    0x0A, 0x0A, 0x0A, 0x0B, 0x0B, 0x0B, 0x10, 0x10, 0x10, 0x11, 0x11, 0x11, 0x90, 0x00, 0x03, 0x10,
    0x10, 0x10, 0x0A, 0x0A, 0x0A, 0x0F, 0x0F, 0x0F, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
};

/* 80BEE518-80BEE710 01F8+00 s=1 e=0 z=0  None .data      rel_pos_idx_tbl$3652 */
SECTION_DATA static u8 rel_pos_idx_tbl_3652[504] = {
    0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x02, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF,
    0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0x00, 0x00, 0x00, 0x03, 0x00, 0x00, 0x00, 0x04,
    0x00, 0x00, 0x00, 0x02, 0x00, 0x00, 0x00, 0x00, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF,
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x04, 0x00, 0x00, 0x00, 0x05,
    0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0x00, 0x00, 0x00, 0x06, 0x00, 0x00, 0x00, 0x07,
    0x00, 0x00, 0x00, 0x04, 0x00, 0x00, 0x00, 0x01, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF,
    0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x03, 0x00, 0x00, 0x00, 0x07, 0x00, 0x00, 0x00, 0x08,
    0x00, 0x00, 0x00, 0x05, 0x00, 0x00, 0x00, 0x02, 0x00, 0x00, 0x00, 0x02, 0x00, 0x00, 0x00, 0x04,
    0x00, 0x00, 0x00, 0x08, 0x00, 0x00, 0x00, 0x09, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF,
    0x00, 0x00, 0x00, 0x0A, 0x00, 0x00, 0x00, 0x0B, 0x00, 0x00, 0x00, 0x07, 0x00, 0x00, 0x00, 0x03,
    0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0x00, 0x00, 0x00, 0x03, 0x00, 0x00, 0x00, 0x06,
    0x00, 0x00, 0x00, 0x0B, 0x00, 0x00, 0x00, 0x0C, 0x00, 0x00, 0x00, 0x08, 0x00, 0x00, 0x00, 0x04,
    0x00, 0x00, 0x00, 0x04, 0x00, 0x00, 0x00, 0x07, 0x00, 0x00, 0x00, 0x0C, 0x00, 0x00, 0x00, 0x0D,
    0x00, 0x00, 0x00, 0x09, 0x00, 0x00, 0x00, 0x05, 0x00, 0x00, 0x00, 0x05, 0x00, 0x00, 0x00, 0x08,
    0x00, 0x00, 0x00, 0x0D, 0x00, 0x00, 0x00, 0x0E, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF,
    0x00, 0x00, 0x00, 0x0F, 0x00, 0x00, 0x00, 0x10, 0x00, 0x00, 0x00, 0x0B, 0x00, 0x00, 0x00, 0x06,
    0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0x00, 0x00, 0x00, 0x06, 0x00, 0x00, 0x00, 0x0A,
    0x00, 0x00, 0x00, 0x10, 0x00, 0x00, 0x00, 0x11, 0x00, 0x00, 0x00, 0x0C, 0x00, 0x00, 0x00, 0x07,
    0x00, 0x00, 0x00, 0x07, 0x00, 0x00, 0x00, 0x0B, 0x00, 0x00, 0x00, 0x11, 0x00, 0x00, 0x00, 0x12,
    0x00, 0x00, 0x00, 0x0D, 0x00, 0x00, 0x00, 0x08, 0x00, 0x00, 0x00, 0x08, 0x00, 0x00, 0x00, 0x0C,
    0x00, 0x00, 0x00, 0x12, 0x00, 0x00, 0x00, 0x13, 0x00, 0x00, 0x00, 0x0E, 0x00, 0x00, 0x00, 0x09,
    0x00, 0x00, 0x00, 0x09, 0x00, 0x00, 0x00, 0x0D, 0x00, 0x00, 0x00, 0x13, 0x00, 0x00, 0x00, 0x14,
    0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0x00, 0x00, 0x00, 0x10, 0x00, 0x00, 0x00, 0x0A,
    0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF,
    0x00, 0x00, 0x00, 0x11, 0x00, 0x00, 0x00, 0x0B, 0x00, 0x00, 0x00, 0x0A, 0x00, 0x00, 0x00, 0x0F,
    0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0x00, 0x00, 0x00, 0x12, 0x00, 0x00, 0x00, 0x0C,
    0x00, 0x00, 0x00, 0x0B, 0x00, 0x00, 0x00, 0x10, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF,
    0x00, 0x00, 0x00, 0x13, 0x00, 0x00, 0x00, 0x0D, 0x00, 0x00, 0x00, 0x0C, 0x00, 0x00, 0x00, 0x11,
    0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0x00, 0x00, 0x00, 0x14, 0x00, 0x00, 0x00, 0x0E,
    0x00, 0x00, 0x00, 0x0D, 0x00, 0x00, 0x00, 0x12, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF,
    0x00, 0x00, 0x00, 0x0E, 0x00, 0x00, 0x00, 0x13, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF,
    0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF,
};

/* 80BEC7CC-80BEC928 015C+00 s=1 e=0 z=0  None .text
 * calcFlagFactor__11FlagCloth_cFP4cXyzP4cXyzP4cXyzi            */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void FlagCloth_c::calcFlagFactor(cXyz* param_0, cXyz* param_1, cXyz* param_2, int param_3) {
    nofralloc
#include "asm/rel/d/a/obj/d_a_obj_flag2/d_a_obj_flag2/calcFlagFactor__11FlagCloth_cFP4cXyzP4cXyzP4cXyzi.s"
}
#pragma pop

/* ############################################################################################## */
/* 80BEE104-80BEE10C 0008+00 s=1 e=0 z=0  None .rodata    @3728 */
SECTION_RODATA static u8 const lit_3728[8] = {
    0x3F, 0xE0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
};

/* 80BEE10C-80BEE114 0008+00 s=1 e=0 z=0  None .rodata    @3729 */
SECTION_RODATA static u8 const lit_3729[8] = {
    0x40, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
};

/* 80BEE114-80BEE11C 0008+00 s=1 e=0 z=0  None .rodata    @3730 */
SECTION_RODATA static u8 const lit_3730[8] = {
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
};

/* 80BEC928-80BECAE0 01B8+00 s=1 e=0 z=0  None .text
 * calcFlagFactorSub__11FlagCloth_cFP4cXyzP4cXyzP4cXyzf         */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void FlagCloth_c::calcFlagFactorSub(cXyz* param_0, cXyz* param_1, cXyz* param_2, f32 param_3) {
    nofralloc
#include "asm/rel/d/a/obj/d_a_obj_flag2/d_a_obj_flag2/calcFlagFactorSub__11FlagCloth_cFP4cXyzP4cXyzP4cXyzf.s"
}
#pragma pop

/* ############################################################################################## */
/* 80BEE710-80BEE95C 024C+00 s=1 e=0 z=0  None .data      rel_pos_idx_tbl$3734 */
SECTION_DATA static u8 rel_pos_idx_tbl_3734[588] = {
    0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x02, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF,
    0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0x00, 0x00, 0x00, 0x03,
    0x00, 0x00, 0x00, 0x04, 0x00, 0x00, 0x00, 0x02, 0x00, 0x00, 0x00, 0x00, 0xFF, 0xFF, 0xFF, 0xFF,
    0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x01,
    0x00, 0x00, 0x00, 0x04, 0x00, 0x00, 0x00, 0x05, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF,
    0xFF, 0xFF, 0xFF, 0xFF, 0x00, 0x00, 0x00, 0x06, 0x00, 0x00, 0x00, 0x07, 0x00, 0x00, 0x00, 0x04,
    0x00, 0x00, 0x00, 0x01, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF,
    0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x03, 0x00, 0x00, 0x00, 0x07, 0x00, 0x00, 0x00, 0x08,
    0x00, 0x00, 0x00, 0x05, 0x00, 0x00, 0x00, 0x02, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x02,
    0x00, 0x00, 0x00, 0x04, 0x00, 0x00, 0x00, 0x08, 0x00, 0x00, 0x00, 0x09, 0xFF, 0xFF, 0xFF, 0xFF,
    0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0x00, 0x00, 0x00, 0x0A, 0x00, 0x00, 0x00, 0x0B,
    0x00, 0x00, 0x00, 0x07, 0x00, 0x00, 0x00, 0x03, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF,
    0xFF, 0xFF, 0xFF, 0xFF, 0x00, 0x00, 0x00, 0x03, 0x00, 0x00, 0x00, 0x06, 0x00, 0x00, 0x00, 0x0B,
    0x00, 0x00, 0x00, 0x0C, 0x00, 0x00, 0x00, 0x08, 0x00, 0x00, 0x00, 0x04, 0x00, 0x00, 0x00, 0x03,
    0x00, 0x00, 0x00, 0x04, 0x00, 0x00, 0x00, 0x07, 0x00, 0x00, 0x00, 0x0C, 0x00, 0x00, 0x00, 0x0D,
    0x00, 0x00, 0x00, 0x09, 0x00, 0x00, 0x00, 0x05, 0x00, 0x00, 0x00, 0x04, 0x00, 0x00, 0x00, 0x05,
    0x00, 0x00, 0x00, 0x08, 0x00, 0x00, 0x00, 0x0D, 0x00, 0x00, 0x00, 0x0E, 0xFF, 0xFF, 0xFF, 0xFF,
    0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0x00, 0x00, 0x00, 0x0F, 0x00, 0x00, 0x00, 0x10,
    0x00, 0x00, 0x00, 0x0B, 0x00, 0x00, 0x00, 0x06, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF,
    0xFF, 0xFF, 0xFF, 0xFF, 0x00, 0x00, 0x00, 0x06, 0x00, 0x00, 0x00, 0x0A, 0x00, 0x00, 0x00, 0x10,
    0x00, 0x00, 0x00, 0x11, 0x00, 0x00, 0x00, 0x0C, 0x00, 0x00, 0x00, 0x07, 0x00, 0x00, 0x00, 0x06,
    0x00, 0x00, 0x00, 0x07, 0x00, 0x00, 0x00, 0x0B, 0x00, 0x00, 0x00, 0x11, 0x00, 0x00, 0x00, 0x12,
    0x00, 0x00, 0x00, 0x0D, 0x00, 0x00, 0x00, 0x08, 0x00, 0x00, 0x00, 0x07, 0x00, 0x00, 0x00, 0x08,
    0x00, 0x00, 0x00, 0x0C, 0x00, 0x00, 0x00, 0x12, 0x00, 0x00, 0x00, 0x13, 0x00, 0x00, 0x00, 0x0E,
    0x00, 0x00, 0x00, 0x09, 0x00, 0x00, 0x00, 0x08, 0x00, 0x00, 0x00, 0x09, 0x00, 0x00, 0x00, 0x0D,
    0x00, 0x00, 0x00, 0x13, 0x00, 0x00, 0x00, 0x14, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF,
    0xFF, 0xFF, 0xFF, 0xFF, 0x00, 0x00, 0x00, 0x10, 0x00, 0x00, 0x00, 0x0A, 0xFF, 0xFF, 0xFF, 0xFF,
    0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF,
    0x00, 0x00, 0x00, 0x11, 0x00, 0x00, 0x00, 0x0B, 0x00, 0x00, 0x00, 0x0A, 0x00, 0x00, 0x00, 0x0F,
    0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0x00, 0x00, 0x00, 0x12,
    0x00, 0x00, 0x00, 0x0C, 0x00, 0x00, 0x00, 0x0B, 0x00, 0x00, 0x00, 0x10, 0xFF, 0xFF, 0xFF, 0xFF,
    0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0x00, 0x00, 0x00, 0x13, 0x00, 0x00, 0x00, 0x0D,
    0x00, 0x00, 0x00, 0x0C, 0x00, 0x00, 0x00, 0x11, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF,
    0xFF, 0xFF, 0xFF, 0xFF, 0x00, 0x00, 0x00, 0x14, 0x00, 0x00, 0x00, 0x0E, 0x00, 0x00, 0x00, 0x0D,
    0x00, 0x00, 0x00, 0x12, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF,
    0x00, 0x00, 0x00, 0x0E, 0x00, 0x00, 0x00, 0x13, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF,
    0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF,
};

/* 80BECAE0-80BECC34 0154+00 s=2 e=0 z=0  None .text      calcFlagNormal__11FlagCloth_cFP4cXyzi */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void FlagCloth_c::calcFlagNormal(cXyz* param_0, int param_1) {
    nofralloc
#include "asm/rel/d/a/obj/d_a_obj_flag2/d_a_obj_flag2/calcFlagNormal__11FlagCloth_cFP4cXyzi.s"
}
#pragma pop

/* 80BECC34-80BECC78 0044+00 s=1 e=0 z=0  None .text      calcFlagNormalBack__11FlagCloth_cFv */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void FlagCloth_c::calcFlagNormalBack() {
    nofralloc
#include "asm/rel/d/a/obj/d_a_obj_flag2/d_a_obj_flag2/calcFlagNormalBack__11FlagCloth_cFv.s"
}
#pragma pop

/* ############################################################################################## */
/* 80BEE11C-80BEE15C 0040+00 s=1 e=0 z=0  None .rodata    ccSphSrc$3809 */
SECTION_RODATA static u8 const ccSphSrc[64] = {
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
    0x00, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x11, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x00,
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x42, 0xC8, 0x00, 0x00,
};

/* 80BECC78-80BECCE4 006C+00 s=1 e=0 z=0  None .text      initCcSphere__11FlagCloth_cFP10fopAc_ac_c
 */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void FlagCloth_c::initCcSphere(fopAc_ac_c* param_0) {
    nofralloc
#include "asm/rel/d/a/obj/d_a_obj_flag2/d_a_obj_flag2/initCcSphere__11FlagCloth_cFP10fopAc_ac_c.s"
}
#pragma pop

/* 80BECCE4-80BECD98 00B4+00 s=1 e=0 z=0  None .text      setCcSphere__11FlagCloth_cFv */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void FlagCloth_c::setCcSphere() {
    nofralloc
#include "asm/rel/d/a/obj/d_a_obj_flag2/d_a_obj_flag2/setCcSphere__11FlagCloth_cFv.s"
}
#pragma pop

/* 80BECD98-80BECF30 0198+00 s=1 e=0 z=0  None .text      execute__11FlagCloth_cFv */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void FlagCloth_c::execute() {
    nofralloc
#include "asm/rel/d/a/obj/d_a_obj_flag2/d_a_obj_flag2/execute__11FlagCloth_cFv.s"
}
#pragma pop

/* ############################################################################################## */
/* 80BEE15C-80BEE160 0004+00 s=1 e=0 z=0  None .rodata    @3907 */
SECTION_RODATA static u32 const lit_3907 = 0x000000FF;

/* 80BEE160-80BEE164 0004+00 s=1 e=0 z=0  None .rodata    @3910 */
SECTION_RODATA static u32 const lit_3910 = 0x000000FF;

/* 80BECF30-80BED22C 02FC+00 s=1 e=0 z=0  None .text      draw__11FlagCloth_cFv */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void FlagCloth_c::draw() {
    nofralloc
#include "asm/rel/d/a/obj/d_a_obj_flag2/d_a_obj_flag2/draw__11FlagCloth_cFv.s"
}
#pragma pop

/* ############################################################################################## */
/* 80BEE164-80BEE168 0004+00 s=1 e=0 z=0  None .rodata    @3959 */
SECTION_RODATA static u32 const lit_3959 = 0xC4160000;

/* 80BEE168-80BEE16C 0004+00 s=1 e=0 z=0  None .rodata    @3960 */
SECTION_RODATA static u32 const lit_3960 = 0x44160000;

/* 80BEE16C-80BEE174 0004+04 s=1 e=0 z=0  None .rodata    @3961 */
SECTION_RODATA static u32 const lit_3961[1 + 1 /* padding */] = {
    0x43C80000,
    /* padding */
    0x00000000,
};

/* 80BEE174-80BEE17C 0008+00 s=1 e=0 z=0  None .rodata    @3963 */
SECTION_RODATA static u8 const lit_3963[8] = {
    0x43, 0x30, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
};

/* 80BEE17C-80BEE1C0 0044+00 s=1 e=0 z=0  None .rodata    ccCylSrc$3979 */
SECTION_RODATA static u8 const ccCylSrc[68] = {
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x79,
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
    0x00, 0x04, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
    0x00, 0x00, 0x00, 0x00, 0x41, 0x70, 0x00, 0x00, 0x41, 0xF0, 0x00, 0x00,
};

/* 80BEE1C0-80BEE1C4 0004+00 s=1 e=0 z=0  None .rodata    @3982 */
SECTION_RODATA static u32 const lit_3982 = 0x41700000;

/* 80BEE1C4-80BEE1C8 0004+00 s=1 e=0 z=0  None .rodata    @3983 */
SECTION_RODATA static u32 const lit_3983 = 0x43480000;

/* 80BEE1C8-80BEE1CC 0004+00 s=1 e=0 z=0  None .rodata    @4020 */
SECTION_RODATA static u32 const lit_4020 = 0x3E000000;

/* 80BEE1CC-80BEE1D4 0004+04 s=1 e=0 z=0  None .rodata    @4021 */
SECTION_RODATA static u32 const lit_4021[1 + 1 /* padding */] = {
    0x3C23D70A,
    /* padding */
    0x00000000,
};

/* 80BEE1D4-80BEE1DC 0008+00 s=1 e=0 z=0  None .rodata    @4023 */
SECTION_RODATA static u8 const lit_4023[8] = {
    0x43, 0x30, 0x00, 0x00, 0x80, 0x00, 0x00, 0x00,
};

/* 80BEE1DC-80BEE1E0 0004+00 s=1 e=0 z=0  None .rodata    @4334 */
SECTION_RODATA static u32 const lit_4334 = 0x42FE0000;

/* 80BEE1E0-80BEE1E4 0004+00 s=1 e=0 z=0  None .rodata    @4335 */
SECTION_RODATA static u32 const lit_4335 = 0x3F800000;

/* 80BEE1E4-80BEE1E8 0004+00 s=1 e=0 z=0  None .rodata    @4336 */
SECTION_RODATA static u32 const lit_4336 = 0xBF800000;

/* 80BEE1E8-80BEE21E 0036+00 s=3 e=0 z=0  None .rodata    @stringBase0 */
#pragma push
#pragma force_active on
#pragma section ".dead"
SECTION_DEAD char const* const stringBase_80BEE1E8 = "spec.dat";
SECTION_DEAD char const* const stringBase_80BEE1F1 = "flag%02d.bti";
SECTION_DEAD char const* const stringBase_80BEE1FE = "flag.bti";
SECTION_DEAD char const* const stringBase_80BEE207 = "model0.bmd";
SECTION_DEAD char const* const stringBase_80BEE212 = "FlagObj%02d";
#pragma pop

/* 80BED22C-80BED368 013C+00 s=1 e=0 z=0  None .text      create_init__12daObjFlag2_cFv */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void daObjFlag2_c::create_init() {
    nofralloc
#include "asm/rel/d/a/obj/d_a_obj_flag2/d_a_obj_flag2/create_init__12daObjFlag2_cFv.s"
}
#pragma pop

/* 80BED368-80BED3B8 0050+00 s=1 e=0 z=0  None .text      initBaseMtx__12daObjFlag2_cFv */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void daObjFlag2_c::initBaseMtx() {
    nofralloc
#include "asm/rel/d/a/obj/d_a_obj_flag2/d_a_obj_flag2/initBaseMtx__12daObjFlag2_cFv.s"
}
#pragma pop

/* 80BED3B8-80BED44C 0094+00 s=1 e=0 z=0  None .text      initCollision__12daObjFlag2_cFv */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void daObjFlag2_c::initCollision() {
    nofralloc
#include "asm/rel/d/a/obj/d_a_obj_flag2/d_a_obj_flag2/initCollision__12daObjFlag2_cFv.s"
}
#pragma pop

/* 80BED44C-80BED480 0034+00 s=2 e=0 z=0  None .text      setCollision__12daObjFlag2_cFv */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void daObjFlag2_c::setCollision() {
    nofralloc
#include "asm/rel/d/a/obj/d_a_obj_flag2/d_a_obj_flag2/setCollision__12daObjFlag2_cFv.s"
}
#pragma pop

/* 80BED480-80BED680 0200+00 s=1 e=0 z=0  None .text      createHeap__12daObjFlag2_cFv */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void daObjFlag2_c::createHeap() {
    nofralloc
#include "asm/rel/d/a/obj/d_a_obj_flag2/d_a_obj_flag2/createHeap__12daObjFlag2_cFv.s"
}
#pragma pop

/* 80BED680-80BED6A0 0020+00 s=1 e=0 z=0  None .text      createSolidHeap__FP10fopAc_ac_c */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm static void createSolidHeap(fopAc_ac_c* param_0) {
    nofralloc
#include "asm/rel/d/a/obj/d_a_obj_flag2/d_a_obj_flag2/createSolidHeap__FP10fopAc_ac_c.s"
}
#pragma pop

/* 80BED6A0-80BED7A4 0104+00 s=1 e=0 z=0  None .text      create__12daObjFlag2_cFv */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void daObjFlag2_c::create() {
    nofralloc
#include "asm/rel/d/a/obj/d_a_obj_flag2/d_a_obj_flag2/create__12daObjFlag2_cFv.s"
}
#pragma pop

/* ############################################################################################## */
/* 80BEE95C-80BEE97C 0020+00 s=1 e=0 z=0  None .data      l_daObjFlag2_Method */
SECTION_DATA static void* l_daObjFlag2_Method[8] = {
    (void*)daObjFlag2_Create__FP10fopAc_ac_c,
    (void*)daObjFlag2_Delete__FP12daObjFlag2_c,
    (void*)daObjFlag2_Execute__FP12daObjFlag2_c,
    (void*)daObjFlag2_IsDelete__FP12daObjFlag2_c,
    (void*)daObjFlag2_Draw__FP12daObjFlag2_c,
    (void*)NULL,
    (void*)NULL,
    (void*)NULL,
};

/* 80BEE97C-80BEE9AC 0030+00 s=0 e=0 z=1  None .data      g_profile_Obj_Flag2 */
SECTION_DATA void* g_profile_Obj_Flag2[12] = {
    (void*)0xFFFFFFFD, (void*)0x0007FFFD,
    (void*)0x013C0000, (void*)&g_fpcLf_Method,
    (void*)0x000010C0, (void*)NULL,
    (void*)NULL,       (void*)&g_fopAc_Method,
    (void*)0x001B0000, (void*)&l_daObjFlag2_Method,
    (void*)0x00044180, (void*)0x000E0000,
};

/* 80BEE9AC-80BEE9B8 000C+00 s=4 e=0 z=0  None .data      __vt__10cCcD_GStts */
SECTION_DATA static void* __vt__10cCcD_GStts[3] = {
    (void*)NULL,
    (void*)NULL,
    (void*)__dt__10cCcD_GSttsFv,
};

/* 80BEE9B8-80BEE9C4 000C+00 s=3 e=0 z=0  None .data      __vt__10dCcD_GStts */
SECTION_DATA static void* __vt__10dCcD_GStts[3] = {
    (void*)NULL,
    (void*)NULL,
    (void*)__dt__10dCcD_GSttsFv,
};

/* 80BEE9C4-80BEE9D0 000C+00 s=3 e=0 z=0  None .data      __vt__8cM3dGSph */
SECTION_DATA static void* __vt__8cM3dGSph[3] = {
    (void*)NULL,
    (void*)NULL,
    (void*)__dt__8cM3dGSphFv,
};

/* 80BEE9D0-80BEE9DC 000C+00 s=3 e=0 z=0  None .data      __vt__8cM3dGCyl */
SECTION_DATA static void* __vt__8cM3dGCyl[3] = {
    (void*)NULL,
    (void*)NULL,
    (void*)__dt__8cM3dGCylFv,
};

/* 80BEE9DC-80BEE9E8 000C+00 s=4 e=0 z=0  None .data      __vt__8cM3dGAab */
SECTION_DATA static void* __vt__8cM3dGAab[3] = {
    (void*)NULL,
    (void*)NULL,
    (void*)__dt__8cM3dGAabFv,
};

/* 80BEE9E8-80BEE9FC 0014+00 s=2 e=0 z=0  None .data      __vt__11FlagCloth_c */
SECTION_DATA static void* __vt__11FlagCloth_c[5] = {
    (void*)NULL,
    (void*)NULL,
    (void*)entry__9J3DPacketFP13J3DDrawBuffer,
    (void*)draw__11FlagCloth_cFv,
    (void*)__dt__11FlagCloth_cFv,
};

/* 80BED7A4-80BED9C4 0220+00 s=1 e=0 z=0  None .text      __ct__12daObjFlag2_cFv */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm daObjFlag2_c::daObjFlag2_c() {
    nofralloc
#include "asm/rel/d/a/obj/d_a_obj_flag2/d_a_obj_flag2/__ct__12daObjFlag2_cFv.s"
}
#pragma pop

/* 80BED9C4-80BEDB70 01AC+00 s=2 e=0 z=0  None .text      __dt__11FlagCloth_cFv */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm FlagCloth_c::~FlagCloth_c() {
    nofralloc
#include "asm/rel/d/a/obj/d_a_obj_flag2/d_a_obj_flag2/__dt__11FlagCloth_cFv.s"
}
#pragma pop

/* 80BEDB70-80BEDB74 0004+00 s=1 e=0 z=0  None .text      __ct__4cXyzFv */
cXyz::cXyz() {
    /* empty function */
}

/* 80BEDB74-80BEDBBC 0048+00 s=1 e=0 z=0  None .text      __dt__8cM3dGSphFv */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm cM3dGSph::~cM3dGSph() {
    nofralloc
#include "asm/rel/d/a/obj/d_a_obj_flag2/d_a_obj_flag2/__dt__8cM3dGSphFv.s"
}
#pragma pop

/* 80BEDBBC-80BEDBF4 0038+00 s=1 e=0 z=0  None .text      __ct__11J3DLightObjFv */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm J3DLightObj::J3DLightObj() {
    nofralloc
#include "asm/rel/d/a/obj/d_a_obj_flag2/d_a_obj_flag2/__ct__11J3DLightObjFv.s"
}
#pragma pop

/* 80BEDBF4-80BEDC3C 0048+00 s=1 e=0 z=0  None .text      __dt__8cM3dGCylFv */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm cM3dGCyl::~cM3dGCyl() {
    nofralloc
#include "asm/rel/d/a/obj/d_a_obj_flag2/d_a_obj_flag2/__dt__8cM3dGCylFv.s"
}
#pragma pop

/* 80BEDC3C-80BEDC84 0048+00 s=1 e=0 z=0  None .text      __dt__8cM3dGAabFv */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm cM3dGAab::~cM3dGAab() {
    nofralloc
#include "asm/rel/d/a/obj/d_a_obj_flag2/d_a_obj_flag2/__dt__8cM3dGAabFv.s"
}
#pragma pop

/* 80BEDC84-80BEDCE0 005C+00 s=1 e=0 z=0  None .text      __dt__10dCcD_GSttsFv */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm dCcD_GStts::~dCcD_GStts() {
    nofralloc
#include "asm/rel/d/a/obj/d_a_obj_flag2/d_a_obj_flag2/__dt__10dCcD_GSttsFv.s"
}
#pragma pop

/* 80BEDCE0-80BEDDA0 00C0+00 s=1 e=0 z=0  None .text      draw__12daObjFlag2_cFv */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void daObjFlag2_c::draw() {
    nofralloc
#include "asm/rel/d/a/obj/d_a_obj_flag2/d_a_obj_flag2/draw__12daObjFlag2_cFv.s"
}
#pragma pop

/* 80BEDDA0-80BEDDC0 0020+00 s=1 e=0 z=0  None .text      daObjFlag2_Draw__FP12daObjFlag2_c */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm static void daObjFlag2_Draw(daObjFlag2_c* param_0) {
    nofralloc
#include "asm/rel/d/a/obj/d_a_obj_flag2/d_a_obj_flag2/daObjFlag2_Draw__FP12daObjFlag2_c.s"
}
#pragma pop

/* 80BEDDC0-80BEDEB0 00F0+00 s=1 e=0 z=0  None .text      daObjFlag2_Execute__FP12daObjFlag2_c */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm static void daObjFlag2_Execute(daObjFlag2_c* param_0) {
    nofralloc
#include "asm/rel/d/a/obj/d_a_obj_flag2/d_a_obj_flag2/daObjFlag2_Execute__FP12daObjFlag2_c.s"
}
#pragma pop

/* 80BEDEB0-80BEDEB8 0008+00 s=1 e=0 z=0  None .text      daObjFlag2_IsDelete__FP12daObjFlag2_c */
static bool daObjFlag2_IsDelete(daObjFlag2_c* param_0) {
    return true;
}

/* 80BEDEB8-80BEDEE0 0028+00 s=1 e=0 z=0  None .text      daObjFlag2_Delete__FP12daObjFlag2_c */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm static void daObjFlag2_Delete(daObjFlag2_c* param_0) {
    nofralloc
#include "asm/rel/d/a/obj/d_a_obj_flag2/d_a_obj_flag2/daObjFlag2_Delete__FP12daObjFlag2_c.s"
}
#pragma pop

/* 80BEDEE0-80BEE050 0170+00 s=1 e=0 z=0  None .text      __dt__12daObjFlag2_cFv */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm daObjFlag2_c::~daObjFlag2_c() {
    nofralloc
#include "asm/rel/d/a/obj/d_a_obj_flag2/d_a_obj_flag2/__dt__12daObjFlag2_cFv.s"
}
#pragma pop

/* 80BEE050-80BEE070 0020+00 s=1 e=0 z=0  None .text      daObjFlag2_Create__FP10fopAc_ac_c */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm static void daObjFlag2_Create(fopAc_ac_c* param_0) {
    nofralloc
#include "asm/rel/d/a/obj/d_a_obj_flag2/d_a_obj_flag2/daObjFlag2_Create__FP10fopAc_ac_c.s"
}
#pragma pop

/* 80BEE070-80BEE0B8 0048+00 s=1 e=0 z=0  None .text      __dt__10cCcD_GSttsFv */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm cCcD_GStts::~cCcD_GStts() {
    nofralloc
#include "asm/rel/d/a/obj/d_a_obj_flag2/d_a_obj_flag2/__dt__10cCcD_GSttsFv.s"
}
#pragma pop

/* 80BEE0B8-80BEE0D4 001C+00 s=4 e=0 z=0  None .text      getTargetPos__11FlagCloth_cFv */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void FlagCloth_c::getTargetPos() {
    nofralloc
#include "asm/rel/d/a/obj/d_a_obj_flag2/d_a_obj_flag2/getTargetPos__11FlagCloth_cFv.s"
}
#pragma pop
