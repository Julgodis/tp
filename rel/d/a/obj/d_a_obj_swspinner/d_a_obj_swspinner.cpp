// 
// Generated By: dol2asm
// Translation Unit: d_a_obj_swspinner
// 

#include "dolphin/types.h"

// 
// Forward References:
// 

extern "C" extern void search_spinner_sub__FPvPv();
extern "C" extern void initBaseMtx__16daObjSwSpinner_cFv();
extern "C" extern void setBaseMtx__16daObjSwSpinner_cFv();
extern "C" extern void Create__16daObjSwSpinner_cFv();
extern "C" extern void CreateHeap__16daObjSwSpinner_cFv();
extern "C" extern void create1st__16daObjSwSpinner_cFv();
extern "C" extern void Execute__16daObjSwSpinner_cFPPA3_A4_f();
extern "C" extern void Draw__16daObjSwSpinner_cFv();
extern "C" extern void Delete__16daObjSwSpinner_cFv();
extern "C" extern void daObjSwSpinner_create1st__FP16daObjSwSpinner_c();
extern "C" extern void daObjSwSpinner_MoveBGDelete__FP16daObjSwSpinner_c();
extern "C" extern void daObjSwSpinner_MoveBGExecute__FP16daObjSwSpinner_c();
extern "C" extern void daObjSwSpinner_MoveBGDraw__FP16daObjSwSpinner_c();
SECTION_RODATA extern const u8 lit_3717[4 + 4 /* padding */];
SECTION_RODATA extern const u8 lit_3718[8];
SECTION_RODATA extern const u8 lit_3719[8];
SECTION_RODATA extern const u8 lit_3720[8];
SECTION_RODATA extern const u32 lit_3721;
SECTION_RODATA extern const u32 lit_3773;
SECTION_RODATA extern const u32 lit_3774;
SECTION_RODATA extern const u32 lit_3919;
SECTION_RODATA extern const u32 lit_3920;
SECTION_RODATA extern const u32 lit_3921;
SECTION_RODATA extern const u32 lit_3922;
SECTION_RODATA extern const u32 lit_3923;
SECTION_RODATA extern const u8 stringBase0[10];
SECTION_DATA extern u8 l_arcName[4];
SECTION_DATA extern u8 daObjSwSpinner_METHODS[32];
SECTION_DATA extern u8 g_profile_Obj_SwSpinner[48];
SECTION_DATA extern void*const __vt__16daObjSwSpinner_c[10];

// 
// External References:
// 

extern "C" extern void _unresolved();

// 
// Declarations:
// 

/* 80CFFF78-80D00174 01FC+00 .text      search_spinner_sub__FPvPv                                    */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
ASM_FUNCTION(search_spinner_sub__FPvPv) {
	nofralloc
#include "asm/rel/d/a/obj/d_a_obj_swspinner/d_a_obj_swspinner/search_spinner_sub__FPvPv.s"
}
#pragma pop


/* 80D00174-80D001CC 0058+00 .text      initBaseMtx__16daObjSwSpinner_cFv                            */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
ASM_FUNCTION(initBaseMtx__16daObjSwSpinner_cFv) {
	nofralloc
#include "asm/rel/d/a/obj/d_a_obj_swspinner/d_a_obj_swspinner/initBaseMtx__16daObjSwSpinner_cFv.s"
}
#pragma pop


/* 80D001CC-80D00284 00B8+00 .text      setBaseMtx__16daObjSwSpinner_cFv                             */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
ASM_FUNCTION(setBaseMtx__16daObjSwSpinner_cFv) {
	nofralloc
#include "asm/rel/d/a/obj/d_a_obj_swspinner/d_a_obj_swspinner/setBaseMtx__16daObjSwSpinner_cFv.s"
}
#pragma pop


/* 80D00284-80D0035C 00D8+00 .text      Create__16daObjSwSpinner_cFv                                 */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
ASM_FUNCTION(Create__16daObjSwSpinner_cFv) {
	nofralloc
#include "asm/rel/d/a/obj/d_a_obj_swspinner/d_a_obj_swspinner/Create__16daObjSwSpinner_cFv.s"
}
#pragma pop


/* 80D0035C-80D00498 013C+00 .text      CreateHeap__16daObjSwSpinner_cFv                             */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
ASM_FUNCTION(CreateHeap__16daObjSwSpinner_cFv) {
	nofralloc
#include "asm/rel/d/a/obj/d_a_obj_swspinner/d_a_obj_swspinner/CreateHeap__16daObjSwSpinner_cFv.s"
}
#pragma pop


/* 80D00498-80D00518 0080+00 .text      create1st__16daObjSwSpinner_cFv                              */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
ASM_FUNCTION(create1st__16daObjSwSpinner_cFv) {
	nofralloc
#include "asm/rel/d/a/obj/d_a_obj_swspinner/d_a_obj_swspinner/create1st__16daObjSwSpinner_cFv.s"
}
#pragma pop


/* 80D00518-80D00890 0378+00 .text      Execute__16daObjSwSpinner_cFPPA3_A4_f                        */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
ASM_FUNCTION(Execute__16daObjSwSpinner_cFPPA3_A4_f) {
	nofralloc
#include "asm/rel/d/a/obj/d_a_obj_swspinner/d_a_obj_swspinner/Execute__16daObjSwSpinner_cFPPA3_A4_f.s"
}
#pragma pop


/* 80D00890-80D00954 00C4+00 .text      Draw__16daObjSwSpinner_cFv                                   */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
ASM_FUNCTION(Draw__16daObjSwSpinner_cFv) {
	nofralloc
#include "asm/rel/d/a/obj/d_a_obj_swspinner/d_a_obj_swspinner/Draw__16daObjSwSpinner_cFv.s"
}
#pragma pop


/* 80D00954-80D009C0 006C+00 .text      Delete__16daObjSwSpinner_cFv                                 */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
ASM_FUNCTION(Delete__16daObjSwSpinner_cFv) {
	nofralloc
#include "asm/rel/d/a/obj/d_a_obj_swspinner/d_a_obj_swspinner/Delete__16daObjSwSpinner_cFv.s"
}
#pragma pop


/* 80D009C0-80D00A20 0060+00 .text      daObjSwSpinner_create1st__FP16daObjSwSpinner_c               */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
ASM_FUNCTION(daObjSwSpinner_create1st__FP16daObjSwSpinner_c) {
	nofralloc
#include "asm/rel/d/a/obj/d_a_obj_swspinner/d_a_obj_swspinner/daObjSwSpinner_create1st__FP16daObjSwSpinner_c.s"
}
#pragma pop


/* 80D00A20-80D00A40 0020+00 .text      daObjSwSpinner_MoveBGDelete__FP16daObjSwSpinner_c            */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
ASM_FUNCTION(daObjSwSpinner_MoveBGDelete__FP16daObjSwSpinner_c) {
	nofralloc
#include "asm/rel/d/a/obj/d_a_obj_swspinner/d_a_obj_swspinner/daObjSwSpinner_MoveBGDelete__FP16daObjSwSpinner_c.s"
}
#pragma pop


/* 80D00A40-80D00A60 0020+00 .text      daObjSwSpinner_MoveBGExecute__FP16daObjSwSpinner_c           */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
ASM_FUNCTION(daObjSwSpinner_MoveBGExecute__FP16daObjSwSpinner_c) {
	nofralloc
#include "asm/rel/d/a/obj/d_a_obj_swspinner/d_a_obj_swspinner/daObjSwSpinner_MoveBGExecute__FP16daObjSwSpinner_c.s"
}
#pragma pop


/* 80D00A60-80D00A8C 002C+00 .text      daObjSwSpinner_MoveBGDraw__FP16daObjSwSpinner_c              */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
ASM_FUNCTION(daObjSwSpinner_MoveBGDraw__FP16daObjSwSpinner_c) {
	nofralloc
#include "asm/rel/d/a/obj/d_a_obj_swspinner/d_a_obj_swspinner/daObjSwSpinner_MoveBGDraw__FP16daObjSwSpinner_c.s"
}
#pragma pop


/* ############################################################################################## */
/* 80D00A94-80D00A9C 0004+04 .rodata    @3717                                                        */
SECTION_RODATA const u8 lit_3717[8] = {
	0x00, 0x00, 0x00, 0x00,
	/* padding */
	0x00, 0x00, 0x00, 0x00,
};

/* 80D00A9C-80D00AA4 0008+00 .rodata    @3718                                                        */
SECTION_RODATA const u8 lit_3718[8] = {
	0x3F, 0xE0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
};

/* 80D00AA4-80D00AAC 0008+00 .rodata    @3719                                                        */
SECTION_RODATA const u8 lit_3719[8] = {
	0x40, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
};

/* 80D00AAC-80D00AB4 0008+00 .rodata    @3720                                                        */
SECTION_RODATA const u8 lit_3720[8] = {
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
};

/* 80D00AB4-80D00AB8 0004+00 .rodata    @3721                                                        */
SECTION_RODATA const u32 lit_3721 = 0x42C80000;

/* 80D00AB8-80D00ABC 0004+00 .rodata    @3773                                                        */
SECTION_RODATA const u32 lit_3773 = 0x42480000;

/* 80D00ABC-80D00AC0 0004+00 .rodata    @3774                                                        */
SECTION_RODATA const u32 lit_3774 = 0x41F00000;

/* 80D00AC0-80D00AC4 0004+00 .rodata    @3919                                                        */
SECTION_RODATA const u32 lit_3919 = 0x3DCCCCCD;

/* 80D00AC4-80D00AC8 0004+00 .rodata    @3920                                                        */
SECTION_RODATA const u32 lit_3920 = 0x41200000;

/* 80D00AC8-80D00ACC 0004+00 .rodata    @3921                                                        */
SECTION_RODATA const u32 lit_3921 = 0x40000000;

/* 80D00ACC-80D00AD0 0004+00 .rodata    @3922                                                        */
SECTION_RODATA const u32 lit_3922 = 0x3F800000;

/* 80D00AD0-80D00AD4 0004+00 .rodata    @3923                                                        */
SECTION_RODATA const u32 lit_3923 = 0xBF800000;

/* 80D00AD4-80D00ADE 000A+00 .rodata    @stringBase0                                                 */
#pragma push
#pragma force_active on
#pragma section ".dead"
SECTION_DEAD char* const stringBase_80D00AD4 = "P_Sswitch";
#pragma pop

/* 80D00AE0-80D00AE4 0004+00 .data      l_arcName                                                    */
u8 l_arcName[4] = {
	0x00, 0x00, 0x00, 0x00,
};

/* 80D00AE4-80D00B04 0020+00 .data      daObjSwSpinner_METHODS                                       */
u8 daObjSwSpinner_METHODS[32] = {
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
};

/* 80D00B04-80D00B34 0030+00 .data      g_profile_Obj_SwSpinner                                      */
u8 g_profile_Obj_SwSpinner[48] = {
	0xFF, 0xFF, 0xFF, 0xFD, 0x00, 0x03, 0xFF, 0xFD, 0x00, 0xB3, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
	0x00, 0x00, 0x05, 0xF4, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
	0x02, 0x2F, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x04, 0x01, 0x00, 0x00, 0x0E, 0x00, 0x00,
};

/* 80D00B34-80D00B5C 0028+00 .data      __vt__16daObjSwSpinner_c                                     */
void* const __vt__16daObjSwSpinner_c[10] = {
	NULL, /* RTTI */
	NULL,
	NULL,
	NULL,
	NULL,
	NULL,
	NULL,
	NULL,
	NULL,
	NULL,
};

