//
// Generated By: dol2asm
// Translation Unit: d_a_b_zant_magic
//

#include "rel/d/a/b/d_a_b_zant_magic/d_a_b_zant_magic.h"
#include "dol2asm.h"
#include "dolphin/types.h"

//
// Types:
//

struct daB_ZANTM_c {
    /* 8064F778 */ void draw();
    /* 8064F7D4 */ void setMagicEffect();
    /* 8064F938 */ void setMagicHitEffect();
    /* 8064FA50 */ void executeSmall();
    /* 8064FD6C */ void cc_set();
    /* 8064FE6C */ void execute();
    /* 8064FF2C */ bool _delete();
    /* 8064FF54 */ void create();
    /* 806500A8 */ daB_ZANTM_c();
};

struct cXyz {
    /* 80266B84 */ void operator*(f32) const;
};

struct cM3dGSph {
    /* 8026F648 */ void SetC(cXyz const&);
    /* 8026F708 */ void SetR(f32);
    /* 80650250 */ ~cM3dGSph();
};

struct cM3dGAab {
    /* 80650298 */ ~cM3dGAab();
};

struct dCcD_GStts {
    /* 80083760 */ dCcD_GStts();
    /* 80083830 */ void Move();
    /* 806502E0 */ ~dCcD_GStts();
};

struct dBgS_ObjAcch {
    /* 8065033C */ ~dBgS_ObjAcch();
};

struct dBgS_AcchCir {
    /* 80075EAC */ dBgS_AcchCir();
    /* 80075F58 */ void SetWall(f32, f32);
    /* 806503AC */ ~dBgS_AcchCir();
};

struct cCcD_GStts {
    /* 8065043C */ ~cCcD_GStts();
};

struct mDoMtx_stack_c {
    /* 8000CD64 */ void transS(cXyz const&);
};

struct fopAc_ac_c {
    /* 80018B64 */ fopAc_ac_c();
};

struct csXyz {};

struct _GXColor {};

struct dKy_tevstr_c {};

struct dPa_levelEcallBack {};

struct dPa_control_c {
    struct level_c {
        /* 8004B918 */ void getEmitter(u32);
    };

    /* 8004CA90 */ void set(u8, u16, cXyz const*, dKy_tevstr_c const*, csXyz const*, cXyz const*,
                            u8, dPa_levelEcallBack*, s8, _GXColor const*, _GXColor const*,
                            cXyz const*, f32);
    /* 8004D4CC */ void set(u32, u8, u16, cXyz const*, dKy_tevstr_c const*, csXyz const*,
                            cXyz const*, u8, dPa_levelEcallBack*, s8, _GXColor const*,
                            _GXColor const*, cXyz const*, f32);
};

struct dBgS {};

struct dBgS_Acch {
    /* 80075F94 */ ~dBgS_Acch();
    /* 800760A0 */ dBgS_Acch();
    /* 80076248 */ void Set(cXyz*, cXyz*, fopAc_ac_c*, int, dBgS_AcchCir*, cXyz*, csXyz*, csXyz*);
    /* 80076AAC */ void CrrPos(dBgS&);
};

struct dBgS_PolyPassChk {
    /* 80078E68 */ void SetObj();
};

struct dCcD_Stts {
    /* 80083860 */ void Init(int, int, fopAc_ac_c*);
};

struct dCcD_GObjInf {
    /* 80083A28 */ dCcD_GObjInf();
    /* 800842C0 */ void ChkAtHit();
    /* 80084460 */ void ChkTgHit();
};

struct dCcD_SrcCps {};

struct dCcD_Cps {
    /* 800847D0 */ void Set(dCcD_SrcCps const&);
    /* 80084824 */ void CalcAtVec();
};

struct dCcD_SrcSph {};

struct dCcD_Sph {
    /* 80084A34 */ void Set(dCcD_SrcSph const&);
};

struct daPy_py_c {
    /* 8015F398 */ void checkMasterSwordEquip();
};

struct dScnKy_env_light_c {
    /* 801A37C4 */ void settingTevStruct(int, cXyz*, dKy_tevstr_c*);
};

struct cCcD_Obj {};

struct cCcS {
    /* 80264BA8 */ void Set(cCcD_Obj*);
};

struct cBgS_PolyInfo {
    /* 802680B0 */ ~cBgS_PolyInfo();
};

struct cM3dGCir {
    /* 8026EF18 */ ~cM3dGCir();
};

struct cM3dGCps {
    /* 8026EF88 */ cM3dGCps();
    /* 8026F000 */ void Set(cXyz const&, cXyz const&, f32);
};

struct Vec {};

struct JAISoundID {};

struct Z2SeMgr {
    /* 802AB984 */ void seStart(JAISoundID, Vec const*, u32, s8, f32, f32, f32, f32, u8);
    /* 802AC50C */ void seStartLevel(JAISoundID, Vec const*, u32, s8, f32, f32, f32, f32, u8);
};

struct daB_ZANT_c {
    /* 80640654 */ void getMagicSpeed();
    /* 80640664 */ void getMagicWaterSpeed();
};

//
// Forward References:
//

static void daB_ZANTM_Draw(daB_ZANTM_c*);      // 2
static void daB_ZANTM_Execute(daB_ZANTM_c*);   // 2
static bool daB_ZANTM_IsDelete(daB_ZANTM_c*);  // 2
static void daB_ZANTM_Delete(daB_ZANTM_c*);    // 2
static void daB_ZANTM_Create(daB_ZANTM_c*);    // 2

extern "C" void draw__11daB_ZANTM_cFv();                       // 1
extern "C" static void daB_ZANTM_Draw__FP11daB_ZANTM_c();      // 1
extern "C" void setMagicEffect__11daB_ZANTM_cFv();             // 1
extern "C" void setMagicHitEffect__11daB_ZANTM_cFv();          // 1
extern "C" void executeSmall__11daB_ZANTM_cFv();               // 1
extern "C" void cc_set__11daB_ZANTM_cFv();                     // 1
extern "C" void execute__11daB_ZANTM_cFv();                    // 1
extern "C" static void daB_ZANTM_Execute__FP11daB_ZANTM_c();   // 1
extern "C" static bool daB_ZANTM_IsDelete__FP11daB_ZANTM_c();  // 1
extern "C" bool _delete__11daB_ZANTM_cFv();                    // 1
extern "C" static void daB_ZANTM_Delete__FP11daB_ZANTM_c();    // 1
extern "C" void create__11daB_ZANTM_cFv();                     // 1
extern "C" void __ct__11daB_ZANTM_cFv();                       // 1
extern "C" void __dt__8cM3dGSphFv();                           // 1
extern "C" void __dt__8cM3dGAabFv();                           // 1
extern "C" void __dt__10dCcD_GSttsFv();                        // 1
extern "C" void __dt__12dBgS_ObjAcchFv();                      // 1
extern "C" void __dt__12dBgS_AcchCirFv();                      // 1
extern "C" static void daB_ZANTM_Create__FP11daB_ZANTM_c();    // 1
extern "C" void __dt__10cCcD_GSttsFv();                        // 1
extern "C" static void func_80650484();                        // 1
extern "C" static void func_8065048C();                        // 1
extern "C" extern u32 const lit_3858;
extern "C" extern u32 const lit_3859;
extern "C" extern u8 const lit_3860[4];
extern "C" extern u32 const lit_3861;
extern "C" extern u32 const lit_3862;
extern "C" extern u32 const lit_3863[1 + 1 /* padding */];
extern "C" extern u8 const lit_3865[8];
extern "C" extern u32 const lit_3939;
extern "C" extern u32 const lit_3940;
extern "C" extern u32 lit_1787[1 + 4 /* padding */];
extern "C" extern u8 data_80650508[76];
extern "C" extern u8 data_80650554[64];
extern "C" extern u8 data_80650594[64];
extern "C" extern void* g_profile_B_ZANTM[12];

//
// External References:
//

void fopAcM_SearchByID(unsigned int, fopAc_ac_c**);  // 2
void fopAcM_delete(fopAc_ac_c*);                     // 2
void fopAcM_SetMin(fopAc_ac_c*, f32, f32, f32);      // 2
void fopAcM_SetMax(fopAc_ac_c*, f32, f32, f32);      // 2
void fopAcM_posMoveF(fopAc_ac_c*, cXyz const*);      // 2
void cLib_chaseF(f32*, f32, f32);                    // 2
void cLib_chaseAngleS(s16*, s16, s16);               // 2
void cLib_targetAngleY(Vec const*, Vec const*);      // 2
void cLib_targetAngleX(cXyz const*, cXyz const*);    // 2
void operator delete(void*);                         // 2

extern "C" void transS__14mDoMtx_stack_cFRC4cXyz();          // 1
extern "C" void __ct__10fopAc_ac_cFv();                      // 1
extern "C" void fopAcM_SearchByID__FUiPP10fopAc_ac_c();      // 1
extern "C" void fopAcM_delete__FP10fopAc_ac_c();             // 1
extern "C" void fopAcM_SetMin__FP10fopAc_ac_cfff();          // 1
extern "C" void fopAcM_SetMax__FP10fopAc_ac_cfff();          // 1
extern "C" void fopAcM_posMoveF__FP10fopAc_ac_cPC4cXyz();    // 1
extern "C" void getEmitter__Q213dPa_control_c7level_cFUl();  // 1
extern "C" void
set__13dPa_control_cFUcUsPC4cXyzPC12dKy_tevstr_cPC5csXyzPC4cXyzUcP18dPa_levelEcallBackScPC8_GXColorPC8_GXColorPC4cXyzf();  // 1
extern "C" void
set__13dPa_control_cFUlUcUsPC4cXyzPC12dKy_tevstr_cPC5csXyzPC4cXyzUcP18dPa_levelEcallBackScPC8_GXColorPC8_GXColorPC4cXyzf();  // 1
extern "C" void __ct__12dBgS_AcchCirFv();      // 1
extern "C" void SetWall__12dBgS_AcchCirFff();  // 1
extern "C" void __dt__9dBgS_AcchFv();          // 1
extern "C" void __ct__9dBgS_AcchFv();          // 1
extern "C" void
Set__9dBgS_AcchFP4cXyzP4cXyzP10fopAc_ac_ciP12dBgS_AcchCirP4cXyzP5csXyzP5csXyz();  // 1
extern "C" void CrrPos__9dBgS_AcchFR4dBgS();                                      // 1
extern "C" void SetObj__16dBgS_PolyPassChkFv();                                   // 1
extern "C" void __ct__10dCcD_GSttsFv();                                           // 1
extern "C" void Move__10dCcD_GSttsFv();                                           // 1
extern "C" void Init__9dCcD_SttsFiiP10fopAc_ac_c();                               // 1
extern "C" void __ct__12dCcD_GObjInfFv();                                         // 1
extern "C" void ChkAtHit__12dCcD_GObjInfFv();                                     // 1
extern "C" void ChkTgHit__12dCcD_GObjInfFv();                                     // 1
extern "C" void Set__8dCcD_CpsFRC11dCcD_SrcCps();                                 // 1
extern "C" void CalcAtVec__8dCcD_CpsFv();                                         // 1
extern "C" void Set__8dCcD_SphFRC11dCcD_SrcSph();                                 // 1
extern "C" void checkMasterSwordEquip__9daPy_py_cFv();                            // 1
extern "C" void settingTevStruct__18dScnKy_env_light_cFiP4cXyzP12dKy_tevstr_c();  // 1
extern "C" void Set__4cCcSFP8cCcD_Obj();                                          // 1
extern "C" void __ml__4cXyzCFf();                                                 // 1
extern "C" void __dt__13cBgS_PolyInfoFv();                                        // 1
extern "C" void __dt__8cM3dGCirFv();                                              // 1
extern "C" void __ct__8cM3dGCpsFv();                                              // 1
extern "C" void Set__8cM3dGCpsFRC4cXyzRC4cXyzf();                                 // 1
extern "C" void SetC__8cM3dGSphFRC4cXyz();                                        // 1
extern "C" void SetR__8cM3dGSphFf();                                              // 1
extern "C" void cLib_chaseF__FPfff();                                             // 1
extern "C" void cLib_chaseAngleS__FPsss();                                        // 1
extern "C" void cLib_targetAngleY__FPC3VecPC3Vec();                               // 1
extern "C" void cLib_targetAngleX__FPC4cXyzPC4cXyz();                             // 1
extern "C" void seStart__7Z2SeMgrF10JAISoundIDPC3VecUlScffffUc();                 // 1
extern "C" void seStartLevel__7Z2SeMgrF10JAISoundIDPC3VecUlScffffUc();            // 1
extern "C" void __dl__FPv();                                                      // 1
extern "C" void PSMTXCopy();                                                      // 1
extern "C" void _savegpr_23();                                                    // 1
extern "C" void _savegpr_26();                                                    // 1
extern "C" void _savegpr_27();                                                    // 1
extern "C" void _savegpr_29();                                                    // 1
extern "C" void _restgpr_23();                                                    // 1
extern "C" void _restgpr_26();                                                    // 1
extern "C" void _restgpr_27();                                                    // 1
extern "C" void _restgpr_29();                                                    // 1
extern "C" extern void* g_fopAc_Method[8];
extern "C" extern void* g_fpcLf_Method[5 + 1 /* padding */];
extern "C" extern void* __vt__8dCcD_Sph[36];
extern "C" extern void* __vt__8dCcD_Cps[36];
extern "C" extern void* __vt__9dCcD_Stts[11];
extern "C" extern void* __vt__12cCcD_SphAttr[25];
extern "C" extern void* __vt__12cCcD_CpsAttr[25];
extern "C" extern void* __vt__14cCcD_ShapeAttr[22];
extern "C" extern void* __vt__9cCcD_Stts[8];
extern "C" extern u8 now__14mDoMtx_stack_c[48];
extern "C" extern u8 g_dComIfG_gameInfo[122384];
extern "C" extern u8 g_env_light[4880];
extern "C" extern u8 sincosTable___5JMath[65536];
extern "C" extern u8 struct_80450D64[4];
extern "C" extern u8 mParticleTracePCB__13dPa_control_c[4 + 4 /* padding */];
extern "C" extern u8 mAudioMgrPtr__10Z2AudioMgr[4 + 4 /* padding */];
extern "C" void getMagicSpeed__10daB_ZANT_cFv();       // 1
extern "C" void getMagicWaterSpeed__10daB_ZANT_cFv();  // 1

//
// Declarations:
//

/* 8064F778-8064F7B4 003C+00 s=1 e=0 z=0  None .text      draw__11daB_ZANTM_cFv */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void daB_ZANTM_c::draw() {
    nofralloc
#include "asm/rel/d/a/b/d_a_b_zant_magic/d_a_b_zant_magic/draw__11daB_ZANTM_cFv.s"
}
#pragma pop

/* 8064F7B4-8064F7D4 0020+00 s=1 e=0 z=0  None .text      daB_ZANTM_Draw__FP11daB_ZANTM_c */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm static void daB_ZANTM_Draw(daB_ZANTM_c* param_0) {
    nofralloc
#include "asm/rel/d/a/b/d_a_b_zant_magic/d_a_b_zant_magic/daB_ZANTM_Draw__FP11daB_ZANTM_c.s"
}
#pragma pop

/* ############################################################################################## */
/* 8065049C-806504A0 0004+00 s=5 e=0 z=0  None .rodata    @3721 */
SECTION_RODATA static u32 const lit_3721 = 0x3F000000;

/* 806504A0-806504A4 0004+00 s=1 e=0 z=0  None .rodata    @3722 */
SECTION_RODATA static u32 const lit_3722 = 0x3F4CCCCD;

/* 806504E8-806504F4 000C+00 s=1 e=0 z=0  None .data      cNullVec__6Z2Calc */
SECTION_DATA static u8 cNullVec__6Z2Calc[12] = {
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
};

/* 806504F4-80650508 0004+10 s=0 e=0 z=0  None .data      @1787 */
SECTION_DATA u32 lit_1787[1 + 4 /* padding */] = {
    0x02000201,
    /* padding */
    0x40080000,
    0x00000000,
    0x3FE00000,
    0x00000000,
};

/* 80650508-80650554 004C+00 s=0 e=0 z=0  None .data cc_zant_src__30@unnamed@d_a_b_zant_magic_cpp@
 */
SECTION_DATA u8 data_80650508[76] = {
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x04, 0x00, 0x02, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x1D,
    0xD8, 0xFB, 0xFD, 0xFF, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x0D, 0x00, 0x01, 0x00,
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0x00, 0x00, 0x00, 0x00,
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x41, 0xA0, 0x00, 0x00,
};

/* 80650554-80650594 0040+00 s=0 e=0 z=0  None .data
 * cc_zant_src2__30@unnamed@d_a_b_zant_magic_cpp@               */
SECTION_DATA u8 data_80650554[64] = {
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x04, 0x00, 0x02, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
    0x00, 0x00, 0x60, 0x00, 0x00, 0x00, 0x00, 0x03, 0x00, 0x00, 0x00, 0x00, 0x09, 0x00, 0x00, 0x00,
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x03, 0x00, 0x00, 0x00, 0x00,
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x42, 0x20, 0x00, 0x00,
};

/* 80650594-806505D4 0040+00 s=0 e=0 z=0  None .data
 * cc_zant_src3__30@unnamed@d_a_b_zant_magic_cpp@               */
SECTION_DATA u8 data_80650594[64] = {
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x04, 0x00, 0x02, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
    0x00, 0x00, 0x00, 0x02, 0x00, 0x00, 0x00, 0x03, 0x00, 0x00, 0x00, 0x00, 0x09, 0x00, 0x00, 0x00,
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0x00, 0x00, 0x00, 0x00,
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x42, 0x20, 0x00, 0x00,
};

/* 806505D4-806505DC 0008+00 s=1 e=0 z=0  None .data      magic_effect_id$3667 */
SECTION_DATA static u8 data_806505D4[8] = {
    0x89, 0x0D, 0x89, 0x0E, 0x89, 0x0F, 0x89, 0x10,
};

/* 8064F7D4-8064F938 0164+00 s=1 e=0 z=0  None .text      setMagicEffect__11daB_ZANTM_cFv */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void daB_ZANTM_c::setMagicEffect() {
    nofralloc
#include "asm/rel/d/a/b/d_a_b_zant_magic/d_a_b_zant_magic/setMagicEffect__11daB_ZANTM_cFv.s"
}
#pragma pop

/* ############################################################################################## */
/* 806504A4-806504A8 0004+00 s=1 e=0 z=0  None .rodata    @3723 */
SECTION_RODATA static u32 const lit_3723 = 0x3F800000;

/* 806504A8-806504AC 0004+00 s=1 e=0 z=0  None .rodata    @3753 */
SECTION_RODATA static u32 const lit_3753 = 0xBF800000;

/* 806504AC-806504B0 0004+00 s=1 e=0 z=0  None .rodata    @3754 */
SECTION_RODATA static u32 const lit_3754 = 0x41C80000;

/* 806505DC-806505E4 0008+00 s=1 e=0 z=0  None .data      magic_effect_id$3729 */
SECTION_DATA static u8 data_806505DC[8] = {
    0x88, 0x62, 0x88, 0x63, 0x88, 0x64, 0x88, 0x65,
};

/* 8064F938-8064FA50 0118+00 s=1 e=0 z=0  None .text      setMagicHitEffect__11daB_ZANTM_cFv */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void daB_ZANTM_c::setMagicHitEffect() {
    nofralloc
#include "asm/rel/d/a/b/d_a_b_zant_magic/d_a_b_zant_magic/setMagicHitEffect__11daB_ZANTM_cFv.s"
}
#pragma pop

/* 8064FA50-8064FD6C 031C+00 s=1 e=0 z=0  None .text      executeSmall__11daB_ZANTM_cFv */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void daB_ZANTM_c::executeSmall() {
    nofralloc
#include "asm/rel/d/a/b/d_a_b_zant_magic/d_a_b_zant_magic/executeSmall__11daB_ZANTM_cFv.s"
}
#pragma pop

/* ############################################################################################## */
/* 806504B0-806504B4 0004+00 s=0 e=0 z=0  None .rodata    @3858 */
SECTION_RODATA u32 const lit_3858 = 0x42200000;

/* 806504B4-806504B8 0004+00 s=0 e=0 z=0  None .rodata    @3859 */
SECTION_RODATA u32 const lit_3859 = 0x42C80000;

/* 806504B8-806504BC 0004+00 s=0 e=0 z=0  None .rodata    @3860 */
SECTION_RODATA u8 const lit_3860[4] = {
    0x00,
    0x00,
    0x00,
    0x00,
};

/* 806504BC-806504C0 0004+00 s=0 e=0 z=0  None .rodata    @3861 */
SECTION_RODATA u32 const lit_3861 = 0x42700000;

/* 806504C0-806504C4 0004+00 s=0 e=0 z=0  None .rodata    @3862 */
SECTION_RODATA u32 const lit_3862 = 0x43820000;

/* 806504C4-806504CC 0004+04 s=0 e=0 z=0  None .rodata    @3863 */
SECTION_RODATA u32 const lit_3863[1 + 1 /* padding */] = {
    0x3DCCCCCD,
    /* padding */
    0x00000000,
};

/* 806504CC-806504D4 0008+00 s=0 e=0 z=0  None .rodata    @3865 */
SECTION_RODATA u8 const lit_3865[8] = {
    0x43, 0x30, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
};

/* 806504D4-806504D8 0004+00 s=1 e=0 z=0  None .rodata    @3878 */
SECTION_RODATA static u32 const lit_3878 = 0x41F00000;

/* 806504D8-806504DC 0004+00 s=1 e=0 z=0  None .rodata    @3879 */
SECTION_RODATA static u32 const lit_3879 = 0x41A00000;

/* 806504DC-806504E0 0004+00 s=1 e=0 z=0  None .rodata    @3880 */
SECTION_RODATA static u32 const lit_3880 = 0x42480000;

/* 8064FD6C-8064FE6C 0100+00 s=1 e=0 z=0  None .text      cc_set__11daB_ZANTM_cFv */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void daB_ZANTM_c::cc_set() {
    nofralloc
#include "asm/rel/d/a/b/d_a_b_zant_magic/d_a_b_zant_magic/cc_set__11daB_ZANTM_cFv.s"
}
#pragma pop

/* 8064FE6C-8064FF04 0098+00 s=1 e=0 z=0  None .text      execute__11daB_ZANTM_cFv */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void daB_ZANTM_c::execute() {
    nofralloc
#include "asm/rel/d/a/b/d_a_b_zant_magic/d_a_b_zant_magic/execute__11daB_ZANTM_cFv.s"
}
#pragma pop

/* 8064FF04-8064FF24 0020+00 s=1 e=0 z=0  None .text      daB_ZANTM_Execute__FP11daB_ZANTM_c */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm static void daB_ZANTM_Execute(daB_ZANTM_c* param_0) {
    nofralloc
#include "asm/rel/d/a/b/d_a_b_zant_magic/d_a_b_zant_magic/daB_ZANTM_Execute__FP11daB_ZANTM_c.s"
}
#pragma pop

/* 8064FF24-8064FF2C 0008+00 s=1 e=0 z=0  None .text      daB_ZANTM_IsDelete__FP11daB_ZANTM_c */
static bool daB_ZANTM_IsDelete(daB_ZANTM_c* param_0) {
    return true;
}

/* 8064FF2C-8064FF34 0008+00 s=1 e=0 z=0  None .text      _delete__11daB_ZANTM_cFv */
bool daB_ZANTM_c::_delete() {
    return true;
}

/* 8064FF34-8064FF54 0020+00 s=1 e=0 z=0  None .text      daB_ZANTM_Delete__FP11daB_ZANTM_c */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm static void daB_ZANTM_Delete(daB_ZANTM_c* param_0) {
    nofralloc
#include "asm/rel/d/a/b/d_a_b_zant_magic/d_a_b_zant_magic/daB_ZANTM_Delete__FP11daB_ZANTM_c.s"
}
#pragma pop

/* 8064FF54-806500A8 0154+00 s=1 e=0 z=0  None .text      create__11daB_ZANTM_cFv */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void daB_ZANTM_c::create() {
    nofralloc
#include "asm/rel/d/a/b/d_a_b_zant_magic/d_a_b_zant_magic/create__11daB_ZANTM_cFv.s"
}
#pragma pop

/* ############################################################################################## */
/* 806505E4-80650604 0020+00 s=1 e=0 z=0  None .data      l_daB_ZANTM_Method */
SECTION_DATA static void* l_daB_ZANTM_Method[8] = {
    /* 0    */ (void*)daB_ZANTM_Create__FP11daB_ZANTM_c,
    /* 1    */ (void*)daB_ZANTM_Delete__FP11daB_ZANTM_c,
    /* 2    */ (void*)daB_ZANTM_Execute__FP11daB_ZANTM_c,
    /* 3    */ (void*)daB_ZANTM_IsDelete__FP11daB_ZANTM_c,
    /* 4    */ (void*)daB_ZANTM_Draw__FP11daB_ZANTM_c,
    /* 5    */ (void*)NULL,
    /* 6    */ (void*)NULL,
    /* 7    */ (void*)NULL,
};

/* 80650604-80650634 0030+00 s=0 e=0 z=1  None .data      g_profile_B_ZANTM */
SECTION_DATA void* g_profile_B_ZANTM[12] = {
    /* 0    */ (void*)0xFFFFFFFD,
    /* 1    */ (void*)0x0004FFFD,
    /* 2    */ (void*)0x00FA0000,
    /* 3    */ (void*)&g_fpcLf_Method,
    /* 4    */ (void*)0x00000C0C,
    /* 5    */ (void*)NULL,
    /* 6    */ (void*)NULL,
    /* 7    */ (void*)&g_fopAc_Method,
    /* 8    */ (void*)0x00E30000,
    /* 9    */ (void*)&l_daB_ZANTM_Method,
    /* 10   */ (void*)0x00040100,
    /* 11   */ (void*)0x020E0000,
};

/* 80650634-80650640 000C+00 s=1 e=0 z=0  None .data      __vt__12dBgS_AcchCir */
SECTION_DATA static void* __vt__12dBgS_AcchCir[3] = {
    /* 0    */ (void*)NULL /* RTTI */,
    /* 1    */ (void*)NULL,
    /* 2    */ (void*)__dt__12dBgS_AcchCirFv,
};

/* 80650640-8065064C 000C+00 s=2 e=0 z=0  None .data      __vt__10cCcD_GStts */
SECTION_DATA static void* __vt__10cCcD_GStts[3] = {
    /* 0    */ (void*)NULL /* RTTI */,
    /* 1    */ (void*)NULL,
    /* 2    */ (void*)__dt__10cCcD_GSttsFv,
};

/* 8065064C-80650658 000C+00 s=1 e=0 z=0  None .data      __vt__10dCcD_GStts */
SECTION_DATA static void* __vt__10dCcD_GStts[3] = {
    /* 0    */ (void*)NULL /* RTTI */,
    /* 1    */ (void*)NULL,
    /* 2    */ (void*)__dt__10dCcD_GSttsFv,
};

/* 80650658-80650664 000C+00 s=2 e=0 z=0  None .data      __vt__8cM3dGSph */
SECTION_DATA static void* __vt__8cM3dGSph[3] = {
    /* 0    */ (void*)NULL /* RTTI */,
    /* 1    */ (void*)NULL,
    /* 2    */ (void*)__dt__8cM3dGSphFv,
};

/* 80650664-80650670 000C+00 s=2 e=0 z=0  None .data      __vt__8cM3dGAab */
SECTION_DATA static void* __vt__8cM3dGAab[3] = {
    /* 0    */ (void*)NULL /* RTTI */,
    /* 1    */ (void*)NULL,
    /* 2    */ (void*)__dt__8cM3dGAabFv,
};

/* 80650670-80650694 0024+00 s=2 e=0 z=0  None .data      __vt__12dBgS_ObjAcch */
SECTION_DATA static void* __vt__12dBgS_ObjAcch[9] = {
    /* 0    */ (void*)NULL /* RTTI */,
    /* 1    */ (void*)NULL,
    /* 2    */ (void*)__dt__12dBgS_ObjAcchFv,
    /* 3    */ (void*)NULL,
    /* 4    */ (void*)NULL,
    /* 5    */ (void*)func_8065048C,
    /* 6    */ (void*)NULL,
    /* 7    */ (void*)NULL,
    /* 8    */ (void*)func_80650484,
};

/* 806500A8-80650250 01A8+00 s=1 e=0 z=0  None .text      __ct__11daB_ZANTM_cFv */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm daB_ZANTM_c::daB_ZANTM_c() {
    nofralloc
#include "asm/rel/d/a/b/d_a_b_zant_magic/d_a_b_zant_magic/__ct__11daB_ZANTM_cFv.s"
}
#pragma pop

/* 80650250-80650298 0048+00 s=1 e=0 z=0  None .text      __dt__8cM3dGSphFv */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm cM3dGSph::~cM3dGSph() {
    nofralloc
#include "asm/rel/d/a/b/d_a_b_zant_magic/d_a_b_zant_magic/__dt__8cM3dGSphFv.s"
}
#pragma pop

/* 80650298-806502E0 0048+00 s=1 e=0 z=0  None .text      __dt__8cM3dGAabFv */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm cM3dGAab::~cM3dGAab() {
    nofralloc
#include "asm/rel/d/a/b/d_a_b_zant_magic/d_a_b_zant_magic/__dt__8cM3dGAabFv.s"
}
#pragma pop

/* 806502E0-8065033C 005C+00 s=1 e=0 z=0  None .text      __dt__10dCcD_GSttsFv */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm dCcD_GStts::~dCcD_GStts() {
    nofralloc
#include "asm/rel/d/a/b/d_a_b_zant_magic/d_a_b_zant_magic/__dt__10dCcD_GSttsFv.s"
}
#pragma pop

/* 8065033C-806503AC 0070+00 s=3 e=0 z=0  None .text      __dt__12dBgS_ObjAcchFv */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm dBgS_ObjAcch::~dBgS_ObjAcch() {
    nofralloc
#include "asm/rel/d/a/b/d_a_b_zant_magic/d_a_b_zant_magic/__dt__12dBgS_ObjAcchFv.s"
}
#pragma pop

/* 806503AC-8065041C 0070+00 s=1 e=0 z=0  None .text      __dt__12dBgS_AcchCirFv */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm dBgS_AcchCir::~dBgS_AcchCir() {
    nofralloc
#include "asm/rel/d/a/b/d_a_b_zant_magic/d_a_b_zant_magic/__dt__12dBgS_AcchCirFv.s"
}
#pragma pop

/* 8065041C-8065043C 0020+00 s=1 e=0 z=0  None .text      daB_ZANTM_Create__FP11daB_ZANTM_c */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm static void daB_ZANTM_Create(daB_ZANTM_c* param_0) {
    nofralloc
#include "asm/rel/d/a/b/d_a_b_zant_magic/d_a_b_zant_magic/daB_ZANTM_Create__FP11daB_ZANTM_c.s"
}
#pragma pop

/* 8065043C-80650484 0048+00 s=1 e=0 z=0  None .text      __dt__10cCcD_GSttsFv */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm cCcD_GStts::~cCcD_GStts() {
    nofralloc
#include "asm/rel/d/a/b/d_a_b_zant_magic/d_a_b_zant_magic/__dt__10cCcD_GSttsFv.s"
}
#pragma pop

/* 80650484-8065048C 0008+00 s=1 e=0 z=0  None .text      @36@__dt__12dBgS_ObjAcchFv */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
extern "C" asm static void func_80650484() {
    nofralloc
#include "asm/rel/d/a/b/d_a_b_zant_magic/d_a_b_zant_magic/func_80650484.s"
}
#pragma pop

/* 8065048C-80650494 0008+00 s=1 e=0 z=0  None .text      @20@__dt__12dBgS_ObjAcchFv */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
extern "C" asm static void func_8065048C() {
    nofralloc
#include "asm/rel/d/a/b/d_a_b_zant_magic/d_a_b_zant_magic/func_8065048C.s"
}
#pragma pop

/* ############################################################################################## */
/* 806504E0-806504E4 0004+00 s=0 e=0 z=0  None .rodata    @3939 */
SECTION_RODATA u32 const lit_3939 = 0xC3C80000;

/* 806504E4-806504E8 0004+00 s=0 e=0 z=0  None .rodata    @3940 */
SECTION_RODATA u32 const lit_3940 = 0x43C80000;
