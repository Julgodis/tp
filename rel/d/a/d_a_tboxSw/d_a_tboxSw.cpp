// 
// Generated By: dol2asm
// Translation Unit: d_a_tboxSw
// 

#include "dolphin/types.h"

// 
// Types:
// 

struct fopAc_ac_c;
struct daTboxSw_c;

struct daTboxSw_c {
	bool Create();
	void create();
	void execute();
	bool draw();
	bool _delete();
};

struct fopAc_ac_c {
};

// 
// Forward References:
// 

void daTboxSw_Draw(daTboxSw_c*);
void daTboxSw_Execute(daTboxSw_c*);
void daTboxSw_Delete(daTboxSw_c*);
void daTboxSw_Create(fopAc_ac_c*);

extern "C" bool Create__10daTboxSw_cFv();
extern "C" void create__10daTboxSw_cFv();
extern "C" void execute__10daTboxSw_cFv();
extern "C" bool draw__10daTboxSw_cFv();
extern "C" bool _delete__10daTboxSw_cFv();
extern "C" void daTboxSw_Draw__FP10daTboxSw_c();
extern "C" void daTboxSw_Execute__FP10daTboxSw_c();
extern "C" void daTboxSw_Delete__FP10daTboxSw_c();
extern "C" void daTboxSw_Create__FP10fopAc_ac_c();
SECTION_DATA extern u8 l_daTboxSw_Method[32];
SECTION_DATA extern u8 g_profile_TBOX_SW[48];

// 
// External References:
// 

extern "C" void _unresolved();

extern "C" void _unresolved();

// 
// Declarations:
// 

/* 80D66858-80D66860 0008+00 .text      Create__10daTboxSw_cFv                                       */
bool daTboxSw_c::Create() {
	return true;
}


/* 80D66860-80D668C8 0068+00 .text      create__10daTboxSw_cFv                                       */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void daTboxSw_c::create() {
	nofralloc
#include "asm/rel/d/a/d_a_tboxSw/d_a_tboxSw/create__10daTboxSw_cFv.s"
}
#pragma pop


/* 80D668C8-80D66938 0070+00 .text      execute__10daTboxSw_cFv                                      */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void daTboxSw_c::execute() {
	nofralloc
#include "asm/rel/d/a/d_a_tboxSw/d_a_tboxSw/execute__10daTboxSw_cFv.s"
}
#pragma pop


/* 80D66938-80D66940 0008+00 .text      draw__10daTboxSw_cFv                                         */
bool daTboxSw_c::draw() {
	return true;
}


/* 80D66940-80D66948 0008+00 .text      _delete__10daTboxSw_cFv                                      */
bool daTboxSw_c::_delete() {
	return true;
}


/* 80D66948-80D66968 0020+00 .text      daTboxSw_Draw__FP10daTboxSw_c                                */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void daTboxSw_Draw(daTboxSw_c* field_0) {
	nofralloc
#include "asm/rel/d/a/d_a_tboxSw/d_a_tboxSw/daTboxSw_Draw__FP10daTboxSw_c.s"
}
#pragma pop


/* 80D66968-80D66988 0020+00 .text      daTboxSw_Execute__FP10daTboxSw_c                             */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void daTboxSw_Execute(daTboxSw_c* field_0) {
	nofralloc
#include "asm/rel/d/a/d_a_tboxSw/d_a_tboxSw/daTboxSw_Execute__FP10daTboxSw_c.s"
}
#pragma pop


/* 80D66988-80D669A8 0020+00 .text      daTboxSw_Delete__FP10daTboxSw_c                              */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void daTboxSw_Delete(daTboxSw_c* field_0) {
	nofralloc
#include "asm/rel/d/a/d_a_tboxSw/d_a_tboxSw/daTboxSw_Delete__FP10daTboxSw_c.s"
}
#pragma pop


/* 80D669A8-80D669C8 0020+00 .text      daTboxSw_Create__FP10fopAc_ac_c                              */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void daTboxSw_Create(fopAc_ac_c* field_0) {
	nofralloc
#include "asm/rel/d/a/d_a_tboxSw/d_a_tboxSw/daTboxSw_Create__FP10fopAc_ac_c.s"
}
#pragma pop


/* ############################################################################################## */
/* 80D669D0-80D669F0 0020+00 .data      l_daTboxSw_Method                                            */
u8 l_daTboxSw_Method[32] = {
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
};

/* 80D669F0-80D66A20 0030+00 .data      g_profile_TBOX_SW                                            */
u8 g_profile_TBOX_SW[48] = {
	0xFF, 0xFF, 0xFF, 0xFD, 0x00, 0x07, 0xFF, 0xFD, 0x01, 0x6E, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
	0x00, 0x00, 0x05, 0x68, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
	0x02, 0x0E, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x04, 0x01, 0x00, 0x00, 0x0E, 0x00, 0x00,
};

