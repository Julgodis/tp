// 
// Generated By: dol2asm
// 

#include "dolphin/types.h"

// 
// Additional Symbols:
// 

extern "C" {
extern void _prolog();
extern void _epilog();
extern void _unresolved();
extern void createHeapCallBack__FP10fopAc_ac_c();
extern void __dt__4cXyzFv();
extern void __dt__5csXyzFv();
extern const u8 unknown_translation_unit_ctors__data_80AA6980[8];
extern const u8 unknown_translation_unit_dtors__data_80AA6988[4];
SECTION_RODATA extern const u8 LIT_4109[4];
SECTION_RODATA extern const u8 LIT_4110[4];
SECTION_RODATA extern const u8 LIT_4123[4];
SECTION_RODATA extern const u8 LIT_4189[4];
SECTION_RODATA extern const u8 LIT_4190[4];
SECTION_RODATA extern const u8 LIT_4975[8];
SECTION_DATA extern u8 cNullVec__6Z2Calc[12];
SECTION_DATA extern u8 ActionTable__13daNpcPasser_c[120];
SECTION_DATA extern u8 m_funcTbl__13daNpcPasser_c[112];
SECTION_DATA extern void* __vt__8cM3dGPla[3];
SECTION_DATA extern void* __vt__12dBgS_ObjAcch[9];
SECTION_DATA extern void* __vt__12dBgS_AcchCir[3];
SECTION_DATA extern void* __vt__10cCcD_GStts[3];
SECTION_DATA extern void* __vt__10dCcD_GStts[3];
SECTION_DATA extern void* __vt__8cM3dGAab[3];
SECTION_DATA extern void* __vt__8cM3dGCyl[3];
SECTION_DATA extern void* __vt__16dNpcLib_lookat_c[3];
SECTION_DATA extern void* __vt__10daNpcCd2_c[3];
SECTION_DATA extern void* __vt__13daNpcPasser_c[3];
}


/* ###################################################################################### */
/*                                         .text                                          */
/* ###################################################################################### */

/* 80AA2BA0-80AA2BCC 002C .text      _prolog                                                      */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void _prolog() {
	nofralloc
#include "asm/rel/d_a_npc_passer/executor/_prolog.s"
}
#pragma pop

/* 80AA2BCC-80AA2BF8 002C .text      _epilog                                                      */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void _epilog() {
	nofralloc
#include "asm/rel/d_a_npc_passer/executor/_epilog.s"
}
#pragma pop

/* 80AA2BF8-80AA2C18 0020 .text      _unresolved                                                  */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void _unresolved() {
	nofralloc
#include "asm/rel/d_a_npc_passer/executor/_unresolved.s"
}
#pragma pop


