// 
// Generated By: dol2asm
// Translation Unit: GXAttr
// 

#include "dol2asm.h"
#include "dolphin/types.h"
#include "dolphin/gx/GXAttr.h"

// 
// Forward References:
// 


extern "C" void GXSetVtxDesc(); // 1
extern "C" void GXSetVtxDescv(); // 1
extern "C" void __GXSetVCD(); // 1
extern "C" void __GXCalculateVLim(); // 1
extern "C" void GXClearVtxDesc(); // 1
extern "C" void GXSetVtxAttrFmt(); // 1
extern "C" void GXSetVtxAttrFmtv(); // 1
extern "C" void __GXSetVAT(); // 1
extern "C" void GXSetArray(); // 1
extern "C" void GXInvalidateVtxCache(); // 1
extern "C" void GXSetTexCoordGen2(); // 1
extern "C" void GXSetNumTexGens(); // 1

// 
// External References:
// 


extern "C" void __GXSetMatrixIndex(); // 1
extern "C" extern void* __GXData;

// 
// Declarations:
// 

/* ############################################################################################## */
/* 803D2280-803D22E8 0068+00 s=1 e=0 z=0  None .data      @176                                                         */
SECTION_DATA static void* lit_176[26] = {
	/* 0    */ (void*)(((char*)GXSetVtxDesc)+0x20),
	/* 1    */ (void*)(((char*)GXSetVtxDesc)+0x34),
	/* 2    */ (void*)(((char*)GXSetVtxDesc)+0x48),
	/* 3    */ (void*)(((char*)GXSetVtxDesc)+0x5C),
	/* 4    */ (void*)(((char*)GXSetVtxDesc)+0x70),
	/* 5    */ (void*)(((char*)GXSetVtxDesc)+0x84),
	/* 6    */ (void*)(((char*)GXSetVtxDesc)+0x98),
	/* 7    */ (void*)(((char*)GXSetVtxDesc)+0xAC),
	/* 8    */ (void*)(((char*)GXSetVtxDesc)+0xC0),
	/* 9    */ (void*)(((char*)GXSetVtxDesc)+0xD4),
	/* 10   */ (void*)(((char*)GXSetVtxDesc)+0xE8),
	/* 11   */ (void*)(((char*)GXSetVtxDesc)+0x150),
	/* 12   */ (void*)(((char*)GXSetVtxDesc)+0x164),
	/* 13   */ (void*)(((char*)GXSetVtxDesc)+0x178),
	/* 14   */ (void*)(((char*)GXSetVtxDesc)+0x18C),
	/* 15   */ (void*)(((char*)GXSetVtxDesc)+0x1A0),
	/* 16   */ (void*)(((char*)GXSetVtxDesc)+0x1B4),
	/* 17   */ (void*)(((char*)GXSetVtxDesc)+0x1C8),
	/* 18   */ (void*)(((char*)GXSetVtxDesc)+0x1DC),
	/* 19   */ (void*)(((char*)GXSetVtxDesc)+0x1F0),
	/* 20   */ (void*)(((char*)GXSetVtxDesc)+0x204),
	/* 21   */ (void*)(((char*)GXSetVtxDesc)+0x214),
	/* 22   */ (void*)(((char*)GXSetVtxDesc)+0x214),
	/* 23   */ (void*)(((char*)GXSetVtxDesc)+0x214),
	/* 24   */ (void*)(((char*)GXSetVtxDesc)+0x214),
	/* 25   */ (void*)(((char*)GXSetVtxDesc)+0x11C),
};

/* 8035AEB8-8035B124 026C+00 s=1 e=70 z=6  None .text      GXSetVtxDesc                                                 */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
extern "C" asm void GXSetVtxDesc() {
	nofralloc
#include "asm/dolphin/gx/GXAttr/GXSetVtxDesc.s"
}
#pragma pop


/* ############################################################################################## */
/* 803D22E8-803D2350 0068+00 s=1 e=0 z=0  None .data      @223                                                         */
SECTION_DATA static void* lit_223[26] = {
	/* 0    */ (void*)(((char*)GXSetVtxDescv)+0x2C),
	/* 1    */ (void*)(((char*)GXSetVtxDescv)+0x40),
	/* 2    */ (void*)(((char*)GXSetVtxDescv)+0x54),
	/* 3    */ (void*)(((char*)GXSetVtxDescv)+0x68),
	/* 4    */ (void*)(((char*)GXSetVtxDescv)+0x7C),
	/* 5    */ (void*)(((char*)GXSetVtxDescv)+0x90),
	/* 6    */ (void*)(((char*)GXSetVtxDescv)+0xA4),
	/* 7    */ (void*)(((char*)GXSetVtxDescv)+0xB8),
	/* 8    */ (void*)(((char*)GXSetVtxDescv)+0xCC),
	/* 9    */ (void*)(((char*)GXSetVtxDescv)+0xE0),
	/* 10   */ (void*)(((char*)GXSetVtxDescv)+0xF4),
	/* 11   */ (void*)(((char*)GXSetVtxDescv)+0x15C),
	/* 12   */ (void*)(((char*)GXSetVtxDescv)+0x170),
	/* 13   */ (void*)(((char*)GXSetVtxDescv)+0x184),
	/* 14   */ (void*)(((char*)GXSetVtxDescv)+0x198),
	/* 15   */ (void*)(((char*)GXSetVtxDescv)+0x1AC),
	/* 16   */ (void*)(((char*)GXSetVtxDescv)+0x1C0),
	/* 17   */ (void*)(((char*)GXSetVtxDescv)+0x1D4),
	/* 18   */ (void*)(((char*)GXSetVtxDescv)+0x1E8),
	/* 19   */ (void*)(((char*)GXSetVtxDescv)+0x1FC),
	/* 20   */ (void*)(((char*)GXSetVtxDescv)+0x210),
	/* 21   */ (void*)(((char*)GXSetVtxDescv)+0x220),
	/* 22   */ (void*)(((char*)GXSetVtxDescv)+0x220),
	/* 23   */ (void*)(((char*)GXSetVtxDescv)+0x220),
	/* 24   */ (void*)(((char*)GXSetVtxDescv)+0x220),
	/* 25   */ (void*)(((char*)GXSetVtxDescv)+0x128),
};

/* 8035B124-8035B3AC 0288+00 s=1 e=0 z=1  None .text      GXSetVtxDescv                                                */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
extern "C" asm void GXSetVtxDescv() {
	nofralloc
#include "asm/dolphin/gx/GXAttr/GXSetVtxDescv.s"
}
#pragma pop


/* 8035B3AC-8035B468 00BC+00 s=0 e=2 z=0  None .text      __GXSetVCD                                                   */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
extern "C" asm void __GXSetVCD() {
	nofralloc
#include "asm/dolphin/gx/GXAttr/__GXSetVCD.s"
}
#pragma pop


/* ############################################################################################## */
/* 80450A80-80450A84 0004+00 s=1 e=0 z=0  None .sdata     tbl1$241                                                     */
SECTION_SDATA static u8 data_80450A80[4] = {
	0x00, 0x04, 0x01, 0x02,
};

/* 80450A84-80450A88 0004+00 s=1 e=0 z=0  None .sdata     tbl2$242                                                     */
SECTION_SDATA static u8 data_80450A84[4] = {
	0x00, 0x08, 0x01, 0x02,
};

/* 80450A88-80450A90 0004+04 s=1 e=0 z=0  None .sdata     tbl3$243                                                     */
SECTION_SDATA static u8 data_80450A88[4 + 4 /* padding */] = {
	0x00, 0x0C, 0x01, 0x02,
	/* padding */
	0x00, 0x00, 0x00, 0x00,
};

/* 8035B468-8035B58C 0124+00 s=0 e=2 z=0  None .text      __GXCalculateVLim                                            */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
extern "C" asm void __GXCalculateVLim() {
	nofralloc
#include "asm/dolphin/gx/GXAttr/__GXCalculateVLim.s"
}
#pragma pop


/* 8035B58C-8035B5C4 0038+00 s=0 e=66 z=7  None .text      GXClearVtxDesc                                               */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
extern "C" asm void GXClearVtxDesc() {
	nofralloc
#include "asm/dolphin/gx/GXAttr/GXClearVtxDesc.s"
}
#pragma pop


/* ############################################################################################## */
/* 803D2350-803D2394 0044+00 s=1 e=0 z=0  None .data      @476                                                         */
SECTION_DATA static void* lit_476[17] = {
	/* 0    */ (void*)(((char*)GXSetVtxAttrFmt)+0x3C),
	/* 1    */ (void*)(((char*)GXSetVtxAttrFmt)+0x64),
	/* 2    */ (void*)(((char*)GXSetVtxAttrFmt)+0xB8),
	/* 3    */ (void*)(((char*)GXSetVtxAttrFmt)+0xD4),
	/* 4    */ (void*)(((char*)GXSetVtxAttrFmt)+0xF0),
	/* 5    */ (void*)(((char*)GXSetVtxAttrFmt)+0x118),
	/* 6    */ (void*)(((char*)GXSetVtxAttrFmt)+0x140),
	/* 7    */ (void*)(((char*)GXSetVtxAttrFmt)+0x168),
	/* 8    */ (void*)(((char*)GXSetVtxAttrFmt)+0x190),
	/* 9    */ (void*)(((char*)GXSetVtxAttrFmt)+0x1B8),
	/* 10   */ (void*)(((char*)GXSetVtxAttrFmt)+0x1E0),
	/* 11   */ (void*)(((char*)GXSetVtxAttrFmt)+0x208),
	/* 12   */ (void*)(((char*)GXSetVtxAttrFmt)+0x22C),
	/* 13   */ (void*)(((char*)GXSetVtxAttrFmt)+0x22C),
	/* 14   */ (void*)(((char*)GXSetVtxAttrFmt)+0x22C),
	/* 15   */ (void*)(((char*)GXSetVtxAttrFmt)+0x22C),
	/* 16   */ (void*)(((char*)GXSetVtxAttrFmt)+0x64),
};

/* 8035B5C4-8035B820 025C+00 s=1 e=69 z=6  None .text      GXSetVtxAttrFmt                                              */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
extern "C" asm void GXSetVtxAttrFmt() {
	nofralloc
#include "asm/dolphin/gx/GXAttr/GXSetVtxAttrFmt.s"
}
#pragma pop


/* ############################################################################################## */
/* 803D2394-803D23D8 0044+00 s=1 e=0 z=0  None .data      @503                                                         */
SECTION_DATA static void* lit_503[17] = {
	/* 0    */ (void*)(((char*)GXSetVtxAttrFmtv)+0x50),
	/* 1    */ (void*)(((char*)GXSetVtxAttrFmtv)+0x78),
	/* 2    */ (void*)(((char*)GXSetVtxAttrFmtv)+0xCC),
	/* 3    */ (void*)(((char*)GXSetVtxAttrFmtv)+0xE8),
	/* 4    */ (void*)(((char*)GXSetVtxAttrFmtv)+0x104),
	/* 5    */ (void*)(((char*)GXSetVtxAttrFmtv)+0x12C),
	/* 6    */ (void*)(((char*)GXSetVtxAttrFmtv)+0x154),
	/* 7    */ (void*)(((char*)GXSetVtxAttrFmtv)+0x17C),
	/* 8    */ (void*)(((char*)GXSetVtxAttrFmtv)+0x1A4),
	/* 9    */ (void*)(((char*)GXSetVtxAttrFmtv)+0x1CC),
	/* 10   */ (void*)(((char*)GXSetVtxAttrFmtv)+0x1F4),
	/* 11   */ (void*)(((char*)GXSetVtxAttrFmtv)+0x21C),
	/* 12   */ (void*)(((char*)GXSetVtxAttrFmtv)+0x240),
	/* 13   */ (void*)(((char*)GXSetVtxAttrFmtv)+0x240),
	/* 14   */ (void*)(((char*)GXSetVtxAttrFmtv)+0x240),
	/* 15   */ (void*)(((char*)GXSetVtxAttrFmtv)+0x240),
	/* 16   */ (void*)(((char*)GXSetVtxAttrFmtv)+0x78),
};

/* 8035B820-8035BAA0 0280+00 s=1 e=1 z=1  None .text      GXSetVtxAttrFmtv                                             */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
extern "C" asm void GXSetVtxAttrFmtv() {
	nofralloc
#include "asm/dolphin/gx/GXAttr/GXSetVtxAttrFmtv.s"
}
#pragma pop


/* 8035BAA0-8035BB28 0088+00 s=0 e=2 z=0  None .text      __GXSetVAT                                                   */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
extern "C" asm void __GXSetVAT() {
	nofralloc
#include "asm/dolphin/gx/GXAttr/__GXSetVAT.s"
}
#pragma pop


/* 8035BB28-8035BB6C 0044+00 s=0 e=13 z=5  None .text      GXSetArray                                                   */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
extern "C" asm void GXSetArray() {
	nofralloc
#include "asm/dolphin/gx/GXAttr/GXSetArray.s"
}
#pragma pop


/* 8035BB6C-8035BB7C 0010+00 s=0 e=6 z=0  None .text      GXInvalidateVtxCache                                         */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
extern "C" asm void GXInvalidateVtxCache() {
	nofralloc
#include "asm/dolphin/gx/GXAttr/GXInvalidateVtxCache.s"
}
#pragma pop


/* ############################################################################################## */
/* 803D23D8-803D23F4 001C+00 s=1 e=0 z=0  None .data      @740                                                         */
SECTION_DATA static void* lit_740[7] = {
	/* 0    */ (void*)(((char*)GXSetTexCoordGen2)+0x1CC),
	/* 1    */ (void*)(((char*)GXSetTexCoordGen2)+0x1E0),
	/* 2    */ (void*)(((char*)GXSetTexCoordGen2)+0x1F4),
	/* 3    */ (void*)(((char*)GXSetTexCoordGen2)+0x208),
	/* 4    */ (void*)(((char*)GXSetTexCoordGen2)+0x21C),
	/* 5    */ (void*)(((char*)GXSetTexCoordGen2)+0x230),
	/* 6    */ (void*)(((char*)GXSetTexCoordGen2)+0x244),
};

/* 803D23F4-803D2448 0054+00 s=1 e=0 z=0  None .data      @739                                                         */
SECTION_DATA static void* lit_739[21] = {
	/* 0    */ (void*)(((char*)GXSetTexCoordGen2)+0x38),
	/* 1    */ (void*)(((char*)GXSetTexCoordGen2)+0x44),
	/* 2    */ (void*)(((char*)GXSetTexCoordGen2)+0x50),
	/* 3    */ (void*)(((char*)GXSetTexCoordGen2)+0x5C),
	/* 4    */ (void*)(((char*)GXSetTexCoordGen2)+0x78),
	/* 5    */ (void*)(((char*)GXSetTexCoordGen2)+0x80),
	/* 6    */ (void*)(((char*)GXSetTexCoordGen2)+0x88),
	/* 7    */ (void*)(((char*)GXSetTexCoordGen2)+0x90),
	/* 8    */ (void*)(((char*)GXSetTexCoordGen2)+0x98),
	/* 9    */ (void*)(((char*)GXSetTexCoordGen2)+0xA0),
	/* 10   */ (void*)(((char*)GXSetTexCoordGen2)+0xA8),
	/* 11   */ (void*)(((char*)GXSetTexCoordGen2)+0xB0),
	/* 12   */ (void*)(((char*)GXSetTexCoordGen2)+0xB4),
	/* 13   */ (void*)(((char*)GXSetTexCoordGen2)+0xB4),
	/* 14   */ (void*)(((char*)GXSetTexCoordGen2)+0xB4),
	/* 15   */ (void*)(((char*)GXSetTexCoordGen2)+0xB4),
	/* 16   */ (void*)(((char*)GXSetTexCoordGen2)+0xB4),
	/* 17   */ (void*)(((char*)GXSetTexCoordGen2)+0xB4),
	/* 18   */ (void*)(((char*)GXSetTexCoordGen2)+0xB4),
	/* 19   */ (void*)(((char*)GXSetTexCoordGen2)+0x68),
	/* 20   */ (void*)(((char*)GXSetTexCoordGen2)+0x70),
};

/* 8035BB7C-8035BDFC 0280+00 s=2 e=46 z=5  None .text      GXSetTexCoordGen2                                            */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
extern "C" asm void GXSetTexCoordGen2() {
	nofralloc
#include "asm/dolphin/gx/GXAttr/GXSetTexCoordGen2.s"
}
#pragma pop


/* 8035BDFC-8035BE38 003C+00 s=0 e=59 z=6  None .text      GXSetNumTexGens                                              */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
extern "C" asm void GXSetNumTexGens() {
	nofralloc
#include "asm/dolphin/gx/GXAttr/GXSetNumTexGens.s"
}
#pragma pop


