// 
// Generated By: dol2asm
// 

#include "dolphin/types.h"

// 
// Additional Symbols:
// 

extern "C" {
extern void PPCSync();
extern void OSSetCurrentContext();
extern void OSClearContext();
extern void OSDisableInterrupts();
extern void OSRestoreInterrupts();
extern void __OSSetInterruptHandler();
extern void __OSUnmaskInterrupts();
extern void OSGetCurrentThread();
extern void OSResumeThread();
extern void OSSuspendThread();
extern void GXCPInterruptHandler();
extern void GXInitFifoBase();
extern void GXInitFifoPtrs();
extern void GXInitFifoLimits();
extern void GXSetCPUFifo();
extern void GXSetGPFifo();
extern void GXSaveCPUFifo();
extern void __GXSaveCPUFifoAux();
extern void GXGetGPStatus();
extern void GXGetFifoBase();
extern void GXGetFifoSize();
extern void GXSetBreakPtCallback();
extern void __GXFifoInit();
extern void __GXFifoReadEnable();
extern void __GXFifoReadDisable();
extern void __GXFifoLink();
extern void __GXWriteFifoIntEnable();
extern void __GXWriteFifoIntReset();
extern void __GXCleanGPFifo();
extern void GXSetCurrentGXThread();
extern void GXGetCurrentGXThread();
extern void GXGetCPUFifo();
extern void GXGetGPFifo();
extern void GXFlush();
SECTION_SBSS extern u8 __piReg[4];
SECTION_SBSS extern u8 __cpReg[4];
SECTION_SBSS extern u8 CPUFifo[4];
SECTION_SBSS extern u8 GPFifo[4];
SECTION_SBSS extern u8 __GXCurrentThread[4];
SECTION_SBSS extern u8 data_80451954[4];
SECTION_SBSS extern u8 GXOverflowSuspendInProgress[4];
SECTION_SBSS extern u8 BreakPointCB[4];
SECTION_SBSS extern u8 __GXOverflowCount[4 + 4 /* padding */];
SECTION_SDATA2 extern void* __GXData;
}


/* ###################################################################################### */
/*                                         .sbss                                          */
/* ###################################################################################### */

extern "C" {
/* 80451948-8045194C 0004 .sbss      CPUFifo                                                      */
SECTION_SBSS u8 CPUFifo[4];
/* 8045194C-80451950 0004 .sbss      GPFifo                                                       */
SECTION_SBSS u8 GPFifo[4];
/* 80451950-80451954 0004 .sbss      __GXCurrentThread                                            */
SECTION_SBSS u8 __GXCurrentThread[4];
/* 80451954-80451958 0004 .sbss      None                                                         */
SECTION_SBSS u8 data_80451954[4];
/* 80451958-8045195C 0004 .sbss      GXOverflowSuspendInProgress                                  */
SECTION_SBSS u8 GXOverflowSuspendInProgress[4];
/* 8045195C-80451960 0004 .sbss      BreakPointCB                                                 */
SECTION_SBSS u8 BreakPointCB[4];
/* 80451960-80451968 0004 .sbss      __GXOverflowCount                                            */
SECTION_SBSS u8 __GXOverflowCount[4 + 4 /* padding */];
}


/* ###################################################################################### */
/*                                         .text                                          */
/* ###################################################################################### */

/* 8035A5A8-8035A6DC 0134 .text      GXCPInterruptHandler                                         */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void GXCPInterruptHandler() {
	nofralloc
#include "asm/dolphin/gx/GXFifo/GXCPInterruptHandler.s"
}
#pragma pop

/* 8035A6DC-8035A748 006C .text      GXInitFifoBase                                               */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void GXInitFifoBase() {
	nofralloc
#include "asm/dolphin/gx/GXFifo/GXInitFifoBase.s"
}
#pragma pop

/* 8035A748-8035A7B8 0070 .text      GXInitFifoPtrs                                               */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void GXInitFifoPtrs() {
	nofralloc
#include "asm/dolphin/gx/GXFifo/GXInitFifoPtrs.s"
}
#pragma pop

/* 8035A7B8-8035A7C4 000C .text      GXInitFifoLimits                                             */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void GXInitFifoLimits() {
	nofralloc
#include "asm/dolphin/gx/GXFifo/GXInitFifoLimits.s"
}
#pragma pop

/* 8035A7C4-8035A8EC 0128 .text      GXSetCPUFifo                                                 */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void GXSetCPUFifo() {
	nofralloc
#include "asm/dolphin/gx/GXFifo/GXSetCPUFifo.s"
}
#pragma pop

/* 8035A8EC-8035AA8C 01A0 .text      GXSetGPFifo                                                  */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void GXSetGPFifo() {
	nofralloc
#include "asm/dolphin/gx/GXFifo/GXSetGPFifo.s"
}
#pragma pop

/* 8035AA8C-8035AAC0 0034 .text      GXSaveCPUFifo                                                */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void GXSaveCPUFifo() {
	nofralloc
#include "asm/dolphin/gx/GXFifo/GXSaveCPUFifo.s"
}
#pragma pop

/* 8035AAC0-8035AB88 00C8 .text      __GXSaveCPUFifoAux                                           */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void __GXSaveCPUFifoAux() {
	nofralloc
#include "asm/dolphin/gx/GXFifo/__GXSaveCPUFifoAux.s"
}
#pragma pop

/* 8035AB88-8035ABD8 0050 .text      GXGetGPStatus                                                */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void GXGetGPStatus() {
	nofralloc
#include "asm/dolphin/gx/GXFifo/GXGetGPStatus.s"
}
#pragma pop

/* 8035ABD8-8035ABE0 0008 .text      GXGetFifoBase                                                */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void GXGetFifoBase() {
	nofralloc
#include "asm/dolphin/gx/GXFifo/GXGetFifoBase.s"
}
#pragma pop

/* 8035ABE0-8035ABE8 0008 .text      GXGetFifoSize                                                */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void GXGetFifoSize() {
	nofralloc
#include "asm/dolphin/gx/GXFifo/GXGetFifoSize.s"
}
#pragma pop

/* 8035ABE8-8035AC2C 0044 .text      GXSetBreakPtCallback                                         */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void GXSetBreakPtCallback() {
	nofralloc
#include "asm/dolphin/gx/GXFifo/GXSetBreakPtCallback.s"
}
#pragma pop

/* 8035AC2C-8035AC78 004C .text      __GXFifoInit                                                 */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void __GXFifoInit() {
	nofralloc
#include "asm/dolphin/gx/GXFifo/__GXFifoInit.s"
}
#pragma pop

/* 8035AC78-8035AC9C 0024 .text      __GXFifoReadEnable                                           */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void __GXFifoReadEnable() {
	nofralloc
#include "asm/dolphin/gx/GXFifo/__GXFifoReadEnable.s"
}
#pragma pop

/* 8035AC9C-8035ACC0 0024 .text      __GXFifoReadDisable                                          */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void __GXFifoReadDisable() {
	nofralloc
#include "asm/dolphin/gx/GXFifo/__GXFifoReadDisable.s"
}
#pragma pop

/* 8035ACC0-8035ACF4 0034 .text      __GXFifoLink                                                 */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void __GXFifoLink() {
	nofralloc
#include "asm/dolphin/gx/GXFifo/__GXFifoLink.s"
}
#pragma pop

/* 8035ACF4-8035AD24 0030 .text      __GXWriteFifoIntEnable                                       */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void __GXWriteFifoIntEnable() {
	nofralloc
#include "asm/dolphin/gx/GXFifo/__GXWriteFifoIntEnable.s"
}
#pragma pop

/* 8035AD24-8035AD54 0030 .text      __GXWriteFifoIntReset                                        */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void __GXWriteFifoIntReset() {
	nofralloc
#include "asm/dolphin/gx/GXFifo/__GXWriteFifoIntReset.s"
}
#pragma pop

/* 8035AD54-8035AE54 0100 .text      __GXCleanGPFifo                                              */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void __GXCleanGPFifo() {
	nofralloc
#include "asm/dolphin/gx/GXFifo/__GXCleanGPFifo.s"
}
#pragma pop

/* 8035AE54-8035AEA0 004C .text      GXSetCurrentGXThread                                         */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void GXSetCurrentGXThread() {
	nofralloc
#include "asm/dolphin/gx/GXFifo/GXSetCurrentGXThread.s"
}
#pragma pop

/* 8035AEA0-8035AEA8 0008 .text      GXGetCurrentGXThread                                         */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void GXGetCurrentGXThread() {
	nofralloc
#include "asm/dolphin/gx/GXFifo/GXGetCurrentGXThread.s"
}
#pragma pop

/* 8035AEA8-8035AEB0 0008 .text      GXGetCPUFifo                                                 */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void GXGetCPUFifo() {
	nofralloc
#include "asm/dolphin/gx/GXFifo/GXGetCPUFifo.s"
}
#pragma pop

/* 8035AEB0-8035AEB8 0008 .text      GXGetGPFifo                                                  */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void GXGetGPFifo() {
	nofralloc
#include "asm/dolphin/gx/GXFifo/GXGetGPFifo.s"
}
#pragma pop


