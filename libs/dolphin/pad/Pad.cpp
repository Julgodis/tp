// 
// Generated By: dol2asm
// 

#include "dolphin/types.h"

// 
// Forward References:
// 

SECTION_INIT extern void memset();
extern "C" extern void OSRegisterVersion();
extern "C" extern void OSSetCurrentContext();
extern "C" extern void OSClearContext();
extern "C" extern void OSDisableInterrupts();
extern "C" extern void OSRestoreInterrupts();
extern "C" extern void OSRegisterResetFunction();
extern "C" extern void OSSetWirelessID();
extern "C" extern void OSGetTime();
extern "C" extern void SIBusy();
extern "C" extern void SIIsChanBusy();
extern "C" extern void SIRegisterPollingHandler();
extern "C" extern void SIUnregisterPollingHandler();
extern "C" extern void SIGetStatus();
extern "C" extern void SISetCommand();
extern "C" extern void SITransferCommands();
extern "C" extern void SIEnablePolling();
extern "C" extern void SIDisablePolling();
extern "C" extern void SIGetResponse();
extern "C" extern void SITransfer();
extern "C" extern void SIGetType();
extern "C" extern void SIGetTypeAsync();
extern "C" extern void SIRefreshSamplingRate();
extern "C" extern void UpdateOrigin();
extern "C" extern void PADOriginCallback();
extern "C" extern void PADOriginUpdateCallback();
extern "C" extern void PADProbeCallback();
extern "C" extern void PADTypeAndStatusCallback();
extern "C" extern void PADReceiveCheckCallback();
extern "C" extern void PADReset();
extern "C" extern void PADRecalibrate();
extern "C" extern void PADInit();
extern "C" extern void PADRead();
extern "C" extern void PADControlMotor();
extern "C" extern void PADSetSpec();
extern "C" extern void SPEC0_MakeStatus();
extern "C" extern void SPEC1_MakeStatus();
extern "C" extern void SPEC2_MakeStatus();
extern "C" extern void PADSetAnalogMode();
extern "C" extern void Pad__OnReset();
extern "C" extern void SamplingHandler();
extern "C" extern void PADSetSamplingCallback();
extern "C" extern void __PADDisableRecalibration();
extern "C" extern void __shr2i();
SECTION_DATA extern u8 Pad__lit_1[72];
SECTION_DATA extern void* Pad__ResetFunctionInfo[4];
SECTION_BSS extern u8 Pad__Type[16];
SECTION_BSS extern u8 Origin[48];
SECTION_BSS extern u8 CmdProbeDevice[16];
SECTION_SDATA extern void* __PADVersion;
SECTION_SDATA extern u32 ResettingChan;
SECTION_SDATA extern u32 XPatchBits;
SECTION_SDATA extern u32 AnalogMode;
SECTION_SDATA extern u32 Spec;
SECTION_SDATA extern void* MakeStatus;
SECTION_SDATA extern u32 CmdReadOrigin;
SECTION_SDATA extern u32 CmdCalibrate;
SECTION_SBSS extern u8 __PADFixBits[4 + 4 /* padding */];
SECTION_SBSS extern u8 Initialized[4];
SECTION_SBSS extern u8 EnabledBits[4];
SECTION_SBSS extern u8 ResettingBits[4];
SECTION_SBSS extern u8 RecalibrateBits[4];
SECTION_SBSS extern u8 WaitingBits[4];
SECTION_SBSS extern u8 CheckingBits[4];
SECTION_SBSS extern u8 PendingBits[4];
SECTION_SBSS extern u8 BarrelBits[4];
SECTION_SBSS extern u8 SamplingCallback[4];
SECTION_SBSS extern u8 data_8045186C[4];
SECTION_SBSS extern u8 __PADSpec[4 + 4 /* padding */];

// 
// Functions:
// 

/* ###################################################################################### */
/* 80450A20-80450A24 0004 .sdata     __PADVersion                                                 */
void* __PADVersion = (void*)&Pad__lit_1;

/* 80450A24-80450A28 0004 .sdata     ResettingChan                                                */
u32 ResettingChan = 0x00000020;

/* 80450A28-80450A2C 0004 .sdata     XPatchBits                                                   */
u32 XPatchBits = 0xF0000000;

/* 80450A2C-80450A30 0004 .sdata     AnalogMode                                                   */
u32 AnalogMode = 0x00000300;

/* 8044CB70-8044CB80 0010 .bss       Type                                                         */
u8 Pad__Type[16];

/* 8044CB80-8044CBB0 0030 .bss       Origin                                                       */
u8 Origin[48];

/* 8034E2B4-8034E458 01A4 .text      UpdateOrigin                                                 */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
extern "C" asm void UpdateOrigin() {
	nofralloc
#include "asm/dolphin/pad/Pad/UpdateOrigin.s"
}
#pragma pop


/* ###################################################################################### */
/* 80451848-8045184C 0004 .sbss      Initialized                                                  */
u8 Initialized[4];

/* 8045184C-80451850 0004 .sbss      EnabledBits                                                  */
u8 EnabledBits[4];

/* 80451850-80451854 0004 .sbss      ResettingBits                                                */
u8 ResettingBits[4];

/* 8034E458-8034E51C 00C4 .text      PADOriginCallback                                            */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
extern "C" asm void PADOriginCallback() {
	nofralloc
#include "asm/dolphin/pad/Pad/PADOriginCallback.s"
}
#pragma pop


/* ###################################################################################### */
/* 80451854-80451858 0004 .sbss      RecalibrateBits                                              */
u8 RecalibrateBits[4];

/* 80451858-8045185C 0004 .sbss      WaitingBits                                                  */
u8 WaitingBits[4];

/* 8045185C-80451860 0004 .sbss      CheckingBits                                                 */
u8 CheckingBits[4];

/* 80451860-80451864 0004 .sbss      PendingBits                                                  */
u8 PendingBits[4];

/* 80451864-80451868 0004 .sbss      BarrelBits                                                   */
u8 BarrelBits[4];

/* 8034E51C-8034E5E8 00CC .text      PADOriginUpdateCallback                                      */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
extern "C" asm void PADOriginUpdateCallback() {
	nofralloc
#include "asm/dolphin/pad/Pad/PADOriginUpdateCallback.s"
}
#pragma pop


/* 8034E5E8-8034E6C0 00D8 .text      PADProbeCallback                                             */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
extern "C" asm void PADProbeCallback() {
	nofralloc
#include "asm/dolphin/pad/Pad/PADProbeCallback.s"
}
#pragma pop


/* ###################################################################################### */
/* 80450A30-80450A34 0004 .sdata     Spec                                                         */
u32 Spec = 0x00000005;

/* 80450A34-80450A38 0004 .sdata     MakeStatus                                                   */
void* MakeStatus = (void*)SPEC2_MakeStatus;

/* 80450A38-80450A3C 0004 .sdata     CmdReadOrigin                                                */
u32 CmdReadOrigin = 0x41000000;

/* 80450A3C-80450A40 0004 .sdata     CmdCalibrate                                                 */
u32 CmdCalibrate = 0x42000000;

/* 8034E6C0-8034E9EC 032C .text      PADTypeAndStatusCallback                                     */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
extern "C" asm void PADTypeAndStatusCallback() {
	nofralloc
#include "asm/dolphin/pad/Pad/PADTypeAndStatusCallback.s"
}
#pragma pop


/* 8034E9EC-8034EB2C 0140 .text      PADReceiveCheckCallback                                      */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
extern "C" asm void PADReceiveCheckCallback() {
	nofralloc
#include "asm/dolphin/pad/Pad/PADReceiveCheckCallback.s"
}
#pragma pop


/* 8034EB2C-8034EC3C 0110 .text      PADReset                                                     */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
extern "C" asm void PADReset() {
	nofralloc
#include "asm/dolphin/pad/Pad/PADReset.s"
}
#pragma pop


/* 8034EC3C-8034ED50 0114 .text      PADRecalibrate                                               */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
extern "C" asm void PADRecalibrate() {
	nofralloc
#include "asm/dolphin/pad/Pad/PADRecalibrate.s"
}
#pragma pop


/* ###################################################################################### */
/* 803D1B48-803D1B90 0045 .data      @1                                                           */
u8 Pad__lit_1[72] = {
	0x3C, 0x3C, 0x20, 0x44, 0x6F, 0x6C, 0x70, 0x68, 0x69, 0x6E, 0x20, 0x53, 0x44, 0x4B, 0x20, 0x2D,
	0x20, 0x50, 0x41, 0x44, 0x09, 0x72, 0x65, 0x6C, 0x65, 0x61, 0x73, 0x65, 0x20, 0x62, 0x75, 0x69,
	0x6C, 0x64, 0x3A, 0x20, 0x41, 0x70, 0x72, 0x20, 0x20, 0x35, 0x20, 0x32, 0x30, 0x30, 0x34, 0x20,
	0x30, 0x34, 0x3A, 0x31, 0x34, 0x3A, 0x34, 0x39, 0x20, 0x28, 0x30, 0x78, 0x32, 0x33, 0x30, 0x31,
	0x29, 0x20, 0x3E, 0x3E, 0x00,
	/* padding */
	0x00, 0x00, 0x00,
};

/* 803D1B90-803D1BA0 0010 .data      ResetFunctionInfo                                            */
void* Pad__ResetFunctionInfo[4] = {
	(void*)Pad__OnReset,
	(void*)0x0000007F,
	NULL,
	NULL,
};

/* 80451868-8045186C 0004 .sbss      SamplingCallback                                             */
u8 SamplingCallback[4];

/* 8045186C-80451870 0004 .sbss      recalibrated$388                                             */
u8 data_8045186C[4];

/* 80451870-80451878 0004 .sbss      __PADSpec                                                    */
u8 __PADSpec[4 + 4 /* padding */];

/* 8034ED50-8034EEA0 0150 .text      PADInit                                                      */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
extern "C" asm void PADInit() {
	nofralloc
#include "asm/dolphin/pad/Pad/PADInit.s"
}
#pragma pop


/* 8034EEA0-8034F1A0 0300 .text      PADRead                                                      */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
extern "C" asm void PADRead() {
	nofralloc
#include "asm/dolphin/pad/Pad/PADRead.s"
}
#pragma pop


/* 8034F1A0-8034F258 00B8 .text      PADControlMotor                                              */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
extern "C" asm void PADControlMotor() {
	nofralloc
#include "asm/dolphin/pad/Pad/PADControlMotor.s"
}
#pragma pop


/* 8034F258-8034F2B8 0060 .text      PADSetSpec                                                   */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
extern "C" asm void PADSetSpec() {
	nofralloc
#include "asm/dolphin/pad/Pad/PADSetSpec.s"
}
#pragma pop


/* 8034F2B8-8034F42C 0174 .text      SPEC0_MakeStatus                                             */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
extern "C" asm void SPEC0_MakeStatus() {
	nofralloc
#include "asm/dolphin/pad/Pad/SPEC0_MakeStatus.s"
}
#pragma pop


/* 8034F42C-8034F5A0 0174 .text      SPEC1_MakeStatus                                             */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
extern "C" asm void SPEC1_MakeStatus() {
	nofralloc
#include "asm/dolphin/pad/Pad/SPEC1_MakeStatus.s"
}
#pragma pop


/* 8034F5A0-8034FA10 0470 .text      SPEC2_MakeStatus                                             */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
extern "C" asm void SPEC2_MakeStatus() {
	nofralloc
#include "asm/dolphin/pad/Pad/SPEC2_MakeStatus.s"
}
#pragma pop


/* 8034FA10-8034FA84 0074 .text      PADSetAnalogMode                                             */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
extern "C" asm void PADSetAnalogMode() {
	nofralloc
#include "asm/dolphin/pad/Pad/PADSetAnalogMode.s"
}
#pragma pop


/* 8034FA84-8034FB40 00BC .text      OnReset                                                      */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
extern "C" asm void Pad__OnReset() {
	nofralloc
#include "asm/dolphin/pad/Pad/Pad__OnReset.s"
}
#pragma pop


/* 8034FB40-8034FBA0 0060 .text      SamplingHandler                                              */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
extern "C" asm void SamplingHandler() {
	nofralloc
#include "asm/dolphin/pad/Pad/SamplingHandler.s"
}
#pragma pop


/* 8034FBA0-8034FBF4 0054 .text      PADSetSamplingCallback                                       */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
extern "C" asm void PADSetSamplingCallback() {
	nofralloc
#include "asm/dolphin/pad/Pad/PADSetSamplingCallback.s"
}
#pragma pop


/* 8034FBF4-8034FC70 007C .text      __PADDisableRecalibration                                    */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
extern "C" asm void __PADDisableRecalibration() {
	nofralloc
#include "asm/dolphin/pad/Pad/__PADDisableRecalibration.s"
}
#pragma pop


/* 8044CBB0-8044CBC0 0010 .bss       CmdProbeDevice                                               */
u8 CmdProbeDevice[16];

