// 
// Generated By: dol2asm
// Translation Unit: OSAlarm
// 

#include "dol2asm.h"
#include "dolphin/types.h"
#include "dolphin/os/OSAlarm.h"

// 
// Forward References:
// 


extern "C" void OSInitAlarm(); // 1
extern "C" void OSCreateAlarm(); // 1
extern "C" static void InsertAlarm(); // 1
extern "C" void OSSetAlarm(); // 1
extern "C" void OSSetPeriodicAlarm(); // 1
extern "C" void OSCancelAlarm(); // 1
extern "C" static void DecrementerExceptionCallback(); // 1
extern "C" static void DecrementerExceptionHandler(); // 1
extern "C" static void OSAlarm__OnReset(); // 1

// 
// External References:
// 


extern "C" void PPCMtdec(); // 1
extern "C" void __OSSetExceptionHandler(); // 1
extern "C" void __OSGetExceptionHandler(); // 1
extern "C" void OSSetCurrentContext(); // 1
extern "C" void OSLoadContext(); // 1
extern "C" void OSClearContext(); // 1
extern "C" void OSDisableInterrupts(); // 1
extern "C" void OSRestoreInterrupts(); // 1
extern "C" void OSRegisterResetFunction(); // 1
extern "C" void OSDisableScheduler(); // 1
extern "C" void OSEnableScheduler(); // 1
extern "C" void __OSReschedule(); // 1
extern "C" void __OSGetSystemTime(); // 1
extern "C" void __OSTimeToSystemTime(); // 1
extern "C" void __DVDTestAlarm(); // 1
extern "C" void __div2i(); // 1

// 
// Declarations:
// 

/* ############################################################################################## */
/* 803CF480-803CF490 0010+00 r=1 e=0 z=0  None .data      ResetFunctionInfo                                            */
SECTION_DATA static void* OSAlarm__ResetFunctionInfo[4] = {
	/* 0    */ (void*)OSAlarm__OnReset,
	/* 1    */ (void*)0xFFFFFFFF,
	/* 2    */ (void*)NULL,
	/* 3    */ (void*)NULL,
};

/* 80451638-80451640 0008+00 r=5 e=0 z=0  None .sbss      AlarmQueue                                                   */
static u8 AlarmQueue[8];

/* 8033A8A0-8033A8F8 0058+00 r=3 e=3 z=0  None .text      OSInitAlarm                                                  */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
extern "C" asm void OSInitAlarm() {
	nofralloc
#include "asm/dolphin/os/OSAlarm/OSInitAlarm.s"
}
#pragma pop


/* 8033A8F8-8033A908 0010+00 r=17 e=17 z=0  None .text      OSCreateAlarm                                                */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
extern "C" asm void OSCreateAlarm() {
	nofralloc
#include "asm/dolphin/os/OSAlarm/OSCreateAlarm.s"
}
#pragma pop


/* 8033A908-8033AB58 0250+00 r=3 e=0 z=0  None .text      InsertAlarm                                                  */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
extern "C" asm static void InsertAlarm() {
	nofralloc
#include "asm/dolphin/os/OSAlarm/InsertAlarm.s"
}
#pragma pop


/* 8033AB58-8033ABC0 0068+00 r=18 e=18 z=0  None .text      OSSetAlarm                                                   */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
extern "C" asm void OSSetAlarm() {
	nofralloc
#include "asm/dolphin/os/OSAlarm/OSSetAlarm.s"
}
#pragma pop


/* 8033ABC0-8033AC3C 007C+00 r=1 e=1 z=0  None .text      OSSetPeriodicAlarm                                           */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
extern "C" asm void OSSetPeriodicAlarm() {
	nofralloc
#include "asm/dolphin/os/OSAlarm/OSSetPeriodicAlarm.s"
}
#pragma pop


/* 8033AC3C-8033AD58 011C+00 r=12 e=11 z=0  None .text      OSCancelAlarm                                                */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
extern "C" asm void OSCancelAlarm() {
	nofralloc
#include "asm/dolphin/os/OSAlarm/OSCancelAlarm.s"
}
#pragma pop


/* 8033AD58-8033AF88 0230+00 r=1 e=0 z=0  None .text      DecrementerExceptionCallback                                 */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
extern "C" asm static void DecrementerExceptionCallback() {
	nofralloc
#include "asm/dolphin/os/OSAlarm/DecrementerExceptionCallback.s"
}
#pragma pop


/* 8033AF88-8033AFD8 0050+00 r=1 e=0 z=0  None .text      DecrementerExceptionHandler                                  */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
extern "C" asm static void DecrementerExceptionHandler() {
	nofralloc
#include "asm/dolphin/os/OSAlarm/DecrementerExceptionHandler.s"
}
#pragma pop


/* 8033AFD8-8033B078 00A0+00 r=1 e=0 z=0  None .text      OnReset                                                      */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
extern "C" asm static void OSAlarm__OnReset() {
	nofralloc
#include "asm/dolphin/os/OSAlarm/OSAlarm__OnReset.s"
}
#pragma pop


