// 
// Generated By: dol2asm
// Translation Unit: OSAlarm
// 

#include "dolphin/types.h"

// 
// Forward References:
// 

extern "C" extern void OSInitAlarm();
extern "C" extern void OSCreateAlarm();
extern "C" extern void InsertAlarm();
extern "C" extern void OSSetAlarm();
extern "C" extern void OSSetPeriodicAlarm();
extern "C" extern void OSCancelAlarm();
extern "C" extern void DecrementerExceptionCallback();
extern "C" extern void DecrementerExceptionHandler();
extern "C" extern void OSAlarm__OnReset();
SECTION_DATA extern void*OSAlarm__ResetFunctionInfo[4];
SECTION_SBSS extern u8 AlarmQueue[8];

// 
// External References:
// 

extern "C" extern void PPCMtdec();
extern "C" extern void __OSSetExceptionHandler();
extern "C" extern void __OSGetExceptionHandler();
extern "C" extern void OSSetCurrentContext();
extern "C" extern void OSLoadContext();
extern "C" extern void OSClearContext();
extern "C" extern void OSDisableInterrupts();
extern "C" extern void OSRestoreInterrupts();
extern "C" extern void OSRegisterResetFunction();
extern "C" extern void OSDisableScheduler();
extern "C" extern void OSEnableScheduler();
extern "C" extern void __OSReschedule();
extern "C" extern void __OSGetSystemTime();
extern "C" extern void __OSTimeToSystemTime();
extern "C" extern void __DVDTestAlarm();
extern "C" extern void __div2i();

// 
// Declarations:
// 

/* ############################################################################################## */
/* 803CF480-803CF490 0010+00 .data      ResetFunctionInfo                                            */
void* OSAlarm__ResetFunctionInfo[4] = {
	(void*)OSAlarm__OnReset,
	(void*)0xFFFFFFFF,
	NULL,
	NULL,
};

/* 80451638-80451640 0008+00 .sbss      AlarmQueue                                                   */
u8 AlarmQueue[8];

/* 8033A8A0-8033A8F8 0058+00 .text      OSInitAlarm                                                  */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
ASM_FUNCTION(OSInitAlarm) {
	nofralloc
#include "asm/dolphin/os/OSAlarm/OSInitAlarm.s"
}
#pragma pop


/* 8033A8F8-8033A908 0010+00 .text      OSCreateAlarm                                                */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
ASM_FUNCTION(OSCreateAlarm) {
	nofralloc
#include "asm/dolphin/os/OSAlarm/OSCreateAlarm.s"
}
#pragma pop


/* 8033A908-8033AB58 0250+00 .text      InsertAlarm                                                  */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
ASM_FUNCTION(InsertAlarm) {
	nofralloc
#include "asm/dolphin/os/OSAlarm/InsertAlarm.s"
}
#pragma pop


/* 8033AB58-8033ABC0 0068+00 .text      OSSetAlarm                                                   */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
ASM_FUNCTION(OSSetAlarm) {
	nofralloc
#include "asm/dolphin/os/OSAlarm/OSSetAlarm.s"
}
#pragma pop


/* 8033ABC0-8033AC3C 007C+00 .text      OSSetPeriodicAlarm                                           */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
ASM_FUNCTION(OSSetPeriodicAlarm) {
	nofralloc
#include "asm/dolphin/os/OSAlarm/OSSetPeriodicAlarm.s"
}
#pragma pop


/* 8033AC3C-8033AD58 011C+00 .text      OSCancelAlarm                                                */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
ASM_FUNCTION(OSCancelAlarm) {
	nofralloc
#include "asm/dolphin/os/OSAlarm/OSCancelAlarm.s"
}
#pragma pop


/* 8033AD58-8033AF88 0230+00 .text      DecrementerExceptionCallback                                 */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
ASM_FUNCTION(DecrementerExceptionCallback) {
	nofralloc
#include "asm/dolphin/os/OSAlarm/DecrementerExceptionCallback.s"
}
#pragma pop


/* 8033AF88-8033AFD8 0050+00 .text      DecrementerExceptionHandler                                  */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
ASM_FUNCTION(DecrementerExceptionHandler) {
	nofralloc
#include "asm/dolphin/os/OSAlarm/DecrementerExceptionHandler.s"
}
#pragma pop


/* 8033AFD8-8033B078 00A0+00 .text      OnReset                                                      */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
ASM_FUNCTION(OSAlarm__OnReset) {
	nofralloc
#include "asm/dolphin/os/OSAlarm/OSAlarm__OnReset.s"
}
#pragma pop


/* ############################################################################################## */
