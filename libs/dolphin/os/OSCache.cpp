// 
// Generated By: dol2asm
// Translation Unit: OSCache
// 

#include "dolphin/types.h"

// 
// Forward References:
// 

extern "C" extern void DCEnable();
extern "C" extern void DCInvalidateRange();
extern "C" extern void DCFlushRange();
extern "C" extern void DCStoreRange();
extern "C" extern void DCFlushRangeNoSync();
extern "C" extern void DCStoreRangeNoSync();
extern "C" extern void DCZeroRange();
extern "C" extern void ICInvalidateRange();
extern "C" extern void ICFlashInvalidate();
extern "C" extern void ICEnable();
extern "C" extern void __LCEnable();
extern "C" extern void LCEnable();
extern "C" extern void LCDisable();
extern "C" extern void LCStoreBlocks();
extern "C" extern void LCStoreData();
extern "C" extern void LCQueueWait();
extern "C" extern void L2GlobalInvalidate();
extern "C" extern void DMAErrorHandler();
extern "C" extern void __OSCacheInit();
SECTION_DATA extern u8 OSCache__lit_63[41 + 3 /* padding */];
SECTION_DATA extern u8 OSCache__lit_84[24];
SECTION_DATA extern u8 OSCache__lit_85[27 + 1 /* padding */];
SECTION_DATA extern u8 OSCache__lit_86[48];
SECTION_DATA extern u8 OSCache__lit_87[60];
SECTION_DATA extern u8 OSCache__lit_88[55 + 1 /* padding */];
SECTION_DATA extern u8 OSCache__lit_89[63 + 1 /* padding */];
SECTION_DATA extern u8 OSCache__lit_90[41 + 3 /* padding */];
SECTION_DATA extern u8 OSCache__lit_91[29 + 3 /* padding */];
SECTION_DATA extern u8 OSCache__lit_92[25 + 3 /* padding */];
SECTION_DATA extern u8 OSCache__lit_104[25 + 3 /* padding */];
SECTION_DATA extern u8 OSCache__lit_105[25 + 3 /* padding */];
SECTION_DATA extern u8 OSCache__lit_106[22 + 2 /* padding */];
SECTION_DATA extern u8 OSCache__lit_107[46 + 6 /* padding */];

// 
// External References:
// 

extern "C" extern void OSReport();
extern "C" extern void PPCMfmsr();
extern "C" extern void PPCMtmsr();
extern "C" extern void PPCMfhid0();
extern "C" extern void PPCMfl2cr();
extern "C" extern void PPCMtl2cr();
extern "C" extern void PPCHalt();
extern "C" extern void PPCMfhid2();
extern "C" extern void PPCMthid2();
extern "C" extern void OSDumpContext();
extern "C" extern void OSSetErrorHandler();
extern "C" extern void OSDisableInterrupts();
extern "C" extern void OSRestoreInterrupts();
extern "C" extern void DBPrintf();

// 
// Declarations:
// 

/* 8033B56C-8033B580 0014+00 .text      DCEnable                                                     */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
ASM_FUNCTION(DCEnable) {
	nofralloc
#include "asm/dolphin/os/OSCache/DCEnable.s"
}
#pragma pop


/* 8033B580-8033B5AC 002C+00 .text      DCInvalidateRange                                            */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
ASM_FUNCTION(DCInvalidateRange) {
	nofralloc
#include "asm/dolphin/os/OSCache/DCInvalidateRange.s"
}
#pragma pop


/* 8033B5AC-8033B5DC 0030+00 .text      DCFlushRange                                                 */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
ASM_FUNCTION(DCFlushRange) {
	nofralloc
#include "asm/dolphin/os/OSCache/DCFlushRange.s"
}
#pragma pop


/* 8033B5DC-8033B60C 0030+00 .text      DCStoreRange                                                 */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
ASM_FUNCTION(DCStoreRange) {
	nofralloc
#include "asm/dolphin/os/OSCache/DCStoreRange.s"
}
#pragma pop


/* 8033B60C-8033B638 002C+00 .text      DCFlushRangeNoSync                                           */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
ASM_FUNCTION(DCFlushRangeNoSync) {
	nofralloc
#include "asm/dolphin/os/OSCache/DCFlushRangeNoSync.s"
}
#pragma pop


/* 8033B638-8033B664 002C+00 .text      DCStoreRangeNoSync                                           */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
ASM_FUNCTION(DCStoreRangeNoSync) {
	nofralloc
#include "asm/dolphin/os/OSCache/DCStoreRangeNoSync.s"
}
#pragma pop


/* 8033B664-8033B690 002C+00 .text      DCZeroRange                                                  */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
ASM_FUNCTION(DCZeroRange) {
	nofralloc
#include "asm/dolphin/os/OSCache/DCZeroRange.s"
}
#pragma pop


/* 8033B690-8033B6C4 0034+00 .text      ICInvalidateRange                                            */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
ASM_FUNCTION(ICInvalidateRange) {
	nofralloc
#include "asm/dolphin/os/OSCache/ICInvalidateRange.s"
}
#pragma pop


/* 8033B6C4-8033B6D4 0010+00 .text      ICFlashInvalidate                                            */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
ASM_FUNCTION(ICFlashInvalidate) {
	nofralloc
#include "asm/dolphin/os/OSCache/ICFlashInvalidate.s"
}
#pragma pop


/* 8033B6D4-8033B6E8 0014+00 .text      ICEnable                                                     */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
ASM_FUNCTION(ICEnable) {
	nofralloc
#include "asm/dolphin/os/OSCache/ICEnable.s"
}
#pragma pop


/* 8033B6E8-8033B7B4 00CC+00 .text      __LCEnable                                                   */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
ASM_FUNCTION(__LCEnable) {
	nofralloc
#include "asm/dolphin/os/OSCache/__LCEnable.s"
}
#pragma pop


/* 8033B7B4-8033B7EC 0038+00 .text      LCEnable                                                     */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
ASM_FUNCTION(LCEnable) {
	nofralloc
#include "asm/dolphin/os/OSCache/LCEnable.s"
}
#pragma pop


/* 8033B7EC-8033B814 0028+00 .text      LCDisable                                                    */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
ASM_FUNCTION(LCDisable) {
	nofralloc
#include "asm/dolphin/os/OSCache/LCDisable.s"
}
#pragma pop


/* 8033B814-8033B838 0024+00 .text      LCStoreBlocks                                                */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
ASM_FUNCTION(LCStoreBlocks) {
	nofralloc
#include "asm/dolphin/os/OSCache/LCStoreBlocks.s"
}
#pragma pop


/* 8033B838-8033B8E4 00AC+00 .text      LCStoreData                                                  */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
ASM_FUNCTION(LCStoreData) {
	nofralloc
#include "asm/dolphin/os/OSCache/LCStoreData.s"
}
#pragma pop


/* 8033B8E4-8033B8F8 0014+00 .text      LCQueueWait                                                  */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
ASM_FUNCTION(LCQueueWait) {
	nofralloc
#include "asm/dolphin/os/OSCache/LCQueueWait.s"
}
#pragma pop


/* ############################################################################################## */
/* 803CF510-803CF53C 0029+03 .data      @63                                                          */
u8 OSCache__lit_63[44] = {
	0x3E, 0x3E, 0x3E, 0x20, 0x4C, 0x32, 0x20, 0x49, 0x4E, 0x56, 0x41, 0x4C, 0x49, 0x44, 0x41, 0x54,
	0x45, 0x20, 0x3A, 0x20, 0x53, 0x48, 0x4F, 0x55, 0x4C, 0x44, 0x20, 0x4E, 0x45, 0x56, 0x45, 0x52,
	0x20, 0x48, 0x41, 0x50, 0x50, 0x45, 0x4E, 0x0A, 0x00,
	/* padding */
	0x00, 0x00, 0x00,
};

/* 8033B8F8-8033B990 0098+00 .text      L2GlobalInvalidate                                           */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
ASM_FUNCTION(L2GlobalInvalidate) {
	nofralloc
#include "asm/dolphin/os/OSCache/L2GlobalInvalidate.s"
}
#pragma pop


/* 8033B990-8033BAF0 0160+00 .text      DMAErrorHandler                                              */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
ASM_FUNCTION(DMAErrorHandler) {
	nofralloc
#include "asm/dolphin/os/OSCache/DMAErrorHandler.s"
}
#pragma pop


/* 8033BAF0-8033BBE4 00F4+00 .text      __OSCacheInit                                                */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
ASM_FUNCTION(__OSCacheInit) {
	nofralloc
#include "asm/dolphin/os/OSCache/__OSCacheInit.s"
}
#pragma pop


/* ############################################################################################## */
/* 803CF53C-803CF554 0018+00 .data      @84                                                          */
u8 OSCache__lit_84[24] = {
	0x4D, 0x61, 0x63, 0x68, 0x69, 0x6E, 0x65, 0x20, 0x63, 0x68, 0x65, 0x63, 0x6B, 0x20, 0x72, 0x65,
	0x63, 0x65, 0x69, 0x76, 0x65, 0x64, 0x0A, 0x00,
};

/* 803CF554-803CF570 001B+01 .data      @85                                                          */
u8 OSCache__lit_85[28] = {
	0x48, 0x49, 0x44, 0x32, 0x20, 0x3D, 0x20, 0x30, 0x78, 0x25, 0x78, 0x20, 0x20, 0x20, 0x53, 0x52,
	0x52, 0x31, 0x20, 0x3D, 0x20, 0x30, 0x78, 0x25, 0x78, 0x0A, 0x00,
	/* padding */
	0x00,
};

/* 803CF570-803CF5A0 0030+00 .data      @86                                                          */
u8 OSCache__lit_86[48] = {
	0x4D, 0x61, 0x63, 0x68, 0x69, 0x6E, 0x65, 0x20, 0x63, 0x68, 0x65, 0x63, 0x6B, 0x20, 0x77, 0x61,
	0x73, 0x20, 0x6E, 0x6F, 0x74, 0x20, 0x44, 0x4D, 0x41, 0x2F, 0x6C, 0x6F, 0x63, 0x6B, 0x65, 0x64,
	0x20, 0x63, 0x61, 0x63, 0x68, 0x65, 0x20, 0x72, 0x65, 0x6C, 0x61, 0x74, 0x65, 0x64, 0x0A, 0x00,
};

/* 803CF5A0-803CF5DC 003C+00 .data      @87                                                          */
u8 OSCache__lit_87[60] = {
	0x44, 0x4D, 0x41, 0x45, 0x72, 0x72, 0x6F, 0x72, 0x48, 0x61, 0x6E, 0x64, 0x6C, 0x65, 0x72, 0x28,
	0x29, 0x3A, 0x20, 0x41, 0x6E, 0x20, 0x65, 0x72, 0x72, 0x6F, 0x72, 0x20, 0x6F, 0x63, 0x63, 0x75,
	0x72, 0x72, 0x65, 0x64, 0x20, 0x77, 0x68, 0x69, 0x6C, 0x65, 0x20, 0x70, 0x72, 0x6F, 0x63, 0x65,
	0x73, 0x73, 0x69, 0x6E, 0x67, 0x20, 0x44, 0x4D, 0x41, 0x2E, 0x0A, 0x00,
};

/* 803CF5DC-803CF614 0037+01 .data      @88                                                          */
u8 OSCache__lit_88[56] = {
	0x54, 0x68, 0x65, 0x20, 0x66, 0x6F, 0x6C, 0x6C, 0x6F, 0x77, 0x69, 0x6E, 0x67, 0x20, 0x65, 0x72,
	0x72, 0x6F, 0x72, 0x73, 0x20, 0x68, 0x61, 0x76, 0x65, 0x20, 0x62, 0x65, 0x65, 0x6E, 0x20, 0x64,
	0x65, 0x74, 0x65, 0x63, 0x74, 0x65, 0x64, 0x20, 0x61, 0x6E, 0x64, 0x20, 0x63, 0x6C, 0x65, 0x61,
	0x72, 0x65, 0x64, 0x20, 0x3A, 0x0A, 0x00,
	/* padding */
	0x00,
};

/* 803CF614-803CF654 003F+01 .data      @89                                                          */
u8 OSCache__lit_89[64] = {
	0x09, 0x2D, 0x20, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x65, 0x64, 0x20, 0x61, 0x20, 0x6C,
	0x6F, 0x63, 0x6B, 0x65, 0x64, 0x20, 0x63, 0x61, 0x63, 0x68, 0x65, 0x20, 0x74, 0x61, 0x67, 0x20,
	0x74, 0x68, 0x61, 0x74, 0x20, 0x77, 0x61, 0x73, 0x20, 0x61, 0x6C, 0x72, 0x65, 0x61, 0x64, 0x79,
	0x20, 0x69, 0x6E, 0x20, 0x74, 0x68, 0x65, 0x20, 0x63, 0x61, 0x63, 0x68, 0x65, 0x0A, 0x00,
	/* padding */
	0x00,
};

/* 803CF654-803CF680 0029+03 .data      @90                                                          */
u8 OSCache__lit_90[44] = {
	0x09, 0x2D, 0x20, 0x44, 0x4D, 0x41, 0x20, 0x61, 0x74, 0x74, 0x65, 0x6D, 0x70, 0x74, 0x65, 0x64,
	0x20, 0x74, 0x6F, 0x20, 0x61, 0x63, 0x63, 0x65, 0x73, 0x73, 0x20, 0x6E, 0x6F, 0x72, 0x6D, 0x61,
	0x6C, 0x20, 0x63, 0x61, 0x63, 0x68, 0x65, 0x0A, 0x00,
	/* padding */
	0x00, 0x00, 0x00,
};

/* 803CF680-803CF6A0 001D+03 .data      @91                                                          */
u8 OSCache__lit_91[32] = {
	0x09, 0x2D, 0x20, 0x44, 0x4D, 0x41, 0x20, 0x6D, 0x69, 0x73, 0x73, 0x65, 0x64, 0x20, 0x69, 0x6E,
	0x20, 0x64, 0x61, 0x74, 0x61, 0x20, 0x63, 0x61, 0x63, 0x68, 0x65, 0x0A, 0x00,
	/* padding */
	0x00, 0x00, 0x00,
};

/* 803CF6A0-803CF6BC 0019+03 .data      @92                                                          */
u8 OSCache__lit_92[28] = {
	0x09, 0x2D, 0x20, 0x44, 0x4D, 0x41, 0x20, 0x71, 0x75, 0x65, 0x75, 0x65, 0x20, 0x6F, 0x76, 0x65,
	0x72, 0x66, 0x6C, 0x6F, 0x77, 0x65, 0x64, 0x0A, 0x00,
	/* padding */
	0x00, 0x00, 0x00,
};

/* 803CF6BC-803CF6D8 0019+03 .data      @104                                                         */
u8 OSCache__lit_104[28] = {
	0x4C, 0x31, 0x20, 0x69, 0x2D, 0x63, 0x61, 0x63, 0x68, 0x65, 0x73, 0x20, 0x69, 0x6E, 0x69, 0x74,
	0x69, 0x61, 0x6C, 0x69, 0x7A, 0x65, 0x64, 0x0A, 0x00,
	/* padding */
	0x00, 0x00, 0x00,
};

/* 803CF6D8-803CF6F4 0019+03 .data      @105                                                         */
u8 OSCache__lit_105[28] = {
	0x4C, 0x31, 0x20, 0x64, 0x2D, 0x63, 0x61, 0x63, 0x68, 0x65, 0x73, 0x20, 0x69, 0x6E, 0x69, 0x74,
	0x69, 0x61, 0x6C, 0x69, 0x7A, 0x65, 0x64, 0x0A, 0x00,
	/* padding */
	0x00, 0x00, 0x00,
};

/* 803CF6F4-803CF70C 0016+02 .data      @106                                                         */
u8 OSCache__lit_106[24] = {
	0x4C, 0x32, 0x20, 0x63, 0x61, 0x63, 0x68, 0x65, 0x20, 0x69, 0x6E, 0x69, 0x74, 0x69, 0x61, 0x6C,
	0x69, 0x7A, 0x65, 0x64, 0x0A, 0x00,
	/* padding */
	0x00, 0x00,
};

/* 803CF70C-803CF740 002E+06 .data      @107                                                         */
u8 OSCache__lit_107[52] = {
	0x4C, 0x6F, 0x63, 0x6B, 0x65, 0x64, 0x20, 0x63, 0x61, 0x63, 0x68, 0x65, 0x20, 0x6D, 0x61, 0x63,
	0x68, 0x69, 0x6E, 0x65, 0x20, 0x63, 0x68, 0x65, 0x63, 0x6B, 0x20, 0x68, 0x61, 0x6E, 0x64, 0x6C,
	0x65, 0x72, 0x20, 0x69, 0x6E, 0x73, 0x74, 0x61, 0x6C, 0x6C, 0x65, 0x64, 0x0A, 0x00,
	/* padding */
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
};

