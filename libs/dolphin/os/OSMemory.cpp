// 
// Generated By: dol2asm
// Translation Unit: OSMemory
// 

#include "dolphin/types.h"

// 
// Forward References:
// 

extern "C" extern void OSMemory__OnReset();
extern "C" extern void MEMIntrruptHandler();
extern "C" extern void OSProtectRange();
extern "C" extern void Config24MB();
extern "C" extern void Config48MB();
extern "C" extern void RealMode();
extern "C" extern void __OSInitMemoryProtection();
SECTION_DATA extern void*OSMemory__ResetFunctionInfo[4];

// 
// External References:
// 

extern "C" extern void DCInvalidateRange();
extern "C" extern void DCFlushRange();
extern "C" extern void __OSUnhandledException();
extern "C" extern void OSDisableInterrupts();
extern "C" extern void OSRestoreInterrupts();
extern "C" extern void __OSSetInterruptHandler();
extern "C" extern void __OSMaskInterrupts();
extern "C" extern void __OSUnmaskInterrupts();
extern "C" extern void OSRegisterResetFunction();
SECTION_BSS extern u8 __OSErrorTable[68 + 12 /* padding */];

// 
// Declarations:
// 

/* 8033EC6C-8033ECA8 003C+00 .text      OnReset                                                      */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
ASM_FUNCTION(OSMemory__OnReset) {
	nofralloc
#include "asm/dolphin/os/OSMemory/OSMemory__OnReset.s"
}
#pragma pop


/* 8033ECA8-8033ED14 006C+00 .text      MEMIntrruptHandler                                           */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
ASM_FUNCTION(MEMIntrruptHandler) {
	nofralloc
#include "asm/dolphin/os/OSMemory/MEMIntrruptHandler.s"
}
#pragma pop


/* 8033ED14-8033EDD8 00C4+00 .text      OSProtectRange                                               */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
ASM_FUNCTION(OSProtectRange) {
	nofralloc
#include "asm/dolphin/os/OSMemory/OSProtectRange.s"
}
#pragma pop


/* 8033EDD8-8033EE58 0080+00 .text      Config24MB                                                   */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
ASM_FUNCTION(Config24MB) {
	nofralloc
#include "asm/dolphin/os/OSMemory/Config24MB.s"
}
#pragma pop


/* 8033EE58-8033EED8 0080+00 .text      Config48MB                                                   */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
ASM_FUNCTION(Config48MB) {
	nofralloc
#include "asm/dolphin/os/OSMemory/Config48MB.s"
}
#pragma pop


/* 8033EED8-8033EEF0 0018+00 .text      RealMode                                                     */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
ASM_FUNCTION(RealMode) {
	nofralloc
#include "asm/dolphin/os/OSMemory/RealMode.s"
}
#pragma pop


/* ############################################################################################## */
/* 803D07D8-803D07E8 0010+00 .data      ResetFunctionInfo                                            */
void* OSMemory__ResetFunctionInfo[4] = {
	(void*)OSMemory__OnReset,
	(void*)0x0000007F,
	NULL,
	NULL,
};

/* 8033EEF0-8033F008 0118+00 .text      __OSInitMemoryProtection                                     */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
ASM_FUNCTION(__OSInitMemoryProtection) {
	nofralloc
#include "asm/dolphin/os/OSMemory/__OSInitMemoryProtection.s"
}
#pragma pop


/* ############################################################################################## */
