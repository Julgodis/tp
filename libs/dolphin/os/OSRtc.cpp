// 
// Generated By: dol2asm
// Translation Unit: OSRtc
// 

#include "dolphin/types.h"

// 
// Forward References:
// 

extern "C" extern void WriteSramCallback();
extern "C" extern void WriteSram();
extern "C" extern void __OSInitSram();
extern "C" extern void __OSLockSram();
extern "C" extern void __OSLockSramEx();
extern "C" extern void UnlockSram();
extern "C" extern void __OSUnlockSram();
extern "C" extern void __OSUnlockSramEx();
extern "C" extern void __OSSyncSram();
extern "C" extern void OSGetSoundMode();
extern "C" extern void OSSetSoundMode();
extern "C" extern void OSGetProgressiveMode();
extern "C" extern void OSSetProgressiveMode();
extern "C" extern void OSGetWirelessID();
extern "C" extern void OSSetWirelessID();
extern "C" extern void OSGetGbsMode();
extern "C" extern void OSSetGbsMode();
SECTION_BSS extern u8 Scb[84 + 4 /* padding */];

// 
// External References:
// 

extern "C" extern void DCInvalidateRange();
extern "C" extern void OSDisableInterrupts();
extern "C" extern void OSRestoreInterrupts();
extern "C" extern void EXIImm();
extern "C" extern void EXIImmEx();
extern "C" extern void EXIDma();
extern "C" extern void EXISync();
extern "C" extern void EXISelect();
extern "C" extern void EXIDeselect();
extern "C" extern void EXILock();
extern "C" extern void EXIUnlock();

// 
// Declarations:
// 

/* ############################################################################################## */
/* 8044BB20-8044BB78 0054+04 .bss       Scb                                                          */
u8 Scb[84 + 4 /* padding */];

/* 8033FE90-8033FEF0 0060+00 .text      WriteSramCallback                                            */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
ASM_FUNCTION(WriteSramCallback) {
	nofralloc
#include "asm/dolphin/os/OSRtc/WriteSramCallback.s"
}
#pragma pop


/* 8033FEF0-80340008 0118+00 .text      WriteSram                                                    */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
ASM_FUNCTION(WriteSram) {
	nofralloc
#include "asm/dolphin/os/OSRtc/WriteSram.s"
}
#pragma pop


/* 80340008-80340144 013C+00 .text      __OSInitSram                                                 */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
ASM_FUNCTION(__OSInitSram) {
	nofralloc
#include "asm/dolphin/os/OSRtc/__OSInitSram.s"
}
#pragma pop


/* 80340144-803401A0 005C+00 .text      __OSLockSram                                                 */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
ASM_FUNCTION(__OSLockSram) {
	nofralloc
#include "asm/dolphin/os/OSRtc/__OSLockSram.s"
}
#pragma pop


/* 803401A0-803401FC 005C+00 .text      __OSLockSramEx                                               */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
ASM_FUNCTION(__OSLockSramEx) {
	nofralloc
#include "asm/dolphin/os/OSRtc/__OSLockSramEx.s"
}
#pragma pop


/* 803401FC-80340538 033C+00 .text      UnlockSram                                                   */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
ASM_FUNCTION(UnlockSram) {
	nofralloc
#include "asm/dolphin/os/OSRtc/UnlockSram.s"
}
#pragma pop


/* 80340538-8034055C 0024+00 .text      __OSUnlockSram                                               */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
ASM_FUNCTION(__OSUnlockSram) {
	nofralloc
#include "asm/dolphin/os/OSRtc/__OSUnlockSram.s"
}
#pragma pop


/* 8034055C-80340580 0024+00 .text      __OSUnlockSramEx                                             */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
ASM_FUNCTION(__OSUnlockSramEx) {
	nofralloc
#include "asm/dolphin/os/OSRtc/__OSUnlockSramEx.s"
}
#pragma pop


/* 80340580-80340590 0010+00 .text      __OSSyncSram                                                 */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
ASM_FUNCTION(__OSSyncSram) {
	nofralloc
#include "asm/dolphin/os/OSRtc/__OSSyncSram.s"
}
#pragma pop


/* 80340590-80340610 0080+00 .text      OSGetSoundMode                                               */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
ASM_FUNCTION(OSGetSoundMode) {
	nofralloc
#include "asm/dolphin/os/OSRtc/OSGetSoundMode.s"
}
#pragma pop


/* 80340610-803406B4 00A4+00 .text      OSSetSoundMode                                               */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
ASM_FUNCTION(OSSetSoundMode) {
	nofralloc
#include "asm/dolphin/os/OSRtc/OSSetSoundMode.s"
}
#pragma pop


/* 803406B4-80340724 0070+00 .text      OSGetProgressiveMode                                         */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
ASM_FUNCTION(OSGetProgressiveMode) {
	nofralloc
#include "asm/dolphin/os/OSRtc/OSGetProgressiveMode.s"
}
#pragma pop


/* 80340724-803407C8 00A4+00 .text      OSSetProgressiveMode                                         */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
ASM_FUNCTION(OSSetProgressiveMode) {
	nofralloc
#include "asm/dolphin/os/OSRtc/OSSetProgressiveMode.s"
}
#pragma pop


/* 803407C8-8034084C 0084+00 .text      OSGetWirelessID                                              */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
ASM_FUNCTION(OSGetWirelessID) {
	nofralloc
#include "asm/dolphin/os/OSRtc/OSGetWirelessID.s"
}
#pragma pop


/* 8034084C-803408F8 00AC+00 .text      OSSetWirelessID                                              */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
ASM_FUNCTION(OSSetWirelessID) {
	nofralloc
#include "asm/dolphin/os/OSRtc/OSSetWirelessID.s"
}
#pragma pop


/* 803408F8-80340968 0070+00 .text      OSGetGbsMode                                                 */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
ASM_FUNCTION(OSGetGbsMode) {
	nofralloc
#include "asm/dolphin/os/OSRtc/OSGetGbsMode.s"
}
#pragma pop


/* 80340968-80340A20 00B8+00 .text      OSSetGbsMode                                                 */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
ASM_FUNCTION(OSSetGbsMode) {
	nofralloc
#include "asm/dolphin/os/OSRtc/OSSetGbsMode.s"
}
#pragma pop


/* ############################################################################################## */
