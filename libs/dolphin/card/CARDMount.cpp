// 
// Generated By: dol2asm
// Translation Unit: CARDMount
// 

#include "dolphin/types.h"

// 
// Forward References:
// 

extern "C" static void IsCard(); // 1
extern "C" void CARDProbe(); // 1
extern "C" void CARDProbeEx(); // 1
extern "C" static void DoMount(); // 1
extern "C" void __CARDMountCallback(); // 1
extern "C" static void CARDMountAsync(); // 1
extern "C" void CARDMount(); // 1
extern "C" static void DoUnmount(); // 1
extern "C" void CARDUnmount(); // 1

extern "C" static void IsCard(); // 1
extern "C" void CARDProbe(); // 1
extern "C" void CARDProbeEx(); // 1
extern "C" static void DoMount(); // 1
extern "C" void __CARDMountCallback(); // 1
extern "C" static void CARDMountAsync(); // 1
extern "C" void CARDMount(); // 1
extern "C" static void DoUnmount(); // 1
extern "C" void CARDUnmount(); // 1
SECTION_DATA extern u8 SectorSizeTable[32];
SECTION_DATA extern u8 LatencyTable[32];

// 
// External References:
// 

extern "C" void OSCancelAlarm(); // 1
extern "C" void DCInvalidateRange(); // 1
extern "C" void OSDisableInterrupts(); // 1
extern "C" void OSRestoreInterrupts(); // 1
extern "C" void __OSLockSramEx(); // 1
extern "C" void __OSUnlockSramEx(); // 1
extern "C" void EXISetExiCallback(); // 1
extern "C" void EXIProbe(); // 1
extern "C" void EXIProbeEx(); // 1
extern "C" void EXIAttach(); // 1
extern "C" void EXIDetach(); // 1
extern "C" void EXILock(); // 1
extern "C" void EXIUnlock(); // 1
extern "C" void EXIGetState(); // 1
extern "C" void EXIGetID(); // 1
extern "C" void __CARDDefaultApiCallback(); // 1
extern "C" void __CARDSyncCallback(); // 1
extern "C" void __CARDExtHandler(); // 1
extern "C" void __CARDExiHandler(); // 1
extern "C" void __CARDUnlockedHandler(); // 1
extern "C" void __CARDEnableInterrupt(); // 1
extern "C" void __CARDReadStatus(); // 1
extern "C" void __CARDReadVendorID(); // 1
extern "C" void __CARDClearStatus(); // 1
extern "C" void __CARDGetControlBlock(); // 1
extern "C" void __CARDPutControlBlock(); // 1
extern "C" void __CARDSync(); // 1
extern "C" void CARDGetFastMode(); // 1
extern "C" void __CARDUnlock(); // 1
extern "C" void __CARDRead(); // 1
extern "C" void __CARDVerify(); // 1

extern "C" void OSCancelAlarm(); // 1
extern "C" void DCInvalidateRange(); // 1
extern "C" void OSDisableInterrupts(); // 1
extern "C" void OSRestoreInterrupts(); // 1
extern "C" void __OSLockSramEx(); // 1
extern "C" void __OSUnlockSramEx(); // 1
extern "C" void EXISetExiCallback(); // 1
extern "C" void EXIProbe(); // 1
extern "C" void EXIProbeEx(); // 1
extern "C" void EXIAttach(); // 1
extern "C" void EXIDetach(); // 1
extern "C" void EXILock(); // 1
extern "C" void EXIUnlock(); // 1
extern "C" void EXIGetState(); // 1
extern "C" void EXIGetID(); // 1
extern "C" void __CARDDefaultApiCallback(); // 1
extern "C" void __CARDSyncCallback(); // 1
extern "C" void __CARDExtHandler(); // 1
extern "C" void __CARDExiHandler(); // 1
extern "C" void __CARDUnlockedHandler(); // 1
extern "C" void __CARDEnableInterrupt(); // 1
extern "C" void __CARDReadStatus(); // 1
extern "C" void __CARDReadVendorID(); // 1
extern "C" void __CARDClearStatus(); // 1
extern "C" void __CARDGetControlBlock(); // 1
extern "C" void __CARDPutControlBlock(); // 1
extern "C" void __CARDSync(); // 1
extern "C" void CARDGetFastMode(); // 1
extern "C" void __CARDUnlock(); // 1
extern "C" void __CARDRead(); // 1
extern "C" void __CARDVerify(); // 1
SECTION_BSS extern u8 __CARDBlock[544];
SECTION_SDATA extern u8 struct_80450A70[8];

// 
// Declarations:
// 

/* ############################################################################################## */
/* 803D2000-803D2020 0020+00 rc=3 efc=0 .data      SectorSizeTable                                              */
u8 SectorSizeTable[32] = {
	0x00, 0x00, 0x20, 0x00, 0x00, 0x00, 0x40, 0x00, 0x00, 0x00, 0x80, 0x00, 0x00, 0x01, 0x00, 0x00,
	0x00, 0x02, 0x00, 0x00, 0x00, 0x04, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
};

/* 80356948-80356A14 00CC+00 rc=2 efc=0 .text      IsCard                                                       */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
extern "C" asm static void IsCard() {
	nofralloc
#include "asm/dolphin/card/CARDMount/IsCard.s"
}
#pragma pop


/* 80356A14-80356A4C 0038+00 rc=1 efc=1 .text      CARDProbe                                                    */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
extern "C" asm void CARDProbe() {
	nofralloc
#include "asm/dolphin/card/CARDMount/CARDProbe.s"
}
#pragma pop


/* 80356A4C-80356BC8 017C+00 rc=1 efc=1 .text      CARDProbeEx                                                  */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
extern "C" asm void CARDProbeEx() {
	nofralloc
#include "asm/dolphin/card/CARDMount/CARDProbeEx.s"
}
#pragma pop


/* ############################################################################################## */
/* 803D2020-803D2040 0020+00 rc=1 efc=0 .data      LatencyTable                                                 */
u8 LatencyTable[32] = {
	0x00, 0x00, 0x00, 0x04, 0x00, 0x00, 0x00, 0x08, 0x00, 0x00, 0x00, 0x10, 0x00, 0x00, 0x00, 0x20,
	0x00, 0x00, 0x00, 0x40, 0x00, 0x00, 0x00, 0x80, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x02, 0x00,
};

/* 80356BC8-8035701C 0454+00 rc=2 efc=0 .text      DoMount                                                      */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
extern "C" asm static void DoMount() {
	nofralloc
#include "asm/dolphin/card/CARDMount/DoMount.s"
}
#pragma pop


/* 8035701C-80357154 0138+00 rc=3 efc=1 .text      __CARDMountCallback                                          */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
extern "C" asm void __CARDMountCallback() {
	nofralloc
#include "asm/dolphin/card/CARDMount/__CARDMountCallback.s"
}
#pragma pop


/* 80357154-803572F4 01A0+00 rc=1 efc=0 .text      CARDMountAsync                                               */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
extern "C" asm static void CARDMountAsync() {
	nofralloc
#include "asm/dolphin/card/CARDMount/CARDMountAsync.s"
}
#pragma pop


/* 803572F4-8035733C 0048+00 rc=1 efc=1 .text      CARDMount                                                    */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
extern "C" asm void CARDMount() {
	nofralloc
#include "asm/dolphin/card/CARDMount/CARDMount.s"
}
#pragma pop


/* 8035733C-803573D8 009C+00 rc=2 efc=0 .text      DoUnmount                                                    */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
extern "C" asm static void DoUnmount() {
	nofralloc
#include "asm/dolphin/card/CARDMount/DoUnmount.s"
}
#pragma pop


/* 803573D8-80357484 00AC+00 rc=2 efc=2 .text      CARDUnmount                                                  */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
extern "C" asm void CARDUnmount() {
	nofralloc
#include "asm/dolphin/card/CARDMount/CARDUnmount.s"
}
#pragma pop


