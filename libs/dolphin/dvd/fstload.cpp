//
// Generated By: dol2asm
// Translation Unit: fstload
//

#include "dolphin/dvd/fstload.h"
#include "dol2asm.h"
#include "dolphin/types.h"

//
// Forward References:
//

extern "C" static void cb();
extern "C" void __fstLoad();

//
// External References:
//

SECTION_INIT void memcpy();
extern "C" void OSReport();
extern "C" void OSGetArenaHi();
extern "C" void OSSetArenaHi();
extern "C" void DVDReadAbsAsyncForBS();
extern "C" void DVDReadDiskID();
extern "C" void DVDReset();
extern "C" void DVDGetDriveStatus();

//
// Declarations:
//

/* ############################################################################################## */
/* 804517D0-804517D4 0004+00 s=1 e=0 z=0  None .sbss      status */
static u8 status[4];

/* 804517D4-804517D8 0004+00 s=2 e=0 z=0  None .sbss      bb2 */
static u8 bb2[4];

/* 804517D8-804517E0 0004+04 s=2 e=0 z=0  None .sbss      idTmp */
static u8 idTmp[4 + 4 /* padding */];

/* 8034BD2C-8034BE04 00D8+00 s=1 e=0 z=0  None .text      cb */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
extern "C" asm static void cb() {
    nofralloc
#include "asm/dolphin/dvd/fstload/cb.s"
}
#pragma pop

/* ############################################################################################## */
/* 803D16F0-803D170C 001A+02 s=1 e=0 z=0  None .data      @38 */
SECTION_DATA static u8 lit_38[26 + 2 /* padding */] = {
    0x20,
    0x20,
    0x47,
    0x61,
    0x6D,
    0x65,
    0x20,
    0x4E,
    0x61,
    0x6D,
    0x65,
    0x20,
    0x2E,
    0x2E,
    0x2E,
    0x20,
    0x25,
    0x63,
    0x25,
    0x63,
    0x25,
    0x63,
    0x25,
    0x63,
    0x0A,
    0x00,
    /* padding */
    0x00,
    0x00,
};

/* 803D170C-803D1724 0016+02 s=1 e=0 z=0  None .data      @39 */
SECTION_DATA static u8 lit_39[22 + 2 /* padding */] = {
    0x20,
    0x20,
    0x43,
    0x6F,
    0x6D,
    0x70,
    0x61,
    0x6E,
    0x79,
    0x20,
    0x2E,
    0x2E,
    0x2E,
    0x2E,
    0x2E,
    0x20,
    0x25,
    0x63,
    0x25,
    0x63,
    0x0A,
    0x00,
    /* padding */
    0x00,
    0x00,
};

/* 803D1724-803D1738 0014+00 s=1 e=0 z=0  None .data      @40 */
SECTION_DATA static u8 lit_40[20] = {
    0x20, 0x20, 0x44, 0x69, 0x73, 0x6B, 0x20, 0x23, 0x20, 0x2E,
    0x2E, 0x2E, 0x2E, 0x2E, 0x2E, 0x20, 0x25, 0x64, 0x0A, 0x00,
};

/* 803D1738-803D174C 0014+00 s=1 e=0 z=0  None .data      @41 */
SECTION_DATA static u8 lit_41[20] = {
    0x20, 0x20, 0x47, 0x61, 0x6D, 0x65, 0x20, 0x76, 0x65, 0x72,
    0x20, 0x2E, 0x2E, 0x2E, 0x2E, 0x20, 0x25, 0x64, 0x0A, 0x00,
};

/* 803D174C-803D1760 0014+00 s=1 e=0 z=0  None .data      @44 */
SECTION_DATA static u8 lit_44[20] = {
    0x20, 0x20, 0x53, 0x74, 0x72, 0x65, 0x61, 0x6D, 0x69, 0x6E,
    0x67, 0x20, 0x2E, 0x2E, 0x2E, 0x20, 0x25, 0x73, 0x0A, 0x00,
};

/* 8044C9B8-8044C9F8 003F+01 s=1 e=0 z=0  None .bss       bb2Buf */
static u8 bb2Buf[63 + 1 /* padding */];

/* 8044C9F8-8044CA28 0030+00 s=1 e=0 z=0  None .bss       block$18 */
static u8 block[48];

/* 80450A00-80450A04 0002+02 s=1 e=0 z=0  None .sdata     @37 */
SECTION_SDATA static u16 lit_37[1 + 1 /* padding */] = {
    0x0A00,
    /* padding */
    0x0000,
};

/* 80450A04-80450A08 0004+00 s=1 e=0 z=0  None .sdata     @42 */
SECTION_SDATA static u32 lit_42 = 0x4F464600;

/* 80450A08-80450A10 0003+05 s=1 e=0 z=0  None .sdata     @43 */
SECTION_SDATA static u8 lit_43[3 + 5 /* padding */] = {
    0x4F,
    0x4E,
    0x00,
    /* padding */
    0x00,
    0x00,
    0x00,
    0x00,
    0x00,
};

/* 8034BE04-8034BF6C 0168+00 s=0 e=1 z=0  None .text      __fstLoad */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
extern "C" asm void __fstLoad() {
    nofralloc
#include "asm/dolphin/dvd/fstload/__fstLoad.s"
}
#pragma pop
