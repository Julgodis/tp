// 
// Generated By: dol2asm
// Translation Unit: JKRFileLoader
// 

#include "dol2asm.h"
#include "dolphin/types.h"
#include "JSystem/JKernel/JKRFileLoader.h"

// 
// Types:
// 

struct JKRFileLoader {
	/* 802D40F0 */ JKRFileLoader();
	/* 802D4148 */ ~JKRFileLoader();
	/* 802D41D4 */ void unmount();
	/* 802D4224 */ void getGlbResource(char const*);
	/* 802D4270 */ void getGlbResource(char const*, JKRFileLoader*);
	/* 802D4308 */ void removeResource(void*, JKRFileLoader*);
	/* 802D43A0 */ void detachResource(void*, JKRFileLoader*);
	/* 802D4438 */ void findVolume(char const**);
	/* 802D44C4 */ void fetchVolumeName(char*, s32, char const*);
};

template <typename A0>
struct JSUList { };
/* JSUList<JKRFileLoader> */
struct JSUList__template7 {
	/* 802D45E4 */ ~JSUList__template7();
};

struct JKRDisposer {
	/* 802D147C */ JKRDisposer();
	/* 802D14E4 */ ~JKRDisposer();
};

struct JSUPtrLink {
	/* 802DBDFC */ JSUPtrLink(void*);
	/* 802DBE14 */ ~JSUPtrLink();
};

struct JSUPtrList {
	/* 802DBEAC */ ~JSUPtrList();
	/* 802DBF14 */ void initiate();
};

// 
// Forward References:
// 


extern "C" void __ct__13JKRFileLoaderFv(); // 1
extern "C" void __dt__13JKRFileLoaderFv(); // 1
extern "C" void unmount__13JKRFileLoaderFv(); // 1
extern "C" void getGlbResource__13JKRFileLoaderFPCc(); // 1
extern "C" void getGlbResource__13JKRFileLoaderFPCcP13JKRFileLoader(); // 1
extern "C" void removeResource__13JKRFileLoaderFPvP13JKRFileLoader(); // 1
extern "C" void detachResource__13JKRFileLoaderFPvP13JKRFileLoader(); // 1
extern "C" void findVolume__13JKRFileLoaderFPPCc(); // 1
extern "C" void fetchVolumeName__13JKRFileLoaderFPclPCc(); // 1
extern "C" void __sinit_JKRFileLoader_cpp(); // 1
extern "C" void func_802D45E4(); // 1
extern "C" extern char const* const stringBase0;
extern "C" extern u8 sVolumeList__13JKRFileLoader[12];
extern "C" extern u8 sCurrentVolume__13JKRFileLoader[4 + 4 /* padding */];

// 
// External References:
// 

void operator delete(void*); // 2

extern "C" void __dl__FPv(); // 1
extern "C" void __ct__11JKRDisposerFv(); // 1
extern "C" void __dt__11JKRDisposerFv(); // 1
extern "C" void __ct__10JSUPtrLinkFPv(); // 1
extern "C" void __dt__10JSUPtrLinkFv(); // 1
extern "C" void __dt__10JSUPtrListFv(); // 1
extern "C" void initiate__10JSUPtrListFv(); // 1
extern "C" void __register_global_object(); // 1
extern "C" void _savegpr_29(); // 1
extern "C" void _restgpr_29(); // 1
extern "C" void strcmp(); // 1
extern "C" void strcpy(); // 1
extern "C" extern u8 __lower_map[256];

// 
// Declarations:
// 

/* ############################################################################################## */
/* 803CC1C8-803CC208 003C+04 s=2 e=0 z=0  None .data      __vt__13JKRFileLoader                                        */
SECTION_DATA static void* __vt__13JKRFileLoader[15 + 1 /* padding */] = {
	/* 0    */ (void*)NULL /* RTTI */,
	/* 1    */ (void*)NULL,
	/* 2    */ (void*)__dt__13JKRFileLoaderFv,
	/* 3    */ (void*)unmount__13JKRFileLoaderFv,
	/* 4    */ (void*)NULL,
	/* 5    */ (void*)NULL,
	/* 6    */ (void*)NULL,
	/* 7    */ (void*)NULL,
	/* 8    */ (void*)NULL,
	/* 9    */ (void*)NULL,
	/* 10   */ (void*)NULL,
	/* 11   */ (void*)NULL,
	/* 12   */ (void*)NULL,
	/* 13   */ (void*)NULL,
	/* 14   */ (void*)NULL,
	/* padding */
	NULL,
};

/* 802D40F0-802D4148 0058+00 s=0 e=2 z=0  None .text      __ct__13JKRFileLoaderFv                                      */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm JKRFileLoader::JKRFileLoader() {
	nofralloc
#include "asm/JSystem/JKernel/JKRFileLoader/__ct__13JKRFileLoaderFv.s"
}
#pragma pop


/* ############################################################################################## */
/* 80451418-80451420 0004+04 s=2 e=3 z=0  None .sbss      sCurrentVolume__13JKRFileLoader                              */
u8 sCurrentVolume__13JKRFileLoader[4 + 4 /* padding */];

/* 802D4148-802D41D4 008C+00 s=1 e=2 z=0  None .text      __dt__13JKRFileLoaderFv                                      */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm JKRFileLoader::~JKRFileLoader() {
	nofralloc
#include "asm/JSystem/JKernel/JKRFileLoader/__dt__13JKRFileLoaderFv.s"
}
#pragma pop


/* 802D41D4-802D4224 0050+00 s=1 e=6 z=0  None .text      unmount__13JKRFileLoaderFv                                   */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void JKRFileLoader::unmount() {
	nofralloc
#include "asm/JSystem/JKernel/JKRFileLoader/unmount__13JKRFileLoaderFv.s"
}
#pragma pop


/* 802D4224-802D4270 004C+00 s=0 e=2 z=0  None .text      getGlbResource__13JKRFileLoaderFPCc                          */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void JKRFileLoader::getGlbResource(char const* param_0) {
	nofralloc
#include "asm/JSystem/JKernel/JKRFileLoader/getGlbResource__13JKRFileLoaderFPCc.s"
}
#pragma pop


/* ############################################################################################## */
/* 80434348-80434354 000C+00 s=1 e=0 z=0  None .bss       @2182                                                        */
static u8 lit_2182[12];

/* 80434354-80434360 000C+00 s=5 e=14 z=0  None .bss       sVolumeList__13JKRFileLoader                                 */
u8 sVolumeList__13JKRFileLoader[12];

/* 802D4270-802D4308 0098+00 s=0 e=29 z=0  None .text      getGlbResource__13JKRFileLoaderFPCcP13JKRFileLoader          */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void JKRFileLoader::getGlbResource(char const* param_0, JKRFileLoader* param_1) {
	nofralloc
#include "asm/JSystem/JKernel/JKRFileLoader/getGlbResource__13JKRFileLoaderFPCcP13JKRFileLoader.s"
}
#pragma pop


/* 802D4308-802D43A0 0098+00 s=0 e=1 z=0  None .text      removeResource__13JKRFileLoaderFPvP13JKRFileLoader           */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void JKRFileLoader::removeResource(void* param_0, JKRFileLoader* param_1) {
	nofralloc
#include "asm/JSystem/JKernel/JKRFileLoader/removeResource__13JKRFileLoaderFPvP13JKRFileLoader.s"
}
#pragma pop


/* 802D43A0-802D4438 0098+00 s=0 e=2 z=0  None .text      detachResource__13JKRFileLoaderFPvP13JKRFileLoader           */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void JKRFileLoader::detachResource(void* param_0, JKRFileLoader* param_1) {
	nofralloc
#include "asm/JSystem/JKernel/JKRFileLoader/detachResource__13JKRFileLoaderFPvP13JKRFileLoader.s"
}
#pragma pop


/* 802D4438-802D44C4 008C+00 s=1 e=0 z=0  None .text      findVolume__13JKRFileLoaderFPPCc                             */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void JKRFileLoader::findVolume(char const** param_0) {
	nofralloc
#include "asm/JSystem/JKernel/JKRFileLoader/findVolume__13JKRFileLoaderFPPCc.s"
}
#pragma pop


/* ############################################################################################## */
/* 8039D150-8039D158 0002+06 s=1 e=0 z=0  None .rodata    @stringBase0                                                 */
#pragma push
#pragma force_active on
#pragma section ".dead"
SECTION_DEAD char const* const stringBase_8039D150 = "/";
/* @stringBase0 padding */
SECTION_DEAD static char const* const pad_8039D152 = "\0\0\0\0\0";
#pragma pop

/* 804508C0-804508C8 0002+06 s=1 e=0 z=0  None .sdata     rootPath$2498                                                */
SECTION_SDATA static u8 data_804508C0[2 + 6 /* padding */] = {
	0x2F, 0x00,
	/* padding */
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
};

/* 802D44C4-802D45A0 00DC+00 s=1 e=0 z=0  None .text      fetchVolumeName__13JKRFileLoaderFPclPCc                      */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void JKRFileLoader::fetchVolumeName(char* param_0, s32 param_1, char const* param_2) {
	nofralloc
#include "asm/JSystem/JKernel/JKRFileLoader/fetchVolumeName__13JKRFileLoaderFPclPCc.s"
}
#pragma pop


/* 802D45A0-802D45E4 0044+00 s=0 e=1 z=0  None .text      __sinit_JKRFileLoader_cpp                                    */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
extern "C" asm void __sinit_JKRFileLoader_cpp() {
	nofralloc
#include "asm/JSystem/JKernel/JKRFileLoader/__sinit_JKRFileLoader_cpp.s"
}
#pragma pop


/* 802D45E4-802D4638 0054+00 s=1 e=0 z=0  None .text      __dt__24JSUList<13JKRFileLoader>Fv                           */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm JSUList__template7::~JSUList__template7() {
	nofralloc
#include "asm/JSystem/JKernel/JKRFileLoader/func_802D45E4.s"
}
#pragma pop


