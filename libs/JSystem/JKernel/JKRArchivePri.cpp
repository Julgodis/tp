// 
// Generated By: dol2asm
// Translation Unit: JKRArchivePri
// 

#include "dolphin/types.h"

// 
// Types:
// 

// build JKRArchive (JKRArchive) False/False
// build JKRArchive (JKRArchive) True/False
struct JKRArchive;
// build JKRArchive (JKRArchive) True/True
// build JKRArchive (JKRArchive) True/True
/* top-level dependencies (begin JKRArchive) */
// outer dependency: JKRArchive::CArcName
// outer dependency: JKRArchive::SDIFileEntry
// outer dependency: JKRArchive::EMountMode
/* top-level dependencies (end JKRArchive) */
struct JKRArchive {
	// JKRArchive::CArcName
	// JKRArchive::SDIFileEntry
	// JKRArchive::EMountMode
	// build EMountMode (JKRArchive::EMountMode) False/False
	/* dependencies (begin JKRArchive::EMountMode) */
	/* dependencies (end JKRArchive::EMountMode) */
	struct EMountMode {
	};

	// build CArcName (JKRArchive::CArcName) False/False
	/* dependencies (begin JKRArchive::CArcName) */
	/* dependencies (end JKRArchive::CArcName) */
	struct CArcName {
		/* 802D67F4 */ void store(char const*);
		/* 802D6884 */ void store(char const*, char);
	};

	// build SDIFileEntry (JKRArchive::SDIFileEntry) False/False
	/* dependencies (begin JKRArchive::SDIFileEntry) */
	/* dependencies (end JKRArchive::SDIFileEntry) */
	struct SDIFileEntry {
	};

	/* 802D6294 */ JKRArchive(s32, JKRArchive::EMountMode);
	/* 802D6334 */ ~JKRArchive();
	/* 802D6394 */ void isSameName(JKRArchive::CArcName&, u32, u16) const;
	/* 802D63E0 */ void findResType(u32) const;
	/* 802D641C */ void findDirectory(char const*, u32) const;
	/* 802D64F4 */ void findTypeResource(u32, char const*) const;
	/* 802D65A4 */ void findFsResource(char const*, u32) const;
	/* 802D6684 */ void findIdxResource(u32) const;
	/* 802D66AC */ void findNameResource(char const*) const;
	/* 802D6734 */ void findPtrResource(void const*) const;
	/* 802D6770 */ void findIdResource(u16) const;
	/* 802D693C */ void setExpandSize(JKRArchive::SDIFileEntry*, u32);
	/* 802D6978 */ void getExpandSize(JKRArchive::SDIFileEntry*) const;
};

// build JKRHeap (JKRHeap) False/False
/* top-level dependencies (begin JKRHeap) */
/* top-level dependencies (end JKRHeap) */
struct JKRHeap {
	/* 802CE83C */ void findFromRoot(void*);
};

// build JKRFileLoader (JKRFileLoader) False/False
/* top-level dependencies (begin JKRFileLoader) */
/* top-level dependencies (end JKRFileLoader) */
struct JKRFileLoader {
	/* 802D40F0 */ JKRFileLoader();
	/* 802D4148 */ ~JKRFileLoader();
};

// 
// Forward References:
// 


extern "C" void __ct__10JKRArchiveFlQ210JKRArchive10EMountMode();
extern "C" void __dt__10JKRArchiveFv();
extern "C" void isSameName__10JKRArchiveCFRQ210JKRArchive8CArcNameUlUs();
extern "C" void findResType__10JKRArchiveCFUl();
extern "C" void findDirectory__10JKRArchiveCFPCcUl();
extern "C" void findTypeResource__10JKRArchiveCFUlPCc();
extern "C" void findFsResource__10JKRArchiveCFPCcUl();
extern "C" void findIdxResource__10JKRArchiveCFUl();
extern "C" void findNameResource__10JKRArchiveCFPCc();
extern "C" void findPtrResource__10JKRArchiveCFPCv();
extern "C" void findIdResource__10JKRArchiveCFUs();
extern "C" void store__Q210JKRArchive8CArcNameFPCc();
extern "C" void store__Q210JKRArchive8CArcNameFPCcc();
extern "C" void setExpandSize__10JKRArchiveFPQ210JKRArchive12SDIFileEntryUl();
extern "C" void getExpandSize__10JKRArchiveCFPQ210JKRArchive12SDIFileEntry();
SECTION_SBSS extern u8 sCurrentDirID__10JKRArchive[4 + 4 /* padding */];

// 
// External References:
// 

void operator delete(void*);
extern "C" void _savegpr_27();
extern "C" void _savegpr_28();
extern "C" void _savegpr_29();
extern "C" void _restgpr_27();
extern "C" void _restgpr_28();
extern "C" void _restgpr_29();
extern "C" void tolower();
extern "C" void strcmp();

extern "C" void findFromRoot__7JKRHeapFPv();
extern "C" void __dl__FPv();
extern "C" void __ct__13JKRFileLoaderFv();
extern "C" void __dt__13JKRFileLoaderFv();
extern "C" void _savegpr_27();
extern "C" void _savegpr_28();
extern "C" void _savegpr_29();
extern "C" void _restgpr_27();
extern "C" void _restgpr_28();
extern "C" void _restgpr_29();
extern "C" void tolower();
extern "C" void strcmp();
SECTION_DATA extern void*const __vt__10JKRArchive[20];
SECTION_SBSS extern u8 sCurrentHeap__7JKRHeap[4];
SECTION_SBSS extern u8 sCurrentVolume__13JKRFileLoader[4 + 4 /* padding */];

// 
// Declarations:
// 

/* ############################################################################################## */
/* 80451420-80451428 0004+04 rc=6 efc=5 .sbss      sCurrentDirID__10JKRArchive                                  */
u8 sCurrentDirID__10JKRArchive[4 + 4 /* padding */];

/* 802D6294-802D6334 00A0+00 rc=5 efc=5 .text      __ct__10JKRArchiveFlQ210JKRArchive10EMountMode               */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm JKRArchive::JKRArchive(s32 field_0, JKRArchive::EMountMode field_1) {
	nofralloc
#include "asm/JSystem/JKernel/JKRArchivePri/__ct__10JKRArchiveFlQ210JKRArchive10EMountMode.s"
}
#pragma pop


/* 802D6334-802D6394 0060+00 rc=5 efc=5 .text      __dt__10JKRArchiveFv                                         */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm JKRArchive::~JKRArchive() {
	nofralloc
#include "asm/JSystem/JKernel/JKRArchivePri/__dt__10JKRArchiveFv.s"
}
#pragma pop


/* 802D6394-802D63E0 004C+00 rc=4 efc=0 .text      isSameName__10JKRArchiveCFRQ210JKRArchive8CArcNameUlUs       */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void JKRArchive::isSameName(JKRArchive::CArcName& field_0, u32 field_1, u16 field_2) const {
	nofralloc
#include "asm/JSystem/JKernel/JKRArchivePri/isSameName__10JKRArchiveCFRQ210JKRArchive8CArcNameUlUs.s"
}
#pragma pop


/* 802D63E0-802D641C 003C+00 rc=1 efc=0 .text      findResType__10JKRArchiveCFUl                                */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void JKRArchive::findResType(u32 field_0) const {
	nofralloc
#include "asm/JSystem/JKernel/JKRArchivePri/findResType__10JKRArchiveCFUl.s"
}
#pragma pop


/* 802D641C-802D64F4 00D8+00 rc=3 efc=3 .text      findDirectory__10JKRArchiveCFPCcUl                           */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void JKRArchive::findDirectory(char const* field_0, u32 field_1) const {
	nofralloc
#include "asm/JSystem/JKernel/JKRArchivePri/findDirectory__10JKRArchiveCFPCcUl.s"
}
#pragma pop


/* 802D64F4-802D65A4 00B0+00 rc=2 efc=2 .text      findTypeResource__10JKRArchiveCFUlPCc                        */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void JKRArchive::findTypeResource(u32 field_0, char const* field_1) const {
	nofralloc
#include "asm/JSystem/JKernel/JKRArchivePri/findTypeResource__10JKRArchiveCFUlPCc.s"
}
#pragma pop


/* 802D65A4-802D6684 00E0+00 rc=4 efc=4 .text      findFsResource__10JKRArchiveCFPCcUl                          */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void JKRArchive::findFsResource(char const* field_0, u32 field_1) const {
	nofralloc
#include "asm/JSystem/JKernel/JKRArchivePri/findFsResource__10JKRArchiveCFPCcUl.s"
}
#pragma pop


/* 802D6684-802D66AC 0028+00 rc=7 efc=7 .text      findIdxResource__10JKRArchiveCFUl                            */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void JKRArchive::findIdxResource(u32 field_0) const {
	nofralloc
#include "asm/JSystem/JKernel/JKRArchivePri/findIdxResource__10JKRArchiveCFUl.s"
}
#pragma pop


/* 802D66AC-802D6734 0088+00 rc=4 efc=4 .text      findNameResource__10JKRArchiveCFPCc                          */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void JKRArchive::findNameResource(char const* field_0) const {
	nofralloc
#include "asm/JSystem/JKernel/JKRArchivePri/findNameResource__10JKRArchiveCFPCc.s"
}
#pragma pop


/* 802D6734-802D6770 003C+00 rc=9 efc=9 .text      findPtrResource__10JKRArchiveCFPCv                           */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void JKRArchive::findPtrResource(void const* field_0) const {
	nofralloc
#include "asm/JSystem/JKernel/JKRArchivePri/findPtrResource__10JKRArchiveCFPCv.s"
}
#pragma pop


/* 802D6770-802D67F4 0084+00 rc=4 efc=4 .text      findIdResource__10JKRArchiveCFUs                             */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void JKRArchive::findIdResource(u16 field_0) const {
	nofralloc
#include "asm/JSystem/JKernel/JKRArchivePri/findIdResource__10JKRArchiveCFUs.s"
}
#pragma pop


/* 802D67F4-802D6884 0090+00 rc=2 efc=0 .text      store__Q210JKRArchive8CArcNameFPCc                           */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void JKRArchive::CArcName::store(char const* field_0) {
	nofralloc
#include "asm/JSystem/JKernel/JKRArchivePri/store__Q210JKRArchive8CArcNameFPCc.s"
}
#pragma pop


/* 802D6884-802D693C 00B8+00 rc=2 efc=0 .text      store__Q210JKRArchive8CArcNameFPCcc                          */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void JKRArchive::CArcName::store(char const* field_0, char field_1) {
	nofralloc
#include "asm/JSystem/JKernel/JKRArchivePri/store__Q210JKRArchive8CArcNameFPCcc.s"
}
#pragma pop


/* 802D693C-802D6978 003C+00 rc=5 efc=5 .text      setExpandSize__10JKRArchiveFPQ210JKRArchive12SDIFileEntryUl  */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void JKRArchive::setExpandSize(JKRArchive::SDIFileEntry* field_0, u32 field_1) {
	nofralloc
#include "asm/JSystem/JKernel/JKRArchivePri/setExpandSize__10JKRArchiveFPQ210JKRArchive12SDIFileEntryUl.s"
}
#pragma pop


/* 802D6978-802D69B8 0040+00 rc=5 efc=5 .text      getExpandSize__10JKRArchiveCFPQ210JKRArchive12SDIFileEntry   */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void JKRArchive::getExpandSize(JKRArchive::SDIFileEntry* field_0) const {
	nofralloc
#include "asm/JSystem/JKernel/JKRArchivePri/getExpandSize__10JKRArchiveCFPQ210JKRArchive12SDIFileEntry.s"
}
#pragma pop


