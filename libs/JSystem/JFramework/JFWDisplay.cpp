// 
// Generated By: dol2asm
// Translation Unit: JFWDisplay
// 

#include "dol2asm.h"
#include "dolphin/types.h"
#include "JSystem/JFramework/JFWDisplay.h"

// 
// Types:
// 

struct _GXColor {
};

struct _GXRenderModeObj {
};

struct JKRHeap {
};

struct JUTXfb {
	struct EXfbNumber {
	};

	/* 802E53B8 */ void createManager(JKRHeap*, JUTXfb::EXfbNumber);
	/* 802E5424 */ void destroyManager();
};

struct JFWDisplay {
	/* 80272040 */ void ctor_subroutine(bool);
	/* 802720F8 */ JFWDisplay(JKRHeap*, JUTXfb::EXfbNumber, bool);
	/* 80272160 */ ~JFWDisplay();
	/* 802721DC */ void createManager(_GXRenderModeObj const*, JKRHeap*, JUTXfb::EXfbNumber, bool);
	/* 802722B8 */ void prepareCopyDisp();
	/* 802723AC */ void drawendXfb_single();
	/* 802723F4 */ void exchangeXfb_double();
	/* 802724FC */ void exchangeXfb_triple();
	/* 80272574 */ void copyXfb_triple();
	/* 802725F8 */ void preGX();
	/* 8027268C */ void endGX();
	/* 80272798 */ void beginRender();
	/* 80272A04 */ void endRender();
	/* 80272AB0 */ void endFrame();
	/* 80272C60 */ void waitBlanking(int);
	/* 80272E10 */ void threadSleep(s64);
	/* 80272EB8 */ void clearEfb_init();
	/* 80272F9C */ void clearEfb(int, int, int, int, _GXColor);
	/* 80272F2C */ void clearEfb();
	/* 80272F58 */ void clearEfb(_GXColor);
	/* 8027331C */ void calcCombinationRatio();
};

struct OSAlarm {
};

struct OSContext {
};

template <typename A0>
struct JSUList { };
/* JSUList<JFWAlarm> */
struct JSUList__template0 {
	/* 80273724 */ ~JSUList__template0();
};

struct JSUPtrLink {
	/* 802DBDFC */ JSUPtrLink(void*);
	/* 802DBE14 */ ~JSUPtrLink();
};

struct JSUPtrList {
	/* 802DBE74 */ JSUPtrList(bool);
	/* 802DBEAC */ ~JSUPtrList();
	/* 802DBF4C */ void append(JSUPtrLink*);
	/* 802DC15C */ void remove(JSUPtrLink*);
};

struct JUTDbPrint {
	/* 802E02A4 */ void flush();
};

struct JUTDirectPrint {
	/* 802E456C */ void changeFrameBuffer(void*, u16, u16);
};

struct JUTAssertion {
	/* 802E499C */ void flushMessage();
	/* 802E4A54 */ void flushMessage_dbPrint();
};

struct JUTVideo {
	/* 802E5088 */ void drawDoneStart();
	/* 802E50B0 */ void dummyNoDrawWait();
	/* 802E5198 */ void setRenderMode(_GXRenderModeObj const*);
	/* 802E5210 */ void waitRetraceIfNeed();
};

struct JUTFader {
	/* 802E55DC */ void control();
};

struct JUTProcBar {
	/* 802E59E0 */ void create();
	/* 802E5A28 */ void destroy();
	/* 802E5A60 */ void clear();
	/* 802E5E08 */ void draw();
};

struct JUTConsoleManager {
	/* 802E8384 */ void draw() const;
};

struct J2DOrthoGraph {
	/* 802E96D0 */ J2DOrthoGraph(f32, f32, f32, f32, f32, f32);
	/* 802E97B4 */ void setPort();
};

// 
// Forward References:
// 

static void callDirectDraw(); // 2
static void waitForTick(u32, u16); // 2
static void JFWThreadAlarmHandler(OSAlarm*, OSContext*); // 2
static void JFWDrawDoneAlarm(); // 2
static void JFWGXAbortAlarmHandler(OSAlarm*, OSContext*); // 2
static void diagnoseGpHang(); // 2

extern "C" void ctor_subroutine__10JFWDisplayFb(); // 1
extern "C" void __ct__10JFWDisplayFP7JKRHeapQ26JUTXfb10EXfbNumberb(); // 1
extern "C" void __dt__10JFWDisplayFv(); // 1
extern "C" void createManager__10JFWDisplayFPC16_GXRenderModeObjP7JKRHeapQ26JUTXfb10EXfbNumberb(); // 1
extern "C" static void callDirectDraw__Fv(); // 1
extern "C" void prepareCopyDisp__10JFWDisplayFv(); // 1
extern "C" void drawendXfb_single__10JFWDisplayFv(); // 1
extern "C" void exchangeXfb_double__10JFWDisplayFv(); // 1
extern "C" void exchangeXfb_triple__10JFWDisplayFv(); // 1
extern "C" void copyXfb_triple__10JFWDisplayFv(); // 1
extern "C" void preGX__10JFWDisplayFv(); // 1
extern "C" void endGX__10JFWDisplayFv(); // 1
extern "C" void beginRender__10JFWDisplayFv(); // 1
extern "C" void endRender__10JFWDisplayFv(); // 1
extern "C" void endFrame__10JFWDisplayFv(); // 1
extern "C" void waitBlanking__10JFWDisplayFi(); // 1
extern "C" static void waitForTick__FUlUs(); // 1
extern "C" static void JFWThreadAlarmHandler__FP7OSAlarmP9OSContext(); // 1
extern "C" void threadSleep__10JFWDisplayFx(); // 1
extern "C" void clearEfb_init__10JFWDisplayFv(); // 1
extern "C" void clearEfb__10JFWDisplayFv(); // 1
extern "C" void clearEfb__10JFWDisplayF8_GXColor(); // 1
extern "C" void clearEfb__10JFWDisplayFiiii8_GXColor(); // 1
extern "C" void calcCombinationRatio__10JFWDisplayFv(); // 1
extern "C" static void JFWDrawDoneAlarm__Fv(); // 1
extern "C" static void JFWGXAbortAlarmHandler__FP7OSAlarmP9OSContext(); // 1
extern "C" static void diagnoseGpHang__Fv(); // 1
extern "C" void __sinit_JFWDisplay_cpp(); // 1
extern "C" void func_80273724(); // 1
extern "C" extern char const* const JFWDisplay__stringBase0;
extern "C" extern u8 sManager__10JFWDisplay[4];

// 
// External References:
// 

void* operator new(u32); // 2
void operator delete(void*); // 2

extern "C" void OSReport(); // 1
extern "C" void* __nw__FUl(); // 1
extern "C" void __dl__FPv(); // 1
extern "C" void __ct__10JSUPtrLinkFPv(); // 1
extern "C" void __dt__10JSUPtrLinkFv(); // 1
extern "C" void __ct__10JSUPtrListFb(); // 1
extern "C" void __dt__10JSUPtrListFv(); // 1
extern "C" void append__10JSUPtrListFP10JSUPtrLink(); // 1
extern "C" void remove__10JSUPtrListFP10JSUPtrLink(); // 1
extern "C" void flush__10JUTDbPrintFv(); // 1
extern "C" void changeFrameBuffer__14JUTDirectPrintFPvUsUs(); // 1
extern "C" void flushMessage__12JUTAssertionFv(); // 1
extern "C" void flushMessage_dbPrint__12JUTAssertionFv(); // 1
extern "C" void drawDoneStart__8JUTVideoFv(); // 1
extern "C" void dummyNoDrawWait__8JUTVideoFv(); // 1
extern "C" void setRenderMode__8JUTVideoFPC16_GXRenderModeObj(); // 1
extern "C" void waitRetraceIfNeed__8JUTVideoFv(); // 1
extern "C" void createManager__6JUTXfbFP7JKRHeapQ26JUTXfb10EXfbNumber(); // 1
extern "C" void destroyManager__6JUTXfbFv(); // 1
extern "C" void control__8JUTFaderFv(); // 1
extern "C" void create__10JUTProcBarFv(); // 1
extern "C" void destroy__10JUTProcBarFv(); // 1
extern "C" void clear__10JUTProcBarFv(); // 1
extern "C" void draw__10JUTProcBarFv(); // 1
extern "C" void draw__17JUTConsoleManagerCFv(); // 1
extern "C" void __ct__13J2DOrthoGraphFffffff(); // 1
extern "C" void setPort__13J2DOrthoGraphFv(); // 1
extern "C" void OSCreateAlarm(); // 1
extern "C" void OSSetAlarm(); // 1
extern "C" void OSCancelAlarm(); // 1
extern "C" void OSDisableInterrupts(); // 1
extern "C" void OSRestoreInterrupts(); // 1
extern "C" void OSReceiveMessage(); // 1
extern "C" void OSGetCurrentThread(); // 1
extern "C" void OSResumeThread(); // 1
extern "C" void OSSuspendThread(); // 1
extern "C" void OSGetTime(); // 1
extern "C" void OSGetTick(); // 1
extern "C" void C_MTXOrtho(); // 1
extern "C" void VIFlush(); // 1
extern "C" void VIGetRetraceCount(); // 1
extern "C" void GXInit(); // 1
extern "C" void GXGetGPStatus(); // 1
extern "C" void GXGetFifoBase(); // 1
extern "C" void GXGetFifoSize(); // 1
extern "C" void GXGetCPUFifo(); // 1
extern "C" void GXSetVtxDesc(); // 1
extern "C" void GXClearVtxDesc(); // 1
extern "C" void GXSetVtxAttrFmt(); // 1
extern "C" void GXInvalidateVtxCache(); // 1
extern "C" void GXSetTexCoordGen2(); // 1
extern "C" void GXSetNumTexGens(); // 1
extern "C" void GXFlush(); // 1
extern "C" void GXAbortFrame(); // 1
extern "C" void GXSetDrawDone(); // 1
extern "C" void GXDrawDone(); // 1
extern "C" void GXPixModeSync(); // 1
extern "C" void GXBegin(); // 1
extern "C" void GXSetCullMode(); // 1
extern "C" void GXSetDispCopySrc(); // 1
extern "C" void GXSetDispCopyDst(); // 1
extern "C" void GXSetCopyClamp(); // 1
extern "C" void GXGetNumXfbLines(); // 1
extern "C" void GXGetYScaleFactor(); // 1
extern "C" void GXSetDispCopyYScale(); // 1
extern "C" void GXSetCopyClear(); // 1
extern "C" void GXSetCopyFilter(); // 1
extern "C" void GXSetDispCopyGamma(); // 1
extern "C" void GXCopyDisp(); // 1
extern "C" void GXSetNumChans(); // 1
extern "C" void GXSetChanCtrl(); // 1
extern "C" void GXInitTexObj(); // 1
extern "C" void GXInitTexObjLOD(); // 1
extern "C" void GXLoadTexObj(); // 1
extern "C" void GXInvalidateTexAll(); // 1
extern "C" void GXSetTevColorIn(); // 1
extern "C" void GXSetTevAlphaIn(); // 1
extern "C" void GXSetTevColorOp(); // 1
extern "C" void GXSetTevAlphaOp(); // 1
extern "C" void GXSetTevColor(); // 1
extern "C" void GXSetAlphaCompare(); // 1
extern "C" void GXSetZTexture(); // 1
extern "C" void GXSetTevOrder(); // 1
extern "C" void GXSetNumTevStages(); // 1
extern "C" void GXSetBlendMode(); // 1
extern "C" void GXSetAlphaUpdate(); // 1
extern "C" void GXSetZMode(); // 1
extern "C" void GXSetZCompLoc(); // 1
extern "C" void GXSetPixelFmt(); // 1
extern "C" void GXSetDither(); // 1
extern "C" void GXSetDstAlpha(); // 1
extern "C" void GXSetProjection(); // 1
extern "C" void GXLoadPosMtxImm(); // 1
extern "C" void GXSetCurrentMtx(); // 1
extern "C" void GXSetViewport(); // 1
extern "C" void GXSetScissor(); // 1
extern "C" void GXReadXfRasMetric(); // 1
extern "C" void __register_global_object(); // 1
extern "C" void _savegpr_24(); // 1
extern "C" void _savegpr_28(); // 1
extern "C" void _savegpr_29(); // 1
extern "C" void _restgpr_24(); // 1
extern "C" void _restgpr_28(); // 1
extern "C" void _restgpr_29(); // 1
extern "C" void __cvt_dbl_usll(); // 1
extern "C" extern void* __vt__14J2DGrafContext[10];
extern "C" extern void* __vt__13J2DOrthoGraph[10];
extern "C" extern u8 sDebugPrint__10JUTDbPrint[4 + 4 /* padding */];
extern "C" extern u8 sDirectPrint__14JUTDirectPrint[4 + 4 /* padding */];
extern "C" extern u8 sManager__8JUTVideo[4];
extern "C" extern u8 sVideoLastTick__8JUTVideo[4];
extern "C" extern u8 sVideoInterval__8JUTVideo[4];
extern "C" extern u8 sManager__6JUTXfb[4 + 4 /* padding */];
extern "C" extern u8 sManager__10JUTProcBar[4];
extern "C" extern u8 sManager__17JUTConsoleManager[4];

// 
// Declarations:
// 

/* ############################################################################################## */
/* 80455250-80455254 0004+00 r=4 e=0 z=0  None .sdata2    @2198                                                        */
SECTION_SDATA2 static u8 lit_2198[4] = {
	0x00, 0x00, 0x00, 0x00,
};

/* 80272040-802720F8 00B8+00 r=1 e=0 z=0  None .text      ctor_subroutine__10JFWDisplayFb                              */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void JFWDisplay::ctor_subroutine(bool param_0) {
	nofralloc
#include "asm/JSystem/JFramework/JFWDisplay/ctor_subroutine__10JFWDisplayFb.s"
}
#pragma pop


/* ############################################################################################## */
/* 803C4020-803C4060 0030+10 r=1 e=0 z=0  None .data      e_mtx                                                        */
SECTION_DATA static u8 e_mtx[48 + 16 /* padding */] = {
	0x3F, 0x80, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
	0x00, 0x00, 0x00, 0x00, 0x3F, 0x80, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x3F, 0x80, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
	/* padding */
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
};

/* 803C4060-803C40A0 0040+00 r=1 e=0 z=0  None .data      clear_z_TX                                                   */
SECTION_DATA static u8 clear_z_TX[64] = {
	0x00, 0xFF, 0x00, 0xFF, 0x00, 0xFF, 0x00, 0xFF, 0x00, 0xFF, 0x00, 0xFF, 0x00, 0xFF, 0x00, 0xFF,
	0x00, 0xFF, 0x00, 0xFF, 0x00, 0xFF, 0x00, 0xFF, 0x00, 0xFF, 0x00, 0xFF, 0x00, 0xFF, 0x00, 0xFF,
	0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF,
	0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF,
};

/* 803C40A0-803C40C0 0018+08 r=2 e=0 z=0  None .data      __vt__10JFWDisplay                                           */
SECTION_DATA static void* __vt__10JFWDisplay[6 + 2 /* padding */] = {
	/* 0    */ (void*)NULL /* RTTI */,
	/* 1    */ (void*)NULL,
	/* 2    */ (void*)beginRender__10JFWDisplayFv,
	/* 3    */ (void*)endRender__10JFWDisplayFv,
	/* 4    */ (void*)endFrame__10JFWDisplayFv,
	/* 5    */ (void*)__dt__10JFWDisplayFv,
	/* padding */
	NULL,
	NULL,
};

/* 802720F8-80272160 0068+00 r=1 e=0 z=0  None .text      __ct__10JFWDisplayFP7JKRHeapQ26JUTXfb10EXfbNumberb           */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm JFWDisplay::JFWDisplay(JKRHeap* param_0, JUTXfb::EXfbNumber param_1, bool param_2) {
	nofralloc
#include "asm/JSystem/JFramework/JFWDisplay/__ct__10JFWDisplayFP7JKRHeapQ26JUTXfb10EXfbNumberb.s"
}
#pragma pop


/* 80272160-802721DC 007C+00 r=1 e=0 z=0  None .text      __dt__10JFWDisplayFv                                         */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm JFWDisplay::~JFWDisplay() {
	nofralloc
#include "asm/JSystem/JFramework/JFWDisplay/__dt__10JFWDisplayFv.s"
}
#pragma pop


/* ############################################################################################## */
/* 804511C0-804511C4 0004+00 r=43 e=40 z=1  None .sbss      sManager__10JFWDisplay                                       */
u8 sManager__10JFWDisplay[4];

/* 802721DC-80272260 0084+00 r=1 e=1 z=0  None .text      createManager__10JFWDisplayFPC16_GXRenderModeObjP7JKRHeapQ26JUTXfb10EXfbNumberb */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void JFWDisplay::createManager(_GXRenderModeObj const* param_0, JKRHeap* param_1, JUTXfb::EXfbNumber param_2, bool param_3) {
	nofralloc
#include "asm/JSystem/JFramework/JFWDisplay/createManager__10JFWDisplayFPC16_GXRenderModeObjP7JKRHeapQ26JUTXfb10EXfbNumberb.s"
}
#pragma pop


/* 80272260-802722B8 0058+00 r=2 e=0 z=0  None .text      callDirectDraw__Fv                                           */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm static void callDirectDraw() {
	nofralloc
#include "asm/JSystem/JFramework/JFWDisplay/callDirectDraw__Fv.s"
}
#pragma pop


/* 802722B8-802723AC 00F4+00 r=3 e=0 z=0  None .text      prepareCopyDisp__10JFWDisplayFv                              */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void JFWDisplay::prepareCopyDisp() {
	nofralloc
#include "asm/JSystem/JFramework/JFWDisplay/prepareCopyDisp__10JFWDisplayFv.s"
}
#pragma pop


/* 802723AC-802723F4 0048+00 r=1 e=0 z=0  None .text      drawendXfb_single__10JFWDisplayFv                            */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void JFWDisplay::drawendXfb_single() {
	nofralloc
#include "asm/JSystem/JFramework/JFWDisplay/drawendXfb_single__10JFWDisplayFv.s"
}
#pragma pop


/* 802723F4-802724FC 0108+00 r=1 e=0 z=0  None .text      exchangeXfb_double__10JFWDisplayFv                           */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void JFWDisplay::exchangeXfb_double() {
	nofralloc
#include "asm/JSystem/JFramework/JFWDisplay/exchangeXfb_double__10JFWDisplayFv.s"
}
#pragma pop


/* 802724FC-80272574 0078+00 r=1 e=0 z=0  None .text      exchangeXfb_triple__10JFWDisplayFv                           */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void JFWDisplay::exchangeXfb_triple() {
	nofralloc
#include "asm/JSystem/JFramework/JFWDisplay/exchangeXfb_triple__10JFWDisplayFv.s"
}
#pragma pop


/* 80272574-802725F8 0084+00 r=1 e=0 z=0  None .text      copyXfb_triple__10JFWDisplayFv                               */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void JFWDisplay::copyXfb_triple() {
	nofralloc
#include "asm/JSystem/JFramework/JFWDisplay/copyXfb_triple__10JFWDisplayFv.s"
}
#pragma pop


/* 802725F8-8027268C 0094+00 r=1 e=0 z=0  None .text      preGX__10JFWDisplayFv                                        */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void JFWDisplay::preGX() {
	nofralloc
#include "asm/JSystem/JFramework/JFWDisplay/preGX__10JFWDisplayFv.s"
}
#pragma pop


/* ############################################################################################## */
/* 80455254-80455258 0004+00 r=1 e=0 z=0  None .sdata2    @2497                                                        */
SECTION_SDATA2 static f32 lit_2497 = -1.0f;

/* 80455258-80455260 0004+04 r=3 e=0 z=0  None .sdata2    @2498                                                        */
SECTION_SDATA2 static f32 lit_2498[1 + 1 /* padding */] = {
	1.0f,
	/* padding */
	0.0f,
};

/* 80455260-80455268 0008+00 r=4 e=0 z=0  None .sdata2    @2500                                                        */
SECTION_SDATA2 static f64 lit_2500 = 4503599627370496.0 /* cast u32 to float */;

/* 8027268C-80272798 010C+00 r=1 e=0 z=0  None .text      endGX__10JFWDisplayFv                                        */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void JFWDisplay::endGX() {
	nofralloc
#include "asm/JSystem/JFramework/JFWDisplay/endGX__10JFWDisplayFv.s"
}
#pragma pop


/* 80272798-80272A04 026C+00 r=1 e=0 z=0  None .text      beginRender__10JFWDisplayFv                                  */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void JFWDisplay::beginRender() {
	nofralloc
#include "asm/JSystem/JFramework/JFWDisplay/beginRender__10JFWDisplayFv.s"
}
#pragma pop


/* 80272A04-80272AB0 00AC+00 r=1 e=0 z=0  None .text      endRender__10JFWDisplayFv                                    */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void JFWDisplay::endRender() {
	nofralloc
#include "asm/JSystem/JFramework/JFWDisplay/endRender__10JFWDisplayFv.s"
}
#pragma pop


/* ############################################################################################## */
/* 804511C4-804511C8 0004+00 r=1 e=0 z=0  None .sbss      prevFrame$2597                                               */
static u8 data_804511C4[4];

/* 804511C8-804511D0 0008+00 r=1 e=0 z=0  None .sbss      None                                                         */
static u8 data_804511C8[8];

/* 80272AB0-80272C60 01B0+00 r=1 e=0 z=0  None .text      endFrame__10JFWDisplayFv                                     */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void JFWDisplay::endFrame() {
	nofralloc
#include "asm/JSystem/JFramework/JFWDisplay/endFrame__10JFWDisplayFv.s"
}
#pragma pop


/* 80272C60-80272CB0 0050+00 r=2 e=1 z=0  None .text      waitBlanking__10JFWDisplayFi                                 */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void JFWDisplay::waitBlanking(int param_0) {
	nofralloc
#include "asm/JSystem/JFramework/JFWDisplay/waitBlanking__10JFWDisplayFi.s"
}
#pragma pop


/* ############################################################################################## */
/* 804511D0-804511D4 0004+00 r=1 e=0 z=0  None .sbss      nextTick$2642                                                */
static u8 data_804511D0[4];

/* 804511D4-804511D8 0004+00 r=1 e=0 z=0  None .sbss      None                                                         */
static u8 data_804511D4[4];

/* 804511D8-804511DC 0004+00 r=1 e=0 z=0  None .sbss      None                                                         */
static u8 data_804511D8[4];

/* 804511DC-804511E0 0004+00 r=1 e=0 z=0  None .sbss      nextCount$2650                                               */
static u8 data_804511DC[4];

/* 804511E0-804511E8 0008+00 r=1 e=0 z=0  None .sbss      None                                                         */
static u8 data_804511E0[8];

/* 80272CB0-80272DD0 0120+00 r=2 e=0 z=0  None .text      waitForTick__FUlUs                                           */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm static void waitForTick(u32 param_0, u16 param_1) {
	nofralloc
#include "asm/JSystem/JFramework/JFWDisplay/waitForTick__FUlUs.s"
}
#pragma pop


/* ############################################################################################## */
/* 80430FD8-80430FE4 000C+00 r=1 e=0 z=0  None .bss       @2184                                                        */
static u8 lit_2184[12];

/* 80430FE4-80430FF0 000C+00 r=4 e=0 z=0  None .bss       sList__8JFWAlarm                                             */
static u8 sList__8JFWAlarm[12];

/* 80272DD0-80272E10 0040+00 r=1 e=0 z=0  None .text      JFWThreadAlarmHandler__FP7OSAlarmP9OSContext                 */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm static void JFWThreadAlarmHandler(OSAlarm* param_0, OSContext* param_1) {
	nofralloc
#include "asm/JSystem/JFramework/JFWDisplay/JFWThreadAlarmHandler__FP7OSAlarmP9OSContext.s"
}
#pragma pop


/* 80272E10-80272EB8 00A8+00 r=1 e=0 z=0  None .text      threadSleep__10JFWDisplayFx                                  */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void JFWDisplay::threadSleep(s64 param_0) {
	nofralloc
#include "asm/JSystem/JFramework/JFWDisplay/threadSleep__10JFWDisplayFx.s"
}
#pragma pop


/* ############################################################################################## */
/* 80430FF0-80431010 0020+00 r=2 e=0 z=0  None .bss       clear_z_tobj                                                 */
static u8 clear_z_tobj[32];

/* 80272EB8-80272F2C 0074+00 r=1 e=0 z=0  None .text      clearEfb_init__10JFWDisplayFv                                */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void JFWDisplay::clearEfb_init() {
	nofralloc
#include "asm/JSystem/JFramework/JFWDisplay/clearEfb_init__10JFWDisplayFv.s"
}
#pragma pop


/* 80272F2C-80272F58 002C+00 r=1 e=0 z=0  None .text      clearEfb__10JFWDisplayFv                                     */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void JFWDisplay::clearEfb() {
	nofralloc
#include "asm/JSystem/JFramework/JFWDisplay/clearEfb__10JFWDisplayFv.s"
}
#pragma pop


/* 80272F58-80272F9C 0044+00 r=3 e=0 z=0  None .text      clearEfb__10JFWDisplayF8_GXColor                             */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void JFWDisplay::clearEfb(_GXColor param_0) {
	nofralloc
#include "asm/JSystem/JFramework/JFWDisplay/clearEfb__10JFWDisplayF8_GXColor.s"
}
#pragma pop


/* 80272F9C-8027331C 0380+00 r=1 e=0 z=0  None .text      clearEfb__10JFWDisplayFiiii8_GXColor                         */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void JFWDisplay::clearEfb(int param_0, int param_1, int param_2, int param_3, _GXColor param_4) {
	nofralloc
#include "asm/JSystem/JFramework/JFWDisplay/clearEfb__10JFWDisplayFiiii8_GXColor.s"
}
#pragma pop


/* ############################################################################################## */
/* 80455268-80455270 0008+00 r=1 e=0 z=0  None .sdata2    @2933                                                        */
SECTION_SDATA2 static f64 JFWDisplay__lit_2933 = 4503601774854144.0 /* cast s32 to float */;

/* 8027331C-802733A8 008C+00 r=1 e=0 z=0  None .text      calcCombinationRatio__10JFWDisplayFv                         */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void JFWDisplay::calcCombinationRatio() {
	nofralloc
#include "asm/JSystem/JFramework/JFWDisplay/calcCombinationRatio__10JFWDisplayFv.s"
}
#pragma pop


/* ############################################################################################## */
/* 80455270-80455278 0008+00 r=1 e=0 z=0  None .sdata2    @2964                                                        */
SECTION_SDATA2 static f64 lit_2964 = 0.5;

/* 802733A8-80273484 00DC+00 r=2 e=0 z=0  None .text      JFWDrawDoneAlarm__Fv                                         */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm static void JFWDrawDoneAlarm() {
	nofralloc
#include "asm/JSystem/JFramework/JFWDisplay/JFWDrawDoneAlarm__Fv.s"
}
#pragma pop


/* 80273484-802734FC 0078+00 r=1 e=0 z=0  None .text      JFWGXAbortAlarmHandler__FP7OSAlarmP9OSContext                */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm static void JFWGXAbortAlarmHandler(OSAlarm* param_0, OSContext* param_1) {
	nofralloc
#include "asm/JSystem/JFramework/JFWDisplay/JFWGXAbortAlarmHandler__FP7OSAlarmP9OSContext.s"
}
#pragma pop


/* ############################################################################################## */
/* 8039A878-8039A948 00D0+00 r=1 e=0 z=0  None .rodata    @stringBase0                                                 */
#pragma push
#pragma force_active on
#pragma section ".dead"
SECTION_DEAD char const* const stringBase_8039A878 = "GP status %d%d%d%d%d%d --> ";
SECTION_DEAD char const* const stringBase_8039A894 = "GP hang due to XF stall bug.\n";
SECTION_DEAD char const* const stringBase_8039A8B2 = 
    "GP hang due to unterminated primitive.\n";
SECTION_DEAD char const* const stringBase_8039A8DA = 
    "GP hang due to illegal instruction.\n";
SECTION_DEAD char const* const stringBase_8039A8FF = 
    "GP appears to be not hung (waiting for input).\n";
SECTION_DEAD char const* const stringBase_8039A92F = "GP is in unknown state.\n";
#pragma pop

/* 802734FC-802736DC 01E0+00 r=1 e=0 z=0  None .text      diagnoseGpHang__Fv                                           */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm static void diagnoseGpHang() {
	nofralloc
#include "asm/JSystem/JFramework/JFWDisplay/diagnoseGpHang__Fv.s"
}
#pragma pop


/* 802736DC-80273724 0048+00 r=1 e=1 z=0  None .text      __sinit_JFWDisplay_cpp                                       */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
extern "C" asm void __sinit_JFWDisplay_cpp() {
	nofralloc
#include "asm/JSystem/JFramework/JFWDisplay/__sinit_JFWDisplay_cpp.s"
}
#pragma pop


/* 80273724-80273778 0054+00 r=1 e=0 z=0  None .text      __dt__18JSUList<8JFWAlarm>Fv                                 */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm JSUList__template0::~JSUList__template0() {
	nofralloc
#include "asm/JSystem/JFramework/JFWDisplay/func_80273724.s"
}
#pragma pop


