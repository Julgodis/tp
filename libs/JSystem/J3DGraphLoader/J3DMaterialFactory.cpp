// 
// Generated By: dol2asm
// Translation Unit: J3DMaterialFactory
// 

#include "dolphin/types.h"

// 
// Types:
// 

struct J3DMaterialDLBlock {
};

struct J3DMaterial {
	/* 803157A0 */ void createColorBlock(u32);
	/* 803159A0 */ void createTexGenBlock(u32);
	/* 80315B04 */ void createTevBlock(int);
	/* 80315E78 */ void createIndBlock(int);
	/* 80315F60 */ void createPEBlock(u32, u32);
	/* 80316100 */ void calcSizeColorBlock(u32);
	/* 80316150 */ void calcSizeTexGenBlock(u32);
	/* 8031617C */ void calcSizeTevBlock(int);
	/* 803161C4 */ void calcSizeIndBlock(int);
	/* 803161D8 */ void calcSizePEBlock(u32, u32);
	/* 80316240 */ void initialize();
	/* 80332B94 */ ~J3DMaterial();
};

struct J3DMaterialBlock {
};

struct J3DMaterialFactory {
	struct MaterialType {
	};

	/* 80330234 */ J3DMaterialFactory(J3DMaterialDLBlock const&);
	/* 8032FFEC */ J3DMaterialFactory(J3DMaterialBlock const&);
	/* 803302BC */ void countUniqueMaterials();
	/* 80330304 */ void countTexGens(int) const;
	/* 8033033C */ void countStages(int) const;
	/* 803303C4 */ void create(J3DMaterial*, J3DMaterialFactory::MaterialType, int, u32) const;
	/* 80330440 */ void createNormalMaterial(J3DMaterial*, int, u32) const;
	/* 80330D84 */ void createPatchedMaterial(J3DMaterial*, int, u32) const;
	/* 8033168C */ void modifyPatchedCurrentMtx(J3DMaterial*, int) const;
	/* 803317D4 */ void createLockedMaterial(J3DMaterial*, int, u32) const;
	/* 80331A7C */ void calcSize(J3DMaterial*, J3DMaterialFactory::MaterialType, int, u32) const;
	/* 80331AFC */ void calcSizeNormalMaterial(J3DMaterial*, int, u32) const;
	/* 80331C30 */ void calcSizePatchedMaterial(J3DMaterial*, int, u32) const;
	/* 80331D00 */ void calcSizeLockedMaterial(J3DMaterial*, int, u32) const;
	/* 80331D18 */ void newMatColor(int, int) const;
	/* 80331D74 */ void newColorChanNum(int) const;
	/* 80331DAC */ void newColorChan(int, int) const;
	/* 80331F50 */ void newAmbColor(int, int) const;
	/* 80331FAC */ void newTexGenNum(int) const;
	/* 80331FE4 */ void newTexCoord(int, int) const;
	/* 80332044 */ void newTexMtx(int, int) const;
	/* 803320CC */ void newCullMode(int) const;
	/* 8033210C */ void newTexNo(int, int) const;
	/* 80332154 */ void newTevOrder(int, int) const;
	/* 803321A0 */ void newTevColor(int, int) const;
	/* 80332210 */ void newTevKColor(int, int) const;
	/* 8033226C */ void newTevStageNum(int) const;
	/* 803322A4 */ void newTevStage(int, int) const;
	/* 80332304 */ void newTevSwapModeTable(int, int) const;
	/* 803323A0 */ void newIndTexStageNum(int) const;
	/* 803323C8 */ void newIndTexOrder(int, int) const;
	/* 8033240C */ void newIndTexMtx(int, int) const;
	/* 803324B4 */ void newIndTevStage(int, int) const;
	/* 80332648 */ void newIndTexCoordScale(int, int) const;
	/* 8033268C */ void newFog(int) const;
	/* 80332768 */ void newAlphaComp(int) const;
	/* 803327E8 */ void newBlend(int) const;
	/* 8033282C */ void newZMode(int) const;
	/* 8033288C */ void newZCompLoc(int) const;
	/* 803328C4 */ void newDither(int) const;
	/* 803328FC */ void newNBTScale(int) const;
};

struct J3DPEBlockNull {
	/* 803329A0 */ void load();
	/* 803329A4 */ void getType();
	/* 803329B0 */ ~J3DPEBlockNull();
};

struct J3DTevSwapModeInfo {
};

struct J3DTevSwapModeTable {
};

struct J3DTevOrder {
	/* 8000E140 */ J3DTevOrder();
};

struct J3DGXColor {
	/* 8000E538 */ J3DGXColor();
};

struct J3DIndTevStage {
	/* 8000E14C */ J3DIndTevStage();
};

struct J3DGXColorS10 {
	/* 8000E460 */ J3DGXColorS10();
};

struct J3DTevStageInfo {
};

struct J3DTevStage {
	/* 8000E230 */ J3DTevStage();
	/* 8003AACC */ J3DTevStage(J3DTevStageInfo const&);
};

struct J3DTevBlock {
	/* 8000DBC8 */ void patchTexNoAndTexCoordScale();
	/* 8000DBD4 */ void patch();
	/* 8000DF84 */ bool getIndTevStage(u32);
	/* 8000DF8C */ bool getTevStage(u32);
	/* 8000DF94 */ void getTexNo(u32) const;
	/* 8000DFA0 */ bool getTevSwapModeTable(u32);
	/* 8000DFA8 */ bool getTevKAlphaSel(u32);
	/* 8000DFB0 */ bool getTevKColorSel(u32);
	/* 8000DFB8 */ bool getTevOrder(u32);
	/* 8000DFC0 */ bool getTevKColor(u32);
	/* 8000DFC8 */ bool getTevColor(u32);
	/* 8000DFD0 */ bool getTevStageNum() const;
	/* 8000E0A4 */ void setIndTevStage(u32, J3DIndTevStage);
	/* 80323554 */ void setIndTevStage(u32, J3DIndTevStage const*);
	/* 8000E0A8 */ void setTevStage(u32, J3DTevStage);
	/* 80323550 */ void setTevStage(u32, J3DTevStage const*);
	/* 8000E0AC */ void setTexNo(u32, u16);
	/* 80323544 */ void setTexNo(u32, u16 const*);
	/* 8000E0B0 */ void setTevSwapModeTable(u32, J3DTevSwapModeTable);
	/* 80322960 */ void setTevSwapModeTable(u32, J3DTevSwapModeTable const*);
	/* 8000E0B4 */ void setTevKAlphaSel(u32, u8);
	/* 80322954 */ void setTevKAlphaSel(u32, u8 const*);
	/* 8000E0B8 */ void setTevKColorSel(u32, u8);
	/* 80322950 */ void setTevKColorSel(u32, u8 const*);
	/* 8000E0BC */ void setTevOrder(u32, J3DTevOrder);
	/* 80323548 */ void setTevOrder(u32, J3DTevOrder const*);
	/* 800732AC */ void setTevKColor(u32, J3DGXColor const*);
	/* 8000E0C0 */ void setTevKColor(u32, J3DGXColor);
	/* 80110E80 */ void setTevColor(u32, J3DGXColorS10 const*);
	/* 8000E0C4 */ void setTevColor(u32, J3DGXColorS10);
	/* 8000E0C8 */ void setTevStageNum(u8);
	/* 8032354C */ void setTevStageNum(u8 const*);
	/* 8031730C */ bool countDLSize();
	/* 80317330 */ void load();
	/* 8031CD44 */ void diff(u32);
	/* 8031E098 */ void indexToPtr_private(u32);
	/* 80321938 */ void diffTevReg();
	/* 8032193C */ void diffTevStageIndirect();
	/* 80321940 */ void diffTevStage();
	/* 80321944 */ void diffTexCoordScale();
	/* 80321948 */ void diffTexNo();
	/* 80321FE0 */ void setTexNoOffset(u32);
	/* 80322958 */ void setTevSwapModeInfo(u32, J3DTevSwapModeInfo);
	/* 8032295C */ void setTevSwapModeInfo(u32, J3DTevSwapModeInfo const*);
	/* 80322964 */ bool getTevRegOffset() const;
	/* 8032296C */ void setTevRegOffset(u32);
	/* 8032353C */ void patchTexNo();
	/* 80323540 */ void patchTevReg();
	/* 80323558 */ bool getTexNoOffset() const;
};

struct J3DTevBlockNull {
	/* 803176D4 */ void initialize();
	/* 80332A0C */ void reset(J3DTevBlock*);
	/* 80332A10 */ void ptrToIndex();
	/* 80332A14 */ void indexToPtr();
	/* 80332A38 */ void getType();
	/* 80332A44 */ ~J3DTevBlockNull();
};

struct J3DTexGenBlockNull {
	/* 80332AA0 */ void calc(f32 const (* )[4]);
	/* 80332AA4 */ void calcWithoutViewMtx(f32 const (* )[4]);
	/* 80332AA8 */ void calcPostTexMtx(f32 const (* )[4]);
	/* 80332AAC */ void calcPostTexMtxWithoutViewMtx(f32 const (* )[4]);
	/* 80332AB0 */ void load();
	/* 80332AB4 */ void patch();
	/* 80332AB8 */ void diff(u32);
	/* 80332ABC */ void diffTexMtx();
	/* 80332AC0 */ void diffTexGen();
	/* 80332AC4 */ void getType();
	/* 80332AD0 */ ~J3DTexGenBlockNull();
};

struct J3DColorBlockNull {
	/* 80332B2C */ void getType();
	/* 80332B38 */ ~J3DColorBlockNull();
};

struct J3DBlend {
};

struct J3DAlphaComp {
};

struct J3DFog {
};

struct J3DZMode {
};

struct J3DPEBlock {
	/* 8000DBCC */ void patch();
	/* 8000DF3C */ bool getZCompLoc() const;
	/* 8000DF44 */ bool getZMode();
	/* 8000DF4C */ bool getBlend();
	/* 8000DF54 */ bool getAlphaComp();
	/* 8000DF5C */ bool getFog();
	/* 8000E010 */ void setZCompLoc(u8);
	/* 80317378 */ void setZCompLoc(u8 const*);
	/* 8000E014 */ void setZMode(J3DZMode);
	/* 80317374 */ void setZMode(J3DZMode const*);
	/* 8000E018 */ void setBlend(J3DBlend const&);
	/* 80317370 */ void setBlend(J3DBlend const*);
	/* 8000E01C */ void setAlphaComp(J3DAlphaComp const&);
	/* 8031736C */ void setAlphaComp(J3DAlphaComp const*);
	/* 8031731C */ bool countDLSize();
	/* 80317344 */ void diff(u32);
	/* 80317348 */ void reset(J3DPEBlock*);
	/* 8031735C */ void diffFog();
	/* 80317360 */ void diffBlend();
	/* 80317364 */ void setFog(J3DFog*);
	/* 80317368 */ void setFog(J3DFog);
	/* 80317380 */ void setDither(u8 const*);
	/* 8031737C */ void setDither(u8);
	/* 80317384 */ bool getDither() const;
	/* 8031738C */ bool getFogOffset() const;
	/* 80317394 */ void setFogOffset(u32);
};

struct J3DLightObj {
};

struct J3DColorChan {
};

struct J3DColorBlock {
	/* 8000DBD0 */ void patchLight();
	/* 8000DFF0 */ bool getAmbColor(u32);
	/* 8000DFF8 */ bool getColorChan(u32);
	/* 8000E000 */ bool getMatColor(u32);
	/* 8000E008 */ bool getColorChanNum() const;
	/* 801A4C0C */ void setAmbColor(u32, J3DGXColor const*);
	/* 8000E0D4 */ void setAmbColor(u32, J3DGXColor);
	/* 80317450 */ void setColorChan(u32, J3DColorChan const*);
	/* 8000E0D8 */ void setColorChan(u32, J3DColorChan const&);
	/* 80317448 */ void setMatColor(u32, J3DGXColor const*);
	/* 8000E0DC */ void setMatColor(u32, J3DGXColor);
	/* 8031744C */ void setColorChanNum(u8 const*);
	/* 8000E0E0 */ void setColorChanNum(u8);
	/* 801A4C08 */ void setLight(u32, J3DLightObj*);
	/* 80317304 */ bool countDLSize();
	/* 80317324 */ void load();
	/* 80317328 */ s32 getCullMode() const;
	/* 8031733C */ void patch();
	/* 80317340 */ void diff(u32);
	/* 80317358 */ void reset(J3DColorBlock*);
	/* 80317434 */ void patchMatColor();
	/* 80317438 */ void diffAmbColor();
	/* 8031743C */ void diffMatColor();
	/* 80317440 */ void diffColorChan();
	/* 80317444 */ void diffLightObj(u32);
	/* 80317454 */ bool getLight(u32);
	/* 8031745C */ void setCullMode(u8);
	/* 80317460 */ void setCullMode(u8 const*);
	/* 80317464 */ bool getMatColorOffset() const;
	/* 8031746C */ bool getColorChanOffset() const;
	/* 80317474 */ void setMatColorOffset(u32);
	/* 80317478 */ void setColorChanOffset(u32);
};

struct J3DTexMtx {
};

struct J3DTexCoord {
	/* 8000E464 */ J3DTexCoord();
};

struct J3DNBTScale {
};

struct J3DTexGenBlock {
	/* 8000DFD8 */ bool getTexMtx(u32);
	/* 8000DFE0 */ bool getTexCoord(u32);
	/* 8000DFE8 */ bool getTexGenNum() const;
	/* 8000E0CC */ void setTexCoord(u32, J3DTexCoord const*);
	/* 8031741C */ void setTexGenNum(u32 const*);
	/* 8000E0D0 */ void setTexGenNum(u32);
	/* 8003AB2C */ void setTexMtx(u32, J3DTexMtx*);
	/* 803172FC */ bool countDLSize();
	/* 80317334 */ bool getNBTScale();
	/* 80317354 */ void reset(J3DTexGenBlock*);
	/* 80317420 */ void setNBTScale(J3DNBTScale);
	/* 80317424 */ void setNBTScale(J3DNBTScale const*);
	/* 80317428 */ bool getTexMtxOffset() const;
	/* 80317430 */ void setTexMtxOffset(u32);
};

struct J3DDisplayListObj {
	/* 803125E4 */ void setSingleDisplayList(void*, u32);
};

struct J3DPatchedMaterial {
	/* 80316FB8 */ void initialize();
};

struct J3DLockedMaterial {
	/* 80317044 */ void initialize();
};

struct J3DTexGenBlockPatched {
	/* 80317644 */ void initialize();
};

struct J3DTevBlockPatched {
	/* 803176E0 */ void initialize();
};

struct J3DTexMtxInfo {
	/* 80325718 */ void operator=(J3DTexMtxInfo const&);
};

struct J3DIndTexMtxInfo {
	/* 803257DC */ void operator=(J3DIndTexMtxInfo const&);
};

struct J3DFogInfo {
	/* 80325800 */ void operator=(J3DFogInfo const&);
};

// 
// Forward References:
// 

void JSUConvertOffsetToPtr__template43(void const*, void const*); // 2
void JSUConvertOffsetToPtr__template44(void const*, void const*); // 2
void JSUConvertOffsetToPtr__template45(void const*, void const*); // 2
void JSUConvertOffsetToPtr__template46(void const*, void const*); // 2
void JSUConvertOffsetToPtr__template47(void const*, void const*); // 2
void JSUConvertOffsetToPtr__template48(void const*, void const*); // 2
void JSUConvertOffsetToPtr__template49(void const*, void const*); // 2
void JSUConvertOffsetToPtr__template50(void const*, void const*); // 2
void JSUConvertOffsetToPtr__template51(void const*, void const*); // 2
void JSUConvertOffsetToPtr__template52(void const*, void const*); // 2
void JSUConvertOffsetToPtr__template53(void const*, void const*); // 2
void JSUConvertOffsetToPtr__template54(void const*, void const*); // 2
void JSUConvertOffsetToPtr__template55(void const*, void const*); // 2
void JSUConvertOffsetToPtr__template56(void const*, void const*); // 2
void JSUConvertOffsetToPtr__template57(void const*, void const*); // 2
void JSUConvertOffsetToPtr__template58(void const*, void const*); // 2
void JSUConvertOffsetToPtr__template59(void const*, void const*); // 2
void JSUConvertOffsetToPtr__template60(void const*, void const*); // 2
void JSUConvertOffsetToPtr__template61(void const*, void const*); // 2

extern "C" void __ct__18J3DMaterialFactoryFRC16J3DMaterialBlock(); // 1
extern "C" void __ct__18J3DMaterialFactoryFRC18J3DMaterialDLBlock(); // 1
extern "C" void countUniqueMaterials__18J3DMaterialFactoryFv(); // 1
extern "C" void countTexGens__18J3DMaterialFactoryCFi(); // 1
extern "C" void countStages__18J3DMaterialFactoryCFi(); // 1
extern "C" void create__18J3DMaterialFactoryCFP11J3DMaterialQ218J3DMaterialFactory12MaterialTypeiUl(); // 1
extern "C" void createNormalMaterial__18J3DMaterialFactoryCFP11J3DMaterialiUl(); // 1
extern "C" void createPatchedMaterial__18J3DMaterialFactoryCFP11J3DMaterialiUl(); // 1
extern "C" void modifyPatchedCurrentMtx__18J3DMaterialFactoryCFP11J3DMateriali(); // 1
extern "C" void createLockedMaterial__18J3DMaterialFactoryCFP11J3DMaterialiUl(); // 1
extern "C" void calcSize__18J3DMaterialFactoryCFP11J3DMaterialQ218J3DMaterialFactory12MaterialTypeiUl(); // 1
extern "C" void calcSizeNormalMaterial__18J3DMaterialFactoryCFP11J3DMaterialiUl(); // 1
extern "C" void calcSizePatchedMaterial__18J3DMaterialFactoryCFP11J3DMaterialiUl(); // 1
extern "C" void calcSizeLockedMaterial__18J3DMaterialFactoryCFP11J3DMaterialiUl(); // 1
extern "C" void newMatColor__18J3DMaterialFactoryCFii(); // 1
extern "C" void newColorChanNum__18J3DMaterialFactoryCFi(); // 1
extern "C" void newColorChan__18J3DMaterialFactoryCFii(); // 1
extern "C" void newAmbColor__18J3DMaterialFactoryCFii(); // 1
extern "C" void newTexGenNum__18J3DMaterialFactoryCFi(); // 1
extern "C" void newTexCoord__18J3DMaterialFactoryCFii(); // 1
extern "C" void newTexMtx__18J3DMaterialFactoryCFii(); // 1
extern "C" void newCullMode__18J3DMaterialFactoryCFi(); // 1
extern "C" void newTexNo__18J3DMaterialFactoryCFii(); // 1
extern "C" void newTevOrder__18J3DMaterialFactoryCFii(); // 1
extern "C" void newTevColor__18J3DMaterialFactoryCFii(); // 1
extern "C" void newTevKColor__18J3DMaterialFactoryCFii(); // 1
extern "C" void newTevStageNum__18J3DMaterialFactoryCFi(); // 1
extern "C" void newTevStage__18J3DMaterialFactoryCFii(); // 1
extern "C" void newTevSwapModeTable__18J3DMaterialFactoryCFii(); // 1
extern "C" void newIndTexStageNum__18J3DMaterialFactoryCFi(); // 1
extern "C" void newIndTexOrder__18J3DMaterialFactoryCFii(); // 1
extern "C" void newIndTexMtx__18J3DMaterialFactoryCFii(); // 1
extern "C" void newIndTevStage__18J3DMaterialFactoryCFii(); // 1
extern "C" void newIndTexCoordScale__18J3DMaterialFactoryCFii(); // 1
extern "C" void newFog__18J3DMaterialFactoryCFi(); // 1
extern "C" void newAlphaComp__18J3DMaterialFactoryCFi(); // 1
extern "C" void newBlend__18J3DMaterialFactoryCFi(); // 1
extern "C" void newZMode__18J3DMaterialFactoryCFi(); // 1
extern "C" void newZCompLoc__18J3DMaterialFactoryCFi(); // 1
extern "C" void newDither__18J3DMaterialFactoryCFi(); // 1
extern "C" void newNBTScale__18J3DMaterialFactoryCFi(); // 1
extern "C" void load__14J3DPEBlockNullFv(); // 1
extern "C" void getType__14J3DPEBlockNullFv(); // 1
extern "C" void __dt__14J3DPEBlockNullFv(); // 1
extern "C" void reset__15J3DTevBlockNullFP11J3DTevBlock(); // 1
extern "C" void ptrToIndex__15J3DTevBlockNullFv(); // 1
extern "C" void indexToPtr__15J3DTevBlockNullFv(); // 1
extern "C" void getType__15J3DTevBlockNullFv(); // 1
extern "C" void __dt__15J3DTevBlockNullFv(); // 1
extern "C" void calc__18J3DTexGenBlockNullFPA4_Cf(); // 1
extern "C" void calcWithoutViewMtx__18J3DTexGenBlockNullFPA4_Cf(); // 1
extern "C" void calcPostTexMtx__18J3DTexGenBlockNullFPA4_Cf(); // 1
extern "C" void calcPostTexMtxWithoutViewMtx__18J3DTexGenBlockNullFPA4_Cf(); // 1
extern "C" void load__18J3DTexGenBlockNullFv(); // 1
extern "C" void patch__18J3DTexGenBlockNullFv(); // 1
extern "C" void diff__18J3DTexGenBlockNullFUl(); // 1
extern "C" void diffTexMtx__18J3DTexGenBlockNullFv(); // 1
extern "C" void diffTexGen__18J3DTexGenBlockNullFv(); // 1
extern "C" void getType__18J3DTexGenBlockNullFv(); // 1
extern "C" void __dt__18J3DTexGenBlockNullFv(); // 1
extern "C" void getType__17J3DColorBlockNullFv(); // 1
extern "C" void __dt__17J3DColorBlockNullFv(); // 1
extern "C" void __dt__11J3DMaterialFv(); // 1
extern "C" void func_80332BDC(); // 1
extern "C" void func_80332BF4(); // 1
extern "C" void func_80332C0C(); // 1
extern "C" void func_80332C24(); // 1
extern "C" void func_80332C3C(); // 1
extern "C" void func_80332C54(); // 1
extern "C" void func_80332C6C(); // 1
extern "C" void func_80332C84(); // 1
extern "C" void func_80332C9C(); // 1
extern "C" void func_80332CB4(); // 1
extern "C" void func_80332CCC(); // 1
extern "C" void func_80332CE4(); // 1
extern "C" void func_80332CFC(); // 1
extern "C" void func_80332D14(); // 1
extern "C" void func_80332D2C(); // 1
extern "C" void func_80332D44(); // 1
extern "C" void func_80332D5C(); // 1
extern "C" void func_80332D74(); // 1
extern "C" void func_80332D8C(); // 1
SECTION_DATA extern void* const __vt__14J3DPEBlockNull[31];
SECTION_DATA extern void* const __vt__15J3DTevBlockNull[55];
SECTION_DATA extern void* const __vt__18J3DTexGenBlockNull[27];
SECTION_DATA extern void* const __vt__17J3DColorBlockNull[36 + 1 /* padding */];
SECTION_SDATA2 extern u32 lit_1691;
SECTION_SDATA2 extern u32 J3DMaterialFactory__lit_1798;
SECTION_SDATA2 extern u32 lit_1915[1 + 1 /* padding */];
SECTION_SBSS2 extern u8 lit_1897[4];
SECTION_SBSS2 extern u8 data_80456BBC[4];

// 
// External References:
// 

void* operator new(u32); // 2
void operator delete(void*); // 2
void JSUConvertOffsetToPtr__template19(void const*, void const*); // 2
void JSUConvertOffsetToPtr__template24(void const*, void const*); // 2
void JSUConvertOffsetToPtr__template25(void const*, void const*); // 2
void JSUConvertOffsetToPtr__template26(void const*, void const*); // 2
void JSUConvertOffsetToPtr__template28(void const*, void const*); // 2
extern "C" void __construct_array(); // 1
extern "C" void _savegpr_18(); // 1
extern "C" void _savegpr_19(); // 1
extern "C" void _savegpr_24(); // 1
extern "C" void _savegpr_26(); // 1
extern "C" void _savegpr_28(); // 1
extern "C" void _savegpr_29(); // 1
extern "C" void _restgpr_18(); // 1
extern "C" void _restgpr_19(); // 1
extern "C" void _restgpr_24(); // 1
extern "C" void _restgpr_26(); // 1
extern "C" void _restgpr_28(); // 1
extern "C" void _restgpr_29(); // 1

extern "C" void patchTexNoAndTexCoordScale__11J3DTevBlockFv(); // 1
extern "C" void patch__10J3DPEBlockFv(); // 1
extern "C" void patchLight__13J3DColorBlockFv(); // 1
extern "C" void patch__11J3DTevBlockFv(); // 1
extern "C" bool getZCompLoc__10J3DPEBlockCFv(); // 1
extern "C" bool getZMode__10J3DPEBlockFv(); // 1
extern "C" bool getBlend__10J3DPEBlockFv(); // 1
extern "C" bool getAlphaComp__10J3DPEBlockFv(); // 1
extern "C" bool getFog__10J3DPEBlockFv(); // 1
extern "C" bool getIndTevStage__11J3DTevBlockFUl(); // 1
extern "C" bool getTevStage__11J3DTevBlockFUl(); // 1
extern "C" void getTexNo__11J3DTevBlockCFUl(); // 1
extern "C" bool getTevSwapModeTable__11J3DTevBlockFUl(); // 1
extern "C" bool getTevKAlphaSel__11J3DTevBlockFUl(); // 1
extern "C" bool getTevKColorSel__11J3DTevBlockFUl(); // 1
extern "C" bool getTevOrder__11J3DTevBlockFUl(); // 1
extern "C" bool getTevKColor__11J3DTevBlockFUl(); // 1
extern "C" bool getTevColor__11J3DTevBlockFUl(); // 1
extern "C" bool getTevStageNum__11J3DTevBlockCFv(); // 1
extern "C" bool getTexMtx__14J3DTexGenBlockFUl(); // 1
extern "C" bool getTexCoord__14J3DTexGenBlockFUl(); // 1
extern "C" bool getTexGenNum__14J3DTexGenBlockCFv(); // 1
extern "C" bool getAmbColor__13J3DColorBlockFUl(); // 1
extern "C" bool getColorChan__13J3DColorBlockFUl(); // 1
extern "C" bool getMatColor__13J3DColorBlockFUl(); // 1
extern "C" bool getColorChanNum__13J3DColorBlockCFv(); // 1
extern "C" void setZCompLoc__10J3DPEBlockFUc(); // 1
extern "C" void setZMode__10J3DPEBlockF8J3DZMode(); // 1
extern "C" void setBlend__10J3DPEBlockFRC8J3DBlend(); // 1
extern "C" void setAlphaComp__10J3DPEBlockFRC12J3DAlphaComp(); // 1
extern "C" void setIndTevStage__11J3DTevBlockFUl14J3DIndTevStage(); // 1
extern "C" void setTevStage__11J3DTevBlockFUl11J3DTevStage(); // 1
extern "C" void setTexNo__11J3DTevBlockFUlUs(); // 1
extern "C" void setTevSwapModeTable__11J3DTevBlockFUl19J3DTevSwapModeTable(); // 1
extern "C" void setTevKAlphaSel__11J3DTevBlockFUlUc(); // 1
extern "C" void setTevKColorSel__11J3DTevBlockFUlUc(); // 1
extern "C" void setTevOrder__11J3DTevBlockFUl11J3DTevOrder(); // 1
extern "C" void setTevKColor__11J3DTevBlockFUl10J3DGXColor(); // 1
extern "C" void setTevColor__11J3DTevBlockFUl13J3DGXColorS10(); // 1
extern "C" void setTevStageNum__11J3DTevBlockFUc(); // 1
extern "C" void setTexCoord__14J3DTexGenBlockFUlPC11J3DTexCoord(); // 1
extern "C" void setTexGenNum__14J3DTexGenBlockFUl(); // 1
extern "C" void setAmbColor__13J3DColorBlockFUl10J3DGXColor(); // 1
extern "C" void setColorChan__13J3DColorBlockFUlRC12J3DColorChan(); // 1
extern "C" void setMatColor__13J3DColorBlockFUl10J3DGXColor(); // 1
extern "C" void setColorChanNum__13J3DColorBlockFUc(); // 1
extern "C" void __ct__11J3DTevOrderFv(); // 1
extern "C" void __ct__14J3DIndTevStageFv(); // 1
extern "C" void __ct__11J3DTevStageFv(); // 1
extern "C" void __ct__13J3DGXColorS10Fv(); // 1
extern "C" void __ct__11J3DTexCoordFv(); // 1
extern "C" void __ct__10J3DGXColorFv(); // 1
extern "C" void __ct__11J3DTevStageFRC15J3DTevStageInfo(); // 1
extern "C" void setTexMtx__14J3DTexGenBlockFUlP9J3DTexMtx(); // 1
extern "C" void setTevKColor__11J3DTevBlockFUlPC10J3DGXColor(); // 1
extern "C" void setTevColor__11J3DTevBlockFUlPC13J3DGXColorS10(); // 1
extern "C" void setLight__13J3DColorBlockFUlP11J3DLightObj(); // 1
extern "C" void setAmbColor__13J3DColorBlockFUlPC10J3DGXColor(); // 1
extern "C" void* __nw__FUl(); // 1
extern "C" void __dl__FPv(); // 1
extern "C" void func_802F41E8(); // 1
extern "C" void func_802F4260(); // 1
extern "C" void func_802F4278(); // 1
extern "C" void func_802F4290(); // 1
extern "C" void func_802F42C0(); // 1
extern "C" void setSingleDisplayList__17J3DDisplayListObjFPvUl(); // 1
extern "C" void createColorBlock__11J3DMaterialFUl(); // 1
extern "C" void createTexGenBlock__11J3DMaterialFUl(); // 1
extern "C" void createTevBlock__11J3DMaterialFi(); // 1
extern "C" void createIndBlock__11J3DMaterialFi(); // 1
extern "C" void createPEBlock__11J3DMaterialFUlUl(); // 1
extern "C" void calcSizeColorBlock__11J3DMaterialFUl(); // 1
extern "C" void calcSizeTexGenBlock__11J3DMaterialFUl(); // 1
extern "C" void calcSizeTevBlock__11J3DMaterialFi(); // 1
extern "C" void calcSizeIndBlock__11J3DMaterialFi(); // 1
extern "C" void calcSizePEBlock__11J3DMaterialFUlUl(); // 1
extern "C" void initialize__11J3DMaterialFv(); // 1
extern "C" void initialize__18J3DPatchedMaterialFv(); // 1
extern "C" void initialize__17J3DLockedMaterialFv(); // 1
extern "C" bool countDLSize__14J3DTexGenBlockFv(); // 1
extern "C" bool countDLSize__13J3DColorBlockFv(); // 1
extern "C" bool countDLSize__11J3DTevBlockFv(); // 1
extern "C" bool countDLSize__10J3DPEBlockFv(); // 1
extern "C" void load__13J3DColorBlockFv(); // 1
extern "C" s32 getCullMode__13J3DColorBlockCFv(); // 1
extern "C" void load__11J3DTevBlockFv(); // 1
extern "C" bool getNBTScale__14J3DTexGenBlockFv(); // 1
extern "C" void patch__13J3DColorBlockFv(); // 1
extern "C" void diff__13J3DColorBlockFUl(); // 1
extern "C" void diff__10J3DPEBlockFUl(); // 1
extern "C" void reset__10J3DPEBlockFP10J3DPEBlock(); // 1
extern "C" void reset__14J3DTexGenBlockFP14J3DTexGenBlock(); // 1
extern "C" void reset__13J3DColorBlockFP13J3DColorBlock(); // 1
extern "C" void diffFog__10J3DPEBlockFv(); // 1
extern "C" void diffBlend__10J3DPEBlockFv(); // 1
extern "C" void setFog__10J3DPEBlockFP6J3DFog(); // 1
extern "C" void setFog__10J3DPEBlockF6J3DFog(); // 1
extern "C" void setAlphaComp__10J3DPEBlockFPC12J3DAlphaComp(); // 1
extern "C" void setBlend__10J3DPEBlockFPC8J3DBlend(); // 1
extern "C" void setZMode__10J3DPEBlockFPC8J3DZMode(); // 1
extern "C" void setZCompLoc__10J3DPEBlockFPCUc(); // 1
extern "C" void setDither__10J3DPEBlockFUc(); // 1
extern "C" void setDither__10J3DPEBlockFPCUc(); // 1
extern "C" bool getDither__10J3DPEBlockCFv(); // 1
extern "C" bool getFogOffset__10J3DPEBlockCFv(); // 1
extern "C" void setFogOffset__10J3DPEBlockFUl(); // 1
extern "C" void setTexGenNum__14J3DTexGenBlockFPCUl(); // 1
extern "C" void setNBTScale__14J3DTexGenBlockF11J3DNBTScale(); // 1
extern "C" void setNBTScale__14J3DTexGenBlockFPC11J3DNBTScale(); // 1
extern "C" bool getTexMtxOffset__14J3DTexGenBlockCFv(); // 1
extern "C" void setTexMtxOffset__14J3DTexGenBlockFUl(); // 1
extern "C" void patchMatColor__13J3DColorBlockFv(); // 1
extern "C" void diffAmbColor__13J3DColorBlockFv(); // 1
extern "C" void diffMatColor__13J3DColorBlockFv(); // 1
extern "C" void diffColorChan__13J3DColorBlockFv(); // 1
extern "C" void diffLightObj__13J3DColorBlockFUl(); // 1
extern "C" void setMatColor__13J3DColorBlockFUlPC10J3DGXColor(); // 1
extern "C" void setColorChanNum__13J3DColorBlockFPCUc(); // 1
extern "C" void setColorChan__13J3DColorBlockFUlPC12J3DColorChan(); // 1
extern "C" bool getLight__13J3DColorBlockFUl(); // 1
extern "C" void setCullMode__13J3DColorBlockFUc(); // 1
extern "C" void setCullMode__13J3DColorBlockFPCUc(); // 1
extern "C" bool getMatColorOffset__13J3DColorBlockCFv(); // 1
extern "C" bool getColorChanOffset__13J3DColorBlockCFv(); // 1
extern "C" void setMatColorOffset__13J3DColorBlockFUl(); // 1
extern "C" void setColorChanOffset__13J3DColorBlockFUl(); // 1
extern "C" void initialize__21J3DTexGenBlockPatchedFv(); // 1
extern "C" void initialize__15J3DTevBlockNullFv(); // 1
extern "C" void initialize__18J3DTevBlockPatchedFv(); // 1
extern "C" void diff__11J3DTevBlockFUl(); // 1
extern "C" void indexToPtr_private__11J3DTevBlockFUl(); // 1
extern "C" void diffTevReg__11J3DTevBlockFv(); // 1
extern "C" void diffTevStageIndirect__11J3DTevBlockFv(); // 1
extern "C" void diffTevStage__11J3DTevBlockFv(); // 1
extern "C" void diffTexCoordScale__11J3DTevBlockFv(); // 1
extern "C" void diffTexNo__11J3DTevBlockFv(); // 1
extern "C" void setTexNoOffset__11J3DTevBlockFUl(); // 1
extern "C" void setTevKColorSel__11J3DTevBlockFUlPCUc(); // 1
extern "C" void setTevKAlphaSel__11J3DTevBlockFUlPCUc(); // 1
extern "C" void setTevSwapModeInfo__11J3DTevBlockFUl18J3DTevSwapModeInfo(); // 1
extern "C" void setTevSwapModeInfo__11J3DTevBlockFUlPC18J3DTevSwapModeInfo(); // 1
extern "C" void setTevSwapModeTable__11J3DTevBlockFUlPC19J3DTevSwapModeTable(); // 1
extern "C" bool getTevRegOffset__11J3DTevBlockCFv(); // 1
extern "C" void setTevRegOffset__11J3DTevBlockFUl(); // 1
extern "C" void patchTexNo__11J3DTevBlockFv(); // 1
extern "C" void patchTevReg__11J3DTevBlockFv(); // 1
extern "C" void setTexNo__11J3DTevBlockFUlPCUs(); // 1
extern "C" void setTevOrder__11J3DTevBlockFUlPC11J3DTevOrder(); // 1
extern "C" void setTevStageNum__11J3DTevBlockFPCUc(); // 1
extern "C" void setTevStage__11J3DTevBlockFUlPC11J3DTevStage(); // 1
extern "C" void setIndTevStage__11J3DTevBlockFUlPC14J3DIndTevStage(); // 1
extern "C" bool getTexNoOffset__11J3DTevBlockCFv(); // 1
extern "C" void __as__13J3DTexMtxInfoFRC13J3DTexMtxInfo(); // 1
extern "C" void __as__16J3DIndTexMtxInfoFRC16J3DIndTexMtxInfo(); // 1
extern "C" void __as__10J3DFogInfoFRC10J3DFogInfo(); // 1
extern "C" void __construct_array(); // 1
extern "C" void _savegpr_18(); // 1
extern "C" void _savegpr_19(); // 1
extern "C" void _savegpr_24(); // 1
extern "C" void _savegpr_26(); // 1
extern "C" void _savegpr_28(); // 1
extern "C" void _savegpr_29(); // 1
extern "C" void _restgpr_18(); // 1
extern "C" void _restgpr_19(); // 1
extern "C" void _restgpr_24(); // 1
extern "C" void _restgpr_26(); // 1
extern "C" void _restgpr_28(); // 1
extern "C" void _restgpr_29(); // 1
SECTION_RODATA extern const u8 j3dDefaultTexCoordInfo[32];
SECTION_RODATA extern const u8 j3dDefaultIndTexMtxInfo[28];
SECTION_RODATA extern const u8 j3dDefaultIndTevStageInfo[12];
SECTION_RODATA extern const u8 j3dDefaultFogInfo[44];
SECTION_RODATA extern const u8 j3dDefaultNBTScaleInfo[16];
SECTION_DATA extern void* const __vt__17J3DLockedMaterial[12];
SECTION_DATA extern void* const __vt__18J3DPatchedMaterial[12];
SECTION_DATA extern void* const __vt__11J3DMaterial[12];
SECTION_DATA extern void* const __vt__10J3DPEBlock[31];
SECTION_DATA extern void* const __vt__15J3DIndBlockNull[19];
SECTION_DATA extern void* const __vt__11J3DIndBlock[19];
SECTION_DATA extern void* const __vt__14J3DTexGenBlock[27];
SECTION_DATA extern void* const __vt__13J3DColorBlock[36];
SECTION_DATA extern void* const __vt__18J3DTevBlockPatched[55];
SECTION_DATA extern void* const __vt__21J3DTexGenBlockPatched[27];
SECTION_DATA extern void* const __vt__11J3DTevBlock[55];
SECTION_SDATA2 extern u32 j3dDefaultTevOrderInfoNull;
SECTION_SDATA2 extern u32 j3dDefaultIndTexOrderNull;
SECTION_SDATA2 extern u8 j3dDefaultIndTexCoordScaleInfo[4];
SECTION_SDATA2 extern u32 j3dDefaultTevSwapModeTable;
SECTION_SDATA2 extern u32 j3dDefaultBlendInfo;
SECTION_SDATA2 extern u8 j3dDefaultColorChanInfo[8];
SECTION_SDATA2 extern u16 j3dDefaultZModeID[1 + 1 /* padding */];

// 
// Declarations:
// 

/* 8032FFEC-80330234 0248+00 rc=0 efc=0 .text      __ct__18J3DMaterialFactoryFRC16J3DMaterialBlock              */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm J3DMaterialFactory::J3DMaterialFactory(J3DMaterialBlock const& field_0) {
	nofralloc
#include "asm/JSystem/J3DGraphLoader/J3DMaterialFactory/__ct__18J3DMaterialFactoryFRC16J3DMaterialBlock.s"
}
#pragma pop


/* 80330234-803302BC 0088+00 rc=0 efc=0 .text      __ct__18J3DMaterialFactoryFRC18J3DMaterialDLBlock            */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm J3DMaterialFactory::J3DMaterialFactory(J3DMaterialDLBlock const& field_0) {
	nofralloc
#include "asm/JSystem/J3DGraphLoader/J3DMaterialFactory/__ct__18J3DMaterialFactoryFRC18J3DMaterialDLBlock.s"
}
#pragma pop


/* 803302BC-80330304 0048+00 rc=0 efc=0 .text      countUniqueMaterials__18J3DMaterialFactoryFv                 */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void J3DMaterialFactory::countUniqueMaterials() {
	nofralloc
#include "asm/JSystem/J3DGraphLoader/J3DMaterialFactory/countUniqueMaterials__18J3DMaterialFactoryFv.s"
}
#pragma pop


/* 80330304-8033033C 0038+00 rc=0 efc=0 .text      countTexGens__18J3DMaterialFactoryCFi                        */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void J3DMaterialFactory::countTexGens(int field_0) const {
	nofralloc
#include "asm/JSystem/J3DGraphLoader/J3DMaterialFactory/countTexGens__18J3DMaterialFactoryCFi.s"
}
#pragma pop


/* 8033033C-803303C4 0088+00 rc=0 efc=0 .text      countStages__18J3DMaterialFactoryCFi                         */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void J3DMaterialFactory::countStages(int field_0) const {
	nofralloc
#include "asm/JSystem/J3DGraphLoader/J3DMaterialFactory/countStages__18J3DMaterialFactoryCFi.s"
}
#pragma pop


/* 803303C4-80330440 007C+00 rc=0 efc=0 .text      create__18J3DMaterialFactoryCFP11J3DMaterialQ218J3DMaterialFactory12MaterialTypeiUl */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void J3DMaterialFactory::create(J3DMaterial* field_0, J3DMaterialFactory::MaterialType field_1, int field_2, u32 field_3) const {
	nofralloc
#include "asm/JSystem/J3DGraphLoader/J3DMaterialFactory/func_803303C4.s"
}
#pragma pop


/* 80330440-80330D84 0944+00 rc=0 efc=0 .text      createNormalMaterial__18J3DMaterialFactoryCFP11J3DMaterialiUl */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void J3DMaterialFactory::createNormalMaterial(J3DMaterial* field_0, int field_1, u32 field_2) const {
	nofralloc
#include "asm/JSystem/J3DGraphLoader/J3DMaterialFactory/createNormalMaterial__18J3DMaterialFactoryCFP11J3DMaterialiUl.s"
}
#pragma pop


/* 80330D84-8033168C 0908+00 rc=0 efc=0 .text      createPatchedMaterial__18J3DMaterialFactoryCFP11J3DMaterialiUl */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void J3DMaterialFactory::createPatchedMaterial(J3DMaterial* field_0, int field_1, u32 field_2) const {
	nofralloc
#include "asm/JSystem/J3DGraphLoader/J3DMaterialFactory/createPatchedMaterial__18J3DMaterialFactoryCFP11J3DMaterialiUl.s"
}
#pragma pop


/* 8033168C-803317D4 0148+00 rc=0 efc=0 .text      modifyPatchedCurrentMtx__18J3DMaterialFactoryCFP11J3DMateriali */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void J3DMaterialFactory::modifyPatchedCurrentMtx(J3DMaterial* field_0, int field_1) const {
	nofralloc
#include "asm/JSystem/J3DGraphLoader/J3DMaterialFactory/modifyPatchedCurrentMtx__18J3DMaterialFactoryCFP11J3DMateriali.s"
}
#pragma pop


/* ############################################################################################## */
/* 803CEE90-803CEF0C 007C+00 rc=0 efc=0 .data      __vt__14J3DPEBlockNull                                       */
void* const __vt__14J3DPEBlockNull[31] = {
	(void*)NULL /* RTTI */,
	(void*)NULL,
	(void*)reset__10J3DPEBlockFP10J3DPEBlock,
	(void*)load__14J3DPEBlockNullFv,
	(void*)patch__10J3DPEBlockFv,
	(void*)diff__10J3DPEBlockFUl,
	(void*)diffFog__10J3DPEBlockFv,
	(void*)diffBlend__10J3DPEBlockFv,
	(void*)countDLSize__10J3DPEBlockFv,
	(void*)getType__14J3DPEBlockNullFv,
	(void*)setFog__10J3DPEBlockF6J3DFog,
	(void*)setFog__10J3DPEBlockFP6J3DFog,
	(void*)getFog__10J3DPEBlockFv,
	(void*)setAlphaComp__10J3DPEBlockFPC12J3DAlphaComp,
	(void*)setAlphaComp__10J3DPEBlockFRC12J3DAlphaComp,
	(void*)getAlphaComp__10J3DPEBlockFv,
	(void*)setBlend__10J3DPEBlockFPC8J3DBlend,
	(void*)setBlend__10J3DPEBlockFRC8J3DBlend,
	(void*)getBlend__10J3DPEBlockFv,
	(void*)setZMode__10J3DPEBlockFPC8J3DZMode,
	(void*)setZMode__10J3DPEBlockF8J3DZMode,
	(void*)getZMode__10J3DPEBlockFv,
	(void*)setZCompLoc__10J3DPEBlockFPCUc,
	(void*)setZCompLoc__10J3DPEBlockFUc,
	(void*)getZCompLoc__10J3DPEBlockCFv,
	(void*)setDither__10J3DPEBlockFPCUc,
	(void*)setDither__10J3DPEBlockFUc,
	(void*)getDither__10J3DPEBlockCFv,
	(void*)getFogOffset__10J3DPEBlockCFv,
	(void*)setFogOffset__10J3DPEBlockFUl,
	(void*)__dt__14J3DPEBlockNullFv,
};

/* 803CEF0C-803CEFE8 00DC+00 rc=0 efc=0 .data      __vt__15J3DTevBlockNull                                      */
void* const __vt__15J3DTevBlockNull[55] = {
	(void*)NULL /* RTTI */,
	(void*)NULL,
	(void*)reset__15J3DTevBlockNullFP11J3DTevBlock,
	(void*)load__11J3DTevBlockFv,
	(void*)diff__11J3DTevBlockFUl,
	(void*)diffTexNo__11J3DTevBlockFv,
	(void*)diffTevReg__11J3DTevBlockFv,
	(void*)diffTexCoordScale__11J3DTevBlockFv,
	(void*)diffTevStage__11J3DTevBlockFv,
	(void*)diffTevStageIndirect__11J3DTevBlockFv,
	(void*)patch__11J3DTevBlockFv,
	(void*)patchTexNo__11J3DTevBlockFv,
	(void*)patchTevReg__11J3DTevBlockFv,
	(void*)patchTexNoAndTexCoordScale__11J3DTevBlockFv,
	(void*)ptrToIndex__15J3DTevBlockNullFv,
	(void*)indexToPtr__15J3DTevBlockNullFv,
	(void*)getType__15J3DTevBlockNullFv,
	(void*)countDLSize__11J3DTevBlockFv,
	(void*)setTexNo__11J3DTevBlockFUlPCUs,
	(void*)setTexNo__11J3DTevBlockFUlUs,
	(void*)getTexNo__11J3DTevBlockCFUl,
	(void*)setTevOrder__11J3DTevBlockFUlPC11J3DTevOrder,
	(void*)setTevOrder__11J3DTevBlockFUl11J3DTevOrder,
	(void*)getTevOrder__11J3DTevBlockFUl,
	(void*)setTevColor__11J3DTevBlockFUlPC13J3DGXColorS10,
	(void*)setTevColor__11J3DTevBlockFUl13J3DGXColorS10,
	(void*)getTevColor__11J3DTevBlockFUl,
	(void*)setTevKColor__11J3DTevBlockFUlPC10J3DGXColor,
	(void*)setTevKColor__11J3DTevBlockFUl10J3DGXColor,
	(void*)getTevKColor__11J3DTevBlockFUl,
	(void*)setTevKColorSel__11J3DTevBlockFUlPCUc,
	(void*)setTevKColorSel__11J3DTevBlockFUlUc,
	(void*)getTevKColorSel__11J3DTevBlockFUl,
	(void*)setTevKAlphaSel__11J3DTevBlockFUlPCUc,
	(void*)setTevKAlphaSel__11J3DTevBlockFUlUc,
	(void*)getTevKAlphaSel__11J3DTevBlockFUl,
	(void*)setTevStageNum__11J3DTevBlockFPCUc,
	(void*)setTevStageNum__11J3DTevBlockFUc,
	(void*)getTevStageNum__11J3DTevBlockCFv,
	(void*)setTevStage__11J3DTevBlockFUlPC11J3DTevStage,
	(void*)setTevStage__11J3DTevBlockFUl11J3DTevStage,
	(void*)getTevStage__11J3DTevBlockFUl,
	(void*)setTevSwapModeInfo__11J3DTevBlockFUlPC18J3DTevSwapModeInfo,
	(void*)setTevSwapModeInfo__11J3DTevBlockFUl18J3DTevSwapModeInfo,
	(void*)setTevSwapModeTable__11J3DTevBlockFUlPC19J3DTevSwapModeTable,
	(void*)setTevSwapModeTable__11J3DTevBlockFUl19J3DTevSwapModeTable,
	(void*)getTevSwapModeTable__11J3DTevBlockFUl,
	(void*)setIndTevStage__11J3DTevBlockFUlPC14J3DIndTevStage,
	(void*)setIndTevStage__11J3DTevBlockFUl14J3DIndTevStage,
	(void*)getIndTevStage__11J3DTevBlockFUl,
	(void*)getTexNoOffset__11J3DTevBlockCFv,
	(void*)getTevRegOffset__11J3DTevBlockCFv,
	(void*)setTexNoOffset__11J3DTevBlockFUl,
	(void*)setTevRegOffset__11J3DTevBlockFUl,
	(void*)__dt__15J3DTevBlockNullFv,
};

/* 803CEFE8-803CF054 006C+00 rc=0 efc=0 .data      __vt__18J3DTexGenBlockNull                                   */
void* const __vt__18J3DTexGenBlockNull[27] = {
	(void*)NULL /* RTTI */,
	(void*)NULL,
	(void*)reset__14J3DTexGenBlockFP14J3DTexGenBlock,
	(void*)calc__18J3DTexGenBlockNullFPA4_Cf,
	(void*)calcWithoutViewMtx__18J3DTexGenBlockNullFPA4_Cf,
	(void*)calcPostTexMtx__18J3DTexGenBlockNullFPA4_Cf,
	(void*)calcPostTexMtxWithoutViewMtx__18J3DTexGenBlockNullFPA4_Cf,
	(void*)load__18J3DTexGenBlockNullFv,
	(void*)patch__18J3DTexGenBlockNullFv,
	(void*)diff__18J3DTexGenBlockNullFUl,
	(void*)diffTexMtx__18J3DTexGenBlockNullFv,
	(void*)diffTexGen__18J3DTexGenBlockNullFv,
	(void*)countDLSize__14J3DTexGenBlockFv,
	(void*)getType__18J3DTexGenBlockNullFv,
	(void*)setTexGenNum__14J3DTexGenBlockFPCUl,
	(void*)setTexGenNum__14J3DTexGenBlockFUl,
	(void*)getTexGenNum__14J3DTexGenBlockCFv,
	(void*)setTexCoord__14J3DTexGenBlockFUlPC11J3DTexCoord,
	(void*)getTexCoord__14J3DTexGenBlockFUl,
	(void*)setTexMtx__14J3DTexGenBlockFUlP9J3DTexMtx,
	(void*)getTexMtx__14J3DTexGenBlockFUl,
	(void*)setNBTScale__14J3DTexGenBlockFPC11J3DNBTScale,
	(void*)setNBTScale__14J3DTexGenBlockF11J3DNBTScale,
	(void*)getNBTScale__14J3DTexGenBlockFv,
	(void*)getTexMtxOffset__14J3DTexGenBlockCFv,
	(void*)setTexMtxOffset__14J3DTexGenBlockFUl,
	(void*)__dt__18J3DTexGenBlockNullFv,
};

/* 803CF054-803CF0E8 0090+04 rc=0 efc=0 .data      __vt__17J3DColorBlockNull                                    */
void* const __vt__17J3DColorBlockNull[36 + 1 /* padding */] = {
	(void*)NULL /* RTTI */,
	(void*)NULL,
	(void*)load__13J3DColorBlockFv,
	(void*)reset__13J3DColorBlockFP13J3DColorBlock,
	(void*)patch__13J3DColorBlockFv,
	(void*)patchMatColor__13J3DColorBlockFv,
	(void*)patchLight__13J3DColorBlockFv,
	(void*)diff__13J3DColorBlockFUl,
	(void*)diffAmbColor__13J3DColorBlockFv,
	(void*)diffMatColor__13J3DColorBlockFv,
	(void*)diffColorChan__13J3DColorBlockFv,
	(void*)diffLightObj__13J3DColorBlockFUl,
	(void*)countDLSize__13J3DColorBlockFv,
	(void*)getType__17J3DColorBlockNullFv,
	(void*)setMatColor__13J3DColorBlockFUlPC10J3DGXColor,
	(void*)setMatColor__13J3DColorBlockFUl10J3DGXColor,
	(void*)getMatColor__13J3DColorBlockFUl,
	(void*)setAmbColor__13J3DColorBlockFUlPC10J3DGXColor,
	(void*)setAmbColor__13J3DColorBlockFUl10J3DGXColor,
	(void*)getAmbColor__13J3DColorBlockFUl,
	(void*)setColorChanNum__13J3DColorBlockFUc,
	(void*)setColorChanNum__13J3DColorBlockFPCUc,
	(void*)getColorChanNum__13J3DColorBlockCFv,
	(void*)setColorChan__13J3DColorBlockFUlRC12J3DColorChan,
	(void*)setColorChan__13J3DColorBlockFUlPC12J3DColorChan,
	(void*)getColorChan__13J3DColorBlockFUl,
	(void*)setLight__13J3DColorBlockFUlP11J3DLightObj,
	(void*)getLight__13J3DColorBlockFUl,
	(void*)setCullMode__13J3DColorBlockFPCUc,
	(void*)setCullMode__13J3DColorBlockFUc,
	(void*)getCullMode__13J3DColorBlockCFv,
	(void*)getMatColorOffset__13J3DColorBlockCFv,
	(void*)getColorChanOffset__13J3DColorBlockCFv,
	(void*)setMatColorOffset__13J3DColorBlockFUl,
	(void*)setColorChanOffset__13J3DColorBlockFUl,
	(void*)__dt__17J3DColorBlockNullFv,
	/* padding */
	NULL,
};

/* 803317D4-80331A7C 02A8+00 rc=0 efc=0 .text      createLockedMaterial__18J3DMaterialFactoryCFP11J3DMaterialiUl */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void J3DMaterialFactory::createLockedMaterial(J3DMaterial* field_0, int field_1, u32 field_2) const {
	nofralloc
#include "asm/JSystem/J3DGraphLoader/J3DMaterialFactory/createLockedMaterial__18J3DMaterialFactoryCFP11J3DMaterialiUl.s"
}
#pragma pop


/* 80331A7C-80331AFC 0080+00 rc=0 efc=0 .text      calcSize__18J3DMaterialFactoryCFP11J3DMaterialQ218J3DMaterialFactory12MaterialTypeiUl */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void J3DMaterialFactory::calcSize(J3DMaterial* field_0, J3DMaterialFactory::MaterialType field_1, int field_2, u32 field_3) const {
	nofralloc
#include "asm/JSystem/J3DGraphLoader/J3DMaterialFactory/func_80331A7C.s"
}
#pragma pop


/* 80331AFC-80331C30 0134+00 rc=0 efc=0 .text      calcSizeNormalMaterial__18J3DMaterialFactoryCFP11J3DMaterialiUl */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void J3DMaterialFactory::calcSizeNormalMaterial(J3DMaterial* field_0, int field_1, u32 field_2) const {
	nofralloc
#include "asm/JSystem/J3DGraphLoader/J3DMaterialFactory/calcSizeNormalMaterial__18J3DMaterialFactoryCFP11J3DMaterialiUl.s"
}
#pragma pop


/* 80331C30-80331D00 00D0+00 rc=0 efc=0 .text      calcSizePatchedMaterial__18J3DMaterialFactoryCFP11J3DMaterialiUl */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void J3DMaterialFactory::calcSizePatchedMaterial(J3DMaterial* field_0, int field_1, u32 field_2) const {
	nofralloc
#include "asm/JSystem/J3DGraphLoader/J3DMaterialFactory/calcSizePatchedMaterial__18J3DMaterialFactoryCFP11J3DMaterialiUl.s"
}
#pragma pop


/* 80331D00-80331D18 0018+00 rc=0 efc=0 .text      calcSizeLockedMaterial__18J3DMaterialFactoryCFP11J3DMaterialiUl */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void J3DMaterialFactory::calcSizeLockedMaterial(J3DMaterial* field_0, int field_1, u32 field_2) const {
	nofralloc
#include "asm/JSystem/J3DGraphLoader/J3DMaterialFactory/calcSizeLockedMaterial__18J3DMaterialFactoryCFP11J3DMaterialiUl.s"
}
#pragma pop


/* ############################################################################################## */
/* 804564A8-804564AC 0004+00 rc=0 efc=0 .sdata2    @1691                                                        */
u32 lit_1691 = 0xFFFFFFFF;

/* 80331D18-80331D74 005C+00 rc=0 efc=0 .text      newMatColor__18J3DMaterialFactoryCFii                        */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void J3DMaterialFactory::newMatColor(int field_0, int field_1) const {
	nofralloc
#include "asm/JSystem/J3DGraphLoader/J3DMaterialFactory/newMatColor__18J3DMaterialFactoryCFii.s"
}
#pragma pop


/* 80331D74-80331DAC 0038+00 rc=0 efc=0 .text      newColorChanNum__18J3DMaterialFactoryCFi                     */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void J3DMaterialFactory::newColorChanNum(int field_0) const {
	nofralloc
#include "asm/JSystem/J3DGraphLoader/J3DMaterialFactory/newColorChanNum__18J3DMaterialFactoryCFi.s"
}
#pragma pop


/* 80331DAC-80331F50 01A4+00 rc=0 efc=0 .text      newColorChan__18J3DMaterialFactoryCFii                       */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void J3DMaterialFactory::newColorChan(int field_0, int field_1) const {
	nofralloc
#include "asm/JSystem/J3DGraphLoader/J3DMaterialFactory/newColorChan__18J3DMaterialFactoryCFii.s"
}
#pragma pop


/* ############################################################################################## */
/* 804564AC-804564B0 0004+00 rc=0 efc=0 .sdata2    @1798                                                        */
u32 J3DMaterialFactory__lit_1798 = 0x32323232;

/* 80331F50-80331FAC 005C+00 rc=0 efc=0 .text      newAmbColor__18J3DMaterialFactoryCFii                        */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void J3DMaterialFactory::newAmbColor(int field_0, int field_1) const {
	nofralloc
#include "asm/JSystem/J3DGraphLoader/J3DMaterialFactory/newAmbColor__18J3DMaterialFactoryCFii.s"
}
#pragma pop


/* 80331FAC-80331FE4 0038+00 rc=0 efc=0 .text      newTexGenNum__18J3DMaterialFactoryCFi                        */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void J3DMaterialFactory::newTexGenNum(int field_0) const {
	nofralloc
#include "asm/JSystem/J3DGraphLoader/J3DMaterialFactory/newTexGenNum__18J3DMaterialFactoryCFi.s"
}
#pragma pop


/* 80331FE4-80332044 0060+00 rc=0 efc=0 .text      newTexCoord__18J3DMaterialFactoryCFii                        */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void J3DMaterialFactory::newTexCoord(int field_0, int field_1) const {
	nofralloc
#include "asm/JSystem/J3DGraphLoader/J3DMaterialFactory/newTexCoord__18J3DMaterialFactoryCFii.s"
}
#pragma pop


/* 80332044-803320CC 0088+00 rc=0 efc=0 .text      newTexMtx__18J3DMaterialFactoryCFii                          */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void J3DMaterialFactory::newTexMtx(int field_0, int field_1) const {
	nofralloc
#include "asm/JSystem/J3DGraphLoader/J3DMaterialFactory/newTexMtx__18J3DMaterialFactoryCFii.s"
}
#pragma pop


/* 803320CC-8033210C 0040+00 rc=0 efc=0 .text      newCullMode__18J3DMaterialFactoryCFi                         */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void J3DMaterialFactory::newCullMode(int field_0) const {
	nofralloc
#include "asm/JSystem/J3DGraphLoader/J3DMaterialFactory/newCullMode__18J3DMaterialFactoryCFi.s"
}
#pragma pop


/* 8033210C-80332154 0048+00 rc=0 efc=0 .text      newTexNo__18J3DMaterialFactoryCFii                           */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void J3DMaterialFactory::newTexNo(int field_0, int field_1) const {
	nofralloc
#include "asm/JSystem/J3DGraphLoader/J3DMaterialFactory/newTexNo__18J3DMaterialFactoryCFii.s"
}
#pragma pop


/* 80332154-803321A0 004C+00 rc=0 efc=0 .text      newTevOrder__18J3DMaterialFactoryCFii                        */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void J3DMaterialFactory::newTevOrder(int field_0, int field_1) const {
	nofralloc
#include "asm/JSystem/J3DGraphLoader/J3DMaterialFactory/newTevOrder__18J3DMaterialFactoryCFii.s"
}
#pragma pop


/* ############################################################################################## */
/* 80456BB8-80456BBC 0004+00 rc=0 efc=0 .sbss2     @1897                                                        */
u8 lit_1897[4];

/* 80456BBC-80456BC0 0004+00 rc=0 efc=0 .sbss2     None                                                         */
u8 data_80456BBC[4];

/* 803321A0-80332210 0070+00 rc=0 efc=0 .text      newTevColor__18J3DMaterialFactoryCFii                        */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void J3DMaterialFactory::newTevColor(int field_0, int field_1) const {
	nofralloc
#include "asm/JSystem/J3DGraphLoader/J3DMaterialFactory/newTevColor__18J3DMaterialFactoryCFii.s"
}
#pragma pop


/* ############################################################################################## */
/* 804564B0-804564B8 0004+04 rc=0 efc=0 .sdata2    @1915                                                        */
u32 lit_1915[1 + 1 /* padding */] = {
	0xFFFFFFFF,
	/* padding */
	0x00000000,
};

/* 80332210-8033226C 005C+00 rc=0 efc=0 .text      newTevKColor__18J3DMaterialFactoryCFii                       */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void J3DMaterialFactory::newTevKColor(int field_0, int field_1) const {
	nofralloc
#include "asm/JSystem/J3DGraphLoader/J3DMaterialFactory/newTevKColor__18J3DMaterialFactoryCFii.s"
}
#pragma pop


/* 8033226C-803322A4 0038+00 rc=0 efc=0 .text      newTevStageNum__18J3DMaterialFactoryCFi                      */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void J3DMaterialFactory::newTevStageNum(int field_0) const {
	nofralloc
#include "asm/JSystem/J3DGraphLoader/J3DMaterialFactory/newTevStageNum__18J3DMaterialFactoryCFi.s"
}
#pragma pop


/* 803322A4-80332304 0060+00 rc=0 efc=0 .text      newTevStage__18J3DMaterialFactoryCFii                        */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void J3DMaterialFactory::newTevStage(int field_0, int field_1) const {
	nofralloc
#include "asm/JSystem/J3DGraphLoader/J3DMaterialFactory/newTevStage__18J3DMaterialFactoryCFii.s"
}
#pragma pop


/* 80332304-803323A0 009C+00 rc=0 efc=0 .text      newTevSwapModeTable__18J3DMaterialFactoryCFii                */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void J3DMaterialFactory::newTevSwapModeTable(int field_0, int field_1) const {
	nofralloc
#include "asm/JSystem/J3DGraphLoader/J3DMaterialFactory/newTevSwapModeTable__18J3DMaterialFactoryCFii.s"
}
#pragma pop


/* 803323A0-803323C8 0028+00 rc=0 efc=0 .text      newIndTexStageNum__18J3DMaterialFactoryCFi                   */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void J3DMaterialFactory::newIndTexStageNum(int field_0) const {
	nofralloc
#include "asm/JSystem/J3DGraphLoader/J3DMaterialFactory/newIndTexStageNum__18J3DMaterialFactoryCFi.s"
}
#pragma pop


/* 803323C8-8033240C 0044+00 rc=0 efc=0 .text      newIndTexOrder__18J3DMaterialFactoryCFii                     */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void J3DMaterialFactory::newIndTexOrder(int field_0, int field_1) const {
	nofralloc
#include "asm/JSystem/J3DGraphLoader/J3DMaterialFactory/newIndTexOrder__18J3DMaterialFactoryCFii.s"
}
#pragma pop


/* 8033240C-803324B4 00A8+00 rc=0 efc=0 .text      newIndTexMtx__18J3DMaterialFactoryCFii                       */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void J3DMaterialFactory::newIndTexMtx(int field_0, int field_1) const {
	nofralloc
#include "asm/JSystem/J3DGraphLoader/J3DMaterialFactory/newIndTexMtx__18J3DMaterialFactoryCFii.s"
}
#pragma pop


/* 803324B4-80332648 0194+00 rc=0 efc=0 .text      newIndTevStage__18J3DMaterialFactoryCFii                     */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void J3DMaterialFactory::newIndTevStage(int field_0, int field_1) const {
	nofralloc
#include "asm/JSystem/J3DGraphLoader/J3DMaterialFactory/newIndTevStage__18J3DMaterialFactoryCFii.s"
}
#pragma pop


/* 80332648-8033268C 0044+00 rc=0 efc=0 .text      newIndTexCoordScale__18J3DMaterialFactoryCFii                */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void J3DMaterialFactory::newIndTexCoordScale(int field_0, int field_1) const {
	nofralloc
#include "asm/JSystem/J3DGraphLoader/J3DMaterialFactory/newIndTexCoordScale__18J3DMaterialFactoryCFii.s"
}
#pragma pop


/* 8033268C-80332768 00DC+00 rc=0 efc=0 .text      newFog__18J3DMaterialFactoryCFi                              */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void J3DMaterialFactory::newFog(int field_0) const {
	nofralloc
#include "asm/JSystem/J3DGraphLoader/J3DMaterialFactory/newFog__18J3DMaterialFactoryCFi.s"
}
#pragma pop


/* 80332768-803327E8 0080+00 rc=0 efc=0 .text      newAlphaComp__18J3DMaterialFactoryCFi                        */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void J3DMaterialFactory::newAlphaComp(int field_0) const {
	nofralloc
#include "asm/JSystem/J3DGraphLoader/J3DMaterialFactory/newAlphaComp__18J3DMaterialFactoryCFi.s"
}
#pragma pop


/* 803327E8-8033282C 0044+00 rc=0 efc=0 .text      newBlend__18J3DMaterialFactoryCFi                            */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void J3DMaterialFactory::newBlend(int field_0) const {
	nofralloc
#include "asm/JSystem/J3DGraphLoader/J3DMaterialFactory/newBlend__18J3DMaterialFactoryCFi.s"
}
#pragma pop


/* 8033282C-8033288C 0060+00 rc=0 efc=0 .text      newZMode__18J3DMaterialFactoryCFi                            */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void J3DMaterialFactory::newZMode(int field_0) const {
	nofralloc
#include "asm/JSystem/J3DGraphLoader/J3DMaterialFactory/newZMode__18J3DMaterialFactoryCFi.s"
}
#pragma pop


/* 8033288C-803328C4 0038+00 rc=0 efc=0 .text      newZCompLoc__18J3DMaterialFactoryCFi                         */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void J3DMaterialFactory::newZCompLoc(int field_0) const {
	nofralloc
#include "asm/JSystem/J3DGraphLoader/J3DMaterialFactory/newZCompLoc__18J3DMaterialFactoryCFi.s"
}
#pragma pop


/* 803328C4-803328FC 0038+00 rc=0 efc=0 .text      newDither__18J3DMaterialFactoryCFi                           */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void J3DMaterialFactory::newDither(int field_0) const {
	nofralloc
#include "asm/JSystem/J3DGraphLoader/J3DMaterialFactory/newDither__18J3DMaterialFactoryCFi.s"
}
#pragma pop


/* 803328FC-803329A0 00A4+00 rc=0 efc=0 .text      newNBTScale__18J3DMaterialFactoryCFi                         */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void J3DMaterialFactory::newNBTScale(int field_0) const {
	nofralloc
#include "asm/JSystem/J3DGraphLoader/J3DMaterialFactory/newNBTScale__18J3DMaterialFactoryCFi.s"
}
#pragma pop


/* 803329A0-803329A4 0004+00 rc=0 efc=0 .text      load__14J3DPEBlockNullFv                                     */
void J3DPEBlockNull::load() {
	/* empty function */
}


/* 803329A4-803329B0 000C+00 rc=0 efc=0 .text      getType__14J3DPEBlockNullFv                                  */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void J3DPEBlockNull::getType() {
	nofralloc
#include "asm/JSystem/J3DGraphLoader/J3DMaterialFactory/getType__14J3DPEBlockNullFv.s"
}
#pragma pop


/* 803329B0-80332A0C 005C+00 rc=0 efc=0 .text      __dt__14J3DPEBlockNullFv                                     */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm J3DPEBlockNull::~J3DPEBlockNull() {
	nofralloc
#include "asm/JSystem/J3DGraphLoader/J3DMaterialFactory/__dt__14J3DPEBlockNullFv.s"
}
#pragma pop


/* 80332A0C-80332A10 0004+00 rc=0 efc=0 .text      reset__15J3DTevBlockNullFP11J3DTevBlock                      */
void J3DTevBlockNull::reset(J3DTevBlock* field_0) {
	/* empty function */
}


/* 80332A10-80332A14 0004+00 rc=0 efc=0 .text      ptrToIndex__15J3DTevBlockNullFv                              */
void J3DTevBlockNull::ptrToIndex() {
	/* empty function */
}


/* 80332A14-80332A38 0024+00 rc=0 efc=0 .text      indexToPtr__15J3DTevBlockNullFv                              */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void J3DTevBlockNull::indexToPtr() {
	nofralloc
#include "asm/JSystem/J3DGraphLoader/J3DMaterialFactory/indexToPtr__15J3DTevBlockNullFv.s"
}
#pragma pop


/* 80332A38-80332A44 000C+00 rc=0 efc=0 .text      getType__15J3DTevBlockNullFv                                 */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void J3DTevBlockNull::getType() {
	nofralloc
#include "asm/JSystem/J3DGraphLoader/J3DMaterialFactory/getType__15J3DTevBlockNullFv.s"
}
#pragma pop


/* 80332A44-80332AA0 005C+00 rc=0 efc=0 .text      __dt__15J3DTevBlockNullFv                                    */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm J3DTevBlockNull::~J3DTevBlockNull() {
	nofralloc
#include "asm/JSystem/J3DGraphLoader/J3DMaterialFactory/__dt__15J3DTevBlockNullFv.s"
}
#pragma pop


/* 80332AA0-80332AA4 0004+00 rc=0 efc=0 .text      calc__18J3DTexGenBlockNullFPA4_Cf                            */
void J3DTexGenBlockNull::calc(f32 const (* field_0)[4]) {
	/* empty function */
}


/* 80332AA4-80332AA8 0004+00 rc=0 efc=0 .text      calcWithoutViewMtx__18J3DTexGenBlockNullFPA4_Cf              */
void J3DTexGenBlockNull::calcWithoutViewMtx(f32 const (* field_0)[4]) {
	/* empty function */
}


/* 80332AA8-80332AAC 0004+00 rc=0 efc=0 .text      calcPostTexMtx__18J3DTexGenBlockNullFPA4_Cf                  */
void J3DTexGenBlockNull::calcPostTexMtx(f32 const (* field_0)[4]) {
	/* empty function */
}


/* 80332AAC-80332AB0 0004+00 rc=0 efc=0 .text      calcPostTexMtxWithoutViewMtx__18J3DTexGenBlockNullFPA4_Cf    */
void J3DTexGenBlockNull::calcPostTexMtxWithoutViewMtx(f32 const (* field_0)[4]) {
	/* empty function */
}


/* 80332AB0-80332AB4 0004+00 rc=0 efc=0 .text      load__18J3DTexGenBlockNullFv                                 */
void J3DTexGenBlockNull::load() {
	/* empty function */
}


/* 80332AB4-80332AB8 0004+00 rc=0 efc=0 .text      patch__18J3DTexGenBlockNullFv                                */
void J3DTexGenBlockNull::patch() {
	/* empty function */
}


/* 80332AB8-80332ABC 0004+00 rc=0 efc=0 .text      diff__18J3DTexGenBlockNullFUl                                */
void J3DTexGenBlockNull::diff(u32 field_0) {
	/* empty function */
}


/* 80332ABC-80332AC0 0004+00 rc=0 efc=0 .text      diffTexMtx__18J3DTexGenBlockNullFv                           */
void J3DTexGenBlockNull::diffTexMtx() {
	/* empty function */
}


/* 80332AC0-80332AC4 0004+00 rc=0 efc=0 .text      diffTexGen__18J3DTexGenBlockNullFv                           */
void J3DTexGenBlockNull::diffTexGen() {
	/* empty function */
}


/* 80332AC4-80332AD0 000C+00 rc=0 efc=0 .text      getType__18J3DTexGenBlockNullFv                              */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void J3DTexGenBlockNull::getType() {
	nofralloc
#include "asm/JSystem/J3DGraphLoader/J3DMaterialFactory/getType__18J3DTexGenBlockNullFv.s"
}
#pragma pop


/* 80332AD0-80332B2C 005C+00 rc=0 efc=0 .text      __dt__18J3DTexGenBlockNullFv                                 */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm J3DTexGenBlockNull::~J3DTexGenBlockNull() {
	nofralloc
#include "asm/JSystem/J3DGraphLoader/J3DMaterialFactory/__dt__18J3DTexGenBlockNullFv.s"
}
#pragma pop


/* 80332B2C-80332B38 000C+00 rc=0 efc=0 .text      getType__17J3DColorBlockNullFv                               */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void J3DColorBlockNull::getType() {
	nofralloc
#include "asm/JSystem/J3DGraphLoader/J3DMaterialFactory/getType__17J3DColorBlockNullFv.s"
}
#pragma pop


/* 80332B38-80332B94 005C+00 rc=0 efc=0 .text      __dt__17J3DColorBlockNullFv                                  */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm J3DColorBlockNull::~J3DColorBlockNull() {
	nofralloc
#include "asm/JSystem/J3DGraphLoader/J3DMaterialFactory/__dt__17J3DColorBlockNullFv.s"
}
#pragma pop


/* 80332B94-80332BDC 0048+00 rc=0 efc=0 .text      __dt__11J3DMaterialFv                                        */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm J3DMaterial::~J3DMaterial() {
	nofralloc
#include "asm/JSystem/J3DGraphLoader/J3DMaterialFactory/__dt__11J3DMaterialFv.s"
}
#pragma pop


/* 80332BDC-80332BF4 0018+00 rc=0 efc=0 .text      JSUConvertOffsetToPtr<17J3DCurrentMtxInfo>__FPCvPCv          */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void JSUConvertOffsetToPtr__template43(void const* field_0, void const* field_1) {
	nofralloc
#include "asm/JSystem/J3DGraphLoader/J3DMaterialFactory/func_80332BDC.s"
}
#pragma pop


/* 80332BF4-80332C0C 0018+00 rc=0 efc=0 .text      JSUConvertOffsetToPtr<15J3DPatchingInfo>__FPCvPCv            */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void JSUConvertOffsetToPtr__template44(void const* field_0, void const* field_1) {
	nofralloc
#include "asm/JSystem/J3DGraphLoader/J3DMaterialFactory/func_80332BF4.s"
}
#pragma pop


/* 80332C0C-80332C24 0018+00 rc=0 efc=0 .text      JSUConvertOffsetToPtr<18J3DDisplayListInit>__FPCvPCv         */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void JSUConvertOffsetToPtr__template45(void const* field_0, void const* field_1) {
	nofralloc
#include "asm/JSystem/J3DGraphLoader/J3DMaterialFactory/func_80332C0C.s"
}
#pragma pop


/* 80332C24-80332C3C 0018+00 rc=0 efc=0 .text      JSUConvertOffsetToPtr<15J3DNBTScaleInfo>__FPCvPCv            */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void JSUConvertOffsetToPtr__template46(void const* field_0, void const* field_1) {
	nofralloc
#include "asm/JSystem/J3DGraphLoader/J3DMaterialFactory/func_80332C24.s"
}
#pragma pop


/* 80332C3C-80332C54 0018+00 rc=0 efc=0 .text      JSUConvertOffsetToPtr<12J3DZModeInfo>__FPCvPCv               */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void JSUConvertOffsetToPtr__template47(void const* field_0, void const* field_1) {
	nofralloc
#include "asm/JSystem/J3DGraphLoader/J3DMaterialFactory/func_80332C3C.s"
}
#pragma pop


/* 80332C54-80332C6C 0018+00 rc=0 efc=0 .text      JSUConvertOffsetToPtr<12J3DBlendInfo>__FPCvPCv               */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void JSUConvertOffsetToPtr__template48(void const* field_0, void const* field_1) {
	nofralloc
#include "asm/JSystem/J3DGraphLoader/J3DMaterialFactory/func_80332C54.s"
}
#pragma pop


/* 80332C6C-80332C84 0018+00 rc=0 efc=0 .text      JSUConvertOffsetToPtr<16J3DAlphaCompInfo>__FPCvPCv           */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void JSUConvertOffsetToPtr__template49(void const* field_0, void const* field_1) {
	nofralloc
#include "asm/JSystem/J3DGraphLoader/J3DMaterialFactory/func_80332C6C.s"
}
#pragma pop


/* 80332C84-80332C9C 0018+00 rc=0 efc=0 .text      JSUConvertOffsetToPtr<10J3DFogInfo>__FPCvPCv                 */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void JSUConvertOffsetToPtr__template50(void const* field_0, void const* field_1) {
	nofralloc
#include "asm/JSystem/J3DGraphLoader/J3DMaterialFactory/func_80332C84.s"
}
#pragma pop


/* 80332C9C-80332CB4 0018+00 rc=0 efc=0 .text      JSUConvertOffsetToPtr<23J3DTevSwapModeTableInfo>__FPCvPCv    */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void JSUConvertOffsetToPtr__template51(void const* field_0, void const* field_1) {
	nofralloc
#include "asm/JSystem/J3DGraphLoader/J3DMaterialFactory/func_80332C9C.s"
}
#pragma pop


/* 80332CB4-80332CCC 0018+00 rc=0 efc=0 .text      JSUConvertOffsetToPtr<18J3DTevSwapModeInfo>__FPCvPCv         */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void JSUConvertOffsetToPtr__template52(void const* field_0, void const* field_1) {
	nofralloc
#include "asm/JSystem/J3DGraphLoader/J3DMaterialFactory/func_80332CB4.s"
}
#pragma pop


/* 80332CCC-80332CE4 0018+00 rc=0 efc=0 .text      JSUConvertOffsetToPtr<15J3DTevStageInfo>__FPCvPCv            */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void JSUConvertOffsetToPtr__template53(void const* field_0, void const* field_1) {
	nofralloc
#include "asm/JSystem/J3DGraphLoader/J3DMaterialFactory/func_80332CCC.s"
}
#pragma pop


/* 80332CE4-80332CFC 0018+00 rc=0 efc=0 .text      JSUConvertOffsetToPtr<15J3DTevOrderInfo>__FPCvPCv            */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void JSUConvertOffsetToPtr__template54(void const* field_0, void const* field_1) {
	nofralloc
#include "asm/JSystem/J3DGraphLoader/J3DMaterialFactory/func_80332CE4.s"
}
#pragma pop


/* 80332CFC-80332D14 0018+00 rc=0 efc=0 .text      JSUConvertOffsetToPtr<13J3DTexMtxInfo>__FPCvPCv              */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void JSUConvertOffsetToPtr__template55(void const* field_0, void const* field_1) {
	nofralloc
#include "asm/JSystem/J3DGraphLoader/J3DMaterialFactory/func_80332CFC.s"
}
#pragma pop


/* 80332D14-80332D2C 0018+00 rc=0 efc=0 .text      JSUConvertOffsetToPtr<16J3DTexCoord2Info>__FPCvPCv           */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void JSUConvertOffsetToPtr__template56(void const* field_0, void const* field_1) {
	nofralloc
#include "asm/JSystem/J3DGraphLoader/J3DMaterialFactory/func_80332D14.s"
}
#pragma pop


/* 80332D2C-80332D44 0018+00 rc=0 efc=0 .text      JSUConvertOffsetToPtr<15J3DTexCoordInfo>__FPCvPCv            */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void JSUConvertOffsetToPtr__template57(void const* field_0, void const* field_1) {
	nofralloc
#include "asm/JSystem/J3DGraphLoader/J3DMaterialFactory/func_80332D2C.s"
}
#pragma pop


/* 80332D44-80332D5C 0018+00 rc=0 efc=0 .text      JSUConvertOffsetToPtr<12J3DLightInfo>__FPCvPCv               */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void JSUConvertOffsetToPtr__template58(void const* field_0, void const* field_1) {
	nofralloc
#include "asm/JSystem/J3DGraphLoader/J3DMaterialFactory/func_80332D44.s"
}
#pragma pop


/* 80332D5C-80332D74 0018+00 rc=0 efc=0 .text      JSUConvertOffsetToPtr<16J3DColorChanInfo>__FPCvPCv           */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void JSUConvertOffsetToPtr__template59(void const* field_0, void const* field_1) {
	nofralloc
#include "asm/JSystem/J3DGraphLoader/J3DMaterialFactory/func_80332D5C.s"
}
#pragma pop


/* 80332D74-80332D8C 0018+00 rc=0 efc=0 .text      JSUConvertOffsetToPtr<14J3DIndInitData>__FPCvPCv             */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void JSUConvertOffsetToPtr__template60(void const* field_0, void const* field_1) {
	nofralloc
#include "asm/JSystem/J3DGraphLoader/J3DMaterialFactory/func_80332D74.s"
}
#pragma pop


/* 80332D8C-80332DA4 0018+00 rc=0 efc=0 .text      JSUConvertOffsetToPtr<19J3DMaterialInitData>__FPCvPCv        */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void JSUConvertOffsetToPtr__template61(void const* field_0, void const* field_1) {
	nofralloc
#include "asm/JSystem/J3DGraphLoader/J3DMaterialFactory/func_80332D8C.s"
}
#pragma pop


