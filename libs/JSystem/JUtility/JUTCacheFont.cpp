// 
// Generated By: dol2asm
// Translation Unit: JUTCacheFont
// 

#include "dolphin/types.h"

// 
// Forward References:
// 

extern "C" extern void __ct__12JUTCacheFontFPC7ResFONTUlP7JKRHeap();
extern "C" extern void __dt__12JUTCacheFontFv();
extern "C" extern void deleteMemBlocks_CacheFont__12JUTCacheFontFv();
extern "C" extern void initialize_state__12JUTCacheFontFv();
extern "C" extern void getMemorySize__12JUTCacheFontFPC7ResFONTPUsPUlPUsPUlPUsPUlPUl();
extern "C" extern void initiate__12JUTCacheFontFPC7ResFONTPvUlP7JKRHeap();
extern "C" extern void internal_initiate__12JUTCacheFontFPC7ResFONTPvUlP7JKRHeap();
extern "C" extern void allocArea__12JUTCacheFontFPvUlP7JKRHeap();
extern "C" extern void allocArray__12JUTCacheFontFP7JKRHeap();
extern "C" extern void setBlock__12JUTCacheFontFv();
extern "C" extern void determineBlankPage__12JUTCacheFontFv();
extern "C" extern void getGlyphFromAram__12JUTCacheFontFPQ212JUTCacheFont15TGlyphCacheInfoPQ212JUTCacheFont10TCachePagePiPi();
extern "C" extern void loadImage__12JUTCacheFontFi11_GXTexMapID();
extern "C" extern void loadCache_char_subroutine__12JUTCacheFontFPib();
extern "C" extern void invalidiateAllCache__12JUTCacheFontFv();
extern "C" extern void unlink__12JUTCacheFontFPQ212JUTCacheFont15TGlyphCacheInfo();
extern "C" extern void prepend__12JUTCacheFontFPQ212JUTCacheFont15TGlyphCacheInfo();
extern "C" extern void getResFont__10JUTResFontCFv();
extern "C" extern void getFontType__10JUTResFontCFv();
extern "C" extern void getLeading__10JUTResFontCFv();
extern "C" extern void getWidth__10JUTResFontCFv();
extern "C" extern void getAscent__10JUTResFontCFv();
extern "C" extern void getDescent__10JUTResFontCFv();
extern "C" extern void getHeight__10JUTResFontCFv();
SECTION_RODATA extern const u8 JUTCacheFont__stringBase0[112];
SECTION_DATA extern void*const __vt__12JUTCacheFont[20];
SECTION_SDATA2 extern u8 lit_721[4 + 4 /* padding */];

// 
// External References:
// 

SECTION_INIT extern void memcpy();
extern "C" extern void __nw__FUlP7JKRHeapi();
extern "C" extern void __nwa__FUlP7JKRHeapi();
extern "C" extern void __dl__FPv();
extern "C" extern void __dla__FPv();
extern "C" extern void mainRamToAram__7JKRAramFPUcUlUl15JKRExpandSwitchUlP7JKRHeapiPUl();
extern "C" extern void aramToMainRam__7JKRAramFUlPUcUl15JKRExpandSwitchUlP7JKRHeapiPUl();
extern "C" extern void alloc__11JKRAramHeapFUlQ211JKRAramHeap10EAllocMode();
extern "C" extern void initialize_state__7JUTFontFv();
extern "C" extern void __ct__10JUTResFontFv();
extern "C" extern void __dt__10JUTResFontFv();
extern "C" extern void deleteMemBlocks_ResFont__10JUTResFontFv();
extern "C" extern void initialize_state__10JUTResFontFv();
extern "C" extern void setGX__10JUTResFontFv();
extern "C" extern void setGX__10JUTResFontFQ28JUtility6TColorQ28JUtility6TColor();
extern "C" extern void drawChar_scale__10JUTResFontFffffib();
extern "C" extern void getWidthEntry__10JUTResFontCFiPQ27JUTFont6TWidth();
extern "C" extern void getCellWidth__10JUTResFontCFv();
extern "C" extern void getCellHeight__10JUTResFontCFv();
extern "C" extern void isLeadByte__10JUTResFontCFi();
extern "C" extern void panic_f__12JUTExceptionFPCciPCce();
extern "C" extern void JUTReportConsole();
extern "C" extern void GXInitTexObj();
extern "C" extern void GXInitTexObjLOD();
extern "C" extern void GXLoadTexObj();
extern "C" extern void __save_gpr();
extern "C" extern void _savegpr_21();
extern "C" extern void _savegpr_27();
extern "C" extern void _savegpr_28();
extern "C" extern void _savegpr_29();
extern "C" extern void __restore_gpr();
extern "C" extern void _restgpr_21();
extern "C" extern void _restgpr_27();
extern "C" extern void _restgpr_28();
extern "C" extern void _restgpr_29();
SECTION_RODATA extern const void*const saoAboutEncoding___10JUTResFont[3];
SECTION_SBSS extern u8 sAramObject__7JKRAram[4];

// 
// Declarations:
// 

/* ############################################################################################## */
/* 803CC540-803CC590 004C+04 .data      __vt__12JUTCacheFont                                         */
void* const __vt__12JUTCacheFont[20] = {
	NULL, /* RTTI */
	NULL,
	(void*)__dt__12JUTCacheFontFv,
	(void*)setGX__10JUTResFontFv,
	(void*)setGX__10JUTResFontFQ28JUtility6TColorQ28JUtility6TColor,
	(void*)drawChar_scale__10JUTResFontFffffib,
	(void*)getLeading__10JUTResFontCFv,
	(void*)getAscent__10JUTResFontCFv,
	(void*)getDescent__10JUTResFontCFv,
	(void*)getHeight__10JUTResFontCFv,
	(void*)getWidth__10JUTResFontCFv,
	(void*)getWidthEntry__10JUTResFontCFiPQ27JUTFont6TWidth,
	(void*)getCellWidth__10JUTResFontCFv,
	(void*)getCellHeight__10JUTResFontCFv,
	(void*)getFontType__10JUTResFontCFv,
	(void*)getResFont__10JUTResFontCFv,
	(void*)isLeadByte__10JUTResFontCFi,
	(void*)loadImage__12JUTCacheFontFi11_GXTexMapID,
	(void*)setBlock__12JUTCacheFontFv,
	/* padding */
	NULL,
};

/* 802DD188-802DD208 0080+00 .text      __ct__12JUTCacheFontFPC7ResFONTUlP7JKRHeap                   */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
ASM_FUNCTION(__ct__12JUTCacheFontFPC7ResFONTUlP7JKRHeap) {
	nofralloc
#include "asm/JSystem/JUtility/JUTCacheFont/__ct__12JUTCacheFontFPC7ResFONTUlP7JKRHeap.s"
}
#pragma pop


/* 802DD208-802DD29C 0094+00 .text      __dt__12JUTCacheFontFv                                       */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
ASM_FUNCTION(__dt__12JUTCacheFontFv) {
	nofralloc
#include "asm/JSystem/JUtility/JUTCacheFont/__dt__12JUTCacheFontFv.s"
}
#pragma pop


/* 802DD29C-802DD320 0084+00 .text      deleteMemBlocks_CacheFont__12JUTCacheFontFv                  */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
ASM_FUNCTION(deleteMemBlocks_CacheFont__12JUTCacheFontFv) {
	nofralloc
#include "asm/JSystem/JUtility/JUTCacheFont/deleteMemBlocks_CacheFont__12JUTCacheFontFv.s"
}
#pragma pop


/* 802DD320-802DD35C 003C+00 .text      initialize_state__12JUTCacheFontFv                           */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
ASM_FUNCTION(initialize_state__12JUTCacheFontFv) {
	nofralloc
#include "asm/JSystem/JUtility/JUTCacheFont/initialize_state__12JUTCacheFontFv.s"
}
#pragma pop


/* ############################################################################################## */
/* 8039D2F0-8039D360 0070+00 .rodata    @stringBase0                                                 */
SECTION_RODATA const u8 JUTCacheFont__stringBase0[112] = {
	0x4A, 0x55, 0x54, 0x43, 0x61, 0x63, 0x68, 0x65, 0x46, 0x6F, 0x6E, 0x74, 0x3A, 0x20, 0x55, 0x6E,
	0x6B, 0x6E, 0x6F, 0x77, 0x6E, 0x20, 0x64, 0x61, 0x74, 0x61, 0x20, 0x62, 0x6C, 0x6F, 0x63, 0x6B,
	0x0A, 0x00, 0x4A, 0x55, 0x54, 0x43, 0x61, 0x63, 0x68, 0x65, 0x46, 0x6F, 0x6E, 0x74, 0x2E, 0x63,
	0x70, 0x70, 0x00, 0x25, 0x73, 0x00, 0x74, 0x72, 0x6F, 0x75, 0x62, 0x6C, 0x65, 0x20, 0x6F, 0x63,
	0x63, 0x75, 0x72, 0x72, 0x65, 0x64, 0x20, 0x69, 0x6E, 0x20, 0x4A, 0x4B, 0x52, 0x4D, 0x61, 0x69,
	0x6E, 0x52, 0x61, 0x6D, 0x54, 0x6F, 0x41, 0x72, 0x61, 0x6D, 0x2E, 0x00, 0x55, 0x6E, 0x6B, 0x6E,
	0x6F, 0x77, 0x6E, 0x20, 0x64, 0x61, 0x74, 0x61, 0x20, 0x62, 0x6C, 0x6F, 0x63, 0x6B, 0x0A, 0x00,
};

/* 802DD35C-802DD4EC 0190+00 .text      getMemorySize__12JUTCacheFontFPC7ResFONTPUsPUlPUsPUlPUsPUlPUl */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
ASM_FUNCTION(getMemorySize__12JUTCacheFontFPC7ResFONTPUsPUlPUsPUlPUsPUlPUl) {
	nofralloc
#include "asm/JSystem/JUtility/JUTCacheFont/getMemorySize__12JUTCacheFontFPC7ResFONTPUsPUlPUsPUlPUsPUlPUl.s"
}
#pragma pop


/* 802DD4EC-802DD54C 0060+00 .text      initiate__12JUTCacheFontFPC7ResFONTPvUlP7JKRHeap             */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
ASM_FUNCTION(initiate__12JUTCacheFontFPC7ResFONTPvUlP7JKRHeap) {
	nofralloc
#include "asm/JSystem/JUtility/JUTCacheFont/initiate__12JUTCacheFontFPC7ResFONTPvUlP7JKRHeap.s"
}
#pragma pop


/* 802DD54C-802DD650 0104+00 .text      internal_initiate__12JUTCacheFontFPC7ResFONTPvUlP7JKRHeap    */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
ASM_FUNCTION(internal_initiate__12JUTCacheFontFPC7ResFONTPvUlP7JKRHeap) {
	nofralloc
#include "asm/JSystem/JUtility/JUTCacheFont/internal_initiate__12JUTCacheFontFPC7ResFONTPvUlP7JKRHeap.s"
}
#pragma pop


/* 802DD650-802DD804 01B4+00 .text      allocArea__12JUTCacheFontFPvUlP7JKRHeap                      */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
ASM_FUNCTION(allocArea__12JUTCacheFontFPvUlP7JKRHeap) {
	nofralloc
#include "asm/JSystem/JUtility/JUTCacheFont/allocArea__12JUTCacheFontFPvUlP7JKRHeap.s"
}
#pragma pop


/* 802DD804-802DD8EC 00E8+00 .text      allocArray__12JUTCacheFontFP7JKRHeap                         */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
ASM_FUNCTION(allocArray__12JUTCacheFontFP7JKRHeap) {
	nofralloc
#include "asm/JSystem/JUtility/JUTCacheFont/allocArray__12JUTCacheFontFP7JKRHeap.s"
}
#pragma pop


/* 802DD8EC-802DDB0C 0220+00 .text      setBlock__12JUTCacheFontFv                                   */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
ASM_FUNCTION(setBlock__12JUTCacheFontFv) {
	nofralloc
#include "asm/JSystem/JUtility/JUTCacheFont/setBlock__12JUTCacheFontFv.s"
}
#pragma pop


/* 802DDB0C-802DDBBC 00B0+00 .text      determineBlankPage__12JUTCacheFontFv                         */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
ASM_FUNCTION(determineBlankPage__12JUTCacheFontFv) {
	nofralloc
#include "asm/JSystem/JUtility/JUTCacheFont/determineBlankPage__12JUTCacheFontFv.s"
}
#pragma pop


/* ############################################################################################## */
/* 80455FD0-80455FD8 0004+04 .sdata2    @721                                                         */
u8 lit_721[8] = {
	0x00, 0x00, 0x00, 0x00,
	/* padding */
	0x00, 0x00, 0x00, 0x00,
};

/* 802DDBBC-802DDCE4 0128+00 .text      getGlyphFromAram__12JUTCacheFontFPQ212JUTCacheFont15TGlyphCacheInfoPQ212JUTCacheFont10TCachePagePiPi */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
ASM_FUNCTION(getGlyphFromAram__12JUTCacheFontFPQ212JUTCacheFont15TGlyphCacheInfoPQ212JUTCacheFont10TCachePagePiPi) {
	nofralloc
#include "asm/JSystem/JUtility/JUTCacheFont/getGlyphFromAram__12JUTCacheFontFPQ212JUTCacheFont15TGlyphCacheInfoPQ212JUTCacheFont10TCachePagePiPi.s"
}
#pragma pop


/* 802DDCE4-802DDD98 00B4+00 .text      loadImage__12JUTCacheFontFi11_GXTexMapID                     */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
ASM_FUNCTION(loadImage__12JUTCacheFontFi11_GXTexMapID) {
	nofralloc
#include "asm/JSystem/JUtility/JUTCacheFont/loadImage__12JUTCacheFontFi11_GXTexMapID.s"
}
#pragma pop


/* 802DDD98-802DDEE0 0148+00 .text      loadCache_char_subroutine__12JUTCacheFontFPib                */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
ASM_FUNCTION(loadCache_char_subroutine__12JUTCacheFontFPib) {
	nofralloc
#include "asm/JSystem/JUtility/JUTCacheFont/loadCache_char_subroutine__12JUTCacheFontFPib.s"
}
#pragma pop


/* 802DDEE0-802DDF68 0088+00 .text      invalidiateAllCache__12JUTCacheFontFv                        */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
ASM_FUNCTION(invalidiateAllCache__12JUTCacheFontFv) {
	nofralloc
#include "asm/JSystem/JUtility/JUTCacheFont/invalidiateAllCache__12JUTCacheFontFv.s"
}
#pragma pop


/* 802DDF68-802DDFAC 0044+00 .text      unlink__12JUTCacheFontFPQ212JUTCacheFont15TGlyphCacheInfo    */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
ASM_FUNCTION(unlink__12JUTCacheFontFPQ212JUTCacheFont15TGlyphCacheInfo) {
	nofralloc
#include "asm/JSystem/JUtility/JUTCacheFont/unlink__12JUTCacheFontFPQ212JUTCacheFont15TGlyphCacheInfo.s"
}
#pragma pop


/* 802DDFAC-802DDFD8 002C+00 .text      prepend__12JUTCacheFontFPQ212JUTCacheFont15TGlyphCacheInfo   */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
ASM_FUNCTION(prepend__12JUTCacheFontFPQ212JUTCacheFont15TGlyphCacheInfo) {
	nofralloc
#include "asm/JSystem/JUtility/JUTCacheFont/prepend__12JUTCacheFontFPQ212JUTCacheFont15TGlyphCacheInfo.s"
}
#pragma pop


/* 802DDFD8-802DDFE0 0008+00 .text      getResFont__10JUTResFontCFv                                  */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
ASM_FUNCTION(getResFont__10JUTResFontCFv) {
	nofralloc
#include "asm/JSystem/JUtility/JUTCacheFont/getResFont__10JUTResFontCFv.s"
}
#pragma pop


/* 802DDFE0-802DDFEC 000C+00 .text      getFontType__10JUTResFontCFv                                 */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
ASM_FUNCTION(getFontType__10JUTResFontCFv) {
	nofralloc
#include "asm/JSystem/JUtility/JUTCacheFont/getFontType__10JUTResFontCFv.s"
}
#pragma pop


/* 802DDFEC-802DDFF8 000C+00 .text      getLeading__10JUTResFontCFv                                  */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
ASM_FUNCTION(getLeading__10JUTResFontCFv) {
	nofralloc
#include "asm/JSystem/JUtility/JUTCacheFont/getLeading__10JUTResFontCFv.s"
}
#pragma pop


/* 802DDFF8-802DE004 000C+00 .text      getWidth__10JUTResFontCFv                                    */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
ASM_FUNCTION(getWidth__10JUTResFontCFv) {
	nofralloc
#include "asm/JSystem/JUtility/JUTCacheFont/getWidth__10JUTResFontCFv.s"
}
#pragma pop


/* 802DE004-802DE010 000C+00 .text      getAscent__10JUTResFontCFv                                   */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
ASM_FUNCTION(getAscent__10JUTResFontCFv) {
	nofralloc
#include "asm/JSystem/JUtility/JUTCacheFont/getAscent__10JUTResFontCFv.s"
}
#pragma pop


/* 802DE010-802DE01C 000C+00 .text      getDescent__10JUTResFontCFv                                  */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
ASM_FUNCTION(getDescent__10JUTResFontCFv) {
	nofralloc
#include "asm/JSystem/JUtility/JUTCacheFont/getDescent__10JUTResFontCFv.s"
}
#pragma pop


/* 802DE01C-802DE078 005C+00 .text      getHeight__10JUTResFontCFv                                   */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
ASM_FUNCTION(getHeight__10JUTResFontCFv) {
	nofralloc
#include "asm/JSystem/JUtility/JUTCacheFont/getHeight__10JUTResFontCFv.s"
}
#pragma pop


/* ############################################################################################## */
