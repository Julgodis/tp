// 
// Generated By: dol2asm
// Translation Unit: J3DMaterial
// 

#include "dol2asm.h"
#include "dolphin/types.h"
#include "JSystem/J3DGraphBase/J3DMaterial.h"

// 
// Types:
// 

struct J3DDisplayListObj {
	/* 80312488 */ void newDisplayList(u32);
	/* 80312508 */ void newSingleDisplayList(u32);
	/* 80312618 */ void callDL() const;
	/* 80312644 */ void beginDL();
	/* 80312698 */ void endDL();
	/* 803126F4 */ void beginPatch();
	/* 80312714 */ void endPatch();
};

struct J3DMaterial {
	/* 803157A0 */ void createColorBlock(u32);
	/* 803159A0 */ void createTexGenBlock(u32);
	/* 80315B04 */ void createTevBlock(int);
	/* 80315E78 */ void createIndBlock(int);
	/* 80315F60 */ void createPEBlock(u32, u32);
	/* 80316100 */ void calcSizeColorBlock(u32);
	/* 80316150 */ void calcSizeTexGenBlock(u32);
	/* 8031617C */ void calcSizeTevBlock(int);
	/* 803161C4 */ void calcSizeIndBlock(int);
	/* 803161D8 */ void calcSizePEBlock(u32, u32);
	/* 80316240 */ void initialize();
	/* 80316290 */ void countDLSize();
	/* 80316344 */ void makeDisplayList_private(J3DDisplayListObj*);
	/* 80316620 */ void makeDisplayList();
	/* 80316668 */ void makeSharedDisplayList();
	/* 8031668C */ void load();
	/* 803166DC */ void loadSharedDL();
	/* 80316740 */ void patch();
	/* 803167D8 */ void diff(u32);
	/* 803169DC */ void calc(f32 const (* )[4]);
	/* 80316A54 */ void calcDiffTexMtx(f32 const (* )[4]);
	/* 80316AB0 */ void setCurrentMtx();
	/* 80316AC8 */ void calcCurrentMtx();
	/* 80316D68 */ void copy(J3DMaterial*);
	/* 80316E14 */ void reset();
	/* 80316E70 */ void change();
	/* 80316E90 */ void newSharedDisplayList(u32);
	/* 80316F24 */ void newSingleSharedDisplayList(u32);
};

struct J3DPatchedMaterial {
	/* 80316FB8 */ void initialize();
	/* 80316FD8 */ void makeDisplayList();
	/* 80316FDC */ void makeSharedDisplayList();
	/* 80316FE0 */ void load();
	/* 80316FFC */ void loadSharedDL();
	/* 8031703C */ void reset();
	/* 80317040 */ void change();
};

struct J3DLockedMaterial {
	/* 80317044 */ void initialize();
	/* 80317064 */ void makeDisplayList();
	/* 80317068 */ void makeSharedDisplayList();
	/* 8031706C */ void load();
	/* 80317088 */ void loadSharedDL();
	/* 803170C8 */ void patch();
	/* 803170CC */ void diff(u32);
	/* 803170D0 */ void calc(f32 const (* )[4]);
	/* 803170D4 */ void reset();
	/* 803170D8 */ void change();
};

struct J3DColorBlockLightOff {
	/* 803170DC */ ~J3DColorBlockLightOff();
	/* 8031747C */ void initialize();
};

struct J3DColorChan {
	/* 8000E47C */ J3DColorChan();
};

struct J3DLightObj {
};

struct J3DGXColor {
	/* 8000E538 */ J3DGXColor();
};

struct J3DColorBlock {
	/* 8000DBD0 */ void patchLight();
	/* 8000DFF0 */ void getAmbColor(u32);
	/* 8000DFF8 */ void getColorChan(u32);
	/* 8000E000 */ void getMatColor(u32);
	/* 8000E008 */ void getColorChanNum() const;
	/* 801A4C0C */ void setAmbColor(u32, J3DGXColor const*);
	/* 8000E0D4 */ void setAmbColor(u32, J3DGXColor);
	/* 80317450 */ void setColorChan(u32, J3DColorChan const*);
	/* 8000E0D8 */ void setColorChan(u32, J3DColorChan const&);
	/* 80317448 */ void setMatColor(u32, J3DGXColor const*);
	/* 8000E0DC */ void setMatColor(u32, J3DGXColor);
	/* 8031744C */ void setColorChanNum(u8 const*);
	/* 8000E0E0 */ void setColorChanNum(u8);
	/* 801A4C08 */ void setLight(u32, J3DLightObj*);
	/* 80317138 */ ~J3DColorBlock();
	/* 80317304 */ void countDLSize();
	/* 80317324 */ void load();
	/* 80317328 */ void getCullMode() const;
	/* 8031733C */ void patch();
	/* 80317340 */ void diff(u32);
	/* 80317358 */ void reset(J3DColorBlock*);
	/* 80317434 */ void patchMatColor();
	/* 80317438 */ void diffAmbColor();
	/* 8031743C */ void diffMatColor();
	/* 80317440 */ void diffColorChan();
	/* 80317444 */ void diffLightObj(u32);
	/* 80317454 */ void getLight(u32);
	/* 8031745C */ void setCullMode(u8);
	/* 80317460 */ void setCullMode(u8 const*);
	/* 80317464 */ void getMatColorOffset() const;
	/* 8031746C */ void getColorChanOffset() const;
	/* 80317474 */ void setMatColorOffset(u32);
	/* 80317478 */ void setColorChanOffset(u32);
};

struct J3DTexGenBlockPatched {
	/* 80317180 */ ~J3DTexGenBlockPatched();
	/* 80317644 */ void initialize();
};

struct J3DTexCoord {
	/* 8000E464 */ J3DTexCoord();
};

struct J3DTexMtx {
};

struct J3DNBTScale {
};

struct J3DTexGenBlock {
	/* 8000DFD8 */ void getTexMtx(u32);
	/* 8000DFE0 */ void getTexCoord(u32);
	/* 8000DFE8 */ void getTexGenNum() const;
	/* 8000E0CC */ void setTexCoord(u32, J3DTexCoord const*);
	/* 8031741C */ void setTexGenNum(u32 const*);
	/* 8000E0D0 */ void setTexGenNum(u32);
	/* 8003AB2C */ void setTexMtx(u32, J3DTexMtx*);
	/* 803171DC */ ~J3DTexGenBlock();
	/* 803172FC */ void countDLSize();
	/* 80317334 */ void getNBTScale();
	/* 80317354 */ void reset(J3DTexGenBlock*);
	/* 80317420 */ void setNBTScale(J3DNBTScale);
	/* 80317424 */ void setNBTScale(J3DNBTScale const*);
	/* 80317428 */ void getTexMtxOffset() const;
	/* 80317430 */ void setTexMtxOffset(u32);
};

struct J3DTevBlock {
	/* 80317224 */ ~J3DTevBlock();
	/* 8031730C */ void countDLSize();
	/* 80317330 */ void load();
	/* 80317350 */ void reset(J3DTevBlock*);
};

struct J3DIndTexOrder {
	/* 8000E128 */ J3DIndTexOrder();
};

struct J3DIndTexMtx {
	/* 8000E064 */ ~J3DIndTexMtx();
	/* 8000E0F0 */ J3DIndTexMtx();
};

struct J3DIndTexCoordScale {
	/* 8000E024 */ ~J3DIndTexCoordScale();
	/* 8000E0E4 */ J3DIndTexCoordScale();
};

struct J3DIndBlock {
	/* 8000DF64 */ void getIndTexCoordScale(u32);
	/* 8000DF6C */ void getIndTexMtx(u32);
	/* 8000DF74 */ void getIndTexOrder(u32);
	/* 8000DF7C */ void getIndTexStageNum() const;
	/* 8000E020 */ void setIndTexCoordScale(u32, J3DIndTexCoordScale);
	/* 80317418 */ void setIndTexCoordScale(u32, J3DIndTexCoordScale const*);
	/* 8000E060 */ void setIndTexMtx(u32, J3DIndTexMtx);
	/* 80317414 */ void setIndTexMtx(u32, J3DIndTexMtx const*);
	/* 8000E0A0 */ void setIndTexStageNum(u8);
	/* 8031726C */ ~J3DIndBlock();
	/* 80317314 */ void countDLSize();
	/* 8031734C */ void reset(J3DIndBlock*);
	/* 8031740C */ void setIndTexOrder(u32, J3DIndTexOrder const*);
	/* 80317410 */ void setIndTexOrder(u32, J3DIndTexOrder);
};

struct J3DAlphaComp {
};

struct J3DBlend {
};

struct J3DZMode {
};

struct J3DFog {
};

struct J3DPEBlock {
	/* 8000DBCC */ void patch();
	/* 8000DF3C */ void getZCompLoc() const;
	/* 8000DF44 */ void getZMode();
	/* 8000DF4C */ void getBlend();
	/* 8000DF54 */ void getAlphaComp();
	/* 8000DF5C */ void getFog();
	/* 8000E010 */ void setZCompLoc(u8);
	/* 80317378 */ void setZCompLoc(u8 const*);
	/* 8000E014 */ void setZMode(J3DZMode);
	/* 80317374 */ void setZMode(J3DZMode const*);
	/* 8000E018 */ void setBlend(J3DBlend const&);
	/* 80317370 */ void setBlend(J3DBlend const*);
	/* 8000E01C */ void setAlphaComp(J3DAlphaComp const&);
	/* 8031736C */ void setAlphaComp(J3DAlphaComp const*);
	/* 803172B4 */ ~J3DPEBlock();
	/* 8031731C */ void countDLSize();
	/* 80317344 */ void diff(u32);
	/* 80317348 */ void reset(J3DPEBlock*);
	/* 8031735C */ void diffFog();
	/* 80317360 */ void diffBlend();
	/* 80317364 */ void setFog(J3DFog*);
	/* 80317368 */ void setFog(J3DFog);
	/* 80317380 */ void setDither(u8 const*);
	/* 8031737C */ void setDither(u8);
	/* 80317384 */ void getDither() const;
	/* 8031738C */ void getFogOffset() const;
	/* 80317394 */ void setFogOffset(u32);
};

struct J3DIndBlockNull {
	/* 80317398 */ void diff(u32);
	/* 8031739C */ void load();
	/* 803173A0 */ void reset(J3DIndBlock*);
	/* 803173A4 */ void getType();
	/* 803173B0 */ ~J3DIndBlockNull();
};

struct J3DTevSwapModeTable {
	/* 8000E134 */ J3DTevSwapModeTable();
};

struct J3DTevOrder {
	/* 8000E140 */ J3DTevOrder();
};

struct J3DIndTevStage {
	/* 8000E14C */ J3DIndTevStage();
};

struct J3DTevStage {
	/* 8000E230 */ J3DTevStage();
};

struct J3DGXColorS10 {
	/* 8000E460 */ J3DGXColorS10();
};

struct _GXCullMode {
};

struct J3DMatPacket {
	/* 80312A24 */ void beginDiff();
	/* 80312A4C */ void endDiff();
};

struct J3DColorBlockAmbientOn {
	/* 803174DC */ void initialize();
};

struct J3DColorBlockLightOn {
	/* 80317580 */ void initialize();
};

struct J3DTexGenBlock4 {
	/* 80317674 */ void initialize();
};

struct J3DTexGenBlockBasic {
	/* 803176A4 */ void initialize();
};

struct J3DTevBlock1 {
	/* 803177E8 */ void initialize();
};

struct J3DTevBlock2 {
	/* 80317810 */ void initialize();
};

struct J3DTevBlock4 {
	/* 803178EC */ void initialize();
};

struct J3DTevBlock16 {
	/* 80317A00 */ void initialize();
};

struct J3DIndBlockFull {
	/* 80317B28 */ void initialize();
};

struct J3DPEBlockFogOff {
	/* 80317B34 */ void initialize();
};

struct J3DPEBlockFull {
	/* 80317B58 */ void initialize();
};

struct J3DFogInfo {
	/* 80325800 */ void operator=(J3DFogInfo const&);
};

// 
// Forward References:
// 


extern "C" void createColorBlock__11J3DMaterialFUl(); // 1
extern "C" void createTexGenBlock__11J3DMaterialFUl(); // 1
extern "C" void createTevBlock__11J3DMaterialFi(); // 1
extern "C" void createIndBlock__11J3DMaterialFi(); // 1
extern "C" void createPEBlock__11J3DMaterialFUlUl(); // 1
extern "C" void calcSizeColorBlock__11J3DMaterialFUl(); // 1
extern "C" void calcSizeTexGenBlock__11J3DMaterialFUl(); // 1
extern "C" void calcSizeTevBlock__11J3DMaterialFi(); // 1
extern "C" void calcSizeIndBlock__11J3DMaterialFi(); // 1
extern "C" void calcSizePEBlock__11J3DMaterialFUlUl(); // 1
extern "C" void initialize__11J3DMaterialFv(); // 1
extern "C" void countDLSize__11J3DMaterialFv(); // 1
extern "C" void makeDisplayList_private__11J3DMaterialFP17J3DDisplayListObj(); // 1
extern "C" void makeDisplayList__11J3DMaterialFv(); // 1
extern "C" void makeSharedDisplayList__11J3DMaterialFv(); // 1
extern "C" void load__11J3DMaterialFv(); // 1
extern "C" void loadSharedDL__11J3DMaterialFv(); // 1
extern "C" void patch__11J3DMaterialFv(); // 1
extern "C" void diff__11J3DMaterialFUl(); // 1
extern "C" void calc__11J3DMaterialFPA4_Cf(); // 1
extern "C" void calcDiffTexMtx__11J3DMaterialFPA4_Cf(); // 1
extern "C" void setCurrentMtx__11J3DMaterialFv(); // 1
extern "C" void calcCurrentMtx__11J3DMaterialFv(); // 1
extern "C" void copy__11J3DMaterialFP11J3DMaterial(); // 1
extern "C" void reset__11J3DMaterialFv(); // 1
extern "C" void change__11J3DMaterialFv(); // 1
extern "C" void newSharedDisplayList__11J3DMaterialFUl(); // 1
extern "C" void newSingleSharedDisplayList__11J3DMaterialFUl(); // 1
extern "C" void initialize__18J3DPatchedMaterialFv(); // 1
extern "C" void makeDisplayList__18J3DPatchedMaterialFv(); // 1
extern "C" void makeSharedDisplayList__18J3DPatchedMaterialFv(); // 1
extern "C" void load__18J3DPatchedMaterialFv(); // 1
extern "C" void loadSharedDL__18J3DPatchedMaterialFv(); // 1
extern "C" void reset__18J3DPatchedMaterialFv(); // 1
extern "C" void change__18J3DPatchedMaterialFv(); // 1
extern "C" void initialize__17J3DLockedMaterialFv(); // 1
extern "C" void makeDisplayList__17J3DLockedMaterialFv(); // 1
extern "C" void makeSharedDisplayList__17J3DLockedMaterialFv(); // 1
extern "C" void load__17J3DLockedMaterialFv(); // 1
extern "C" void loadSharedDL__17J3DLockedMaterialFv(); // 1
extern "C" void patch__17J3DLockedMaterialFv(); // 1
extern "C" void diff__17J3DLockedMaterialFUl(); // 1
extern "C" void calc__17J3DLockedMaterialFPA4_Cf(); // 1
extern "C" void reset__17J3DLockedMaterialFv(); // 1
extern "C" void change__17J3DLockedMaterialFv(); // 1
extern "C" void __dt__21J3DColorBlockLightOffFv(); // 1
extern "C" void __dt__13J3DColorBlockFv(); // 1
extern "C" void __dt__21J3DTexGenBlockPatchedFv(); // 1
extern "C" void __dt__14J3DTexGenBlockFv(); // 1
extern "C" void __dt__11J3DTevBlockFv(); // 1
extern "C" void __dt__11J3DIndBlockFv(); // 1
extern "C" void __dt__10J3DPEBlockFv(); // 1
extern "C" void countDLSize__14J3DTexGenBlockFv(); // 1
extern "C" void countDLSize__13J3DColorBlockFv(); // 1
extern "C" void countDLSize__11J3DTevBlockFv(); // 1
extern "C" void countDLSize__11J3DIndBlockFv(); // 1
extern "C" void countDLSize__10J3DPEBlockFv(); // 1
extern "C" void load__13J3DColorBlockFv(); // 1
extern "C" void getCullMode__13J3DColorBlockCFv(); // 1
extern "C" void load__11J3DTevBlockFv(); // 1
extern "C" void getNBTScale__14J3DTexGenBlockFv(); // 1
extern "C" void patch__13J3DColorBlockFv(); // 1
extern "C" void diff__13J3DColorBlockFUl(); // 1
extern "C" void diff__10J3DPEBlockFUl(); // 1
extern "C" void reset__10J3DPEBlockFP10J3DPEBlock(); // 1
extern "C" void reset__11J3DIndBlockFP11J3DIndBlock(); // 1
extern "C" void reset__11J3DTevBlockFP11J3DTevBlock(); // 1
extern "C" void reset__14J3DTexGenBlockFP14J3DTexGenBlock(); // 1
extern "C" void reset__13J3DColorBlockFP13J3DColorBlock(); // 1
extern "C" void diffFog__10J3DPEBlockFv(); // 1
extern "C" void diffBlend__10J3DPEBlockFv(); // 1
extern "C" void setFog__10J3DPEBlockFP6J3DFog(); // 1
extern "C" void setFog__10J3DPEBlockF6J3DFog(); // 1
extern "C" void setAlphaComp__10J3DPEBlockFPC12J3DAlphaComp(); // 1
extern "C" void setBlend__10J3DPEBlockFPC8J3DBlend(); // 1
extern "C" void setZMode__10J3DPEBlockFPC8J3DZMode(); // 1
extern "C" void setZCompLoc__10J3DPEBlockFPCUc(); // 1
extern "C" void setDither__10J3DPEBlockFUc(); // 1
extern "C" void setDither__10J3DPEBlockFPCUc(); // 1
extern "C" void getDither__10J3DPEBlockCFv(); // 1
extern "C" void getFogOffset__10J3DPEBlockCFv(); // 1
extern "C" void setFogOffset__10J3DPEBlockFUl(); // 1
extern "C" void diff__15J3DIndBlockNullFUl(); // 1
extern "C" void load__15J3DIndBlockNullFv(); // 1
extern "C" void reset__15J3DIndBlockNullFP11J3DIndBlock(); // 1
extern "C" void getType__15J3DIndBlockNullFv(); // 1
extern "C" void __dt__15J3DIndBlockNullFv(); // 1
extern "C" void setIndTexOrder__11J3DIndBlockFUlPC14J3DIndTexOrder(); // 1
extern "C" void setIndTexOrder__11J3DIndBlockFUl14J3DIndTexOrder(); // 1
extern "C" void setIndTexMtx__11J3DIndBlockFUlPC12J3DIndTexMtx(); // 1
extern "C" void setIndTexCoordScale__11J3DIndBlockFUlPC19J3DIndTexCoordScale(); // 1
extern "C" void setTexGenNum__14J3DTexGenBlockFPCUl(); // 1
extern "C" void setNBTScale__14J3DTexGenBlockF11J3DNBTScale(); // 1
extern "C" void setNBTScale__14J3DTexGenBlockFPC11J3DNBTScale(); // 1
extern "C" void getTexMtxOffset__14J3DTexGenBlockCFv(); // 1
extern "C" void setTexMtxOffset__14J3DTexGenBlockFUl(); // 1
extern "C" void patchMatColor__13J3DColorBlockFv(); // 1
extern "C" void diffAmbColor__13J3DColorBlockFv(); // 1
extern "C" void diffMatColor__13J3DColorBlockFv(); // 1
extern "C" void diffColorChan__13J3DColorBlockFv(); // 1
extern "C" void diffLightObj__13J3DColorBlockFUl(); // 1
extern "C" void setMatColor__13J3DColorBlockFUlPC10J3DGXColor(); // 1
extern "C" void setColorChanNum__13J3DColorBlockFPCUc(); // 1
extern "C" void setColorChan__13J3DColorBlockFUlPC12J3DColorChan(); // 1
extern "C" void getLight__13J3DColorBlockFUl(); // 1
extern "C" void setCullMode__13J3DColorBlockFUc(); // 1
extern "C" void setCullMode__13J3DColorBlockFPCUc(); // 1
extern "C" void getMatColorOffset__13J3DColorBlockCFv(); // 1
extern "C" void getColorChanOffset__13J3DColorBlockCFv(); // 1
extern "C" void setMatColorOffset__13J3DColorBlockFUl(); // 1
extern "C" void setColorChanOffset__13J3DColorBlockFUl(); // 1
extern "C" extern void* __vt__17J3DLockedMaterial[12];
extern "C" extern void* __vt__18J3DPatchedMaterial[12];
extern "C" extern void* __vt__11J3DMaterial[12];
extern "C" extern void* __vt__10J3DPEBlock[31];
extern "C" extern void* __vt__15J3DIndBlockNull[19];
extern "C" extern void* __vt__11J3DIndBlock[19];
extern "C" extern void* __vt__14J3DTexGenBlock[27];
extern "C" extern void* __vt__13J3DColorBlock[36];

// 
// External References:
// 

void* operator new(u32); // 2
void operator delete(void*); // 2
void J3DGDSetGenMode(u8, u8, u8, u8, _GXCullMode); // 2
void J3DGDSetGenMode_3Param(u8, u8, u8); // 2
void loadNBTScale(J3DNBTScale&); // 2

extern "C" void patch__10J3DPEBlockFv(); // 1
extern "C" void patchLight__13J3DColorBlockFv(); // 1
extern "C" void getZCompLoc__10J3DPEBlockCFv(); // 1
extern "C" void getZMode__10J3DPEBlockFv(); // 1
extern "C" void getBlend__10J3DPEBlockFv(); // 1
extern "C" void getAlphaComp__10J3DPEBlockFv(); // 1
extern "C" void getFog__10J3DPEBlockFv(); // 1
extern "C" void getIndTexCoordScale__11J3DIndBlockFUl(); // 1
extern "C" void getIndTexMtx__11J3DIndBlockFUl(); // 1
extern "C" void getIndTexOrder__11J3DIndBlockFUl(); // 1
extern "C" void getIndTexStageNum__11J3DIndBlockCFv(); // 1
extern "C" void getTexMtx__14J3DTexGenBlockFUl(); // 1
extern "C" void getTexCoord__14J3DTexGenBlockFUl(); // 1
extern "C" void getTexGenNum__14J3DTexGenBlockCFv(); // 1
extern "C" void getAmbColor__13J3DColorBlockFUl(); // 1
extern "C" void getColorChan__13J3DColorBlockFUl(); // 1
extern "C" void getMatColor__13J3DColorBlockFUl(); // 1
extern "C" void getColorChanNum__13J3DColorBlockCFv(); // 1
extern "C" void setZCompLoc__10J3DPEBlockFUc(); // 1
extern "C" void setZMode__10J3DPEBlockF8J3DZMode(); // 1
extern "C" void setBlend__10J3DPEBlockFRC8J3DBlend(); // 1
extern "C" void setAlphaComp__10J3DPEBlockFRC12J3DAlphaComp(); // 1
extern "C" void setIndTexCoordScale__11J3DIndBlockFUl19J3DIndTexCoordScale(); // 1
extern "C" void __dt__19J3DIndTexCoordScaleFv(); // 1
extern "C" void setIndTexMtx__11J3DIndBlockFUl12J3DIndTexMtx(); // 1
extern "C" void __dt__12J3DIndTexMtxFv(); // 1
extern "C" void setIndTexStageNum__11J3DIndBlockFUc(); // 1
extern "C" void setTexCoord__14J3DTexGenBlockFUlPC11J3DTexCoord(); // 1
extern "C" void setTexGenNum__14J3DTexGenBlockFUl(); // 1
extern "C" void setAmbColor__13J3DColorBlockFUl10J3DGXColor(); // 1
extern "C" void setColorChan__13J3DColorBlockFUlRC12J3DColorChan(); // 1
extern "C" void setMatColor__13J3DColorBlockFUl10J3DGXColor(); // 1
extern "C" void setColorChanNum__13J3DColorBlockFUc(); // 1
extern "C" void __ct__19J3DIndTexCoordScaleFv(); // 1
extern "C" void __ct__12J3DIndTexMtxFv(); // 1
extern "C" void __ct__14J3DIndTexOrderFv(); // 1
extern "C" void __ct__19J3DTevSwapModeTableFv(); // 1
extern "C" void __ct__11J3DTevOrderFv(); // 1
extern "C" void __ct__14J3DIndTevStageFv(); // 1
extern "C" void __ct__11J3DTevStageFv(); // 1
extern "C" void __ct__13J3DGXColorS10Fv(); // 1
extern "C" void __ct__11J3DTexCoordFv(); // 1
extern "C" void __ct__12J3DColorChanFv(); // 1
extern "C" void __ct__10J3DGXColorFv(); // 1
extern "C" void setTexMtx__14J3DTexGenBlockFUlP9J3DTexMtx(); // 1
extern "C" void setLight__13J3DColorBlockFUlP11J3DLightObj(); // 1
extern "C" void setAmbColor__13J3DColorBlockFUlPC10J3DGXColor(); // 1
extern "C" void* __nw__FUl(); // 1
extern "C" void __dl__FPv(); // 1
extern "C" void J3DGDSetGenMode__FUcUcUcUc11_GXCullMode(); // 1
extern "C" void J3DGDSetGenMode_3Param__FUcUcUc(); // 1
extern "C" void newDisplayList__17J3DDisplayListObjFUl(); // 1
extern "C" void newSingleDisplayList__17J3DDisplayListObjFUl(); // 1
extern "C" void callDL__17J3DDisplayListObjCFv(); // 1
extern "C" void beginDL__17J3DDisplayListObjFv(); // 1
extern "C" void endDL__17J3DDisplayListObjFv(); // 1
extern "C" void beginPatch__17J3DDisplayListObjFv(); // 1
extern "C" void endPatch__17J3DDisplayListObjFv(); // 1
extern "C" void beginDiff__12J3DMatPacketFv(); // 1
extern "C" void endDiff__12J3DMatPacketFv(); // 1
extern "C" void initialize__21J3DColorBlockLightOffFv(); // 1
extern "C" void initialize__22J3DColorBlockAmbientOnFv(); // 1
extern "C" void initialize__20J3DColorBlockLightOnFv(); // 1
extern "C" void initialize__21J3DTexGenBlockPatchedFv(); // 1
extern "C" void initialize__15J3DTexGenBlock4Fv(); // 1
extern "C" void initialize__19J3DTexGenBlockBasicFv(); // 1
extern "C" void initialize__12J3DTevBlock1Fv(); // 1
extern "C" void initialize__12J3DTevBlock2Fv(); // 1
extern "C" void initialize__12J3DTevBlock4Fv(); // 1
extern "C" void initialize__13J3DTevBlock16Fv(); // 1
extern "C" void initialize__15J3DIndBlockFullFv(); // 1
extern "C" void initialize__16J3DPEBlockFogOffFv(); // 1
extern "C" void initialize__14J3DPEBlockFullFv(); // 1
extern "C" void loadNBTScale__FR11J3DNBTScale(); // 1
extern "C" void __as__10J3DFogInfoFRC10J3DFogInfo(); // 1
extern "C" void __construct_array(); // 1
extern "C" void _savegpr_24(); // 1
extern "C" void _savegpr_26(); // 1
extern "C" void _savegpr_27(); // 1
extern "C" void _savegpr_29(); // 1
extern "C" void _restgpr_24(); // 1
extern "C" void _restgpr_26(); // 1
extern "C" void _restgpr_27(); // 1
extern "C" void _restgpr_29(); // 1
extern "C" extern u8 const j3dDefaultFogInfo[44];
extern "C" extern u8 const j3dDefaultNBTScaleInfo[16];
extern "C" extern void* __vt__14J3DPEBlockFull[31];
extern "C" extern void* __vt__16J3DPEBlockFogOff[31];
extern "C" extern void* __vt__13J3DTevBlock16[55];
extern "C" extern void* __vt__12J3DTevBlock4[55];
extern "C" extern void* __vt__12J3DTevBlock2[55];
extern "C" extern void* __vt__12J3DTevBlock1[55];
extern "C" extern void* __vt__19J3DTexGenBlockBasic[27];
extern "C" extern void* __vt__15J3DTexGenBlock4[27];
extern "C" extern void* __vt__21J3DTexGenBlockPatched[27];
extern "C" extern void* __vt__20J3DColorBlockLightOn[36];
extern "C" extern void* __vt__22J3DColorBlockAmbientOn[36];
extern "C" extern void* __vt__13J3DPEBlockXlu[31];
extern "C" extern void* __vt__17J3DPEBlockTexEdge[31];
extern "C" extern void* __vt__13J3DPEBlockOpa[31];
extern "C" extern void* __vt__15J3DIndBlockFull[19];
extern "C" extern void* __vt__11J3DTevBlock[55];
extern "C" extern void* __vt__21J3DColorBlockLightOff[36 + 1 /* padding */];
extern "C" extern u8 j3dSys[284];
extern "C" extern u8 __GDCurrentDL[4];
extern "C" extern u32 j3dDefaultBlendInfo;
extern "C" extern u8 struct_804563F8[4];
extern "C" extern u16 j3dDefaultZModeID[1 + 1 /* padding */];

// 
// Declarations:
// 

/* ############################################################################################## */
/* 803CDC90-803CDCC0 0030+00 s=0 e=1 z=0  None .data      __vt__17J3DLockedMaterial                                    */
SECTION_DATA void* __vt__17J3DLockedMaterial[12] = {
	/* 0    */ (void*)NULL /* RTTI */,
	/* 1    */ (void*)NULL,
	/* 2    */ (void*)calc__17J3DLockedMaterialFPA4_Cf,
	/* 3    */ (void*)calcDiffTexMtx__11J3DMaterialFPA4_Cf,
	/* 4    */ (void*)makeDisplayList__17J3DLockedMaterialFv,
	/* 5    */ (void*)makeSharedDisplayList__17J3DLockedMaterialFv,
	/* 6    */ (void*)load__17J3DLockedMaterialFv,
	/* 7    */ (void*)loadSharedDL__17J3DLockedMaterialFv,
	/* 8    */ (void*)patch__17J3DLockedMaterialFv,
	/* 9    */ (void*)diff__17J3DLockedMaterialFUl,
	/* 10   */ (void*)reset__17J3DLockedMaterialFv,
	/* 11   */ (void*)change__17J3DLockedMaterialFv,
};

/* 803CDCC0-803CDCF0 0030+00 s=0 e=1 z=0  None .data      __vt__18J3DPatchedMaterial                                   */
SECTION_DATA void* __vt__18J3DPatchedMaterial[12] = {
	/* 0    */ (void*)NULL /* RTTI */,
	/* 1    */ (void*)NULL,
	/* 2    */ (void*)calc__11J3DMaterialFPA4_Cf,
	/* 3    */ (void*)calcDiffTexMtx__11J3DMaterialFPA4_Cf,
	/* 4    */ (void*)makeDisplayList__18J3DPatchedMaterialFv,
	/* 5    */ (void*)makeSharedDisplayList__18J3DPatchedMaterialFv,
	/* 6    */ (void*)load__18J3DPatchedMaterialFv,
	/* 7    */ (void*)loadSharedDL__18J3DPatchedMaterialFv,
	/* 8    */ (void*)patch__11J3DMaterialFv,
	/* 9    */ (void*)diff__11J3DMaterialFUl,
	/* 10   */ (void*)reset__18J3DPatchedMaterialFv,
	/* 11   */ (void*)change__18J3DPatchedMaterialFv,
};

/* 803CDCF0-803CDD20 0030+00 s=0 e=6 z=0  None .data      __vt__11J3DMaterial                                          */
SECTION_DATA void* __vt__11J3DMaterial[12] = {
	/* 0    */ (void*)NULL /* RTTI */,
	/* 1    */ (void*)NULL,
	/* 2    */ (void*)calc__11J3DMaterialFPA4_Cf,
	/* 3    */ (void*)calcDiffTexMtx__11J3DMaterialFPA4_Cf,
	/* 4    */ (void*)makeDisplayList__11J3DMaterialFv,
	/* 5    */ (void*)makeSharedDisplayList__11J3DMaterialFv,
	/* 6    */ (void*)load__11J3DMaterialFv,
	/* 7    */ (void*)loadSharedDL__11J3DMaterialFv,
	/* 8    */ (void*)patch__11J3DMaterialFv,
	/* 9    */ (void*)diff__11J3DMaterialFUl,
	/* 10   */ (void*)reset__11J3DMaterialFv,
	/* 11   */ (void*)change__11J3DMaterialFv,
};

/* 803CDD20-803CDD9C 007C+00 s=2 e=7 z=0  None .data      __vt__10J3DPEBlock                                           */
SECTION_DATA void* __vt__10J3DPEBlock[31] = {
	/* 0    */ (void*)NULL /* RTTI */,
	/* 1    */ (void*)NULL,
	/* 2    */ (void*)reset__10J3DPEBlockFP10J3DPEBlock,
	/* 3    */ (void*)NULL,
	/* 4    */ (void*)patch__10J3DPEBlockFv,
	/* 5    */ (void*)diff__10J3DPEBlockFUl,
	/* 6    */ (void*)diffFog__10J3DPEBlockFv,
	/* 7    */ (void*)diffBlend__10J3DPEBlockFv,
	/* 8    */ (void*)countDLSize__10J3DPEBlockFv,
	/* 9    */ (void*)NULL,
	/* 10   */ (void*)setFog__10J3DPEBlockF6J3DFog,
	/* 11   */ (void*)setFog__10J3DPEBlockFP6J3DFog,
	/* 12   */ (void*)getFog__10J3DPEBlockFv,
	/* 13   */ (void*)setAlphaComp__10J3DPEBlockFPC12J3DAlphaComp,
	/* 14   */ (void*)setAlphaComp__10J3DPEBlockFRC12J3DAlphaComp,
	/* 15   */ (void*)getAlphaComp__10J3DPEBlockFv,
	/* 16   */ (void*)setBlend__10J3DPEBlockFPC8J3DBlend,
	/* 17   */ (void*)setBlend__10J3DPEBlockFRC8J3DBlend,
	/* 18   */ (void*)getBlend__10J3DPEBlockFv,
	/* 19   */ (void*)setZMode__10J3DPEBlockFPC8J3DZMode,
	/* 20   */ (void*)setZMode__10J3DPEBlockF8J3DZMode,
	/* 21   */ (void*)getZMode__10J3DPEBlockFv,
	/* 22   */ (void*)setZCompLoc__10J3DPEBlockFPCUc,
	/* 23   */ (void*)setZCompLoc__10J3DPEBlockFUc,
	/* 24   */ (void*)getZCompLoc__10J3DPEBlockCFv,
	/* 25   */ (void*)setDither__10J3DPEBlockFPCUc,
	/* 26   */ (void*)setDither__10J3DPEBlockFUc,
	/* 27   */ (void*)getDither__10J3DPEBlockCFv,
	/* 28   */ (void*)getFogOffset__10J3DPEBlockCFv,
	/* 29   */ (void*)setFogOffset__10J3DPEBlockFUl,
	/* 30   */ (void*)__dt__10J3DPEBlockFv,
};

/* 803CDD9C-803CDDE8 004C+00 s=2 e=1 z=0  None .data      __vt__15J3DIndBlockNull                                      */
SECTION_DATA void* __vt__15J3DIndBlockNull[19] = {
	/* 0    */ (void*)NULL /* RTTI */,
	/* 1    */ (void*)NULL,
	/* 2    */ (void*)reset__15J3DIndBlockNullFP11J3DIndBlock,
	/* 3    */ (void*)diff__15J3DIndBlockNullFUl,
	/* 4    */ (void*)load__15J3DIndBlockNullFv,
	/* 5    */ (void*)countDLSize__11J3DIndBlockFv,
	/* 6    */ (void*)getType__15J3DIndBlockNullFv,
	/* 7    */ (void*)setIndTexStageNum__11J3DIndBlockFUc,
	/* 8    */ (void*)getIndTexStageNum__11J3DIndBlockCFv,
	/* 9    */ (void*)setIndTexOrder__11J3DIndBlockFUl14J3DIndTexOrder,
	/* 10   */ (void*)setIndTexOrder__11J3DIndBlockFUlPC14J3DIndTexOrder,
	/* 11   */ (void*)getIndTexOrder__11J3DIndBlockFUl,
	/* 12   */ (void*)setIndTexMtx__11J3DIndBlockFUlPC12J3DIndTexMtx,
	/* 13   */ (void*)setIndTexMtx__11J3DIndBlockFUl12J3DIndTexMtx,
	/* 14   */ (void*)getIndTexMtx__11J3DIndBlockFUl,
	/* 15   */ (void*)setIndTexCoordScale__11J3DIndBlockFUlPC19J3DIndTexCoordScale,
	/* 16   */ (void*)setIndTexCoordScale__11J3DIndBlockFUl19J3DIndTexCoordScale,
	/* 17   */ (void*)getIndTexCoordScale__11J3DIndBlockFUl,
	/* 18   */ (void*)__dt__15J3DIndBlockNullFv,
};

/* 803CDDE8-803CDE34 004C+00 s=3 e=2 z=0  None .data      __vt__11J3DIndBlock                                          */
SECTION_DATA void* __vt__11J3DIndBlock[19] = {
	/* 0    */ (void*)NULL /* RTTI */,
	/* 1    */ (void*)NULL,
	/* 2    */ (void*)reset__11J3DIndBlockFP11J3DIndBlock,
	/* 3    */ (void*)NULL,
	/* 4    */ (void*)NULL,
	/* 5    */ (void*)countDLSize__11J3DIndBlockFv,
	/* 6    */ (void*)NULL,
	/* 7    */ (void*)setIndTexStageNum__11J3DIndBlockFUc,
	/* 8    */ (void*)getIndTexStageNum__11J3DIndBlockCFv,
	/* 9    */ (void*)setIndTexOrder__11J3DIndBlockFUl14J3DIndTexOrder,
	/* 10   */ (void*)setIndTexOrder__11J3DIndBlockFUlPC14J3DIndTexOrder,
	/* 11   */ (void*)getIndTexOrder__11J3DIndBlockFUl,
	/* 12   */ (void*)setIndTexMtx__11J3DIndBlockFUlPC12J3DIndTexMtx,
	/* 13   */ (void*)setIndTexMtx__11J3DIndBlockFUl12J3DIndTexMtx,
	/* 14   */ (void*)getIndTexMtx__11J3DIndBlockFUl,
	/* 15   */ (void*)setIndTexCoordScale__11J3DIndBlockFUlPC19J3DIndTexCoordScale,
	/* 16   */ (void*)setIndTexCoordScale__11J3DIndBlockFUl19J3DIndTexCoordScale,
	/* 17   */ (void*)getIndTexCoordScale__11J3DIndBlockFUl,
	/* 18   */ (void*)__dt__11J3DIndBlockFv,
};

/* 803CDE34-803CDEA0 006C+00 s=3 e=5 z=0  None .data      __vt__14J3DTexGenBlock                                       */
SECTION_DATA void* __vt__14J3DTexGenBlock[27] = {
	/* 0    */ (void*)NULL /* RTTI */,
	/* 1    */ (void*)NULL,
	/* 2    */ (void*)reset__14J3DTexGenBlockFP14J3DTexGenBlock,
	/* 3    */ (void*)NULL,
	/* 4    */ (void*)NULL,
	/* 5    */ (void*)NULL,
	/* 6    */ (void*)NULL,
	/* 7    */ (void*)NULL,
	/* 8    */ (void*)NULL,
	/* 9    */ (void*)NULL,
	/* 10   */ (void*)NULL,
	/* 11   */ (void*)NULL,
	/* 12   */ (void*)countDLSize__14J3DTexGenBlockFv,
	/* 13   */ (void*)NULL,
	/* 14   */ (void*)setTexGenNum__14J3DTexGenBlockFPCUl,
	/* 15   */ (void*)setTexGenNum__14J3DTexGenBlockFUl,
	/* 16   */ (void*)getTexGenNum__14J3DTexGenBlockCFv,
	/* 17   */ (void*)setTexCoord__14J3DTexGenBlockFUlPC11J3DTexCoord,
	/* 18   */ (void*)getTexCoord__14J3DTexGenBlockFUl,
	/* 19   */ (void*)setTexMtx__14J3DTexGenBlockFUlP9J3DTexMtx,
	/* 20   */ (void*)getTexMtx__14J3DTexGenBlockFUl,
	/* 21   */ (void*)setNBTScale__14J3DTexGenBlockFPC11J3DNBTScale,
	/* 22   */ (void*)setNBTScale__14J3DTexGenBlockF11J3DNBTScale,
	/* 23   */ (void*)getNBTScale__14J3DTexGenBlockFv,
	/* 24   */ (void*)getTexMtxOffset__14J3DTexGenBlockCFv,
	/* 25   */ (void*)setTexMtxOffset__14J3DTexGenBlockFUl,
	/* 26   */ (void*)__dt__14J3DTexGenBlockFv,
};

/* 803CDEA0-803CDF30 0090+00 s=3 e=4 z=0  None .data      __vt__13J3DColorBlock                                        */
SECTION_DATA void* __vt__13J3DColorBlock[36] = {
	/* 0    */ (void*)NULL /* RTTI */,
	/* 1    */ (void*)NULL,
	/* 2    */ (void*)load__13J3DColorBlockFv,
	/* 3    */ (void*)reset__13J3DColorBlockFP13J3DColorBlock,
	/* 4    */ (void*)patch__13J3DColorBlockFv,
	/* 5    */ (void*)patchMatColor__13J3DColorBlockFv,
	/* 6    */ (void*)patchLight__13J3DColorBlockFv,
	/* 7    */ (void*)diff__13J3DColorBlockFUl,
	/* 8    */ (void*)diffAmbColor__13J3DColorBlockFv,
	/* 9    */ (void*)diffMatColor__13J3DColorBlockFv,
	/* 10   */ (void*)diffColorChan__13J3DColorBlockFv,
	/* 11   */ (void*)diffLightObj__13J3DColorBlockFUl,
	/* 12   */ (void*)countDLSize__13J3DColorBlockFv,
	/* 13   */ (void*)NULL,
	/* 14   */ (void*)setMatColor__13J3DColorBlockFUlPC10J3DGXColor,
	/* 15   */ (void*)setMatColor__13J3DColorBlockFUl10J3DGXColor,
	/* 16   */ (void*)getMatColor__13J3DColorBlockFUl,
	/* 17   */ (void*)setAmbColor__13J3DColorBlockFUlPC10J3DGXColor,
	/* 18   */ (void*)setAmbColor__13J3DColorBlockFUl10J3DGXColor,
	/* 19   */ (void*)getAmbColor__13J3DColorBlockFUl,
	/* 20   */ (void*)setColorChanNum__13J3DColorBlockFUc,
	/* 21   */ (void*)setColorChanNum__13J3DColorBlockFPCUc,
	/* 22   */ (void*)getColorChanNum__13J3DColorBlockCFv,
	/* 23   */ (void*)setColorChan__13J3DColorBlockFUlRC12J3DColorChan,
	/* 24   */ (void*)setColorChan__13J3DColorBlockFUlPC12J3DColorChan,
	/* 25   */ (void*)getColorChan__13J3DColorBlockFUl,
	/* 26   */ (void*)setLight__13J3DColorBlockFUlP11J3DLightObj,
	/* 27   */ (void*)getLight__13J3DColorBlockFUl,
	/* 28   */ (void*)setCullMode__13J3DColorBlockFPCUc,
	/* 29   */ (void*)setCullMode__13J3DColorBlockFUc,
	/* 30   */ (void*)getCullMode__13J3DColorBlockCFv,
	/* 31   */ (void*)getMatColorOffset__13J3DColorBlockCFv,
	/* 32   */ (void*)getColorChanOffset__13J3DColorBlockCFv,
	/* 33   */ (void*)setMatColorOffset__13J3DColorBlockFUl,
	/* 34   */ (void*)setColorChanOffset__13J3DColorBlockFUl,
	/* 35   */ (void*)__dt__13J3DColorBlockFv,
};

/* 803157A0-803159A0 0200+00 s=0 e=3 z=0  None .text      createColorBlock__11J3DMaterialFUl                           */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void J3DMaterial::createColorBlock(u32 param_0) {
	nofralloc
#include "asm/JSystem/J3DGraphBase/J3DMaterial/createColorBlock__11J3DMaterialFUl.s"
}
#pragma pop


/* 803159A0-80315B04 0164+00 s=0 e=2 z=0  None .text      createTexGenBlock__11J3DMaterialFUl                          */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void J3DMaterial::createTexGenBlock(u32 param_0) {
	nofralloc
#include "asm/JSystem/J3DGraphBase/J3DMaterial/createTexGenBlock__11J3DMaterialFUl.s"
}
#pragma pop


/* 80315B04-80315E78 0374+00 s=0 e=2 z=0  None .text      createTevBlock__11J3DMaterialFi                              */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void J3DMaterial::createTevBlock(int param_0) {
	nofralloc
#include "asm/JSystem/J3DGraphBase/J3DMaterial/createTevBlock__11J3DMaterialFi.s"
}
#pragma pop


/* 80315E78-80315F60 00E8+00 s=0 e=3 z=0  None .text      createIndBlock__11J3DMaterialFi                              */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void J3DMaterial::createIndBlock(int param_0) {
	nofralloc
#include "asm/JSystem/J3DGraphBase/J3DMaterial/createIndBlock__11J3DMaterialFi.s"
}
#pragma pop


/* 80315F60-80316100 01A0+00 s=0 e=3 z=0  None .text      createPEBlock__11J3DMaterialFUlUl                            */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void J3DMaterial::createPEBlock(u32 param_0, u32 param_1) {
	nofralloc
#include "asm/JSystem/J3DGraphBase/J3DMaterial/createPEBlock__11J3DMaterialFUlUl.s"
}
#pragma pop


/* 80316100-80316150 0050+00 s=0 e=2 z=0  None .text      calcSizeColorBlock__11J3DMaterialFUl                         */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void J3DMaterial::calcSizeColorBlock(u32 param_0) {
	nofralloc
#include "asm/JSystem/J3DGraphBase/J3DMaterial/calcSizeColorBlock__11J3DMaterialFUl.s"
}
#pragma pop


/* 80316150-8031617C 002C+00 s=0 e=1 z=0  None .text      calcSizeTexGenBlock__11J3DMaterialFUl                        */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void J3DMaterial::calcSizeTexGenBlock(u32 param_0) {
	nofralloc
#include "asm/JSystem/J3DGraphBase/J3DMaterial/calcSizeTexGenBlock__11J3DMaterialFUl.s"
}
#pragma pop


/* 8031617C-803161C4 0048+00 s=0 e=1 z=0  None .text      calcSizeTevBlock__11J3DMaterialFi                            */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void J3DMaterial::calcSizeTevBlock(int param_0) {
	nofralloc
#include "asm/JSystem/J3DGraphBase/J3DMaterial/calcSizeTevBlock__11J3DMaterialFi.s"
}
#pragma pop


/* 803161C4-803161D8 0014+00 s=0 e=2 z=0  None .text      calcSizeIndBlock__11J3DMaterialFi                            */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void J3DMaterial::calcSizeIndBlock(int param_0) {
	nofralloc
#include "asm/JSystem/J3DGraphBase/J3DMaterial/calcSizeIndBlock__11J3DMaterialFi.s"
}
#pragma pop


/* 803161D8-80316240 0068+00 s=0 e=2 z=0  None .text      calcSizePEBlock__11J3DMaterialFUlUl                          */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void J3DMaterial::calcSizePEBlock(u32 param_0, u32 param_1) {
	nofralloc
#include "asm/JSystem/J3DGraphBase/J3DMaterial/calcSizePEBlock__11J3DMaterialFUlUl.s"
}
#pragma pop


/* 80316240-80316290 0050+00 s=2 e=5 z=0  None .text      initialize__11J3DMaterialFv                                  */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void J3DMaterial::initialize() {
	nofralloc
#include "asm/JSystem/J3DGraphBase/J3DMaterial/initialize__11J3DMaterialFv.s"
}
#pragma pop


/* 80316290-80316344 00B4+00 s=0 e=2 z=0  None .text      countDLSize__11J3DMaterialFv                                 */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void J3DMaterial::countDLSize() {
	nofralloc
#include "asm/JSystem/J3DGraphBase/J3DMaterial/countDLSize__11J3DMaterialFv.s"
}
#pragma pop


/* 80316344-80316620 02DC+00 s=2 e=0 z=0  None .text      makeDisplayList_private__11J3DMaterialFP17J3DDisplayListObj  */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void J3DMaterial::makeDisplayList_private(J3DDisplayListObj* param_0) {
	nofralloc
#include "asm/JSystem/J3DGraphBase/J3DMaterial/makeDisplayList_private__11J3DMaterialFP17J3DDisplayListObj.s"
}
#pragma pop


/* 80316620-80316668 0048+00 s=1 e=0 z=0  None .text      makeDisplayList__11J3DMaterialFv                             */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void J3DMaterial::makeDisplayList() {
	nofralloc
#include "asm/JSystem/J3DGraphBase/J3DMaterial/makeDisplayList__11J3DMaterialFv.s"
}
#pragma pop


/* 80316668-8031668C 0024+00 s=1 e=0 z=0  None .text      makeSharedDisplayList__11J3DMaterialFv                       */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void J3DMaterial::makeSharedDisplayList() {
	nofralloc
#include "asm/JSystem/J3DGraphBase/J3DMaterial/makeSharedDisplayList__11J3DMaterialFv.s"
}
#pragma pop


/* 8031668C-803166DC 0050+00 s=1 e=0 z=0  None .text      load__11J3DMaterialFv                                        */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void J3DMaterial::load() {
	nofralloc
#include "asm/JSystem/J3DGraphBase/J3DMaterial/load__11J3DMaterialFv.s"
}
#pragma pop


/* 803166DC-80316740 0064+00 s=1 e=0 z=0  None .text      loadSharedDL__11J3DMaterialFv                                */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void J3DMaterial::loadSharedDL() {
	nofralloc
#include "asm/JSystem/J3DGraphBase/J3DMaterial/loadSharedDL__11J3DMaterialFv.s"
}
#pragma pop


/* 80316740-803167D8 0098+00 s=2 e=0 z=0  None .text      patch__11J3DMaterialFv                                       */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void J3DMaterial::patch() {
	nofralloc
#include "asm/JSystem/J3DGraphBase/J3DMaterial/patch__11J3DMaterialFv.s"
}
#pragma pop


/* 803167D8-803169DC 0204+00 s=2 e=0 z=0  None .text      diff__11J3DMaterialFUl                                       */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void J3DMaterial::diff(u32 param_0) {
	nofralloc
#include "asm/JSystem/J3DGraphBase/J3DMaterial/diff__11J3DMaterialFUl.s"
}
#pragma pop


/* 803169DC-80316A54 0078+00 s=2 e=0 z=0  None .text      calc__11J3DMaterialFPA4_Cf                                   */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void J3DMaterial::calc(f32 const (* param_0)[4]) {
	nofralloc
#include "asm/JSystem/J3DGraphBase/J3DMaterial/calc__11J3DMaterialFPA4_Cf.s"
}
#pragma pop


/* 80316A54-80316AB0 005C+00 s=3 e=0 z=0  None .text      calcDiffTexMtx__11J3DMaterialFPA4_Cf                         */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void J3DMaterial::calcDiffTexMtx(f32 const (* param_0)[4]) {
	nofralloc
#include "asm/JSystem/J3DGraphBase/J3DMaterial/calcDiffTexMtx__11J3DMaterialFPA4_Cf.s"
}
#pragma pop


/* 80316AB0-80316AC8 0018+00 s=1 e=1 z=0  None .text      setCurrentMtx__11J3DMaterialFv                               */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void J3DMaterial::setCurrentMtx() {
	nofralloc
#include "asm/JSystem/J3DGraphBase/J3DMaterial/setCurrentMtx__11J3DMaterialFv.s"
}
#pragma pop


/* 80316AC8-80316D68 02A0+00 s=1 e=0 z=0  None .text      calcCurrentMtx__11J3DMaterialFv                              */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void J3DMaterial::calcCurrentMtx() {
	nofralloc
#include "asm/JSystem/J3DGraphBase/J3DMaterial/calcCurrentMtx__11J3DMaterialFv.s"
}
#pragma pop


/* 80316D68-80316E14 00AC+00 s=1 e=0 z=0  None .text      copy__11J3DMaterialFP11J3DMaterial                           */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void J3DMaterial::copy(J3DMaterial* param_0) {
	nofralloc
#include "asm/JSystem/J3DGraphBase/J3DMaterial/copy__11J3DMaterialFP11J3DMaterial.s"
}
#pragma pop


/* 80316E14-80316E70 005C+00 s=1 e=0 z=0  None .text      reset__11J3DMaterialFv                                       */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void J3DMaterial::reset() {
	nofralloc
#include "asm/JSystem/J3DGraphBase/J3DMaterial/reset__11J3DMaterialFv.s"
}
#pragma pop


/* 80316E70-80316E90 0020+00 s=1 e=0 z=0  None .text      change__11J3DMaterialFv                                      */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void J3DMaterial::change() {
	nofralloc
#include "asm/JSystem/J3DGraphBase/J3DMaterial/change__11J3DMaterialFv.s"
}
#pragma pop


/* 80316E90-80316F24 0094+00 s=0 e=2 z=0  None .text      newSharedDisplayList__11J3DMaterialFUl                       */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void J3DMaterial::newSharedDisplayList(u32 param_0) {
	nofralloc
#include "asm/JSystem/J3DGraphBase/J3DMaterial/newSharedDisplayList__11J3DMaterialFUl.s"
}
#pragma pop


/* 80316F24-80316FB8 0094+00 s=0 e=2 z=0  None .text      newSingleSharedDisplayList__11J3DMaterialFUl                 */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void J3DMaterial::newSingleSharedDisplayList(u32 param_0) {
	nofralloc
#include "asm/JSystem/J3DGraphBase/J3DMaterial/newSingleSharedDisplayList__11J3DMaterialFUl.s"
}
#pragma pop


/* 80316FB8-80316FD8 0020+00 s=0 e=1 z=0  None .text      initialize__18J3DPatchedMaterialFv                           */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void J3DPatchedMaterial::initialize() {
	nofralloc
#include "asm/JSystem/J3DGraphBase/J3DMaterial/initialize__18J3DPatchedMaterialFv.s"
}
#pragma pop


/* 80316FD8-80316FDC 0004+00 s=1 e=0 z=0  None .text      makeDisplayList__18J3DPatchedMaterialFv                      */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void J3DPatchedMaterial::makeDisplayList() {
	nofralloc
#include "asm/JSystem/J3DGraphBase/J3DMaterial/makeDisplayList__18J3DPatchedMaterialFv.s"
}
#pragma pop


/* 80316FDC-80316FE0 0004+00 s=1 e=0 z=0  None .text      makeSharedDisplayList__18J3DPatchedMaterialFv                */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void J3DPatchedMaterial::makeSharedDisplayList() {
	nofralloc
#include "asm/JSystem/J3DGraphBase/J3DMaterial/makeSharedDisplayList__18J3DPatchedMaterialFv.s"
}
#pragma pop


/* 80316FE0-80316FFC 001C+00 s=1 e=0 z=0  None .text      load__18J3DPatchedMaterialFv                                 */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void J3DPatchedMaterial::load() {
	nofralloc
#include "asm/JSystem/J3DGraphBase/J3DMaterial/load__18J3DPatchedMaterialFv.s"
}
#pragma pop


/* 80316FFC-8031703C 0040+00 s=1 e=0 z=0  None .text      loadSharedDL__18J3DPatchedMaterialFv                         */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void J3DPatchedMaterial::loadSharedDL() {
	nofralloc
#include "asm/JSystem/J3DGraphBase/J3DMaterial/loadSharedDL__18J3DPatchedMaterialFv.s"
}
#pragma pop


/* 8031703C-80317040 0004+00 s=1 e=0 z=0  None .text      reset__18J3DPatchedMaterialFv                                */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void J3DPatchedMaterial::reset() {
	nofralloc
#include "asm/JSystem/J3DGraphBase/J3DMaterial/reset__18J3DPatchedMaterialFv.s"
}
#pragma pop


/* 80317040-80317044 0004+00 s=1 e=0 z=0  None .text      change__18J3DPatchedMaterialFv                               */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void J3DPatchedMaterial::change() {
	nofralloc
#include "asm/JSystem/J3DGraphBase/J3DMaterial/change__18J3DPatchedMaterialFv.s"
}
#pragma pop


/* 80317044-80317064 0020+00 s=0 e=1 z=0  None .text      initialize__17J3DLockedMaterialFv                            */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void J3DLockedMaterial::initialize() {
	nofralloc
#include "asm/JSystem/J3DGraphBase/J3DMaterial/initialize__17J3DLockedMaterialFv.s"
}
#pragma pop


/* 80317064-80317068 0004+00 s=1 e=0 z=0  None .text      makeDisplayList__17J3DLockedMaterialFv                       */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void J3DLockedMaterial::makeDisplayList() {
	nofralloc
#include "asm/JSystem/J3DGraphBase/J3DMaterial/makeDisplayList__17J3DLockedMaterialFv.s"
}
#pragma pop


/* 80317068-8031706C 0004+00 s=1 e=0 z=0  None .text      makeSharedDisplayList__17J3DLockedMaterialFv                 */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void J3DLockedMaterial::makeSharedDisplayList() {
	nofralloc
#include "asm/JSystem/J3DGraphBase/J3DMaterial/makeSharedDisplayList__17J3DLockedMaterialFv.s"
}
#pragma pop


/* 8031706C-80317088 001C+00 s=1 e=0 z=0  None .text      load__17J3DLockedMaterialFv                                  */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void J3DLockedMaterial::load() {
	nofralloc
#include "asm/JSystem/J3DGraphBase/J3DMaterial/load__17J3DLockedMaterialFv.s"
}
#pragma pop


/* 80317088-803170C8 0040+00 s=1 e=0 z=0  None .text      loadSharedDL__17J3DLockedMaterialFv                          */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void J3DLockedMaterial::loadSharedDL() {
	nofralloc
#include "asm/JSystem/J3DGraphBase/J3DMaterial/loadSharedDL__17J3DLockedMaterialFv.s"
}
#pragma pop


/* 803170C8-803170CC 0004+00 s=1 e=0 z=0  None .text      patch__17J3DLockedMaterialFv                                 */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void J3DLockedMaterial::patch() {
	nofralloc
#include "asm/JSystem/J3DGraphBase/J3DMaterial/patch__17J3DLockedMaterialFv.s"
}
#pragma pop


/* 803170CC-803170D0 0004+00 s=1 e=0 z=0  None .text      diff__17J3DLockedMaterialFUl                                 */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void J3DLockedMaterial::diff(u32 param_0) {
	nofralloc
#include "asm/JSystem/J3DGraphBase/J3DMaterial/diff__17J3DLockedMaterialFUl.s"
}
#pragma pop


/* 803170D0-803170D4 0004+00 s=1 e=0 z=0  None .text      calc__17J3DLockedMaterialFPA4_Cf                             */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void J3DLockedMaterial::calc(f32 const (* param_0)[4]) {
	nofralloc
#include "asm/JSystem/J3DGraphBase/J3DMaterial/calc__17J3DLockedMaterialFPA4_Cf.s"
}
#pragma pop


/* 803170D4-803170D8 0004+00 s=1 e=0 z=0  None .text      reset__17J3DLockedMaterialFv                                 */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void J3DLockedMaterial::reset() {
	nofralloc
#include "asm/JSystem/J3DGraphBase/J3DMaterial/reset__17J3DLockedMaterialFv.s"
}
#pragma pop


/* 803170D8-803170DC 0004+00 s=1 e=0 z=0  None .text      change__17J3DLockedMaterialFv                                */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void J3DLockedMaterial::change() {
	nofralloc
#include "asm/JSystem/J3DGraphBase/J3DMaterial/change__17J3DLockedMaterialFv.s"
}
#pragma pop


/* 803170DC-80317138 005C+00 s=0 e=1 z=0  None .text      __dt__21J3DColorBlockLightOffFv                              */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm J3DColorBlockLightOff::~J3DColorBlockLightOff() {
	nofralloc
#include "asm/JSystem/J3DGraphBase/J3DMaterial/__dt__21J3DColorBlockLightOffFv.s"
}
#pragma pop


/* 80317138-80317180 0048+00 s=1 e=0 z=0  None .text      __dt__13J3DColorBlockFv                                      */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm J3DColorBlock::~J3DColorBlock() {
	nofralloc
#include "asm/JSystem/J3DGraphBase/J3DMaterial/__dt__13J3DColorBlockFv.s"
}
#pragma pop


/* 80317180-803171DC 005C+00 s=0 e=1 z=0  None .text      __dt__21J3DTexGenBlockPatchedFv                              */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm J3DTexGenBlockPatched::~J3DTexGenBlockPatched() {
	nofralloc
#include "asm/JSystem/J3DGraphBase/J3DMaterial/__dt__21J3DTexGenBlockPatchedFv.s"
}
#pragma pop


/* 803171DC-80317224 0048+00 s=1 e=0 z=0  None .text      __dt__14J3DTexGenBlockFv                                     */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm J3DTexGenBlock::~J3DTexGenBlock() {
	nofralloc
#include "asm/JSystem/J3DGraphBase/J3DMaterial/__dt__14J3DTexGenBlockFv.s"
}
#pragma pop


/* 80317224-8031726C 0048+00 s=0 e=1 z=0  None .text      __dt__11J3DTevBlockFv                                        */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm J3DTevBlock::~J3DTevBlock() {
	nofralloc
#include "asm/JSystem/J3DGraphBase/J3DMaterial/__dt__11J3DTevBlockFv.s"
}
#pragma pop


/* 8031726C-803172B4 0048+00 s=1 e=0 z=0  None .text      __dt__11J3DIndBlockFv                                        */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm J3DIndBlock::~J3DIndBlock() {
	nofralloc
#include "asm/JSystem/J3DGraphBase/J3DMaterial/__dt__11J3DIndBlockFv.s"
}
#pragma pop


/* 803172B4-803172FC 0048+00 s=1 e=0 z=0  None .text      __dt__10J3DPEBlockFv                                         */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm J3DPEBlock::~J3DPEBlock() {
	nofralloc
#include "asm/JSystem/J3DGraphBase/J3DMaterial/__dt__10J3DPEBlockFv.s"
}
#pragma pop


/* 803172FC-80317304 0008+00 s=1 e=1 z=0  None .text      countDLSize__14J3DTexGenBlockFv                              */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void J3DTexGenBlock::countDLSize() {
	nofralloc
#include "asm/JSystem/J3DGraphBase/J3DMaterial/countDLSize__14J3DTexGenBlockFv.s"
}
#pragma pop


/* 80317304-8031730C 0008+00 s=1 e=1 z=0  None .text      countDLSize__13J3DColorBlockFv                               */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void J3DColorBlock::countDLSize() {
	nofralloc
#include "asm/JSystem/J3DGraphBase/J3DMaterial/countDLSize__13J3DColorBlockFv.s"
}
#pragma pop


/* 8031730C-80317314 0008+00 s=0 e=2 z=0  None .text      countDLSize__11J3DTevBlockFv                                 */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void J3DTevBlock::countDLSize() {
	nofralloc
#include "asm/JSystem/J3DGraphBase/J3DMaterial/countDLSize__11J3DTevBlockFv.s"
}
#pragma pop


/* 80317314-8031731C 0008+00 s=2 e=0 z=0  None .text      countDLSize__11J3DIndBlockFv                                 */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void J3DIndBlock::countDLSize() {
	nofralloc
#include "asm/JSystem/J3DGraphBase/J3DMaterial/countDLSize__11J3DIndBlockFv.s"
}
#pragma pop


/* 8031731C-80317324 0008+00 s=1 e=1 z=0  None .text      countDLSize__10J3DPEBlockFv                                  */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void J3DPEBlock::countDLSize() {
	nofralloc
#include "asm/JSystem/J3DGraphBase/J3DMaterial/countDLSize__10J3DPEBlockFv.s"
}
#pragma pop


/* 80317324-80317328 0004+00 s=1 e=1 z=0  None .text      load__13J3DColorBlockFv                                      */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void J3DColorBlock::load() {
	nofralloc
#include "asm/JSystem/J3DGraphBase/J3DMaterial/load__13J3DColorBlockFv.s"
}
#pragma pop


/* 80317328-80317330 0008+00 s=1 e=1 z=0  None .text      getCullMode__13J3DColorBlockCFv                              */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void J3DColorBlock::getCullMode() const {
	nofralloc
#include "asm/JSystem/J3DGraphBase/J3DMaterial/getCullMode__13J3DColorBlockCFv.s"
}
#pragma pop


/* 80317330-80317334 0004+00 s=0 e=2 z=0  None .text      load__11J3DTevBlockFv                                        */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void J3DTevBlock::load() {
	nofralloc
#include "asm/JSystem/J3DGraphBase/J3DMaterial/load__11J3DTevBlockFv.s"
}
#pragma pop


/* 80317334-8031733C 0008+00 s=1 e=2 z=0  None .text      getNBTScale__14J3DTexGenBlockFv                              */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void J3DTexGenBlock::getNBTScale() {
	nofralloc
#include "asm/JSystem/J3DGraphBase/J3DMaterial/getNBTScale__14J3DTexGenBlockFv.s"
}
#pragma pop


/* 8031733C-80317340 0004+00 s=1 e=1 z=0  None .text      patch__13J3DColorBlockFv                                     */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void J3DColorBlock::patch() {
	nofralloc
#include "asm/JSystem/J3DGraphBase/J3DMaterial/patch__13J3DColorBlockFv.s"
}
#pragma pop


/* 80317340-80317344 0004+00 s=1 e=1 z=0  None .text      diff__13J3DColorBlockFUl                                     */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void J3DColorBlock::diff(u32 param_0) {
	nofralloc
#include "asm/JSystem/J3DGraphBase/J3DMaterial/diff__13J3DColorBlockFUl.s"
}
#pragma pop


/* 80317344-80317348 0004+00 s=1 e=4 z=0  None .text      diff__10J3DPEBlockFUl                                        */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void J3DPEBlock::diff(u32 param_0) {
	nofralloc
#include "asm/JSystem/J3DGraphBase/J3DMaterial/diff__10J3DPEBlockFUl.s"
}
#pragma pop


/* 80317348-8031734C 0004+00 s=1 e=4 z=0  None .text      reset__10J3DPEBlockFP10J3DPEBlock                            */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void J3DPEBlock::reset(J3DPEBlock* param_0) {
	nofralloc
#include "asm/JSystem/J3DGraphBase/J3DMaterial/reset__10J3DPEBlockFP10J3DPEBlock.s"
}
#pragma pop


/* 8031734C-80317350 0004+00 s=1 e=0 z=0  None .text      reset__11J3DIndBlockFP11J3DIndBlock                          */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void J3DIndBlock::reset(J3DIndBlock* param_0) {
	nofralloc
#include "asm/JSystem/J3DGraphBase/J3DMaterial/reset__11J3DIndBlockFP11J3DIndBlock.s"
}
#pragma pop


/* 80317350-80317354 0004+00 s=0 e=1 z=0  None .text      reset__11J3DTevBlockFP11J3DTevBlock                          */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void J3DTevBlock::reset(J3DTevBlock* param_0) {
	nofralloc
#include "asm/JSystem/J3DGraphBase/J3DMaterial/reset__11J3DTevBlockFP11J3DTevBlock.s"
}
#pragma pop


/* 80317354-80317358 0004+00 s=1 e=1 z=0  None .text      reset__14J3DTexGenBlockFP14J3DTexGenBlock                    */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void J3DTexGenBlock::reset(J3DTexGenBlock* param_0) {
	nofralloc
#include "asm/JSystem/J3DGraphBase/J3DMaterial/reset__14J3DTexGenBlockFP14J3DTexGenBlock.s"
}
#pragma pop


/* 80317358-8031735C 0004+00 s=1 e=1 z=0  None .text      reset__13J3DColorBlockFP13J3DColorBlock                      */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void J3DColorBlock::reset(J3DColorBlock* param_0) {
	nofralloc
#include "asm/JSystem/J3DGraphBase/J3DMaterial/reset__13J3DColorBlockFP13J3DColorBlock.s"
}
#pragma pop


/* 8031735C-80317360 0004+00 s=1 e=5 z=0  None .text      diffFog__10J3DPEBlockFv                                      */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void J3DPEBlock::diffFog() {
	nofralloc
#include "asm/JSystem/J3DGraphBase/J3DMaterial/diffFog__10J3DPEBlockFv.s"
}
#pragma pop


/* 80317360-80317364 0004+00 s=1 e=4 z=0  None .text      diffBlend__10J3DPEBlockFv                                    */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void J3DPEBlock::diffBlend() {
	nofralloc
#include "asm/JSystem/J3DGraphBase/J3DMaterial/diffBlend__10J3DPEBlockFv.s"
}
#pragma pop


/* 80317364-80317368 0004+00 s=1 e=5 z=0  None .text      setFog__10J3DPEBlockFP6J3DFog                                */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void J3DPEBlock::setFog(J3DFog* param_0) {
	nofralloc
#include "asm/JSystem/J3DGraphBase/J3DMaterial/setFog__10J3DPEBlockFP6J3DFog.s"
}
#pragma pop


/* 80317368-8031736C 0004+00 s=1 e=5 z=0  None .text      setFog__10J3DPEBlockF6J3DFog                                 */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void J3DPEBlock::setFog(J3DFog param_0) {
	nofralloc
#include "asm/JSystem/J3DGraphBase/J3DMaterial/setFog__10J3DPEBlockF6J3DFog.s"
}
#pragma pop


/* 8031736C-80317370 0004+00 s=1 e=4 z=0  None .text      setAlphaComp__10J3DPEBlockFPC12J3DAlphaComp                  */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void J3DPEBlock::setAlphaComp(J3DAlphaComp const* param_0) {
	nofralloc
#include "asm/JSystem/J3DGraphBase/J3DMaterial/setAlphaComp__10J3DPEBlockFPC12J3DAlphaComp.s"
}
#pragma pop


/* 80317370-80317374 0004+00 s=1 e=4 z=0  None .text      setBlend__10J3DPEBlockFPC8J3DBlend                           */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void J3DPEBlock::setBlend(J3DBlend const* param_0) {
	nofralloc
#include "asm/JSystem/J3DGraphBase/J3DMaterial/setBlend__10J3DPEBlockFPC8J3DBlend.s"
}
#pragma pop


/* 80317374-80317378 0004+00 s=1 e=4 z=0  None .text      setZMode__10J3DPEBlockFPC8J3DZMode                           */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void J3DPEBlock::setZMode(J3DZMode const* param_0) {
	nofralloc
#include "asm/JSystem/J3DGraphBase/J3DMaterial/setZMode__10J3DPEBlockFPC8J3DZMode.s"
}
#pragma pop


/* 80317378-8031737C 0004+00 s=1 e=4 z=0  None .text      setZCompLoc__10J3DPEBlockFPCUc                               */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void J3DPEBlock::setZCompLoc(u8 const* param_0) {
	nofralloc
#include "asm/JSystem/J3DGraphBase/J3DMaterial/setZCompLoc__10J3DPEBlockFPCUc.s"
}
#pragma pop


/* 8031737C-80317380 0004+00 s=1 e=4 z=0  None .text      setDither__10J3DPEBlockFUc                                   */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void J3DPEBlock::setDither(u8 param_0) {
	nofralloc
#include "asm/JSystem/J3DGraphBase/J3DMaterial/setDither__10J3DPEBlockFUc.s"
}
#pragma pop


/* 80317380-80317384 0004+00 s=1 e=4 z=0  None .text      setDither__10J3DPEBlockFPCUc                                 */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void J3DPEBlock::setDither(u8 const* param_0) {
	nofralloc
#include "asm/JSystem/J3DGraphBase/J3DMaterial/setDither__10J3DPEBlockFPCUc.s"
}
#pragma pop


/* 80317384-8031738C 0008+00 s=1 e=4 z=0  None .text      getDither__10J3DPEBlockCFv                                   */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void J3DPEBlock::getDither() const {
	nofralloc
#include "asm/JSystem/J3DGraphBase/J3DMaterial/getDither__10J3DPEBlockCFv.s"
}
#pragma pop


/* 8031738C-80317394 0008+00 s=1 e=5 z=0  None .text      getFogOffset__10J3DPEBlockCFv                                */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void J3DPEBlock::getFogOffset() const {
	nofralloc
#include "asm/JSystem/J3DGraphBase/J3DMaterial/getFogOffset__10J3DPEBlockCFv.s"
}
#pragma pop


/* 80317394-80317398 0004+00 s=1 e=5 z=0  None .text      setFogOffset__10J3DPEBlockFUl                                */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void J3DPEBlock::setFogOffset(u32 param_0) {
	nofralloc
#include "asm/JSystem/J3DGraphBase/J3DMaterial/setFogOffset__10J3DPEBlockFUl.s"
}
#pragma pop


/* 80317398-8031739C 0004+00 s=1 e=0 z=0  None .text      diff__15J3DIndBlockNullFUl                                   */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void J3DIndBlockNull::diff(u32 param_0) {
	nofralloc
#include "asm/JSystem/J3DGraphBase/J3DMaterial/diff__15J3DIndBlockNullFUl.s"
}
#pragma pop


/* 8031739C-803173A0 0004+00 s=1 e=0 z=0  None .text      load__15J3DIndBlockNullFv                                    */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void J3DIndBlockNull::load() {
	nofralloc
#include "asm/JSystem/J3DGraphBase/J3DMaterial/load__15J3DIndBlockNullFv.s"
}
#pragma pop


/* 803173A0-803173A4 0004+00 s=1 e=0 z=0  None .text      reset__15J3DIndBlockNullFP11J3DIndBlock                      */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void J3DIndBlockNull::reset(J3DIndBlock* param_0) {
	nofralloc
#include "asm/JSystem/J3DGraphBase/J3DMaterial/reset__15J3DIndBlockNullFP11J3DIndBlock.s"
}
#pragma pop


/* 803173A4-803173B0 000C+00 s=1 e=0 z=0  None .text      getType__15J3DIndBlockNullFv                                 */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void J3DIndBlockNull::getType() {
	nofralloc
#include "asm/JSystem/J3DGraphBase/J3DMaterial/getType__15J3DIndBlockNullFv.s"
}
#pragma pop


/* 803173B0-8031740C 005C+00 s=1 e=0 z=0  None .text      __dt__15J3DIndBlockNullFv                                    */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm J3DIndBlockNull::~J3DIndBlockNull() {
	nofralloc
#include "asm/JSystem/J3DGraphBase/J3DMaterial/__dt__15J3DIndBlockNullFv.s"
}
#pragma pop


/* 8031740C-80317410 0004+00 s=2 e=0 z=0  None .text      setIndTexOrder__11J3DIndBlockFUlPC14J3DIndTexOrder           */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void J3DIndBlock::setIndTexOrder(u32 param_0, J3DIndTexOrder const* param_1) {
	nofralloc
#include "asm/JSystem/J3DGraphBase/J3DMaterial/setIndTexOrder__11J3DIndBlockFUlPC14J3DIndTexOrder.s"
}
#pragma pop


/* 80317410-80317414 0004+00 s=2 e=0 z=0  None .text      setIndTexOrder__11J3DIndBlockFUl14J3DIndTexOrder             */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void J3DIndBlock::setIndTexOrder(u32 param_0, J3DIndTexOrder param_1) {
	nofralloc
#include "asm/JSystem/J3DGraphBase/J3DMaterial/setIndTexOrder__11J3DIndBlockFUl14J3DIndTexOrder.s"
}
#pragma pop


/* 80317414-80317418 0004+00 s=2 e=0 z=0  None .text      setIndTexMtx__11J3DIndBlockFUlPC12J3DIndTexMtx               */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void J3DIndBlock::setIndTexMtx(u32 param_0, J3DIndTexMtx const* param_1) {
	nofralloc
#include "asm/JSystem/J3DGraphBase/J3DMaterial/setIndTexMtx__11J3DIndBlockFUlPC12J3DIndTexMtx.s"
}
#pragma pop


/* 80317418-8031741C 0004+00 s=2 e=0 z=0  None .text      setIndTexCoordScale__11J3DIndBlockFUlPC19J3DIndTexCoordScale */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void J3DIndBlock::setIndTexCoordScale(u32 param_0, J3DIndTexCoordScale const* param_1) {
	nofralloc
#include "asm/JSystem/J3DGraphBase/J3DMaterial/setIndTexCoordScale__11J3DIndBlockFUlPC19J3DIndTexCoordScale.s"
}
#pragma pop


/* 8031741C-80317420 0004+00 s=1 e=1 z=0  None .text      setTexGenNum__14J3DTexGenBlockFPCUl                          */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void J3DTexGenBlock::setTexGenNum(u32 const* param_0) {
	nofralloc
#include "asm/JSystem/J3DGraphBase/J3DMaterial/setTexGenNum__14J3DTexGenBlockFPCUl.s"
}
#pragma pop


/* 80317420-80317424 0004+00 s=1 e=2 z=0  None .text      setNBTScale__14J3DTexGenBlockF11J3DNBTScale                  */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void J3DTexGenBlock::setNBTScale(J3DNBTScale param_0) {
	nofralloc
#include "asm/JSystem/J3DGraphBase/J3DMaterial/setNBTScale__14J3DTexGenBlockF11J3DNBTScale.s"
}
#pragma pop


/* 80317424-80317428 0004+00 s=1 e=2 z=0  None .text      setNBTScale__14J3DTexGenBlockFPC11J3DNBTScale                */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void J3DTexGenBlock::setNBTScale(J3DNBTScale const* param_0) {
	nofralloc
#include "asm/JSystem/J3DGraphBase/J3DMaterial/setNBTScale__14J3DTexGenBlockFPC11J3DNBTScale.s"
}
#pragma pop


/* 80317428-80317430 0008+00 s=1 e=1 z=0  None .text      getTexMtxOffset__14J3DTexGenBlockCFv                         */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void J3DTexGenBlock::getTexMtxOffset() const {
	nofralloc
#include "asm/JSystem/J3DGraphBase/J3DMaterial/getTexMtxOffset__14J3DTexGenBlockCFv.s"
}
#pragma pop


/* 80317430-80317434 0004+00 s=1 e=1 z=0  None .text      setTexMtxOffset__14J3DTexGenBlockFUl                         */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void J3DTexGenBlock::setTexMtxOffset(u32 param_0) {
	nofralloc
#include "asm/JSystem/J3DGraphBase/J3DMaterial/setTexMtxOffset__14J3DTexGenBlockFUl.s"
}
#pragma pop


/* 80317434-80317438 0004+00 s=1 e=1 z=0  None .text      patchMatColor__13J3DColorBlockFv                             */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void J3DColorBlock::patchMatColor() {
	nofralloc
#include "asm/JSystem/J3DGraphBase/J3DMaterial/patchMatColor__13J3DColorBlockFv.s"
}
#pragma pop


/* 80317438-8031743C 0004+00 s=1 e=3 z=0  None .text      diffAmbColor__13J3DColorBlockFv                              */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void J3DColorBlock::diffAmbColor() {
	nofralloc
#include "asm/JSystem/J3DGraphBase/J3DMaterial/diffAmbColor__13J3DColorBlockFv.s"
}
#pragma pop


/* 8031743C-80317440 0004+00 s=1 e=1 z=0  None .text      diffMatColor__13J3DColorBlockFv                              */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void J3DColorBlock::diffMatColor() {
	nofralloc
#include "asm/JSystem/J3DGraphBase/J3DMaterial/diffMatColor__13J3DColorBlockFv.s"
}
#pragma pop


/* 80317440-80317444 0004+00 s=1 e=1 z=0  None .text      diffColorChan__13J3DColorBlockFv                             */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void J3DColorBlock::diffColorChan() {
	nofralloc
#include "asm/JSystem/J3DGraphBase/J3DMaterial/diffColorChan__13J3DColorBlockFv.s"
}
#pragma pop


/* 80317444-80317448 0004+00 s=1 e=3 z=0  None .text      diffLightObj__13J3DColorBlockFUl                             */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void J3DColorBlock::diffLightObj(u32 param_0) {
	nofralloc
#include "asm/JSystem/J3DGraphBase/J3DMaterial/diffLightObj__13J3DColorBlockFUl.s"
}
#pragma pop


/* 80317448-8031744C 0004+00 s=1 e=1 z=0  None .text      setMatColor__13J3DColorBlockFUlPC10J3DGXColor                */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void J3DColorBlock::setMatColor(u32 param_0, J3DGXColor const* param_1) {
	nofralloc
#include "asm/JSystem/J3DGraphBase/J3DMaterial/setMatColor__13J3DColorBlockFUlPC10J3DGXColor.s"
}
#pragma pop


/* 8031744C-80317450 0004+00 s=1 e=1 z=0  None .text      setColorChanNum__13J3DColorBlockFPCUc                        */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void J3DColorBlock::setColorChanNum(u8 const* param_0) {
	nofralloc
#include "asm/JSystem/J3DGraphBase/J3DMaterial/setColorChanNum__13J3DColorBlockFPCUc.s"
}
#pragma pop


/* 80317450-80317454 0004+00 s=1 e=1 z=0  None .text      setColorChan__13J3DColorBlockFUlPC12J3DColorChan             */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void J3DColorBlock::setColorChan(u32 param_0, J3DColorChan const* param_1) {
	nofralloc
#include "asm/JSystem/J3DGraphBase/J3DMaterial/setColorChan__13J3DColorBlockFUlPC12J3DColorChan.s"
}
#pragma pop


/* 80317454-8031745C 0008+00 s=1 e=3 z=0  None .text      getLight__13J3DColorBlockFUl                                 */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void J3DColorBlock::getLight(u32 param_0) {
	nofralloc
#include "asm/JSystem/J3DGraphBase/J3DMaterial/getLight__13J3DColorBlockFUl.s"
}
#pragma pop


/* 8031745C-80317460 0004+00 s=1 e=1 z=0  None .text      setCullMode__13J3DColorBlockFUc                              */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void J3DColorBlock::setCullMode(u8 param_0) {
	nofralloc
#include "asm/JSystem/J3DGraphBase/J3DMaterial/setCullMode__13J3DColorBlockFUc.s"
}
#pragma pop


/* 80317460-80317464 0004+00 s=1 e=1 z=0  None .text      setCullMode__13J3DColorBlockFPCUc                            */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void J3DColorBlock::setCullMode(u8 const* param_0) {
	nofralloc
#include "asm/JSystem/J3DGraphBase/J3DMaterial/setCullMode__13J3DColorBlockFPCUc.s"
}
#pragma pop


/* 80317464-8031746C 0008+00 s=1 e=1 z=0  None .text      getMatColorOffset__13J3DColorBlockCFv                        */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void J3DColorBlock::getMatColorOffset() const {
	nofralloc
#include "asm/JSystem/J3DGraphBase/J3DMaterial/getMatColorOffset__13J3DColorBlockCFv.s"
}
#pragma pop


/* 8031746C-80317474 0008+00 s=1 e=1 z=0  None .text      getColorChanOffset__13J3DColorBlockCFv                       */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void J3DColorBlock::getColorChanOffset() const {
	nofralloc
#include "asm/JSystem/J3DGraphBase/J3DMaterial/getColorChanOffset__13J3DColorBlockCFv.s"
}
#pragma pop


/* 80317474-80317478 0004+00 s=1 e=1 z=0  None .text      setMatColorOffset__13J3DColorBlockFUl                        */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void J3DColorBlock::setMatColorOffset(u32 param_0) {
	nofralloc
#include "asm/JSystem/J3DGraphBase/J3DMaterial/setMatColorOffset__13J3DColorBlockFUl.s"
}
#pragma pop


/* 80317478-8031747C 0004+00 s=1 e=1 z=0  None .text      setColorChanOffset__13J3DColorBlockFUl                       */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void J3DColorBlock::setColorChanOffset(u32 param_0) {
	nofralloc
#include "asm/JSystem/J3DGraphBase/J3DMaterial/setColorChanOffset__13J3DColorBlockFUl.s"
}
#pragma pop


