//
// Generated By: dol2asm
// Translation Unit: J3DMaterial
//

#include "JSystem/J3DGraphBase/J3DMaterial.h"
#include "dol2asm.h"
#include "dolphin/types.h"

//
// Types:
//

struct _GXCullMode {};

struct J3DZMode {};

struct J3DTexMtx {};

struct J3DTexGenBlockPatched {
    /* 80317180 */ ~J3DTexGenBlockPatched();
    /* 80317644 */ void initialize();
};

struct J3DTexGenBlockBasic {
    /* 803176A4 */ void initialize();
};

struct J3DTexGenBlock4 {
    /* 80317674 */ void initialize();
};

struct J3DTexCoord {
    /* 8000E464 */ J3DTexCoord();
};

struct J3DNBTScale {};

struct J3DTexGenBlock {
    /* 8000DFD8 */ bool getTexMtx(u32);
    /* 8000DFE0 */ bool getTexCoord(u32);
    /* 8000DFE8 */ bool getTexGenNum() const;
    /* 8000E0CC */ void setTexCoord(u32, J3DTexCoord const*);
    /* 8031741C */ void setTexGenNum(u32 const*);
    /* 8000E0D0 */ void setTexGenNum(u32);
    /* 8003AB2C */ void setTexMtx(u32, J3DTexMtx*);
    /* 803171DC */ ~J3DTexGenBlock();
    /* 803172FC */ bool countDLSize();
    /* 80317334 */ bool getNBTScale();
    /* 80317354 */ void reset(J3DTexGenBlock*);
    /* 80317420 */ void setNBTScale(J3DNBTScale);
    /* 80317424 */ void setNBTScale(J3DNBTScale const*);
    /* 80317428 */ bool getTexMtxOffset() const;
    /* 80317430 */ void setTexMtxOffset(u32);
};

struct J3DTevSwapModeTable {
    /* 8000E134 */ J3DTevSwapModeTable();
};

struct J3DTevStage {
    /* 8000E230 */ J3DTevStage();
};

struct J3DTevOrder {
    /* 8000E140 */ J3DTevOrder();
};

struct J3DTevBlock4 {
    /* 803178EC */ void initialize();
};

struct J3DTevBlock2 {
    /* 80317810 */ void initialize();
};

struct J3DTevBlock16 {
    /* 80317A00 */ void initialize();
};

struct J3DTevBlock1 {
    /* 803177E8 */ void initialize();
};

struct J3DTevBlock {
    /* 80317224 */ ~J3DTevBlock();
    /* 8031730C */ bool countDLSize();
    /* 80317330 */ void load();
    /* 80317350 */ void reset(J3DTevBlock*);
};

struct J3DPatchedMaterial {
    /* 80316FB8 */ void initialize();
    /* 80316FD8 */ void makeDisplayList();
    /* 80316FDC */ void makeSharedDisplayList();
    /* 80316FE0 */ void load();
    /* 80316FFC */ void loadSharedDL();
    /* 8031703C */ void reset();
    /* 80317040 */ void change();
};

struct J3DPEBlockFull {
    /* 80317B58 */ void initialize();
};

struct J3DPEBlockFogOff {
    /* 80317B34 */ void initialize();
};

struct J3DAlphaComp {};

struct J3DFog {};

struct J3DBlend {};

struct J3DPEBlock {
    /* 8000DBCC */ void patch();
    /* 8000DF3C */ bool getZCompLoc() const;
    /* 8000DF44 */ bool getZMode();
    /* 8000DF4C */ bool getBlend();
    /* 8000DF54 */ bool getAlphaComp();
    /* 8000DF5C */ bool getFog();
    /* 8000E010 */ void setZCompLoc(u8);
    /* 80317378 */ void setZCompLoc(u8 const*);
    /* 8000E014 */ void setZMode(J3DZMode);
    /* 80317374 */ void setZMode(J3DZMode const*);
    /* 8000E018 */ void setBlend(J3DBlend const&);
    /* 80317370 */ void setBlend(J3DBlend const*);
    /* 8000E01C */ void setAlphaComp(J3DAlphaComp const&);
    /* 8031736C */ void setAlphaComp(J3DAlphaComp const*);
    /* 803172B4 */ ~J3DPEBlock();
    /* 8031731C */ bool countDLSize();
    /* 80317344 */ void diff(u32);
    /* 80317348 */ void reset(J3DPEBlock*);
    /* 8031735C */ void diffFog();
    /* 80317360 */ void diffBlend();
    /* 80317364 */ void setFog(J3DFog*);
    /* 80317368 */ void setFog(J3DFog);
    /* 80317380 */ void setDither(u8 const*);
    /* 8031737C */ void setDither(u8);
    /* 80317384 */ bool getDither() const;
    /* 8031738C */ bool getFogOffset() const;
    /* 80317394 */ void setFogOffset(u32);
};

struct J3DDisplayListObj {
    /* 80312488 */ void newDisplayList(u32);
    /* 80312508 */ void newSingleDisplayList(u32);
    /* 80312618 */ void callDL() const;
    /* 80312644 */ void beginDL();
    /* 80312698 */ void endDL();
    /* 803126F4 */ void beginPatch();
    /* 80312714 */ void endPatch();
};

struct J3DMaterial {
    /* 803157A0 */ void createColorBlock(u32);
    /* 803159A0 */ void createTexGenBlock(u32);
    /* 80315B04 */ void createTevBlock(int);
    /* 80315E78 */ void createIndBlock(int);
    /* 80315F60 */ void createPEBlock(u32, u32);
    /* 80316100 */ void calcSizeColorBlock(u32);
    /* 80316150 */ void calcSizeTexGenBlock(u32);
    /* 8031617C */ void calcSizeTevBlock(int);
    /* 803161C4 */ void calcSizeIndBlock(int);
    /* 803161D8 */ void calcSizePEBlock(u32, u32);
    /* 80316240 */ void initialize();
    /* 80316290 */ void countDLSize();
    /* 80316344 */ void makeDisplayList_private(J3DDisplayListObj*);
    /* 80316620 */ void makeDisplayList();
    /* 80316668 */ void makeSharedDisplayList();
    /* 8031668C */ void load();
    /* 803166DC */ void loadSharedDL();
    /* 80316740 */ void patch();
    /* 803167D8 */ void diff(u32);
    /* 803169DC */ void calc(f32 const (*)[4]);
    /* 80316A54 */ void calcDiffTexMtx(f32 const (*)[4]);
    /* 80316AB0 */ void setCurrentMtx();
    /* 80316AC8 */ void calcCurrentMtx();
    /* 80316D68 */ void copy(J3DMaterial*);
    /* 80316E14 */ void reset();
    /* 80316E70 */ void change();
    /* 80316E90 */ void newSharedDisplayList(u32);
    /* 80316F24 */ void newSingleSharedDisplayList(u32);
};

struct J3DMatPacket {
    /* 80312A24 */ void beginDiff();
    /* 80312A4C */ void endDiff();
};

struct J3DLockedMaterial {
    /* 80317044 */ void initialize();
    /* 80317064 */ void makeDisplayList();
    /* 80317068 */ void makeSharedDisplayList();
    /* 8031706C */ void load();
    /* 80317088 */ void loadSharedDL();
    /* 803170C8 */ void patch();
    /* 803170CC */ void diff(u32);
    /* 803170D0 */ void calc(f32 const (*)[4]);
    /* 803170D4 */ void reset();
    /* 803170D8 */ void change();
};

struct J3DLightObj {};

struct J3DIndTexOrder {
    /* 8000E128 */ J3DIndTexOrder();
};

struct J3DIndTexMtx {
    /* 8000E064 */ ~J3DIndTexMtx();
    /* 8000E0F0 */ J3DIndTexMtx();
};

struct J3DIndTexCoordScale {
    /* 8000E024 */ ~J3DIndTexCoordScale();
    /* 8000E0E4 */ J3DIndTexCoordScale();
};

struct J3DIndTevStage {
    /* 8000E14C */ J3DIndTevStage();
};

struct J3DIndBlock {
    /* 8000DF64 */ bool getIndTexCoordScale(u32);
    /* 8000DF6C */ bool getIndTexMtx(u32);
    /* 8000DF74 */ bool getIndTexOrder(u32);
    /* 8000DF7C */ bool getIndTexStageNum() const;
    /* 8000E020 */ void setIndTexCoordScale(u32, J3DIndTexCoordScale);
    /* 80317418 */ void setIndTexCoordScale(u32, J3DIndTexCoordScale const*);
    /* 8000E060 */ void setIndTexMtx(u32, J3DIndTexMtx);
    /* 80317414 */ void setIndTexMtx(u32, J3DIndTexMtx const*);
    /* 8000E0A0 */ void setIndTexStageNum(u8);
    /* 8031726C */ ~J3DIndBlock();
    /* 80317314 */ bool countDLSize();
    /* 8031734C */ void reset(J3DIndBlock*);
    /* 8031740C */ void setIndTexOrder(u32, J3DIndTexOrder const*);
    /* 80317410 */ void setIndTexOrder(u32, J3DIndTexOrder);
};

struct J3DIndBlockNull {
    /* 80317398 */ void diff(u32);
    /* 8031739C */ void load();
    /* 803173A0 */ void reset(J3DIndBlock*);
    /* 803173A4 */ void getType();
    /* 803173B0 */ ~J3DIndBlockNull();
};

struct J3DIndBlockFull {
    /* 80317B28 */ void initialize();
};

struct J3DGXColorS10 {
    /* 8000E460 */ J3DGXColorS10();
};

struct J3DGXColor {
    /* 8000E538 */ J3DGXColor();
};

struct J3DFogInfo {
    /* 80325800 */ void operator=(J3DFogInfo const&);
};

struct J3DColorChan {
    /* 8000E47C */ J3DColorChan();
};

struct J3DColorBlockLightOn {
    /* 80317580 */ void initialize();
};

struct J3DColorBlockLightOff {
    /* 803170DC */ ~J3DColorBlockLightOff();
    /* 8031747C */ void initialize();
};

struct J3DColorBlockAmbientOn {
    /* 803174DC */ void initialize();
};

struct J3DColorBlock {
    /* 8000DBD0 */ void patchLight();
    /* 8000DFF0 */ bool getAmbColor(u32);
    /* 8000DFF8 */ bool getColorChan(u32);
    /* 8000E000 */ bool getMatColor(u32);
    /* 8000E008 */ bool getColorChanNum() const;
    /* 801A4C0C */ void setAmbColor(u32, J3DGXColor const*);
    /* 8000E0D4 */ void setAmbColor(u32, J3DGXColor);
    /* 80317450 */ void setColorChan(u32, J3DColorChan const*);
    /* 8000E0D8 */ void setColorChan(u32, J3DColorChan const&);
    /* 80317448 */ void setMatColor(u32, J3DGXColor const*);
    /* 8000E0DC */ void setMatColor(u32, J3DGXColor);
    /* 8031744C */ void setColorChanNum(u8 const*);
    /* 8000E0E0 */ void setColorChanNum(u8);
    /* 801A4C08 */ void setLight(u32, J3DLightObj*);
    /* 80317138 */ ~J3DColorBlock();
    /* 80317304 */ bool countDLSize();
    /* 80317324 */ void load();
    /* 80317328 */ s32 getCullMode() const;
    /* 8031733C */ void patch();
    /* 80317340 */ void diff(u32);
    /* 80317358 */ void reset(J3DColorBlock*);
    /* 80317434 */ void patchMatColor();
    /* 80317438 */ void diffAmbColor();
    /* 8031743C */ void diffMatColor();
    /* 80317440 */ void diffColorChan();
    /* 80317444 */ void diffLightObj(u32);
    /* 80317454 */ bool getLight(u32);
    /* 8031745C */ void setCullMode(u8);
    /* 80317460 */ void setCullMode(u8 const*);
    /* 80317464 */ bool getMatColorOffset() const;
    /* 8031746C */ bool getColorChanOffset() const;
    /* 80317474 */ void setMatColorOffset(u32);
    /* 80317478 */ void setColorChanOffset(u32);
};

//
// Forward References:
//

extern "C" extern void* __vt__17J3DLockedMaterial[12];
extern "C" extern void* __vt__18J3DPatchedMaterial[12];
extern "C" extern void* __vt__11J3DMaterial[12];
extern "C" extern void* __vt__10J3DPEBlock[31];
extern "C" extern void* __vt__15J3DIndBlockNull[19];
extern "C" extern void* __vt__11J3DIndBlock[19];
extern "C" extern void* __vt__14J3DTexGenBlock[27];
extern "C" extern void* __vt__13J3DColorBlock[36];

extern "C" void createColorBlock__11J3DMaterialFUl();
extern "C" void createTexGenBlock__11J3DMaterialFUl();
extern "C" void createTevBlock__11J3DMaterialFi();
extern "C" void createIndBlock__11J3DMaterialFi();
extern "C" void createPEBlock__11J3DMaterialFUlUl();
extern "C" void calcSizeColorBlock__11J3DMaterialFUl();
extern "C" void calcSizeTexGenBlock__11J3DMaterialFUl();
extern "C" void calcSizeTevBlock__11J3DMaterialFi();
extern "C" void calcSizeIndBlock__11J3DMaterialFi();
extern "C" void calcSizePEBlock__11J3DMaterialFUlUl();
extern "C" void initialize__11J3DMaterialFv();
extern "C" void countDLSize__11J3DMaterialFv();
extern "C" void makeDisplayList_private__11J3DMaterialFP17J3DDisplayListObj();
extern "C" void makeDisplayList__11J3DMaterialFv();
extern "C" void makeSharedDisplayList__11J3DMaterialFv();
extern "C" void load__11J3DMaterialFv();
extern "C" void loadSharedDL__11J3DMaterialFv();
extern "C" void patch__11J3DMaterialFv();
extern "C" void diff__11J3DMaterialFUl();
extern "C" void calc__11J3DMaterialFPA4_Cf();
extern "C" void calcDiffTexMtx__11J3DMaterialFPA4_Cf();
extern "C" void setCurrentMtx__11J3DMaterialFv();
extern "C" void calcCurrentMtx__11J3DMaterialFv();
extern "C" void copy__11J3DMaterialFP11J3DMaterial();
extern "C" void reset__11J3DMaterialFv();
extern "C" void change__11J3DMaterialFv();
extern "C" void newSharedDisplayList__11J3DMaterialFUl();
extern "C" void newSingleSharedDisplayList__11J3DMaterialFUl();
extern "C" void initialize__18J3DPatchedMaterialFv();
extern "C" void makeDisplayList__18J3DPatchedMaterialFv();
extern "C" void makeSharedDisplayList__18J3DPatchedMaterialFv();
extern "C" void load__18J3DPatchedMaterialFv();
extern "C" void loadSharedDL__18J3DPatchedMaterialFv();
extern "C" void reset__18J3DPatchedMaterialFv();
extern "C" void change__18J3DPatchedMaterialFv();
extern "C" void initialize__17J3DLockedMaterialFv();
extern "C" void makeDisplayList__17J3DLockedMaterialFv();
extern "C" void makeSharedDisplayList__17J3DLockedMaterialFv();
extern "C" void load__17J3DLockedMaterialFv();
extern "C" void loadSharedDL__17J3DLockedMaterialFv();
extern "C" void patch__17J3DLockedMaterialFv();
extern "C" void diff__17J3DLockedMaterialFUl();
extern "C" void calc__17J3DLockedMaterialFPA4_Cf();
extern "C" void reset__17J3DLockedMaterialFv();
extern "C" void change__17J3DLockedMaterialFv();
extern "C" void __dt__21J3DColorBlockLightOffFv();
extern "C" void __dt__13J3DColorBlockFv();
extern "C" void __dt__21J3DTexGenBlockPatchedFv();
extern "C" void __dt__14J3DTexGenBlockFv();
extern "C" void __dt__11J3DTevBlockFv();
extern "C" void __dt__11J3DIndBlockFv();
extern "C" void __dt__10J3DPEBlockFv();
extern "C" bool countDLSize__14J3DTexGenBlockFv();
extern "C" bool countDLSize__13J3DColorBlockFv();
extern "C" bool countDLSize__11J3DTevBlockFv();
extern "C" bool countDLSize__11J3DIndBlockFv();
extern "C" bool countDLSize__10J3DPEBlockFv();
extern "C" void load__13J3DColorBlockFv();
extern "C" s32 getCullMode__13J3DColorBlockCFv();
extern "C" void load__11J3DTevBlockFv();
extern "C" bool getNBTScale__14J3DTexGenBlockFv();
extern "C" void patch__13J3DColorBlockFv();
extern "C" void diff__13J3DColorBlockFUl();
extern "C" void diff__10J3DPEBlockFUl();
extern "C" void reset__10J3DPEBlockFP10J3DPEBlock();
extern "C" void reset__11J3DIndBlockFP11J3DIndBlock();
extern "C" void reset__11J3DTevBlockFP11J3DTevBlock();
extern "C" void reset__14J3DTexGenBlockFP14J3DTexGenBlock();
extern "C" void reset__13J3DColorBlockFP13J3DColorBlock();
extern "C" void diffFog__10J3DPEBlockFv();
extern "C" void diffBlend__10J3DPEBlockFv();
extern "C" void setFog__10J3DPEBlockFP6J3DFog();
extern "C" void setFog__10J3DPEBlockF6J3DFog();
extern "C" void setAlphaComp__10J3DPEBlockFPC12J3DAlphaComp();
extern "C" void setBlend__10J3DPEBlockFPC8J3DBlend();
extern "C" void setZMode__10J3DPEBlockFPC8J3DZMode();
extern "C" void setZCompLoc__10J3DPEBlockFPCUc();
extern "C" void setDither__10J3DPEBlockFUc();
extern "C" void setDither__10J3DPEBlockFPCUc();
extern "C" bool getDither__10J3DPEBlockCFv();
extern "C" bool getFogOffset__10J3DPEBlockCFv();
extern "C" void setFogOffset__10J3DPEBlockFUl();
extern "C" void diff__15J3DIndBlockNullFUl();
extern "C" void load__15J3DIndBlockNullFv();
extern "C" void reset__15J3DIndBlockNullFP11J3DIndBlock();
extern "C" void getType__15J3DIndBlockNullFv();
extern "C" void __dt__15J3DIndBlockNullFv();
extern "C" void setIndTexOrder__11J3DIndBlockFUlPC14J3DIndTexOrder();
extern "C" void setIndTexOrder__11J3DIndBlockFUl14J3DIndTexOrder();
extern "C" void setIndTexMtx__11J3DIndBlockFUlPC12J3DIndTexMtx();
extern "C" void setIndTexCoordScale__11J3DIndBlockFUlPC19J3DIndTexCoordScale();
extern "C" void setTexGenNum__14J3DTexGenBlockFPCUl();
extern "C" void setNBTScale__14J3DTexGenBlockF11J3DNBTScale();
extern "C" void setNBTScale__14J3DTexGenBlockFPC11J3DNBTScale();
extern "C" bool getTexMtxOffset__14J3DTexGenBlockCFv();
extern "C" void setTexMtxOffset__14J3DTexGenBlockFUl();
extern "C" void patchMatColor__13J3DColorBlockFv();
extern "C" void diffAmbColor__13J3DColorBlockFv();
extern "C" void diffMatColor__13J3DColorBlockFv();
extern "C" void diffColorChan__13J3DColorBlockFv();
extern "C" void diffLightObj__13J3DColorBlockFUl();
extern "C" void setMatColor__13J3DColorBlockFUlPC10J3DGXColor();
extern "C" void setColorChanNum__13J3DColorBlockFPCUc();
extern "C" void setColorChan__13J3DColorBlockFUlPC12J3DColorChan();
extern "C" bool getLight__13J3DColorBlockFUl();
extern "C" void setCullMode__13J3DColorBlockFUc();
extern "C" void setCullMode__13J3DColorBlockFPCUc();
extern "C" bool getMatColorOffset__13J3DColorBlockCFv();
extern "C" bool getColorChanOffset__13J3DColorBlockCFv();
extern "C" void setMatColorOffset__13J3DColorBlockFUl();
extern "C" void setColorChanOffset__13J3DColorBlockFUl();
extern "C" extern void* __vt__17J3DLockedMaterial[12];
extern "C" extern void* __vt__18J3DPatchedMaterial[12];
extern "C" extern void* __vt__11J3DMaterial[12];
extern "C" extern void* __vt__10J3DPEBlock[31];
extern "C" extern void* __vt__15J3DIndBlockNull[19];
extern "C" extern void* __vt__11J3DIndBlock[19];
extern "C" extern void* __vt__14J3DTexGenBlock[27];
extern "C" extern void* __vt__13J3DColorBlock[36];

//
// External References:
//

void* operator new(u32);
void operator delete(void*);
void J3DGDSetGenMode(u8, u8, u8, u8, _GXCullMode);
void J3DGDSetGenMode_3Param(u8, u8, u8);
void loadNBTScale(J3DNBTScale&);
extern "C" extern u8 const j3dDefaultFogInfo[44];
extern "C" extern u8 const j3dDefaultNBTScaleInfo[16];
extern "C" extern void* __vt__14J3DPEBlockFull[31];
extern "C" extern void* __vt__16J3DPEBlockFogOff[31];
extern "C" extern void* __vt__13J3DTevBlock16[55];
extern "C" extern void* __vt__12J3DTevBlock4[55];
extern "C" extern void* __vt__12J3DTevBlock2[55];
extern "C" extern void* __vt__12J3DTevBlock1[55];
extern "C" extern void* __vt__19J3DTexGenBlockBasic[27];
extern "C" extern void* __vt__15J3DTexGenBlock4[27];
extern "C" extern void* __vt__21J3DTexGenBlockPatched[27];
extern "C" extern void* __vt__20J3DColorBlockLightOn[36];
extern "C" extern void* __vt__22J3DColorBlockAmbientOn[36];
extern "C" extern void* __vt__13J3DPEBlockXlu[31];
extern "C" extern void* __vt__17J3DPEBlockTexEdge[31];
extern "C" extern void* __vt__13J3DPEBlockOpa[31];
extern "C" extern void* __vt__15J3DIndBlockFull[19];
extern "C" extern void* __vt__11J3DTevBlock[55];
extern "C" extern void* __vt__21J3DColorBlockLightOff[36 + 1 /* padding */];
extern "C" extern u8 j3dSys[284];
extern "C" extern u8 __GDCurrentDL[4];
extern "C" extern u32 j3dDefaultBlendInfo;
extern "C" extern u8 struct_804563F8[4];
extern "C" extern u16 j3dDefaultZModeID[1 + 1 /* padding */];

extern "C" void patch__10J3DPEBlockFv();
extern "C" void patchLight__13J3DColorBlockFv();
extern "C" bool getZCompLoc__10J3DPEBlockCFv();
extern "C" bool getZMode__10J3DPEBlockFv();
extern "C" bool getBlend__10J3DPEBlockFv();
extern "C" bool getAlphaComp__10J3DPEBlockFv();
extern "C" bool getFog__10J3DPEBlockFv();
extern "C" bool getIndTexCoordScale__11J3DIndBlockFUl();
extern "C" bool getIndTexMtx__11J3DIndBlockFUl();
extern "C" bool getIndTexOrder__11J3DIndBlockFUl();
extern "C" bool getIndTexStageNum__11J3DIndBlockCFv();
extern "C" bool getTexMtx__14J3DTexGenBlockFUl();
extern "C" bool getTexCoord__14J3DTexGenBlockFUl();
extern "C" bool getTexGenNum__14J3DTexGenBlockCFv();
extern "C" bool getAmbColor__13J3DColorBlockFUl();
extern "C" bool getColorChan__13J3DColorBlockFUl();
extern "C" bool getMatColor__13J3DColorBlockFUl();
extern "C" bool getColorChanNum__13J3DColorBlockCFv();
extern "C" void setZCompLoc__10J3DPEBlockFUc();
extern "C" void setZMode__10J3DPEBlockF8J3DZMode();
extern "C" void setBlend__10J3DPEBlockFRC8J3DBlend();
extern "C" void setAlphaComp__10J3DPEBlockFRC12J3DAlphaComp();
extern "C" void setIndTexCoordScale__11J3DIndBlockFUl19J3DIndTexCoordScale();
extern "C" void __dt__19J3DIndTexCoordScaleFv();
extern "C" void setIndTexMtx__11J3DIndBlockFUl12J3DIndTexMtx();
extern "C" void __dt__12J3DIndTexMtxFv();
extern "C" void setIndTexStageNum__11J3DIndBlockFUc();
extern "C" void setTexCoord__14J3DTexGenBlockFUlPC11J3DTexCoord();
extern "C" void setTexGenNum__14J3DTexGenBlockFUl();
extern "C" void setAmbColor__13J3DColorBlockFUl10J3DGXColor();
extern "C" void setColorChan__13J3DColorBlockFUlRC12J3DColorChan();
extern "C" void setMatColor__13J3DColorBlockFUl10J3DGXColor();
extern "C" void setColorChanNum__13J3DColorBlockFUc();
extern "C" void __ct__19J3DIndTexCoordScaleFv();
extern "C" void __ct__12J3DIndTexMtxFv();
extern "C" void __ct__14J3DIndTexOrderFv();
extern "C" void __ct__19J3DTevSwapModeTableFv();
extern "C" void __ct__11J3DTevOrderFv();
extern "C" void __ct__14J3DIndTevStageFv();
extern "C" void __ct__11J3DTevStageFv();
extern "C" void __ct__13J3DGXColorS10Fv();
extern "C" void __ct__11J3DTexCoordFv();
extern "C" void __ct__12J3DColorChanFv();
extern "C" void __ct__10J3DGXColorFv();
extern "C" void setTexMtx__14J3DTexGenBlockFUlP9J3DTexMtx();
extern "C" void setLight__13J3DColorBlockFUlP11J3DLightObj();
extern "C" void setAmbColor__13J3DColorBlockFUlPC10J3DGXColor();
extern "C" void* __nw__FUl();
extern "C" void __dl__FPv();
extern "C" void J3DGDSetGenMode__FUcUcUcUc11_GXCullMode();
extern "C" void J3DGDSetGenMode_3Param__FUcUcUc();
extern "C" void newDisplayList__17J3DDisplayListObjFUl();
extern "C" void newSingleDisplayList__17J3DDisplayListObjFUl();
extern "C" void callDL__17J3DDisplayListObjCFv();
extern "C" void beginDL__17J3DDisplayListObjFv();
extern "C" void endDL__17J3DDisplayListObjFv();
extern "C" void beginPatch__17J3DDisplayListObjFv();
extern "C" void endPatch__17J3DDisplayListObjFv();
extern "C" void beginDiff__12J3DMatPacketFv();
extern "C" void endDiff__12J3DMatPacketFv();
extern "C" void initialize__21J3DColorBlockLightOffFv();
extern "C" void initialize__22J3DColorBlockAmbientOnFv();
extern "C" void initialize__20J3DColorBlockLightOnFv();
extern "C" void initialize__21J3DTexGenBlockPatchedFv();
extern "C" void initialize__15J3DTexGenBlock4Fv();
extern "C" void initialize__19J3DTexGenBlockBasicFv();
extern "C" void initialize__12J3DTevBlock1Fv();
extern "C" void initialize__12J3DTevBlock2Fv();
extern "C" void initialize__12J3DTevBlock4Fv();
extern "C" void initialize__13J3DTevBlock16Fv();
extern "C" void initialize__15J3DIndBlockFullFv();
extern "C" void initialize__16J3DPEBlockFogOffFv();
extern "C" void initialize__14J3DPEBlockFullFv();
extern "C" void loadNBTScale__FR11J3DNBTScale();
extern "C" void __as__10J3DFogInfoFRC10J3DFogInfo();
extern "C" void __construct_array();
extern "C" void _savegpr_24();
extern "C" void _savegpr_26();
extern "C" void _savegpr_27();
extern "C" void _savegpr_29();
extern "C" void _restgpr_24();
extern "C" void _restgpr_26();
extern "C" void _restgpr_27();
extern "C" void _restgpr_29();
extern "C" extern u8 const j3dDefaultFogInfo[44];
extern "C" extern u8 const j3dDefaultNBTScaleInfo[16];
extern "C" extern void* __vt__14J3DPEBlockFull[31];
extern "C" extern void* __vt__16J3DPEBlockFogOff[31];
extern "C" extern void* __vt__13J3DTevBlock16[55];
extern "C" extern void* __vt__12J3DTevBlock4[55];
extern "C" extern void* __vt__12J3DTevBlock2[55];
extern "C" extern void* __vt__12J3DTevBlock1[55];
extern "C" extern void* __vt__19J3DTexGenBlockBasic[27];
extern "C" extern void* __vt__15J3DTexGenBlock4[27];
extern "C" extern void* __vt__21J3DTexGenBlockPatched[27];
extern "C" extern void* __vt__20J3DColorBlockLightOn[36];
extern "C" extern void* __vt__22J3DColorBlockAmbientOn[36];
extern "C" extern void* __vt__13J3DPEBlockXlu[31];
extern "C" extern void* __vt__17J3DPEBlockTexEdge[31];
extern "C" extern void* __vt__13J3DPEBlockOpa[31];
extern "C" extern void* __vt__15J3DIndBlockFull[19];
extern "C" extern void* __vt__11J3DTevBlock[55];
extern "C" extern void* __vt__21J3DColorBlockLightOff[36 + 1 /* padding */];
extern "C" extern u8 j3dSys[284];
extern "C" extern u8 __GDCurrentDL[4];
extern "C" extern u32 j3dDefaultBlendInfo;
extern "C" extern u8 struct_804563F8[4];
extern "C" extern u16 j3dDefaultZModeID[1 + 1 /* padding */];

//
// Declarations:
//

/* ############################################################################################## */
/* 803CDC90-803CDCC0 0030+00 s=0 e=1 z=0  None .data      __vt__17J3DLockedMaterial */
SECTION_DATA void* __vt__17J3DLockedMaterial[12] = {
    (void*)NULL,
    (void*)NULL,
    (void*)calc__17J3DLockedMaterialFPA4_Cf,
    (void*)calcDiffTexMtx__11J3DMaterialFPA4_Cf,
    (void*)makeDisplayList__17J3DLockedMaterialFv,
    (void*)makeSharedDisplayList__17J3DLockedMaterialFv,
    (void*)load__17J3DLockedMaterialFv,
    (void*)loadSharedDL__17J3DLockedMaterialFv,
    (void*)patch__17J3DLockedMaterialFv,
    (void*)diff__17J3DLockedMaterialFUl,
    (void*)reset__17J3DLockedMaterialFv,
    (void*)change__17J3DLockedMaterialFv,
};

/* 803CDCC0-803CDCF0 0030+00 s=0 e=1 z=0  None .data      __vt__18J3DPatchedMaterial */
SECTION_DATA void* __vt__18J3DPatchedMaterial[12] = {
    (void*)NULL,
    (void*)NULL,
    (void*)calc__11J3DMaterialFPA4_Cf,
    (void*)calcDiffTexMtx__11J3DMaterialFPA4_Cf,
    (void*)makeDisplayList__18J3DPatchedMaterialFv,
    (void*)makeSharedDisplayList__18J3DPatchedMaterialFv,
    (void*)load__18J3DPatchedMaterialFv,
    (void*)loadSharedDL__18J3DPatchedMaterialFv,
    (void*)patch__11J3DMaterialFv,
    (void*)diff__11J3DMaterialFUl,
    (void*)reset__18J3DPatchedMaterialFv,
    (void*)change__18J3DPatchedMaterialFv,
};

/* 803CDCF0-803CDD20 0030+00 s=0 e=6 z=0  None .data      __vt__11J3DMaterial */
SECTION_DATA void* __vt__11J3DMaterial[12] = {
    (void*)NULL,
    (void*)NULL,
    (void*)calc__11J3DMaterialFPA4_Cf,
    (void*)calcDiffTexMtx__11J3DMaterialFPA4_Cf,
    (void*)makeDisplayList__11J3DMaterialFv,
    (void*)makeSharedDisplayList__11J3DMaterialFv,
    (void*)load__11J3DMaterialFv,
    (void*)loadSharedDL__11J3DMaterialFv,
    (void*)patch__11J3DMaterialFv,
    (void*)diff__11J3DMaterialFUl,
    (void*)reset__11J3DMaterialFv,
    (void*)change__11J3DMaterialFv,
};

/* 803CDD20-803CDD9C 007C+00 s=2 e=7 z=0  None .data      __vt__10J3DPEBlock */
SECTION_DATA void* __vt__10J3DPEBlock[31] = {
    (void*)NULL,
    (void*)NULL,
    (void*)reset__10J3DPEBlockFP10J3DPEBlock,
    (void*)NULL,
    (void*)patch__10J3DPEBlockFv,
    (void*)diff__10J3DPEBlockFUl,
    (void*)diffFog__10J3DPEBlockFv,
    (void*)diffBlend__10J3DPEBlockFv,
    (void*)countDLSize__10J3DPEBlockFv,
    (void*)NULL,
    (void*)setFog__10J3DPEBlockF6J3DFog,
    (void*)setFog__10J3DPEBlockFP6J3DFog,
    (void*)getFog__10J3DPEBlockFv,
    (void*)setAlphaComp__10J3DPEBlockFPC12J3DAlphaComp,
    (void*)setAlphaComp__10J3DPEBlockFRC12J3DAlphaComp,
    (void*)getAlphaComp__10J3DPEBlockFv,
    (void*)setBlend__10J3DPEBlockFPC8J3DBlend,
    (void*)setBlend__10J3DPEBlockFRC8J3DBlend,
    (void*)getBlend__10J3DPEBlockFv,
    (void*)setZMode__10J3DPEBlockFPC8J3DZMode,
    (void*)setZMode__10J3DPEBlockF8J3DZMode,
    (void*)getZMode__10J3DPEBlockFv,
    (void*)setZCompLoc__10J3DPEBlockFPCUc,
    (void*)setZCompLoc__10J3DPEBlockFUc,
    (void*)getZCompLoc__10J3DPEBlockCFv,
    (void*)setDither__10J3DPEBlockFPCUc,
    (void*)setDither__10J3DPEBlockFUc,
    (void*)getDither__10J3DPEBlockCFv,
    (void*)getFogOffset__10J3DPEBlockCFv,
    (void*)setFogOffset__10J3DPEBlockFUl,
    (void*)__dt__10J3DPEBlockFv,
};

/* 803CDD9C-803CDDE8 004C+00 s=2 e=1 z=0  None .data      __vt__15J3DIndBlockNull */
SECTION_DATA void* __vt__15J3DIndBlockNull[19] = {
    (void*)NULL,
    (void*)NULL,
    (void*)reset__15J3DIndBlockNullFP11J3DIndBlock,
    (void*)diff__15J3DIndBlockNullFUl,
    (void*)load__15J3DIndBlockNullFv,
    (void*)countDLSize__11J3DIndBlockFv,
    (void*)getType__15J3DIndBlockNullFv,
    (void*)setIndTexStageNum__11J3DIndBlockFUc,
    (void*)getIndTexStageNum__11J3DIndBlockCFv,
    (void*)setIndTexOrder__11J3DIndBlockFUl14J3DIndTexOrder,
    (void*)setIndTexOrder__11J3DIndBlockFUlPC14J3DIndTexOrder,
    (void*)getIndTexOrder__11J3DIndBlockFUl,
    (void*)setIndTexMtx__11J3DIndBlockFUlPC12J3DIndTexMtx,
    (void*)setIndTexMtx__11J3DIndBlockFUl12J3DIndTexMtx,
    (void*)getIndTexMtx__11J3DIndBlockFUl,
    (void*)setIndTexCoordScale__11J3DIndBlockFUlPC19J3DIndTexCoordScale,
    (void*)setIndTexCoordScale__11J3DIndBlockFUl19J3DIndTexCoordScale,
    (void*)getIndTexCoordScale__11J3DIndBlockFUl,
    (void*)__dt__15J3DIndBlockNullFv,
};

/* 803CDDE8-803CDE34 004C+00 s=3 e=2 z=0  None .data      __vt__11J3DIndBlock */
SECTION_DATA void* __vt__11J3DIndBlock[19] = {
    (void*)NULL,
    (void*)NULL,
    (void*)reset__11J3DIndBlockFP11J3DIndBlock,
    (void*)NULL,
    (void*)NULL,
    (void*)countDLSize__11J3DIndBlockFv,
    (void*)NULL,
    (void*)setIndTexStageNum__11J3DIndBlockFUc,
    (void*)getIndTexStageNum__11J3DIndBlockCFv,
    (void*)setIndTexOrder__11J3DIndBlockFUl14J3DIndTexOrder,
    (void*)setIndTexOrder__11J3DIndBlockFUlPC14J3DIndTexOrder,
    (void*)getIndTexOrder__11J3DIndBlockFUl,
    (void*)setIndTexMtx__11J3DIndBlockFUlPC12J3DIndTexMtx,
    (void*)setIndTexMtx__11J3DIndBlockFUl12J3DIndTexMtx,
    (void*)getIndTexMtx__11J3DIndBlockFUl,
    (void*)setIndTexCoordScale__11J3DIndBlockFUlPC19J3DIndTexCoordScale,
    (void*)setIndTexCoordScale__11J3DIndBlockFUl19J3DIndTexCoordScale,
    (void*)getIndTexCoordScale__11J3DIndBlockFUl,
    (void*)__dt__11J3DIndBlockFv,
};

/* 803CDE34-803CDEA0 006C+00 s=3 e=5 z=0  None .data      __vt__14J3DTexGenBlock */
SECTION_DATA void* __vt__14J3DTexGenBlock[27] = {
    (void*)NULL,
    (void*)NULL,
    (void*)reset__14J3DTexGenBlockFP14J3DTexGenBlock,
    (void*)NULL,
    (void*)NULL,
    (void*)NULL,
    (void*)NULL,
    (void*)NULL,
    (void*)NULL,
    (void*)NULL,
    (void*)NULL,
    (void*)NULL,
    (void*)countDLSize__14J3DTexGenBlockFv,
    (void*)NULL,
    (void*)setTexGenNum__14J3DTexGenBlockFPCUl,
    (void*)setTexGenNum__14J3DTexGenBlockFUl,
    (void*)getTexGenNum__14J3DTexGenBlockCFv,
    (void*)setTexCoord__14J3DTexGenBlockFUlPC11J3DTexCoord,
    (void*)getTexCoord__14J3DTexGenBlockFUl,
    (void*)setTexMtx__14J3DTexGenBlockFUlP9J3DTexMtx,
    (void*)getTexMtx__14J3DTexGenBlockFUl,
    (void*)setNBTScale__14J3DTexGenBlockFPC11J3DNBTScale,
    (void*)setNBTScale__14J3DTexGenBlockF11J3DNBTScale,
    (void*)getNBTScale__14J3DTexGenBlockFv,
    (void*)getTexMtxOffset__14J3DTexGenBlockCFv,
    (void*)setTexMtxOffset__14J3DTexGenBlockFUl,
    (void*)__dt__14J3DTexGenBlockFv,
};

/* 803CDEA0-803CDF30 0090+00 s=3 e=4 z=0  None .data      __vt__13J3DColorBlock */
SECTION_DATA void* __vt__13J3DColorBlock[36] = {
    (void*)NULL,
    (void*)NULL,
    (void*)load__13J3DColorBlockFv,
    (void*)reset__13J3DColorBlockFP13J3DColorBlock,
    (void*)patch__13J3DColorBlockFv,
    (void*)patchMatColor__13J3DColorBlockFv,
    (void*)patchLight__13J3DColorBlockFv,
    (void*)diff__13J3DColorBlockFUl,
    (void*)diffAmbColor__13J3DColorBlockFv,
    (void*)diffMatColor__13J3DColorBlockFv,
    (void*)diffColorChan__13J3DColorBlockFv,
    (void*)diffLightObj__13J3DColorBlockFUl,
    (void*)countDLSize__13J3DColorBlockFv,
    (void*)NULL,
    (void*)setMatColor__13J3DColorBlockFUlPC10J3DGXColor,
    (void*)setMatColor__13J3DColorBlockFUl10J3DGXColor,
    (void*)getMatColor__13J3DColorBlockFUl,
    (void*)setAmbColor__13J3DColorBlockFUlPC10J3DGXColor,
    (void*)setAmbColor__13J3DColorBlockFUl10J3DGXColor,
    (void*)getAmbColor__13J3DColorBlockFUl,
    (void*)setColorChanNum__13J3DColorBlockFUc,
    (void*)setColorChanNum__13J3DColorBlockFPCUc,
    (void*)getColorChanNum__13J3DColorBlockCFv,
    (void*)setColorChan__13J3DColorBlockFUlRC12J3DColorChan,
    (void*)setColorChan__13J3DColorBlockFUlPC12J3DColorChan,
    (void*)getColorChan__13J3DColorBlockFUl,
    (void*)setLight__13J3DColorBlockFUlP11J3DLightObj,
    (void*)getLight__13J3DColorBlockFUl,
    (void*)setCullMode__13J3DColorBlockFPCUc,
    (void*)setCullMode__13J3DColorBlockFUc,
    (void*)getCullMode__13J3DColorBlockCFv,
    (void*)getMatColorOffset__13J3DColorBlockCFv,
    (void*)getColorChanOffset__13J3DColorBlockCFv,
    (void*)setMatColorOffset__13J3DColorBlockFUl,
    (void*)setColorChanOffset__13J3DColorBlockFUl,
    (void*)__dt__13J3DColorBlockFv,
};

/* 803157A0-803159A0 0200+00 s=0 e=3 z=0  None .text      createColorBlock__11J3DMaterialFUl */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void J3DMaterial::createColorBlock(u32 param_0) {
    nofralloc
#include "asm/JSystem/J3DGraphBase/J3DMaterial/createColorBlock__11J3DMaterialFUl.s"
}
#pragma pop

/* 803159A0-80315B04 0164+00 s=0 e=2 z=0  None .text      createTexGenBlock__11J3DMaterialFUl */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void J3DMaterial::createTexGenBlock(u32 param_0) {
    nofralloc
#include "asm/JSystem/J3DGraphBase/J3DMaterial/createTexGenBlock__11J3DMaterialFUl.s"
}
#pragma pop

/* 80315B04-80315E78 0374+00 s=0 e=2 z=0  None .text      createTevBlock__11J3DMaterialFi */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void J3DMaterial::createTevBlock(int param_0) {
    nofralloc
#include "asm/JSystem/J3DGraphBase/J3DMaterial/createTevBlock__11J3DMaterialFi.s"
}
#pragma pop

/* 80315E78-80315F60 00E8+00 s=0 e=3 z=0  None .text      createIndBlock__11J3DMaterialFi */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void J3DMaterial::createIndBlock(int param_0) {
    nofralloc
#include "asm/JSystem/J3DGraphBase/J3DMaterial/createIndBlock__11J3DMaterialFi.s"
}
#pragma pop

/* 80315F60-80316100 01A0+00 s=0 e=3 z=0  None .text      createPEBlock__11J3DMaterialFUlUl */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void J3DMaterial::createPEBlock(u32 param_0, u32 param_1) {
    nofralloc
#include "asm/JSystem/J3DGraphBase/J3DMaterial/createPEBlock__11J3DMaterialFUlUl.s"
}
#pragma pop

/* 80316100-80316150 0050+00 s=0 e=2 z=0  None .text      calcSizeColorBlock__11J3DMaterialFUl */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void J3DMaterial::calcSizeColorBlock(u32 param_0) {
    nofralloc
#include "asm/JSystem/J3DGraphBase/J3DMaterial/calcSizeColorBlock__11J3DMaterialFUl.s"
}
#pragma pop

/* 80316150-8031617C 002C+00 s=0 e=1 z=0  None .text      calcSizeTexGenBlock__11J3DMaterialFUl */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void J3DMaterial::calcSizeTexGenBlock(u32 param_0) {
    nofralloc
#include "asm/JSystem/J3DGraphBase/J3DMaterial/calcSizeTexGenBlock__11J3DMaterialFUl.s"
}
#pragma pop

/* 8031617C-803161C4 0048+00 s=0 e=1 z=0  None .text      calcSizeTevBlock__11J3DMaterialFi */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void J3DMaterial::calcSizeTevBlock(int param_0) {
    nofralloc
#include "asm/JSystem/J3DGraphBase/J3DMaterial/calcSizeTevBlock__11J3DMaterialFi.s"
}
#pragma pop

/* 803161C4-803161D8 0014+00 s=0 e=2 z=0  None .text      calcSizeIndBlock__11J3DMaterialFi */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void J3DMaterial::calcSizeIndBlock(int param_0) {
    nofralloc
#include "asm/JSystem/J3DGraphBase/J3DMaterial/calcSizeIndBlock__11J3DMaterialFi.s"
}
#pragma pop

/* 803161D8-80316240 0068+00 s=0 e=2 z=0  None .text      calcSizePEBlock__11J3DMaterialFUlUl */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void J3DMaterial::calcSizePEBlock(u32 param_0, u32 param_1) {
    nofralloc
#include "asm/JSystem/J3DGraphBase/J3DMaterial/calcSizePEBlock__11J3DMaterialFUlUl.s"
}
#pragma pop

/* 80316240-80316290 0050+00 s=2 e=5 z=0  None .text      initialize__11J3DMaterialFv */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void J3DMaterial::initialize() {
    nofralloc
#include "asm/JSystem/J3DGraphBase/J3DMaterial/initialize__11J3DMaterialFv.s"
}
#pragma pop

/* 80316290-80316344 00B4+00 s=0 e=2 z=0  None .text      countDLSize__11J3DMaterialFv */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void J3DMaterial::countDLSize() {
    nofralloc
#include "asm/JSystem/J3DGraphBase/J3DMaterial/countDLSize__11J3DMaterialFv.s"
}
#pragma pop

/* 80316344-80316620 02DC+00 s=2 e=0 z=0  None .text
 * makeDisplayList_private__11J3DMaterialFP17J3DDisplayListObj  */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void J3DMaterial::makeDisplayList_private(J3DDisplayListObj* param_0) {
    nofralloc
#include "asm/JSystem/J3DGraphBase/J3DMaterial/makeDisplayList_private__11J3DMaterialFP17J3DDisplayListObj.s"
}
#pragma pop

/* 80316620-80316668 0048+00 s=1 e=0 z=0  None .text      makeDisplayList__11J3DMaterialFv */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void J3DMaterial::makeDisplayList() {
    nofralloc
#include "asm/JSystem/J3DGraphBase/J3DMaterial/makeDisplayList__11J3DMaterialFv.s"
}
#pragma pop

/* 80316668-8031668C 0024+00 s=1 e=0 z=0  None .text      makeSharedDisplayList__11J3DMaterialFv */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void J3DMaterial::makeSharedDisplayList() {
    nofralloc
#include "asm/JSystem/J3DGraphBase/J3DMaterial/makeSharedDisplayList__11J3DMaterialFv.s"
}
#pragma pop

/* 8031668C-803166DC 0050+00 s=1 e=0 z=0  None .text      load__11J3DMaterialFv */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void J3DMaterial::load() {
    nofralloc
#include "asm/JSystem/J3DGraphBase/J3DMaterial/load__11J3DMaterialFv.s"
}
#pragma pop

/* 803166DC-80316740 0064+00 s=1 e=0 z=0  None .text      loadSharedDL__11J3DMaterialFv */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void J3DMaterial::loadSharedDL() {
    nofralloc
#include "asm/JSystem/J3DGraphBase/J3DMaterial/loadSharedDL__11J3DMaterialFv.s"
}
#pragma pop

/* 80316740-803167D8 0098+00 s=2 e=0 z=0  None .text      patch__11J3DMaterialFv */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void J3DMaterial::patch() {
    nofralloc
#include "asm/JSystem/J3DGraphBase/J3DMaterial/patch__11J3DMaterialFv.s"
}
#pragma pop

/* 803167D8-803169DC 0204+00 s=2 e=0 z=0  None .text      diff__11J3DMaterialFUl */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void J3DMaterial::diff(u32 param_0) {
    nofralloc
#include "asm/JSystem/J3DGraphBase/J3DMaterial/diff__11J3DMaterialFUl.s"
}
#pragma pop

/* 803169DC-80316A54 0078+00 s=2 e=0 z=0  None .text      calc__11J3DMaterialFPA4_Cf */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void J3DMaterial::calc(f32 const (*param_0)[4]) {
    nofralloc
#include "asm/JSystem/J3DGraphBase/J3DMaterial/calc__11J3DMaterialFPA4_Cf.s"
}
#pragma pop

/* 80316A54-80316AB0 005C+00 s=3 e=0 z=0  None .text      calcDiffTexMtx__11J3DMaterialFPA4_Cf */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void J3DMaterial::calcDiffTexMtx(f32 const (*param_0)[4]) {
    nofralloc
#include "asm/JSystem/J3DGraphBase/J3DMaterial/calcDiffTexMtx__11J3DMaterialFPA4_Cf.s"
}
#pragma pop

/* 80316AB0-80316AC8 0018+00 s=1 e=1 z=0  None .text      setCurrentMtx__11J3DMaterialFv */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void J3DMaterial::setCurrentMtx() {
    nofralloc
#include "asm/JSystem/J3DGraphBase/J3DMaterial/setCurrentMtx__11J3DMaterialFv.s"
}
#pragma pop

/* 80316AC8-80316D68 02A0+00 s=1 e=0 z=0  None .text      calcCurrentMtx__11J3DMaterialFv */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void J3DMaterial::calcCurrentMtx() {
    nofralloc
#include "asm/JSystem/J3DGraphBase/J3DMaterial/calcCurrentMtx__11J3DMaterialFv.s"
}
#pragma pop

/* 80316D68-80316E14 00AC+00 s=1 e=0 z=0  None .text      copy__11J3DMaterialFP11J3DMaterial */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void J3DMaterial::copy(J3DMaterial* param_0) {
    nofralloc
#include "asm/JSystem/J3DGraphBase/J3DMaterial/copy__11J3DMaterialFP11J3DMaterial.s"
}
#pragma pop

/* 80316E14-80316E70 005C+00 s=1 e=0 z=0  None .text      reset__11J3DMaterialFv */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void J3DMaterial::reset() {
    nofralloc
#include "asm/JSystem/J3DGraphBase/J3DMaterial/reset__11J3DMaterialFv.s"
}
#pragma pop

/* 80316E70-80316E90 0020+00 s=1 e=0 z=0  None .text      change__11J3DMaterialFv */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void J3DMaterial::change() {
    nofralloc
#include "asm/JSystem/J3DGraphBase/J3DMaterial/change__11J3DMaterialFv.s"
}
#pragma pop

/* 80316E90-80316F24 0094+00 s=0 e=2 z=0  None .text      newSharedDisplayList__11J3DMaterialFUl */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void J3DMaterial::newSharedDisplayList(u32 param_0) {
    nofralloc
#include "asm/JSystem/J3DGraphBase/J3DMaterial/newSharedDisplayList__11J3DMaterialFUl.s"
}
#pragma pop

/* 80316F24-80316FB8 0094+00 s=0 e=2 z=0  None .text newSingleSharedDisplayList__11J3DMaterialFUl
 */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void J3DMaterial::newSingleSharedDisplayList(u32 param_0) {
    nofralloc
#include "asm/JSystem/J3DGraphBase/J3DMaterial/newSingleSharedDisplayList__11J3DMaterialFUl.s"
}
#pragma pop

/* 80316FB8-80316FD8 0020+00 s=0 e=1 z=0  None .text      initialize__18J3DPatchedMaterialFv */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void J3DPatchedMaterial::initialize() {
    nofralloc
#include "asm/JSystem/J3DGraphBase/J3DMaterial/initialize__18J3DPatchedMaterialFv.s"
}
#pragma pop

/* 80316FD8-80316FDC 0004+00 s=1 e=0 z=0  None .text      makeDisplayList__18J3DPatchedMaterialFv */
void J3DPatchedMaterial::makeDisplayList() {
    /* empty function */
}

/* 80316FDC-80316FE0 0004+00 s=1 e=0 z=0  None .text makeSharedDisplayList__18J3DPatchedMaterialFv
 */
void J3DPatchedMaterial::makeSharedDisplayList() {
    /* empty function */
}

/* 80316FE0-80316FFC 001C+00 s=1 e=0 z=0  None .text      load__18J3DPatchedMaterialFv */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void J3DPatchedMaterial::load() {
    nofralloc
#include "asm/JSystem/J3DGraphBase/J3DMaterial/load__18J3DPatchedMaterialFv.s"
}
#pragma pop

/* 80316FFC-8031703C 0040+00 s=1 e=0 z=0  None .text      loadSharedDL__18J3DPatchedMaterialFv */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void J3DPatchedMaterial::loadSharedDL() {
    nofralloc
#include "asm/JSystem/J3DGraphBase/J3DMaterial/loadSharedDL__18J3DPatchedMaterialFv.s"
}
#pragma pop

/* 8031703C-80317040 0004+00 s=1 e=0 z=0  None .text      reset__18J3DPatchedMaterialFv */
void J3DPatchedMaterial::reset() {
    /* empty function */
}

/* 80317040-80317044 0004+00 s=1 e=0 z=0  None .text      change__18J3DPatchedMaterialFv */
void J3DPatchedMaterial::change() {
    /* empty function */
}

/* 80317044-80317064 0020+00 s=0 e=1 z=0  None .text      initialize__17J3DLockedMaterialFv */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void J3DLockedMaterial::initialize() {
    nofralloc
#include "asm/JSystem/J3DGraphBase/J3DMaterial/initialize__17J3DLockedMaterialFv.s"
}
#pragma pop

/* 80317064-80317068 0004+00 s=1 e=0 z=0  None .text      makeDisplayList__17J3DLockedMaterialFv */
void J3DLockedMaterial::makeDisplayList() {
    /* empty function */
}

/* 80317068-8031706C 0004+00 s=1 e=0 z=0  None .text makeSharedDisplayList__17J3DLockedMaterialFv
 */
void J3DLockedMaterial::makeSharedDisplayList() {
    /* empty function */
}

/* 8031706C-80317088 001C+00 s=1 e=0 z=0  None .text      load__17J3DLockedMaterialFv */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void J3DLockedMaterial::load() {
    nofralloc
#include "asm/JSystem/J3DGraphBase/J3DMaterial/load__17J3DLockedMaterialFv.s"
}
#pragma pop

/* 80317088-803170C8 0040+00 s=1 e=0 z=0  None .text      loadSharedDL__17J3DLockedMaterialFv */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void J3DLockedMaterial::loadSharedDL() {
    nofralloc
#include "asm/JSystem/J3DGraphBase/J3DMaterial/loadSharedDL__17J3DLockedMaterialFv.s"
}
#pragma pop

/* 803170C8-803170CC 0004+00 s=1 e=0 z=0  None .text      patch__17J3DLockedMaterialFv */
void J3DLockedMaterial::patch() {
    /* empty function */
}

/* 803170CC-803170D0 0004+00 s=1 e=0 z=0  None .text      diff__17J3DLockedMaterialFUl */
void J3DLockedMaterial::diff(u32 param_0) {
    /* empty function */
}

/* 803170D0-803170D4 0004+00 s=1 e=0 z=0  None .text      calc__17J3DLockedMaterialFPA4_Cf */
void J3DLockedMaterial::calc(f32 const (*param_0)[4]) {
    /* empty function */
}

/* 803170D4-803170D8 0004+00 s=1 e=0 z=0  None .text      reset__17J3DLockedMaterialFv */
void J3DLockedMaterial::reset() {
    /* empty function */
}

/* 803170D8-803170DC 0004+00 s=1 e=0 z=0  None .text      change__17J3DLockedMaterialFv */
void J3DLockedMaterial::change() {
    /* empty function */
}

/* 803170DC-80317138 005C+00 s=0 e=1 z=0  None .text      __dt__21J3DColorBlockLightOffFv */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm J3DColorBlockLightOff::~J3DColorBlockLightOff() {
    nofralloc
#include "asm/JSystem/J3DGraphBase/J3DMaterial/__dt__21J3DColorBlockLightOffFv.s"
}
#pragma pop

/* 80317138-80317180 0048+00 s=1 e=0 z=0  None .text      __dt__13J3DColorBlockFv */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm J3DColorBlock::~J3DColorBlock() {
    nofralloc
#include "asm/JSystem/J3DGraphBase/J3DMaterial/__dt__13J3DColorBlockFv.s"
}
#pragma pop

/* 80317180-803171DC 005C+00 s=0 e=1 z=0  None .text      __dt__21J3DTexGenBlockPatchedFv */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm J3DTexGenBlockPatched::~J3DTexGenBlockPatched() {
    nofralloc
#include "asm/JSystem/J3DGraphBase/J3DMaterial/__dt__21J3DTexGenBlockPatchedFv.s"
}
#pragma pop

/* 803171DC-80317224 0048+00 s=1 e=0 z=0  None .text      __dt__14J3DTexGenBlockFv */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm J3DTexGenBlock::~J3DTexGenBlock() {
    nofralloc
#include "asm/JSystem/J3DGraphBase/J3DMaterial/__dt__14J3DTexGenBlockFv.s"
}
#pragma pop

/* 80317224-8031726C 0048+00 s=0 e=1 z=0  None .text      __dt__11J3DTevBlockFv */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm J3DTevBlock::~J3DTevBlock() {
    nofralloc
#include "asm/JSystem/J3DGraphBase/J3DMaterial/__dt__11J3DTevBlockFv.s"
}
#pragma pop

/* 8031726C-803172B4 0048+00 s=1 e=0 z=0  None .text      __dt__11J3DIndBlockFv */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm J3DIndBlock::~J3DIndBlock() {
    nofralloc
#include "asm/JSystem/J3DGraphBase/J3DMaterial/__dt__11J3DIndBlockFv.s"
}
#pragma pop

/* 803172B4-803172FC 0048+00 s=1 e=0 z=0  None .text      __dt__10J3DPEBlockFv */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm J3DPEBlock::~J3DPEBlock() {
    nofralloc
#include "asm/JSystem/J3DGraphBase/J3DMaterial/__dt__10J3DPEBlockFv.s"
}
#pragma pop

/* 803172FC-80317304 0008+00 s=1 e=1 z=0  None .text      countDLSize__14J3DTexGenBlockFv */
bool J3DTexGenBlock::countDLSize() {
    return false;
}

/* 80317304-8031730C 0008+00 s=1 e=1 z=0  None .text      countDLSize__13J3DColorBlockFv */
bool J3DColorBlock::countDLSize() {
    return false;
}

/* 8031730C-80317314 0008+00 s=0 e=2 z=0  None .text      countDLSize__11J3DTevBlockFv */
bool J3DTevBlock::countDLSize() {
    return false;
}

/* 80317314-8031731C 0008+00 s=2 e=0 z=0  None .text      countDLSize__11J3DIndBlockFv */
bool J3DIndBlock::countDLSize() {
    return false;
}

/* 8031731C-80317324 0008+00 s=1 e=1 z=0  None .text      countDLSize__10J3DPEBlockFv */
bool J3DPEBlock::countDLSize() {
    return false;
}

/* 80317324-80317328 0004+00 s=1 e=1 z=0  None .text      load__13J3DColorBlockFv */
void J3DColorBlock::load() {
    /* empty function */
}

/* 80317328-80317330 0008+00 s=1 e=1 z=0  None .text      getCullMode__13J3DColorBlockCFv */
s32 J3DColorBlock::getCullMode() const {
    return 2;
}

/* 80317330-80317334 0004+00 s=0 e=2 z=0  None .text      load__11J3DTevBlockFv */
void J3DTevBlock::load() {
    /* empty function */
}

/* 80317334-8031733C 0008+00 s=1 e=2 z=0  None .text      getNBTScale__14J3DTexGenBlockFv */
bool J3DTexGenBlock::getNBTScale() {
    return false;
}

/* 8031733C-80317340 0004+00 s=1 e=1 z=0  None .text      patch__13J3DColorBlockFv */
void J3DColorBlock::patch() {
    /* empty function */
}

/* 80317340-80317344 0004+00 s=1 e=1 z=0  None .text      diff__13J3DColorBlockFUl */
void J3DColorBlock::diff(u32 param_0) {
    /* empty function */
}

/* 80317344-80317348 0004+00 s=1 e=4 z=0  None .text      diff__10J3DPEBlockFUl */
void J3DPEBlock::diff(u32 param_0) {
    /* empty function */
}

/* 80317348-8031734C 0004+00 s=1 e=4 z=0  None .text      reset__10J3DPEBlockFP10J3DPEBlock */
void J3DPEBlock::reset(J3DPEBlock* param_0) {
    /* empty function */
}

/* 8031734C-80317350 0004+00 s=1 e=0 z=0  None .text      reset__11J3DIndBlockFP11J3DIndBlock */
void J3DIndBlock::reset(J3DIndBlock* param_0) {
    /* empty function */
}

/* 80317350-80317354 0004+00 s=0 e=1 z=0  None .text      reset__11J3DTevBlockFP11J3DTevBlock */
void J3DTevBlock::reset(J3DTevBlock* param_0) {
    /* empty function */
}

/* 80317354-80317358 0004+00 s=1 e=1 z=0  None .text      reset__14J3DTexGenBlockFP14J3DTexGenBlock
 */
void J3DTexGenBlock::reset(J3DTexGenBlock* param_0) {
    /* empty function */
}

/* 80317358-8031735C 0004+00 s=1 e=1 z=0  None .text      reset__13J3DColorBlockFP13J3DColorBlock */
void J3DColorBlock::reset(J3DColorBlock* param_0) {
    /* empty function */
}

/* 8031735C-80317360 0004+00 s=1 e=5 z=0  None .text      diffFog__10J3DPEBlockFv */
void J3DPEBlock::diffFog() {
    /* empty function */
}

/* 80317360-80317364 0004+00 s=1 e=4 z=0  None .text      diffBlend__10J3DPEBlockFv */
void J3DPEBlock::diffBlend() {
    /* empty function */
}

/* 80317364-80317368 0004+00 s=1 e=5 z=0  None .text      setFog__10J3DPEBlockFP6J3DFog */
void J3DPEBlock::setFog(J3DFog* param_0) {
    /* empty function */
}

/* 80317368-8031736C 0004+00 s=1 e=5 z=0  None .text      setFog__10J3DPEBlockF6J3DFog */
void J3DPEBlock::setFog(J3DFog param_0) {
    /* empty function */
}

/* 8031736C-80317370 0004+00 s=1 e=4 z=0  None .text setAlphaComp__10J3DPEBlockFPC12J3DAlphaComp
 */
void J3DPEBlock::setAlphaComp(J3DAlphaComp const* param_0) {
    /* empty function */
}

/* 80317370-80317374 0004+00 s=1 e=4 z=0  None .text      setBlend__10J3DPEBlockFPC8J3DBlend */
void J3DPEBlock::setBlend(J3DBlend const* param_0) {
    /* empty function */
}

/* 80317374-80317378 0004+00 s=1 e=4 z=0  None .text      setZMode__10J3DPEBlockFPC8J3DZMode */
void J3DPEBlock::setZMode(J3DZMode const* param_0) {
    /* empty function */
}

/* 80317378-8031737C 0004+00 s=1 e=4 z=0  None .text      setZCompLoc__10J3DPEBlockFPCUc */
void J3DPEBlock::setZCompLoc(u8 const* param_0) {
    /* empty function */
}

/* 8031737C-80317380 0004+00 s=1 e=4 z=0  None .text      setDither__10J3DPEBlockFUc */
void J3DPEBlock::setDither(u8 param_0) {
    /* empty function */
}

/* 80317380-80317384 0004+00 s=1 e=4 z=0  None .text      setDither__10J3DPEBlockFPCUc */
void J3DPEBlock::setDither(u8 const* param_0) {
    /* empty function */
}

/* 80317384-8031738C 0008+00 s=1 e=4 z=0  None .text      getDither__10J3DPEBlockCFv */
bool J3DPEBlock::getDither() const {
    return false;
}

/* 8031738C-80317394 0008+00 s=1 e=5 z=0  None .text      getFogOffset__10J3DPEBlockCFv */
bool J3DPEBlock::getFogOffset() const {
    return false;
}

/* 80317394-80317398 0004+00 s=1 e=5 z=0  None .text      setFogOffset__10J3DPEBlockFUl */
void J3DPEBlock::setFogOffset(u32 param_0) {
    /* empty function */
}

/* 80317398-8031739C 0004+00 s=1 e=0 z=0  None .text      diff__15J3DIndBlockNullFUl */
void J3DIndBlockNull::diff(u32 param_0) {
    /* empty function */
}

/* 8031739C-803173A0 0004+00 s=1 e=0 z=0  None .text      load__15J3DIndBlockNullFv */
void J3DIndBlockNull::load() {
    /* empty function */
}

/* 803173A0-803173A4 0004+00 s=1 e=0 z=0  None .text      reset__15J3DIndBlockNullFP11J3DIndBlock */
void J3DIndBlockNull::reset(J3DIndBlock* param_0) {
    /* empty function */
}

/* 803173A4-803173B0 000C+00 s=1 e=0 z=0  None .text      getType__15J3DIndBlockNullFv */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void J3DIndBlockNull::getType() {
    nofralloc
#include "asm/JSystem/J3DGraphBase/J3DMaterial/getType__15J3DIndBlockNullFv.s"
}
#pragma pop

/* 803173B0-8031740C 005C+00 s=1 e=0 z=0  None .text      __dt__15J3DIndBlockNullFv */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm J3DIndBlockNull::~J3DIndBlockNull() {
    nofralloc
#include "asm/JSystem/J3DGraphBase/J3DMaterial/__dt__15J3DIndBlockNullFv.s"
}
#pragma pop

/* 8031740C-80317410 0004+00 s=2 e=0 z=0  None .text
 * setIndTexOrder__11J3DIndBlockFUlPC14J3DIndTexOrder           */
void J3DIndBlock::setIndTexOrder(u32 param_0, J3DIndTexOrder const* param_1) {
    /* empty function */
}

/* 80317410-80317414 0004+00 s=2 e=0 z=0  None .text
 * setIndTexOrder__11J3DIndBlockFUl14J3DIndTexOrder             */
void J3DIndBlock::setIndTexOrder(u32 param_0, J3DIndTexOrder param_1) {
    /* empty function */
}

/* 80317414-80317418 0004+00 s=2 e=0 z=0  None .text
 * setIndTexMtx__11J3DIndBlockFUlPC12J3DIndTexMtx               */
void J3DIndBlock::setIndTexMtx(u32 param_0, J3DIndTexMtx const* param_1) {
    /* empty function */
}

/* 80317418-8031741C 0004+00 s=2 e=0 z=0  None .text
 * setIndTexCoordScale__11J3DIndBlockFUlPC19J3DIndTexCoordScale */
void J3DIndBlock::setIndTexCoordScale(u32 param_0, J3DIndTexCoordScale const* param_1) {
    /* empty function */
}

/* 8031741C-80317420 0004+00 s=1 e=1 z=0  None .text      setTexGenNum__14J3DTexGenBlockFPCUl */
void J3DTexGenBlock::setTexGenNum(u32 const* param_0) {
    /* empty function */
}

/* 80317420-80317424 0004+00 s=1 e=2 z=0  None .text setNBTScale__14J3DTexGenBlockF11J3DNBTScale
 */
void J3DTexGenBlock::setNBTScale(J3DNBTScale param_0) {
    /* empty function */
}

/* 80317424-80317428 0004+00 s=1 e=2 z=0  None .text setNBTScale__14J3DTexGenBlockFPC11J3DNBTScale
 */
void J3DTexGenBlock::setNBTScale(J3DNBTScale const* param_0) {
    /* empty function */
}

/* 80317428-80317430 0008+00 s=1 e=1 z=0  None .text      getTexMtxOffset__14J3DTexGenBlockCFv */
bool J3DTexGenBlock::getTexMtxOffset() const {
    return false;
}

/* 80317430-80317434 0004+00 s=1 e=1 z=0  None .text      setTexMtxOffset__14J3DTexGenBlockFUl */
void J3DTexGenBlock::setTexMtxOffset(u32 param_0) {
    /* empty function */
}

/* 80317434-80317438 0004+00 s=1 e=1 z=0  None .text      patchMatColor__13J3DColorBlockFv */
void J3DColorBlock::patchMatColor() {
    /* empty function */
}

/* 80317438-8031743C 0004+00 s=1 e=3 z=0  None .text      diffAmbColor__13J3DColorBlockFv */
void J3DColorBlock::diffAmbColor() {
    /* empty function */
}

/* 8031743C-80317440 0004+00 s=1 e=1 z=0  None .text      diffMatColor__13J3DColorBlockFv */
void J3DColorBlock::diffMatColor() {
    /* empty function */
}

/* 80317440-80317444 0004+00 s=1 e=1 z=0  None .text      diffColorChan__13J3DColorBlockFv */
void J3DColorBlock::diffColorChan() {
    /* empty function */
}

/* 80317444-80317448 0004+00 s=1 e=3 z=0  None .text      diffLightObj__13J3DColorBlockFUl */
void J3DColorBlock::diffLightObj(u32 param_0) {
    /* empty function */
}

/* 80317448-8031744C 0004+00 s=1 e=1 z=0  None .text setMatColor__13J3DColorBlockFUlPC10J3DGXColor
 */
void J3DColorBlock::setMatColor(u32 param_0, J3DGXColor const* param_1) {
    /* empty function */
}

/* 8031744C-80317450 0004+00 s=1 e=1 z=0  None .text      setColorChanNum__13J3DColorBlockFPCUc */
void J3DColorBlock::setColorChanNum(u8 const* param_0) {
    /* empty function */
}

/* 80317450-80317454 0004+00 s=1 e=1 z=0  None .text
 * setColorChan__13J3DColorBlockFUlPC12J3DColorChan             */
void J3DColorBlock::setColorChan(u32 param_0, J3DColorChan const* param_1) {
    /* empty function */
}

/* 80317454-8031745C 0008+00 s=1 e=3 z=0  None .text      getLight__13J3DColorBlockFUl */
bool J3DColorBlock::getLight(u32 param_0) {
    return false;
}

/* 8031745C-80317460 0004+00 s=1 e=1 z=0  None .text      setCullMode__13J3DColorBlockFUc */
void J3DColorBlock::setCullMode(u8 param_0) {
    /* empty function */
}

/* 80317460-80317464 0004+00 s=1 e=1 z=0  None .text      setCullMode__13J3DColorBlockFPCUc */
void J3DColorBlock::setCullMode(u8 const* param_0) {
    /* empty function */
}

/* 80317464-8031746C 0008+00 s=1 e=1 z=0  None .text      getMatColorOffset__13J3DColorBlockCFv */
bool J3DColorBlock::getMatColorOffset() const {
    return false;
}

/* 8031746C-80317474 0008+00 s=1 e=1 z=0  None .text      getColorChanOffset__13J3DColorBlockCFv */
bool J3DColorBlock::getColorChanOffset() const {
    return false;
}

/* 80317474-80317478 0004+00 s=1 e=1 z=0  None .text      setMatColorOffset__13J3DColorBlockFUl */
void J3DColorBlock::setMatColorOffset(u32 param_0) {
    /* empty function */
}

/* 80317478-8031747C 0004+00 s=1 e=1 z=0  None .text      setColorChanOffset__13J3DColorBlockFUl */
void J3DColorBlock::setColorChanOffset(u32 param_0) {
    /* empty function */
}
