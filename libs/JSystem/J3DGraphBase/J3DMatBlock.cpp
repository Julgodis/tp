// 
// Generated By: dol2asm
// Translation Unit: J3DMatBlock
// 

#include "dol2asm.h"
#include "dolphin/types.h"
#include "JSystem/J3DGraphBase/J3DMatBlock.h"

// 
// Types:
// 

struct J3DGXColor {
};

struct J3DLightObj {
	/* 80323590 */ void load(u32) const;
};

struct J3DColorBlock {
	/* 8000DFF0 */ void getAmbColor(u32);
	/* 801A4C0C */ void setAmbColor(u32, J3DGXColor const*);
	/* 8000E0D4 */ void setAmbColor(u32, J3DGXColor);
	/* 801A4C08 */ void setLight(u32, J3DLightObj*);
	/* 80317438 */ void diffAmbColor();
	/* 80317444 */ void diffLightObj(u32);
	/* 80317454 */ void getLight(u32);
};

struct J3DColorChan {
};

struct J3DColorBlockLightOff {
	/* 803170DC */ ~J3DColorBlockLightOff();
	/* 8031747C */ void initialize();
	/* 80317B84 */ void countDLSize();
	/* 80317C0C */ void load();
	/* 80318EB4 */ void patch();
	/* 80318F00 */ void patchMatColor();
	/* 803190AC */ void patchLight();
	/* 80319B4C */ void diff(u32);
	/* 80319BB4 */ void diffMatColor();
	/* 80319D30 */ void diffColorChan();
	/* 8031FD08 */ void reset(J3DColorBlock*);
	/* 80323184 */ void setMatColor(u32, J3DGXColor const*);
	/* 80323158 */ void setMatColor(u32, J3DGXColor);
	/* 803231B0 */ void getMatColor(u32);
	/* 803231C4 */ void setColorChanNum(u8 const*);
	/* 803231D0 */ void setColorChanNum(u8);
	/* 803231D8 */ void getColorChanNum() const;
	/* 803231E0 */ void setColorChan(u32, J3DColorChan const*);
	/* 803231F4 */ void setColorChan(u32, J3DColorChan const&);
	/* 80323208 */ void getColorChan(u32);
	/* 8032321C */ void setCullMode(u8);
	/* 80323224 */ void setCullMode(u8 const*);
	/* 80323230 */ void getCullMode() const;
	/* 80323238 */ void getMatColorOffset() const;
	/* 80323240 */ void getColorChanOffset() const;
	/* 80323248 */ void setMatColorOffset(u32);
	/* 80323250 */ void setColorChanOffset(u32);
	/* 80323560 */ void getType();
};

struct J3DColorBlockAmbientOn {
	/* 803174DC */ void initialize();
	/* 80317B8C */ void countDLSize();
	/* 8031816C */ void load();
	/* 8031FDE4 */ void reset(J3DColorBlock*);
	/* 80323074 */ void getType();
	/* 80323080 */ void setAmbColor(u32, J3DGXColor);
	/* 803230AC */ void setAmbColor(u32, J3DGXColor const*);
	/* 803230D8 */ void getAmbColor(u32);
	/* 803230EC */ ~J3DColorBlockAmbientOn();
};

struct J3DColorBlockLightOn {
	/* 80317580 */ void initialize();
	/* 80317B94 */ void countDLSize();
	/* 803187F4 */ void load();
	/* 803194E8 */ void patch();
	/* 80319534 */ void patchMatColor();
	/* 803196E0 */ void patchLight();
	/* 8031A13C */ void diff(u32);
	/* 8031A1DC */ void diffAmbColor();
	/* 8031A358 */ void diffMatColor();
	/* 8031A4D4 */ void diffColorChan();
	/* 8031A8E0 */ void diffLightObj(u32);
	/* 8031FF34 */ void reset(J3DColorBlock*);
	/* 80322E80 */ void getType();
	/* 80322E8C */ void setMatColor(u32, J3DGXColor);
	/* 80322EB8 */ void setMatColor(u32, J3DGXColor const*);
	/* 80322EE4 */ void getMatColor(u32);
	/* 80322F24 */ void setAmbColor(u32, J3DGXColor const*);
	/* 80322EF8 */ void setAmbColor(u32, J3DGXColor);
	/* 80322F50 */ void getAmbColor(u32);
	/* 80322F64 */ void setColorChanNum(u8 const*);
	/* 80322F70 */ void setColorChanNum(u8);
	/* 80322F78 */ void getColorChanNum() const;
	/* 80322F80 */ void setColorChan(u32, J3DColorChan const*);
	/* 80322F94 */ void setColorChan(u32, J3DColorChan const&);
	/* 80322FA8 */ void getColorChan(u32);
	/* 80322FBC */ void setLight(u32, J3DLightObj*);
	/* 80322FCC */ void getLight(u32);
	/* 80322FDC */ void setCullMode(u8);
	/* 80322FE4 */ void setCullMode(u8 const*);
	/* 80322FF0 */ void getCullMode() const;
	/* 80322FF8 */ void getMatColorOffset() const;
	/* 80323000 */ void getColorChanOffset() const;
	/* 80323008 */ void setMatColorOffset(u32);
	/* 80323010 */ void setColorChanOffset(u32);
	/* 80323018 */ ~J3DColorBlockLightOn();
};

struct J3DTexMtx {
	/* 803238C4 */ void load(u32) const;
	/* 80323900 */ void calc(f32 const (* )[4]);
	/* 80323C0C */ void calcPostTexMtx(f32 const (* )[4]);
};

struct J3DTexCoord {
};

struct J3DNBTScale {
};

struct J3DTexGenBlock {
	/* 80317334 */ void getNBTScale();
	/* 80317420 */ void setNBTScale(J3DNBTScale);
	/* 80317424 */ void setNBTScale(J3DNBTScale const*);
};

struct J3DTexGenBlockPatched {
	/* 80317180 */ ~J3DTexGenBlockPatched();
	/* 80317644 */ void initialize();
	/* 80317B9C */ void countDLSize();
	/* 8031AA88 */ void patch();
	/* 8031AC68 */ void diff(u32);
	/* 8031ACD0 */ void diffTexMtx();
	/* 8031AD30 */ void diffTexGen();
	/* 80320084 */ void reset(J3DTexGenBlock*);
	/* 803213C0 */ void calc(f32 const (* )[4]);
	/* 80321584 */ void calcWithoutViewMtx(f32 const (* )[4]);
	/* 803216D8 */ void calcPostTexMtx(f32 const (* )[4]);
	/* 8032181C */ void calcPostTexMtxWithoutViewMtx(f32 const (* )[4]);
	/* 80322D34 */ void setTexGenNum(u32);
	/* 80322D3C */ void setTexGenNum(u32 const*);
	/* 80322D48 */ void getTexGenNum() const;
	/* 80322D50 */ void setTexCoord(u32, J3DTexCoord const*);
	/* 80322D64 */ void getTexCoord(u32);
	/* 80322D78 */ void setTexMtx(u32, J3DTexMtx*);
	/* 80322D88 */ void getTexMtx(u32);
	/* 80322D98 */ void getTexMtxOffset() const;
	/* 80322DA0 */ void setTexMtxOffset(u32);
	/* 80322E70 */ void load();
	/* 80322E74 */ void getType();
};

struct J3DTexGenBlock4 {
	/* 80317674 */ void initialize();
	/* 80317BA4 */ void countDLSize();
	/* 8031A948 */ void load();
	/* 8031AB18 */ void patch();
	/* 803201A0 */ void reset(J3DTexGenBlock*);
	/* 80322DA8 */ void getType();
	/* 80322DD8 */ void setNBTScale(J3DNBTScale const*);
	/* 80322DB4 */ void setNBTScale(J3DNBTScale);
	/* 80322DFC */ void getNBTScale();
	/* 80322E04 */ ~J3DTexGenBlock4();
};

struct J3DTexGenBlockBasic {
	/* 803176A4 */ void initialize();
	/* 80317BAC */ void countDLSize();
	/* 8031A9E8 */ void load();
	/* 8031ABC0 */ void patch();
	/* 803202DC */ void reset(J3DTexGenBlock*);
	/* 80322C6C */ void getType();
	/* 80322C9C */ void setNBTScale(J3DNBTScale const*);
	/* 80322C78 */ void setNBTScale(J3DNBTScale);
	/* 80322CC0 */ void getNBTScale();
	/* 80322CC8 */ ~J3DTexGenBlockBasic();
};

struct J3DTevBlockNull {
	/* 803176D4 */ void initialize();
};

struct J3DIndTevStage {
};

struct J3DTevOrder {
};

struct J3DGXColorS10 {
};

struct J3DTevSwapModeInfo {
};

struct J3DTevSwapModeTable {
};

struct J3DTevStage {
};

struct J3DTevBlock {
	/* 8000DBC8 */ void patchTexNoAndTexCoordScale();
	/* 8000DBD4 */ void patch();
	/* 8000DF84 */ void getIndTevStage(u32);
	/* 8000DF8C */ void getTevStage(u32);
	/* 8000DF94 */ void getTexNo(u32) const;
	/* 8000DFA0 */ void getTevSwapModeTable(u32);
	/* 8000DFA8 */ void getTevKAlphaSel(u32);
	/* 8000DFB0 */ void getTevKColorSel(u32);
	/* 8000DFB8 */ void getTevOrder(u32);
	/* 8000DFC0 */ void getTevKColor(u32);
	/* 8000DFC8 */ void getTevColor(u32);
	/* 8000DFD0 */ void getTevStageNum() const;
	/* 8000E0A4 */ void setIndTevStage(u32, J3DIndTevStage);
	/* 80323554 */ void setIndTevStage(u32, J3DIndTevStage const*);
	/* 8000E0A8 */ void setTevStage(u32, J3DTevStage);
	/* 80323550 */ void setTevStage(u32, J3DTevStage const*);
	/* 8000E0AC */ void setTexNo(u32, u16);
	/* 80323544 */ void setTexNo(u32, u16 const*);
	/* 8000E0B0 */ void setTevSwapModeTable(u32, J3DTevSwapModeTable);
	/* 80322960 */ void setTevSwapModeTable(u32, J3DTevSwapModeTable const*);
	/* 8000E0B4 */ void setTevKAlphaSel(u32, u8);
	/* 80322954 */ void setTevKAlphaSel(u32, u8 const*);
	/* 8000E0B8 */ void setTevKColorSel(u32, u8);
	/* 80322950 */ void setTevKColorSel(u32, u8 const*);
	/* 8000E0BC */ void setTevOrder(u32, J3DTevOrder);
	/* 80323548 */ void setTevOrder(u32, J3DTevOrder const*);
	/* 800732AC */ void setTevKColor(u32, J3DGXColor const*);
	/* 8000E0C0 */ void setTevKColor(u32, J3DGXColor);
	/* 80110E80 */ void setTevColor(u32, J3DGXColorS10 const*);
	/* 8000E0C4 */ void setTevColor(u32, J3DGXColorS10);
	/* 8032354C */ void setTevStageNum(u8 const*);
	/* 8000E0C8 */ void setTevStageNum(u8);
	/* 80317224 */ ~J3DTevBlock();
	/* 8031730C */ void countDLSize();
	/* 80317330 */ void load();
	/* 80317350 */ void reset(J3DTevBlock*);
	/* 8031CD44 */ void diff(u32);
	/* 8031E098 */ void indexToPtr_private(u32);
	/* 80321938 */ void diffTevReg();
	/* 8032193C */ void diffTevStageIndirect();
	/* 80321940 */ void diffTevStage();
	/* 80321944 */ void diffTexCoordScale();
	/* 80321948 */ void diffTexNo();
	/* 80321FE0 */ void setTexNoOffset(u32);
	/* 80322958 */ void setTevSwapModeInfo(u32, J3DTevSwapModeInfo);
	/* 8032295C */ void setTevSwapModeInfo(u32, J3DTevSwapModeInfo const*);
	/* 80322964 */ void getTevRegOffset() const;
	/* 8032296C */ void setTevRegOffset(u32);
	/* 8032353C */ void patchTexNo();
	/* 80323540 */ void patchTevReg();
	/* 80323558 */ void getTexNoOffset() const;
};

struct J3DTevBlockPatched {
	/* 803176E0 */ void initialize();
	/* 80317BB4 */ void countDLSize();
	/* 8031BF4C */ void patchTexNo();
	/* 8031BFE0 */ void patchTevReg();
	/* 8031C0AC */ void patchTexNoAndTexCoordScale();
	/* 8031C228 */ void patch();
	/* 8031CE00 */ void diffTexNo();
	/* 8031CE64 */ void diffTevStage();
	/* 8031CF78 */ void diffTevStageIndirect();
	/* 8031D028 */ void diffTevReg();
	/* 8031D0C4 */ void diffTexCoordScale();
	/* 8031DFB4 */ void ptrToIndex();
	/* 80320418 */ void reset(J3DTevBlock*);
	/* 80322970 */ void load();
	/* 80322974 */ void indexToPtr();
	/* 80322998 */ void getType();
	/* 803229A4 */ void setTevStageNum(u8);
	/* 803229AC */ void setTevStageNum(u8 const*);
	/* 803229B8 */ void getTevStageNum() const;
	/* 803229C0 */ void setTexNo(u32, u16);
	/* 803229D0 */ void setTexNo(u32, u16 const*);
	/* 803229E4 */ void getTexNo(u32) const;
	/* 80322A08 */ void setTevOrder(u32, J3DTevOrder const*);
	/* 803229F4 */ void setTevOrder(u32, J3DTevOrder);
	/* 80322A1C */ void getTevOrder(u32);
	/* 80322A30 */ void setTevStage(u32, J3DTevStage);
	/* 80322A6C */ void setTevStage(u32, J3DTevStage const*);
	/* 80322AA8 */ void getTevStage(u32);
	/* 80322ABC */ void setIndTevStage(u32, J3DIndTevStage);
	/* 80322AD0 */ void setIndTevStage(u32, J3DIndTevStage const*);
	/* 80322AE4 */ void getIndTevStage(u32);
	/* 80322B24 */ void setTevColor(u32, J3DGXColorS10 const*);
	/* 80322AF8 */ void setTevColor(u32, J3DGXColorS10);
	/* 80322B50 */ void getTevColor(u32);
	/* 80322B90 */ void setTevKColor(u32, J3DGXColor const*);
	/* 80322B64 */ void setTevKColor(u32, J3DGXColor);
	/* 80322BBC */ void getTevKColor(u32);
	/* 80322BD0 */ void setTevKColorSel(u32, u8);
	/* 80322BDC */ void setTevKColorSel(u32, u8 const*);
	/* 80322BEC */ void getTevKColorSel(u32);
	/* 80322BF8 */ void getTexNoOffset() const;
	/* 80322C00 */ void getTevRegOffset() const;
	/* 80322C08 */ void setTevRegOffset(u32);
	/* 80322C10 */ ~J3DTevBlockPatched();
};

struct J3DTevBlock1 {
	/* 803177E8 */ void initialize();
	/* 80317BBC */ void countDLSize();
	/* 8031AD64 */ void load();
	/* 8031C274 */ void patchTexNo();
	/* 8031C2E4 */ void patchTevReg();
	/* 8031C2E8 */ void patchTexNoAndTexCoordScale();
	/* 8031C3CC */ void patch();
	/* 8031D1BC */ void diffTexNo();
	/* 8031D1F4 */ void diffTevReg();
	/* 8031D1F8 */ void diffTevStage();
	/* 8031D2E8 */ void diffTevStageIndirect();
	/* 8031D368 */ void diffTexCoordScale();
	/* 803205D4 */ void reset(J3DTevBlock*);
	/* 80322770 */ void ptrToIndex();
	/* 80322774 */ void indexToPtr();
	/* 80322798 */ void getType();
	/* 803227A4 */ void setTexNo(u32, u16);
	/* 803227B4 */ void setTexNo(u32, u16 const*);
	/* 803227C8 */ void getTexNo(u32) const;
	/* 803227D8 */ void setTevOrder(u32, J3DTevOrder);
	/* 803227EC */ void setTevOrder(u32, J3DTevOrder const*);
	/* 80322800 */ void getTevOrder(u32);
	/* 80322814 */ void setTevStageNum(u8);
	/* 80322818 */ void setTevStageNum(u8 const*);
	/* 8032281C */ void getTevStageNum() const;
	/* 80322824 */ void setTevStage(u32, J3DTevStage);
	/* 80322860 */ void setTevStage(u32, J3DTevStage const*);
	/* 8032289C */ void getTevStage(u32);
	/* 803228B0 */ void setIndTevStage(u32, J3DIndTevStage);
	/* 803228C4 */ void setIndTevStage(u32, J3DIndTevStage const*);
	/* 803228D8 */ void getIndTevStage(u32);
	/* 803228EC */ void getTexNoOffset() const;
	/* 803228F4 */ ~J3DTevBlock1();
};

struct J3DTevBlock2 {
	/* 80317810 */ void initialize();
	/* 80317BC4 */ void countDLSize();
	/* 8031AFA4 */ void load();
	/* 8031C3F8 */ void patchTexNo();
	/* 8031C48C */ void patchTevReg();
	/* 8031C558 */ void patchTexNoAndTexCoordScale();
	/* 8031C6A8 */ void patch();
	/* 8031D3D0 */ void diffTexNo();
	/* 8031D434 */ void diffTevReg();
	/* 8031D4D0 */ void diffTevStage();
	/* 8031D5E4 */ void diffTevStageIndirect();
	/* 8031D694 */ void diffTexCoordScale();
	/* 803206AC */ void reset(J3DTevBlock*);
	/* 803223AC */ void ptrToIndex();
	/* 803223B0 */ void indexToPtr();
	/* 803223D4 */ void getType();
	/* 803223E0 */ void setTexNo(u32, u16);
	/* 803223F0 */ void setTexNo(u32, u16 const*);
	/* 80322404 */ void getTexNo(u32) const;
	/* 80322414 */ void setTevOrder(u32, J3DTevOrder);
	/* 80322428 */ void setTevOrder(u32, J3DTevOrder const*);
	/* 8032243C */ void getTevOrder(u32);
	/* 80322450 */ void setTevColor(u32, J3DGXColorS10);
	/* 8032247C */ void setTevColor(u32, J3DGXColorS10 const*);
	/* 803224A8 */ void getTevColor(u32);
	/* 803224BC */ void setTevKColor(u32, J3DGXColor);
	/* 803224E8 */ void setTevKColor(u32, J3DGXColor const*);
	/* 80322514 */ void getTevKColor(u32);
	/* 80322528 */ void setTevKColorSel(u32, u8);
	/* 80322534 */ void setTevKColorSel(u32, u8 const*);
	/* 80322544 */ void getTevKColorSel(u32);
	/* 80322550 */ void setTevKAlphaSel(u32, u8);
	/* 8032255C */ void setTevKAlphaSel(u32, u8 const*);
	/* 8032256C */ void getTevKAlphaSel(u32);
	/* 80322580 */ void setTevStageNum(u8 const*);
	/* 80322578 */ void setTevStageNum(u8);
	/* 8032258C */ void getTevStageNum() const;
	/* 80322594 */ void setTevStage(u32, J3DTevStage);
	/* 803225D0 */ void setTevStage(u32, J3DTevStage const*);
	/* 8032260C */ void getTevStage(u32);
	/* 80322620 */ void setTevSwapModeInfo(u32, J3DTevSwapModeInfo);
	/* 80322658 */ void setTevSwapModeInfo(u32, J3DTevSwapModeInfo const*);
	/* 80322690 */ void setTevSwapModeTable(u32, J3DTevSwapModeTable);
	/* 803226A0 */ void setTevSwapModeTable(u32, J3DTevSwapModeTable const*);
	/* 803226B0 */ void getTevSwapModeTable(u32);
	/* 803226C0 */ void setIndTevStage(u32, J3DIndTevStage);
	/* 803226D4 */ void setIndTevStage(u32, J3DIndTevStage const*);
	/* 803226E8 */ void getIndTevStage(u32);
	/* 803226FC */ void getTexNoOffset() const;
	/* 80322704 */ void getTevRegOffset() const;
	/* 8032270C */ void setTevRegOffset(u32);
	/* 80322714 */ ~J3DTevBlock2();
};

struct J3DTevBlock4 {
	/* 803178EC */ void initialize();
	/* 80317BCC */ void countDLSize();
	/* 8031B4C0 */ void load();
	/* 8031C6F4 */ void patchTexNo();
	/* 8031C788 */ void patchTevReg();
	/* 8031C854 */ void patchTexNoAndTexCoordScale();
	/* 8031C9D0 */ void patch();
	/* 8031D758 */ void diffTexNo();
	/* 8031D7BC */ void diffTevReg();
	/* 8031D858 */ void diffTevStage();
	/* 8031D96C */ void diffTevStageIndirect();
	/* 8031DA1C */ void diffTexCoordScale();
	/* 8032098C */ void reset(J3DTevBlock*);
	/* 80321FE8 */ void ptrToIndex();
	/* 80321FEC */ void indexToPtr();
	/* 80322010 */ void getType();
	/* 8032201C */ void setTexNo(u32, u16);
	/* 8032202C */ void setTexNo(u32, u16 const*);
	/* 80322040 */ void getTexNo(u32) const;
	/* 80322050 */ void setTevOrder(u32, J3DTevOrder);
	/* 80322064 */ void setTevOrder(u32, J3DTevOrder const*);
	/* 80322078 */ void getTevOrder(u32);
	/* 8032208C */ void setTevColor(u32, J3DGXColorS10);
	/* 803220B8 */ void setTevColor(u32, J3DGXColorS10 const*);
	/* 803220E4 */ void getTevColor(u32);
	/* 80322124 */ void setTevKColor(u32, J3DGXColor const*);
	/* 803220F8 */ void setTevKColor(u32, J3DGXColor);
	/* 80322150 */ void getTevKColor(u32);
	/* 80322164 */ void setTevKColorSel(u32, u8);
	/* 80322170 */ void setTevKColorSel(u32, u8 const*);
	/* 80322180 */ void getTevKColorSel(u32);
	/* 8032218C */ void setTevKAlphaSel(u32, u8);
	/* 80322198 */ void setTevKAlphaSel(u32, u8 const*);
	/* 803221A8 */ void getTevKAlphaSel(u32);
	/* 803221B4 */ void setTevStageNum(u8);
	/* 803221BC */ void setTevStageNum(u8 const*);
	/* 803221C8 */ void getTevStageNum() const;
	/* 8032220C */ void setTevStage(u32, J3DTevStage const*);
	/* 803221D0 */ void setTevStage(u32, J3DTevStage);
	/* 80322248 */ void getTevStage(u32);
	/* 80322294 */ void setTevSwapModeInfo(u32, J3DTevSwapModeInfo const*);
	/* 8032225C */ void setTevSwapModeInfo(u32, J3DTevSwapModeInfo);
	/* 803222CC */ void setTevSwapModeTable(u32, J3DTevSwapModeTable);
	/* 803222DC */ void setTevSwapModeTable(u32, J3DTevSwapModeTable const*);
	/* 803222EC */ void getTevSwapModeTable(u32);
	/* 80322310 */ void setIndTevStage(u32, J3DIndTevStage const*);
	/* 803222FC */ void setIndTevStage(u32, J3DIndTevStage);
	/* 80322324 */ void getIndTevStage(u32);
	/* 80322338 */ void getTexNoOffset() const;
	/* 80322340 */ void getTevRegOffset() const;
	/* 80322348 */ void setTevRegOffset(u32);
	/* 80322350 */ ~J3DTevBlock4();
};

struct J3DTevBlock16 {
	/* 80317A00 */ void initialize();
	/* 80317BD4 */ void countDLSize();
	/* 8031BA04 */ void load();
	/* 8031CA1C */ void patchTexNo();
	/* 8031CAB0 */ void patchTevReg();
	/* 8031CB7C */ void patchTexNoAndTexCoordScale();
	/* 8031CCF8 */ void patch();
	/* 8031DB14 */ void diffTexNo();
	/* 8031DB78 */ void diffTevReg();
	/* 8031DC14 */ void diffTevStage();
	/* 8031DD28 */ void diffTevStageIndirect();
	/* 8031DDD8 */ void diffTexCoordScale();
	/* 8031DED0 */ void ptrToIndex();
	/* 80320E24 */ void reset(J3DTevBlock*);
	/* 80321C20 */ void indexToPtr();
	/* 80321C44 */ void getType();
	/* 80321C50 */ void setTexNo(u32, u16);
	/* 80321C60 */ void setTexNo(u32, u16 const*);
	/* 80321C74 */ void getTexNo(u32) const;
	/* 80321C84 */ void setTevOrder(u32, J3DTevOrder);
	/* 80321C98 */ void setTevOrder(u32, J3DTevOrder const*);
	/* 80321CAC */ void getTevOrder(u32);
	/* 80321CC0 */ void setTevColor(u32, J3DGXColorS10);
	/* 80321CEC */ void setTevColor(u32, J3DGXColorS10 const*);
	/* 80321D18 */ void getTevColor(u32);
	/* 80321D2C */ void setTevKColor(u32, J3DGXColor);
	/* 80321D58 */ void setTevKColor(u32, J3DGXColor const*);
	/* 80321D84 */ void getTevKColor(u32);
	/* 80321D98 */ void setTevKColorSel(u32, u8);
	/* 80321DA4 */ void setTevKColorSel(u32, u8 const*);
	/* 80321DB4 */ void getTevKColorSel(u32);
	/* 80321DC0 */ void setTevKAlphaSel(u32, u8);
	/* 80321DCC */ void setTevKAlphaSel(u32, u8 const*);
	/* 80321DDC */ void getTevKAlphaSel(u32);
	/* 80321DE8 */ void setTevStageNum(u8);
	/* 80321DF0 */ void setTevStageNum(u8 const*);
	/* 80321DFC */ void getTevStageNum() const;
	/* 80321E04 */ void setTevStage(u32, J3DTevStage);
	/* 80321E40 */ void setTevStage(u32, J3DTevStage const*);
	/* 80321E7C */ void getTevStage(u32);
	/* 80321E90 */ void setTevSwapModeInfo(u32, J3DTevSwapModeInfo);
	/* 80321EC8 */ void setTevSwapModeInfo(u32, J3DTevSwapModeInfo const*);
	/* 80321F00 */ void setTevSwapModeTable(u32, J3DTevSwapModeTable);
	/* 80321F10 */ void setTevSwapModeTable(u32, J3DTevSwapModeTable const*);
	/* 80321F20 */ void getTevSwapModeTable(u32);
	/* 80321F30 */ void setIndTevStage(u32, J3DIndTevStage);
	/* 80321F44 */ void setIndTevStage(u32, J3DIndTevStage const*);
	/* 80321F58 */ void getIndTevStage(u32);
	/* 80321F6C */ void getTexNoOffset() const;
	/* 80321F74 */ void getTevRegOffset() const;
	/* 80321F7C */ void setTevRegOffset(u32);
	/* 80321F84 */ ~J3DTevBlock16();
};

struct J3DIndTexCoordScale {
	/* 8000E024 */ ~J3DIndTexCoordScale();
};

struct J3DIndTexMtx {
	/* 8000E064 */ ~J3DIndTexMtx();
};

struct J3DIndTexOrder {
};

struct J3DIndBlock {
};

struct J3DIndBlockFull {
	/* 80317B28 */ void initialize();
	/* 80317BDC */ void countDLSize();
	/* 8031E12C */ void load();
	/* 8031E328 */ void diff(u32);
	/* 803210B0 */ void reset(J3DIndBlock*);
	/* 80323390 */ void getType();
	/* 8032339C */ void setIndTexStageNum(u8);
	/* 803233A4 */ void getIndTexStageNum() const;
	/* 803233C0 */ void setIndTexOrder(u32, J3DIndTexOrder const*);
	/* 803233AC */ void setIndTexOrder(u32, J3DIndTexOrder);
	/* 803233D4 */ void getIndTexOrder(u32);
	/* 803233E8 */ void setIndTexMtx(u32, J3DIndTexMtx);
	/* 8032341C */ void setIndTexMtx(u32, J3DIndTexMtx const*);
	/* 80323450 */ void getIndTexMtx(u32);
	/* 80323464 */ void setIndTexCoordScale(u32, J3DIndTexCoordScale);
	/* 80323478 */ void setIndTexCoordScale(u32, J3DIndTexCoordScale const*);
	/* 8032348C */ void getIndTexCoordScale(u32);
	/* 803234A0 */ ~J3DIndBlockFull();
};

struct J3DAlphaComp {
};

struct J3DFog {
};

struct J3DZMode {
};

struct J3DBlend {
};

struct J3DPEBlock {
	/* 8000DBCC */ void patch();
	/* 8000DF3C */ void getZCompLoc() const;
	/* 8000DF44 */ void getZMode();
	/* 8000DF4C */ void getBlend();
	/* 8000DF54 */ void getAlphaComp();
	/* 8000DF5C */ void getFog();
	/* 8000E010 */ void setZCompLoc(u8);
	/* 80317378 */ void setZCompLoc(u8 const*);
	/* 8000E014 */ void setZMode(J3DZMode);
	/* 80317374 */ void setZMode(J3DZMode const*);
	/* 8000E018 */ void setBlend(J3DBlend const&);
	/* 80317370 */ void setBlend(J3DBlend const*);
	/* 8000E01C */ void setAlphaComp(J3DAlphaComp const&);
	/* 8031736C */ void setAlphaComp(J3DAlphaComp const*);
	/* 80317344 */ void diff(u32);
	/* 80317348 */ void reset(J3DPEBlock*);
	/* 8031735C */ void diffFog();
	/* 80317360 */ void diffBlend();
	/* 80317364 */ void setFog(J3DFog*);
	/* 80317368 */ void setFog(J3DFog);
	/* 80317380 */ void setDither(u8 const*);
	/* 8031737C */ void setDither(u8);
	/* 80317384 */ void getDither() const;
	/* 8031738C */ void getFogOffset() const;
	/* 80317394 */ void setFogOffset(u32);
};

struct J3DPEBlockFogOff {
	/* 80317B34 */ void initialize();
	/* 80317BFC */ void countDLSize();
	/* 8031EC50 */ void load();
	/* 8031F0D8 */ void diffBlend();
	/* 803211B4 */ void reset(J3DPEBlock*);
	/* 80321ACC */ void diff(u32);
	/* 80321B00 */ void getType();
	/* 80321B0C */ void setAlphaComp(J3DAlphaComp const&);
	/* 80321B28 */ void setAlphaComp(J3DAlphaComp const*);
	/* 80321B44 */ void getAlphaComp();
	/* 80321B4C */ void setBlend(J3DBlend const&);
	/* 80321B58 */ void setBlend(J3DBlend const*);
	/* 80321B64 */ void getBlend();
	/* 80321B6C */ void setZMode(J3DZMode);
	/* 80321B78 */ void setZMode(J3DZMode const*);
	/* 80321B84 */ void getZMode();
	/* 80321B8C */ void setZCompLoc(u8);
	/* 80321B94 */ void setZCompLoc(u8 const*);
	/* 80321BA0 */ void getZCompLoc() const;
	/* 80321BA8 */ void setDither(u8);
	/* 80321BB0 */ void setDither(u8 const*);
	/* 80321BBC */ void getDither() const;
	/* 80321BC4 */ ~J3DPEBlockFogOff();
};

struct J3DPEBlockFull {
	/* 80317B58 */ void initialize();
	/* 80317C04 */ void countDLSize();
	/* 8031F3C0 */ void load();
	/* 8031F890 */ void patch();
	/* 8031F940 */ void diffFog();
	/* 8031F9B8 */ void diffBlend();
	/* 8031FCA0 */ void diff(u32);
	/* 8032129C */ void reset(J3DPEBlock*);
	/* 8032194C */ void getType();
	/* 80321958 */ void setFog(J3DFog*);
	/* 8032197C */ void setFog(J3DFog);
	/* 803219A0 */ void getFog();
	/* 803219A8 */ void setAlphaComp(J3DAlphaComp const&);
	/* 803219C4 */ void setAlphaComp(J3DAlphaComp const*);
	/* 803219E0 */ void getAlphaComp();
	/* 803219E8 */ void setBlend(J3DBlend const&);
	/* 803219F4 */ void setBlend(J3DBlend const*);
	/* 80321A00 */ void getBlend();
	/* 80321A08 */ void setZMode(J3DZMode);
	/* 80321A14 */ void setZMode(J3DZMode const*);
	/* 80321A20 */ void getZMode();
	/* 80321A28 */ void setZCompLoc(u8);
	/* 80321A30 */ void setZCompLoc(u8 const*);
	/* 80321A3C */ void getZCompLoc() const;
	/* 80321A44 */ void setDither(u8);
	/* 80321A4C */ void setDither(u8 const*);
	/* 80321A58 */ void getDither() const;
	/* 80321A60 */ void getFogOffset() const;
	/* 80321A68 */ void setFogOffset(u32);
	/* 80321A70 */ ~J3DPEBlockFull();
};

struct J3DPEBlockOpa {
	/* 80317BE4 */ void countDLSize();
	/* 8031E408 */ void load();
	/* 80323328 */ void getType();
	/* 80323334 */ ~J3DPEBlockOpa();
};

struct J3DPEBlockTexEdge {
	/* 80317BEC */ void countDLSize();
	/* 8031E6C8 */ void load();
	/* 803232C0 */ void getType();
	/* 803232CC */ ~J3DPEBlockTexEdge();
};

struct J3DPEBlockXlu {
	/* 80317BF4 */ void countDLSize();
	/* 8031E98C */ void load();
	/* 80323258 */ void getType();
	/* 80323264 */ ~J3DPEBlockXlu();
};

struct _GXTexCoordID {
};

struct _GXIndTexMtxID {
};

struct _GXIndTexStageID {
};

struct _GXIndTexScale {
};

struct _GXTexMapID {
};

struct _GXTevStageID {
};

struct _GXChannelID {
};

struct _GXTevKColorID {
};

struct _GXColor {
};

struct _GXTevRegID {
};

struct _GXColorS10 {
};

struct _GXFogType {
};

struct _GXFogAdjTable {
};

struct J3DIndTexMtxInfo {
	/* 803257DC */ void operator=(J3DIndTexMtxInfo const&);
};

struct J3DFogInfo {
	/* 80325800 */ void operator=(J3DFogInfo const&);
};

struct J3DNBTScaleInfo {
	/* 8032587C */ void operator=(J3DNBTScaleInfo const&);
};

// 
// Forward References:
// 


extern "C" void initialize__21J3DColorBlockLightOffFv(); // 1
extern "C" void initialize__22J3DColorBlockAmbientOnFv(); // 1
extern "C" void initialize__20J3DColorBlockLightOnFv(); // 1
extern "C" void initialize__21J3DTexGenBlockPatchedFv(); // 1
extern "C" void initialize__15J3DTexGenBlock4Fv(); // 1
extern "C" void initialize__19J3DTexGenBlockBasicFv(); // 1
extern "C" void initialize__15J3DTevBlockNullFv(); // 1
extern "C" void initialize__18J3DTevBlockPatchedFv(); // 1
extern "C" void initialize__12J3DTevBlock1Fv(); // 1
extern "C" void initialize__12J3DTevBlock2Fv(); // 1
extern "C" void initialize__12J3DTevBlock4Fv(); // 1
extern "C" void initialize__13J3DTevBlock16Fv(); // 1
extern "C" void initialize__15J3DIndBlockFullFv(); // 1
extern "C" void initialize__16J3DPEBlockFogOffFv(); // 1
extern "C" void initialize__14J3DPEBlockFullFv(); // 1
extern "C" void countDLSize__21J3DColorBlockLightOffFv(); // 1
extern "C" void countDLSize__22J3DColorBlockAmbientOnFv(); // 1
extern "C" void countDLSize__20J3DColorBlockLightOnFv(); // 1
extern "C" void countDLSize__21J3DTexGenBlockPatchedFv(); // 1
extern "C" void countDLSize__15J3DTexGenBlock4Fv(); // 1
extern "C" void countDLSize__19J3DTexGenBlockBasicFv(); // 1
extern "C" void countDLSize__18J3DTevBlockPatchedFv(); // 1
extern "C" void countDLSize__12J3DTevBlock1Fv(); // 1
extern "C" void countDLSize__12J3DTevBlock2Fv(); // 1
extern "C" void countDLSize__12J3DTevBlock4Fv(); // 1
extern "C" void countDLSize__13J3DTevBlock16Fv(); // 1
extern "C" void countDLSize__15J3DIndBlockFullFv(); // 1
extern "C" void countDLSize__13J3DPEBlockOpaFv(); // 1
extern "C" void countDLSize__17J3DPEBlockTexEdgeFv(); // 1
extern "C" void countDLSize__13J3DPEBlockXluFv(); // 1
extern "C" void countDLSize__16J3DPEBlockFogOffFv(); // 1
extern "C" void countDLSize__14J3DPEBlockFullFv(); // 1
extern "C" void load__21J3DColorBlockLightOffFv(); // 1
extern "C" void load__22J3DColorBlockAmbientOnFv(); // 1
extern "C" void load__20J3DColorBlockLightOnFv(); // 1
extern "C" void patch__21J3DColorBlockLightOffFv(); // 1
extern "C" void patchMatColor__21J3DColorBlockLightOffFv(); // 1
extern "C" void patchLight__21J3DColorBlockLightOffFv(); // 1
extern "C" void patch__20J3DColorBlockLightOnFv(); // 1
extern "C" void patchMatColor__20J3DColorBlockLightOnFv(); // 1
extern "C" void patchLight__20J3DColorBlockLightOnFv(); // 1
extern "C" void diff__21J3DColorBlockLightOffFUl(); // 1
extern "C" void diffMatColor__21J3DColorBlockLightOffFv(); // 1
extern "C" void diffColorChan__21J3DColorBlockLightOffFv(); // 1
extern "C" void diff__20J3DColorBlockLightOnFUl(); // 1
extern "C" void diffAmbColor__20J3DColorBlockLightOnFv(); // 1
extern "C" void diffMatColor__20J3DColorBlockLightOnFv(); // 1
extern "C" void diffColorChan__20J3DColorBlockLightOnFv(); // 1
extern "C" void diffLightObj__20J3DColorBlockLightOnFUl(); // 1
extern "C" void load__15J3DTexGenBlock4Fv(); // 1
extern "C" void load__19J3DTexGenBlockBasicFv(); // 1
extern "C" void patch__21J3DTexGenBlockPatchedFv(); // 1
extern "C" void patch__15J3DTexGenBlock4Fv(); // 1
extern "C" void patch__19J3DTexGenBlockBasicFv(); // 1
extern "C" void diff__21J3DTexGenBlockPatchedFUl(); // 1
extern "C" void diffTexMtx__21J3DTexGenBlockPatchedFv(); // 1
extern "C" void diffTexGen__21J3DTexGenBlockPatchedFv(); // 1
extern "C" void load__12J3DTevBlock1Fv(); // 1
extern "C" void load__12J3DTevBlock2Fv(); // 1
extern "C" void load__12J3DTevBlock4Fv(); // 1
extern "C" void load__13J3DTevBlock16Fv(); // 1
extern "C" void patchTexNo__18J3DTevBlockPatchedFv(); // 1
extern "C" void patchTevReg__18J3DTevBlockPatchedFv(); // 1
extern "C" void patchTexNoAndTexCoordScale__18J3DTevBlockPatchedFv(); // 1
extern "C" void patch__18J3DTevBlockPatchedFv(); // 1
extern "C" void patchTexNo__12J3DTevBlock1Fv(); // 1
extern "C" void patchTevReg__12J3DTevBlock1Fv(); // 1
extern "C" void patchTexNoAndTexCoordScale__12J3DTevBlock1Fv(); // 1
extern "C" void patch__12J3DTevBlock1Fv(); // 1
extern "C" void patchTexNo__12J3DTevBlock2Fv(); // 1
extern "C" void patchTevReg__12J3DTevBlock2Fv(); // 1
extern "C" void patchTexNoAndTexCoordScale__12J3DTevBlock2Fv(); // 1
extern "C" void patch__12J3DTevBlock2Fv(); // 1
extern "C" void patchTexNo__12J3DTevBlock4Fv(); // 1
extern "C" void patchTevReg__12J3DTevBlock4Fv(); // 1
extern "C" void patchTexNoAndTexCoordScale__12J3DTevBlock4Fv(); // 1
extern "C" void patch__12J3DTevBlock4Fv(); // 1
extern "C" void patchTexNo__13J3DTevBlock16Fv(); // 1
extern "C" void patchTevReg__13J3DTevBlock16Fv(); // 1
extern "C" void patchTexNoAndTexCoordScale__13J3DTevBlock16Fv(); // 1
extern "C" void patch__13J3DTevBlock16Fv(); // 1
extern "C" void diff__11J3DTevBlockFUl(); // 1
extern "C" void diffTexNo__18J3DTevBlockPatchedFv(); // 1
extern "C" void diffTevStage__18J3DTevBlockPatchedFv(); // 1
extern "C" void diffTevStageIndirect__18J3DTevBlockPatchedFv(); // 1
extern "C" void diffTevReg__18J3DTevBlockPatchedFv(); // 1
extern "C" void diffTexCoordScale__18J3DTevBlockPatchedFv(); // 1
extern "C" void diffTexNo__12J3DTevBlock1Fv(); // 1
extern "C" void diffTevReg__12J3DTevBlock1Fv(); // 1
extern "C" void diffTevStage__12J3DTevBlock1Fv(); // 1
extern "C" void diffTevStageIndirect__12J3DTevBlock1Fv(); // 1
extern "C" void diffTexCoordScale__12J3DTevBlock1Fv(); // 1
extern "C" void diffTexNo__12J3DTevBlock2Fv(); // 1
extern "C" void diffTevReg__12J3DTevBlock2Fv(); // 1
extern "C" void diffTevStage__12J3DTevBlock2Fv(); // 1
extern "C" void diffTevStageIndirect__12J3DTevBlock2Fv(); // 1
extern "C" void diffTexCoordScale__12J3DTevBlock2Fv(); // 1
extern "C" void diffTexNo__12J3DTevBlock4Fv(); // 1
extern "C" void diffTevReg__12J3DTevBlock4Fv(); // 1
extern "C" void diffTevStage__12J3DTevBlock4Fv(); // 1
extern "C" void diffTevStageIndirect__12J3DTevBlock4Fv(); // 1
extern "C" void diffTexCoordScale__12J3DTevBlock4Fv(); // 1
extern "C" void diffTexNo__13J3DTevBlock16Fv(); // 1
extern "C" void diffTevReg__13J3DTevBlock16Fv(); // 1
extern "C" void diffTevStage__13J3DTevBlock16Fv(); // 1
extern "C" void diffTevStageIndirect__13J3DTevBlock16Fv(); // 1
extern "C" void diffTexCoordScale__13J3DTevBlock16Fv(); // 1
extern "C" void ptrToIndex__13J3DTevBlock16Fv(); // 1
extern "C" void ptrToIndex__18J3DTevBlockPatchedFv(); // 1
extern "C" void indexToPtr_private__11J3DTevBlockFUl(); // 1
extern "C" void load__15J3DIndBlockFullFv(); // 1
extern "C" void diff__15J3DIndBlockFullFUl(); // 1
extern "C" void load__13J3DPEBlockOpaFv(); // 1
extern "C" void load__17J3DPEBlockTexEdgeFv(); // 1
extern "C" void load__13J3DPEBlockXluFv(); // 1
extern "C" void load__16J3DPEBlockFogOffFv(); // 1
extern "C" void diffBlend__16J3DPEBlockFogOffFv(); // 1
extern "C" void load__14J3DPEBlockFullFv(); // 1
extern "C" void patch__14J3DPEBlockFullFv(); // 1
extern "C" void diffFog__14J3DPEBlockFullFv(); // 1
extern "C" void diffBlend__14J3DPEBlockFullFv(); // 1
extern "C" void diff__14J3DPEBlockFullFUl(); // 1
extern "C" void reset__21J3DColorBlockLightOffFP13J3DColorBlock(); // 1
extern "C" void reset__22J3DColorBlockAmbientOnFP13J3DColorBlock(); // 1
extern "C" void reset__20J3DColorBlockLightOnFP13J3DColorBlock(); // 1
extern "C" void reset__21J3DTexGenBlockPatchedFP14J3DTexGenBlock(); // 1
extern "C" void reset__15J3DTexGenBlock4FP14J3DTexGenBlock(); // 1
extern "C" void reset__19J3DTexGenBlockBasicFP14J3DTexGenBlock(); // 1
extern "C" void reset__18J3DTevBlockPatchedFP11J3DTevBlock(); // 1
extern "C" void reset__12J3DTevBlock1FP11J3DTevBlock(); // 1
extern "C" void reset__12J3DTevBlock2FP11J3DTevBlock(); // 1
extern "C" void reset__12J3DTevBlock4FP11J3DTevBlock(); // 1
extern "C" void reset__13J3DTevBlock16FP11J3DTevBlock(); // 1
extern "C" void reset__15J3DIndBlockFullFP11J3DIndBlock(); // 1
extern "C" void reset__16J3DPEBlockFogOffFP10J3DPEBlock(); // 1
extern "C" void reset__14J3DPEBlockFullFP10J3DPEBlock(); // 1
extern "C" void calc__21J3DTexGenBlockPatchedFPA4_Cf(); // 1
extern "C" void calcWithoutViewMtx__21J3DTexGenBlockPatchedFPA4_Cf(); // 1
extern "C" void calcPostTexMtx__21J3DTexGenBlockPatchedFPA4_Cf(); // 1
extern "C" void calcPostTexMtxWithoutViewMtx__21J3DTexGenBlockPatchedFPA4_Cf(); // 1
extern "C" void diffTevReg__11J3DTevBlockFv(); // 1
extern "C" void diffTevStageIndirect__11J3DTevBlockFv(); // 1
extern "C" void diffTevStage__11J3DTevBlockFv(); // 1
extern "C" void diffTexCoordScale__11J3DTevBlockFv(); // 1
extern "C" void diffTexNo__11J3DTevBlockFv(); // 1
extern "C" void getType__14J3DPEBlockFullFv(); // 1
extern "C" void setFog__14J3DPEBlockFullFP6J3DFog(); // 1
extern "C" void setFog__14J3DPEBlockFullF6J3DFog(); // 1
extern "C" void getFog__14J3DPEBlockFullFv(); // 1
extern "C" void setAlphaComp__14J3DPEBlockFullFRC12J3DAlphaComp(); // 1
extern "C" void setAlphaComp__14J3DPEBlockFullFPC12J3DAlphaComp(); // 1
extern "C" void getAlphaComp__14J3DPEBlockFullFv(); // 1
extern "C" void setBlend__14J3DPEBlockFullFRC8J3DBlend(); // 1
extern "C" void setBlend__14J3DPEBlockFullFPC8J3DBlend(); // 1
extern "C" void getBlend__14J3DPEBlockFullFv(); // 1
extern "C" void setZMode__14J3DPEBlockFullF8J3DZMode(); // 1
extern "C" void setZMode__14J3DPEBlockFullFPC8J3DZMode(); // 1
extern "C" void getZMode__14J3DPEBlockFullFv(); // 1
extern "C" void setZCompLoc__14J3DPEBlockFullFUc(); // 1
extern "C" void setZCompLoc__14J3DPEBlockFullFPCUc(); // 1
extern "C" void getZCompLoc__14J3DPEBlockFullCFv(); // 1
extern "C" void setDither__14J3DPEBlockFullFUc(); // 1
extern "C" void setDither__14J3DPEBlockFullFPCUc(); // 1
extern "C" void getDither__14J3DPEBlockFullCFv(); // 1
extern "C" void getFogOffset__14J3DPEBlockFullCFv(); // 1
extern "C" void setFogOffset__14J3DPEBlockFullFUl(); // 1
extern "C" void __dt__14J3DPEBlockFullFv(); // 1
extern "C" void diff__16J3DPEBlockFogOffFUl(); // 1
extern "C" void getType__16J3DPEBlockFogOffFv(); // 1
extern "C" void setAlphaComp__16J3DPEBlockFogOffFRC12J3DAlphaComp(); // 1
extern "C" void setAlphaComp__16J3DPEBlockFogOffFPC12J3DAlphaComp(); // 1
extern "C" void getAlphaComp__16J3DPEBlockFogOffFv(); // 1
extern "C" void setBlend__16J3DPEBlockFogOffFRC8J3DBlend(); // 1
extern "C" void setBlend__16J3DPEBlockFogOffFPC8J3DBlend(); // 1
extern "C" void getBlend__16J3DPEBlockFogOffFv(); // 1
extern "C" void setZMode__16J3DPEBlockFogOffF8J3DZMode(); // 1
extern "C" void setZMode__16J3DPEBlockFogOffFPC8J3DZMode(); // 1
extern "C" void getZMode__16J3DPEBlockFogOffFv(); // 1
extern "C" void setZCompLoc__16J3DPEBlockFogOffFUc(); // 1
extern "C" void setZCompLoc__16J3DPEBlockFogOffFPCUc(); // 1
extern "C" void getZCompLoc__16J3DPEBlockFogOffCFv(); // 1
extern "C" void setDither__16J3DPEBlockFogOffFUc(); // 1
extern "C" void setDither__16J3DPEBlockFogOffFPCUc(); // 1
extern "C" void getDither__16J3DPEBlockFogOffCFv(); // 1
extern "C" void __dt__16J3DPEBlockFogOffFv(); // 1
extern "C" void indexToPtr__13J3DTevBlock16Fv(); // 1
extern "C" void getType__13J3DTevBlock16Fv(); // 1
extern "C" void setTexNo__13J3DTevBlock16FUlUs(); // 1
extern "C" void setTexNo__13J3DTevBlock16FUlPCUs(); // 1
extern "C" void getTexNo__13J3DTevBlock16CFUl(); // 1
extern "C" void setTevOrder__13J3DTevBlock16FUl11J3DTevOrder(); // 1
extern "C" void setTevOrder__13J3DTevBlock16FUlPC11J3DTevOrder(); // 1
extern "C" void getTevOrder__13J3DTevBlock16FUl(); // 1
extern "C" void setTevColor__13J3DTevBlock16FUl13J3DGXColorS10(); // 1
extern "C" void setTevColor__13J3DTevBlock16FUlPC13J3DGXColorS10(); // 1
extern "C" void getTevColor__13J3DTevBlock16FUl(); // 1
extern "C" void setTevKColor__13J3DTevBlock16FUl10J3DGXColor(); // 1
extern "C" void setTevKColor__13J3DTevBlock16FUlPC10J3DGXColor(); // 1
extern "C" void getTevKColor__13J3DTevBlock16FUl(); // 1
extern "C" void setTevKColorSel__13J3DTevBlock16FUlUc(); // 1
extern "C" void setTevKColorSel__13J3DTevBlock16FUlPCUc(); // 1
extern "C" void getTevKColorSel__13J3DTevBlock16FUl(); // 1
extern "C" void setTevKAlphaSel__13J3DTevBlock16FUlUc(); // 1
extern "C" void setTevKAlphaSel__13J3DTevBlock16FUlPCUc(); // 1
extern "C" void getTevKAlphaSel__13J3DTevBlock16FUl(); // 1
extern "C" void setTevStageNum__13J3DTevBlock16FUc(); // 1
extern "C" void setTevStageNum__13J3DTevBlock16FPCUc(); // 1
extern "C" void getTevStageNum__13J3DTevBlock16CFv(); // 1
extern "C" void setTevStage__13J3DTevBlock16FUl11J3DTevStage(); // 1
extern "C" void setTevStage__13J3DTevBlock16FUlPC11J3DTevStage(); // 1
extern "C" void getTevStage__13J3DTevBlock16FUl(); // 1
extern "C" void setTevSwapModeInfo__13J3DTevBlock16FUl18J3DTevSwapModeInfo(); // 1
extern "C" void setTevSwapModeInfo__13J3DTevBlock16FUlPC18J3DTevSwapModeInfo(); // 1
extern "C" void setTevSwapModeTable__13J3DTevBlock16FUl19J3DTevSwapModeTable(); // 1
extern "C" void setTevSwapModeTable__13J3DTevBlock16FUlPC19J3DTevSwapModeTable(); // 1
extern "C" void getTevSwapModeTable__13J3DTevBlock16FUl(); // 1
extern "C" void setIndTevStage__13J3DTevBlock16FUl14J3DIndTevStage(); // 1
extern "C" void setIndTevStage__13J3DTevBlock16FUlPC14J3DIndTevStage(); // 1
extern "C" void getIndTevStage__13J3DTevBlock16FUl(); // 1
extern "C" void getTexNoOffset__13J3DTevBlock16CFv(); // 1
extern "C" void getTevRegOffset__13J3DTevBlock16CFv(); // 1
extern "C" void setTevRegOffset__13J3DTevBlock16FUl(); // 1
extern "C" void __dt__13J3DTevBlock16Fv(); // 1
extern "C" void setTexNoOffset__11J3DTevBlockFUl(); // 1
extern "C" void ptrToIndex__12J3DTevBlock4Fv(); // 1
extern "C" void indexToPtr__12J3DTevBlock4Fv(); // 1
extern "C" void getType__12J3DTevBlock4Fv(); // 1
extern "C" void setTexNo__12J3DTevBlock4FUlUs(); // 1
extern "C" void setTexNo__12J3DTevBlock4FUlPCUs(); // 1
extern "C" void getTexNo__12J3DTevBlock4CFUl(); // 1
extern "C" void setTevOrder__12J3DTevBlock4FUl11J3DTevOrder(); // 1
extern "C" void setTevOrder__12J3DTevBlock4FUlPC11J3DTevOrder(); // 1
extern "C" void getTevOrder__12J3DTevBlock4FUl(); // 1
extern "C" void setTevColor__12J3DTevBlock4FUl13J3DGXColorS10(); // 1
extern "C" void setTevColor__12J3DTevBlock4FUlPC13J3DGXColorS10(); // 1
extern "C" void getTevColor__12J3DTevBlock4FUl(); // 1
extern "C" void setTevKColor__12J3DTevBlock4FUl10J3DGXColor(); // 1
extern "C" void setTevKColor__12J3DTevBlock4FUlPC10J3DGXColor(); // 1
extern "C" void getTevKColor__12J3DTevBlock4FUl(); // 1
extern "C" void setTevKColorSel__12J3DTevBlock4FUlUc(); // 1
extern "C" void setTevKColorSel__12J3DTevBlock4FUlPCUc(); // 1
extern "C" void getTevKColorSel__12J3DTevBlock4FUl(); // 1
extern "C" void setTevKAlphaSel__12J3DTevBlock4FUlUc(); // 1
extern "C" void setTevKAlphaSel__12J3DTevBlock4FUlPCUc(); // 1
extern "C" void getTevKAlphaSel__12J3DTevBlock4FUl(); // 1
extern "C" void setTevStageNum__12J3DTevBlock4FUc(); // 1
extern "C" void setTevStageNum__12J3DTevBlock4FPCUc(); // 1
extern "C" void getTevStageNum__12J3DTevBlock4CFv(); // 1
extern "C" void setTevStage__12J3DTevBlock4FUl11J3DTevStage(); // 1
extern "C" void setTevStage__12J3DTevBlock4FUlPC11J3DTevStage(); // 1
extern "C" void getTevStage__12J3DTevBlock4FUl(); // 1
extern "C" void setTevSwapModeInfo__12J3DTevBlock4FUl18J3DTevSwapModeInfo(); // 1
extern "C" void setTevSwapModeInfo__12J3DTevBlock4FUlPC18J3DTevSwapModeInfo(); // 1
extern "C" void setTevSwapModeTable__12J3DTevBlock4FUl19J3DTevSwapModeTable(); // 1
extern "C" void setTevSwapModeTable__12J3DTevBlock4FUlPC19J3DTevSwapModeTable(); // 1
extern "C" void getTevSwapModeTable__12J3DTevBlock4FUl(); // 1
extern "C" void setIndTevStage__12J3DTevBlock4FUl14J3DIndTevStage(); // 1
extern "C" void setIndTevStage__12J3DTevBlock4FUlPC14J3DIndTevStage(); // 1
extern "C" void getIndTevStage__12J3DTevBlock4FUl(); // 1
extern "C" void getTexNoOffset__12J3DTevBlock4CFv(); // 1
extern "C" void getTevRegOffset__12J3DTevBlock4CFv(); // 1
extern "C" void setTevRegOffset__12J3DTevBlock4FUl(); // 1
extern "C" void __dt__12J3DTevBlock4Fv(); // 1
extern "C" void ptrToIndex__12J3DTevBlock2Fv(); // 1
extern "C" void indexToPtr__12J3DTevBlock2Fv(); // 1
extern "C" void getType__12J3DTevBlock2Fv(); // 1
extern "C" void setTexNo__12J3DTevBlock2FUlUs(); // 1
extern "C" void setTexNo__12J3DTevBlock2FUlPCUs(); // 1
extern "C" void getTexNo__12J3DTevBlock2CFUl(); // 1
extern "C" void setTevOrder__12J3DTevBlock2FUl11J3DTevOrder(); // 1
extern "C" void setTevOrder__12J3DTevBlock2FUlPC11J3DTevOrder(); // 1
extern "C" void getTevOrder__12J3DTevBlock2FUl(); // 1
extern "C" void setTevColor__12J3DTevBlock2FUl13J3DGXColorS10(); // 1
extern "C" void setTevColor__12J3DTevBlock2FUlPC13J3DGXColorS10(); // 1
extern "C" void getTevColor__12J3DTevBlock2FUl(); // 1
extern "C" void setTevKColor__12J3DTevBlock2FUl10J3DGXColor(); // 1
extern "C" void setTevKColor__12J3DTevBlock2FUlPC10J3DGXColor(); // 1
extern "C" void getTevKColor__12J3DTevBlock2FUl(); // 1
extern "C" void setTevKColorSel__12J3DTevBlock2FUlUc(); // 1
extern "C" void setTevKColorSel__12J3DTevBlock2FUlPCUc(); // 1
extern "C" void getTevKColorSel__12J3DTevBlock2FUl(); // 1
extern "C" void setTevKAlphaSel__12J3DTevBlock2FUlUc(); // 1
extern "C" void setTevKAlphaSel__12J3DTevBlock2FUlPCUc(); // 1
extern "C" void getTevKAlphaSel__12J3DTevBlock2FUl(); // 1
extern "C" void setTevStageNum__12J3DTevBlock2FUc(); // 1
extern "C" void setTevStageNum__12J3DTevBlock2FPCUc(); // 1
extern "C" void getTevStageNum__12J3DTevBlock2CFv(); // 1
extern "C" void setTevStage__12J3DTevBlock2FUl11J3DTevStage(); // 1
extern "C" void setTevStage__12J3DTevBlock2FUlPC11J3DTevStage(); // 1
extern "C" void getTevStage__12J3DTevBlock2FUl(); // 1
extern "C" void setTevSwapModeInfo__12J3DTevBlock2FUl18J3DTevSwapModeInfo(); // 1
extern "C" void setTevSwapModeInfo__12J3DTevBlock2FUlPC18J3DTevSwapModeInfo(); // 1
extern "C" void setTevSwapModeTable__12J3DTevBlock2FUl19J3DTevSwapModeTable(); // 1
extern "C" void setTevSwapModeTable__12J3DTevBlock2FUlPC19J3DTevSwapModeTable(); // 1
extern "C" void getTevSwapModeTable__12J3DTevBlock2FUl(); // 1
extern "C" void setIndTevStage__12J3DTevBlock2FUl14J3DIndTevStage(); // 1
extern "C" void setIndTevStage__12J3DTevBlock2FUlPC14J3DIndTevStage(); // 1
extern "C" void getIndTevStage__12J3DTevBlock2FUl(); // 1
extern "C" void getTexNoOffset__12J3DTevBlock2CFv(); // 1
extern "C" void getTevRegOffset__12J3DTevBlock2CFv(); // 1
extern "C" void setTevRegOffset__12J3DTevBlock2FUl(); // 1
extern "C" void __dt__12J3DTevBlock2Fv(); // 1
extern "C" void ptrToIndex__12J3DTevBlock1Fv(); // 1
extern "C" void indexToPtr__12J3DTevBlock1Fv(); // 1
extern "C" void getType__12J3DTevBlock1Fv(); // 1
extern "C" void setTexNo__12J3DTevBlock1FUlUs(); // 1
extern "C" void setTexNo__12J3DTevBlock1FUlPCUs(); // 1
extern "C" void getTexNo__12J3DTevBlock1CFUl(); // 1
extern "C" void setTevOrder__12J3DTevBlock1FUl11J3DTevOrder(); // 1
extern "C" void setTevOrder__12J3DTevBlock1FUlPC11J3DTevOrder(); // 1
extern "C" void getTevOrder__12J3DTevBlock1FUl(); // 1
extern "C" void setTevStageNum__12J3DTevBlock1FUc(); // 1
extern "C" void setTevStageNum__12J3DTevBlock1FPCUc(); // 1
extern "C" void getTevStageNum__12J3DTevBlock1CFv(); // 1
extern "C" void setTevStage__12J3DTevBlock1FUl11J3DTevStage(); // 1
extern "C" void setTevStage__12J3DTevBlock1FUlPC11J3DTevStage(); // 1
extern "C" void getTevStage__12J3DTevBlock1FUl(); // 1
extern "C" void setIndTevStage__12J3DTevBlock1FUl14J3DIndTevStage(); // 1
extern "C" void setIndTevStage__12J3DTevBlock1FUlPC14J3DIndTevStage(); // 1
extern "C" void getIndTevStage__12J3DTevBlock1FUl(); // 1
extern "C" void getTexNoOffset__12J3DTevBlock1CFv(); // 1
extern "C" void __dt__12J3DTevBlock1Fv(); // 1
extern "C" void setTevKColorSel__11J3DTevBlockFUlPCUc(); // 1
extern "C" void setTevKAlphaSel__11J3DTevBlockFUlPCUc(); // 1
extern "C" void setTevSwapModeInfo__11J3DTevBlockFUl18J3DTevSwapModeInfo(); // 1
extern "C" void setTevSwapModeInfo__11J3DTevBlockFUlPC18J3DTevSwapModeInfo(); // 1
extern "C" void setTevSwapModeTable__11J3DTevBlockFUlPC19J3DTevSwapModeTable(); // 1
extern "C" void getTevRegOffset__11J3DTevBlockCFv(); // 1
extern "C" void setTevRegOffset__11J3DTevBlockFUl(); // 1
extern "C" void load__18J3DTevBlockPatchedFv(); // 1
extern "C" void indexToPtr__18J3DTevBlockPatchedFv(); // 1
extern "C" void getType__18J3DTevBlockPatchedFv(); // 1
extern "C" void setTevStageNum__18J3DTevBlockPatchedFUc(); // 1
extern "C" void setTevStageNum__18J3DTevBlockPatchedFPCUc(); // 1
extern "C" void getTevStageNum__18J3DTevBlockPatchedCFv(); // 1
extern "C" void setTexNo__18J3DTevBlockPatchedFUlUs(); // 1
extern "C" void setTexNo__18J3DTevBlockPatchedFUlPCUs(); // 1
extern "C" void getTexNo__18J3DTevBlockPatchedCFUl(); // 1
extern "C" void setTevOrder__18J3DTevBlockPatchedFUl11J3DTevOrder(); // 1
extern "C" void setTevOrder__18J3DTevBlockPatchedFUlPC11J3DTevOrder(); // 1
extern "C" void getTevOrder__18J3DTevBlockPatchedFUl(); // 1
extern "C" void setTevStage__18J3DTevBlockPatchedFUl11J3DTevStage(); // 1
extern "C" void setTevStage__18J3DTevBlockPatchedFUlPC11J3DTevStage(); // 1
extern "C" void getTevStage__18J3DTevBlockPatchedFUl(); // 1
extern "C" void setIndTevStage__18J3DTevBlockPatchedFUl14J3DIndTevStage(); // 1
extern "C" void setIndTevStage__18J3DTevBlockPatchedFUlPC14J3DIndTevStage(); // 1
extern "C" void getIndTevStage__18J3DTevBlockPatchedFUl(); // 1
extern "C" void setTevColor__18J3DTevBlockPatchedFUl13J3DGXColorS10(); // 1
extern "C" void setTevColor__18J3DTevBlockPatchedFUlPC13J3DGXColorS10(); // 1
extern "C" void getTevColor__18J3DTevBlockPatchedFUl(); // 1
extern "C" void setTevKColor__18J3DTevBlockPatchedFUl10J3DGXColor(); // 1
extern "C" void setTevKColor__18J3DTevBlockPatchedFUlPC10J3DGXColor(); // 1
extern "C" void getTevKColor__18J3DTevBlockPatchedFUl(); // 1
extern "C" void setTevKColorSel__18J3DTevBlockPatchedFUlUc(); // 1
extern "C" void setTevKColorSel__18J3DTevBlockPatchedFUlPCUc(); // 1
extern "C" void getTevKColorSel__18J3DTevBlockPatchedFUl(); // 1
extern "C" void getTexNoOffset__18J3DTevBlockPatchedCFv(); // 1
extern "C" void getTevRegOffset__18J3DTevBlockPatchedCFv(); // 1
extern "C" void setTevRegOffset__18J3DTevBlockPatchedFUl(); // 1
extern "C" void __dt__18J3DTevBlockPatchedFv(); // 1
extern "C" void getType__19J3DTexGenBlockBasicFv(); // 1
extern "C" void setNBTScale__19J3DTexGenBlockBasicF11J3DNBTScale(); // 1
extern "C" void setNBTScale__19J3DTexGenBlockBasicFPC11J3DNBTScale(); // 1
extern "C" void getNBTScale__19J3DTexGenBlockBasicFv(); // 1
extern "C" void __dt__19J3DTexGenBlockBasicFv(); // 1
extern "C" void setTexGenNum__21J3DTexGenBlockPatchedFUl(); // 1
extern "C" void setTexGenNum__21J3DTexGenBlockPatchedFPCUl(); // 1
extern "C" void getTexGenNum__21J3DTexGenBlockPatchedCFv(); // 1
extern "C" void setTexCoord__21J3DTexGenBlockPatchedFUlPC11J3DTexCoord(); // 1
extern "C" void getTexCoord__21J3DTexGenBlockPatchedFUl(); // 1
extern "C" void setTexMtx__21J3DTexGenBlockPatchedFUlP9J3DTexMtx(); // 1
extern "C" void getTexMtx__21J3DTexGenBlockPatchedFUl(); // 1
extern "C" void getTexMtxOffset__21J3DTexGenBlockPatchedCFv(); // 1
extern "C" void setTexMtxOffset__21J3DTexGenBlockPatchedFUl(); // 1
extern "C" void getType__15J3DTexGenBlock4Fv(); // 1
extern "C" void setNBTScale__15J3DTexGenBlock4F11J3DNBTScale(); // 1
extern "C" void setNBTScale__15J3DTexGenBlock4FPC11J3DNBTScale(); // 1
extern "C" void getNBTScale__15J3DTexGenBlock4Fv(); // 1
extern "C" void __dt__15J3DTexGenBlock4Fv(); // 1
extern "C" void load__21J3DTexGenBlockPatchedFv(); // 1
extern "C" void getType__21J3DTexGenBlockPatchedFv(); // 1
extern "C" void getType__20J3DColorBlockLightOnFv(); // 1
extern "C" void setMatColor__20J3DColorBlockLightOnFUl10J3DGXColor(); // 1
extern "C" void setMatColor__20J3DColorBlockLightOnFUlPC10J3DGXColor(); // 1
extern "C" void getMatColor__20J3DColorBlockLightOnFUl(); // 1
extern "C" void setAmbColor__20J3DColorBlockLightOnFUl10J3DGXColor(); // 1
extern "C" void setAmbColor__20J3DColorBlockLightOnFUlPC10J3DGXColor(); // 1
extern "C" void getAmbColor__20J3DColorBlockLightOnFUl(); // 1
extern "C" void setColorChanNum__20J3DColorBlockLightOnFPCUc(); // 1
extern "C" void setColorChanNum__20J3DColorBlockLightOnFUc(); // 1
extern "C" void getColorChanNum__20J3DColorBlockLightOnCFv(); // 1
extern "C" void setColorChan__20J3DColorBlockLightOnFUlPC12J3DColorChan(); // 1
extern "C" void setColorChan__20J3DColorBlockLightOnFUlRC12J3DColorChan(); // 1
extern "C" void getColorChan__20J3DColorBlockLightOnFUl(); // 1
extern "C" void setLight__20J3DColorBlockLightOnFUlP11J3DLightObj(); // 1
extern "C" void getLight__20J3DColorBlockLightOnFUl(); // 1
extern "C" void setCullMode__20J3DColorBlockLightOnFUc(); // 1
extern "C" void setCullMode__20J3DColorBlockLightOnFPCUc(); // 1
extern "C" void getCullMode__20J3DColorBlockLightOnCFv(); // 1
extern "C" void getMatColorOffset__20J3DColorBlockLightOnCFv(); // 1
extern "C" void getColorChanOffset__20J3DColorBlockLightOnCFv(); // 1
extern "C" void setMatColorOffset__20J3DColorBlockLightOnFUl(); // 1
extern "C" void setColorChanOffset__20J3DColorBlockLightOnFUl(); // 1
extern "C" void __dt__20J3DColorBlockLightOnFv(); // 1
extern "C" void getType__22J3DColorBlockAmbientOnFv(); // 1
extern "C" void setAmbColor__22J3DColorBlockAmbientOnFUl10J3DGXColor(); // 1
extern "C" void setAmbColor__22J3DColorBlockAmbientOnFUlPC10J3DGXColor(); // 1
extern "C" void getAmbColor__22J3DColorBlockAmbientOnFUl(); // 1
extern "C" void __dt__22J3DColorBlockAmbientOnFv(); // 1
extern "C" void setMatColor__21J3DColorBlockLightOffFUl10J3DGXColor(); // 1
extern "C" void setMatColor__21J3DColorBlockLightOffFUlPC10J3DGXColor(); // 1
extern "C" void getMatColor__21J3DColorBlockLightOffFUl(); // 1
extern "C" void setColorChanNum__21J3DColorBlockLightOffFPCUc(); // 1
extern "C" void setColorChanNum__21J3DColorBlockLightOffFUc(); // 1
extern "C" void getColorChanNum__21J3DColorBlockLightOffCFv(); // 1
extern "C" void setColorChan__21J3DColorBlockLightOffFUlPC12J3DColorChan(); // 1
extern "C" void setColorChan__21J3DColorBlockLightOffFUlRC12J3DColorChan(); // 1
extern "C" void getColorChan__21J3DColorBlockLightOffFUl(); // 1
extern "C" void setCullMode__21J3DColorBlockLightOffFUc(); // 1
extern "C" void setCullMode__21J3DColorBlockLightOffFPCUc(); // 1
extern "C" void getCullMode__21J3DColorBlockLightOffCFv(); // 1
extern "C" void getMatColorOffset__21J3DColorBlockLightOffCFv(); // 1
extern "C" void getColorChanOffset__21J3DColorBlockLightOffCFv(); // 1
extern "C" void setMatColorOffset__21J3DColorBlockLightOffFUl(); // 1
extern "C" void setColorChanOffset__21J3DColorBlockLightOffFUl(); // 1
extern "C" void getType__13J3DPEBlockXluFv(); // 1
extern "C" void __dt__13J3DPEBlockXluFv(); // 1
extern "C" void getType__17J3DPEBlockTexEdgeFv(); // 1
extern "C" void __dt__17J3DPEBlockTexEdgeFv(); // 1
extern "C" void getType__13J3DPEBlockOpaFv(); // 1
extern "C" void __dt__13J3DPEBlockOpaFv(); // 1
extern "C" void getType__15J3DIndBlockFullFv(); // 1
extern "C" void setIndTexStageNum__15J3DIndBlockFullFUc(); // 1
extern "C" void getIndTexStageNum__15J3DIndBlockFullCFv(); // 1
extern "C" void setIndTexOrder__15J3DIndBlockFullFUl14J3DIndTexOrder(); // 1
extern "C" void setIndTexOrder__15J3DIndBlockFullFUlPC14J3DIndTexOrder(); // 1
extern "C" void getIndTexOrder__15J3DIndBlockFullFUl(); // 1
extern "C" void setIndTexMtx__15J3DIndBlockFullFUl12J3DIndTexMtx(); // 1
extern "C" void setIndTexMtx__15J3DIndBlockFullFUlPC12J3DIndTexMtx(); // 1
extern "C" void getIndTexMtx__15J3DIndBlockFullFUl(); // 1
extern "C" void setIndTexCoordScale__15J3DIndBlockFullFUl19J3DIndTexCoordScale(); // 1
extern "C" void setIndTexCoordScale__15J3DIndBlockFullFUlPC19J3DIndTexCoordScale(); // 1
extern "C" void getIndTexCoordScale__15J3DIndBlockFullFUl(); // 1
extern "C" void __dt__15J3DIndBlockFullFv(); // 1
extern "C" void patchTexNo__11J3DTevBlockFv(); // 1
extern "C" void patchTevReg__11J3DTevBlockFv(); // 1
extern "C" void setTexNo__11J3DTevBlockFUlPCUs(); // 1
extern "C" void setTevOrder__11J3DTevBlockFUlPC11J3DTevOrder(); // 1
extern "C" void setTevStageNum__11J3DTevBlockFPCUc(); // 1
extern "C" void setTevStage__11J3DTevBlockFUlPC11J3DTevStage(); // 1
extern "C" void setIndTevStage__11J3DTevBlockFUlPC14J3DIndTevStage(); // 1
extern "C" void getTexNoOffset__11J3DTevBlockCFv(); // 1
extern "C" void getType__21J3DColorBlockLightOffFv(); // 1
extern "C" void __sinit_J3DMatBlock_cpp(); // 1
extern "C" extern char const* const J3DMatBlock__stringBase0;
extern "C" extern void* __vt__14J3DPEBlockFull[31];
extern "C" extern void* __vt__16J3DPEBlockFogOff[31];
extern "C" extern void* __vt__13J3DTevBlock16[55];
extern "C" extern void* __vt__12J3DTevBlock4[55];
extern "C" extern void* __vt__12J3DTevBlock2[55];
extern "C" extern void* __vt__12J3DTevBlock1[55];
extern "C" extern void* __vt__18J3DTevBlockPatched[55];
extern "C" extern void* __vt__19J3DTexGenBlockBasic[27];
extern "C" extern void* __vt__15J3DTexGenBlock4[27];
extern "C" extern void* __vt__21J3DTexGenBlockPatched[27];
extern "C" extern void* __vt__20J3DColorBlockLightOn[36];
extern "C" extern void* __vt__22J3DColorBlockAmbientOn[36];
extern "C" extern void* __vt__13J3DPEBlockXlu[31];
extern "C" extern void* __vt__17J3DPEBlockTexEdge[31];
extern "C" extern void* __vt__13J3DPEBlockOpa[31];
extern "C" extern void* __vt__15J3DIndBlockFull[19];
extern "C" extern void* __vt__11J3DTevBlock[55];
extern "C" extern void* __vt__21J3DColorBlockLightOff[36 + 1 /* padding */];

// 
// External References:
// 

void operator delete(void*); // 2
void J3DGDSetTexCoordScale2(_GXTexCoordID, u16, u8, u8, u16, u8, u8); // 2
void J3DGDSetIndTexMtx(_GXIndTexMtxID, f32 (* )[3], s8); // 2
void J3DGDSetIndTexCoordScale(_GXIndTexStageID, _GXIndTexScale, _GXIndTexScale, _GXIndTexScale, _GXIndTexScale); // 2
void J3DGDSetIndTexOrder(u32, _GXTexCoordID, _GXTexMapID, _GXTexCoordID, _GXTexMapID, _GXTexCoordID, _GXTexMapID, _GXTexCoordID, _GXTexMapID); // 2
void J3DGDSetTevOrder(_GXTevStageID, _GXTexCoordID, _GXTexMapID, _GXChannelID, _GXTexCoordID, _GXTexMapID, _GXChannelID); // 2
void J3DGDSetTevKColor(_GXTevKColorID, _GXColor); // 2
void J3DGDSetTevColorS10(_GXTevRegID, _GXColorS10); // 2
void J3DGDSetFog(_GXFogType, f32, f32, f32, f32, _GXColor); // 2
void J3DGDSetFogRangeAdj(u8, u16, _GXFogAdjTable*); // 2
void loadTexCoordGens(u32, J3DTexCoord*); // 2
void isTexNoReg(void*); // 2
void getTexNoReg(void*); // 2
void loadTexNo(u32, u16 const&); // 2
void patchTexNo_PtrToIdx(u32, u16 const&); // 2

SECTION_INIT void memcpy(); // 1
extern "C" void OSReport(); // 1
extern "C" void patchTexNoAndTexCoordScale__11J3DTevBlockFv(); // 1
extern "C" void patch__10J3DPEBlockFv(); // 1
extern "C" void patch__11J3DTevBlockFv(); // 1
extern "C" void getZCompLoc__10J3DPEBlockCFv(); // 1
extern "C" void getZMode__10J3DPEBlockFv(); // 1
extern "C" void getBlend__10J3DPEBlockFv(); // 1
extern "C" void getAlphaComp__10J3DPEBlockFv(); // 1
extern "C" void getFog__10J3DPEBlockFv(); // 1
extern "C" void getIndTevStage__11J3DTevBlockFUl(); // 1
extern "C" void getTevStage__11J3DTevBlockFUl(); // 1
extern "C" void getTexNo__11J3DTevBlockCFUl(); // 1
extern "C" void getTevSwapModeTable__11J3DTevBlockFUl(); // 1
extern "C" void getTevKAlphaSel__11J3DTevBlockFUl(); // 1
extern "C" void getTevKColorSel__11J3DTevBlockFUl(); // 1
extern "C" void getTevOrder__11J3DTevBlockFUl(); // 1
extern "C" void getTevKColor__11J3DTevBlockFUl(); // 1
extern "C" void getTevColor__11J3DTevBlockFUl(); // 1
extern "C" void getTevStageNum__11J3DTevBlockCFv(); // 1
extern "C" void getAmbColor__13J3DColorBlockFUl(); // 1
extern "C" void setZCompLoc__10J3DPEBlockFUc(); // 1
extern "C" void setZMode__10J3DPEBlockF8J3DZMode(); // 1
extern "C" void setBlend__10J3DPEBlockFRC8J3DBlend(); // 1
extern "C" void setAlphaComp__10J3DPEBlockFRC12J3DAlphaComp(); // 1
extern "C" void __dt__19J3DIndTexCoordScaleFv(); // 1
extern "C" void __dt__12J3DIndTexMtxFv(); // 1
extern "C" void setIndTevStage__11J3DTevBlockFUl14J3DIndTevStage(); // 1
extern "C" void setTevStage__11J3DTevBlockFUl11J3DTevStage(); // 1
extern "C" void setTexNo__11J3DTevBlockFUlUs(); // 1
extern "C" void setTevSwapModeTable__11J3DTevBlockFUl19J3DTevSwapModeTable(); // 1
extern "C" void setTevKAlphaSel__11J3DTevBlockFUlUc(); // 1
extern "C" void setTevKColorSel__11J3DTevBlockFUlUc(); // 1
extern "C" void setTevOrder__11J3DTevBlockFUl11J3DTevOrder(); // 1
extern "C" void setTevKColor__11J3DTevBlockFUl10J3DGXColor(); // 1
extern "C" void setTevColor__11J3DTevBlockFUl13J3DGXColorS10(); // 1
extern "C" void setTevStageNum__11J3DTevBlockFUc(); // 1
extern "C" void setAmbColor__13J3DColorBlockFUl10J3DGXColor(); // 1
extern "C" void setTevKColor__11J3DTevBlockFUlPC10J3DGXColor(); // 1
extern "C" void setTevColor__11J3DTevBlockFUlPC13J3DGXColorS10(); // 1
extern "C" void setLight__13J3DColorBlockFUlP11J3DLightObj(); // 1
extern "C" void setAmbColor__13J3DColorBlockFUlPC10J3DGXColor(); // 1
extern "C" void __dl__FPv(); // 1
extern "C" void J3DGDSetTexCoordScale2__F13_GXTexCoordIDUsUcUcUsUcUc(); // 1
extern "C" void J3DGDSetIndTexMtx__F14_GXIndTexMtxIDPA3_fSc(); // 1
extern "C" void J3DGDSetIndTexCoordScale__F16_GXIndTexStageID14_GXIndTexScale14_GXIndTexScale14_GXIndTexScale14_GXIndTexScale(); // 1
extern "C" void J3DGDSetIndTexOrder__FUl13_GXTexCoordID11_GXTexMapID13_GXTexCoordID11_GXTexMapID13_GXTexCoordID11_GXTexMapID13_GXTexCoordID11_GXTexMapID(); // 1
extern "C" void J3DGDSetTevOrder__F13_GXTevStageID13_GXTexCoordID11_GXTexMapID12_GXChannelID13_GXTexCoordID11_GXTexMapID12_GXChannelID(); // 1
extern "C" void J3DGDSetTevKColor__F14_GXTevKColorID8_GXColor(); // 1
extern "C" void J3DGDSetTevColorS10__F11_GXTevRegID11_GXColorS10(); // 1
extern "C" void J3DGDSetFog__F10_GXFogTypeffff8_GXColor(); // 1
extern "C" void J3DGDSetFogRangeAdj__FUcUsP14_GXFogAdjTable(); // 1
extern "C" void __dt__21J3DColorBlockLightOffFv(); // 1
extern "C" void __dt__21J3DTexGenBlockPatchedFv(); // 1
extern "C" void __dt__11J3DTevBlockFv(); // 1
extern "C" void countDLSize__11J3DTevBlockFv(); // 1
extern "C" void load__11J3DTevBlockFv(); // 1
extern "C" void getNBTScale__14J3DTexGenBlockFv(); // 1
extern "C" void diff__10J3DPEBlockFUl(); // 1
extern "C" void reset__10J3DPEBlockFP10J3DPEBlock(); // 1
extern "C" void reset__11J3DTevBlockFP11J3DTevBlock(); // 1
extern "C" void diffFog__10J3DPEBlockFv(); // 1
extern "C" void diffBlend__10J3DPEBlockFv(); // 1
extern "C" void setFog__10J3DPEBlockFP6J3DFog(); // 1
extern "C" void setFog__10J3DPEBlockF6J3DFog(); // 1
extern "C" void setAlphaComp__10J3DPEBlockFPC12J3DAlphaComp(); // 1
extern "C" void setBlend__10J3DPEBlockFPC8J3DBlend(); // 1
extern "C" void setZMode__10J3DPEBlockFPC8J3DZMode(); // 1
extern "C" void setZCompLoc__10J3DPEBlockFPCUc(); // 1
extern "C" void setDither__10J3DPEBlockFUc(); // 1
extern "C" void setDither__10J3DPEBlockFPCUc(); // 1
extern "C" void getDither__10J3DPEBlockCFv(); // 1
extern "C" void getFogOffset__10J3DPEBlockCFv(); // 1
extern "C" void setFogOffset__10J3DPEBlockFUl(); // 1
extern "C" void setNBTScale__14J3DTexGenBlockF11J3DNBTScale(); // 1
extern "C" void setNBTScale__14J3DTexGenBlockFPC11J3DNBTScale(); // 1
extern "C" void diffAmbColor__13J3DColorBlockFv(); // 1
extern "C" void diffLightObj__13J3DColorBlockFUl(); // 1
extern "C" void getLight__13J3DColorBlockFUl(); // 1
extern "C" void load__11J3DLightObjCFUl(); // 1
extern "C" void loadTexCoordGens__FUlP11J3DTexCoord(); // 1
extern "C" void load__9J3DTexMtxCFUl(); // 1
extern "C" void calc__9J3DTexMtxFPA4_Cf(); // 1
extern "C" void calcPostTexMtx__9J3DTexMtxFPA4_Cf(); // 1
extern "C" void isTexNoReg__FPv(); // 1
extern "C" void getTexNoReg__FPv(); // 1
extern "C" void loadTexNo__FUlRCUs(); // 1
extern "C" void patchTexNo_PtrToIdx__FUlRCUs(); // 1
extern "C" void __as__16J3DIndTexMtxInfoFRC16J3DIndTexMtxInfo(); // 1
extern "C" void __as__10J3DFogInfoFRC10J3DFogInfo(); // 1
extern "C" void __as__15J3DNBTScaleInfoFRC15J3DNBTScaleInfo(); // 1
extern "C" void DCStoreRange(); // 1
extern "C" void PSMTXCopy(); // 1
extern "C" void PSMTXConcat(); // 1
extern "C" void PSMTXInverse(); // 1
extern "C" void GDOverflowed(); // 1
extern "C" void __destroy_arr(); // 1
extern "C" void _savegpr_24(); // 1
extern "C" void _savegpr_25(); // 1
extern "C" void _savegpr_26(); // 1
extern "C" void _savegpr_27(); // 1
extern "C" void _savegpr_28(); // 1
extern "C" void _savegpr_29(); // 1
extern "C" void _restgpr_24(); // 1
extern "C" void _restgpr_25(); // 1
extern "C" void _restgpr_26(); // 1
extern "C" void _restgpr_27(); // 1
extern "C" void _restgpr_28(); // 1
extern "C" void _restgpr_29(); // 1
extern "C" extern u8 const j3dDefaultMtx[48];
extern "C" extern void* __vt__10J3DPEBlock[31];
extern "C" extern void* __vt__11J3DIndBlock[19];
extern "C" extern void* __vt__14J3DTexGenBlock[27];
extern "C" extern void* __vt__13J3DColorBlock[36];
extern "C" extern u8 j3dSys[284];
extern "C" extern u8 sTexCoordScaleTable__6J3DSys[64 + 4 /* padding */];
extern "C" extern u8 j3dTevSwapTableTable[1024];
extern "C" extern u8 j3dAlphaCmpTable[768];
extern "C" extern u8 j3dZModeTable[96];
extern "C" extern u8 __GDCurrentDL[4];
extern "C" extern u32 j3dDefaultColInfo;
extern "C" extern u32 j3dDefaultAmbInfo;
extern "C" extern u32 j3dDefaultTevColor;
extern "C" extern u32 j3dDefaultTevKColor;

// 
// Declarations:
// 

/* 8031747C-803174DC 0060+00 s=0 e=1 z=0  None .text      initialize__21J3DColorBlockLightOffFv                        */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void J3DColorBlockLightOff::initialize() {
	nofralloc
#include "asm/JSystem/J3DGraphBase/J3DMatBlock/initialize__21J3DColorBlockLightOffFv.s"
}
#pragma pop


/* 803174DC-80317580 00A4+00 s=0 e=1 z=0  None .text      initialize__22J3DColorBlockAmbientOnFv                       */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void J3DColorBlockAmbientOn::initialize() {
	nofralloc
#include "asm/JSystem/J3DGraphBase/J3DMatBlock/initialize__22J3DColorBlockAmbientOnFv.s"
}
#pragma pop


/* 80317580-80317644 00C4+00 s=0 e=1 z=0  None .text      initialize__20J3DColorBlockLightOnFv                         */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void J3DColorBlockLightOn::initialize() {
	nofralloc
#include "asm/JSystem/J3DGraphBase/J3DMatBlock/initialize__20J3DColorBlockLightOnFv.s"
}
#pragma pop


/* 80317644-80317674 0030+00 s=0 e=2 z=0  None .text      initialize__21J3DTexGenBlockPatchedFv                        */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void J3DTexGenBlockPatched::initialize() {
	nofralloc
#include "asm/JSystem/J3DGraphBase/J3DMatBlock/initialize__21J3DTexGenBlockPatchedFv.s"
}
#pragma pop


/* 80317674-803176A4 0030+00 s=0 e=1 z=0  None .text      initialize__15J3DTexGenBlock4Fv                              */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void J3DTexGenBlock4::initialize() {
	nofralloc
#include "asm/JSystem/J3DGraphBase/J3DMatBlock/initialize__15J3DTexGenBlock4Fv.s"
}
#pragma pop


/* 803176A4-803176D4 0030+00 s=0 e=1 z=0  None .text      initialize__19J3DTexGenBlockBasicFv                          */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void J3DTexGenBlockBasic::initialize() {
	nofralloc
#include "asm/JSystem/J3DGraphBase/J3DMatBlock/initialize__19J3DTexGenBlockBasicFv.s"
}
#pragma pop


/* 803176D4-803176E0 000C+00 s=0 e=1 z=0  None .text      initialize__15J3DTevBlockNullFv                              */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void J3DTevBlockNull::initialize() {
	nofralloc
#include "asm/JSystem/J3DGraphBase/J3DMatBlock/initialize__15J3DTevBlockNullFv.s"
}
#pragma pop


/* 803176E0-803177E8 0108+00 s=0 e=1 z=0  None .text      initialize__18J3DTevBlockPatchedFv                           */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void J3DTevBlockPatched::initialize() {
	nofralloc
#include "asm/JSystem/J3DGraphBase/J3DMatBlock/initialize__18J3DTevBlockPatchedFv.s"
}
#pragma pop


/* 803177E8-80317810 0028+00 s=0 e=1 z=0  None .text      initialize__12J3DTevBlock1Fv                                 */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void J3DTevBlock1::initialize() {
	nofralloc
#include "asm/JSystem/J3DGraphBase/J3DMatBlock/initialize__12J3DTevBlock1Fv.s"
}
#pragma pop


/* 80317810-803178EC 00DC+00 s=0 e=1 z=0  None .text      initialize__12J3DTevBlock2Fv                                 */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void J3DTevBlock2::initialize() {
	nofralloc
#include "asm/JSystem/J3DGraphBase/J3DMatBlock/initialize__12J3DTevBlock2Fv.s"
}
#pragma pop


/* 803178EC-80317A00 0114+00 s=0 e=1 z=0  None .text      initialize__12J3DTevBlock4Fv                                 */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void J3DTevBlock4::initialize() {
	nofralloc
#include "asm/JSystem/J3DGraphBase/J3DMatBlock/initialize__12J3DTevBlock4Fv.s"
}
#pragma pop


/* 80317A00-80317B28 0128+00 s=0 e=1 z=0  None .text      initialize__13J3DTevBlock16Fv                                */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void J3DTevBlock16::initialize() {
	nofralloc
#include "asm/JSystem/J3DGraphBase/J3DMatBlock/initialize__13J3DTevBlock16Fv.s"
}
#pragma pop


/* 80317B28-80317B34 000C+00 s=0 e=1 z=0  None .text      initialize__15J3DIndBlockFullFv                              */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void J3DIndBlockFull::initialize() {
	nofralloc
#include "asm/JSystem/J3DGraphBase/J3DMatBlock/initialize__15J3DIndBlockFullFv.s"
}
#pragma pop


/* 80317B34-80317B58 0024+00 s=0 e=1 z=0  None .text      initialize__16J3DPEBlockFogOffFv                             */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void J3DPEBlockFogOff::initialize() {
	nofralloc
#include "asm/JSystem/J3DGraphBase/J3DMatBlock/initialize__16J3DPEBlockFogOffFv.s"
}
#pragma pop


/* 80317B58-80317B84 002C+00 s=0 e=1 z=0  None .text      initialize__14J3DPEBlockFullFv                               */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void J3DPEBlockFull::initialize() {
	nofralloc
#include "asm/JSystem/J3DGraphBase/J3DMatBlock/initialize__14J3DPEBlockFullFv.s"
}
#pragma pop


/* 80317B84-80317B8C 0008+00 s=1 e=0 z=0  None .text      countDLSize__21J3DColorBlockLightOffFv                       */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void J3DColorBlockLightOff::countDLSize() {
	nofralloc
#include "asm/JSystem/J3DGraphBase/J3DMatBlock/countDLSize__21J3DColorBlockLightOffFv.s"
}
#pragma pop


/* 80317B8C-80317B94 0008+00 s=1 e=0 z=0  None .text      countDLSize__22J3DColorBlockAmbientOnFv                      */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void J3DColorBlockAmbientOn::countDLSize() {
	nofralloc
#include "asm/JSystem/J3DGraphBase/J3DMatBlock/countDLSize__22J3DColorBlockAmbientOnFv.s"
}
#pragma pop


/* 80317B94-80317B9C 0008+00 s=1 e=0 z=0  None .text      countDLSize__20J3DColorBlockLightOnFv                        */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void J3DColorBlockLightOn::countDLSize() {
	nofralloc
#include "asm/JSystem/J3DGraphBase/J3DMatBlock/countDLSize__20J3DColorBlockLightOnFv.s"
}
#pragma pop


/* 80317B9C-80317BA4 0008+00 s=1 e=0 z=0  None .text      countDLSize__21J3DTexGenBlockPatchedFv                       */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void J3DTexGenBlockPatched::countDLSize() {
	nofralloc
#include "asm/JSystem/J3DGraphBase/J3DMatBlock/countDLSize__21J3DTexGenBlockPatchedFv.s"
}
#pragma pop


/* 80317BA4-80317BAC 0008+00 s=1 e=0 z=0  None .text      countDLSize__15J3DTexGenBlock4Fv                             */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void J3DTexGenBlock4::countDLSize() {
	nofralloc
#include "asm/JSystem/J3DGraphBase/J3DMatBlock/countDLSize__15J3DTexGenBlock4Fv.s"
}
#pragma pop


/* 80317BAC-80317BB4 0008+00 s=1 e=0 z=0  None .text      countDLSize__19J3DTexGenBlockBasicFv                         */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void J3DTexGenBlockBasic::countDLSize() {
	nofralloc
#include "asm/JSystem/J3DGraphBase/J3DMatBlock/countDLSize__19J3DTexGenBlockBasicFv.s"
}
#pragma pop


/* 80317BB4-80317BBC 0008+00 s=1 e=0 z=0  None .text      countDLSize__18J3DTevBlockPatchedFv                          */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void J3DTevBlockPatched::countDLSize() {
	nofralloc
#include "asm/JSystem/J3DGraphBase/J3DMatBlock/countDLSize__18J3DTevBlockPatchedFv.s"
}
#pragma pop


/* 80317BBC-80317BC4 0008+00 s=1 e=0 z=0  None .text      countDLSize__12J3DTevBlock1Fv                                */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void J3DTevBlock1::countDLSize() {
	nofralloc
#include "asm/JSystem/J3DGraphBase/J3DMatBlock/countDLSize__12J3DTevBlock1Fv.s"
}
#pragma pop


/* 80317BC4-80317BCC 0008+00 s=1 e=0 z=0  None .text      countDLSize__12J3DTevBlock2Fv                                */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void J3DTevBlock2::countDLSize() {
	nofralloc
#include "asm/JSystem/J3DGraphBase/J3DMatBlock/countDLSize__12J3DTevBlock2Fv.s"
}
#pragma pop


/* 80317BCC-80317BD4 0008+00 s=1 e=0 z=0  None .text      countDLSize__12J3DTevBlock4Fv                                */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void J3DTevBlock4::countDLSize() {
	nofralloc
#include "asm/JSystem/J3DGraphBase/J3DMatBlock/countDLSize__12J3DTevBlock4Fv.s"
}
#pragma pop


/* 80317BD4-80317BDC 0008+00 s=1 e=0 z=0  None .text      countDLSize__13J3DTevBlock16Fv                               */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void J3DTevBlock16::countDLSize() {
	nofralloc
#include "asm/JSystem/J3DGraphBase/J3DMatBlock/countDLSize__13J3DTevBlock16Fv.s"
}
#pragma pop


/* 80317BDC-80317BE4 0008+00 s=1 e=0 z=0  None .text      countDLSize__15J3DIndBlockFullFv                             */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void J3DIndBlockFull::countDLSize() {
	nofralloc
#include "asm/JSystem/J3DGraphBase/J3DMatBlock/countDLSize__15J3DIndBlockFullFv.s"
}
#pragma pop


/* 80317BE4-80317BEC 0008+00 s=1 e=0 z=0  None .text      countDLSize__13J3DPEBlockOpaFv                               */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void J3DPEBlockOpa::countDLSize() {
	nofralloc
#include "asm/JSystem/J3DGraphBase/J3DMatBlock/countDLSize__13J3DPEBlockOpaFv.s"
}
#pragma pop


/* 80317BEC-80317BF4 0008+00 s=1 e=0 z=0  None .text      countDLSize__17J3DPEBlockTexEdgeFv                           */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void J3DPEBlockTexEdge::countDLSize() {
	nofralloc
#include "asm/JSystem/J3DGraphBase/J3DMatBlock/countDLSize__17J3DPEBlockTexEdgeFv.s"
}
#pragma pop


/* 80317BF4-80317BFC 0008+00 s=1 e=0 z=0  None .text      countDLSize__13J3DPEBlockXluFv                               */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void J3DPEBlockXlu::countDLSize() {
	nofralloc
#include "asm/JSystem/J3DGraphBase/J3DMatBlock/countDLSize__13J3DPEBlockXluFv.s"
}
#pragma pop


/* 80317BFC-80317C04 0008+00 s=1 e=0 z=0  None .text      countDLSize__16J3DPEBlockFogOffFv                            */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void J3DPEBlockFogOff::countDLSize() {
	nofralloc
#include "asm/JSystem/J3DGraphBase/J3DMatBlock/countDLSize__16J3DPEBlockFogOffFv.s"
}
#pragma pop


/* 80317C04-80317C0C 0008+00 s=1 e=0 z=0  None .text      countDLSize__14J3DPEBlockFullFv                              */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void J3DPEBlockFull::countDLSize() {
	nofralloc
#include "asm/JSystem/J3DGraphBase/J3DMatBlock/countDLSize__14J3DPEBlockFullFv.s"
}
#pragma pop


/* ############################################################################################## */
/* 804515D8-804515DC 0004+00 s=2 e=0 z=0  None .sbss      SizeOfJ3DColorBlockLightOffLoad                              */
static u8 SizeOfJ3DColorBlockLightOffLoad[4];

/* 804563A8-804563AC 0004+00 s=7 e=0 z=0  None .sdata2    @585                                                         */
SECTION_SDATA2 static u32 lit_585 = 0x02000201;

/* 80317C0C-8031816C 0560+00 s=1 e=0 z=0  None .text      load__21J3DColorBlockLightOffFv                              */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void J3DColorBlockLightOff::load() {
	nofralloc
#include "asm/JSystem/J3DGraphBase/J3DMatBlock/load__21J3DColorBlockLightOffFv.s"
}
#pragma pop


/* ############################################################################################## */
/* 804515DC-804515E0 0004+00 s=3 e=0 z=0  None .sbss      SizeOfJ3DColorBlockAmbientOnLoad                             */
static u8 SizeOfJ3DColorBlockAmbientOnLoad[4];

/* 8031816C-803187F4 0688+00 s=1 e=0 z=0  None .text      load__22J3DColorBlockAmbientOnFv                             */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void J3DColorBlockAmbientOn::load() {
	nofralloc
#include "asm/JSystem/J3DGraphBase/J3DMatBlock/load__22J3DColorBlockAmbientOnFv.s"
}
#pragma pop


/* 803187F4-80318EB4 06C0+00 s=1 e=0 z=0  None .text      load__20J3DColorBlockLightOnFv                               */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void J3DColorBlockLightOn::load() {
	nofralloc
#include "asm/JSystem/J3DGraphBase/J3DMatBlock/load__20J3DColorBlockLightOnFv.s"
}
#pragma pop


/* 80318EB4-80318F00 004C+00 s=2 e=0 z=0  None .text      patch__21J3DColorBlockLightOffFv                             */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void J3DColorBlockLightOff::patch() {
	nofralloc
#include "asm/JSystem/J3DGraphBase/J3DMatBlock/patch__21J3DColorBlockLightOffFv.s"
}
#pragma pop


/* ############################################################################################## */
/* 80450960-80450964 0004+00 s=5 e=0 z=0  None .sdata     SizeOfLoadMatColors                                          */
SECTION_SDATA static u32 SizeOfLoadMatColors = 0x0000000D;

/* 80318F00-803190AC 01AC+00 s=2 e=0 z=0  None .text      patchMatColor__21J3DColorBlockLightOffFv                     */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void J3DColorBlockLightOff::patchMatColor() {
	nofralloc
#include "asm/JSystem/J3DGraphBase/J3DMatBlock/patchMatColor__21J3DColorBlockLightOffFv.s"
}
#pragma pop


/* ############################################################################################## */
/* 80450964-80450968 0004+00 s=2 e=0 z=0  None .sdata     SizeOfLoadAmbColors                                          */
SECTION_SDATA static u32 SizeOfLoadAmbColors = 0x0000000D;

/* 80450968-80450970 0004+04 s=5 e=0 z=0  None .sdata     SizeOfLoadColorChans                                         */
SECTION_SDATA static u32 SizeOfLoadColorChans[1 + 1 /* padding */] = {
	0x00000015,
	/* padding */
	0x00000000,
};

/* 803190AC-803194E8 043C+00 s=2 e=0 z=0  None .text      patchLight__21J3DColorBlockLightOffFv                        */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void J3DColorBlockLightOff::patchLight() {
	nofralloc
#include "asm/JSystem/J3DGraphBase/J3DMatBlock/patchLight__21J3DColorBlockLightOffFv.s"
}
#pragma pop


/* 803194E8-80319534 004C+00 s=1 e=0 z=0  None .text      patch__20J3DColorBlockLightOnFv                              */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void J3DColorBlockLightOn::patch() {
	nofralloc
#include "asm/JSystem/J3DGraphBase/J3DMatBlock/patch__20J3DColorBlockLightOnFv.s"
}
#pragma pop


/* 80319534-803196E0 01AC+00 s=1 e=0 z=0  None .text      patchMatColor__20J3DColorBlockLightOnFv                      */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void J3DColorBlockLightOn::patchMatColor() {
	nofralloc
#include "asm/JSystem/J3DGraphBase/J3DMatBlock/patchMatColor__20J3DColorBlockLightOnFv.s"
}
#pragma pop


/* 803196E0-80319B4C 046C+00 s=1 e=0 z=0  None .text      patchLight__20J3DColorBlockLightOnFv                         */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void J3DColorBlockLightOn::patchLight() {
	nofralloc
#include "asm/JSystem/J3DGraphBase/J3DMatBlock/patchLight__20J3DColorBlockLightOnFv.s"
}
#pragma pop


/* 80319B4C-80319BB4 0068+00 s=2 e=0 z=0  None .text      diff__21J3DColorBlockLightOffFUl                             */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void J3DColorBlockLightOff::diff(u32 param_0) {
	nofralloc
#include "asm/JSystem/J3DGraphBase/J3DMatBlock/diff__21J3DColorBlockLightOffFUl.s"
}
#pragma pop


/* 80319BB4-80319D30 017C+00 s=2 e=0 z=0  None .text      diffMatColor__21J3DColorBlockLightOffFv                      */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void J3DColorBlockLightOff::diffMatColor() {
	nofralloc
#include "asm/JSystem/J3DGraphBase/J3DMatBlock/diffMatColor__21J3DColorBlockLightOffFv.s"
}
#pragma pop


/* 80319D30-8031A13C 040C+00 s=2 e=0 z=0  None .text      diffColorChan__21J3DColorBlockLightOffFv                     */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void J3DColorBlockLightOff::diffColorChan() {
	nofralloc
#include "asm/JSystem/J3DGraphBase/J3DMatBlock/diffColorChan__21J3DColorBlockLightOffFv.s"
}
#pragma pop


/* 8031A13C-8031A1DC 00A0+00 s=1 e=0 z=0  None .text      diff__20J3DColorBlockLightOnFUl                              */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void J3DColorBlockLightOn::diff(u32 param_0) {
	nofralloc
#include "asm/JSystem/J3DGraphBase/J3DMatBlock/diff__20J3DColorBlockLightOnFUl.s"
}
#pragma pop


/* 8031A1DC-8031A358 017C+00 s=1 e=0 z=0  None .text      diffAmbColor__20J3DColorBlockLightOnFv                       */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void J3DColorBlockLightOn::diffAmbColor() {
	nofralloc
#include "asm/JSystem/J3DGraphBase/J3DMatBlock/diffAmbColor__20J3DColorBlockLightOnFv.s"
}
#pragma pop


/* 8031A358-8031A4D4 017C+00 s=1 e=0 z=0  None .text      diffMatColor__20J3DColorBlockLightOnFv                       */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void J3DColorBlockLightOn::diffMatColor() {
	nofralloc
#include "asm/JSystem/J3DGraphBase/J3DMatBlock/diffMatColor__20J3DColorBlockLightOnFv.s"
}
#pragma pop


/* 8031A4D4-8031A8E0 040C+00 s=1 e=0 z=0  None .text      diffColorChan__20J3DColorBlockLightOnFv                      */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void J3DColorBlockLightOn::diffColorChan() {
	nofralloc
#include "asm/JSystem/J3DGraphBase/J3DMatBlock/diffColorChan__20J3DColorBlockLightOnFv.s"
}
#pragma pop


/* 8031A8E0-8031A948 0068+00 s=1 e=0 z=0  None .text      diffLightObj__20J3DColorBlockLightOnFUl                      */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void J3DColorBlockLightOn::diffLightObj(u32 param_0) {
	nofralloc
#include "asm/JSystem/J3DGraphBase/J3DMatBlock/diffLightObj__20J3DColorBlockLightOnFUl.s"
}
#pragma pop


/* 8031A948-8031A9E8 00A0+00 s=1 e=0 z=0  None .text      load__15J3DTexGenBlock4Fv                                    */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void J3DTexGenBlock4::load() {
	nofralloc
#include "asm/JSystem/J3DGraphBase/J3DMatBlock/load__15J3DTexGenBlock4Fv.s"
}
#pragma pop


/* 8031A9E8-8031AA88 00A0+00 s=1 e=0 z=0  None .text      load__19J3DTexGenBlockBasicFv                                */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void J3DTexGenBlockBasic::load() {
	nofralloc
#include "asm/JSystem/J3DGraphBase/J3DMatBlock/load__19J3DTexGenBlockBasicFv.s"
}
#pragma pop


/* 8031AA88-8031AB18 0090+00 s=1 e=0 z=0  None .text      patch__21J3DTexGenBlockPatchedFv                             */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void J3DTexGenBlockPatched::patch() {
	nofralloc
#include "asm/JSystem/J3DGraphBase/J3DMatBlock/patch__21J3DTexGenBlockPatchedFv.s"
}
#pragma pop


/* 8031AB18-8031ABC0 00A8+00 s=1 e=0 z=0  None .text      patch__15J3DTexGenBlock4Fv                                   */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void J3DTexGenBlock4::patch() {
	nofralloc
#include "asm/JSystem/J3DGraphBase/J3DMatBlock/patch__15J3DTexGenBlock4Fv.s"
}
#pragma pop


/* 8031ABC0-8031AC68 00A8+00 s=1 e=0 z=0  None .text      patch__19J3DTexGenBlockBasicFv                               */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void J3DTexGenBlockBasic::patch() {
	nofralloc
#include "asm/JSystem/J3DGraphBase/J3DMatBlock/patch__19J3DTexGenBlockBasicFv.s"
}
#pragma pop


/* 8031AC68-8031ACD0 0068+00 s=3 e=0 z=0  None .text      diff__21J3DTexGenBlockPatchedFUl                             */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void J3DTexGenBlockPatched::diff(u32 param_0) {
	nofralloc
#include "asm/JSystem/J3DGraphBase/J3DMatBlock/diff__21J3DTexGenBlockPatchedFUl.s"
}
#pragma pop


/* 8031ACD0-8031AD30 0060+00 s=3 e=0 z=0  None .text      diffTexMtx__21J3DTexGenBlockPatchedFv                        */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void J3DTexGenBlockPatched::diffTexMtx() {
	nofralloc
#include "asm/JSystem/J3DGraphBase/J3DMatBlock/diffTexMtx__21J3DTexGenBlockPatchedFv.s"
}
#pragma pop


/* 8031AD30-8031AD64 0034+00 s=3 e=0 z=0  None .text      diffTexGen__21J3DTexGenBlockPatchedFv                        */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void J3DTexGenBlockPatched::diffTexGen() {
	nofralloc
#include "asm/JSystem/J3DGraphBase/J3DMatBlock/diffTexGen__21J3DTexGenBlockPatchedFv.s"
}
#pragma pop


/* 8031AD64-8031AFA4 0240+00 s=1 e=0 z=0  None .text      load__12J3DTevBlock1Fv                                       */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void J3DTevBlock1::load() {
	nofralloc
#include "asm/JSystem/J3DGraphBase/J3DMatBlock/load__12J3DTevBlock1Fv.s"
}
#pragma pop


/* 8031AFA4-8031B4C0 051C+00 s=1 e=0 z=0  None .text      load__12J3DTevBlock2Fv                                       */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void J3DTevBlock2::load() {
	nofralloc
#include "asm/JSystem/J3DGraphBase/J3DMatBlock/load__12J3DTevBlock2Fv.s"
}
#pragma pop


/* 8031B4C0-8031BA04 0544+00 s=1 e=0 z=0  None .text      load__12J3DTevBlock4Fv                                       */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void J3DTevBlock4::load() {
	nofralloc
#include "asm/JSystem/J3DGraphBase/J3DMatBlock/load__12J3DTevBlock4Fv.s"
}
#pragma pop


/* 8031BA04-8031BF4C 0548+00 s=1 e=0 z=0  None .text      load__13J3DTevBlock16Fv                                      */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void J3DTevBlock16::load() {
	nofralloc
#include "asm/JSystem/J3DGraphBase/J3DMatBlock/load__13J3DTevBlock16Fv.s"
}
#pragma pop


/* 8031BF4C-8031BFE0 0094+00 s=1 e=0 z=0  None .text      patchTexNo__18J3DTevBlockPatchedFv                           */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void J3DTevBlockPatched::patchTexNo() {
	nofralloc
#include "asm/JSystem/J3DGraphBase/J3DMatBlock/patchTexNo__18J3DTevBlockPatchedFv.s"
}
#pragma pop


/* 8031BFE0-8031C0AC 00CC+00 s=1 e=0 z=0  None .text      patchTevReg__18J3DTevBlockPatchedFv                          */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void J3DTevBlockPatched::patchTevReg() {
	nofralloc
#include "asm/JSystem/J3DGraphBase/J3DMatBlock/patchTevReg__18J3DTevBlockPatchedFv.s"
}
#pragma pop


/* 8031C0AC-8031C228 017C+00 s=1 e=0 z=0  None .text      patchTexNoAndTexCoordScale__18J3DTevBlockPatchedFv           */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void J3DTevBlockPatched::patchTexNoAndTexCoordScale() {
	nofralloc
#include "asm/JSystem/J3DGraphBase/J3DMatBlock/patchTexNoAndTexCoordScale__18J3DTevBlockPatchedFv.s"
}
#pragma pop


/* 8031C228-8031C274 004C+00 s=1 e=0 z=0  None .text      patch__18J3DTevBlockPatchedFv                                */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void J3DTevBlockPatched::patch() {
	nofralloc
#include "asm/JSystem/J3DGraphBase/J3DMatBlock/patch__18J3DTevBlockPatchedFv.s"
}
#pragma pop


/* 8031C274-8031C2E4 0070+00 s=1 e=0 z=0  None .text      patchTexNo__12J3DTevBlock1Fv                                 */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void J3DTevBlock1::patchTexNo() {
	nofralloc
#include "asm/JSystem/J3DGraphBase/J3DMatBlock/patchTexNo__12J3DTevBlock1Fv.s"
}
#pragma pop


/* 8031C2E4-8031C2E8 0004+00 s=1 e=0 z=0  None .text      patchTevReg__12J3DTevBlock1Fv                                */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void J3DTevBlock1::patchTevReg() {
	nofralloc
#include "asm/JSystem/J3DGraphBase/J3DMatBlock/patchTevReg__12J3DTevBlock1Fv.s"
}
#pragma pop


/* 8031C2E8-8031C3CC 00E4+00 s=1 e=0 z=0  None .text      patchTexNoAndTexCoordScale__12J3DTevBlock1Fv                 */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void J3DTevBlock1::patchTexNoAndTexCoordScale() {
	nofralloc
#include "asm/JSystem/J3DGraphBase/J3DMatBlock/patchTexNoAndTexCoordScale__12J3DTevBlock1Fv.s"
}
#pragma pop


/* 8031C3CC-8031C3F8 002C+00 s=1 e=0 z=0  None .text      patch__12J3DTevBlock1Fv                                      */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void J3DTevBlock1::patch() {
	nofralloc
#include "asm/JSystem/J3DGraphBase/J3DMatBlock/patch__12J3DTevBlock1Fv.s"
}
#pragma pop


/* 8031C3F8-8031C48C 0094+00 s=1 e=0 z=0  None .text      patchTexNo__12J3DTevBlock2Fv                                 */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void J3DTevBlock2::patchTexNo() {
	nofralloc
#include "asm/JSystem/J3DGraphBase/J3DMatBlock/patchTexNo__12J3DTevBlock2Fv.s"
}
#pragma pop


/* 8031C48C-8031C558 00CC+00 s=1 e=0 z=0  None .text      patchTevReg__12J3DTevBlock2Fv                                */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void J3DTevBlock2::patchTevReg() {
	nofralloc
#include "asm/JSystem/J3DGraphBase/J3DMatBlock/patchTevReg__12J3DTevBlock2Fv.s"
}
#pragma pop


/* 8031C558-8031C6A8 0150+00 s=1 e=0 z=0  None .text      patchTexNoAndTexCoordScale__12J3DTevBlock2Fv                 */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void J3DTevBlock2::patchTexNoAndTexCoordScale() {
	nofralloc
#include "asm/JSystem/J3DGraphBase/J3DMatBlock/patchTexNoAndTexCoordScale__12J3DTevBlock2Fv.s"
}
#pragma pop


/* 8031C6A8-8031C6F4 004C+00 s=1 e=0 z=0  None .text      patch__12J3DTevBlock2Fv                                      */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void J3DTevBlock2::patch() {
	nofralloc
#include "asm/JSystem/J3DGraphBase/J3DMatBlock/patch__12J3DTevBlock2Fv.s"
}
#pragma pop


/* 8031C6F4-8031C788 0094+00 s=1 e=0 z=0  None .text      patchTexNo__12J3DTevBlock4Fv                                 */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void J3DTevBlock4::patchTexNo() {
	nofralloc
#include "asm/JSystem/J3DGraphBase/J3DMatBlock/patchTexNo__12J3DTevBlock4Fv.s"
}
#pragma pop


/* 8031C788-8031C854 00CC+00 s=1 e=0 z=0  None .text      patchTevReg__12J3DTevBlock4Fv                                */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void J3DTevBlock4::patchTevReg() {
	nofralloc
#include "asm/JSystem/J3DGraphBase/J3DMatBlock/patchTevReg__12J3DTevBlock4Fv.s"
}
#pragma pop


/* 8031C854-8031C9D0 017C+00 s=1 e=0 z=0  None .text      patchTexNoAndTexCoordScale__12J3DTevBlock4Fv                 */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void J3DTevBlock4::patchTexNoAndTexCoordScale() {
	nofralloc
#include "asm/JSystem/J3DGraphBase/J3DMatBlock/patchTexNoAndTexCoordScale__12J3DTevBlock4Fv.s"
}
#pragma pop


/* 8031C9D0-8031CA1C 004C+00 s=1 e=0 z=0  None .text      patch__12J3DTevBlock4Fv                                      */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void J3DTevBlock4::patch() {
	nofralloc
#include "asm/JSystem/J3DGraphBase/J3DMatBlock/patch__12J3DTevBlock4Fv.s"
}
#pragma pop


/* 8031CA1C-8031CAB0 0094+00 s=1 e=0 z=0  None .text      patchTexNo__13J3DTevBlock16Fv                                */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void J3DTevBlock16::patchTexNo() {
	nofralloc
#include "asm/JSystem/J3DGraphBase/J3DMatBlock/patchTexNo__13J3DTevBlock16Fv.s"
}
#pragma pop


/* 8031CAB0-8031CB7C 00CC+00 s=1 e=0 z=0  None .text      patchTevReg__13J3DTevBlock16Fv                               */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void J3DTevBlock16::patchTevReg() {
	nofralloc
#include "asm/JSystem/J3DGraphBase/J3DMatBlock/patchTevReg__13J3DTevBlock16Fv.s"
}
#pragma pop


/* 8031CB7C-8031CCF8 017C+00 s=1 e=0 z=0  None .text      patchTexNoAndTexCoordScale__13J3DTevBlock16Fv                */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void J3DTevBlock16::patchTexNoAndTexCoordScale() {
	nofralloc
#include "asm/JSystem/J3DGraphBase/J3DMatBlock/patchTexNoAndTexCoordScale__13J3DTevBlock16Fv.s"
}
#pragma pop


/* 8031CCF8-8031CD44 004C+00 s=1 e=0 z=0  None .text      patch__13J3DTevBlock16Fv                                     */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void J3DTevBlock16::patch() {
	nofralloc
#include "asm/JSystem/J3DGraphBase/J3DMatBlock/patch__13J3DTevBlock16Fv.s"
}
#pragma pop


/* 8031CD44-8031CE00 00BC+00 s=6 e=1 z=0  None .text      diff__11J3DTevBlockFUl                                       */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void J3DTevBlock::diff(u32 param_0) {
	nofralloc
#include "asm/JSystem/J3DGraphBase/J3DMatBlock/diff__11J3DTevBlockFUl.s"
}
#pragma pop


/* 8031CE00-8031CE64 0064+00 s=1 e=0 z=0  None .text      diffTexNo__18J3DTevBlockPatchedFv                            */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void J3DTevBlockPatched::diffTexNo() {
	nofralloc
#include "asm/JSystem/J3DGraphBase/J3DMatBlock/diffTexNo__18J3DTevBlockPatchedFv.s"
}
#pragma pop


/* 8031CE64-8031CF78 0114+00 s=1 e=0 z=0  None .text      diffTevStage__18J3DTevBlockPatchedFv                         */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void J3DTevBlockPatched::diffTevStage() {
	nofralloc
#include "asm/JSystem/J3DGraphBase/J3DMatBlock/diffTevStage__18J3DTevBlockPatchedFv.s"
}
#pragma pop


/* 8031CF78-8031D028 00B0+00 s=1 e=0 z=0  None .text      diffTevStageIndirect__18J3DTevBlockPatchedFv                 */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void J3DTevBlockPatched::diffTevStageIndirect() {
	nofralloc
#include "asm/JSystem/J3DGraphBase/J3DMatBlock/diffTevStageIndirect__18J3DTevBlockPatchedFv.s"
}
#pragma pop


/* 8031D028-8031D0C4 009C+00 s=1 e=0 z=0  None .text      diffTevReg__18J3DTevBlockPatchedFv                           */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void J3DTevBlockPatched::diffTevReg() {
	nofralloc
#include "asm/JSystem/J3DGraphBase/J3DMatBlock/diffTevReg__18J3DTevBlockPatchedFv.s"
}
#pragma pop


/* 8031D0C4-8031D1BC 00F8+00 s=1 e=0 z=0  None .text      diffTexCoordScale__18J3DTevBlockPatchedFv                    */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void J3DTevBlockPatched::diffTexCoordScale() {
	nofralloc
#include "asm/JSystem/J3DGraphBase/J3DMatBlock/diffTexCoordScale__18J3DTevBlockPatchedFv.s"
}
#pragma pop


/* 8031D1BC-8031D1F4 0038+00 s=1 e=0 z=0  None .text      diffTexNo__12J3DTevBlock1Fv                                  */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void J3DTevBlock1::diffTexNo() {
	nofralloc
#include "asm/JSystem/J3DGraphBase/J3DMatBlock/diffTexNo__12J3DTevBlock1Fv.s"
}
#pragma pop


/* 8031D1F4-8031D1F8 0004+00 s=1 e=0 z=0  None .text      diffTevReg__12J3DTevBlock1Fv                                 */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void J3DTevBlock1::diffTevReg() {
	nofralloc
#include "asm/JSystem/J3DGraphBase/J3DMatBlock/diffTevReg__12J3DTevBlock1Fv.s"
}
#pragma pop


/* 8031D1F8-8031D2E8 00F0+00 s=1 e=0 z=0  None .text      diffTevStage__12J3DTevBlock1Fv                               */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void J3DTevBlock1::diffTevStage() {
	nofralloc
#include "asm/JSystem/J3DGraphBase/J3DMatBlock/diffTevStage__12J3DTevBlock1Fv.s"
}
#pragma pop


/* 8031D2E8-8031D368 0080+00 s=1 e=0 z=0  None .text      diffTevStageIndirect__12J3DTevBlock1Fv                       */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void J3DTevBlock1::diffTevStageIndirect() {
	nofralloc
#include "asm/JSystem/J3DGraphBase/J3DMatBlock/diffTevStageIndirect__12J3DTevBlock1Fv.s"
}
#pragma pop


/* 8031D368-8031D3D0 0068+00 s=1 e=0 z=0  None .text      diffTexCoordScale__12J3DTevBlock1Fv                          */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void J3DTevBlock1::diffTexCoordScale() {
	nofralloc
#include "asm/JSystem/J3DGraphBase/J3DMatBlock/diffTexCoordScale__12J3DTevBlock1Fv.s"
}
#pragma pop


/* 8031D3D0-8031D434 0064+00 s=1 e=0 z=0  None .text      diffTexNo__12J3DTevBlock2Fv                                  */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void J3DTevBlock2::diffTexNo() {
	nofralloc
#include "asm/JSystem/J3DGraphBase/J3DMatBlock/diffTexNo__12J3DTevBlock2Fv.s"
}
#pragma pop


/* 8031D434-8031D4D0 009C+00 s=1 e=0 z=0  None .text      diffTevReg__12J3DTevBlock2Fv                                 */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void J3DTevBlock2::diffTevReg() {
	nofralloc
#include "asm/JSystem/J3DGraphBase/J3DMatBlock/diffTevReg__12J3DTevBlock2Fv.s"
}
#pragma pop


/* 8031D4D0-8031D5E4 0114+00 s=1 e=0 z=0  None .text      diffTevStage__12J3DTevBlock2Fv                               */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void J3DTevBlock2::diffTevStage() {
	nofralloc
#include "asm/JSystem/J3DGraphBase/J3DMatBlock/diffTevStage__12J3DTevBlock2Fv.s"
}
#pragma pop


/* 8031D5E4-8031D694 00B0+00 s=1 e=0 z=0  None .text      diffTevStageIndirect__12J3DTevBlock2Fv                       */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void J3DTevBlock2::diffTevStageIndirect() {
	nofralloc
#include "asm/JSystem/J3DGraphBase/J3DMatBlock/diffTevStageIndirect__12J3DTevBlock2Fv.s"
}
#pragma pop


/* 8031D694-8031D758 00C4+00 s=1 e=0 z=0  None .text      diffTexCoordScale__12J3DTevBlock2Fv                          */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void J3DTevBlock2::diffTexCoordScale() {
	nofralloc
#include "asm/JSystem/J3DGraphBase/J3DMatBlock/diffTexCoordScale__12J3DTevBlock2Fv.s"
}
#pragma pop


/* 8031D758-8031D7BC 0064+00 s=1 e=0 z=0  None .text      diffTexNo__12J3DTevBlock4Fv                                  */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void J3DTevBlock4::diffTexNo() {
	nofralloc
#include "asm/JSystem/J3DGraphBase/J3DMatBlock/diffTexNo__12J3DTevBlock4Fv.s"
}
#pragma pop


/* 8031D7BC-8031D858 009C+00 s=1 e=0 z=0  None .text      diffTevReg__12J3DTevBlock4Fv                                 */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void J3DTevBlock4::diffTevReg() {
	nofralloc
#include "asm/JSystem/J3DGraphBase/J3DMatBlock/diffTevReg__12J3DTevBlock4Fv.s"
}
#pragma pop


/* 8031D858-8031D96C 0114+00 s=1 e=0 z=0  None .text      diffTevStage__12J3DTevBlock4Fv                               */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void J3DTevBlock4::diffTevStage() {
	nofralloc
#include "asm/JSystem/J3DGraphBase/J3DMatBlock/diffTevStage__12J3DTevBlock4Fv.s"
}
#pragma pop


/* 8031D96C-8031DA1C 00B0+00 s=1 e=0 z=0  None .text      diffTevStageIndirect__12J3DTevBlock4Fv                       */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void J3DTevBlock4::diffTevStageIndirect() {
	nofralloc
#include "asm/JSystem/J3DGraphBase/J3DMatBlock/diffTevStageIndirect__12J3DTevBlock4Fv.s"
}
#pragma pop


/* 8031DA1C-8031DB14 00F8+00 s=1 e=0 z=0  None .text      diffTexCoordScale__12J3DTevBlock4Fv                          */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void J3DTevBlock4::diffTexCoordScale() {
	nofralloc
#include "asm/JSystem/J3DGraphBase/J3DMatBlock/diffTexCoordScale__12J3DTevBlock4Fv.s"
}
#pragma pop


/* 8031DB14-8031DB78 0064+00 s=1 e=0 z=0  None .text      diffTexNo__13J3DTevBlock16Fv                                 */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void J3DTevBlock16::diffTexNo() {
	nofralloc
#include "asm/JSystem/J3DGraphBase/J3DMatBlock/diffTexNo__13J3DTevBlock16Fv.s"
}
#pragma pop


/* 8031DB78-8031DC14 009C+00 s=1 e=0 z=0  None .text      diffTevReg__13J3DTevBlock16Fv                                */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void J3DTevBlock16::diffTevReg() {
	nofralloc
#include "asm/JSystem/J3DGraphBase/J3DMatBlock/diffTevReg__13J3DTevBlock16Fv.s"
}
#pragma pop


/* 8031DC14-8031DD28 0114+00 s=1 e=0 z=0  None .text      diffTevStage__13J3DTevBlock16Fv                              */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void J3DTevBlock16::diffTevStage() {
	nofralloc
#include "asm/JSystem/J3DGraphBase/J3DMatBlock/diffTevStage__13J3DTevBlock16Fv.s"
}
#pragma pop


/* 8031DD28-8031DDD8 00B0+00 s=1 e=0 z=0  None .text      diffTevStageIndirect__13J3DTevBlock16Fv                      */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void J3DTevBlock16::diffTevStageIndirect() {
	nofralloc
#include "asm/JSystem/J3DGraphBase/J3DMatBlock/diffTevStageIndirect__13J3DTevBlock16Fv.s"
}
#pragma pop


/* 8031DDD8-8031DED0 00F8+00 s=1 e=0 z=0  None .text      diffTexCoordScale__13J3DTevBlock16Fv                         */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void J3DTevBlock16::diffTexCoordScale() {
	nofralloc
#include "asm/JSystem/J3DGraphBase/J3DMatBlock/diffTexCoordScale__13J3DTevBlock16Fv.s"
}
#pragma pop


/* 8031DED0-8031DFB4 00E4+00 s=1 e=0 z=0  None .text      ptrToIndex__13J3DTevBlock16Fv                                */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void J3DTevBlock16::ptrToIndex() {
	nofralloc
#include "asm/JSystem/J3DGraphBase/J3DMatBlock/ptrToIndex__13J3DTevBlock16Fv.s"
}
#pragma pop


/* 8031DFB4-8031E098 00E4+00 s=1 e=0 z=0  None .text      ptrToIndex__18J3DTevBlockPatchedFv                           */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void J3DTevBlockPatched::ptrToIndex() {
	nofralloc
#include "asm/JSystem/J3DGraphBase/J3DMatBlock/ptrToIndex__18J3DTevBlockPatchedFv.s"
}
#pragma pop


/* 8031E098-8031E12C 0094+00 s=5 e=1 z=0  None .text      indexToPtr_private__11J3DTevBlockFUl                         */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void J3DTevBlock::indexToPtr_private(u32 param_0) {
	nofralloc
#include "asm/JSystem/J3DGraphBase/J3DMatBlock/indexToPtr_private__11J3DTevBlockFUl.s"
}
#pragma pop


/* 8031E12C-8031E328 01FC+00 s=1 e=0 z=0  None .text      load__15J3DIndBlockFullFv                                    */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void J3DIndBlockFull::load() {
	nofralloc
#include "asm/JSystem/J3DGraphBase/J3DMatBlock/load__15J3DIndBlockFullFv.s"
}
#pragma pop


/* 8031E328-8031E408 00E0+00 s=1 e=0 z=0  None .text      diff__15J3DIndBlockFullFUl                                   */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void J3DIndBlockFull::diff(u32 param_0) {
	nofralloc
#include "asm/JSystem/J3DGraphBase/J3DMatBlock/diff__15J3DIndBlockFullFUl.s"
}
#pragma pop


/* 8031E408-8031E6C8 02C0+00 s=1 e=0 z=0  None .text      load__13J3DPEBlockOpaFv                                      */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void J3DPEBlockOpa::load() {
	nofralloc
#include "asm/JSystem/J3DGraphBase/J3DMatBlock/load__13J3DPEBlockOpaFv.s"
}
#pragma pop


/* 8031E6C8-8031E98C 02C4+00 s=1 e=0 z=0  None .text      load__17J3DPEBlockTexEdgeFv                                  */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void J3DPEBlockTexEdge::load() {
	nofralloc
#include "asm/JSystem/J3DGraphBase/J3DMatBlock/load__17J3DPEBlockTexEdgeFv.s"
}
#pragma pop


/* 8031E98C-8031EC50 02C4+00 s=1 e=0 z=0  None .text      load__13J3DPEBlockXluFv                                      */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void J3DPEBlockXlu::load() {
	nofralloc
#include "asm/JSystem/J3DGraphBase/J3DMatBlock/load__13J3DPEBlockXluFv.s"
}
#pragma pop


/* 8031EC50-8031F0D8 0488+00 s=1 e=0 z=0  None .text      load__16J3DPEBlockFogOffFv                                   */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void J3DPEBlockFogOff::load() {
	nofralloc
#include "asm/JSystem/J3DGraphBase/J3DMatBlock/load__16J3DPEBlockFogOffFv.s"
}
#pragma pop


/* 8031F0D8-8031F3C0 02E8+00 s=1 e=0 z=0  None .text      diffBlend__16J3DPEBlockFogOffFv                              */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void J3DPEBlockFogOff::diffBlend() {
	nofralloc
#include "asm/JSystem/J3DGraphBase/J3DMatBlock/diffBlend__16J3DPEBlockFogOffFv.s"
}
#pragma pop


/* 8031F3C0-8031F890 04D0+00 s=1 e=0 z=0  None .text      load__14J3DPEBlockFullFv                                     */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void J3DPEBlockFull::load() {
	nofralloc
#include "asm/JSystem/J3DGraphBase/J3DMatBlock/load__14J3DPEBlockFullFv.s"
}
#pragma pop


/* 8031F890-8031F940 00B0+00 s=1 e=0 z=0  None .text      patch__14J3DPEBlockFullFv                                    */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void J3DPEBlockFull::patch() {
	nofralloc
#include "asm/JSystem/J3DGraphBase/J3DMatBlock/patch__14J3DPEBlockFullFv.s"
}
#pragma pop


/* 8031F940-8031F9B8 0078+00 s=1 e=0 z=0  None .text      diffFog__14J3DPEBlockFullFv                                  */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void J3DPEBlockFull::diffFog() {
	nofralloc
#include "asm/JSystem/J3DGraphBase/J3DMatBlock/diffFog__14J3DPEBlockFullFv.s"
}
#pragma pop


/* 8031F9B8-8031FCA0 02E8+00 s=1 e=0 z=0  None .text      diffBlend__14J3DPEBlockFullFv                                */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void J3DPEBlockFull::diffBlend() {
	nofralloc
#include "asm/JSystem/J3DGraphBase/J3DMatBlock/diffBlend__14J3DPEBlockFullFv.s"
}
#pragma pop


/* 8031FCA0-8031FD08 0068+00 s=1 e=0 z=0  None .text      diff__14J3DPEBlockFullFUl                                    */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void J3DPEBlockFull::diff(u32 param_0) {
	nofralloc
#include "asm/JSystem/J3DGraphBase/J3DMatBlock/diff__14J3DPEBlockFullFUl.s"
}
#pragma pop


/* 8031FD08-8031FDE4 00DC+00 s=1 e=0 z=0  None .text      reset__21J3DColorBlockLightOffFP13J3DColorBlock              */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void J3DColorBlockLightOff::reset(J3DColorBlock* param_0) {
	nofralloc
#include "asm/JSystem/J3DGraphBase/J3DMatBlock/reset__21J3DColorBlockLightOffFP13J3DColorBlock.s"
}
#pragma pop


/* 8031FDE4-8031FF34 0150+00 s=1 e=0 z=0  None .text      reset__22J3DColorBlockAmbientOnFP13J3DColorBlock             */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void J3DColorBlockAmbientOn::reset(J3DColorBlock* param_0) {
	nofralloc
#include "asm/JSystem/J3DGraphBase/J3DMatBlock/reset__22J3DColorBlockAmbientOnFP13J3DColorBlock.s"
}
#pragma pop


/* 8031FF34-80320084 0150+00 s=1 e=0 z=0  None .text      reset__20J3DColorBlockLightOnFP13J3DColorBlock               */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void J3DColorBlockLightOn::reset(J3DColorBlock* param_0) {
	nofralloc
#include "asm/JSystem/J3DGraphBase/J3DMatBlock/reset__20J3DColorBlockLightOnFP13J3DColorBlock.s"
}
#pragma pop


/* ############################################################################################## */
/* 803A1EA8-803A1EC8 001D+03 s=3 e=0 z=0  None .rodata    @stringBase0                                                 */
#pragma push
#pragma force_active on
#pragma section ".dead"
SECTION_DEAD char const* const stringBase_803A1EA8 = "Error : TexMtx[%d] is Null.\n";
/* @stringBase0 padding */
SECTION_DEAD static char const* const pad_803A1EC5 = "\0\0";
#pragma pop

/* 80320084-803201A0 011C+00 s=1 e=0 z=0  None .text      reset__21J3DTexGenBlockPatchedFP14J3DTexGenBlock             */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void J3DTexGenBlockPatched::reset(J3DTexGenBlock* param_0) {
	nofralloc
#include "asm/JSystem/J3DGraphBase/J3DMatBlock/reset__21J3DTexGenBlockPatchedFP14J3DTexGenBlock.s"
}
#pragma pop


/* 803201A0-803202DC 013C+00 s=1 e=0 z=0  None .text      reset__15J3DTexGenBlock4FP14J3DTexGenBlock                   */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void J3DTexGenBlock4::reset(J3DTexGenBlock* param_0) {
	nofralloc
#include "asm/JSystem/J3DGraphBase/J3DMatBlock/reset__15J3DTexGenBlock4FP14J3DTexGenBlock.s"
}
#pragma pop


/* 803202DC-80320418 013C+00 s=1 e=0 z=0  None .text      reset__19J3DTexGenBlockBasicFP14J3DTexGenBlock               */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void J3DTexGenBlockBasic::reset(J3DTexGenBlock* param_0) {
	nofralloc
#include "asm/JSystem/J3DGraphBase/J3DMatBlock/reset__19J3DTexGenBlockBasicFP14J3DTexGenBlock.s"
}
#pragma pop


/* 80320418-803205D4 01BC+00 s=1 e=0 z=0  None .text      reset__18J3DTevBlockPatchedFP11J3DTevBlock                   */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void J3DTevBlockPatched::reset(J3DTevBlock* param_0) {
	nofralloc
#include "asm/JSystem/J3DGraphBase/J3DMatBlock/reset__18J3DTevBlockPatchedFP11J3DTevBlock.s"
}
#pragma pop


/* 803205D4-803206AC 00D8+00 s=1 e=0 z=0  None .text      reset__12J3DTevBlock1FP11J3DTevBlock                         */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void J3DTevBlock1::reset(J3DTevBlock* param_0) {
	nofralloc
#include "asm/JSystem/J3DGraphBase/J3DMatBlock/reset__12J3DTevBlock1FP11J3DTevBlock.s"
}
#pragma pop


/* 803206AC-8032098C 02E0+00 s=1 e=0 z=0  None .text      reset__12J3DTevBlock2FP11J3DTevBlock                         */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void J3DTevBlock2::reset(J3DTevBlock* param_0) {
	nofralloc
#include "asm/JSystem/J3DGraphBase/J3DMatBlock/reset__12J3DTevBlock2FP11J3DTevBlock.s"
}
#pragma pop


/* 8032098C-80320E24 0498+00 s=1 e=0 z=0  None .text      reset__12J3DTevBlock4FP11J3DTevBlock                         */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void J3DTevBlock4::reset(J3DTevBlock* param_0) {
	nofralloc
#include "asm/JSystem/J3DGraphBase/J3DMatBlock/reset__12J3DTevBlock4FP11J3DTevBlock.s"
}
#pragma pop


/* 80320E24-803210B0 028C+00 s=1 e=0 z=0  None .text      reset__13J3DTevBlock16FP11J3DTevBlock                        */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void J3DTevBlock16::reset(J3DTevBlock* param_0) {
	nofralloc
#include "asm/JSystem/J3DGraphBase/J3DMatBlock/reset__13J3DTevBlock16FP11J3DTevBlock.s"
}
#pragma pop


/* 803210B0-803211B4 0104+00 s=1 e=0 z=0  None .text      reset__15J3DIndBlockFullFP11J3DIndBlock                      */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void J3DIndBlockFull::reset(J3DIndBlock* param_0) {
	nofralloc
#include "asm/JSystem/J3DGraphBase/J3DMatBlock/reset__15J3DIndBlockFullFP11J3DIndBlock.s"
}
#pragma pop


/* 803211B4-8032129C 00E8+00 s=1 e=0 z=0  None .text      reset__16J3DPEBlockFogOffFP10J3DPEBlock                      */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void J3DPEBlockFogOff::reset(J3DPEBlock* param_0) {
	nofralloc
#include "asm/JSystem/J3DGraphBase/J3DMatBlock/reset__16J3DPEBlockFogOffFP10J3DPEBlock.s"
}
#pragma pop


/* 8032129C-803213C0 0124+00 s=1 e=0 z=0  None .text      reset__14J3DPEBlockFullFP10J3DPEBlock                        */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void J3DPEBlockFull::reset(J3DPEBlock* param_0) {
	nofralloc
#include "asm/JSystem/J3DGraphBase/J3DMatBlock/reset__14J3DPEBlockFullFP10J3DPEBlock.s"
}
#pragma pop


/* ############################################################################################## */
/* 803CDF30-803CDF60 0030+00 s=1 e=0 z=0  None .data      @5062                                                        */
SECTION_DATA static void* lit_5062[12] = {
	/* 0    */ (void*)(((char*)calc__21J3DTexGenBlockPatchedFPA4_Cf)+0x188),
	/* 1    */ (void*)(((char*)calc__21J3DTexGenBlockPatchedFPA4_Cf)+0x74),
	/* 2    */ (void*)(((char*)calc__21J3DTexGenBlockPatchedFPA4_Cf)+0xC8),
	/* 3    */ (void*)(((char*)calc__21J3DTexGenBlockPatchedFPA4_Cf)+0xF8),
	/* 4    */ (void*)(((char*)calc__21J3DTexGenBlockPatchedFPA4_Cf)+0x188),
	/* 5    */ (void*)(((char*)calc__21J3DTexGenBlockPatchedFPA4_Cf)+0x13C),
	/* 6    */ (void*)(((char*)calc__21J3DTexGenBlockPatchedFPA4_Cf)+0x74),
	/* 7    */ (void*)(((char*)calc__21J3DTexGenBlockPatchedFPA4_Cf)+0x74),
	/* 8    */ (void*)(((char*)calc__21J3DTexGenBlockPatchedFPA4_Cf)+0xC8),
	/* 9    */ (void*)(((char*)calc__21J3DTexGenBlockPatchedFPA4_Cf)+0xF8),
	/* 10   */ (void*)(((char*)calc__21J3DTexGenBlockPatchedFPA4_Cf)+0x13C),
	/* 11   */ (void*)(((char*)calc__21J3DTexGenBlockPatchedFPA4_Cf)+0x13C),
};

/* 804563AC-804563B0 0004+00 s=3 e=0 z=0  None .sdata2    @5060                                                        */
SECTION_SDATA2 static u8 lit_5060[4] = {
	0x00, 0x00, 0x00, 0x00,
};

/* 803213C0-80321584 01C4+00 s=4 e=0 z=0  None .text      calc__21J3DTexGenBlockPatchedFPA4_Cf                         */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void J3DTexGenBlockPatched::calc(f32 const (* param_0)[4]) {
	nofralloc
#include "asm/JSystem/J3DGraphBase/J3DMatBlock/calc__21J3DTexGenBlockPatchedFPA4_Cf.s"
}
#pragma pop


/* ############################################################################################## */
/* 803CDF60-803CDF90 0030+00 s=1 e=0 z=0  None .data      @5110                                                        */
SECTION_DATA static void* lit_5110[12] = {
	/* 0    */ (void*)(((char*)calcWithoutViewMtx__21J3DTexGenBlockPatchedFPA4_Cf)+0x118),
	/* 1    */ (void*)(((char*)calcWithoutViewMtx__21J3DTexGenBlockPatchedFPA4_Cf)+0x74),
	/* 2    */ (void*)(((char*)calcWithoutViewMtx__21J3DTexGenBlockPatchedFPA4_Cf)+0x88),
	/* 3    */ (void*)(((char*)calcWithoutViewMtx__21J3DTexGenBlockPatchedFPA4_Cf)+0xB8),
	/* 4    */ (void*)(((char*)calcWithoutViewMtx__21J3DTexGenBlockPatchedFPA4_Cf)+0x118),
	/* 5    */ (void*)(((char*)calcWithoutViewMtx__21J3DTexGenBlockPatchedFPA4_Cf)+0xCC),
	/* 6    */ (void*)(((char*)calcWithoutViewMtx__21J3DTexGenBlockPatchedFPA4_Cf)+0x74),
	/* 7    */ (void*)(((char*)calcWithoutViewMtx__21J3DTexGenBlockPatchedFPA4_Cf)+0x74),
	/* 8    */ (void*)(((char*)calcWithoutViewMtx__21J3DTexGenBlockPatchedFPA4_Cf)+0x88),
	/* 9    */ (void*)(((char*)calcWithoutViewMtx__21J3DTexGenBlockPatchedFPA4_Cf)+0xB8),
	/* 10   */ (void*)(((char*)calcWithoutViewMtx__21J3DTexGenBlockPatchedFPA4_Cf)+0xCC),
	/* 11   */ (void*)(((char*)calcWithoutViewMtx__21J3DTexGenBlockPatchedFPA4_Cf)+0xCC),
};

/* 80321584-803216D8 0154+00 s=4 e=0 z=0  None .text      calcWithoutViewMtx__21J3DTexGenBlockPatchedFPA4_Cf           */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void J3DTexGenBlockPatched::calcWithoutViewMtx(f32 const (* param_0)[4]) {
	nofralloc
#include "asm/JSystem/J3DGraphBase/J3DMatBlock/calcWithoutViewMtx__21J3DTexGenBlockPatchedFPA4_Cf.s"
}
#pragma pop


/* ############################################################################################## */
/* 803CDF90-803CDFC0 0030+00 s=1 e=0 z=0  None .data      @5150                                                        */
SECTION_DATA static void* lit_5150[12] = {
	/* 0    */ (void*)(((char*)calcPostTexMtx__21J3DTexGenBlockPatchedFPA4_Cf)+0x100),
	/* 1    */ (void*)(((char*)calcPostTexMtx__21J3DTexGenBlockPatchedFPA4_Cf)+0x68),
	/* 2    */ (void*)(((char*)calcPostTexMtx__21J3DTexGenBlockPatchedFPA4_Cf)+0x84),
	/* 3    */ (void*)(((char*)calcPostTexMtx__21J3DTexGenBlockPatchedFPA4_Cf)+0xAC),
	/* 4    */ (void*)(((char*)calcPostTexMtx__21J3DTexGenBlockPatchedFPA4_Cf)+0x100),
	/* 5    */ (void*)(((char*)calcPostTexMtx__21J3DTexGenBlockPatchedFPA4_Cf)+0xC8),
	/* 6    */ (void*)(((char*)calcPostTexMtx__21J3DTexGenBlockPatchedFPA4_Cf)+0x68),
	/* 7    */ (void*)(((char*)calcPostTexMtx__21J3DTexGenBlockPatchedFPA4_Cf)+0x68),
	/* 8    */ (void*)(((char*)calcPostTexMtx__21J3DTexGenBlockPatchedFPA4_Cf)+0x84),
	/* 9    */ (void*)(((char*)calcPostTexMtx__21J3DTexGenBlockPatchedFPA4_Cf)+0xAC),
	/* 10   */ (void*)(((char*)calcPostTexMtx__21J3DTexGenBlockPatchedFPA4_Cf)+0xC8),
	/* 11   */ (void*)(((char*)calcPostTexMtx__21J3DTexGenBlockPatchedFPA4_Cf)+0xC8),
};

/* 803216D8-8032181C 0144+00 s=4 e=0 z=0  None .text      calcPostTexMtx__21J3DTexGenBlockPatchedFPA4_Cf               */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void J3DTexGenBlockPatched::calcPostTexMtx(f32 const (* param_0)[4]) {
	nofralloc
#include "asm/JSystem/J3DGraphBase/J3DMatBlock/calcPostTexMtx__21J3DTexGenBlockPatchedFPA4_Cf.s"
}
#pragma pop


/* ############################################################################################## */
/* 803CDFC0-803CDFF0 0030+00 s=1 e=0 z=0  None .data      @5187                                                        */
SECTION_DATA static void* lit_5187[12] = {
	/* 0    */ (void*)(((char*)calcPostTexMtxWithoutViewMtx__21J3DTexGenBlockPatchedFPA4_Cf)+0xD8),
	/* 1    */ (void*)(((char*)calcPostTexMtxWithoutViewMtx__21J3DTexGenBlockPatchedFPA4_Cf)+0x68),
	/* 2    */ (void*)(((char*)calcPostTexMtxWithoutViewMtx__21J3DTexGenBlockPatchedFPA4_Cf)+0x84),
	/* 3    */ (void*)(((char*)calcPostTexMtxWithoutViewMtx__21J3DTexGenBlockPatchedFPA4_Cf)+0xA0),
	/* 4    */ (void*)(((char*)calcPostTexMtxWithoutViewMtx__21J3DTexGenBlockPatchedFPA4_Cf)+0xD8),
	/* 5    */ (void*)(((char*)calcPostTexMtxWithoutViewMtx__21J3DTexGenBlockPatchedFPA4_Cf)+0xBC),
	/* 6    */ (void*)(((char*)calcPostTexMtxWithoutViewMtx__21J3DTexGenBlockPatchedFPA4_Cf)+0x68),
	/* 7    */ (void*)(((char*)calcPostTexMtxWithoutViewMtx__21J3DTexGenBlockPatchedFPA4_Cf)+0x68),
	/* 8    */ (void*)(((char*)calcPostTexMtxWithoutViewMtx__21J3DTexGenBlockPatchedFPA4_Cf)+0x84),
	/* 9    */ (void*)(((char*)calcPostTexMtxWithoutViewMtx__21J3DTexGenBlockPatchedFPA4_Cf)+0xA0),
	/* 10   */ (void*)(((char*)calcPostTexMtxWithoutViewMtx__21J3DTexGenBlockPatchedFPA4_Cf)+0xBC),
	/* 11   */ (void*)(((char*)calcPostTexMtxWithoutViewMtx__21J3DTexGenBlockPatchedFPA4_Cf)+0xBC),
};

/* 8032181C-80321938 011C+00 s=4 e=0 z=0  None .text      calcPostTexMtxWithoutViewMtx__21J3DTexGenBlockPatchedFPA4_Cf */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void J3DTexGenBlockPatched::calcPostTexMtxWithoutViewMtx(f32 const (* param_0)[4]) {
	nofralloc
#include "asm/JSystem/J3DGraphBase/J3DMatBlock/calcPostTexMtxWithoutViewMtx__21J3DTexGenBlockPatchedFPA4_Cf.s"
}
#pragma pop


/* 80321938-8032193C 0004+00 s=1 e=1 z=0  None .text      diffTevReg__11J3DTevBlockFv                                  */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void J3DTevBlock::diffTevReg() {
	nofralloc
#include "asm/JSystem/J3DGraphBase/J3DMatBlock/diffTevReg__11J3DTevBlockFv.s"
}
#pragma pop


/* 8032193C-80321940 0004+00 s=1 e=1 z=0  None .text      diffTevStageIndirect__11J3DTevBlockFv                        */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void J3DTevBlock::diffTevStageIndirect() {
	nofralloc
#include "asm/JSystem/J3DGraphBase/J3DMatBlock/diffTevStageIndirect__11J3DTevBlockFv.s"
}
#pragma pop


/* 80321940-80321944 0004+00 s=1 e=1 z=0  None .text      diffTevStage__11J3DTevBlockFv                                */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void J3DTevBlock::diffTevStage() {
	nofralloc
#include "asm/JSystem/J3DGraphBase/J3DMatBlock/diffTevStage__11J3DTevBlockFv.s"
}
#pragma pop


/* 80321944-80321948 0004+00 s=1 e=1 z=0  None .text      diffTexCoordScale__11J3DTevBlockFv                           */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void J3DTevBlock::diffTexCoordScale() {
	nofralloc
#include "asm/JSystem/J3DGraphBase/J3DMatBlock/diffTexCoordScale__11J3DTevBlockFv.s"
}
#pragma pop


/* 80321948-8032194C 0004+00 s=1 e=1 z=0  None .text      diffTexNo__11J3DTevBlockFv                                   */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void J3DTevBlock::diffTexNo() {
	nofralloc
#include "asm/JSystem/J3DGraphBase/J3DMatBlock/diffTexNo__11J3DTevBlockFv.s"
}
#pragma pop


/* 8032194C-80321958 000C+00 s=1 e=0 z=0  None .text      getType__14J3DPEBlockFullFv                                  */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void J3DPEBlockFull::getType() {
	nofralloc
#include "asm/JSystem/J3DGraphBase/J3DMatBlock/getType__14J3DPEBlockFullFv.s"
}
#pragma pop


/* 80321958-8032197C 0024+00 s=1 e=0 z=0  None .text      setFog__14J3DPEBlockFullFP6J3DFog                            */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void J3DPEBlockFull::setFog(J3DFog* param_0) {
	nofralloc
#include "asm/JSystem/J3DGraphBase/J3DMatBlock/setFog__14J3DPEBlockFullFP6J3DFog.s"
}
#pragma pop


/* 8032197C-803219A0 0024+00 s=1 e=0 z=0  None .text      setFog__14J3DPEBlockFullF6J3DFog                             */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void J3DPEBlockFull::setFog(J3DFog param_0) {
	nofralloc
#include "asm/JSystem/J3DGraphBase/J3DMatBlock/setFog__14J3DPEBlockFullF6J3DFog.s"
}
#pragma pop


/* 803219A0-803219A8 0008+00 s=1 e=0 z=0  None .text      getFog__14J3DPEBlockFullFv                                   */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void J3DPEBlockFull::getFog() {
	nofralloc
#include "asm/JSystem/J3DGraphBase/J3DMatBlock/getFog__14J3DPEBlockFullFv.s"
}
#pragma pop


/* 803219A8-803219C4 001C+00 s=1 e=0 z=0  None .text      setAlphaComp__14J3DPEBlockFullFRC12J3DAlphaComp              */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void J3DPEBlockFull::setAlphaComp(J3DAlphaComp const& param_0) {
	nofralloc
#include "asm/JSystem/J3DGraphBase/J3DMatBlock/setAlphaComp__14J3DPEBlockFullFRC12J3DAlphaComp.s"
}
#pragma pop


/* 803219C4-803219E0 001C+00 s=1 e=0 z=0  None .text      setAlphaComp__14J3DPEBlockFullFPC12J3DAlphaComp              */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void J3DPEBlockFull::setAlphaComp(J3DAlphaComp const* param_0) {
	nofralloc
#include "asm/JSystem/J3DGraphBase/J3DMatBlock/setAlphaComp__14J3DPEBlockFullFPC12J3DAlphaComp.s"
}
#pragma pop


/* 803219E0-803219E8 0008+00 s=1 e=0 z=0  None .text      getAlphaComp__14J3DPEBlockFullFv                             */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void J3DPEBlockFull::getAlphaComp() {
	nofralloc
#include "asm/JSystem/J3DGraphBase/J3DMatBlock/getAlphaComp__14J3DPEBlockFullFv.s"
}
#pragma pop


/* 803219E8-803219F4 000C+00 s=1 e=0 z=0  None .text      setBlend__14J3DPEBlockFullFRC8J3DBlend                       */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void J3DPEBlockFull::setBlend(J3DBlend const& param_0) {
	nofralloc
#include "asm/JSystem/J3DGraphBase/J3DMatBlock/setBlend__14J3DPEBlockFullFRC8J3DBlend.s"
}
#pragma pop


/* 803219F4-80321A00 000C+00 s=1 e=0 z=0  None .text      setBlend__14J3DPEBlockFullFPC8J3DBlend                       */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void J3DPEBlockFull::setBlend(J3DBlend const* param_0) {
	nofralloc
#include "asm/JSystem/J3DGraphBase/J3DMatBlock/setBlend__14J3DPEBlockFullFPC8J3DBlend.s"
}
#pragma pop


/* 80321A00-80321A08 0008+00 s=1 e=0 z=0  None .text      getBlend__14J3DPEBlockFullFv                                 */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void J3DPEBlockFull::getBlend() {
	nofralloc
#include "asm/JSystem/J3DGraphBase/J3DMatBlock/getBlend__14J3DPEBlockFullFv.s"
}
#pragma pop


/* 80321A08-80321A14 000C+00 s=1 e=0 z=0  None .text      setZMode__14J3DPEBlockFullF8J3DZMode                         */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void J3DPEBlockFull::setZMode(J3DZMode param_0) {
	nofralloc
#include "asm/JSystem/J3DGraphBase/J3DMatBlock/setZMode__14J3DPEBlockFullF8J3DZMode.s"
}
#pragma pop


/* 80321A14-80321A20 000C+00 s=1 e=0 z=0  None .text      setZMode__14J3DPEBlockFullFPC8J3DZMode                       */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void J3DPEBlockFull::setZMode(J3DZMode const* param_0) {
	nofralloc
#include "asm/JSystem/J3DGraphBase/J3DMatBlock/setZMode__14J3DPEBlockFullFPC8J3DZMode.s"
}
#pragma pop


/* 80321A20-80321A28 0008+00 s=1 e=0 z=0  None .text      getZMode__14J3DPEBlockFullFv                                 */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void J3DPEBlockFull::getZMode() {
	nofralloc
#include "asm/JSystem/J3DGraphBase/J3DMatBlock/getZMode__14J3DPEBlockFullFv.s"
}
#pragma pop


/* 80321A28-80321A30 0008+00 s=1 e=0 z=0  None .text      setZCompLoc__14J3DPEBlockFullFUc                             */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void J3DPEBlockFull::setZCompLoc(u8 param_0) {
	nofralloc
#include "asm/JSystem/J3DGraphBase/J3DMatBlock/setZCompLoc__14J3DPEBlockFullFUc.s"
}
#pragma pop


/* 80321A30-80321A3C 000C+00 s=1 e=0 z=0  None .text      setZCompLoc__14J3DPEBlockFullFPCUc                           */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void J3DPEBlockFull::setZCompLoc(u8 const* param_0) {
	nofralloc
#include "asm/JSystem/J3DGraphBase/J3DMatBlock/setZCompLoc__14J3DPEBlockFullFPCUc.s"
}
#pragma pop


/* 80321A3C-80321A44 0008+00 s=1 e=0 z=0  None .text      getZCompLoc__14J3DPEBlockFullCFv                             */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void J3DPEBlockFull::getZCompLoc() const {
	nofralloc
#include "asm/JSystem/J3DGraphBase/J3DMatBlock/getZCompLoc__14J3DPEBlockFullCFv.s"
}
#pragma pop


/* 80321A44-80321A4C 0008+00 s=1 e=0 z=0  None .text      setDither__14J3DPEBlockFullFUc                               */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void J3DPEBlockFull::setDither(u8 param_0) {
	nofralloc
#include "asm/JSystem/J3DGraphBase/J3DMatBlock/setDither__14J3DPEBlockFullFUc.s"
}
#pragma pop


/* 80321A4C-80321A58 000C+00 s=1 e=0 z=0  None .text      setDither__14J3DPEBlockFullFPCUc                             */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void J3DPEBlockFull::setDither(u8 const* param_0) {
	nofralloc
#include "asm/JSystem/J3DGraphBase/J3DMatBlock/setDither__14J3DPEBlockFullFPCUc.s"
}
#pragma pop


/* 80321A58-80321A60 0008+00 s=1 e=0 z=0  None .text      getDither__14J3DPEBlockFullCFv                               */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void J3DPEBlockFull::getDither() const {
	nofralloc
#include "asm/JSystem/J3DGraphBase/J3DMatBlock/getDither__14J3DPEBlockFullCFv.s"
}
#pragma pop


/* 80321A60-80321A68 0008+00 s=1 e=0 z=0  None .text      getFogOffset__14J3DPEBlockFullCFv                            */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void J3DPEBlockFull::getFogOffset() const {
	nofralloc
#include "asm/JSystem/J3DGraphBase/J3DMatBlock/getFogOffset__14J3DPEBlockFullCFv.s"
}
#pragma pop


/* 80321A68-80321A70 0008+00 s=1 e=0 z=0  None .text      setFogOffset__14J3DPEBlockFullFUl                            */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void J3DPEBlockFull::setFogOffset(u32 param_0) {
	nofralloc
#include "asm/JSystem/J3DGraphBase/J3DMatBlock/setFogOffset__14J3DPEBlockFullFUl.s"
}
#pragma pop


/* ############################################################################################## */
/* 803CDFF0-803CE06C 007C+00 s=1 e=1 z=0  None .data      __vt__14J3DPEBlockFull                                       */
SECTION_DATA void* __vt__14J3DPEBlockFull[31] = {
	/* 0    */ (void*)NULL /* RTTI */,
	/* 1    */ (void*)NULL,
	/* 2    */ (void*)reset__14J3DPEBlockFullFP10J3DPEBlock,
	/* 3    */ (void*)load__14J3DPEBlockFullFv,
	/* 4    */ (void*)patch__14J3DPEBlockFullFv,
	/* 5    */ (void*)diff__14J3DPEBlockFullFUl,
	/* 6    */ (void*)diffFog__14J3DPEBlockFullFv,
	/* 7    */ (void*)diffBlend__14J3DPEBlockFullFv,
	/* 8    */ (void*)countDLSize__14J3DPEBlockFullFv,
	/* 9    */ (void*)getType__14J3DPEBlockFullFv,
	/* 10   */ (void*)setFog__14J3DPEBlockFullF6J3DFog,
	/* 11   */ (void*)setFog__14J3DPEBlockFullFP6J3DFog,
	/* 12   */ (void*)getFog__14J3DPEBlockFullFv,
	/* 13   */ (void*)setAlphaComp__14J3DPEBlockFullFPC12J3DAlphaComp,
	/* 14   */ (void*)setAlphaComp__14J3DPEBlockFullFRC12J3DAlphaComp,
	/* 15   */ (void*)getAlphaComp__14J3DPEBlockFullFv,
	/* 16   */ (void*)setBlend__14J3DPEBlockFullFPC8J3DBlend,
	/* 17   */ (void*)setBlend__14J3DPEBlockFullFRC8J3DBlend,
	/* 18   */ (void*)getBlend__14J3DPEBlockFullFv,
	/* 19   */ (void*)setZMode__14J3DPEBlockFullFPC8J3DZMode,
	/* 20   */ (void*)setZMode__14J3DPEBlockFullF8J3DZMode,
	/* 21   */ (void*)getZMode__14J3DPEBlockFullFv,
	/* 22   */ (void*)setZCompLoc__14J3DPEBlockFullFPCUc,
	/* 23   */ (void*)setZCompLoc__14J3DPEBlockFullFUc,
	/* 24   */ (void*)getZCompLoc__14J3DPEBlockFullCFv,
	/* 25   */ (void*)setDither__14J3DPEBlockFullFPCUc,
	/* 26   */ (void*)setDither__14J3DPEBlockFullFUc,
	/* 27   */ (void*)getDither__14J3DPEBlockFullCFv,
	/* 28   */ (void*)getFogOffset__14J3DPEBlockFullCFv,
	/* 29   */ (void*)setFogOffset__14J3DPEBlockFullFUl,
	/* 30   */ (void*)__dt__14J3DPEBlockFullFv,
};

/* 80321A70-80321ACC 005C+00 s=1 e=0 z=0  None .text      __dt__14J3DPEBlockFullFv                                     */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm J3DPEBlockFull::~J3DPEBlockFull() {
	nofralloc
#include "asm/JSystem/J3DGraphBase/J3DMatBlock/__dt__14J3DPEBlockFullFv.s"
}
#pragma pop


/* 80321ACC-80321B00 0034+00 s=1 e=0 z=0  None .text      diff__16J3DPEBlockFogOffFUl                                  */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void J3DPEBlockFogOff::diff(u32 param_0) {
	nofralloc
#include "asm/JSystem/J3DGraphBase/J3DMatBlock/diff__16J3DPEBlockFogOffFUl.s"
}
#pragma pop


/* 80321B00-80321B0C 000C+00 s=1 e=0 z=0  None .text      getType__16J3DPEBlockFogOffFv                                */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void J3DPEBlockFogOff::getType() {
	nofralloc
#include "asm/JSystem/J3DGraphBase/J3DMatBlock/getType__16J3DPEBlockFogOffFv.s"
}
#pragma pop


/* 80321B0C-80321B28 001C+00 s=1 e=0 z=0  None .text      setAlphaComp__16J3DPEBlockFogOffFRC12J3DAlphaComp            */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void J3DPEBlockFogOff::setAlphaComp(J3DAlphaComp const& param_0) {
	nofralloc
#include "asm/JSystem/J3DGraphBase/J3DMatBlock/setAlphaComp__16J3DPEBlockFogOffFRC12J3DAlphaComp.s"
}
#pragma pop


/* 80321B28-80321B44 001C+00 s=1 e=0 z=0  None .text      setAlphaComp__16J3DPEBlockFogOffFPC12J3DAlphaComp            */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void J3DPEBlockFogOff::setAlphaComp(J3DAlphaComp const* param_0) {
	nofralloc
#include "asm/JSystem/J3DGraphBase/J3DMatBlock/setAlphaComp__16J3DPEBlockFogOffFPC12J3DAlphaComp.s"
}
#pragma pop


/* 80321B44-80321B4C 0008+00 s=1 e=0 z=0  None .text      getAlphaComp__16J3DPEBlockFogOffFv                           */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void J3DPEBlockFogOff::getAlphaComp() {
	nofralloc
#include "asm/JSystem/J3DGraphBase/J3DMatBlock/getAlphaComp__16J3DPEBlockFogOffFv.s"
}
#pragma pop


/* 80321B4C-80321B58 000C+00 s=1 e=0 z=0  None .text      setBlend__16J3DPEBlockFogOffFRC8J3DBlend                     */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void J3DPEBlockFogOff::setBlend(J3DBlend const& param_0) {
	nofralloc
#include "asm/JSystem/J3DGraphBase/J3DMatBlock/setBlend__16J3DPEBlockFogOffFRC8J3DBlend.s"
}
#pragma pop


/* 80321B58-80321B64 000C+00 s=1 e=0 z=0  None .text      setBlend__16J3DPEBlockFogOffFPC8J3DBlend                     */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void J3DPEBlockFogOff::setBlend(J3DBlend const* param_0) {
	nofralloc
#include "asm/JSystem/J3DGraphBase/J3DMatBlock/setBlend__16J3DPEBlockFogOffFPC8J3DBlend.s"
}
#pragma pop


/* 80321B64-80321B6C 0008+00 s=1 e=0 z=0  None .text      getBlend__16J3DPEBlockFogOffFv                               */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void J3DPEBlockFogOff::getBlend() {
	nofralloc
#include "asm/JSystem/J3DGraphBase/J3DMatBlock/getBlend__16J3DPEBlockFogOffFv.s"
}
#pragma pop


/* 80321B6C-80321B78 000C+00 s=1 e=0 z=0  None .text      setZMode__16J3DPEBlockFogOffF8J3DZMode                       */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void J3DPEBlockFogOff::setZMode(J3DZMode param_0) {
	nofralloc
#include "asm/JSystem/J3DGraphBase/J3DMatBlock/setZMode__16J3DPEBlockFogOffF8J3DZMode.s"
}
#pragma pop


/* 80321B78-80321B84 000C+00 s=1 e=0 z=0  None .text      setZMode__16J3DPEBlockFogOffFPC8J3DZMode                     */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void J3DPEBlockFogOff::setZMode(J3DZMode const* param_0) {
	nofralloc
#include "asm/JSystem/J3DGraphBase/J3DMatBlock/setZMode__16J3DPEBlockFogOffFPC8J3DZMode.s"
}
#pragma pop


/* 80321B84-80321B8C 0008+00 s=1 e=0 z=0  None .text      getZMode__16J3DPEBlockFogOffFv                               */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void J3DPEBlockFogOff::getZMode() {
	nofralloc
#include "asm/JSystem/J3DGraphBase/J3DMatBlock/getZMode__16J3DPEBlockFogOffFv.s"
}
#pragma pop


/* 80321B8C-80321B94 0008+00 s=1 e=0 z=0  None .text      setZCompLoc__16J3DPEBlockFogOffFUc                           */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void J3DPEBlockFogOff::setZCompLoc(u8 param_0) {
	nofralloc
#include "asm/JSystem/J3DGraphBase/J3DMatBlock/setZCompLoc__16J3DPEBlockFogOffFUc.s"
}
#pragma pop


/* 80321B94-80321BA0 000C+00 s=1 e=0 z=0  None .text      setZCompLoc__16J3DPEBlockFogOffFPCUc                         */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void J3DPEBlockFogOff::setZCompLoc(u8 const* param_0) {
	nofralloc
#include "asm/JSystem/J3DGraphBase/J3DMatBlock/setZCompLoc__16J3DPEBlockFogOffFPCUc.s"
}
#pragma pop


/* 80321BA0-80321BA8 0008+00 s=1 e=0 z=0  None .text      getZCompLoc__16J3DPEBlockFogOffCFv                           */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void J3DPEBlockFogOff::getZCompLoc() const {
	nofralloc
#include "asm/JSystem/J3DGraphBase/J3DMatBlock/getZCompLoc__16J3DPEBlockFogOffCFv.s"
}
#pragma pop


/* 80321BA8-80321BB0 0008+00 s=1 e=0 z=0  None .text      setDither__16J3DPEBlockFogOffFUc                             */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void J3DPEBlockFogOff::setDither(u8 param_0) {
	nofralloc
#include "asm/JSystem/J3DGraphBase/J3DMatBlock/setDither__16J3DPEBlockFogOffFUc.s"
}
#pragma pop


/* 80321BB0-80321BBC 000C+00 s=1 e=0 z=0  None .text      setDither__16J3DPEBlockFogOffFPCUc                           */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void J3DPEBlockFogOff::setDither(u8 const* param_0) {
	nofralloc
#include "asm/JSystem/J3DGraphBase/J3DMatBlock/setDither__16J3DPEBlockFogOffFPCUc.s"
}
#pragma pop


/* 80321BBC-80321BC4 0008+00 s=1 e=0 z=0  None .text      getDither__16J3DPEBlockFogOffCFv                             */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void J3DPEBlockFogOff::getDither() const {
	nofralloc
#include "asm/JSystem/J3DGraphBase/J3DMatBlock/getDither__16J3DPEBlockFogOffCFv.s"
}
#pragma pop


/* ############################################################################################## */
/* 803CE06C-803CE0E8 007C+00 s=1 e=1 z=0  None .data      __vt__16J3DPEBlockFogOff                                     */
SECTION_DATA void* __vt__16J3DPEBlockFogOff[31] = {
	/* 0    */ (void*)NULL /* RTTI */,
	/* 1    */ (void*)NULL,
	/* 2    */ (void*)reset__16J3DPEBlockFogOffFP10J3DPEBlock,
	/* 3    */ (void*)load__16J3DPEBlockFogOffFv,
	/* 4    */ (void*)patch__10J3DPEBlockFv,
	/* 5    */ (void*)diff__16J3DPEBlockFogOffFUl,
	/* 6    */ (void*)diffFog__10J3DPEBlockFv,
	/* 7    */ (void*)diffBlend__16J3DPEBlockFogOffFv,
	/* 8    */ (void*)countDLSize__16J3DPEBlockFogOffFv,
	/* 9    */ (void*)getType__16J3DPEBlockFogOffFv,
	/* 10   */ (void*)setFog__10J3DPEBlockF6J3DFog,
	/* 11   */ (void*)setFog__10J3DPEBlockFP6J3DFog,
	/* 12   */ (void*)getFog__10J3DPEBlockFv,
	/* 13   */ (void*)setAlphaComp__16J3DPEBlockFogOffFPC12J3DAlphaComp,
	/* 14   */ (void*)setAlphaComp__16J3DPEBlockFogOffFRC12J3DAlphaComp,
	/* 15   */ (void*)getAlphaComp__16J3DPEBlockFogOffFv,
	/* 16   */ (void*)setBlend__16J3DPEBlockFogOffFPC8J3DBlend,
	/* 17   */ (void*)setBlend__16J3DPEBlockFogOffFRC8J3DBlend,
	/* 18   */ (void*)getBlend__16J3DPEBlockFogOffFv,
	/* 19   */ (void*)setZMode__16J3DPEBlockFogOffFPC8J3DZMode,
	/* 20   */ (void*)setZMode__16J3DPEBlockFogOffF8J3DZMode,
	/* 21   */ (void*)getZMode__16J3DPEBlockFogOffFv,
	/* 22   */ (void*)setZCompLoc__16J3DPEBlockFogOffFPCUc,
	/* 23   */ (void*)setZCompLoc__16J3DPEBlockFogOffFUc,
	/* 24   */ (void*)getZCompLoc__16J3DPEBlockFogOffCFv,
	/* 25   */ (void*)setDither__16J3DPEBlockFogOffFPCUc,
	/* 26   */ (void*)setDither__16J3DPEBlockFogOffFUc,
	/* 27   */ (void*)getDither__16J3DPEBlockFogOffCFv,
	/* 28   */ (void*)getFogOffset__10J3DPEBlockCFv,
	/* 29   */ (void*)setFogOffset__10J3DPEBlockFUl,
	/* 30   */ (void*)__dt__16J3DPEBlockFogOffFv,
};

/* 80321BC4-80321C20 005C+00 s=1 e=0 z=0  None .text      __dt__16J3DPEBlockFogOffFv                                   */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm J3DPEBlockFogOff::~J3DPEBlockFogOff() {
	nofralloc
#include "asm/JSystem/J3DGraphBase/J3DMatBlock/__dt__16J3DPEBlockFogOffFv.s"
}
#pragma pop


/* 80321C20-80321C44 0024+00 s=1 e=0 z=0  None .text      indexToPtr__13J3DTevBlock16Fv                                */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void J3DTevBlock16::indexToPtr() {
	nofralloc
#include "asm/JSystem/J3DGraphBase/J3DMatBlock/indexToPtr__13J3DTevBlock16Fv.s"
}
#pragma pop


/* 80321C44-80321C50 000C+00 s=1 e=0 z=0  None .text      getType__13J3DTevBlock16Fv                                   */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void J3DTevBlock16::getType() {
	nofralloc
#include "asm/JSystem/J3DGraphBase/J3DMatBlock/getType__13J3DTevBlock16Fv.s"
}
#pragma pop


/* 80321C50-80321C60 0010+00 s=1 e=0 z=0  None .text      setTexNo__13J3DTevBlock16FUlUs                               */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void J3DTevBlock16::setTexNo(u32 param_0, u16 param_1) {
	nofralloc
#include "asm/JSystem/J3DGraphBase/J3DMatBlock/setTexNo__13J3DTevBlock16FUlUs.s"
}
#pragma pop


/* 80321C60-80321C74 0014+00 s=1 e=0 z=0  None .text      setTexNo__13J3DTevBlock16FUlPCUs                             */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void J3DTevBlock16::setTexNo(u32 param_0, u16 const* param_1) {
	nofralloc
#include "asm/JSystem/J3DGraphBase/J3DMatBlock/setTexNo__13J3DTevBlock16FUlPCUs.s"
}
#pragma pop


/* 80321C74-80321C84 0010+00 s=1 e=0 z=0  None .text      getTexNo__13J3DTevBlock16CFUl                                */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void J3DTevBlock16::getTexNo(u32 param_0) const {
	nofralloc
#include "asm/JSystem/J3DGraphBase/J3DMatBlock/getTexNo__13J3DTevBlock16CFUl.s"
}
#pragma pop


/* 80321C84-80321C98 0014+00 s=1 e=0 z=0  None .text      setTevOrder__13J3DTevBlock16FUl11J3DTevOrder                 */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void J3DTevBlock16::setTevOrder(u32 param_0, J3DTevOrder param_1) {
	nofralloc
#include "asm/JSystem/J3DGraphBase/J3DMatBlock/setTevOrder__13J3DTevBlock16FUl11J3DTevOrder.s"
}
#pragma pop


/* 80321C98-80321CAC 0014+00 s=1 e=0 z=0  None .text      setTevOrder__13J3DTevBlock16FUlPC11J3DTevOrder               */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void J3DTevBlock16::setTevOrder(u32 param_0, J3DTevOrder const* param_1) {
	nofralloc
#include "asm/JSystem/J3DGraphBase/J3DMatBlock/setTevOrder__13J3DTevBlock16FUlPC11J3DTevOrder.s"
}
#pragma pop


/* 80321CAC-80321CC0 0014+00 s=1 e=0 z=0  None .text      getTevOrder__13J3DTevBlock16FUl                              */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void J3DTevBlock16::getTevOrder(u32 param_0) {
	nofralloc
#include "asm/JSystem/J3DGraphBase/J3DMatBlock/getTevOrder__13J3DTevBlock16FUl.s"
}
#pragma pop


/* 80321CC0-80321CEC 002C+00 s=1 e=0 z=0  None .text      setTevColor__13J3DTevBlock16FUl13J3DGXColorS10               */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void J3DTevBlock16::setTevColor(u32 param_0, J3DGXColorS10 param_1) {
	nofralloc
#include "asm/JSystem/J3DGraphBase/J3DMatBlock/setTevColor__13J3DTevBlock16FUl13J3DGXColorS10.s"
}
#pragma pop


/* 80321CEC-80321D18 002C+00 s=1 e=0 z=0  None .text      setTevColor__13J3DTevBlock16FUlPC13J3DGXColorS10             */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void J3DTevBlock16::setTevColor(u32 param_0, J3DGXColorS10 const* param_1) {
	nofralloc
#include "asm/JSystem/J3DGraphBase/J3DMatBlock/setTevColor__13J3DTevBlock16FUlPC13J3DGXColorS10.s"
}
#pragma pop


/* 80321D18-80321D2C 0014+00 s=1 e=0 z=0  None .text      getTevColor__13J3DTevBlock16FUl                              */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void J3DTevBlock16::getTevColor(u32 param_0) {
	nofralloc
#include "asm/JSystem/J3DGraphBase/J3DMatBlock/getTevColor__13J3DTevBlock16FUl.s"
}
#pragma pop


/* 80321D2C-80321D58 002C+00 s=1 e=0 z=0  None .text      setTevKColor__13J3DTevBlock16FUl10J3DGXColor                 */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void J3DTevBlock16::setTevKColor(u32 param_0, J3DGXColor param_1) {
	nofralloc
#include "asm/JSystem/J3DGraphBase/J3DMatBlock/setTevKColor__13J3DTevBlock16FUl10J3DGXColor.s"
}
#pragma pop


/* 80321D58-80321D84 002C+00 s=1 e=0 z=0  None .text      setTevKColor__13J3DTevBlock16FUlPC10J3DGXColor               */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void J3DTevBlock16::setTevKColor(u32 param_0, J3DGXColor const* param_1) {
	nofralloc
#include "asm/JSystem/J3DGraphBase/J3DMatBlock/setTevKColor__13J3DTevBlock16FUlPC10J3DGXColor.s"
}
#pragma pop


/* 80321D84-80321D98 0014+00 s=1 e=0 z=0  None .text      getTevKColor__13J3DTevBlock16FUl                             */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void J3DTevBlock16::getTevKColor(u32 param_0) {
	nofralloc
#include "asm/JSystem/J3DGraphBase/J3DMatBlock/getTevKColor__13J3DTevBlock16FUl.s"
}
#pragma pop


/* 80321D98-80321DA4 000C+00 s=1 e=0 z=0  None .text      setTevKColorSel__13J3DTevBlock16FUlUc                        */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void J3DTevBlock16::setTevKColorSel(u32 param_0, u8 param_1) {
	nofralloc
#include "asm/JSystem/J3DGraphBase/J3DMatBlock/setTevKColorSel__13J3DTevBlock16FUlUc.s"
}
#pragma pop


/* 80321DA4-80321DB4 0010+00 s=1 e=0 z=0  None .text      setTevKColorSel__13J3DTevBlock16FUlPCUc                      */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void J3DTevBlock16::setTevKColorSel(u32 param_0, u8 const* param_1) {
	nofralloc
#include "asm/JSystem/J3DGraphBase/J3DMatBlock/setTevKColorSel__13J3DTevBlock16FUlPCUc.s"
}
#pragma pop


/* 80321DB4-80321DC0 000C+00 s=1 e=0 z=0  None .text      getTevKColorSel__13J3DTevBlock16FUl                          */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void J3DTevBlock16::getTevKColorSel(u32 param_0) {
	nofralloc
#include "asm/JSystem/J3DGraphBase/J3DMatBlock/getTevKColorSel__13J3DTevBlock16FUl.s"
}
#pragma pop


/* 80321DC0-80321DCC 000C+00 s=1 e=0 z=0  None .text      setTevKAlphaSel__13J3DTevBlock16FUlUc                        */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void J3DTevBlock16::setTevKAlphaSel(u32 param_0, u8 param_1) {
	nofralloc
#include "asm/JSystem/J3DGraphBase/J3DMatBlock/setTevKAlphaSel__13J3DTevBlock16FUlUc.s"
}
#pragma pop


/* 80321DCC-80321DDC 0010+00 s=1 e=0 z=0  None .text      setTevKAlphaSel__13J3DTevBlock16FUlPCUc                      */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void J3DTevBlock16::setTevKAlphaSel(u32 param_0, u8 const* param_1) {
	nofralloc
#include "asm/JSystem/J3DGraphBase/J3DMatBlock/setTevKAlphaSel__13J3DTevBlock16FUlPCUc.s"
}
#pragma pop


/* 80321DDC-80321DE8 000C+00 s=1 e=0 z=0  None .text      getTevKAlphaSel__13J3DTevBlock16FUl                          */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void J3DTevBlock16::getTevKAlphaSel(u32 param_0) {
	nofralloc
#include "asm/JSystem/J3DGraphBase/J3DMatBlock/getTevKAlphaSel__13J3DTevBlock16FUl.s"
}
#pragma pop


/* 80321DE8-80321DF0 0008+00 s=1 e=0 z=0  None .text      setTevStageNum__13J3DTevBlock16FUc                           */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void J3DTevBlock16::setTevStageNum(u8 param_0) {
	nofralloc
#include "asm/JSystem/J3DGraphBase/J3DMatBlock/setTevStageNum__13J3DTevBlock16FUc.s"
}
#pragma pop


/* 80321DF0-80321DFC 000C+00 s=1 e=0 z=0  None .text      setTevStageNum__13J3DTevBlock16FPCUc                         */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void J3DTevBlock16::setTevStageNum(u8 const* param_0) {
	nofralloc
#include "asm/JSystem/J3DGraphBase/J3DMatBlock/setTevStageNum__13J3DTevBlock16FPCUc.s"
}
#pragma pop


/* 80321DFC-80321E04 0008+00 s=1 e=0 z=0  None .text      getTevStageNum__13J3DTevBlock16CFv                           */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void J3DTevBlock16::getTevStageNum() const {
	nofralloc
#include "asm/JSystem/J3DGraphBase/J3DMatBlock/getTevStageNum__13J3DTevBlock16CFv.s"
}
#pragma pop


/* 80321E04-80321E40 003C+00 s=1 e=0 z=0  None .text      setTevStage__13J3DTevBlock16FUl11J3DTevStage                 */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void J3DTevBlock16::setTevStage(u32 param_0, J3DTevStage param_1) {
	nofralloc
#include "asm/JSystem/J3DGraphBase/J3DMatBlock/setTevStage__13J3DTevBlock16FUl11J3DTevStage.s"
}
#pragma pop


/* 80321E40-80321E7C 003C+00 s=1 e=0 z=0  None .text      setTevStage__13J3DTevBlock16FUlPC11J3DTevStage               */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void J3DTevBlock16::setTevStage(u32 param_0, J3DTevStage const* param_1) {
	nofralloc
#include "asm/JSystem/J3DGraphBase/J3DMatBlock/setTevStage__13J3DTevBlock16FUlPC11J3DTevStage.s"
}
#pragma pop


/* 80321E7C-80321E90 0014+00 s=1 e=0 z=0  None .text      getTevStage__13J3DTevBlock16FUl                              */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void J3DTevBlock16::getTevStage(u32 param_0) {
	nofralloc
#include "asm/JSystem/J3DGraphBase/J3DMatBlock/getTevStage__13J3DTevBlock16FUl.s"
}
#pragma pop


/* 80321E90-80321EC8 0038+00 s=1 e=0 z=0  None .text      setTevSwapModeInfo__13J3DTevBlock16FUl18J3DTevSwapModeInfo   */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void J3DTevBlock16::setTevSwapModeInfo(u32 param_0, J3DTevSwapModeInfo param_1) {
	nofralloc
#include "asm/JSystem/J3DGraphBase/J3DMatBlock/setTevSwapModeInfo__13J3DTevBlock16FUl18J3DTevSwapModeInfo.s"
}
#pragma pop


/* 80321EC8-80321F00 0038+00 s=1 e=0 z=0  None .text      setTevSwapModeInfo__13J3DTevBlock16FUlPC18J3DTevSwapModeInfo */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void J3DTevBlock16::setTevSwapModeInfo(u32 param_0, J3DTevSwapModeInfo const* param_1) {
	nofralloc
#include "asm/JSystem/J3DGraphBase/J3DMatBlock/setTevSwapModeInfo__13J3DTevBlock16FUlPC18J3DTevSwapModeInfo.s"
}
#pragma pop


/* 80321F00-80321F10 0010+00 s=1 e=0 z=0  None .text      setTevSwapModeTable__13J3DTevBlock16FUl19J3DTevSwapModeTable */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void J3DTevBlock16::setTevSwapModeTable(u32 param_0, J3DTevSwapModeTable param_1) {
	nofralloc
#include "asm/JSystem/J3DGraphBase/J3DMatBlock/setTevSwapModeTable__13J3DTevBlock16FUl19J3DTevSwapModeTable.s"
}
#pragma pop


/* 80321F10-80321F20 0010+00 s=1 e=0 z=0  None .text      setTevSwapModeTable__13J3DTevBlock16FUlPC19J3DTevSwapModeTable */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void J3DTevBlock16::setTevSwapModeTable(u32 param_0, J3DTevSwapModeTable const* param_1) {
	nofralloc
#include "asm/JSystem/J3DGraphBase/J3DMatBlock/setTevSwapModeTable__13J3DTevBlock16FUlPC19J3DTevSwapModeTable.s"
}
#pragma pop


/* 80321F20-80321F30 0010+00 s=1 e=0 z=0  None .text      getTevSwapModeTable__13J3DTevBlock16FUl                      */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void J3DTevBlock16::getTevSwapModeTable(u32 param_0) {
	nofralloc
#include "asm/JSystem/J3DGraphBase/J3DMatBlock/getTevSwapModeTable__13J3DTevBlock16FUl.s"
}
#pragma pop


/* 80321F30-80321F44 0014+00 s=1 e=0 z=0  None .text      setIndTevStage__13J3DTevBlock16FUl14J3DIndTevStage           */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void J3DTevBlock16::setIndTevStage(u32 param_0, J3DIndTevStage param_1) {
	nofralloc
#include "asm/JSystem/J3DGraphBase/J3DMatBlock/setIndTevStage__13J3DTevBlock16FUl14J3DIndTevStage.s"
}
#pragma pop


/* 80321F44-80321F58 0014+00 s=1 e=0 z=0  None .text      setIndTevStage__13J3DTevBlock16FUlPC14J3DIndTevStage         */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void J3DTevBlock16::setIndTevStage(u32 param_0, J3DIndTevStage const* param_1) {
	nofralloc
#include "asm/JSystem/J3DGraphBase/J3DMatBlock/setIndTevStage__13J3DTevBlock16FUlPC14J3DIndTevStage.s"
}
#pragma pop


/* 80321F58-80321F6C 0014+00 s=1 e=0 z=0  None .text      getIndTevStage__13J3DTevBlock16FUl                           */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void J3DTevBlock16::getIndTevStage(u32 param_0) {
	nofralloc
#include "asm/JSystem/J3DGraphBase/J3DMatBlock/getIndTevStage__13J3DTevBlock16FUl.s"
}
#pragma pop


/* 80321F6C-80321F74 0008+00 s=1 e=0 z=0  None .text      getTexNoOffset__13J3DTevBlock16CFv                           */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void J3DTevBlock16::getTexNoOffset() const {
	nofralloc
#include "asm/JSystem/J3DGraphBase/J3DMatBlock/getTexNoOffset__13J3DTevBlock16CFv.s"
}
#pragma pop


/* 80321F74-80321F7C 0008+00 s=1 e=0 z=0  None .text      getTevRegOffset__13J3DTevBlock16CFv                          */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void J3DTevBlock16::getTevRegOffset() const {
	nofralloc
#include "asm/JSystem/J3DGraphBase/J3DMatBlock/getTevRegOffset__13J3DTevBlock16CFv.s"
}
#pragma pop


/* 80321F7C-80321F84 0008+00 s=1 e=0 z=0  None .text      setTevRegOffset__13J3DTevBlock16FUl                          */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void J3DTevBlock16::setTevRegOffset(u32 param_0) {
	nofralloc
#include "asm/JSystem/J3DGraphBase/J3DMatBlock/setTevRegOffset__13J3DTevBlock16FUl.s"
}
#pragma pop


/* ############################################################################################## */
/* 803CE0E8-803CE1C4 00DC+00 s=1 e=1 z=0  None .data      __vt__13J3DTevBlock16                                        */
SECTION_DATA void* __vt__13J3DTevBlock16[55] = {
	/* 0    */ (void*)NULL /* RTTI */,
	/* 1    */ (void*)NULL,
	/* 2    */ (void*)reset__13J3DTevBlock16FP11J3DTevBlock,
	/* 3    */ (void*)load__13J3DTevBlock16Fv,
	/* 4    */ (void*)diff__11J3DTevBlockFUl,
	/* 5    */ (void*)diffTexNo__13J3DTevBlock16Fv,
	/* 6    */ (void*)diffTevReg__13J3DTevBlock16Fv,
	/* 7    */ (void*)diffTexCoordScale__13J3DTevBlock16Fv,
	/* 8    */ (void*)diffTevStage__13J3DTevBlock16Fv,
	/* 9    */ (void*)diffTevStageIndirect__13J3DTevBlock16Fv,
	/* 10   */ (void*)patch__13J3DTevBlock16Fv,
	/* 11   */ (void*)patchTexNo__13J3DTevBlock16Fv,
	/* 12   */ (void*)patchTevReg__13J3DTevBlock16Fv,
	/* 13   */ (void*)patchTexNoAndTexCoordScale__13J3DTevBlock16Fv,
	/* 14   */ (void*)ptrToIndex__13J3DTevBlock16Fv,
	/* 15   */ (void*)indexToPtr__13J3DTevBlock16Fv,
	/* 16   */ (void*)getType__13J3DTevBlock16Fv,
	/* 17   */ (void*)countDLSize__13J3DTevBlock16Fv,
	/* 18   */ (void*)setTexNo__13J3DTevBlock16FUlPCUs,
	/* 19   */ (void*)setTexNo__13J3DTevBlock16FUlUs,
	/* 20   */ (void*)getTexNo__13J3DTevBlock16CFUl,
	/* 21   */ (void*)setTevOrder__13J3DTevBlock16FUlPC11J3DTevOrder,
	/* 22   */ (void*)setTevOrder__13J3DTevBlock16FUl11J3DTevOrder,
	/* 23   */ (void*)getTevOrder__13J3DTevBlock16FUl,
	/* 24   */ (void*)setTevColor__13J3DTevBlock16FUlPC13J3DGXColorS10,
	/* 25   */ (void*)setTevColor__13J3DTevBlock16FUl13J3DGXColorS10,
	/* 26   */ (void*)getTevColor__13J3DTevBlock16FUl,
	/* 27   */ (void*)setTevKColor__13J3DTevBlock16FUlPC10J3DGXColor,
	/* 28   */ (void*)setTevKColor__13J3DTevBlock16FUl10J3DGXColor,
	/* 29   */ (void*)getTevKColor__13J3DTevBlock16FUl,
	/* 30   */ (void*)setTevKColorSel__13J3DTevBlock16FUlPCUc,
	/* 31   */ (void*)setTevKColorSel__13J3DTevBlock16FUlUc,
	/* 32   */ (void*)getTevKColorSel__13J3DTevBlock16FUl,
	/* 33   */ (void*)setTevKAlphaSel__13J3DTevBlock16FUlPCUc,
	/* 34   */ (void*)setTevKAlphaSel__13J3DTevBlock16FUlUc,
	/* 35   */ (void*)getTevKAlphaSel__13J3DTevBlock16FUl,
	/* 36   */ (void*)setTevStageNum__13J3DTevBlock16FPCUc,
	/* 37   */ (void*)setTevStageNum__13J3DTevBlock16FUc,
	/* 38   */ (void*)getTevStageNum__13J3DTevBlock16CFv,
	/* 39   */ (void*)setTevStage__13J3DTevBlock16FUlPC11J3DTevStage,
	/* 40   */ (void*)setTevStage__13J3DTevBlock16FUl11J3DTevStage,
	/* 41   */ (void*)getTevStage__13J3DTevBlock16FUl,
	/* 42   */ (void*)setTevSwapModeInfo__13J3DTevBlock16FUlPC18J3DTevSwapModeInfo,
	/* 43   */ (void*)setTevSwapModeInfo__13J3DTevBlock16FUl18J3DTevSwapModeInfo,
	/* 44   */ (void*)setTevSwapModeTable__13J3DTevBlock16FUlPC19J3DTevSwapModeTable,
	/* 45   */ (void*)setTevSwapModeTable__13J3DTevBlock16FUl19J3DTevSwapModeTable,
	/* 46   */ (void*)getTevSwapModeTable__13J3DTevBlock16FUl,
	/* 47   */ (void*)setIndTevStage__13J3DTevBlock16FUlPC14J3DIndTevStage,
	/* 48   */ (void*)setIndTevStage__13J3DTevBlock16FUl14J3DIndTevStage,
	/* 49   */ (void*)getIndTevStage__13J3DTevBlock16FUl,
	/* 50   */ (void*)getTexNoOffset__13J3DTevBlock16CFv,
	/* 51   */ (void*)getTevRegOffset__13J3DTevBlock16CFv,
	/* 52   */ (void*)setTexNoOffset__11J3DTevBlockFUl,
	/* 53   */ (void*)setTevRegOffset__13J3DTevBlock16FUl,
	/* 54   */ (void*)__dt__13J3DTevBlock16Fv,
};

/* 803CE1C4-803CE2A0 00DC+00 s=1 e=1 z=0  None .data      __vt__12J3DTevBlock4                                         */
SECTION_DATA void* __vt__12J3DTevBlock4[55] = {
	/* 0    */ (void*)NULL /* RTTI */,
	/* 1    */ (void*)NULL,
	/* 2    */ (void*)reset__12J3DTevBlock4FP11J3DTevBlock,
	/* 3    */ (void*)load__12J3DTevBlock4Fv,
	/* 4    */ (void*)diff__11J3DTevBlockFUl,
	/* 5    */ (void*)diffTexNo__12J3DTevBlock4Fv,
	/* 6    */ (void*)diffTevReg__12J3DTevBlock4Fv,
	/* 7    */ (void*)diffTexCoordScale__12J3DTevBlock4Fv,
	/* 8    */ (void*)diffTevStage__12J3DTevBlock4Fv,
	/* 9    */ (void*)diffTevStageIndirect__12J3DTevBlock4Fv,
	/* 10   */ (void*)patch__12J3DTevBlock4Fv,
	/* 11   */ (void*)patchTexNo__12J3DTevBlock4Fv,
	/* 12   */ (void*)patchTevReg__12J3DTevBlock4Fv,
	/* 13   */ (void*)patchTexNoAndTexCoordScale__12J3DTevBlock4Fv,
	/* 14   */ (void*)ptrToIndex__12J3DTevBlock4Fv,
	/* 15   */ (void*)indexToPtr__12J3DTevBlock4Fv,
	/* 16   */ (void*)getType__12J3DTevBlock4Fv,
	/* 17   */ (void*)countDLSize__12J3DTevBlock4Fv,
	/* 18   */ (void*)setTexNo__12J3DTevBlock4FUlPCUs,
	/* 19   */ (void*)setTexNo__12J3DTevBlock4FUlUs,
	/* 20   */ (void*)getTexNo__12J3DTevBlock4CFUl,
	/* 21   */ (void*)setTevOrder__12J3DTevBlock4FUlPC11J3DTevOrder,
	/* 22   */ (void*)setTevOrder__12J3DTevBlock4FUl11J3DTevOrder,
	/* 23   */ (void*)getTevOrder__12J3DTevBlock4FUl,
	/* 24   */ (void*)setTevColor__12J3DTevBlock4FUlPC13J3DGXColorS10,
	/* 25   */ (void*)setTevColor__12J3DTevBlock4FUl13J3DGXColorS10,
	/* 26   */ (void*)getTevColor__12J3DTevBlock4FUl,
	/* 27   */ (void*)setTevKColor__12J3DTevBlock4FUlPC10J3DGXColor,
	/* 28   */ (void*)setTevKColor__12J3DTevBlock4FUl10J3DGXColor,
	/* 29   */ (void*)getTevKColor__12J3DTevBlock4FUl,
	/* 30   */ (void*)setTevKColorSel__12J3DTevBlock4FUlPCUc,
	/* 31   */ (void*)setTevKColorSel__12J3DTevBlock4FUlUc,
	/* 32   */ (void*)getTevKColorSel__12J3DTevBlock4FUl,
	/* 33   */ (void*)setTevKAlphaSel__12J3DTevBlock4FUlPCUc,
	/* 34   */ (void*)setTevKAlphaSel__12J3DTevBlock4FUlUc,
	/* 35   */ (void*)getTevKAlphaSel__12J3DTevBlock4FUl,
	/* 36   */ (void*)setTevStageNum__12J3DTevBlock4FPCUc,
	/* 37   */ (void*)setTevStageNum__12J3DTevBlock4FUc,
	/* 38   */ (void*)getTevStageNum__12J3DTevBlock4CFv,
	/* 39   */ (void*)setTevStage__12J3DTevBlock4FUlPC11J3DTevStage,
	/* 40   */ (void*)setTevStage__12J3DTevBlock4FUl11J3DTevStage,
	/* 41   */ (void*)getTevStage__12J3DTevBlock4FUl,
	/* 42   */ (void*)setTevSwapModeInfo__12J3DTevBlock4FUlPC18J3DTevSwapModeInfo,
	/* 43   */ (void*)setTevSwapModeInfo__12J3DTevBlock4FUl18J3DTevSwapModeInfo,
	/* 44   */ (void*)setTevSwapModeTable__12J3DTevBlock4FUlPC19J3DTevSwapModeTable,
	/* 45   */ (void*)setTevSwapModeTable__12J3DTevBlock4FUl19J3DTevSwapModeTable,
	/* 46   */ (void*)getTevSwapModeTable__12J3DTevBlock4FUl,
	/* 47   */ (void*)setIndTevStage__12J3DTevBlock4FUlPC14J3DIndTevStage,
	/* 48   */ (void*)setIndTevStage__12J3DTevBlock4FUl14J3DIndTevStage,
	/* 49   */ (void*)getIndTevStage__12J3DTevBlock4FUl,
	/* 50   */ (void*)getTexNoOffset__12J3DTevBlock4CFv,
	/* 51   */ (void*)getTevRegOffset__12J3DTevBlock4CFv,
	/* 52   */ (void*)setTexNoOffset__11J3DTevBlockFUl,
	/* 53   */ (void*)setTevRegOffset__12J3DTevBlock4FUl,
	/* 54   */ (void*)__dt__12J3DTevBlock4Fv,
};

/* 803CE2A0-803CE37C 00DC+00 s=1 e=1 z=0  None .data      __vt__12J3DTevBlock2                                         */
SECTION_DATA void* __vt__12J3DTevBlock2[55] = {
	/* 0    */ (void*)NULL /* RTTI */,
	/* 1    */ (void*)NULL,
	/* 2    */ (void*)reset__12J3DTevBlock2FP11J3DTevBlock,
	/* 3    */ (void*)load__12J3DTevBlock2Fv,
	/* 4    */ (void*)diff__11J3DTevBlockFUl,
	/* 5    */ (void*)diffTexNo__12J3DTevBlock2Fv,
	/* 6    */ (void*)diffTevReg__12J3DTevBlock2Fv,
	/* 7    */ (void*)diffTexCoordScale__12J3DTevBlock2Fv,
	/* 8    */ (void*)diffTevStage__12J3DTevBlock2Fv,
	/* 9    */ (void*)diffTevStageIndirect__12J3DTevBlock2Fv,
	/* 10   */ (void*)patch__12J3DTevBlock2Fv,
	/* 11   */ (void*)patchTexNo__12J3DTevBlock2Fv,
	/* 12   */ (void*)patchTevReg__12J3DTevBlock2Fv,
	/* 13   */ (void*)patchTexNoAndTexCoordScale__12J3DTevBlock2Fv,
	/* 14   */ (void*)ptrToIndex__12J3DTevBlock2Fv,
	/* 15   */ (void*)indexToPtr__12J3DTevBlock2Fv,
	/* 16   */ (void*)getType__12J3DTevBlock2Fv,
	/* 17   */ (void*)countDLSize__12J3DTevBlock2Fv,
	/* 18   */ (void*)setTexNo__12J3DTevBlock2FUlPCUs,
	/* 19   */ (void*)setTexNo__12J3DTevBlock2FUlUs,
	/* 20   */ (void*)getTexNo__12J3DTevBlock2CFUl,
	/* 21   */ (void*)setTevOrder__12J3DTevBlock2FUlPC11J3DTevOrder,
	/* 22   */ (void*)setTevOrder__12J3DTevBlock2FUl11J3DTevOrder,
	/* 23   */ (void*)getTevOrder__12J3DTevBlock2FUl,
	/* 24   */ (void*)setTevColor__12J3DTevBlock2FUlPC13J3DGXColorS10,
	/* 25   */ (void*)setTevColor__12J3DTevBlock2FUl13J3DGXColorS10,
	/* 26   */ (void*)getTevColor__12J3DTevBlock2FUl,
	/* 27   */ (void*)setTevKColor__12J3DTevBlock2FUlPC10J3DGXColor,
	/* 28   */ (void*)setTevKColor__12J3DTevBlock2FUl10J3DGXColor,
	/* 29   */ (void*)getTevKColor__12J3DTevBlock2FUl,
	/* 30   */ (void*)setTevKColorSel__12J3DTevBlock2FUlPCUc,
	/* 31   */ (void*)setTevKColorSel__12J3DTevBlock2FUlUc,
	/* 32   */ (void*)getTevKColorSel__12J3DTevBlock2FUl,
	/* 33   */ (void*)setTevKAlphaSel__12J3DTevBlock2FUlPCUc,
	/* 34   */ (void*)setTevKAlphaSel__12J3DTevBlock2FUlUc,
	/* 35   */ (void*)getTevKAlphaSel__12J3DTevBlock2FUl,
	/* 36   */ (void*)setTevStageNum__12J3DTevBlock2FPCUc,
	/* 37   */ (void*)setTevStageNum__12J3DTevBlock2FUc,
	/* 38   */ (void*)getTevStageNum__12J3DTevBlock2CFv,
	/* 39   */ (void*)setTevStage__12J3DTevBlock2FUlPC11J3DTevStage,
	/* 40   */ (void*)setTevStage__12J3DTevBlock2FUl11J3DTevStage,
	/* 41   */ (void*)getTevStage__12J3DTevBlock2FUl,
	/* 42   */ (void*)setTevSwapModeInfo__12J3DTevBlock2FUlPC18J3DTevSwapModeInfo,
	/* 43   */ (void*)setTevSwapModeInfo__12J3DTevBlock2FUl18J3DTevSwapModeInfo,
	/* 44   */ (void*)setTevSwapModeTable__12J3DTevBlock2FUlPC19J3DTevSwapModeTable,
	/* 45   */ (void*)setTevSwapModeTable__12J3DTevBlock2FUl19J3DTevSwapModeTable,
	/* 46   */ (void*)getTevSwapModeTable__12J3DTevBlock2FUl,
	/* 47   */ (void*)setIndTevStage__12J3DTevBlock2FUlPC14J3DIndTevStage,
	/* 48   */ (void*)setIndTevStage__12J3DTevBlock2FUl14J3DIndTevStage,
	/* 49   */ (void*)getIndTevStage__12J3DTevBlock2FUl,
	/* 50   */ (void*)getTexNoOffset__12J3DTevBlock2CFv,
	/* 51   */ (void*)getTevRegOffset__12J3DTevBlock2CFv,
	/* 52   */ (void*)setTexNoOffset__11J3DTevBlockFUl,
	/* 53   */ (void*)setTevRegOffset__12J3DTevBlock2FUl,
	/* 54   */ (void*)__dt__12J3DTevBlock2Fv,
};

/* 803CE37C-803CE458 00DC+00 s=1 e=1 z=0  None .data      __vt__12J3DTevBlock1                                         */
SECTION_DATA void* __vt__12J3DTevBlock1[55] = {
	/* 0    */ (void*)NULL /* RTTI */,
	/* 1    */ (void*)NULL,
	/* 2    */ (void*)reset__12J3DTevBlock1FP11J3DTevBlock,
	/* 3    */ (void*)load__12J3DTevBlock1Fv,
	/* 4    */ (void*)diff__11J3DTevBlockFUl,
	/* 5    */ (void*)diffTexNo__12J3DTevBlock1Fv,
	/* 6    */ (void*)diffTevReg__12J3DTevBlock1Fv,
	/* 7    */ (void*)diffTexCoordScale__12J3DTevBlock1Fv,
	/* 8    */ (void*)diffTevStage__12J3DTevBlock1Fv,
	/* 9    */ (void*)diffTevStageIndirect__12J3DTevBlock1Fv,
	/* 10   */ (void*)patch__12J3DTevBlock1Fv,
	/* 11   */ (void*)patchTexNo__12J3DTevBlock1Fv,
	/* 12   */ (void*)patchTevReg__12J3DTevBlock1Fv,
	/* 13   */ (void*)patchTexNoAndTexCoordScale__12J3DTevBlock1Fv,
	/* 14   */ (void*)ptrToIndex__12J3DTevBlock1Fv,
	/* 15   */ (void*)indexToPtr__12J3DTevBlock1Fv,
	/* 16   */ (void*)getType__12J3DTevBlock1Fv,
	/* 17   */ (void*)countDLSize__12J3DTevBlock1Fv,
	/* 18   */ (void*)setTexNo__12J3DTevBlock1FUlPCUs,
	/* 19   */ (void*)setTexNo__12J3DTevBlock1FUlUs,
	/* 20   */ (void*)getTexNo__12J3DTevBlock1CFUl,
	/* 21   */ (void*)setTevOrder__12J3DTevBlock1FUlPC11J3DTevOrder,
	/* 22   */ (void*)setTevOrder__12J3DTevBlock1FUl11J3DTevOrder,
	/* 23   */ (void*)getTevOrder__12J3DTevBlock1FUl,
	/* 24   */ (void*)setTevColor__11J3DTevBlockFUlPC13J3DGXColorS10,
	/* 25   */ (void*)setTevColor__11J3DTevBlockFUl13J3DGXColorS10,
	/* 26   */ (void*)getTevColor__11J3DTevBlockFUl,
	/* 27   */ (void*)setTevKColor__11J3DTevBlockFUlPC10J3DGXColor,
	/* 28   */ (void*)setTevKColor__11J3DTevBlockFUl10J3DGXColor,
	/* 29   */ (void*)getTevKColor__11J3DTevBlockFUl,
	/* 30   */ (void*)setTevKColorSel__11J3DTevBlockFUlPCUc,
	/* 31   */ (void*)setTevKColorSel__11J3DTevBlockFUlUc,
	/* 32   */ (void*)getTevKColorSel__11J3DTevBlockFUl,
	/* 33   */ (void*)setTevKAlphaSel__11J3DTevBlockFUlPCUc,
	/* 34   */ (void*)setTevKAlphaSel__11J3DTevBlockFUlUc,
	/* 35   */ (void*)getTevKAlphaSel__11J3DTevBlockFUl,
	/* 36   */ (void*)setTevStageNum__12J3DTevBlock1FPCUc,
	/* 37   */ (void*)setTevStageNum__12J3DTevBlock1FUc,
	/* 38   */ (void*)getTevStageNum__12J3DTevBlock1CFv,
	/* 39   */ (void*)setTevStage__12J3DTevBlock1FUlPC11J3DTevStage,
	/* 40   */ (void*)setTevStage__12J3DTevBlock1FUl11J3DTevStage,
	/* 41   */ (void*)getTevStage__12J3DTevBlock1FUl,
	/* 42   */ (void*)setTevSwapModeInfo__11J3DTevBlockFUlPC18J3DTevSwapModeInfo,
	/* 43   */ (void*)setTevSwapModeInfo__11J3DTevBlockFUl18J3DTevSwapModeInfo,
	/* 44   */ (void*)setTevSwapModeTable__11J3DTevBlockFUlPC19J3DTevSwapModeTable,
	/* 45   */ (void*)setTevSwapModeTable__11J3DTevBlockFUl19J3DTevSwapModeTable,
	/* 46   */ (void*)getTevSwapModeTable__11J3DTevBlockFUl,
	/* 47   */ (void*)setIndTevStage__12J3DTevBlock1FUlPC14J3DIndTevStage,
	/* 48   */ (void*)setIndTevStage__12J3DTevBlock1FUl14J3DIndTevStage,
	/* 49   */ (void*)getIndTevStage__12J3DTevBlock1FUl,
	/* 50   */ (void*)getTexNoOffset__12J3DTevBlock1CFv,
	/* 51   */ (void*)getTevRegOffset__11J3DTevBlockCFv,
	/* 52   */ (void*)setTexNoOffset__11J3DTevBlockFUl,
	/* 53   */ (void*)setTevRegOffset__11J3DTevBlockFUl,
	/* 54   */ (void*)__dt__12J3DTevBlock1Fv,
};

/* 803CE458-803CE534 00DC+00 s=1 e=1 z=0  None .data      __vt__18J3DTevBlockPatched                                   */
SECTION_DATA void* __vt__18J3DTevBlockPatched[55] = {
	/* 0    */ (void*)NULL /* RTTI */,
	/* 1    */ (void*)NULL,
	/* 2    */ (void*)reset__18J3DTevBlockPatchedFP11J3DTevBlock,
	/* 3    */ (void*)load__18J3DTevBlockPatchedFv,
	/* 4    */ (void*)diff__11J3DTevBlockFUl,
	/* 5    */ (void*)diffTexNo__18J3DTevBlockPatchedFv,
	/* 6    */ (void*)diffTevReg__18J3DTevBlockPatchedFv,
	/* 7    */ (void*)diffTexCoordScale__18J3DTevBlockPatchedFv,
	/* 8    */ (void*)diffTevStage__18J3DTevBlockPatchedFv,
	/* 9    */ (void*)diffTevStageIndirect__18J3DTevBlockPatchedFv,
	/* 10   */ (void*)patch__18J3DTevBlockPatchedFv,
	/* 11   */ (void*)patchTexNo__18J3DTevBlockPatchedFv,
	/* 12   */ (void*)patchTevReg__18J3DTevBlockPatchedFv,
	/* 13   */ (void*)patchTexNoAndTexCoordScale__18J3DTevBlockPatchedFv,
	/* 14   */ (void*)ptrToIndex__18J3DTevBlockPatchedFv,
	/* 15   */ (void*)indexToPtr__18J3DTevBlockPatchedFv,
	/* 16   */ (void*)getType__18J3DTevBlockPatchedFv,
	/* 17   */ (void*)countDLSize__18J3DTevBlockPatchedFv,
	/* 18   */ (void*)setTexNo__18J3DTevBlockPatchedFUlPCUs,
	/* 19   */ (void*)setTexNo__18J3DTevBlockPatchedFUlUs,
	/* 20   */ (void*)getTexNo__18J3DTevBlockPatchedCFUl,
	/* 21   */ (void*)setTevOrder__18J3DTevBlockPatchedFUlPC11J3DTevOrder,
	/* 22   */ (void*)setTevOrder__18J3DTevBlockPatchedFUl11J3DTevOrder,
	/* 23   */ (void*)getTevOrder__18J3DTevBlockPatchedFUl,
	/* 24   */ (void*)setTevColor__18J3DTevBlockPatchedFUlPC13J3DGXColorS10,
	/* 25   */ (void*)setTevColor__18J3DTevBlockPatchedFUl13J3DGXColorS10,
	/* 26   */ (void*)getTevColor__18J3DTevBlockPatchedFUl,
	/* 27   */ (void*)setTevKColor__18J3DTevBlockPatchedFUlPC10J3DGXColor,
	/* 28   */ (void*)setTevKColor__18J3DTevBlockPatchedFUl10J3DGXColor,
	/* 29   */ (void*)getTevKColor__18J3DTevBlockPatchedFUl,
	/* 30   */ (void*)setTevKColorSel__18J3DTevBlockPatchedFUlPCUc,
	/* 31   */ (void*)setTevKColorSel__18J3DTevBlockPatchedFUlUc,
	/* 32   */ (void*)getTevKColorSel__18J3DTevBlockPatchedFUl,
	/* 33   */ (void*)setTevKAlphaSel__11J3DTevBlockFUlPCUc,
	/* 34   */ (void*)setTevKAlphaSel__11J3DTevBlockFUlUc,
	/* 35   */ (void*)getTevKAlphaSel__11J3DTevBlockFUl,
	/* 36   */ (void*)setTevStageNum__18J3DTevBlockPatchedFPCUc,
	/* 37   */ (void*)setTevStageNum__18J3DTevBlockPatchedFUc,
	/* 38   */ (void*)getTevStageNum__18J3DTevBlockPatchedCFv,
	/* 39   */ (void*)setTevStage__18J3DTevBlockPatchedFUlPC11J3DTevStage,
	/* 40   */ (void*)setTevStage__18J3DTevBlockPatchedFUl11J3DTevStage,
	/* 41   */ (void*)getTevStage__18J3DTevBlockPatchedFUl,
	/* 42   */ (void*)setTevSwapModeInfo__11J3DTevBlockFUlPC18J3DTevSwapModeInfo,
	/* 43   */ (void*)setTevSwapModeInfo__11J3DTevBlockFUl18J3DTevSwapModeInfo,
	/* 44   */ (void*)setTevSwapModeTable__11J3DTevBlockFUlPC19J3DTevSwapModeTable,
	/* 45   */ (void*)setTevSwapModeTable__11J3DTevBlockFUl19J3DTevSwapModeTable,
	/* 46   */ (void*)getTevSwapModeTable__11J3DTevBlockFUl,
	/* 47   */ (void*)setIndTevStage__18J3DTevBlockPatchedFUlPC14J3DIndTevStage,
	/* 48   */ (void*)setIndTevStage__18J3DTevBlockPatchedFUl14J3DIndTevStage,
	/* 49   */ (void*)getIndTevStage__18J3DTevBlockPatchedFUl,
	/* 50   */ (void*)getTexNoOffset__18J3DTevBlockPatchedCFv,
	/* 51   */ (void*)getTevRegOffset__18J3DTevBlockPatchedCFv,
	/* 52   */ (void*)setTexNoOffset__11J3DTevBlockFUl,
	/* 53   */ (void*)setTevRegOffset__18J3DTevBlockPatchedFUl,
	/* 54   */ (void*)__dt__18J3DTevBlockPatchedFv,
};

/* 803CE534-803CE5A0 006C+00 s=1 e=1 z=0  None .data      __vt__19J3DTexGenBlockBasic                                  */
SECTION_DATA void* __vt__19J3DTexGenBlockBasic[27] = {
	/* 0    */ (void*)NULL /* RTTI */,
	/* 1    */ (void*)NULL,
	/* 2    */ (void*)reset__19J3DTexGenBlockBasicFP14J3DTexGenBlock,
	/* 3    */ (void*)calc__21J3DTexGenBlockPatchedFPA4_Cf,
	/* 4    */ (void*)calcWithoutViewMtx__21J3DTexGenBlockPatchedFPA4_Cf,
	/* 5    */ (void*)calcPostTexMtx__21J3DTexGenBlockPatchedFPA4_Cf,
	/* 6    */ (void*)calcPostTexMtxWithoutViewMtx__21J3DTexGenBlockPatchedFPA4_Cf,
	/* 7    */ (void*)load__19J3DTexGenBlockBasicFv,
	/* 8    */ (void*)patch__19J3DTexGenBlockBasicFv,
	/* 9    */ (void*)diff__21J3DTexGenBlockPatchedFUl,
	/* 10   */ (void*)diffTexMtx__21J3DTexGenBlockPatchedFv,
	/* 11   */ (void*)diffTexGen__21J3DTexGenBlockPatchedFv,
	/* 12   */ (void*)countDLSize__19J3DTexGenBlockBasicFv,
	/* 13   */ (void*)getType__19J3DTexGenBlockBasicFv,
	/* 14   */ (void*)setTexGenNum__21J3DTexGenBlockPatchedFPCUl,
	/* 15   */ (void*)setTexGenNum__21J3DTexGenBlockPatchedFUl,
	/* 16   */ (void*)getTexGenNum__21J3DTexGenBlockPatchedCFv,
	/* 17   */ (void*)setTexCoord__21J3DTexGenBlockPatchedFUlPC11J3DTexCoord,
	/* 18   */ (void*)getTexCoord__21J3DTexGenBlockPatchedFUl,
	/* 19   */ (void*)setTexMtx__21J3DTexGenBlockPatchedFUlP9J3DTexMtx,
	/* 20   */ (void*)getTexMtx__21J3DTexGenBlockPatchedFUl,
	/* 21   */ (void*)setNBTScale__19J3DTexGenBlockBasicFPC11J3DNBTScale,
	/* 22   */ (void*)setNBTScale__19J3DTexGenBlockBasicF11J3DNBTScale,
	/* 23   */ (void*)getNBTScale__19J3DTexGenBlockBasicFv,
	/* 24   */ (void*)getTexMtxOffset__21J3DTexGenBlockPatchedCFv,
	/* 25   */ (void*)setTexMtxOffset__21J3DTexGenBlockPatchedFUl,
	/* 26   */ (void*)__dt__19J3DTexGenBlockBasicFv,
};

/* 803CE5A0-803CE60C 006C+00 s=1 e=1 z=0  None .data      __vt__15J3DTexGenBlock4                                      */
SECTION_DATA void* __vt__15J3DTexGenBlock4[27] = {
	/* 0    */ (void*)NULL /* RTTI */,
	/* 1    */ (void*)NULL,
	/* 2    */ (void*)reset__15J3DTexGenBlock4FP14J3DTexGenBlock,
	/* 3    */ (void*)calc__21J3DTexGenBlockPatchedFPA4_Cf,
	/* 4    */ (void*)calcWithoutViewMtx__21J3DTexGenBlockPatchedFPA4_Cf,
	/* 5    */ (void*)calcPostTexMtx__21J3DTexGenBlockPatchedFPA4_Cf,
	/* 6    */ (void*)calcPostTexMtxWithoutViewMtx__21J3DTexGenBlockPatchedFPA4_Cf,
	/* 7    */ (void*)load__15J3DTexGenBlock4Fv,
	/* 8    */ (void*)patch__15J3DTexGenBlock4Fv,
	/* 9    */ (void*)diff__21J3DTexGenBlockPatchedFUl,
	/* 10   */ (void*)diffTexMtx__21J3DTexGenBlockPatchedFv,
	/* 11   */ (void*)diffTexGen__21J3DTexGenBlockPatchedFv,
	/* 12   */ (void*)countDLSize__15J3DTexGenBlock4Fv,
	/* 13   */ (void*)getType__15J3DTexGenBlock4Fv,
	/* 14   */ (void*)setTexGenNum__21J3DTexGenBlockPatchedFPCUl,
	/* 15   */ (void*)setTexGenNum__21J3DTexGenBlockPatchedFUl,
	/* 16   */ (void*)getTexGenNum__21J3DTexGenBlockPatchedCFv,
	/* 17   */ (void*)setTexCoord__21J3DTexGenBlockPatchedFUlPC11J3DTexCoord,
	/* 18   */ (void*)getTexCoord__21J3DTexGenBlockPatchedFUl,
	/* 19   */ (void*)setTexMtx__21J3DTexGenBlockPatchedFUlP9J3DTexMtx,
	/* 20   */ (void*)getTexMtx__21J3DTexGenBlockPatchedFUl,
	/* 21   */ (void*)setNBTScale__15J3DTexGenBlock4FPC11J3DNBTScale,
	/* 22   */ (void*)setNBTScale__15J3DTexGenBlock4F11J3DNBTScale,
	/* 23   */ (void*)getNBTScale__15J3DTexGenBlock4Fv,
	/* 24   */ (void*)getTexMtxOffset__21J3DTexGenBlockPatchedCFv,
	/* 25   */ (void*)setTexMtxOffset__21J3DTexGenBlockPatchedFUl,
	/* 26   */ (void*)__dt__15J3DTexGenBlock4Fv,
};

/* 803CE60C-803CE678 006C+00 s=2 e=3 z=0  None .data      __vt__21J3DTexGenBlockPatched                                */
SECTION_DATA void* __vt__21J3DTexGenBlockPatched[27] = {
	/* 0    */ (void*)NULL /* RTTI */,
	/* 1    */ (void*)NULL,
	/* 2    */ (void*)reset__21J3DTexGenBlockPatchedFP14J3DTexGenBlock,
	/* 3    */ (void*)calc__21J3DTexGenBlockPatchedFPA4_Cf,
	/* 4    */ (void*)calcWithoutViewMtx__21J3DTexGenBlockPatchedFPA4_Cf,
	/* 5    */ (void*)calcPostTexMtx__21J3DTexGenBlockPatchedFPA4_Cf,
	/* 6    */ (void*)calcPostTexMtxWithoutViewMtx__21J3DTexGenBlockPatchedFPA4_Cf,
	/* 7    */ (void*)load__21J3DTexGenBlockPatchedFv,
	/* 8    */ (void*)patch__21J3DTexGenBlockPatchedFv,
	/* 9    */ (void*)diff__21J3DTexGenBlockPatchedFUl,
	/* 10   */ (void*)diffTexMtx__21J3DTexGenBlockPatchedFv,
	/* 11   */ (void*)diffTexGen__21J3DTexGenBlockPatchedFv,
	/* 12   */ (void*)countDLSize__21J3DTexGenBlockPatchedFv,
	/* 13   */ (void*)getType__21J3DTexGenBlockPatchedFv,
	/* 14   */ (void*)setTexGenNum__21J3DTexGenBlockPatchedFPCUl,
	/* 15   */ (void*)setTexGenNum__21J3DTexGenBlockPatchedFUl,
	/* 16   */ (void*)getTexGenNum__21J3DTexGenBlockPatchedCFv,
	/* 17   */ (void*)setTexCoord__21J3DTexGenBlockPatchedFUlPC11J3DTexCoord,
	/* 18   */ (void*)getTexCoord__21J3DTexGenBlockPatchedFUl,
	/* 19   */ (void*)setTexMtx__21J3DTexGenBlockPatchedFUlP9J3DTexMtx,
	/* 20   */ (void*)getTexMtx__21J3DTexGenBlockPatchedFUl,
	/* 21   */ (void*)setNBTScale__14J3DTexGenBlockFPC11J3DNBTScale,
	/* 22   */ (void*)setNBTScale__14J3DTexGenBlockF11J3DNBTScale,
	/* 23   */ (void*)getNBTScale__14J3DTexGenBlockFv,
	/* 24   */ (void*)getTexMtxOffset__21J3DTexGenBlockPatchedCFv,
	/* 25   */ (void*)setTexMtxOffset__21J3DTexGenBlockPatchedFUl,
	/* 26   */ (void*)__dt__21J3DTexGenBlockPatchedFv,
};

/* 803CE678-803CE708 0090+00 s=1 e=1 z=0  None .data      __vt__20J3DColorBlockLightOn                                 */
SECTION_DATA void* __vt__20J3DColorBlockLightOn[36] = {
	/* 0    */ (void*)NULL /* RTTI */,
	/* 1    */ (void*)NULL,
	/* 2    */ (void*)load__20J3DColorBlockLightOnFv,
	/* 3    */ (void*)reset__20J3DColorBlockLightOnFP13J3DColorBlock,
	/* 4    */ (void*)patch__20J3DColorBlockLightOnFv,
	/* 5    */ (void*)patchMatColor__20J3DColorBlockLightOnFv,
	/* 6    */ (void*)patchLight__20J3DColorBlockLightOnFv,
	/* 7    */ (void*)diff__20J3DColorBlockLightOnFUl,
	/* 8    */ (void*)diffAmbColor__20J3DColorBlockLightOnFv,
	/* 9    */ (void*)diffMatColor__20J3DColorBlockLightOnFv,
	/* 10   */ (void*)diffColorChan__20J3DColorBlockLightOnFv,
	/* 11   */ (void*)diffLightObj__20J3DColorBlockLightOnFUl,
	/* 12   */ (void*)countDLSize__20J3DColorBlockLightOnFv,
	/* 13   */ (void*)getType__20J3DColorBlockLightOnFv,
	/* 14   */ (void*)setMatColor__20J3DColorBlockLightOnFUlPC10J3DGXColor,
	/* 15   */ (void*)setMatColor__20J3DColorBlockLightOnFUl10J3DGXColor,
	/* 16   */ (void*)getMatColor__20J3DColorBlockLightOnFUl,
	/* 17   */ (void*)setAmbColor__20J3DColorBlockLightOnFUlPC10J3DGXColor,
	/* 18   */ (void*)setAmbColor__20J3DColorBlockLightOnFUl10J3DGXColor,
	/* 19   */ (void*)getAmbColor__20J3DColorBlockLightOnFUl,
	/* 20   */ (void*)setColorChanNum__20J3DColorBlockLightOnFUc,
	/* 21   */ (void*)setColorChanNum__20J3DColorBlockLightOnFPCUc,
	/* 22   */ (void*)getColorChanNum__20J3DColorBlockLightOnCFv,
	/* 23   */ (void*)setColorChan__20J3DColorBlockLightOnFUlRC12J3DColorChan,
	/* 24   */ (void*)setColorChan__20J3DColorBlockLightOnFUlPC12J3DColorChan,
	/* 25   */ (void*)getColorChan__20J3DColorBlockLightOnFUl,
	/* 26   */ (void*)setLight__20J3DColorBlockLightOnFUlP11J3DLightObj,
	/* 27   */ (void*)getLight__20J3DColorBlockLightOnFUl,
	/* 28   */ (void*)setCullMode__20J3DColorBlockLightOnFPCUc,
	/* 29   */ (void*)setCullMode__20J3DColorBlockLightOnFUc,
	/* 30   */ (void*)getCullMode__20J3DColorBlockLightOnCFv,
	/* 31   */ (void*)getMatColorOffset__20J3DColorBlockLightOnCFv,
	/* 32   */ (void*)getColorChanOffset__20J3DColorBlockLightOnCFv,
	/* 33   */ (void*)setMatColorOffset__20J3DColorBlockLightOnFUl,
	/* 34   */ (void*)setColorChanOffset__20J3DColorBlockLightOnFUl,
	/* 35   */ (void*)__dt__20J3DColorBlockLightOnFv,
};

/* 803CE708-803CE798 0090+00 s=1 e=1 z=0  None .data      __vt__22J3DColorBlockAmbientOn                               */
SECTION_DATA void* __vt__22J3DColorBlockAmbientOn[36] = {
	/* 0    */ (void*)NULL /* RTTI */,
	/* 1    */ (void*)NULL,
	/* 2    */ (void*)load__22J3DColorBlockAmbientOnFv,
	/* 3    */ (void*)reset__22J3DColorBlockAmbientOnFP13J3DColorBlock,
	/* 4    */ (void*)patch__21J3DColorBlockLightOffFv,
	/* 5    */ (void*)patchMatColor__21J3DColorBlockLightOffFv,
	/* 6    */ (void*)patchLight__21J3DColorBlockLightOffFv,
	/* 7    */ (void*)diff__21J3DColorBlockLightOffFUl,
	/* 8    */ (void*)diffAmbColor__13J3DColorBlockFv,
	/* 9    */ (void*)diffMatColor__21J3DColorBlockLightOffFv,
	/* 10   */ (void*)diffColorChan__21J3DColorBlockLightOffFv,
	/* 11   */ (void*)diffLightObj__13J3DColorBlockFUl,
	/* 12   */ (void*)countDLSize__22J3DColorBlockAmbientOnFv,
	/* 13   */ (void*)getType__22J3DColorBlockAmbientOnFv,
	/* 14   */ (void*)setMatColor__21J3DColorBlockLightOffFUlPC10J3DGXColor,
	/* 15   */ (void*)setMatColor__21J3DColorBlockLightOffFUl10J3DGXColor,
	/* 16   */ (void*)getMatColor__21J3DColorBlockLightOffFUl,
	/* 17   */ (void*)setAmbColor__22J3DColorBlockAmbientOnFUlPC10J3DGXColor,
	/* 18   */ (void*)setAmbColor__22J3DColorBlockAmbientOnFUl10J3DGXColor,
	/* 19   */ (void*)getAmbColor__22J3DColorBlockAmbientOnFUl,
	/* 20   */ (void*)setColorChanNum__21J3DColorBlockLightOffFUc,
	/* 21   */ (void*)setColorChanNum__21J3DColorBlockLightOffFPCUc,
	/* 22   */ (void*)getColorChanNum__21J3DColorBlockLightOffCFv,
	/* 23   */ (void*)setColorChan__21J3DColorBlockLightOffFUlRC12J3DColorChan,
	/* 24   */ (void*)setColorChan__21J3DColorBlockLightOffFUlPC12J3DColorChan,
	/* 25   */ (void*)getColorChan__21J3DColorBlockLightOffFUl,
	/* 26   */ (void*)setLight__13J3DColorBlockFUlP11J3DLightObj,
	/* 27   */ (void*)getLight__13J3DColorBlockFUl,
	/* 28   */ (void*)setCullMode__21J3DColorBlockLightOffFPCUc,
	/* 29   */ (void*)setCullMode__21J3DColorBlockLightOffFUc,
	/* 30   */ (void*)getCullMode__21J3DColorBlockLightOffCFv,
	/* 31   */ (void*)getMatColorOffset__21J3DColorBlockLightOffCFv,
	/* 32   */ (void*)getColorChanOffset__21J3DColorBlockLightOffCFv,
	/* 33   */ (void*)setMatColorOffset__21J3DColorBlockLightOffFUl,
	/* 34   */ (void*)setColorChanOffset__21J3DColorBlockLightOffFUl,
	/* 35   */ (void*)__dt__22J3DColorBlockAmbientOnFv,
};

/* 803CE798-803CE814 007C+00 s=1 e=1 z=0  None .data      __vt__13J3DPEBlockXlu                                        */
SECTION_DATA void* __vt__13J3DPEBlockXlu[31] = {
	/* 0    */ (void*)NULL /* RTTI */,
	/* 1    */ (void*)NULL,
	/* 2    */ (void*)reset__10J3DPEBlockFP10J3DPEBlock,
	/* 3    */ (void*)load__13J3DPEBlockXluFv,
	/* 4    */ (void*)patch__10J3DPEBlockFv,
	/* 5    */ (void*)diff__10J3DPEBlockFUl,
	/* 6    */ (void*)diffFog__10J3DPEBlockFv,
	/* 7    */ (void*)diffBlend__10J3DPEBlockFv,
	/* 8    */ (void*)countDLSize__13J3DPEBlockXluFv,
	/* 9    */ (void*)getType__13J3DPEBlockXluFv,
	/* 10   */ (void*)setFog__10J3DPEBlockF6J3DFog,
	/* 11   */ (void*)setFog__10J3DPEBlockFP6J3DFog,
	/* 12   */ (void*)getFog__10J3DPEBlockFv,
	/* 13   */ (void*)setAlphaComp__10J3DPEBlockFPC12J3DAlphaComp,
	/* 14   */ (void*)setAlphaComp__10J3DPEBlockFRC12J3DAlphaComp,
	/* 15   */ (void*)getAlphaComp__10J3DPEBlockFv,
	/* 16   */ (void*)setBlend__10J3DPEBlockFPC8J3DBlend,
	/* 17   */ (void*)setBlend__10J3DPEBlockFRC8J3DBlend,
	/* 18   */ (void*)getBlend__10J3DPEBlockFv,
	/* 19   */ (void*)setZMode__10J3DPEBlockFPC8J3DZMode,
	/* 20   */ (void*)setZMode__10J3DPEBlockF8J3DZMode,
	/* 21   */ (void*)getZMode__10J3DPEBlockFv,
	/* 22   */ (void*)setZCompLoc__10J3DPEBlockFPCUc,
	/* 23   */ (void*)setZCompLoc__10J3DPEBlockFUc,
	/* 24   */ (void*)getZCompLoc__10J3DPEBlockCFv,
	/* 25   */ (void*)setDither__10J3DPEBlockFPCUc,
	/* 26   */ (void*)setDither__10J3DPEBlockFUc,
	/* 27   */ (void*)getDither__10J3DPEBlockCFv,
	/* 28   */ (void*)getFogOffset__10J3DPEBlockCFv,
	/* 29   */ (void*)setFogOffset__10J3DPEBlockFUl,
	/* 30   */ (void*)__dt__13J3DPEBlockXluFv,
};

/* 803CE814-803CE890 007C+00 s=1 e=1 z=0  None .data      __vt__17J3DPEBlockTexEdge                                    */
SECTION_DATA void* __vt__17J3DPEBlockTexEdge[31] = {
	/* 0    */ (void*)NULL /* RTTI */,
	/* 1    */ (void*)NULL,
	/* 2    */ (void*)reset__10J3DPEBlockFP10J3DPEBlock,
	/* 3    */ (void*)load__17J3DPEBlockTexEdgeFv,
	/* 4    */ (void*)patch__10J3DPEBlockFv,
	/* 5    */ (void*)diff__10J3DPEBlockFUl,
	/* 6    */ (void*)diffFog__10J3DPEBlockFv,
	/* 7    */ (void*)diffBlend__10J3DPEBlockFv,
	/* 8    */ (void*)countDLSize__17J3DPEBlockTexEdgeFv,
	/* 9    */ (void*)getType__17J3DPEBlockTexEdgeFv,
	/* 10   */ (void*)setFog__10J3DPEBlockF6J3DFog,
	/* 11   */ (void*)setFog__10J3DPEBlockFP6J3DFog,
	/* 12   */ (void*)getFog__10J3DPEBlockFv,
	/* 13   */ (void*)setAlphaComp__10J3DPEBlockFPC12J3DAlphaComp,
	/* 14   */ (void*)setAlphaComp__10J3DPEBlockFRC12J3DAlphaComp,
	/* 15   */ (void*)getAlphaComp__10J3DPEBlockFv,
	/* 16   */ (void*)setBlend__10J3DPEBlockFPC8J3DBlend,
	/* 17   */ (void*)setBlend__10J3DPEBlockFRC8J3DBlend,
	/* 18   */ (void*)getBlend__10J3DPEBlockFv,
	/* 19   */ (void*)setZMode__10J3DPEBlockFPC8J3DZMode,
	/* 20   */ (void*)setZMode__10J3DPEBlockF8J3DZMode,
	/* 21   */ (void*)getZMode__10J3DPEBlockFv,
	/* 22   */ (void*)setZCompLoc__10J3DPEBlockFPCUc,
	/* 23   */ (void*)setZCompLoc__10J3DPEBlockFUc,
	/* 24   */ (void*)getZCompLoc__10J3DPEBlockCFv,
	/* 25   */ (void*)setDither__10J3DPEBlockFPCUc,
	/* 26   */ (void*)setDither__10J3DPEBlockFUc,
	/* 27   */ (void*)getDither__10J3DPEBlockCFv,
	/* 28   */ (void*)getFogOffset__10J3DPEBlockCFv,
	/* 29   */ (void*)setFogOffset__10J3DPEBlockFUl,
	/* 30   */ (void*)__dt__17J3DPEBlockTexEdgeFv,
};

/* 803CE890-803CE90C 007C+00 s=1 e=1 z=0  None .data      __vt__13J3DPEBlockOpa                                        */
SECTION_DATA void* __vt__13J3DPEBlockOpa[31] = {
	/* 0    */ (void*)NULL /* RTTI */,
	/* 1    */ (void*)NULL,
	/* 2    */ (void*)reset__10J3DPEBlockFP10J3DPEBlock,
	/* 3    */ (void*)load__13J3DPEBlockOpaFv,
	/* 4    */ (void*)patch__10J3DPEBlockFv,
	/* 5    */ (void*)diff__10J3DPEBlockFUl,
	/* 6    */ (void*)diffFog__10J3DPEBlockFv,
	/* 7    */ (void*)diffBlend__10J3DPEBlockFv,
	/* 8    */ (void*)countDLSize__13J3DPEBlockOpaFv,
	/* 9    */ (void*)getType__13J3DPEBlockOpaFv,
	/* 10   */ (void*)setFog__10J3DPEBlockF6J3DFog,
	/* 11   */ (void*)setFog__10J3DPEBlockFP6J3DFog,
	/* 12   */ (void*)getFog__10J3DPEBlockFv,
	/* 13   */ (void*)setAlphaComp__10J3DPEBlockFPC12J3DAlphaComp,
	/* 14   */ (void*)setAlphaComp__10J3DPEBlockFRC12J3DAlphaComp,
	/* 15   */ (void*)getAlphaComp__10J3DPEBlockFv,
	/* 16   */ (void*)setBlend__10J3DPEBlockFPC8J3DBlend,
	/* 17   */ (void*)setBlend__10J3DPEBlockFRC8J3DBlend,
	/* 18   */ (void*)getBlend__10J3DPEBlockFv,
	/* 19   */ (void*)setZMode__10J3DPEBlockFPC8J3DZMode,
	/* 20   */ (void*)setZMode__10J3DPEBlockF8J3DZMode,
	/* 21   */ (void*)getZMode__10J3DPEBlockFv,
	/* 22   */ (void*)setZCompLoc__10J3DPEBlockFPCUc,
	/* 23   */ (void*)setZCompLoc__10J3DPEBlockFUc,
	/* 24   */ (void*)getZCompLoc__10J3DPEBlockCFv,
	/* 25   */ (void*)setDither__10J3DPEBlockFPCUc,
	/* 26   */ (void*)setDither__10J3DPEBlockFUc,
	/* 27   */ (void*)getDither__10J3DPEBlockCFv,
	/* 28   */ (void*)getFogOffset__10J3DPEBlockCFv,
	/* 29   */ (void*)setFogOffset__10J3DPEBlockFUl,
	/* 30   */ (void*)__dt__13J3DPEBlockOpaFv,
};

/* 803CE90C-803CE958 004C+00 s=1 e=1 z=0  None .data      __vt__15J3DIndBlockFull                                      */
SECTION_DATA void* __vt__15J3DIndBlockFull[19] = {
	/* 0    */ (void*)NULL /* RTTI */,
	/* 1    */ (void*)NULL,
	/* 2    */ (void*)reset__15J3DIndBlockFullFP11J3DIndBlock,
	/* 3    */ (void*)diff__15J3DIndBlockFullFUl,
	/* 4    */ (void*)load__15J3DIndBlockFullFv,
	/* 5    */ (void*)countDLSize__15J3DIndBlockFullFv,
	/* 6    */ (void*)getType__15J3DIndBlockFullFv,
	/* 7    */ (void*)setIndTexStageNum__15J3DIndBlockFullFUc,
	/* 8    */ (void*)getIndTexStageNum__15J3DIndBlockFullCFv,
	/* 9    */ (void*)setIndTexOrder__15J3DIndBlockFullFUl14J3DIndTexOrder,
	/* 10   */ (void*)setIndTexOrder__15J3DIndBlockFullFUlPC14J3DIndTexOrder,
	/* 11   */ (void*)getIndTexOrder__15J3DIndBlockFullFUl,
	/* 12   */ (void*)setIndTexMtx__15J3DIndBlockFullFUlPC12J3DIndTexMtx,
	/* 13   */ (void*)setIndTexMtx__15J3DIndBlockFullFUl12J3DIndTexMtx,
	/* 14   */ (void*)getIndTexMtx__15J3DIndBlockFullFUl,
	/* 15   */ (void*)setIndTexCoordScale__15J3DIndBlockFullFUlPC19J3DIndTexCoordScale,
	/* 16   */ (void*)setIndTexCoordScale__15J3DIndBlockFullFUl19J3DIndTexCoordScale,
	/* 17   */ (void*)getIndTexCoordScale__15J3DIndBlockFullFUl,
	/* 18   */ (void*)__dt__15J3DIndBlockFullFv,
};

/* 803CE958-803CEA34 00DC+00 s=5 e=5 z=0  None .data      __vt__11J3DTevBlock                                          */
SECTION_DATA void* __vt__11J3DTevBlock[55] = {
	/* 0    */ (void*)NULL /* RTTI */,
	/* 1    */ (void*)NULL,
	/* 2    */ (void*)reset__11J3DTevBlockFP11J3DTevBlock,
	/* 3    */ (void*)load__11J3DTevBlockFv,
	/* 4    */ (void*)diff__11J3DTevBlockFUl,
	/* 5    */ (void*)diffTexNo__11J3DTevBlockFv,
	/* 6    */ (void*)diffTevReg__11J3DTevBlockFv,
	/* 7    */ (void*)diffTexCoordScale__11J3DTevBlockFv,
	/* 8    */ (void*)diffTevStage__11J3DTevBlockFv,
	/* 9    */ (void*)diffTevStageIndirect__11J3DTevBlockFv,
	/* 10   */ (void*)patch__11J3DTevBlockFv,
	/* 11   */ (void*)patchTexNo__11J3DTevBlockFv,
	/* 12   */ (void*)patchTevReg__11J3DTevBlockFv,
	/* 13   */ (void*)patchTexNoAndTexCoordScale__11J3DTevBlockFv,
	/* 14   */ (void*)NULL,
	/* 15   */ (void*)NULL,
	/* 16   */ (void*)NULL,
	/* 17   */ (void*)countDLSize__11J3DTevBlockFv,
	/* 18   */ (void*)setTexNo__11J3DTevBlockFUlPCUs,
	/* 19   */ (void*)setTexNo__11J3DTevBlockFUlUs,
	/* 20   */ (void*)getTexNo__11J3DTevBlockCFUl,
	/* 21   */ (void*)setTevOrder__11J3DTevBlockFUlPC11J3DTevOrder,
	/* 22   */ (void*)setTevOrder__11J3DTevBlockFUl11J3DTevOrder,
	/* 23   */ (void*)getTevOrder__11J3DTevBlockFUl,
	/* 24   */ (void*)setTevColor__11J3DTevBlockFUlPC13J3DGXColorS10,
	/* 25   */ (void*)setTevColor__11J3DTevBlockFUl13J3DGXColorS10,
	/* 26   */ (void*)getTevColor__11J3DTevBlockFUl,
	/* 27   */ (void*)setTevKColor__11J3DTevBlockFUlPC10J3DGXColor,
	/* 28   */ (void*)setTevKColor__11J3DTevBlockFUl10J3DGXColor,
	/* 29   */ (void*)getTevKColor__11J3DTevBlockFUl,
	/* 30   */ (void*)setTevKColorSel__11J3DTevBlockFUlPCUc,
	/* 31   */ (void*)setTevKColorSel__11J3DTevBlockFUlUc,
	/* 32   */ (void*)getTevKColorSel__11J3DTevBlockFUl,
	/* 33   */ (void*)setTevKAlphaSel__11J3DTevBlockFUlPCUc,
	/* 34   */ (void*)setTevKAlphaSel__11J3DTevBlockFUlUc,
	/* 35   */ (void*)getTevKAlphaSel__11J3DTevBlockFUl,
	/* 36   */ (void*)setTevStageNum__11J3DTevBlockFPCUc,
	/* 37   */ (void*)setTevStageNum__11J3DTevBlockFUc,
	/* 38   */ (void*)getTevStageNum__11J3DTevBlockCFv,
	/* 39   */ (void*)setTevStage__11J3DTevBlockFUlPC11J3DTevStage,
	/* 40   */ (void*)setTevStage__11J3DTevBlockFUl11J3DTevStage,
	/* 41   */ (void*)getTevStage__11J3DTevBlockFUl,
	/* 42   */ (void*)setTevSwapModeInfo__11J3DTevBlockFUlPC18J3DTevSwapModeInfo,
	/* 43   */ (void*)setTevSwapModeInfo__11J3DTevBlockFUl18J3DTevSwapModeInfo,
	/* 44   */ (void*)setTevSwapModeTable__11J3DTevBlockFUlPC19J3DTevSwapModeTable,
	/* 45   */ (void*)setTevSwapModeTable__11J3DTevBlockFUl19J3DTevSwapModeTable,
	/* 46   */ (void*)getTevSwapModeTable__11J3DTevBlockFUl,
	/* 47   */ (void*)setIndTevStage__11J3DTevBlockFUlPC14J3DIndTevStage,
	/* 48   */ (void*)setIndTevStage__11J3DTevBlockFUl14J3DIndTevStage,
	/* 49   */ (void*)getIndTevStage__11J3DTevBlockFUl,
	/* 50   */ (void*)getTexNoOffset__11J3DTevBlockCFv,
	/* 51   */ (void*)getTevRegOffset__11J3DTevBlockCFv,
	/* 52   */ (void*)setTexNoOffset__11J3DTevBlockFUl,
	/* 53   */ (void*)setTevRegOffset__11J3DTevBlockFUl,
	/* 54   */ (void*)__dt__11J3DTevBlockFv,
};

/* 80321F84-80321FE0 005C+00 s=1 e=0 z=0  None .text      __dt__13J3DTevBlock16Fv                                      */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm J3DTevBlock16::~J3DTevBlock16() {
	nofralloc
#include "asm/JSystem/J3DGraphBase/J3DMatBlock/__dt__13J3DTevBlock16Fv.s"
}
#pragma pop


/* 80321FE0-80321FE8 0008+00 s=6 e=1 z=0  None .text      setTexNoOffset__11J3DTevBlockFUl                             */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void J3DTevBlock::setTexNoOffset(u32 param_0) {
	nofralloc
#include "asm/JSystem/J3DGraphBase/J3DMatBlock/setTexNoOffset__11J3DTevBlockFUl.s"
}
#pragma pop


/* 80321FE8-80321FEC 0004+00 s=1 e=0 z=0  None .text      ptrToIndex__12J3DTevBlock4Fv                                 */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void J3DTevBlock4::ptrToIndex() {
	nofralloc
#include "asm/JSystem/J3DGraphBase/J3DMatBlock/ptrToIndex__12J3DTevBlock4Fv.s"
}
#pragma pop


/* 80321FEC-80322010 0024+00 s=1 e=0 z=0  None .text      indexToPtr__12J3DTevBlock4Fv                                 */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void J3DTevBlock4::indexToPtr() {
	nofralloc
#include "asm/JSystem/J3DGraphBase/J3DMatBlock/indexToPtr__12J3DTevBlock4Fv.s"
}
#pragma pop


/* 80322010-8032201C 000C+00 s=1 e=0 z=0  None .text      getType__12J3DTevBlock4Fv                                    */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void J3DTevBlock4::getType() {
	nofralloc
#include "asm/JSystem/J3DGraphBase/J3DMatBlock/getType__12J3DTevBlock4Fv.s"
}
#pragma pop


/* 8032201C-8032202C 0010+00 s=1 e=0 z=0  None .text      setTexNo__12J3DTevBlock4FUlUs                                */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void J3DTevBlock4::setTexNo(u32 param_0, u16 param_1) {
	nofralloc
#include "asm/JSystem/J3DGraphBase/J3DMatBlock/setTexNo__12J3DTevBlock4FUlUs.s"
}
#pragma pop


/* 8032202C-80322040 0014+00 s=1 e=0 z=0  None .text      setTexNo__12J3DTevBlock4FUlPCUs                              */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void J3DTevBlock4::setTexNo(u32 param_0, u16 const* param_1) {
	nofralloc
#include "asm/JSystem/J3DGraphBase/J3DMatBlock/setTexNo__12J3DTevBlock4FUlPCUs.s"
}
#pragma pop


/* 80322040-80322050 0010+00 s=1 e=0 z=0  None .text      getTexNo__12J3DTevBlock4CFUl                                 */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void J3DTevBlock4::getTexNo(u32 param_0) const {
	nofralloc
#include "asm/JSystem/J3DGraphBase/J3DMatBlock/getTexNo__12J3DTevBlock4CFUl.s"
}
#pragma pop


/* 80322050-80322064 0014+00 s=1 e=0 z=0  None .text      setTevOrder__12J3DTevBlock4FUl11J3DTevOrder                  */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void J3DTevBlock4::setTevOrder(u32 param_0, J3DTevOrder param_1) {
	nofralloc
#include "asm/JSystem/J3DGraphBase/J3DMatBlock/setTevOrder__12J3DTevBlock4FUl11J3DTevOrder.s"
}
#pragma pop


/* 80322064-80322078 0014+00 s=1 e=0 z=0  None .text      setTevOrder__12J3DTevBlock4FUlPC11J3DTevOrder                */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void J3DTevBlock4::setTevOrder(u32 param_0, J3DTevOrder const* param_1) {
	nofralloc
#include "asm/JSystem/J3DGraphBase/J3DMatBlock/setTevOrder__12J3DTevBlock4FUlPC11J3DTevOrder.s"
}
#pragma pop


/* 80322078-8032208C 0014+00 s=1 e=0 z=0  None .text      getTevOrder__12J3DTevBlock4FUl                               */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void J3DTevBlock4::getTevOrder(u32 param_0) {
	nofralloc
#include "asm/JSystem/J3DGraphBase/J3DMatBlock/getTevOrder__12J3DTevBlock4FUl.s"
}
#pragma pop


/* 8032208C-803220B8 002C+00 s=1 e=0 z=0  None .text      setTevColor__12J3DTevBlock4FUl13J3DGXColorS10                */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void J3DTevBlock4::setTevColor(u32 param_0, J3DGXColorS10 param_1) {
	nofralloc
#include "asm/JSystem/J3DGraphBase/J3DMatBlock/setTevColor__12J3DTevBlock4FUl13J3DGXColorS10.s"
}
#pragma pop


/* 803220B8-803220E4 002C+00 s=1 e=0 z=0  None .text      setTevColor__12J3DTevBlock4FUlPC13J3DGXColorS10              */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void J3DTevBlock4::setTevColor(u32 param_0, J3DGXColorS10 const* param_1) {
	nofralloc
#include "asm/JSystem/J3DGraphBase/J3DMatBlock/setTevColor__12J3DTevBlock4FUlPC13J3DGXColorS10.s"
}
#pragma pop


/* 803220E4-803220F8 0014+00 s=1 e=0 z=0  None .text      getTevColor__12J3DTevBlock4FUl                               */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void J3DTevBlock4::getTevColor(u32 param_0) {
	nofralloc
#include "asm/JSystem/J3DGraphBase/J3DMatBlock/getTevColor__12J3DTevBlock4FUl.s"
}
#pragma pop


/* 803220F8-80322124 002C+00 s=1 e=0 z=0  None .text      setTevKColor__12J3DTevBlock4FUl10J3DGXColor                  */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void J3DTevBlock4::setTevKColor(u32 param_0, J3DGXColor param_1) {
	nofralloc
#include "asm/JSystem/J3DGraphBase/J3DMatBlock/setTevKColor__12J3DTevBlock4FUl10J3DGXColor.s"
}
#pragma pop


/* 80322124-80322150 002C+00 s=1 e=0 z=0  None .text      setTevKColor__12J3DTevBlock4FUlPC10J3DGXColor                */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void J3DTevBlock4::setTevKColor(u32 param_0, J3DGXColor const* param_1) {
	nofralloc
#include "asm/JSystem/J3DGraphBase/J3DMatBlock/setTevKColor__12J3DTevBlock4FUlPC10J3DGXColor.s"
}
#pragma pop


/* 80322150-80322164 0014+00 s=1 e=0 z=0  None .text      getTevKColor__12J3DTevBlock4FUl                              */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void J3DTevBlock4::getTevKColor(u32 param_0) {
	nofralloc
#include "asm/JSystem/J3DGraphBase/J3DMatBlock/getTevKColor__12J3DTevBlock4FUl.s"
}
#pragma pop


/* 80322164-80322170 000C+00 s=1 e=0 z=0  None .text      setTevKColorSel__12J3DTevBlock4FUlUc                         */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void J3DTevBlock4::setTevKColorSel(u32 param_0, u8 param_1) {
	nofralloc
#include "asm/JSystem/J3DGraphBase/J3DMatBlock/setTevKColorSel__12J3DTevBlock4FUlUc.s"
}
#pragma pop


/* 80322170-80322180 0010+00 s=1 e=0 z=0  None .text      setTevKColorSel__12J3DTevBlock4FUlPCUc                       */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void J3DTevBlock4::setTevKColorSel(u32 param_0, u8 const* param_1) {
	nofralloc
#include "asm/JSystem/J3DGraphBase/J3DMatBlock/setTevKColorSel__12J3DTevBlock4FUlPCUc.s"
}
#pragma pop


/* 80322180-8032218C 000C+00 s=1 e=0 z=0  None .text      getTevKColorSel__12J3DTevBlock4FUl                           */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void J3DTevBlock4::getTevKColorSel(u32 param_0) {
	nofralloc
#include "asm/JSystem/J3DGraphBase/J3DMatBlock/getTevKColorSel__12J3DTevBlock4FUl.s"
}
#pragma pop


/* 8032218C-80322198 000C+00 s=1 e=0 z=0  None .text      setTevKAlphaSel__12J3DTevBlock4FUlUc                         */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void J3DTevBlock4::setTevKAlphaSel(u32 param_0, u8 param_1) {
	nofralloc
#include "asm/JSystem/J3DGraphBase/J3DMatBlock/setTevKAlphaSel__12J3DTevBlock4FUlUc.s"
}
#pragma pop


/* 80322198-803221A8 0010+00 s=1 e=0 z=0  None .text      setTevKAlphaSel__12J3DTevBlock4FUlPCUc                       */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void J3DTevBlock4::setTevKAlphaSel(u32 param_0, u8 const* param_1) {
	nofralloc
#include "asm/JSystem/J3DGraphBase/J3DMatBlock/setTevKAlphaSel__12J3DTevBlock4FUlPCUc.s"
}
#pragma pop


/* 803221A8-803221B4 000C+00 s=1 e=0 z=0  None .text      getTevKAlphaSel__12J3DTevBlock4FUl                           */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void J3DTevBlock4::getTevKAlphaSel(u32 param_0) {
	nofralloc
#include "asm/JSystem/J3DGraphBase/J3DMatBlock/getTevKAlphaSel__12J3DTevBlock4FUl.s"
}
#pragma pop


/* 803221B4-803221BC 0008+00 s=1 e=0 z=0  None .text      setTevStageNum__12J3DTevBlock4FUc                            */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void J3DTevBlock4::setTevStageNum(u8 param_0) {
	nofralloc
#include "asm/JSystem/J3DGraphBase/J3DMatBlock/setTevStageNum__12J3DTevBlock4FUc.s"
}
#pragma pop


/* 803221BC-803221C8 000C+00 s=1 e=0 z=0  None .text      setTevStageNum__12J3DTevBlock4FPCUc                          */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void J3DTevBlock4::setTevStageNum(u8 const* param_0) {
	nofralloc
#include "asm/JSystem/J3DGraphBase/J3DMatBlock/setTevStageNum__12J3DTevBlock4FPCUc.s"
}
#pragma pop


/* 803221C8-803221D0 0008+00 s=1 e=0 z=0  None .text      getTevStageNum__12J3DTevBlock4CFv                            */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void J3DTevBlock4::getTevStageNum() const {
	nofralloc
#include "asm/JSystem/J3DGraphBase/J3DMatBlock/getTevStageNum__12J3DTevBlock4CFv.s"
}
#pragma pop


/* 803221D0-8032220C 003C+00 s=1 e=0 z=0  None .text      setTevStage__12J3DTevBlock4FUl11J3DTevStage                  */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void J3DTevBlock4::setTevStage(u32 param_0, J3DTevStage param_1) {
	nofralloc
#include "asm/JSystem/J3DGraphBase/J3DMatBlock/setTevStage__12J3DTevBlock4FUl11J3DTevStage.s"
}
#pragma pop


/* 8032220C-80322248 003C+00 s=1 e=0 z=0  None .text      setTevStage__12J3DTevBlock4FUlPC11J3DTevStage                */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void J3DTevBlock4::setTevStage(u32 param_0, J3DTevStage const* param_1) {
	nofralloc
#include "asm/JSystem/J3DGraphBase/J3DMatBlock/setTevStage__12J3DTevBlock4FUlPC11J3DTevStage.s"
}
#pragma pop


/* 80322248-8032225C 0014+00 s=1 e=0 z=0  None .text      getTevStage__12J3DTevBlock4FUl                               */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void J3DTevBlock4::getTevStage(u32 param_0) {
	nofralloc
#include "asm/JSystem/J3DGraphBase/J3DMatBlock/getTevStage__12J3DTevBlock4FUl.s"
}
#pragma pop


/* 8032225C-80322294 0038+00 s=1 e=0 z=0  None .text      setTevSwapModeInfo__12J3DTevBlock4FUl18J3DTevSwapModeInfo    */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void J3DTevBlock4::setTevSwapModeInfo(u32 param_0, J3DTevSwapModeInfo param_1) {
	nofralloc
#include "asm/JSystem/J3DGraphBase/J3DMatBlock/setTevSwapModeInfo__12J3DTevBlock4FUl18J3DTevSwapModeInfo.s"
}
#pragma pop


/* 80322294-803222CC 0038+00 s=1 e=0 z=0  None .text      setTevSwapModeInfo__12J3DTevBlock4FUlPC18J3DTevSwapModeInfo  */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void J3DTevBlock4::setTevSwapModeInfo(u32 param_0, J3DTevSwapModeInfo const* param_1) {
	nofralloc
#include "asm/JSystem/J3DGraphBase/J3DMatBlock/setTevSwapModeInfo__12J3DTevBlock4FUlPC18J3DTevSwapModeInfo.s"
}
#pragma pop


/* 803222CC-803222DC 0010+00 s=1 e=0 z=0  None .text      setTevSwapModeTable__12J3DTevBlock4FUl19J3DTevSwapModeTable  */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void J3DTevBlock4::setTevSwapModeTable(u32 param_0, J3DTevSwapModeTable param_1) {
	nofralloc
#include "asm/JSystem/J3DGraphBase/J3DMatBlock/setTevSwapModeTable__12J3DTevBlock4FUl19J3DTevSwapModeTable.s"
}
#pragma pop


/* 803222DC-803222EC 0010+00 s=1 e=0 z=0  None .text      setTevSwapModeTable__12J3DTevBlock4FUlPC19J3DTevSwapModeTable */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void J3DTevBlock4::setTevSwapModeTable(u32 param_0, J3DTevSwapModeTable const* param_1) {
	nofralloc
#include "asm/JSystem/J3DGraphBase/J3DMatBlock/setTevSwapModeTable__12J3DTevBlock4FUlPC19J3DTevSwapModeTable.s"
}
#pragma pop


/* 803222EC-803222FC 0010+00 s=1 e=0 z=0  None .text      getTevSwapModeTable__12J3DTevBlock4FUl                       */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void J3DTevBlock4::getTevSwapModeTable(u32 param_0) {
	nofralloc
#include "asm/JSystem/J3DGraphBase/J3DMatBlock/getTevSwapModeTable__12J3DTevBlock4FUl.s"
}
#pragma pop


/* 803222FC-80322310 0014+00 s=1 e=0 z=0  None .text      setIndTevStage__12J3DTevBlock4FUl14J3DIndTevStage            */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void J3DTevBlock4::setIndTevStage(u32 param_0, J3DIndTevStage param_1) {
	nofralloc
#include "asm/JSystem/J3DGraphBase/J3DMatBlock/setIndTevStage__12J3DTevBlock4FUl14J3DIndTevStage.s"
}
#pragma pop


/* 80322310-80322324 0014+00 s=1 e=0 z=0  None .text      setIndTevStage__12J3DTevBlock4FUlPC14J3DIndTevStage          */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void J3DTevBlock4::setIndTevStage(u32 param_0, J3DIndTevStage const* param_1) {
	nofralloc
#include "asm/JSystem/J3DGraphBase/J3DMatBlock/setIndTevStage__12J3DTevBlock4FUlPC14J3DIndTevStage.s"
}
#pragma pop


/* 80322324-80322338 0014+00 s=1 e=0 z=0  None .text      getIndTevStage__12J3DTevBlock4FUl                            */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void J3DTevBlock4::getIndTevStage(u32 param_0) {
	nofralloc
#include "asm/JSystem/J3DGraphBase/J3DMatBlock/getIndTevStage__12J3DTevBlock4FUl.s"
}
#pragma pop


/* 80322338-80322340 0008+00 s=1 e=0 z=0  None .text      getTexNoOffset__12J3DTevBlock4CFv                            */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void J3DTevBlock4::getTexNoOffset() const {
	nofralloc
#include "asm/JSystem/J3DGraphBase/J3DMatBlock/getTexNoOffset__12J3DTevBlock4CFv.s"
}
#pragma pop


/* 80322340-80322348 0008+00 s=1 e=0 z=0  None .text      getTevRegOffset__12J3DTevBlock4CFv                           */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void J3DTevBlock4::getTevRegOffset() const {
	nofralloc
#include "asm/JSystem/J3DGraphBase/J3DMatBlock/getTevRegOffset__12J3DTevBlock4CFv.s"
}
#pragma pop


/* 80322348-80322350 0008+00 s=1 e=0 z=0  None .text      setTevRegOffset__12J3DTevBlock4FUl                           */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void J3DTevBlock4::setTevRegOffset(u32 param_0) {
	nofralloc
#include "asm/JSystem/J3DGraphBase/J3DMatBlock/setTevRegOffset__12J3DTevBlock4FUl.s"
}
#pragma pop


/* 80322350-803223AC 005C+00 s=1 e=0 z=0  None .text      __dt__12J3DTevBlock4Fv                                       */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm J3DTevBlock4::~J3DTevBlock4() {
	nofralloc
#include "asm/JSystem/J3DGraphBase/J3DMatBlock/__dt__12J3DTevBlock4Fv.s"
}
#pragma pop


/* 803223AC-803223B0 0004+00 s=1 e=0 z=0  None .text      ptrToIndex__12J3DTevBlock2Fv                                 */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void J3DTevBlock2::ptrToIndex() {
	nofralloc
#include "asm/JSystem/J3DGraphBase/J3DMatBlock/ptrToIndex__12J3DTevBlock2Fv.s"
}
#pragma pop


/* 803223B0-803223D4 0024+00 s=1 e=0 z=0  None .text      indexToPtr__12J3DTevBlock2Fv                                 */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void J3DTevBlock2::indexToPtr() {
	nofralloc
#include "asm/JSystem/J3DGraphBase/J3DMatBlock/indexToPtr__12J3DTevBlock2Fv.s"
}
#pragma pop


/* 803223D4-803223E0 000C+00 s=1 e=0 z=0  None .text      getType__12J3DTevBlock2Fv                                    */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void J3DTevBlock2::getType() {
	nofralloc
#include "asm/JSystem/J3DGraphBase/J3DMatBlock/getType__12J3DTevBlock2Fv.s"
}
#pragma pop


/* 803223E0-803223F0 0010+00 s=1 e=0 z=0  None .text      setTexNo__12J3DTevBlock2FUlUs                                */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void J3DTevBlock2::setTexNo(u32 param_0, u16 param_1) {
	nofralloc
#include "asm/JSystem/J3DGraphBase/J3DMatBlock/setTexNo__12J3DTevBlock2FUlUs.s"
}
#pragma pop


/* 803223F0-80322404 0014+00 s=1 e=0 z=0  None .text      setTexNo__12J3DTevBlock2FUlPCUs                              */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void J3DTevBlock2::setTexNo(u32 param_0, u16 const* param_1) {
	nofralloc
#include "asm/JSystem/J3DGraphBase/J3DMatBlock/setTexNo__12J3DTevBlock2FUlPCUs.s"
}
#pragma pop


/* 80322404-80322414 0010+00 s=1 e=0 z=0  None .text      getTexNo__12J3DTevBlock2CFUl                                 */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void J3DTevBlock2::getTexNo(u32 param_0) const {
	nofralloc
#include "asm/JSystem/J3DGraphBase/J3DMatBlock/getTexNo__12J3DTevBlock2CFUl.s"
}
#pragma pop


/* 80322414-80322428 0014+00 s=1 e=0 z=0  None .text      setTevOrder__12J3DTevBlock2FUl11J3DTevOrder                  */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void J3DTevBlock2::setTevOrder(u32 param_0, J3DTevOrder param_1) {
	nofralloc
#include "asm/JSystem/J3DGraphBase/J3DMatBlock/setTevOrder__12J3DTevBlock2FUl11J3DTevOrder.s"
}
#pragma pop


/* 80322428-8032243C 0014+00 s=1 e=0 z=0  None .text      setTevOrder__12J3DTevBlock2FUlPC11J3DTevOrder                */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void J3DTevBlock2::setTevOrder(u32 param_0, J3DTevOrder const* param_1) {
	nofralloc
#include "asm/JSystem/J3DGraphBase/J3DMatBlock/setTevOrder__12J3DTevBlock2FUlPC11J3DTevOrder.s"
}
#pragma pop


/* 8032243C-80322450 0014+00 s=1 e=0 z=0  None .text      getTevOrder__12J3DTevBlock2FUl                               */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void J3DTevBlock2::getTevOrder(u32 param_0) {
	nofralloc
#include "asm/JSystem/J3DGraphBase/J3DMatBlock/getTevOrder__12J3DTevBlock2FUl.s"
}
#pragma pop


/* 80322450-8032247C 002C+00 s=1 e=0 z=0  None .text      setTevColor__12J3DTevBlock2FUl13J3DGXColorS10                */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void J3DTevBlock2::setTevColor(u32 param_0, J3DGXColorS10 param_1) {
	nofralloc
#include "asm/JSystem/J3DGraphBase/J3DMatBlock/setTevColor__12J3DTevBlock2FUl13J3DGXColorS10.s"
}
#pragma pop


/* 8032247C-803224A8 002C+00 s=1 e=0 z=0  None .text      setTevColor__12J3DTevBlock2FUlPC13J3DGXColorS10              */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void J3DTevBlock2::setTevColor(u32 param_0, J3DGXColorS10 const* param_1) {
	nofralloc
#include "asm/JSystem/J3DGraphBase/J3DMatBlock/setTevColor__12J3DTevBlock2FUlPC13J3DGXColorS10.s"
}
#pragma pop


/* 803224A8-803224BC 0014+00 s=1 e=0 z=0  None .text      getTevColor__12J3DTevBlock2FUl                               */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void J3DTevBlock2::getTevColor(u32 param_0) {
	nofralloc
#include "asm/JSystem/J3DGraphBase/J3DMatBlock/getTevColor__12J3DTevBlock2FUl.s"
}
#pragma pop


/* 803224BC-803224E8 002C+00 s=1 e=0 z=0  None .text      setTevKColor__12J3DTevBlock2FUl10J3DGXColor                  */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void J3DTevBlock2::setTevKColor(u32 param_0, J3DGXColor param_1) {
	nofralloc
#include "asm/JSystem/J3DGraphBase/J3DMatBlock/setTevKColor__12J3DTevBlock2FUl10J3DGXColor.s"
}
#pragma pop


/* 803224E8-80322514 002C+00 s=1 e=0 z=0  None .text      setTevKColor__12J3DTevBlock2FUlPC10J3DGXColor                */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void J3DTevBlock2::setTevKColor(u32 param_0, J3DGXColor const* param_1) {
	nofralloc
#include "asm/JSystem/J3DGraphBase/J3DMatBlock/setTevKColor__12J3DTevBlock2FUlPC10J3DGXColor.s"
}
#pragma pop


/* 80322514-80322528 0014+00 s=1 e=0 z=0  None .text      getTevKColor__12J3DTevBlock2FUl                              */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void J3DTevBlock2::getTevKColor(u32 param_0) {
	nofralloc
#include "asm/JSystem/J3DGraphBase/J3DMatBlock/getTevKColor__12J3DTevBlock2FUl.s"
}
#pragma pop


/* 80322528-80322534 000C+00 s=1 e=0 z=0  None .text      setTevKColorSel__12J3DTevBlock2FUlUc                         */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void J3DTevBlock2::setTevKColorSel(u32 param_0, u8 param_1) {
	nofralloc
#include "asm/JSystem/J3DGraphBase/J3DMatBlock/setTevKColorSel__12J3DTevBlock2FUlUc.s"
}
#pragma pop


/* 80322534-80322544 0010+00 s=1 e=0 z=0  None .text      setTevKColorSel__12J3DTevBlock2FUlPCUc                       */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void J3DTevBlock2::setTevKColorSel(u32 param_0, u8 const* param_1) {
	nofralloc
#include "asm/JSystem/J3DGraphBase/J3DMatBlock/setTevKColorSel__12J3DTevBlock2FUlPCUc.s"
}
#pragma pop


/* 80322544-80322550 000C+00 s=1 e=0 z=0  None .text      getTevKColorSel__12J3DTevBlock2FUl                           */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void J3DTevBlock2::getTevKColorSel(u32 param_0) {
	nofralloc
#include "asm/JSystem/J3DGraphBase/J3DMatBlock/getTevKColorSel__12J3DTevBlock2FUl.s"
}
#pragma pop


/* 80322550-8032255C 000C+00 s=1 e=0 z=0  None .text      setTevKAlphaSel__12J3DTevBlock2FUlUc                         */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void J3DTevBlock2::setTevKAlphaSel(u32 param_0, u8 param_1) {
	nofralloc
#include "asm/JSystem/J3DGraphBase/J3DMatBlock/setTevKAlphaSel__12J3DTevBlock2FUlUc.s"
}
#pragma pop


/* 8032255C-8032256C 0010+00 s=1 e=0 z=0  None .text      setTevKAlphaSel__12J3DTevBlock2FUlPCUc                       */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void J3DTevBlock2::setTevKAlphaSel(u32 param_0, u8 const* param_1) {
	nofralloc
#include "asm/JSystem/J3DGraphBase/J3DMatBlock/setTevKAlphaSel__12J3DTevBlock2FUlPCUc.s"
}
#pragma pop


/* 8032256C-80322578 000C+00 s=1 e=0 z=0  None .text      getTevKAlphaSel__12J3DTevBlock2FUl                           */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void J3DTevBlock2::getTevKAlphaSel(u32 param_0) {
	nofralloc
#include "asm/JSystem/J3DGraphBase/J3DMatBlock/getTevKAlphaSel__12J3DTevBlock2FUl.s"
}
#pragma pop


/* 80322578-80322580 0008+00 s=1 e=0 z=0  None .text      setTevStageNum__12J3DTevBlock2FUc                            */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void J3DTevBlock2::setTevStageNum(u8 param_0) {
	nofralloc
#include "asm/JSystem/J3DGraphBase/J3DMatBlock/setTevStageNum__12J3DTevBlock2FUc.s"
}
#pragma pop


/* 80322580-8032258C 000C+00 s=1 e=0 z=0  None .text      setTevStageNum__12J3DTevBlock2FPCUc                          */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void J3DTevBlock2::setTevStageNum(u8 const* param_0) {
	nofralloc
#include "asm/JSystem/J3DGraphBase/J3DMatBlock/setTevStageNum__12J3DTevBlock2FPCUc.s"
}
#pragma pop


/* 8032258C-80322594 0008+00 s=1 e=0 z=0  None .text      getTevStageNum__12J3DTevBlock2CFv                            */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void J3DTevBlock2::getTevStageNum() const {
	nofralloc
#include "asm/JSystem/J3DGraphBase/J3DMatBlock/getTevStageNum__12J3DTevBlock2CFv.s"
}
#pragma pop


/* 80322594-803225D0 003C+00 s=1 e=0 z=0  None .text      setTevStage__12J3DTevBlock2FUl11J3DTevStage                  */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void J3DTevBlock2::setTevStage(u32 param_0, J3DTevStage param_1) {
	nofralloc
#include "asm/JSystem/J3DGraphBase/J3DMatBlock/setTevStage__12J3DTevBlock2FUl11J3DTevStage.s"
}
#pragma pop


/* 803225D0-8032260C 003C+00 s=1 e=0 z=0  None .text      setTevStage__12J3DTevBlock2FUlPC11J3DTevStage                */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void J3DTevBlock2::setTevStage(u32 param_0, J3DTevStage const* param_1) {
	nofralloc
#include "asm/JSystem/J3DGraphBase/J3DMatBlock/setTevStage__12J3DTevBlock2FUlPC11J3DTevStage.s"
}
#pragma pop


/* 8032260C-80322620 0014+00 s=1 e=0 z=0  None .text      getTevStage__12J3DTevBlock2FUl                               */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void J3DTevBlock2::getTevStage(u32 param_0) {
	nofralloc
#include "asm/JSystem/J3DGraphBase/J3DMatBlock/getTevStage__12J3DTevBlock2FUl.s"
}
#pragma pop


/* 80322620-80322658 0038+00 s=1 e=0 z=0  None .text      setTevSwapModeInfo__12J3DTevBlock2FUl18J3DTevSwapModeInfo    */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void J3DTevBlock2::setTevSwapModeInfo(u32 param_0, J3DTevSwapModeInfo param_1) {
	nofralloc
#include "asm/JSystem/J3DGraphBase/J3DMatBlock/setTevSwapModeInfo__12J3DTevBlock2FUl18J3DTevSwapModeInfo.s"
}
#pragma pop


/* 80322658-80322690 0038+00 s=1 e=0 z=0  None .text      setTevSwapModeInfo__12J3DTevBlock2FUlPC18J3DTevSwapModeInfo  */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void J3DTevBlock2::setTevSwapModeInfo(u32 param_0, J3DTevSwapModeInfo const* param_1) {
	nofralloc
#include "asm/JSystem/J3DGraphBase/J3DMatBlock/setTevSwapModeInfo__12J3DTevBlock2FUlPC18J3DTevSwapModeInfo.s"
}
#pragma pop


/* 80322690-803226A0 0010+00 s=1 e=0 z=0  None .text      setTevSwapModeTable__12J3DTevBlock2FUl19J3DTevSwapModeTable  */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void J3DTevBlock2::setTevSwapModeTable(u32 param_0, J3DTevSwapModeTable param_1) {
	nofralloc
#include "asm/JSystem/J3DGraphBase/J3DMatBlock/setTevSwapModeTable__12J3DTevBlock2FUl19J3DTevSwapModeTable.s"
}
#pragma pop


/* 803226A0-803226B0 0010+00 s=1 e=0 z=0  None .text      setTevSwapModeTable__12J3DTevBlock2FUlPC19J3DTevSwapModeTable */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void J3DTevBlock2::setTevSwapModeTable(u32 param_0, J3DTevSwapModeTable const* param_1) {
	nofralloc
#include "asm/JSystem/J3DGraphBase/J3DMatBlock/setTevSwapModeTable__12J3DTevBlock2FUlPC19J3DTevSwapModeTable.s"
}
#pragma pop


/* 803226B0-803226C0 0010+00 s=1 e=0 z=0  None .text      getTevSwapModeTable__12J3DTevBlock2FUl                       */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void J3DTevBlock2::getTevSwapModeTable(u32 param_0) {
	nofralloc
#include "asm/JSystem/J3DGraphBase/J3DMatBlock/getTevSwapModeTable__12J3DTevBlock2FUl.s"
}
#pragma pop


/* 803226C0-803226D4 0014+00 s=1 e=0 z=0  None .text      setIndTevStage__12J3DTevBlock2FUl14J3DIndTevStage            */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void J3DTevBlock2::setIndTevStage(u32 param_0, J3DIndTevStage param_1) {
	nofralloc
#include "asm/JSystem/J3DGraphBase/J3DMatBlock/setIndTevStage__12J3DTevBlock2FUl14J3DIndTevStage.s"
}
#pragma pop


/* 803226D4-803226E8 0014+00 s=1 e=0 z=0  None .text      setIndTevStage__12J3DTevBlock2FUlPC14J3DIndTevStage          */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void J3DTevBlock2::setIndTevStage(u32 param_0, J3DIndTevStage const* param_1) {
	nofralloc
#include "asm/JSystem/J3DGraphBase/J3DMatBlock/setIndTevStage__12J3DTevBlock2FUlPC14J3DIndTevStage.s"
}
#pragma pop


/* 803226E8-803226FC 0014+00 s=1 e=0 z=0  None .text      getIndTevStage__12J3DTevBlock2FUl                            */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void J3DTevBlock2::getIndTevStage(u32 param_0) {
	nofralloc
#include "asm/JSystem/J3DGraphBase/J3DMatBlock/getIndTevStage__12J3DTevBlock2FUl.s"
}
#pragma pop


/* 803226FC-80322704 0008+00 s=1 e=0 z=0  None .text      getTexNoOffset__12J3DTevBlock2CFv                            */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void J3DTevBlock2::getTexNoOffset() const {
	nofralloc
#include "asm/JSystem/J3DGraphBase/J3DMatBlock/getTexNoOffset__12J3DTevBlock2CFv.s"
}
#pragma pop


/* 80322704-8032270C 0008+00 s=1 e=0 z=0  None .text      getTevRegOffset__12J3DTevBlock2CFv                           */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void J3DTevBlock2::getTevRegOffset() const {
	nofralloc
#include "asm/JSystem/J3DGraphBase/J3DMatBlock/getTevRegOffset__12J3DTevBlock2CFv.s"
}
#pragma pop


/* 8032270C-80322714 0008+00 s=1 e=0 z=0  None .text      setTevRegOffset__12J3DTevBlock2FUl                           */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void J3DTevBlock2::setTevRegOffset(u32 param_0) {
	nofralloc
#include "asm/JSystem/J3DGraphBase/J3DMatBlock/setTevRegOffset__12J3DTevBlock2FUl.s"
}
#pragma pop


/* 80322714-80322770 005C+00 s=1 e=0 z=0  None .text      __dt__12J3DTevBlock2Fv                                       */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm J3DTevBlock2::~J3DTevBlock2() {
	nofralloc
#include "asm/JSystem/J3DGraphBase/J3DMatBlock/__dt__12J3DTevBlock2Fv.s"
}
#pragma pop


/* 80322770-80322774 0004+00 s=1 e=0 z=0  None .text      ptrToIndex__12J3DTevBlock1Fv                                 */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void J3DTevBlock1::ptrToIndex() {
	nofralloc
#include "asm/JSystem/J3DGraphBase/J3DMatBlock/ptrToIndex__12J3DTevBlock1Fv.s"
}
#pragma pop


/* 80322774-80322798 0024+00 s=1 e=0 z=0  None .text      indexToPtr__12J3DTevBlock1Fv                                 */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void J3DTevBlock1::indexToPtr() {
	nofralloc
#include "asm/JSystem/J3DGraphBase/J3DMatBlock/indexToPtr__12J3DTevBlock1Fv.s"
}
#pragma pop


/* 80322798-803227A4 000C+00 s=1 e=0 z=0  None .text      getType__12J3DTevBlock1Fv                                    */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void J3DTevBlock1::getType() {
	nofralloc
#include "asm/JSystem/J3DGraphBase/J3DMatBlock/getType__12J3DTevBlock1Fv.s"
}
#pragma pop


/* 803227A4-803227B4 0010+00 s=1 e=0 z=0  None .text      setTexNo__12J3DTevBlock1FUlUs                                */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void J3DTevBlock1::setTexNo(u32 param_0, u16 param_1) {
	nofralloc
#include "asm/JSystem/J3DGraphBase/J3DMatBlock/setTexNo__12J3DTevBlock1FUlUs.s"
}
#pragma pop


/* 803227B4-803227C8 0014+00 s=1 e=0 z=0  None .text      setTexNo__12J3DTevBlock1FUlPCUs                              */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void J3DTevBlock1::setTexNo(u32 param_0, u16 const* param_1) {
	nofralloc
#include "asm/JSystem/J3DGraphBase/J3DMatBlock/setTexNo__12J3DTevBlock1FUlPCUs.s"
}
#pragma pop


/* 803227C8-803227D8 0010+00 s=1 e=0 z=0  None .text      getTexNo__12J3DTevBlock1CFUl                                 */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void J3DTevBlock1::getTexNo(u32 param_0) const {
	nofralloc
#include "asm/JSystem/J3DGraphBase/J3DMatBlock/getTexNo__12J3DTevBlock1CFUl.s"
}
#pragma pop


/* 803227D8-803227EC 0014+00 s=1 e=0 z=0  None .text      setTevOrder__12J3DTevBlock1FUl11J3DTevOrder                  */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void J3DTevBlock1::setTevOrder(u32 param_0, J3DTevOrder param_1) {
	nofralloc
#include "asm/JSystem/J3DGraphBase/J3DMatBlock/setTevOrder__12J3DTevBlock1FUl11J3DTevOrder.s"
}
#pragma pop


/* 803227EC-80322800 0014+00 s=1 e=0 z=0  None .text      setTevOrder__12J3DTevBlock1FUlPC11J3DTevOrder                */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void J3DTevBlock1::setTevOrder(u32 param_0, J3DTevOrder const* param_1) {
	nofralloc
#include "asm/JSystem/J3DGraphBase/J3DMatBlock/setTevOrder__12J3DTevBlock1FUlPC11J3DTevOrder.s"
}
#pragma pop


/* 80322800-80322814 0014+00 s=1 e=0 z=0  None .text      getTevOrder__12J3DTevBlock1FUl                               */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void J3DTevBlock1::getTevOrder(u32 param_0) {
	nofralloc
#include "asm/JSystem/J3DGraphBase/J3DMatBlock/getTevOrder__12J3DTevBlock1FUl.s"
}
#pragma pop


/* 80322814-80322818 0004+00 s=1 e=0 z=0  None .text      setTevStageNum__12J3DTevBlock1FUc                            */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void J3DTevBlock1::setTevStageNum(u8 param_0) {
	nofralloc
#include "asm/JSystem/J3DGraphBase/J3DMatBlock/setTevStageNum__12J3DTevBlock1FUc.s"
}
#pragma pop


/* 80322818-8032281C 0004+00 s=1 e=0 z=0  None .text      setTevStageNum__12J3DTevBlock1FPCUc                          */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void J3DTevBlock1::setTevStageNum(u8 const* param_0) {
	nofralloc
#include "asm/JSystem/J3DGraphBase/J3DMatBlock/setTevStageNum__12J3DTevBlock1FPCUc.s"
}
#pragma pop


/* 8032281C-80322824 0008+00 s=1 e=0 z=0  None .text      getTevStageNum__12J3DTevBlock1CFv                            */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void J3DTevBlock1::getTevStageNum() const {
	nofralloc
#include "asm/JSystem/J3DGraphBase/J3DMatBlock/getTevStageNum__12J3DTevBlock1CFv.s"
}
#pragma pop


/* 80322824-80322860 003C+00 s=1 e=0 z=0  None .text      setTevStage__12J3DTevBlock1FUl11J3DTevStage                  */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void J3DTevBlock1::setTevStage(u32 param_0, J3DTevStage param_1) {
	nofralloc
#include "asm/JSystem/J3DGraphBase/J3DMatBlock/setTevStage__12J3DTevBlock1FUl11J3DTevStage.s"
}
#pragma pop


/* 80322860-8032289C 003C+00 s=1 e=0 z=0  None .text      setTevStage__12J3DTevBlock1FUlPC11J3DTevStage                */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void J3DTevBlock1::setTevStage(u32 param_0, J3DTevStage const* param_1) {
	nofralloc
#include "asm/JSystem/J3DGraphBase/J3DMatBlock/setTevStage__12J3DTevBlock1FUlPC11J3DTevStage.s"
}
#pragma pop


/* 8032289C-803228B0 0014+00 s=1 e=0 z=0  None .text      getTevStage__12J3DTevBlock1FUl                               */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void J3DTevBlock1::getTevStage(u32 param_0) {
	nofralloc
#include "asm/JSystem/J3DGraphBase/J3DMatBlock/getTevStage__12J3DTevBlock1FUl.s"
}
#pragma pop


/* 803228B0-803228C4 0014+00 s=1 e=0 z=0  None .text      setIndTevStage__12J3DTevBlock1FUl14J3DIndTevStage            */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void J3DTevBlock1::setIndTevStage(u32 param_0, J3DIndTevStage param_1) {
	nofralloc
#include "asm/JSystem/J3DGraphBase/J3DMatBlock/setIndTevStage__12J3DTevBlock1FUl14J3DIndTevStage.s"
}
#pragma pop


/* 803228C4-803228D8 0014+00 s=1 e=0 z=0  None .text      setIndTevStage__12J3DTevBlock1FUlPC14J3DIndTevStage          */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void J3DTevBlock1::setIndTevStage(u32 param_0, J3DIndTevStage const* param_1) {
	nofralloc
#include "asm/JSystem/J3DGraphBase/J3DMatBlock/setIndTevStage__12J3DTevBlock1FUlPC14J3DIndTevStage.s"
}
#pragma pop


/* 803228D8-803228EC 0014+00 s=1 e=0 z=0  None .text      getIndTevStage__12J3DTevBlock1FUl                            */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void J3DTevBlock1::getIndTevStage(u32 param_0) {
	nofralloc
#include "asm/JSystem/J3DGraphBase/J3DMatBlock/getIndTevStage__12J3DTevBlock1FUl.s"
}
#pragma pop


/* 803228EC-803228F4 0008+00 s=1 e=0 z=0  None .text      getTexNoOffset__12J3DTevBlock1CFv                            */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void J3DTevBlock1::getTexNoOffset() const {
	nofralloc
#include "asm/JSystem/J3DGraphBase/J3DMatBlock/getTexNoOffset__12J3DTevBlock1CFv.s"
}
#pragma pop


/* 803228F4-80322950 005C+00 s=1 e=0 z=0  None .text      __dt__12J3DTevBlock1Fv                                       */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm J3DTevBlock1::~J3DTevBlock1() {
	nofralloc
#include "asm/JSystem/J3DGraphBase/J3DMatBlock/__dt__12J3DTevBlock1Fv.s"
}
#pragma pop


/* 80322950-80322954 0004+00 s=2 e=1 z=0  None .text      setTevKColorSel__11J3DTevBlockFUlPCUc                        */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void J3DTevBlock::setTevKColorSel(u32 param_0, u8 const* param_1) {
	nofralloc
#include "asm/JSystem/J3DGraphBase/J3DMatBlock/setTevKColorSel__11J3DTevBlockFUlPCUc.s"
}
#pragma pop


/* 80322954-80322958 0004+00 s=3 e=1 z=0  None .text      setTevKAlphaSel__11J3DTevBlockFUlPCUc                        */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void J3DTevBlock::setTevKAlphaSel(u32 param_0, u8 const* param_1) {
	nofralloc
#include "asm/JSystem/J3DGraphBase/J3DMatBlock/setTevKAlphaSel__11J3DTevBlockFUlPCUc.s"
}
#pragma pop


/* 80322958-8032295C 0004+00 s=3 e=1 z=0  None .text      setTevSwapModeInfo__11J3DTevBlockFUl18J3DTevSwapModeInfo     */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void J3DTevBlock::setTevSwapModeInfo(u32 param_0, J3DTevSwapModeInfo param_1) {
	nofralloc
#include "asm/JSystem/J3DGraphBase/J3DMatBlock/setTevSwapModeInfo__11J3DTevBlockFUl18J3DTevSwapModeInfo.s"
}
#pragma pop


/* 8032295C-80322960 0004+00 s=3 e=1 z=0  None .text      setTevSwapModeInfo__11J3DTevBlockFUlPC18J3DTevSwapModeInfo   */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void J3DTevBlock::setTevSwapModeInfo(u32 param_0, J3DTevSwapModeInfo const* param_1) {
	nofralloc
#include "asm/JSystem/J3DGraphBase/J3DMatBlock/setTevSwapModeInfo__11J3DTevBlockFUlPC18J3DTevSwapModeInfo.s"
}
#pragma pop


/* 80322960-80322964 0004+00 s=3 e=1 z=0  None .text      setTevSwapModeTable__11J3DTevBlockFUlPC19J3DTevSwapModeTable */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void J3DTevBlock::setTevSwapModeTable(u32 param_0, J3DTevSwapModeTable const* param_1) {
	nofralloc
#include "asm/JSystem/J3DGraphBase/J3DMatBlock/setTevSwapModeTable__11J3DTevBlockFUlPC19J3DTevSwapModeTable.s"
}
#pragma pop


/* 80322964-8032296C 0008+00 s=2 e=1 z=0  None .text      getTevRegOffset__11J3DTevBlockCFv                            */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void J3DTevBlock::getTevRegOffset() const {
	nofralloc
#include "asm/JSystem/J3DGraphBase/J3DMatBlock/getTevRegOffset__11J3DTevBlockCFv.s"
}
#pragma pop


/* 8032296C-80322970 0004+00 s=2 e=1 z=0  None .text      setTevRegOffset__11J3DTevBlockFUl                            */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void J3DTevBlock::setTevRegOffset(u32 param_0) {
	nofralloc
#include "asm/JSystem/J3DGraphBase/J3DMatBlock/setTevRegOffset__11J3DTevBlockFUl.s"
}
#pragma pop


/* 80322970-80322974 0004+00 s=1 e=0 z=0  None .text      load__18J3DTevBlockPatchedFv                                 */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void J3DTevBlockPatched::load() {
	nofralloc
#include "asm/JSystem/J3DGraphBase/J3DMatBlock/load__18J3DTevBlockPatchedFv.s"
}
#pragma pop


/* 80322974-80322998 0024+00 s=1 e=0 z=0  None .text      indexToPtr__18J3DTevBlockPatchedFv                           */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void J3DTevBlockPatched::indexToPtr() {
	nofralloc
#include "asm/JSystem/J3DGraphBase/J3DMatBlock/indexToPtr__18J3DTevBlockPatchedFv.s"
}
#pragma pop


/* 80322998-803229A4 000C+00 s=1 e=0 z=0  None .text      getType__18J3DTevBlockPatchedFv                              */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void J3DTevBlockPatched::getType() {
	nofralloc
#include "asm/JSystem/J3DGraphBase/J3DMatBlock/getType__18J3DTevBlockPatchedFv.s"
}
#pragma pop


/* 803229A4-803229AC 0008+00 s=1 e=0 z=0  None .text      setTevStageNum__18J3DTevBlockPatchedFUc                      */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void J3DTevBlockPatched::setTevStageNum(u8 param_0) {
	nofralloc
#include "asm/JSystem/J3DGraphBase/J3DMatBlock/setTevStageNum__18J3DTevBlockPatchedFUc.s"
}
#pragma pop


/* 803229AC-803229B8 000C+00 s=1 e=0 z=0  None .text      setTevStageNum__18J3DTevBlockPatchedFPCUc                    */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void J3DTevBlockPatched::setTevStageNum(u8 const* param_0) {
	nofralloc
#include "asm/JSystem/J3DGraphBase/J3DMatBlock/setTevStageNum__18J3DTevBlockPatchedFPCUc.s"
}
#pragma pop


/* 803229B8-803229C0 0008+00 s=1 e=0 z=0  None .text      getTevStageNum__18J3DTevBlockPatchedCFv                      */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void J3DTevBlockPatched::getTevStageNum() const {
	nofralloc
#include "asm/JSystem/J3DGraphBase/J3DMatBlock/getTevStageNum__18J3DTevBlockPatchedCFv.s"
}
#pragma pop


/* 803229C0-803229D0 0010+00 s=1 e=0 z=0  None .text      setTexNo__18J3DTevBlockPatchedFUlUs                          */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void J3DTevBlockPatched::setTexNo(u32 param_0, u16 param_1) {
	nofralloc
#include "asm/JSystem/J3DGraphBase/J3DMatBlock/setTexNo__18J3DTevBlockPatchedFUlUs.s"
}
#pragma pop


/* 803229D0-803229E4 0014+00 s=1 e=0 z=0  None .text      setTexNo__18J3DTevBlockPatchedFUlPCUs                        */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void J3DTevBlockPatched::setTexNo(u32 param_0, u16 const* param_1) {
	nofralloc
#include "asm/JSystem/J3DGraphBase/J3DMatBlock/setTexNo__18J3DTevBlockPatchedFUlPCUs.s"
}
#pragma pop


/* 803229E4-803229F4 0010+00 s=1 e=0 z=0  None .text      getTexNo__18J3DTevBlockPatchedCFUl                           */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void J3DTevBlockPatched::getTexNo(u32 param_0) const {
	nofralloc
#include "asm/JSystem/J3DGraphBase/J3DMatBlock/getTexNo__18J3DTevBlockPatchedCFUl.s"
}
#pragma pop


/* 803229F4-80322A08 0014+00 s=1 e=0 z=0  None .text      setTevOrder__18J3DTevBlockPatchedFUl11J3DTevOrder            */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void J3DTevBlockPatched::setTevOrder(u32 param_0, J3DTevOrder param_1) {
	nofralloc
#include "asm/JSystem/J3DGraphBase/J3DMatBlock/setTevOrder__18J3DTevBlockPatchedFUl11J3DTevOrder.s"
}
#pragma pop


/* 80322A08-80322A1C 0014+00 s=1 e=0 z=0  None .text      setTevOrder__18J3DTevBlockPatchedFUlPC11J3DTevOrder          */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void J3DTevBlockPatched::setTevOrder(u32 param_0, J3DTevOrder const* param_1) {
	nofralloc
#include "asm/JSystem/J3DGraphBase/J3DMatBlock/setTevOrder__18J3DTevBlockPatchedFUlPC11J3DTevOrder.s"
}
#pragma pop


/* 80322A1C-80322A30 0014+00 s=1 e=0 z=0  None .text      getTevOrder__18J3DTevBlockPatchedFUl                         */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void J3DTevBlockPatched::getTevOrder(u32 param_0) {
	nofralloc
#include "asm/JSystem/J3DGraphBase/J3DMatBlock/getTevOrder__18J3DTevBlockPatchedFUl.s"
}
#pragma pop


/* 80322A30-80322A6C 003C+00 s=1 e=0 z=0  None .text      setTevStage__18J3DTevBlockPatchedFUl11J3DTevStage            */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void J3DTevBlockPatched::setTevStage(u32 param_0, J3DTevStage param_1) {
	nofralloc
#include "asm/JSystem/J3DGraphBase/J3DMatBlock/setTevStage__18J3DTevBlockPatchedFUl11J3DTevStage.s"
}
#pragma pop


/* 80322A6C-80322AA8 003C+00 s=1 e=0 z=0  None .text      setTevStage__18J3DTevBlockPatchedFUlPC11J3DTevStage          */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void J3DTevBlockPatched::setTevStage(u32 param_0, J3DTevStage const* param_1) {
	nofralloc
#include "asm/JSystem/J3DGraphBase/J3DMatBlock/setTevStage__18J3DTevBlockPatchedFUlPC11J3DTevStage.s"
}
#pragma pop


/* 80322AA8-80322ABC 0014+00 s=1 e=0 z=0  None .text      getTevStage__18J3DTevBlockPatchedFUl                         */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void J3DTevBlockPatched::getTevStage(u32 param_0) {
	nofralloc
#include "asm/JSystem/J3DGraphBase/J3DMatBlock/getTevStage__18J3DTevBlockPatchedFUl.s"
}
#pragma pop


/* 80322ABC-80322AD0 0014+00 s=1 e=0 z=0  None .text      setIndTevStage__18J3DTevBlockPatchedFUl14J3DIndTevStage      */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void J3DTevBlockPatched::setIndTevStage(u32 param_0, J3DIndTevStage param_1) {
	nofralloc
#include "asm/JSystem/J3DGraphBase/J3DMatBlock/setIndTevStage__18J3DTevBlockPatchedFUl14J3DIndTevStage.s"
}
#pragma pop


/* 80322AD0-80322AE4 0014+00 s=1 e=0 z=0  None .text      setIndTevStage__18J3DTevBlockPatchedFUlPC14J3DIndTevStage    */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void J3DTevBlockPatched::setIndTevStage(u32 param_0, J3DIndTevStage const* param_1) {
	nofralloc
#include "asm/JSystem/J3DGraphBase/J3DMatBlock/setIndTevStage__18J3DTevBlockPatchedFUlPC14J3DIndTevStage.s"
}
#pragma pop


/* 80322AE4-80322AF8 0014+00 s=1 e=0 z=0  None .text      getIndTevStage__18J3DTevBlockPatchedFUl                      */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void J3DTevBlockPatched::getIndTevStage(u32 param_0) {
	nofralloc
#include "asm/JSystem/J3DGraphBase/J3DMatBlock/getIndTevStage__18J3DTevBlockPatchedFUl.s"
}
#pragma pop


/* 80322AF8-80322B24 002C+00 s=1 e=0 z=0  None .text      setTevColor__18J3DTevBlockPatchedFUl13J3DGXColorS10          */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void J3DTevBlockPatched::setTevColor(u32 param_0, J3DGXColorS10 param_1) {
	nofralloc
#include "asm/JSystem/J3DGraphBase/J3DMatBlock/setTevColor__18J3DTevBlockPatchedFUl13J3DGXColorS10.s"
}
#pragma pop


/* 80322B24-80322B50 002C+00 s=1 e=0 z=0  None .text      setTevColor__18J3DTevBlockPatchedFUlPC13J3DGXColorS10        */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void J3DTevBlockPatched::setTevColor(u32 param_0, J3DGXColorS10 const* param_1) {
	nofralloc
#include "asm/JSystem/J3DGraphBase/J3DMatBlock/setTevColor__18J3DTevBlockPatchedFUlPC13J3DGXColorS10.s"
}
#pragma pop


/* 80322B50-80322B64 0014+00 s=1 e=0 z=0  None .text      getTevColor__18J3DTevBlockPatchedFUl                         */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void J3DTevBlockPatched::getTevColor(u32 param_0) {
	nofralloc
#include "asm/JSystem/J3DGraphBase/J3DMatBlock/getTevColor__18J3DTevBlockPatchedFUl.s"
}
#pragma pop


/* 80322B64-80322B90 002C+00 s=1 e=0 z=0  None .text      setTevKColor__18J3DTevBlockPatchedFUl10J3DGXColor            */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void J3DTevBlockPatched::setTevKColor(u32 param_0, J3DGXColor param_1) {
	nofralloc
#include "asm/JSystem/J3DGraphBase/J3DMatBlock/setTevKColor__18J3DTevBlockPatchedFUl10J3DGXColor.s"
}
#pragma pop


/* 80322B90-80322BBC 002C+00 s=1 e=0 z=0  None .text      setTevKColor__18J3DTevBlockPatchedFUlPC10J3DGXColor          */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void J3DTevBlockPatched::setTevKColor(u32 param_0, J3DGXColor const* param_1) {
	nofralloc
#include "asm/JSystem/J3DGraphBase/J3DMatBlock/setTevKColor__18J3DTevBlockPatchedFUlPC10J3DGXColor.s"
}
#pragma pop


/* 80322BBC-80322BD0 0014+00 s=1 e=0 z=0  None .text      getTevKColor__18J3DTevBlockPatchedFUl                        */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void J3DTevBlockPatched::getTevKColor(u32 param_0) {
	nofralloc
#include "asm/JSystem/J3DGraphBase/J3DMatBlock/getTevKColor__18J3DTevBlockPatchedFUl.s"
}
#pragma pop


/* 80322BD0-80322BDC 000C+00 s=1 e=0 z=0  None .text      setTevKColorSel__18J3DTevBlockPatchedFUlUc                   */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void J3DTevBlockPatched::setTevKColorSel(u32 param_0, u8 param_1) {
	nofralloc
#include "asm/JSystem/J3DGraphBase/J3DMatBlock/setTevKColorSel__18J3DTevBlockPatchedFUlUc.s"
}
#pragma pop


/* 80322BDC-80322BEC 0010+00 s=1 e=0 z=0  None .text      setTevKColorSel__18J3DTevBlockPatchedFUlPCUc                 */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void J3DTevBlockPatched::setTevKColorSel(u32 param_0, u8 const* param_1) {
	nofralloc
#include "asm/JSystem/J3DGraphBase/J3DMatBlock/setTevKColorSel__18J3DTevBlockPatchedFUlPCUc.s"
}
#pragma pop


/* 80322BEC-80322BF8 000C+00 s=1 e=0 z=0  None .text      getTevKColorSel__18J3DTevBlockPatchedFUl                     */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void J3DTevBlockPatched::getTevKColorSel(u32 param_0) {
	nofralloc
#include "asm/JSystem/J3DGraphBase/J3DMatBlock/getTevKColorSel__18J3DTevBlockPatchedFUl.s"
}
#pragma pop


/* 80322BF8-80322C00 0008+00 s=1 e=0 z=0  None .text      getTexNoOffset__18J3DTevBlockPatchedCFv                      */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void J3DTevBlockPatched::getTexNoOffset() const {
	nofralloc
#include "asm/JSystem/J3DGraphBase/J3DMatBlock/getTexNoOffset__18J3DTevBlockPatchedCFv.s"
}
#pragma pop


/* 80322C00-80322C08 0008+00 s=1 e=0 z=0  None .text      getTevRegOffset__18J3DTevBlockPatchedCFv                     */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void J3DTevBlockPatched::getTevRegOffset() const {
	nofralloc
#include "asm/JSystem/J3DGraphBase/J3DMatBlock/getTevRegOffset__18J3DTevBlockPatchedCFv.s"
}
#pragma pop


/* 80322C08-80322C10 0008+00 s=1 e=0 z=0  None .text      setTevRegOffset__18J3DTevBlockPatchedFUl                     */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void J3DTevBlockPatched::setTevRegOffset(u32 param_0) {
	nofralloc
#include "asm/JSystem/J3DGraphBase/J3DMatBlock/setTevRegOffset__18J3DTevBlockPatchedFUl.s"
}
#pragma pop


/* 80322C10-80322C6C 005C+00 s=1 e=0 z=0  None .text      __dt__18J3DTevBlockPatchedFv                                 */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm J3DTevBlockPatched::~J3DTevBlockPatched() {
	nofralloc
#include "asm/JSystem/J3DGraphBase/J3DMatBlock/__dt__18J3DTevBlockPatchedFv.s"
}
#pragma pop


/* 80322C6C-80322C78 000C+00 s=1 e=0 z=0  None .text      getType__19J3DTexGenBlockBasicFv                             */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void J3DTexGenBlockBasic::getType() {
	nofralloc
#include "asm/JSystem/J3DGraphBase/J3DMatBlock/getType__19J3DTexGenBlockBasicFv.s"
}
#pragma pop


/* 80322C78-80322C9C 0024+00 s=1 e=0 z=0  None .text      setNBTScale__19J3DTexGenBlockBasicF11J3DNBTScale             */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void J3DTexGenBlockBasic::setNBTScale(J3DNBTScale param_0) {
	nofralloc
#include "asm/JSystem/J3DGraphBase/J3DMatBlock/setNBTScale__19J3DTexGenBlockBasicF11J3DNBTScale.s"
}
#pragma pop


/* 80322C9C-80322CC0 0024+00 s=1 e=0 z=0  None .text      setNBTScale__19J3DTexGenBlockBasicFPC11J3DNBTScale           */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void J3DTexGenBlockBasic::setNBTScale(J3DNBTScale const* param_0) {
	nofralloc
#include "asm/JSystem/J3DGraphBase/J3DMatBlock/setNBTScale__19J3DTexGenBlockBasicFPC11J3DNBTScale.s"
}
#pragma pop


/* 80322CC0-80322CC8 0008+00 s=1 e=0 z=0  None .text      getNBTScale__19J3DTexGenBlockBasicFv                         */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void J3DTexGenBlockBasic::getNBTScale() {
	nofralloc
#include "asm/JSystem/J3DGraphBase/J3DMatBlock/getNBTScale__19J3DTexGenBlockBasicFv.s"
}
#pragma pop


/* 80322CC8-80322D34 006C+00 s=1 e=0 z=0  None .text      __dt__19J3DTexGenBlockBasicFv                                */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm J3DTexGenBlockBasic::~J3DTexGenBlockBasic() {
	nofralloc
#include "asm/JSystem/J3DGraphBase/J3DMatBlock/__dt__19J3DTexGenBlockBasicFv.s"
}
#pragma pop


/* 80322D34-80322D3C 0008+00 s=3 e=0 z=0  None .text      setTexGenNum__21J3DTexGenBlockPatchedFUl                     */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void J3DTexGenBlockPatched::setTexGenNum(u32 param_0) {
	nofralloc
#include "asm/JSystem/J3DGraphBase/J3DMatBlock/setTexGenNum__21J3DTexGenBlockPatchedFUl.s"
}
#pragma pop


/* 80322D3C-80322D48 000C+00 s=3 e=0 z=0  None .text      setTexGenNum__21J3DTexGenBlockPatchedFPCUl                   */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void J3DTexGenBlockPatched::setTexGenNum(u32 const* param_0) {
	nofralloc
#include "asm/JSystem/J3DGraphBase/J3DMatBlock/setTexGenNum__21J3DTexGenBlockPatchedFPCUl.s"
}
#pragma pop


/* 80322D48-80322D50 0008+00 s=3 e=0 z=0  None .text      getTexGenNum__21J3DTexGenBlockPatchedCFv                     */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void J3DTexGenBlockPatched::getTexGenNum() const {
	nofralloc
#include "asm/JSystem/J3DGraphBase/J3DMatBlock/getTexGenNum__21J3DTexGenBlockPatchedCFv.s"
}
#pragma pop


/* 80322D50-80322D64 0014+00 s=3 e=0 z=0  None .text      setTexCoord__21J3DTexGenBlockPatchedFUlPC11J3DTexCoord       */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void J3DTexGenBlockPatched::setTexCoord(u32 param_0, J3DTexCoord const* param_1) {
	nofralloc
#include "asm/JSystem/J3DGraphBase/J3DMatBlock/setTexCoord__21J3DTexGenBlockPatchedFUlPC11J3DTexCoord.s"
}
#pragma pop


/* 80322D64-80322D78 0014+00 s=3 e=0 z=0  None .text      getTexCoord__21J3DTexGenBlockPatchedFUl                      */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void J3DTexGenBlockPatched::getTexCoord(u32 param_0) {
	nofralloc
#include "asm/JSystem/J3DGraphBase/J3DMatBlock/getTexCoord__21J3DTexGenBlockPatchedFUl.s"
}
#pragma pop


/* 80322D78-80322D88 0010+00 s=3 e=0 z=0  None .text      setTexMtx__21J3DTexGenBlockPatchedFUlP9J3DTexMtx             */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void J3DTexGenBlockPatched::setTexMtx(u32 param_0, J3DTexMtx* param_1) {
	nofralloc
#include "asm/JSystem/J3DGraphBase/J3DMatBlock/setTexMtx__21J3DTexGenBlockPatchedFUlP9J3DTexMtx.s"
}
#pragma pop


/* 80322D88-80322D98 0010+00 s=3 e=0 z=0  None .text      getTexMtx__21J3DTexGenBlockPatchedFUl                        */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void J3DTexGenBlockPatched::getTexMtx(u32 param_0) {
	nofralloc
#include "asm/JSystem/J3DGraphBase/J3DMatBlock/getTexMtx__21J3DTexGenBlockPatchedFUl.s"
}
#pragma pop


/* 80322D98-80322DA0 0008+00 s=3 e=0 z=0  None .text      getTexMtxOffset__21J3DTexGenBlockPatchedCFv                  */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void J3DTexGenBlockPatched::getTexMtxOffset() const {
	nofralloc
#include "asm/JSystem/J3DGraphBase/J3DMatBlock/getTexMtxOffset__21J3DTexGenBlockPatchedCFv.s"
}
#pragma pop


/* 80322DA0-80322DA8 0008+00 s=3 e=0 z=0  None .text      setTexMtxOffset__21J3DTexGenBlockPatchedFUl                  */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void J3DTexGenBlockPatched::setTexMtxOffset(u32 param_0) {
	nofralloc
#include "asm/JSystem/J3DGraphBase/J3DMatBlock/setTexMtxOffset__21J3DTexGenBlockPatchedFUl.s"
}
#pragma pop


/* 80322DA8-80322DB4 000C+00 s=1 e=0 z=0  None .text      getType__15J3DTexGenBlock4Fv                                 */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void J3DTexGenBlock4::getType() {
	nofralloc
#include "asm/JSystem/J3DGraphBase/J3DMatBlock/getType__15J3DTexGenBlock4Fv.s"
}
#pragma pop


/* 80322DB4-80322DD8 0024+00 s=1 e=0 z=0  None .text      setNBTScale__15J3DTexGenBlock4F11J3DNBTScale                 */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void J3DTexGenBlock4::setNBTScale(J3DNBTScale param_0) {
	nofralloc
#include "asm/JSystem/J3DGraphBase/J3DMatBlock/setNBTScale__15J3DTexGenBlock4F11J3DNBTScale.s"
}
#pragma pop


/* 80322DD8-80322DFC 0024+00 s=1 e=0 z=0  None .text      setNBTScale__15J3DTexGenBlock4FPC11J3DNBTScale               */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void J3DTexGenBlock4::setNBTScale(J3DNBTScale const* param_0) {
	nofralloc
#include "asm/JSystem/J3DGraphBase/J3DMatBlock/setNBTScale__15J3DTexGenBlock4FPC11J3DNBTScale.s"
}
#pragma pop


/* 80322DFC-80322E04 0008+00 s=1 e=0 z=0  None .text      getNBTScale__15J3DTexGenBlock4Fv                             */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void J3DTexGenBlock4::getNBTScale() {
	nofralloc
#include "asm/JSystem/J3DGraphBase/J3DMatBlock/getNBTScale__15J3DTexGenBlock4Fv.s"
}
#pragma pop


/* 80322E04-80322E70 006C+00 s=1 e=0 z=0  None .text      __dt__15J3DTexGenBlock4Fv                                    */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm J3DTexGenBlock4::~J3DTexGenBlock4() {
	nofralloc
#include "asm/JSystem/J3DGraphBase/J3DMatBlock/__dt__15J3DTexGenBlock4Fv.s"
}
#pragma pop


/* 80322E70-80322E74 0004+00 s=1 e=0 z=0  None .text      load__21J3DTexGenBlockPatchedFv                              */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void J3DTexGenBlockPatched::load() {
	nofralloc
#include "asm/JSystem/J3DGraphBase/J3DMatBlock/load__21J3DTexGenBlockPatchedFv.s"
}
#pragma pop


/* 80322E74-80322E80 000C+00 s=1 e=0 z=0  None .text      getType__21J3DTexGenBlockPatchedFv                           */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void J3DTexGenBlockPatched::getType() {
	nofralloc
#include "asm/JSystem/J3DGraphBase/J3DMatBlock/getType__21J3DTexGenBlockPatchedFv.s"
}
#pragma pop


/* 80322E80-80322E8C 000C+00 s=1 e=0 z=0  None .text      getType__20J3DColorBlockLightOnFv                            */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void J3DColorBlockLightOn::getType() {
	nofralloc
#include "asm/JSystem/J3DGraphBase/J3DMatBlock/getType__20J3DColorBlockLightOnFv.s"
}
#pragma pop


/* 80322E8C-80322EB8 002C+00 s=1 e=0 z=0  None .text      setMatColor__20J3DColorBlockLightOnFUl10J3DGXColor           */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void J3DColorBlockLightOn::setMatColor(u32 param_0, J3DGXColor param_1) {
	nofralloc
#include "asm/JSystem/J3DGraphBase/J3DMatBlock/setMatColor__20J3DColorBlockLightOnFUl10J3DGXColor.s"
}
#pragma pop


/* 80322EB8-80322EE4 002C+00 s=1 e=0 z=0  None .text      setMatColor__20J3DColorBlockLightOnFUlPC10J3DGXColor         */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void J3DColorBlockLightOn::setMatColor(u32 param_0, J3DGXColor const* param_1) {
	nofralloc
#include "asm/JSystem/J3DGraphBase/J3DMatBlock/setMatColor__20J3DColorBlockLightOnFUlPC10J3DGXColor.s"
}
#pragma pop


/* 80322EE4-80322EF8 0014+00 s=1 e=0 z=0  None .text      getMatColor__20J3DColorBlockLightOnFUl                       */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void J3DColorBlockLightOn::getMatColor(u32 param_0) {
	nofralloc
#include "asm/JSystem/J3DGraphBase/J3DMatBlock/getMatColor__20J3DColorBlockLightOnFUl.s"
}
#pragma pop


/* 80322EF8-80322F24 002C+00 s=1 e=0 z=0  None .text      setAmbColor__20J3DColorBlockLightOnFUl10J3DGXColor           */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void J3DColorBlockLightOn::setAmbColor(u32 param_0, J3DGXColor param_1) {
	nofralloc
#include "asm/JSystem/J3DGraphBase/J3DMatBlock/setAmbColor__20J3DColorBlockLightOnFUl10J3DGXColor.s"
}
#pragma pop


/* 80322F24-80322F50 002C+00 s=1 e=0 z=0  None .text      setAmbColor__20J3DColorBlockLightOnFUlPC10J3DGXColor         */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void J3DColorBlockLightOn::setAmbColor(u32 param_0, J3DGXColor const* param_1) {
	nofralloc
#include "asm/JSystem/J3DGraphBase/J3DMatBlock/setAmbColor__20J3DColorBlockLightOnFUlPC10J3DGXColor.s"
}
#pragma pop


/* 80322F50-80322F64 0014+00 s=1 e=0 z=0  None .text      getAmbColor__20J3DColorBlockLightOnFUl                       */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void J3DColorBlockLightOn::getAmbColor(u32 param_0) {
	nofralloc
#include "asm/JSystem/J3DGraphBase/J3DMatBlock/getAmbColor__20J3DColorBlockLightOnFUl.s"
}
#pragma pop


/* 80322F64-80322F70 000C+00 s=1 e=0 z=0  None .text      setColorChanNum__20J3DColorBlockLightOnFPCUc                 */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void J3DColorBlockLightOn::setColorChanNum(u8 const* param_0) {
	nofralloc
#include "asm/JSystem/J3DGraphBase/J3DMatBlock/setColorChanNum__20J3DColorBlockLightOnFPCUc.s"
}
#pragma pop


/* 80322F70-80322F78 0008+00 s=1 e=0 z=0  None .text      setColorChanNum__20J3DColorBlockLightOnFUc                   */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void J3DColorBlockLightOn::setColorChanNum(u8 param_0) {
	nofralloc
#include "asm/JSystem/J3DGraphBase/J3DMatBlock/setColorChanNum__20J3DColorBlockLightOnFUc.s"
}
#pragma pop


/* 80322F78-80322F80 0008+00 s=1 e=0 z=0  None .text      getColorChanNum__20J3DColorBlockLightOnCFv                   */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void J3DColorBlockLightOn::getColorChanNum() const {
	nofralloc
#include "asm/JSystem/J3DGraphBase/J3DMatBlock/getColorChanNum__20J3DColorBlockLightOnCFv.s"
}
#pragma pop


/* 80322F80-80322F94 0014+00 s=1 e=0 z=0  None .text      setColorChan__20J3DColorBlockLightOnFUlPC12J3DColorChan      */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void J3DColorBlockLightOn::setColorChan(u32 param_0, J3DColorChan const* param_1) {
	nofralloc
#include "asm/JSystem/J3DGraphBase/J3DMatBlock/setColorChan__20J3DColorBlockLightOnFUlPC12J3DColorChan.s"
}
#pragma pop


/* 80322F94-80322FA8 0014+00 s=1 e=0 z=0  None .text      setColorChan__20J3DColorBlockLightOnFUlRC12J3DColorChan      */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void J3DColorBlockLightOn::setColorChan(u32 param_0, J3DColorChan const& param_1) {
	nofralloc
#include "asm/JSystem/J3DGraphBase/J3DMatBlock/setColorChan__20J3DColorBlockLightOnFUlRC12J3DColorChan.s"
}
#pragma pop


/* 80322FA8-80322FBC 0014+00 s=1 e=0 z=0  None .text      getColorChan__20J3DColorBlockLightOnFUl                      */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void J3DColorBlockLightOn::getColorChan(u32 param_0) {
	nofralloc
#include "asm/JSystem/J3DGraphBase/J3DMatBlock/getColorChan__20J3DColorBlockLightOnFUl.s"
}
#pragma pop


/* 80322FBC-80322FCC 0010+00 s=1 e=0 z=0  None .text      setLight__20J3DColorBlockLightOnFUlP11J3DLightObj            */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void J3DColorBlockLightOn::setLight(u32 param_0, J3DLightObj* param_1) {
	nofralloc
#include "asm/JSystem/J3DGraphBase/J3DMatBlock/setLight__20J3DColorBlockLightOnFUlP11J3DLightObj.s"
}
#pragma pop


/* 80322FCC-80322FDC 0010+00 s=1 e=0 z=0  None .text      getLight__20J3DColorBlockLightOnFUl                          */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void J3DColorBlockLightOn::getLight(u32 param_0) {
	nofralloc
#include "asm/JSystem/J3DGraphBase/J3DMatBlock/getLight__20J3DColorBlockLightOnFUl.s"
}
#pragma pop


/* 80322FDC-80322FE4 0008+00 s=1 e=0 z=0  None .text      setCullMode__20J3DColorBlockLightOnFUc                       */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void J3DColorBlockLightOn::setCullMode(u8 param_0) {
	nofralloc
#include "asm/JSystem/J3DGraphBase/J3DMatBlock/setCullMode__20J3DColorBlockLightOnFUc.s"
}
#pragma pop


/* 80322FE4-80322FF0 000C+00 s=1 e=0 z=0  None .text      setCullMode__20J3DColorBlockLightOnFPCUc                     */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void J3DColorBlockLightOn::setCullMode(u8 const* param_0) {
	nofralloc
#include "asm/JSystem/J3DGraphBase/J3DMatBlock/setCullMode__20J3DColorBlockLightOnFPCUc.s"
}
#pragma pop


/* 80322FF0-80322FF8 0008+00 s=1 e=0 z=0  None .text      getCullMode__20J3DColorBlockLightOnCFv                       */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void J3DColorBlockLightOn::getCullMode() const {
	nofralloc
#include "asm/JSystem/J3DGraphBase/J3DMatBlock/getCullMode__20J3DColorBlockLightOnCFv.s"
}
#pragma pop


/* 80322FF8-80323000 0008+00 s=1 e=0 z=0  None .text      getMatColorOffset__20J3DColorBlockLightOnCFv                 */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void J3DColorBlockLightOn::getMatColorOffset() const {
	nofralloc
#include "asm/JSystem/J3DGraphBase/J3DMatBlock/getMatColorOffset__20J3DColorBlockLightOnCFv.s"
}
#pragma pop


/* 80323000-80323008 0008+00 s=1 e=0 z=0  None .text      getColorChanOffset__20J3DColorBlockLightOnCFv                */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void J3DColorBlockLightOn::getColorChanOffset() const {
	nofralloc
#include "asm/JSystem/J3DGraphBase/J3DMatBlock/getColorChanOffset__20J3DColorBlockLightOnCFv.s"
}
#pragma pop


/* 80323008-80323010 0008+00 s=1 e=0 z=0  None .text      setMatColorOffset__20J3DColorBlockLightOnFUl                 */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void J3DColorBlockLightOn::setMatColorOffset(u32 param_0) {
	nofralloc
#include "asm/JSystem/J3DGraphBase/J3DMatBlock/setMatColorOffset__20J3DColorBlockLightOnFUl.s"
}
#pragma pop


/* 80323010-80323018 0008+00 s=1 e=0 z=0  None .text      setColorChanOffset__20J3DColorBlockLightOnFUl                */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void J3DColorBlockLightOn::setColorChanOffset(u32 param_0) {
	nofralloc
#include "asm/JSystem/J3DGraphBase/J3DMatBlock/setColorChanOffset__20J3DColorBlockLightOnFUl.s"
}
#pragma pop


/* 80323018-80323074 005C+00 s=1 e=0 z=0  None .text      __dt__20J3DColorBlockLightOnFv                               */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm J3DColorBlockLightOn::~J3DColorBlockLightOn() {
	nofralloc
#include "asm/JSystem/J3DGraphBase/J3DMatBlock/__dt__20J3DColorBlockLightOnFv.s"
}
#pragma pop


/* 80323074-80323080 000C+00 s=1 e=0 z=0  None .text      getType__22J3DColorBlockAmbientOnFv                          */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void J3DColorBlockAmbientOn::getType() {
	nofralloc
#include "asm/JSystem/J3DGraphBase/J3DMatBlock/getType__22J3DColorBlockAmbientOnFv.s"
}
#pragma pop


/* 80323080-803230AC 002C+00 s=1 e=0 z=0  None .text      setAmbColor__22J3DColorBlockAmbientOnFUl10J3DGXColor         */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void J3DColorBlockAmbientOn::setAmbColor(u32 param_0, J3DGXColor param_1) {
	nofralloc
#include "asm/JSystem/J3DGraphBase/J3DMatBlock/setAmbColor__22J3DColorBlockAmbientOnFUl10J3DGXColor.s"
}
#pragma pop


/* 803230AC-803230D8 002C+00 s=1 e=0 z=0  None .text      setAmbColor__22J3DColorBlockAmbientOnFUlPC10J3DGXColor       */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void J3DColorBlockAmbientOn::setAmbColor(u32 param_0, J3DGXColor const* param_1) {
	nofralloc
#include "asm/JSystem/J3DGraphBase/J3DMatBlock/setAmbColor__22J3DColorBlockAmbientOnFUlPC10J3DGXColor.s"
}
#pragma pop


/* 803230D8-803230EC 0014+00 s=1 e=0 z=0  None .text      getAmbColor__22J3DColorBlockAmbientOnFUl                     */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void J3DColorBlockAmbientOn::getAmbColor(u32 param_0) {
	nofralloc
#include "asm/JSystem/J3DGraphBase/J3DMatBlock/getAmbColor__22J3DColorBlockAmbientOnFUl.s"
}
#pragma pop


/* ############################################################################################## */
/* 803CEA34-803CEAC8 0090+04 s=1 e=2 z=0  None .data      __vt__21J3DColorBlockLightOff                                */
SECTION_DATA void* __vt__21J3DColorBlockLightOff[36 + 1 /* padding */] = {
	/* 0    */ (void*)NULL /* RTTI */,
	/* 1    */ (void*)NULL,
	/* 2    */ (void*)load__21J3DColorBlockLightOffFv,
	/* 3    */ (void*)reset__21J3DColorBlockLightOffFP13J3DColorBlock,
	/* 4    */ (void*)patch__21J3DColorBlockLightOffFv,
	/* 5    */ (void*)patchMatColor__21J3DColorBlockLightOffFv,
	/* 6    */ (void*)patchLight__21J3DColorBlockLightOffFv,
	/* 7    */ (void*)diff__21J3DColorBlockLightOffFUl,
	/* 8    */ (void*)diffAmbColor__13J3DColorBlockFv,
	/* 9    */ (void*)diffMatColor__21J3DColorBlockLightOffFv,
	/* 10   */ (void*)diffColorChan__21J3DColorBlockLightOffFv,
	/* 11   */ (void*)diffLightObj__13J3DColorBlockFUl,
	/* 12   */ (void*)countDLSize__21J3DColorBlockLightOffFv,
	/* 13   */ (void*)getType__21J3DColorBlockLightOffFv,
	/* 14   */ (void*)setMatColor__21J3DColorBlockLightOffFUlPC10J3DGXColor,
	/* 15   */ (void*)setMatColor__21J3DColorBlockLightOffFUl10J3DGXColor,
	/* 16   */ (void*)getMatColor__21J3DColorBlockLightOffFUl,
	/* 17   */ (void*)setAmbColor__13J3DColorBlockFUlPC10J3DGXColor,
	/* 18   */ (void*)setAmbColor__13J3DColorBlockFUl10J3DGXColor,
	/* 19   */ (void*)getAmbColor__13J3DColorBlockFUl,
	/* 20   */ (void*)setColorChanNum__21J3DColorBlockLightOffFUc,
	/* 21   */ (void*)setColorChanNum__21J3DColorBlockLightOffFPCUc,
	/* 22   */ (void*)getColorChanNum__21J3DColorBlockLightOffCFv,
	/* 23   */ (void*)setColorChan__21J3DColorBlockLightOffFUlRC12J3DColorChan,
	/* 24   */ (void*)setColorChan__21J3DColorBlockLightOffFUlPC12J3DColorChan,
	/* 25   */ (void*)getColorChan__21J3DColorBlockLightOffFUl,
	/* 26   */ (void*)setLight__13J3DColorBlockFUlP11J3DLightObj,
	/* 27   */ (void*)getLight__13J3DColorBlockFUl,
	/* 28   */ (void*)setCullMode__21J3DColorBlockLightOffFPCUc,
	/* 29   */ (void*)setCullMode__21J3DColorBlockLightOffFUc,
	/* 30   */ (void*)getCullMode__21J3DColorBlockLightOffCFv,
	/* 31   */ (void*)getMatColorOffset__21J3DColorBlockLightOffCFv,
	/* 32   */ (void*)getColorChanOffset__21J3DColorBlockLightOffCFv,
	/* 33   */ (void*)setMatColorOffset__21J3DColorBlockLightOffFUl,
	/* 34   */ (void*)setColorChanOffset__21J3DColorBlockLightOffFUl,
	/* 35   */ (void*)__dt__21J3DColorBlockLightOffFv,
	/* padding */
	NULL,
};

/* 803230EC-80323158 006C+00 s=1 e=0 z=0  None .text      __dt__22J3DColorBlockAmbientOnFv                             */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm J3DColorBlockAmbientOn::~J3DColorBlockAmbientOn() {
	nofralloc
#include "asm/JSystem/J3DGraphBase/J3DMatBlock/__dt__22J3DColorBlockAmbientOnFv.s"
}
#pragma pop


/* 80323158-80323184 002C+00 s=2 e=0 z=0  None .text      setMatColor__21J3DColorBlockLightOffFUl10J3DGXColor          */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void J3DColorBlockLightOff::setMatColor(u32 param_0, J3DGXColor param_1) {
	nofralloc
#include "asm/JSystem/J3DGraphBase/J3DMatBlock/setMatColor__21J3DColorBlockLightOffFUl10J3DGXColor.s"
}
#pragma pop


/* 80323184-803231B0 002C+00 s=2 e=0 z=0  None .text      setMatColor__21J3DColorBlockLightOffFUlPC10J3DGXColor        */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void J3DColorBlockLightOff::setMatColor(u32 param_0, J3DGXColor const* param_1) {
	nofralloc
#include "asm/JSystem/J3DGraphBase/J3DMatBlock/setMatColor__21J3DColorBlockLightOffFUlPC10J3DGXColor.s"
}
#pragma pop


/* 803231B0-803231C4 0014+00 s=2 e=0 z=0  None .text      getMatColor__21J3DColorBlockLightOffFUl                      */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void J3DColorBlockLightOff::getMatColor(u32 param_0) {
	nofralloc
#include "asm/JSystem/J3DGraphBase/J3DMatBlock/getMatColor__21J3DColorBlockLightOffFUl.s"
}
#pragma pop


/* 803231C4-803231D0 000C+00 s=2 e=0 z=0  None .text      setColorChanNum__21J3DColorBlockLightOffFPCUc                */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void J3DColorBlockLightOff::setColorChanNum(u8 const* param_0) {
	nofralloc
#include "asm/JSystem/J3DGraphBase/J3DMatBlock/setColorChanNum__21J3DColorBlockLightOffFPCUc.s"
}
#pragma pop


/* 803231D0-803231D8 0008+00 s=2 e=0 z=0  None .text      setColorChanNum__21J3DColorBlockLightOffFUc                  */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void J3DColorBlockLightOff::setColorChanNum(u8 param_0) {
	nofralloc
#include "asm/JSystem/J3DGraphBase/J3DMatBlock/setColorChanNum__21J3DColorBlockLightOffFUc.s"
}
#pragma pop


/* 803231D8-803231E0 0008+00 s=2 e=0 z=0  None .text      getColorChanNum__21J3DColorBlockLightOffCFv                  */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void J3DColorBlockLightOff::getColorChanNum() const {
	nofralloc
#include "asm/JSystem/J3DGraphBase/J3DMatBlock/getColorChanNum__21J3DColorBlockLightOffCFv.s"
}
#pragma pop


/* 803231E0-803231F4 0014+00 s=2 e=0 z=0  None .text      setColorChan__21J3DColorBlockLightOffFUlPC12J3DColorChan     */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void J3DColorBlockLightOff::setColorChan(u32 param_0, J3DColorChan const* param_1) {
	nofralloc
#include "asm/JSystem/J3DGraphBase/J3DMatBlock/setColorChan__21J3DColorBlockLightOffFUlPC12J3DColorChan.s"
}
#pragma pop


/* 803231F4-80323208 0014+00 s=2 e=0 z=0  None .text      setColorChan__21J3DColorBlockLightOffFUlRC12J3DColorChan     */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void J3DColorBlockLightOff::setColorChan(u32 param_0, J3DColorChan const& param_1) {
	nofralloc
#include "asm/JSystem/J3DGraphBase/J3DMatBlock/setColorChan__21J3DColorBlockLightOffFUlRC12J3DColorChan.s"
}
#pragma pop


/* 80323208-8032321C 0014+00 s=2 e=0 z=0  None .text      getColorChan__21J3DColorBlockLightOffFUl                     */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void J3DColorBlockLightOff::getColorChan(u32 param_0) {
	nofralloc
#include "asm/JSystem/J3DGraphBase/J3DMatBlock/getColorChan__21J3DColorBlockLightOffFUl.s"
}
#pragma pop


/* 8032321C-80323224 0008+00 s=2 e=0 z=0  None .text      setCullMode__21J3DColorBlockLightOffFUc                      */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void J3DColorBlockLightOff::setCullMode(u8 param_0) {
	nofralloc
#include "asm/JSystem/J3DGraphBase/J3DMatBlock/setCullMode__21J3DColorBlockLightOffFUc.s"
}
#pragma pop


/* 80323224-80323230 000C+00 s=2 e=0 z=0  None .text      setCullMode__21J3DColorBlockLightOffFPCUc                    */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void J3DColorBlockLightOff::setCullMode(u8 const* param_0) {
	nofralloc
#include "asm/JSystem/J3DGraphBase/J3DMatBlock/setCullMode__21J3DColorBlockLightOffFPCUc.s"
}
#pragma pop


/* 80323230-80323238 0008+00 s=2 e=0 z=0  None .text      getCullMode__21J3DColorBlockLightOffCFv                      */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void J3DColorBlockLightOff::getCullMode() const {
	nofralloc
#include "asm/JSystem/J3DGraphBase/J3DMatBlock/getCullMode__21J3DColorBlockLightOffCFv.s"
}
#pragma pop


/* 80323238-80323240 0008+00 s=2 e=0 z=0  None .text      getMatColorOffset__21J3DColorBlockLightOffCFv                */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void J3DColorBlockLightOff::getMatColorOffset() const {
	nofralloc
#include "asm/JSystem/J3DGraphBase/J3DMatBlock/getMatColorOffset__21J3DColorBlockLightOffCFv.s"
}
#pragma pop


/* 80323240-80323248 0008+00 s=2 e=0 z=0  None .text      getColorChanOffset__21J3DColorBlockLightOffCFv               */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void J3DColorBlockLightOff::getColorChanOffset() const {
	nofralloc
#include "asm/JSystem/J3DGraphBase/J3DMatBlock/getColorChanOffset__21J3DColorBlockLightOffCFv.s"
}
#pragma pop


/* 80323248-80323250 0008+00 s=2 e=0 z=0  None .text      setMatColorOffset__21J3DColorBlockLightOffFUl                */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void J3DColorBlockLightOff::setMatColorOffset(u32 param_0) {
	nofralloc
#include "asm/JSystem/J3DGraphBase/J3DMatBlock/setMatColorOffset__21J3DColorBlockLightOffFUl.s"
}
#pragma pop


/* 80323250-80323258 0008+00 s=2 e=0 z=0  None .text      setColorChanOffset__21J3DColorBlockLightOffFUl               */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void J3DColorBlockLightOff::setColorChanOffset(u32 param_0) {
	nofralloc
#include "asm/JSystem/J3DGraphBase/J3DMatBlock/setColorChanOffset__21J3DColorBlockLightOffFUl.s"
}
#pragma pop


/* 80323258-80323264 000C+00 s=1 e=0 z=0  None .text      getType__13J3DPEBlockXluFv                                   */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void J3DPEBlockXlu::getType() {
	nofralloc
#include "asm/JSystem/J3DGraphBase/J3DMatBlock/getType__13J3DPEBlockXluFv.s"
}
#pragma pop


/* 80323264-803232C0 005C+00 s=1 e=0 z=0  None .text      __dt__13J3DPEBlockXluFv                                      */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm J3DPEBlockXlu::~J3DPEBlockXlu() {
	nofralloc
#include "asm/JSystem/J3DGraphBase/J3DMatBlock/__dt__13J3DPEBlockXluFv.s"
}
#pragma pop


/* 803232C0-803232CC 000C+00 s=1 e=0 z=0  None .text      getType__17J3DPEBlockTexEdgeFv                               */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void J3DPEBlockTexEdge::getType() {
	nofralloc
#include "asm/JSystem/J3DGraphBase/J3DMatBlock/getType__17J3DPEBlockTexEdgeFv.s"
}
#pragma pop


/* 803232CC-80323328 005C+00 s=1 e=0 z=0  None .text      __dt__17J3DPEBlockTexEdgeFv                                  */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm J3DPEBlockTexEdge::~J3DPEBlockTexEdge() {
	nofralloc
#include "asm/JSystem/J3DGraphBase/J3DMatBlock/__dt__17J3DPEBlockTexEdgeFv.s"
}
#pragma pop


/* 80323328-80323334 000C+00 s=1 e=0 z=0  None .text      getType__13J3DPEBlockOpaFv                                   */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void J3DPEBlockOpa::getType() {
	nofralloc
#include "asm/JSystem/J3DGraphBase/J3DMatBlock/getType__13J3DPEBlockOpaFv.s"
}
#pragma pop


/* 80323334-80323390 005C+00 s=1 e=0 z=0  None .text      __dt__13J3DPEBlockOpaFv                                      */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm J3DPEBlockOpa::~J3DPEBlockOpa() {
	nofralloc
#include "asm/JSystem/J3DGraphBase/J3DMatBlock/__dt__13J3DPEBlockOpaFv.s"
}
#pragma pop


/* 80323390-8032339C 000C+00 s=1 e=0 z=0  None .text      getType__15J3DIndBlockFullFv                                 */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void J3DIndBlockFull::getType() {
	nofralloc
#include "asm/JSystem/J3DGraphBase/J3DMatBlock/getType__15J3DIndBlockFullFv.s"
}
#pragma pop


/* 8032339C-803233A4 0008+00 s=1 e=0 z=0  None .text      setIndTexStageNum__15J3DIndBlockFullFUc                      */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void J3DIndBlockFull::setIndTexStageNum(u8 param_0) {
	nofralloc
#include "asm/JSystem/J3DGraphBase/J3DMatBlock/setIndTexStageNum__15J3DIndBlockFullFUc.s"
}
#pragma pop


/* 803233A4-803233AC 0008+00 s=1 e=0 z=0  None .text      getIndTexStageNum__15J3DIndBlockFullCFv                      */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void J3DIndBlockFull::getIndTexStageNum() const {
	nofralloc
#include "asm/JSystem/J3DGraphBase/J3DMatBlock/getIndTexStageNum__15J3DIndBlockFullCFv.s"
}
#pragma pop


/* 803233AC-803233C0 0014+00 s=1 e=0 z=0  None .text      setIndTexOrder__15J3DIndBlockFullFUl14J3DIndTexOrder         */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void J3DIndBlockFull::setIndTexOrder(u32 param_0, J3DIndTexOrder param_1) {
	nofralloc
#include "asm/JSystem/J3DGraphBase/J3DMatBlock/setIndTexOrder__15J3DIndBlockFullFUl14J3DIndTexOrder.s"
}
#pragma pop


/* 803233C0-803233D4 0014+00 s=1 e=0 z=0  None .text      setIndTexOrder__15J3DIndBlockFullFUlPC14J3DIndTexOrder       */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void J3DIndBlockFull::setIndTexOrder(u32 param_0, J3DIndTexOrder const* param_1) {
	nofralloc
#include "asm/JSystem/J3DGraphBase/J3DMatBlock/setIndTexOrder__15J3DIndBlockFullFUlPC14J3DIndTexOrder.s"
}
#pragma pop


/* 803233D4-803233E8 0014+00 s=1 e=0 z=0  None .text      getIndTexOrder__15J3DIndBlockFullFUl                         */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void J3DIndBlockFull::getIndTexOrder(u32 param_0) {
	nofralloc
#include "asm/JSystem/J3DGraphBase/J3DMatBlock/getIndTexOrder__15J3DIndBlockFullFUl.s"
}
#pragma pop


/* 803233E8-8032341C 0034+00 s=1 e=0 z=0  None .text      setIndTexMtx__15J3DIndBlockFullFUl12J3DIndTexMtx             */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void J3DIndBlockFull::setIndTexMtx(u32 param_0, J3DIndTexMtx param_1) {
	nofralloc
#include "asm/JSystem/J3DGraphBase/J3DMatBlock/setIndTexMtx__15J3DIndBlockFullFUl12J3DIndTexMtx.s"
}
#pragma pop


/* 8032341C-80323450 0034+00 s=1 e=0 z=0  None .text      setIndTexMtx__15J3DIndBlockFullFUlPC12J3DIndTexMtx           */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void J3DIndBlockFull::setIndTexMtx(u32 param_0, J3DIndTexMtx const* param_1) {
	nofralloc
#include "asm/JSystem/J3DGraphBase/J3DMatBlock/setIndTexMtx__15J3DIndBlockFullFUlPC12J3DIndTexMtx.s"
}
#pragma pop


/* 80323450-80323464 0014+00 s=1 e=0 z=0  None .text      getIndTexMtx__15J3DIndBlockFullFUl                           */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void J3DIndBlockFull::getIndTexMtx(u32 param_0) {
	nofralloc
#include "asm/JSystem/J3DGraphBase/J3DMatBlock/getIndTexMtx__15J3DIndBlockFullFUl.s"
}
#pragma pop


/* 80323464-80323478 0014+00 s=1 e=0 z=0  None .text      setIndTexCoordScale__15J3DIndBlockFullFUl19J3DIndTexCoordScale */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void J3DIndBlockFull::setIndTexCoordScale(u32 param_0, J3DIndTexCoordScale param_1) {
	nofralloc
#include "asm/JSystem/J3DGraphBase/J3DMatBlock/setIndTexCoordScale__15J3DIndBlockFullFUl19J3DIndTexCoordScale.s"
}
#pragma pop


/* 80323478-8032348C 0014+00 s=1 e=0 z=0  None .text      setIndTexCoordScale__15J3DIndBlockFullFUlPC19J3DIndTexCoordScale */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void J3DIndBlockFull::setIndTexCoordScale(u32 param_0, J3DIndTexCoordScale const* param_1) {
	nofralloc
#include "asm/JSystem/J3DGraphBase/J3DMatBlock/setIndTexCoordScale__15J3DIndBlockFullFUlPC19J3DIndTexCoordScale.s"
}
#pragma pop


/* 8032348C-803234A0 0014+00 s=1 e=0 z=0  None .text      getIndTexCoordScale__15J3DIndBlockFullFUl                    */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void J3DIndBlockFull::getIndTexCoordScale(u32 param_0) {
	nofralloc
#include "asm/JSystem/J3DGraphBase/J3DMatBlock/getIndTexCoordScale__15J3DIndBlockFullFUl.s"
}
#pragma pop


/* 803234A0-8032353C 009C+00 s=1 e=0 z=0  None .text      __dt__15J3DIndBlockFullFv                                    */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm J3DIndBlockFull::~J3DIndBlockFull() {
	nofralloc
#include "asm/JSystem/J3DGraphBase/J3DMatBlock/__dt__15J3DIndBlockFullFv.s"
}
#pragma pop


/* 8032353C-80323540 0004+00 s=1 e=1 z=0  None .text      patchTexNo__11J3DTevBlockFv                                  */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void J3DTevBlock::patchTexNo() {
	nofralloc
#include "asm/JSystem/J3DGraphBase/J3DMatBlock/patchTexNo__11J3DTevBlockFv.s"
}
#pragma pop


/* 80323540-80323544 0004+00 s=1 e=1 z=0  None .text      patchTevReg__11J3DTevBlockFv                                 */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void J3DTevBlock::patchTevReg() {
	nofralloc
#include "asm/JSystem/J3DGraphBase/J3DMatBlock/patchTevReg__11J3DTevBlockFv.s"
}
#pragma pop


/* 80323544-80323548 0004+00 s=1 e=1 z=0  None .text      setTexNo__11J3DTevBlockFUlPCUs                               */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void J3DTevBlock::setTexNo(u32 param_0, u16 const* param_1) {
	nofralloc
#include "asm/JSystem/J3DGraphBase/J3DMatBlock/setTexNo__11J3DTevBlockFUlPCUs.s"
}
#pragma pop


/* 80323548-8032354C 0004+00 s=1 e=1 z=0  None .text      setTevOrder__11J3DTevBlockFUlPC11J3DTevOrder                 */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void J3DTevBlock::setTevOrder(u32 param_0, J3DTevOrder const* param_1) {
	nofralloc
#include "asm/JSystem/J3DGraphBase/J3DMatBlock/setTevOrder__11J3DTevBlockFUlPC11J3DTevOrder.s"
}
#pragma pop


/* 8032354C-80323550 0004+00 s=1 e=1 z=0  None .text      setTevStageNum__11J3DTevBlockFPCUc                           */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void J3DTevBlock::setTevStageNum(u8 const* param_0) {
	nofralloc
#include "asm/JSystem/J3DGraphBase/J3DMatBlock/setTevStageNum__11J3DTevBlockFPCUc.s"
}
#pragma pop


/* 80323550-80323554 0004+00 s=1 e=1 z=0  None .text      setTevStage__11J3DTevBlockFUlPC11J3DTevStage                 */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void J3DTevBlock::setTevStage(u32 param_0, J3DTevStage const* param_1) {
	nofralloc
#include "asm/JSystem/J3DGraphBase/J3DMatBlock/setTevStage__11J3DTevBlockFUlPC11J3DTevStage.s"
}
#pragma pop


/* 80323554-80323558 0004+00 s=1 e=1 z=0  None .text      setIndTevStage__11J3DTevBlockFUlPC14J3DIndTevStage           */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void J3DTevBlock::setIndTevStage(u32 param_0, J3DIndTevStage const* param_1) {
	nofralloc
#include "asm/JSystem/J3DGraphBase/J3DMatBlock/setIndTevStage__11J3DTevBlockFUlPC14J3DIndTevStage.s"
}
#pragma pop


/* 80323558-80323560 0008+00 s=1 e=1 z=0  None .text      getTexNoOffset__11J3DTevBlockCFv                             */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void J3DTevBlock::getTexNoOffset() const {
	nofralloc
#include "asm/JSystem/J3DGraphBase/J3DMatBlock/getTexNoOffset__11J3DTevBlockCFv.s"
}
#pragma pop


/* 80323560-8032356C 000C+00 s=1 e=0 z=0  None .text      getType__21J3DColorBlockLightOffFv                           */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void J3DColorBlockLightOff::getType() {
	nofralloc
#include "asm/JSystem/J3DGraphBase/J3DMatBlock/getType__21J3DColorBlockLightOffFv.s"
}
#pragma pop


/* 8032356C-80323590 0024+00 s=0 e=1 z=0  None .text      __sinit_J3DMatBlock_cpp                                      */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
extern "C" asm void __sinit_J3DMatBlock_cpp() {
	nofralloc
#include "asm/JSystem/J3DGraphBase/J3DMatBlock/__sinit_J3DMatBlock_cpp.s"
}
#pragma pop


