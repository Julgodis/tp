// 
// Generated By: dol2asm
// Translation Unit: J3DTevs
// 

#include "dol2asm.h"
#include "dolphin/types.h"
#include "JSystem/J3DGraphBase/J3DTevs.h"

// 
// Types:
// 

struct J3DLightObj {
	/* 80323590 */ void load(u32) const;
};

struct J3DTexCoord {
};

struct J3DTexMtx {
	/* 803238C4 */ void load(u32) const;
	/* 80323900 */ void calc(f32 const (* )[4]);
	/* 80323920 */ void calcTexMtx(f32 const (* )[4]);
	/* 80323C0C */ void calcPostTexMtx(f32 const (* )[4]);
	/* 80324358 */ void loadTexMtx(u32) const;
	/* 803243BC */ void loadPostTexMtx(u32) const;
};

struct J3DNBTScale {
};

struct _GXTexMtxType {
};

struct _GXLightID {
};

struct _GXColor {
};

struct _GXTexGenType {
};

struct _GXTexGenSrc {
};

struct _GXTexMapID {
};

struct _GXTexWrapMode {
};

struct _GXTexFilter {
};

struct _GXAnisotropy {
};

struct _GXTexFmt {
};

struct _GXTlutFmt {
};

struct _GXTlutSize {
};

struct J3DTextureSRTInfo {
};

struct Vec {
};

// 
// Forward References:
// 

void loadTexCoordGens(u32, J3DTexCoord*); // 2
void isTexNoReg(void*); // 2
void getTexNoReg(void*); // 2
void loadTexNo(u32, u16 const&); // 2
void patchTexNo_PtrToIdx(u32, u16 const&); // 2
void loadNBTScale(J3DNBTScale&); // 2
void makeTexCoordTable(); // 2
void makeAlphaCmpTable(); // 2
void makeZModeTable(); // 2
void makeTevSwapTable(); // 2
static void J3DGDLoadTexMtxImm(f32 (* )[4], u32, _GXTexMtxType); // 2
static void J3DGDLoadPostTexMtxImm(f32 (* )[4], u32); // 2

extern "C" void load__11J3DLightObjCFUl(); // 1
extern "C" void loadTexCoordGens__FUlP11J3DTexCoord(); // 1
extern "C" void load__9J3DTexMtxCFUl(); // 1
extern "C" void calc__9J3DTexMtxFPA4_Cf(); // 1
extern "C" void calcTexMtx__9J3DTexMtxFPA4_Cf(); // 1
extern "C" void calcPostTexMtx__9J3DTexMtxFPA4_Cf(); // 1
extern "C" void isTexNoReg__FPv(); // 1
extern "C" void getTexNoReg__FPv(); // 1
extern "C" void loadTexNo__FUlRCUs(); // 1
extern "C" void patchTexNo_PtrToIdx__FUlRCUs(); // 1
extern "C" void loadNBTScale__FR11J3DNBTScale(); // 1
extern "C" void makeTexCoordTable__Fv(); // 1
extern "C" void makeAlphaCmpTable__Fv(); // 1
extern "C" void makeZModeTable__Fv(); // 1
extern "C" void makeTevSwapTable__Fv(); // 1
extern "C" void loadTexMtx__9J3DTexMtxCFUl(); // 1
extern "C" void loadPostTexMtx__9J3DTexMtxCFUl(); // 1
extern "C" static void J3DGDLoadTexMtxImm__FPA4_fUl13_GXTexMtxType(); // 1
extern "C" static void J3DGDLoadPostTexMtxImm__FPA4_fUl(); // 1
extern "C" extern u8 const j3dDefaultLightInfo[52];
extern "C" extern u8 const j3dDefaultTexCoordInfo[32];
extern "C" extern u8 const j3dDefaultTexMtxInfo[100];
extern "C" extern u8 const j3dDefaultIndTexMtxInfo[28];
extern "C" extern u8 const j3dDefaultTevStageInfo[20];
extern "C" extern u8 const j3dDefaultIndTevStageInfo[12];
extern "C" extern u8 const j3dDefaultFogInfo[44];
extern "C" extern u8 const j3dDefaultNBTScaleInfo[16];
extern "C" extern u8 j3dTevSwapTableTable[1024];
extern "C" extern u8 j3dAlphaCmpTable[768];
extern "C" extern u8 j3dZModeTable[96];
extern "C" extern u32 j3dDefaultColInfo;
extern "C" extern u32 j3dDefaultAmbInfo;
extern "C" extern u32 data_804563C8;
extern "C" extern u32 j3dDefaultTevOrderInfoNull;
extern "C" extern u32 j3dDefaultIndTexOrderNull;
extern "C" extern u32 j3dDefaultTevColor;
extern "C" extern u32 data_804563D8;
extern "C" extern u8 j3dDefaultIndTexCoordScaleInfo[4];
extern "C" extern u32 j3dDefaultTevKColor;
extern "C" extern u8 j3dDefaultTevSwapMode[4];
extern "C" extern u32 j3dDefaultTevSwapModeTable;
extern "C" extern u32 j3dDefaultBlendInfo;
extern "C" extern u8 j3dDefaultColorChanInfo[8];
extern "C" extern u8 struct_804563F8[4];
extern "C" extern u16 j3dDefaultZModeID[1 + 1 /* padding */];

// 
// External References:
// 

void J3DGDSetLightAttn(_GXLightID, f32, f32, f32, f32, f32, f32); // 2
void J3DGDSetLightColor(_GXLightID, _GXColor); // 2
void J3DGDSetLightPos(_GXLightID, f32, f32, f32); // 2
void J3DGDSetLightDir(_GXLightID, f32, f32, f32); // 2
void J3DGDSetTexCoordGen(_GXTexGenType, _GXTexGenSrc); // 2
void J3DGDSetTexLookupMode(_GXTexMapID, _GXTexWrapMode, _GXTexWrapMode, _GXTexFilter, _GXTexFilter, f32, f32, f32, u8, u8, _GXAnisotropy); // 2
void J3DGDSetTexImgAttr(_GXTexMapID, u16, u16, _GXTexFmt); // 2
void J3DGDSetTexImgPtr(_GXTexMapID, void*); // 2
void J3DGDSetTexImgPtrRaw(_GXTexMapID, u32); // 2
void J3DGDSetTexTlut(_GXTexMapID, u32, _GXTlutFmt); // 2
void J3DGDLoadTlut(void*, u32, _GXTlutSize); // 2
void J3DGetTextureMtx(J3DTextureSRTInfo const&, Vec const&, f32 (* )[4]); // 2
void J3DGetTextureMtxOld(J3DTextureSRTInfo const&, Vec const&, f32 (* )[4]); // 2
void J3DGetTextureMtxMaya(J3DTextureSRTInfo const&, f32 (* )[4]); // 2
void J3DGetTextureMtxMayaOld(J3DTextureSRTInfo const&, f32 (* )[4]); // 2
void J3DMtxProjConcat(f32 (* )[4], f32 (* )[4], f32 (* )[4]); // 2

extern "C" void J3DGDSetLightAttn__F10_GXLightIDffffff(); // 1
extern "C" void J3DGDSetLightColor__F10_GXLightID8_GXColor(); // 1
extern "C" void J3DGDSetLightPos__F10_GXLightIDfff(); // 1
extern "C" void J3DGDSetLightDir__F10_GXLightIDfff(); // 1
extern "C" void J3DGDSetTexCoordGen__F13_GXTexGenType12_GXTexGenSrc(); // 1
extern "C" void J3DGDSetTexLookupMode__F11_GXTexMapID14_GXTexWrapMode14_GXTexWrapMode12_GXTexFilter12_GXTexFilterfffUcUc13_GXAnisotropy(); // 1
extern "C" void J3DGDSetTexImgAttr__F11_GXTexMapIDUsUs9_GXTexFmt(); // 1
extern "C" void J3DGDSetTexImgPtr__F11_GXTexMapIDPv(); // 1
extern "C" void J3DGDSetTexImgPtrRaw__F11_GXTexMapIDUl(); // 1
extern "C" void J3DGDSetTexTlut__F11_GXTexMapIDUl10_GXTlutFmt(); // 1
extern "C" void J3DGDLoadTlut__FPvUl11_GXTlutSize(); // 1
extern "C" void J3DGetTextureMtx__FRC17J3DTextureSRTInfoRC3VecPA4_f(); // 1
extern "C" void J3DGetTextureMtxOld__FRC17J3DTextureSRTInfoRC3VecPA4_f(); // 1
extern "C" void J3DGetTextureMtxMaya__FRC17J3DTextureSRTInfoPA4_f(); // 1
extern "C" void J3DGetTextureMtxMayaOld__FRC17J3DTextureSRTInfoPA4_f(); // 1
extern "C" void J3DMtxProjConcat__FPA4_fPA4_fPA4_f(); // 1
extern "C" void PSMTXConcat(); // 1
extern "C" void GDOverflowed(); // 1
extern "C" void _savegpr_26(); // 1
extern "C" void _savegpr_28(); // 1
extern "C" void _restgpr_26(); // 1
extern "C" void _restgpr_28(); // 1
extern "C" extern u8 j3dSys[284];
extern "C" extern u8 sTexCoordScaleTable__6J3DSys[64 + 4 /* padding */];
extern "C" extern u8 __GDCurrentDL[4];

// 
// Declarations:
// 

/* 80323590-80323644 00B4+00 rc=3 efc=3 rfr=False None .text      load__11J3DLightObjCFUl                                      */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void J3DLightObj::load(u32 field_0) const {
	nofralloc
#include "asm/JSystem/J3DGraphBase/J3DTevs/load__11J3DLightObjCFUl.s"
}
#pragma pop


/* 80323644-803238C4 0280+00 rc=3 efc=3 rfr=False None .text      loadTexCoordGens__FUlP11J3DTexCoord                          */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void loadTexCoordGens(u32 field_0, J3DTexCoord* field_1) {
	nofralloc
#include "asm/JSystem/J3DGraphBase/J3DTevs/loadTexCoordGens__FUlP11J3DTexCoord.s"
}
#pragma pop


/* 803238C4-80323900 003C+00 rc=6 efc=6 rfr=False None .text      load__9J3DTexMtxCFUl                                         */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void J3DTexMtx::load(u32 field_0) const {
	nofralloc
#include "asm/JSystem/J3DGraphBase/J3DTevs/load__9J3DTexMtxCFUl.s"
}
#pragma pop


/* 80323900-80323920 0020+00 rc=2 efc=2 rfr=False None .text      calc__9J3DTexMtxFPA4_Cf                                      */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void J3DTexMtx::calc(f32 const (* field_0)[4]) {
	nofralloc
#include "asm/JSystem/J3DGraphBase/J3DTevs/calc__9J3DTexMtxFPA4_Cf.s"
}
#pragma pop


/* ############################################################################################## */
/* 803CEAC8-803CEAF8 0030+00 rc=1 efc=0 rfr=False None .data      qMtx$1001                                                    */
SECTION_DATA static u8 data_803CEAC8[48] = {
	0x3F, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x3F, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
	0x00, 0x00, 0x00, 0x00, 0xBF, 0x00, 0x00, 0x00, 0x3F, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x3F, 0x80, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
};

/* 803CEAF8-803CEB28 0030+00 rc=1 efc=0 rfr=False None .data      qMtx2$1002                                                   */
SECTION_DATA static u8 data_803CEAF8[48] = {
	0x3F, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x3F, 0x00, 0x00, 0x00,
	0x00, 0x00, 0x00, 0x00, 0xBF, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x3F, 0x00, 0x00, 0x00,
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x3F, 0x80, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
};

/* 803CEB28-803CEB58 0030+00 rc=1 efc=0 rfr=False None .data      @1059                                                        */
SECTION_DATA static void* J3DTevs__lit_1059[12] = {
	/* 0    */ (void*)(((char*)calcTexMtx__9J3DTexMtxFPA4_Cf)+0x2A4),
	/* 1    */ (void*)(((char*)calcTexMtx__9J3DTexMtxFPA4_Cf)+0x1C8),
	/* 2    */ (void*)(((char*)calcTexMtx__9J3DTexMtxFPA4_Cf)+0x20C),
	/* 3    */ (void*)(((char*)calcTexMtx__9J3DTexMtxFPA4_Cf)+0x20C),
	/* 4    */ (void*)(((char*)calcTexMtx__9J3DTexMtxFPA4_Cf)+0x260),
	/* 5    */ (void*)(((char*)calcTexMtx__9J3DTexMtxFPA4_Cf)+0x20C),
	/* 6    */ (void*)(((char*)calcTexMtx__9J3DTexMtxFPA4_Cf)+0x170),
	/* 7    */ (void*)(((char*)calcTexMtx__9J3DTexMtxFPA4_Cf)+0xB0),
	/* 8    */ (void*)(((char*)calcTexMtx__9J3DTexMtxFPA4_Cf)+0x48),
	/* 9    */ (void*)(((char*)calcTexMtx__9J3DTexMtxFPA4_Cf)+0x48),
	/* 10   */ (void*)(((char*)calcTexMtx__9J3DTexMtxFPA4_Cf)+0x108),
	/* 11   */ (void*)(((char*)calcTexMtx__9J3DTexMtxFPA4_Cf)+0x48),
};

/* 80323920-80323C0C 02EC+00 rc=2 efc=0 rfr=False None .text      calcTexMtx__9J3DTexMtxFPA4_Cf                                */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void J3DTexMtx::calcTexMtx(f32 const (* field_0)[4]) {
	nofralloc
#include "asm/JSystem/J3DGraphBase/J3DTevs/calcTexMtx__9J3DTexMtxFPA4_Cf.s"
}
#pragma pop


/* ############################################################################################## */
/* 803CEB58-803CEB88 0030+00 rc=1 efc=0 rfr=False None .data      qMtx$1063                                                    */
SECTION_DATA static u8 data_803CEB58[48] = {
	0x3F, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x3F, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
	0x00, 0x00, 0x00, 0x00, 0xBF, 0x00, 0x00, 0x00, 0x3F, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x3F, 0x80, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
};

/* 803CEB88-803CEBB8 0030+00 rc=1 efc=0 rfr=False None .data      qMtx2$1064                                                   */
SECTION_DATA static u8 data_803CEB88[48] = {
	0x3F, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x3F, 0x00, 0x00, 0x00,
	0x00, 0x00, 0x00, 0x00, 0xBF, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x3F, 0x00, 0x00, 0x00,
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x3F, 0x80, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
};

/* 803CEBB8-803CEBE8 0030+00 rc=1 efc=0 rfr=False None .data      @1131                                                        */
SECTION_DATA static void* lit_1131[12] = {
	/* 0    */ (void*)(((char*)calcPostTexMtx__9J3DTexMtxFPA4_Cf)+0x310),
	/* 1    */ (void*)(((char*)calcPostTexMtx__9J3DTexMtxFPA4_Cf)+0x200),
	/* 2    */ (void*)(((char*)calcPostTexMtx__9J3DTexMtxFPA4_Cf)+0x234),
	/* 3    */ (void*)(((char*)calcPostTexMtx__9J3DTexMtxFPA4_Cf)+0x288),
	/* 4    */ (void*)(((char*)calcPostTexMtx__9J3DTexMtxFPA4_Cf)+0x2CC),
	/* 5    */ (void*)(((char*)calcPostTexMtx__9J3DTexMtxFPA4_Cf)+0x234),
	/* 6    */ (void*)(((char*)calcPostTexMtx__9J3DTexMtxFPA4_Cf)+0x1B8),
	/* 7    */ (void*)(((char*)calcPostTexMtx__9J3DTexMtxFPA4_Cf)+0x108),
	/* 8    */ (void*)(((char*)calcPostTexMtx__9J3DTexMtxFPA4_Cf)+0x48),
	/* 9    */ (void*)(((char*)calcPostTexMtx__9J3DTexMtxFPA4_Cf)+0xB0),
	/* 10   */ (void*)(((char*)calcPostTexMtx__9J3DTexMtxFPA4_Cf)+0x150),
	/* 11   */ (void*)(((char*)calcPostTexMtx__9J3DTexMtxFPA4_Cf)+0x48),
};

/* 80323C0C-80323F64 0358+00 rc=3 efc=2 rfr=False None .text      calcPostTexMtx__9J3DTexMtxFPA4_Cf                            */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void J3DTexMtx::calcPostTexMtx(f32 const (* field_0)[4]) {
	nofralloc
#include "asm/JSystem/J3DGraphBase/J3DTevs/calcPostTexMtx__9J3DTexMtxFPA4_Cf.s"
}
#pragma pop


/* 80323F64-80323F88 0024+00 rc=1 efc=1 rfr=False None .text      isTexNoReg__FPv                                              */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void isTexNoReg(void* field_0) {
	nofralloc
#include "asm/JSystem/J3DGraphBase/J3DTevs/isTexNoReg__FPv.s"
}
#pragma pop


/* 80323F88-80323F94 000C+00 rc=1 efc=1 rfr=False None .text      getTexNoReg__FPv                                             */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void getTexNoReg(void* field_0) {
	nofralloc
#include "asm/JSystem/J3DGraphBase/J3DTevs/getTexNoReg__FPv.s"
}
#pragma pop


/* ############################################################################################## */
/* 804563B0-804563B4 0004+00 rc=1 efc=0 rfr=False None .sdata2    @1167                                                        */
SECTION_SDATA2 static f32 lit_1167 = 0.125f;

/* 804563B4-804563B8 0004+00 rc=1 efc=0 rfr=False None .sdata2    @1168                                                        */
SECTION_SDATA2 static f32 lit_1168 = 1.0f / 100.0f;

/* 804563B8-804563C0 0008+00 rc=1 efc=0 rfr=False None .sdata2    @1171                                                        */
SECTION_SDATA2 static f64 lit_1171 = 4503601774854144.0 /* cast s32 to float */;

/* 80323F94-8032413C 01A8+00 rc=20 efc=20 rfr=False None .text      loadTexNo__FUlRCUs                                           */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void loadTexNo(u32 field_0, u16 const& field_1) {
	nofralloc
#include "asm/JSystem/J3DGraphBase/J3DTevs/loadTexNo__FUlRCUs.s"
}
#pragma pop


/* 8032413C-80324160 0024+00 rc=2 efc=2 rfr=False None .text      patchTexNo_PtrToIdx__FUlRCUs                                 */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void patchTexNo_PtrToIdx(u32 field_0, u16 const& field_1) {
	nofralloc
#include "asm/JSystem/J3DGraphBase/J3DTevs/patchTexNo_PtrToIdx__FUlRCUs.s"
}
#pragma pop


/* 80324160-80324194 0034+00 rc=2 efc=2 rfr=False None .text      loadNBTScale__FR11J3DNBTScale                                */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void loadNBTScale(J3DNBTScale& field_0) {
	nofralloc
#include "asm/JSystem/J3DGraphBase/J3DTevs/loadNBTScale__FR11J3DNBTScale.s"
}
#pragma pop


/* ############################################################################################## */
/* 803A1EC8-803A1EFC 0034+00 rc=9 efc=9 rfr=False None .rodata    j3dDefaultLightInfo                                          */
SECTION_RODATA u8 const j3dDefaultLightInfo[52] = {
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
	0xBF, 0x80, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xFF, 0xFF, 0xFF, 0xFF, 0x3F, 0x80, 0x00, 0x00,
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x3F, 0x80, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
	0x00, 0x00, 0x00, 0x00,
};

/* 803A1EFC-803A1F1C 0020+00 rc=5 efc=5 rfr=False None .rodata    j3dDefaultTexCoordInfo                                       */
SECTION_RODATA u8 const j3dDefaultTexCoordInfo[32] = {
	0x01, 0x04, 0x3C, 0x00, 0x01, 0x05, 0x3C, 0x00, 0x01, 0x06, 0x3C, 0x00, 0x01, 0x07, 0x3C, 0x00,
	0x01, 0x08, 0x3C, 0x00, 0x01, 0x09, 0x3C, 0x00, 0x01, 0x0A, 0x3C, 0x00, 0x01, 0x0B, 0x3C, 0x00,
};

/* 803A1F1C-803A1F80 0064+00 rc=1 efc=1 rfr=False None .rodata    j3dDefaultTexMtxInfo                                         */
SECTION_RODATA u8 const j3dDefaultTexMtxInfo[100] = {
	0x01, 0x00, 0xFF, 0xFF, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
	0x3F, 0x80, 0x00, 0x00, 0x3F, 0x80, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
	0x00, 0x00, 0x00, 0x00, 0x3F, 0x80, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x3F, 0x80, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x3F, 0x80, 0x00, 0x00,
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
	0x3F, 0x80, 0x00, 0x00,
};

/* 803A1F80-803A1F9C 001C+00 rc=2 efc=2 rfr=False None .rodata    j3dDefaultIndTexMtxInfo                                      */
SECTION_RODATA u8 const j3dDefaultIndTexMtxInfo[28] = {
	0x3F, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
	0x3F, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00,
};

/* 803A1F9C-803A1FB0 0014+00 rc=1 efc=1 rfr=False None .rodata    j3dDefaultTevStageInfo                                       */
SECTION_RODATA u8 const j3dDefaultTevStageInfo[20] = {
	0x04, 0x0A, 0x0F, 0x0F, 0x00, 0x00, 0x00, 0x00, 0x01, 0x00, 0x05, 0x07, 0x07, 0x00, 0x00, 0x00,
	0x00, 0x01, 0x00, 0x00,
};

/* 803A1FB0-803A1FBC 000C+00 rc=2 efc=2 rfr=False None .rodata    j3dDefaultIndTevStageInfo                                    */
SECTION_RODATA u8 const j3dDefaultIndTevStageInfo[12] = {
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
};

/* 803A1FBC-803A1FE8 002C+00 rc=3 efc=3 rfr=False None .rodata    j3dDefaultFogInfo                                            */
SECTION_RODATA u8 const j3dDefaultFogInfo[44] = {
	0x00, 0x00, 0x01, 0x40, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x3D, 0xCC, 0xCC, 0xCD,
	0x46, 0x1C, 0x40, 0x00, 0xFF, 0xFF, 0xFF, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
};

/* 803A1FE8-803A1FF8 0010+00 rc=3 efc=3 rfr=False None .rodata    j3dDefaultNBTScaleInfo                                       */
SECTION_RODATA u8 const j3dDefaultNBTScaleInfo[16] = {
	0x00, 0x00, 0x00, 0x00, 0x3F, 0x80, 0x00, 0x00, 0x3F, 0x80, 0x00, 0x00, 0x3F, 0x80, 0x00, 0x00,
};

/* 803A1FF8-803A2008 000B+05 rc=1 efc=0 rfr=False None .rodata    @1197                                                        */
SECTION_RODATA static u8 const lit_1197[11 + 5 /* padding */] = {
	0x1E, 0x21, 0x24, 0x27, 0x2A, 0x2D, 0x30, 0x33, 0x36, 0x39, 0x3C,
	/* padding */
	0x00, 0x00, 0x00, 0x00, 0x00,
};

/* 80434C98-80436A60 1DC7+01 rc=1 efc=0 rfr=False None .bss       j3dTexCoordTable                                             */
static u8 j3dTexCoordTable[7623 + 1 /* padding */];

/* 80324194-8032423C 00A8+00 rc=1 efc=1 rfr=False None .text      makeTexCoordTable__Fv                                        */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void makeTexCoordTable() {
	nofralloc
#include "asm/JSystem/J3DGraphBase/J3DTevs/makeTexCoordTable__Fv.s"
}
#pragma pop


/* ############################################################################################## */
/* 80436A60-80436E60 0400+00 rc=4 efc=3 rfr=False None .bss       j3dTevSwapTableTable                                         */
u8 j3dTevSwapTableTable[1024];

/* 80436E60-80437160 0300+00 rc=3 efc=2 rfr=False None .bss       j3dAlphaCmpTable                                             */
u8 j3dAlphaCmpTable[768];

/* 8032423C-803242A8 006C+00 rc=1 efc=1 rfr=False None .text      makeAlphaCmpTable__Fv                                        */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void makeAlphaCmpTable() {
	nofralloc
#include "asm/JSystem/J3DGraphBase/J3DTevs/makeAlphaCmpTable__Fv.s"
}
#pragma pop


/* ############################################################################################## */
/* 80437160-804371C0 0060+00 rc=5 efc=4 rfr=False None .bss       j3dZModeTable                                                */
u8 j3dZModeTable[96];

/* 803242A8-80324314 006C+00 rc=1 efc=1 rfr=False None .text      makeZModeTable__Fv                                           */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void makeZModeTable() {
	nofralloc
#include "asm/JSystem/J3DGraphBase/J3DTevs/makeZModeTable__Fv.s"
}
#pragma pop


/* 80324314-80324358 0044+00 rc=1 efc=1 rfr=False None .text      makeTevSwapTable__Fv                                         */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void makeTevSwapTable() {
	nofralloc
#include "asm/JSystem/J3DGraphBase/J3DTevs/makeTevSwapTable__Fv.s"
}
#pragma pop


/* 80324358-803243BC 0064+00 rc=1 efc=0 rfr=False None .text      loadTexMtx__9J3DTexMtxCFUl                                   */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void J3DTexMtx::loadTexMtx(u32 field_0) const {
	nofralloc
#include "asm/JSystem/J3DGraphBase/J3DTevs/loadTexMtx__9J3DTexMtxCFUl.s"
}
#pragma pop


/* 803243BC-8032441C 0060+00 rc=1 efc=0 rfr=False None .text      loadPostTexMtx__9J3DTexMtxCFUl                               */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void J3DTexMtx::loadPostTexMtx(u32 field_0) const {
	nofralloc
#include "asm/JSystem/J3DGraphBase/J3DTevs/loadPostTexMtx__9J3DTexMtxCFUl.s"
}
#pragma pop


/* 8032441C-8032499C 0580+00 rc=1 efc=0 rfr=False None .text      J3DGDLoadTexMtxImm__FPA4_fUl13_GXTexMtxType                  */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm static void J3DGDLoadTexMtxImm(f32 (* field_0)[4], u32 field_1, _GXTexMtxType field_2) {
	nofralloc
#include "asm/JSystem/J3DGraphBase/J3DTevs/J3DGDLoadTexMtxImm__FPA4_fUl13_GXTexMtxType.s"
}
#pragma pop


/* 8032499C-80324F08 056C+00 rc=1 efc=0 rfr=False None .text      J3DGDLoadPostTexMtxImm__FPA4_fUl                             */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm static void J3DGDLoadPostTexMtxImm(f32 (* field_0)[4], u32 field_1) {
	nofralloc
#include "asm/JSystem/J3DGraphBase/J3DTevs/J3DGDLoadPostTexMtxImm__FPA4_fUl.s"
}
#pragma pop


/* ############################################################################################## */
/* 804563C0-804563C4 0004+00 rc=4 efc=4 rfr=False None .sdata2    j3dDefaultColInfo                                            */
SECTION_SDATA2 u32 j3dDefaultColInfo = 0xFFFFFFFF;

/* 804563C4-804563C8 0004+00 rc=2 efc=2 rfr=False None .sdata2    j3dDefaultAmbInfo                                            */
SECTION_SDATA2 u32 j3dDefaultAmbInfo = 0x32323232;

/* 804563C8-804563CC 0004+00 rc=1 efc=1 rfr=False None .sdata2    None                                                         */
SECTION_SDATA2 u32 data_804563C8 = 0x01000000;

/* 804563CC-804563D0 0004+00 rc=3 efc=3 rfr=False None .sdata2    j3dDefaultTevOrderInfoNull                                   */
SECTION_SDATA2 u32 j3dDefaultTevOrderInfoNull = 0xFFFFFF00;

/* 804563D0-804563D4 0004+00 rc=2 efc=2 rfr=False None .sdata2    j3dDefaultIndTexOrderNull                                    */
SECTION_SDATA2 u32 j3dDefaultIndTexOrderNull = 0xFFFF0000;

/* 804563D4-804563D8 0004+00 rc=5 efc=5 rfr=False None .sdata2    j3dDefaultTevColor                                           */
SECTION_SDATA2 u32 j3dDefaultTevColor = 0x00FF00FF;

/* 804563D8-804563DC 0004+00 rc=1 efc=1 rfr=False None .sdata2    None                                                         */
SECTION_SDATA2 u32 data_804563D8 = 0x00FF00FF;

/* 804563DC-804563E0 0004+00 rc=2 efc=2 rfr=False None .sdata2    j3dDefaultIndTexCoordScaleInfo                               */
SECTION_SDATA2 u8 j3dDefaultIndTexCoordScaleInfo[4] = {
	0x00, 0x00, 0x00, 0x00,
};

/* 804563E0-804563E4 0004+00 rc=5 efc=5 rfr=False None .sdata2    j3dDefaultTevKColor                                          */
SECTION_SDATA2 u32 j3dDefaultTevKColor = 0xFFFFFFFF;

/* 804563E4-804563E8 0004+00 rc=2 efc=2 rfr=False None .sdata2    j3dDefaultTevSwapMode                                        */
SECTION_SDATA2 u8 j3dDefaultTevSwapMode[4] = {
	0x00, 0x00, 0x00, 0x00,
};

/* 804563E8-804563EC 0004+00 rc=2 efc=2 rfr=False None .sdata2    j3dDefaultTevSwapModeTable                                   */
SECTION_SDATA2 u32 j3dDefaultTevSwapModeTable = 0x00010203;

/* 804563EC-804563F0 0004+00 rc=3 efc=3 rfr=False None .sdata2    j3dDefaultBlendInfo                                          */
SECTION_SDATA2 u32 j3dDefaultBlendInfo = 0x01040505;

/* 804563F0-804563F8 0008+00 rc=3 efc=3 rfr=False None .sdata2    j3dDefaultColorChanInfo                                      */
SECTION_SDATA2 u8 j3dDefaultColorChanInfo[8] = {
	0x00, 0x00, 0x00, 0x02, 0x02, 0x00, 0xFF, 0xFF,
};

/* 804563F8-804563FC 0004+00 rc=2 efc=2 rfr=False None .sdata2    None                                                         */
SECTION_SDATA2 u8 struct_804563F8[4] = {
	/* 804563F8 0002 data_804563F8 None */
	0x1B, 0x00,
	/* 804563FA 0002 data_804563FA j3dDefaultAlphaCmpID */
	0x00, 0xE7,
};

/* 804563FC-80456400 0002+02 rc=3 efc=3 rfr=False None .sdata2    j3dDefaultZModeID                                            */
SECTION_SDATA2 u16 j3dDefaultZModeID[1 + 1 /* padding */] = {
	0x0017,
	/* padding */
	0x0000,
};

