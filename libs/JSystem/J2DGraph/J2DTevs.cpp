// 
// Generated By: dol2asm
// Translation Unit: J2DTevs
// 

#include "dolphin/types.h"

// 
// Forward References:
// 

extern "C" extern void load__9J2DTexMtxFUl();
extern "C" extern void calc__9J2DTexMtxFv();
extern "C" extern void getTextureMtx__9J2DTexMtxFRC17J2DTextureSRTInfo3VecPA4_f();
extern "C" extern void getTextureMtxMaya__9J2DTexMtxFRC17J2DTextureSRTInfoPA4_f();
extern "C" extern void load__14J2DIndTevStageFUc();
extern "C" extern void load__12J2DIndTexMtxFUc();
extern "C" extern void load__19J2DIndTexCoordScaleFUc();
extern "C" extern void load__14J2DIndTexOrderFUc();
extern "C" extern void getTevSwapModeTable__11J2DTevBlockFUl();
extern "C" extern void getTevStage__11J2DTevBlockFUl();
extern "C" extern void getTevColor__11J2DTevBlockFUl();
extern "C" extern void getTevOrder__11J2DTevBlockFUl();
extern "C" extern void getTevKAlphaSel__11J2DTevBlockFUl();
extern "C" extern void getTevKColorSel__11J2DTevBlockFUl();
extern "C" extern void getTevKColor__11J2DTevBlockFUl();
extern "C" extern void getFontNo__11J2DTevBlockCFv();
extern "C" extern void getTexNo__11J2DTevBlockCFUl();
extern "C" extern void getTevStageNum__11J2DTevBlockCFv();
extern "C" extern void getIndTevStage__11J2DTevBlockFUl();
extern "C" extern void getIndTexCoordScale__11J2DIndBlockFUl();
extern "C" extern void getIndTexMtx__11J2DIndBlockFUl();
extern "C" extern void getIndTexOrder__11J2DIndBlockFUl();
extern "C" extern void getIndTexStageNum__11J2DIndBlockCFv();
SECTION_RODATA extern const u8 j2dDefaultTexCoordInfo[32];
SECTION_RODATA extern const u8 j2dDefaultTexMtxInfo[36];
SECTION_RODATA extern const u8 j2dDefaultIndTexMtxInfo[28];
SECTION_RODATA extern const u8 j2dDefaultTevStageInfo[20];
SECTION_RODATA extern const u8 j2dDefaultIndTevStageInfo[12];
SECTION_SDATA2 extern f32 lit_1488;
SECTION_SDATA2 extern f32 J2DTevs__lit_1489;
SECTION_SDATA2 extern u8 lit_1490[4];
SECTION_SDATA2 extern f32 J2DTevs__lit_1491;
SECTION_SDATA2 extern f32 lit_1507;
SECTION_SDATA2 extern u32 j2dDefaultColInfo;
SECTION_SDATA2 extern u32 j2dDefaultTevOrderInfoNull;
SECTION_SDATA2 extern u16 j2dDefaultIndTexOrderNull;
SECTION_SDATA2 extern u8 j2dDefaultTevColor[8];
SECTION_SDATA2 extern u8 j2dDefaultIndTexCoordScaleInfo[2 + 2 /* padding */];
SECTION_SDATA2 extern u32 j2dDefaultTevKColor;
SECTION_SDATA2 extern u8 j2dDefaultTevSwapMode[4];
SECTION_SDATA2 extern u32 j2dDefaultTevSwapModeTable;
SECTION_SDATA2 extern u32 j2dDefaultBlendInfo;
SECTION_SDATA2 extern u8 data_804561A4[4];
SECTION_SDATA2 extern u32 j2dDefaultColorChanInfo;
SECTION_SDATA2 extern u16 data_804561AC;
SECTION_SDATA2 extern u16 j2dDefaultAlphaCmp;

// 
// External References:
// 

extern "C" extern void GXSetTevIndirect();
extern "C" extern void GXSetIndTexMtx();
extern "C" extern void GXSetIndTexCoordScale();
extern "C" extern void GXSetIndTexOrder();
extern "C" extern void GXLoadTexMtxImm();
extern "C" extern void _savegpr_29();
extern "C" extern void _restgpr_29();
extern "C" extern void cos();
extern "C" extern void sin();

// 
// Declarations:
// 

/* 802E9C90-802E9CC4 0034+00 .text      load__9J2DTexMtxFUl                                          */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
ASM_FUNCTION(load__9J2DTexMtxFUl) {
	nofralloc
#include "asm/JSystem/J2DGraph/J2DTevs/load__9J2DTexMtxFUl.s"
}
#pragma pop


/* 802E9CC4-802E9D2C 0068+00 .text      calc__9J2DTexMtxFv                                           */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
ASM_FUNCTION(calc__9J2DTexMtxFv) {
	nofralloc
#include "asm/JSystem/J2DGraph/J2DTevs/calc__9J2DTexMtxFv.s"
}
#pragma pop


/* ############################################################################################## */
/* 80456168-8045616C 0004+00 .sdata2    @1488                                                        */
f32 lit_1488 = 3.1415927410125732f;

/* 8045616C-80456170 0004+00 .sdata2    @1489                                                        */
f32 J2DTevs__lit_1489 = 180.0f;

/* 80456170-80456174 0004+00 .sdata2    @1490                                                        */
u8 lit_1490[4] = {
	0x00, 0x00, 0x00, 0x00,
};

/* 80456174-80456178 0004+00 .sdata2    @1491                                                        */
f32 J2DTevs__lit_1491 = 1.0f;

/* 802E9D2C-802E9EBC 0190+00 .text      getTextureMtx__9J2DTexMtxFRC17J2DTextureSRTInfo3VecPA4_f     */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
ASM_FUNCTION(getTextureMtx__9J2DTexMtxFRC17J2DTextureSRTInfo3VecPA4_f) {
	nofralloc
#include "asm/JSystem/J2DGraph/J2DTevs/getTextureMtx__9J2DTexMtxFRC17J2DTextureSRTInfo3VecPA4_f.s"
}
#pragma pop


/* ############################################################################################## */
/* 80456178-8045617C 0004+00 .sdata2    @1507                                                        */
f32 lit_1507 = 0.5f;

/* 802E9EBC-802EA044 0188+00 .text      getTextureMtxMaya__9J2DTexMtxFRC17J2DTextureSRTInfoPA4_f     */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
ASM_FUNCTION(getTextureMtxMaya__9J2DTexMtxFRC17J2DTextureSRTInfoPA4_f) {
	nofralloc
#include "asm/JSystem/J2DGraph/J2DTevs/getTextureMtxMaya__9J2DTexMtxFRC17J2DTextureSRTInfoPA4_f.s"
}
#pragma pop


/* 802EA044-802EA098 0054+00 .text      load__14J2DIndTevStageFUc                                    */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
ASM_FUNCTION(load__14J2DIndTevStageFUc) {
	nofralloc
#include "asm/JSystem/J2DGraph/J2DTevs/load__14J2DIndTevStageFUc.s"
}
#pragma pop


/* 802EA098-802EA0CC 0034+00 .text      load__12J2DIndTexMtxFUc                                      */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
ASM_FUNCTION(load__12J2DIndTexMtxFUc) {
	nofralloc
#include "asm/JSystem/J2DGraph/J2DTevs/load__12J2DIndTexMtxFUc.s"
}
#pragma pop


/* 802EA0CC-802EA0FC 0030+00 .text      load__19J2DIndTexCoordScaleFUc                               */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
ASM_FUNCTION(load__19J2DIndTexCoordScaleFUc) {
	nofralloc
#include "asm/JSystem/J2DGraph/J2DTevs/load__19J2DIndTexCoordScaleFUc.s"
}
#pragma pop


/* 802EA0FC-802EA12C 0030+00 .text      load__14J2DIndTexOrderFUc                                    */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
ASM_FUNCTION(load__14J2DIndTexOrderFUc) {
	nofralloc
#include "asm/JSystem/J2DGraph/J2DTevs/load__14J2DIndTexOrderFUc.s"
}
#pragma pop


/* 802EA12C-802EA134 0008+00 .text      getTevSwapModeTable__11J2DTevBlockFUl                        */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
ASM_FUNCTION(getTevSwapModeTable__11J2DTevBlockFUl) {
	nofralloc
#include "asm/JSystem/J2DGraph/J2DTevs/getTevSwapModeTable__11J2DTevBlockFUl.s"
}
#pragma pop


/* 802EA134-802EA13C 0008+00 .text      getTevStage__11J2DTevBlockFUl                                */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
ASM_FUNCTION(getTevStage__11J2DTevBlockFUl) {
	nofralloc
#include "asm/JSystem/J2DGraph/J2DTevs/getTevStage__11J2DTevBlockFUl.s"
}
#pragma pop


/* 802EA13C-802EA144 0008+00 .text      getTevColor__11J2DTevBlockFUl                                */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
ASM_FUNCTION(getTevColor__11J2DTevBlockFUl) {
	nofralloc
#include "asm/JSystem/J2DGraph/J2DTevs/getTevColor__11J2DTevBlockFUl.s"
}
#pragma pop


/* 802EA144-802EA14C 0008+00 .text      getTevOrder__11J2DTevBlockFUl                                */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
ASM_FUNCTION(getTevOrder__11J2DTevBlockFUl) {
	nofralloc
#include "asm/JSystem/J2DGraph/J2DTevs/getTevOrder__11J2DTevBlockFUl.s"
}
#pragma pop


/* 802EA14C-802EA154 0008+00 .text      getTevKAlphaSel__11J2DTevBlockFUl                            */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
ASM_FUNCTION(getTevKAlphaSel__11J2DTevBlockFUl) {
	nofralloc
#include "asm/JSystem/J2DGraph/J2DTevs/getTevKAlphaSel__11J2DTevBlockFUl.s"
}
#pragma pop


/* 802EA154-802EA15C 0008+00 .text      getTevKColorSel__11J2DTevBlockFUl                            */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
ASM_FUNCTION(getTevKColorSel__11J2DTevBlockFUl) {
	nofralloc
#include "asm/JSystem/J2DGraph/J2DTevs/getTevKColorSel__11J2DTevBlockFUl.s"
}
#pragma pop


/* 802EA15C-802EA164 0008+00 .text      getTevKColor__11J2DTevBlockFUl                               */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
ASM_FUNCTION(getTevKColor__11J2DTevBlockFUl) {
	nofralloc
#include "asm/JSystem/J2DGraph/J2DTevs/getTevKColor__11J2DTevBlockFUl.s"
}
#pragma pop


/* 802EA164-802EA170 000C+00 .text      getFontNo__11J2DTevBlockCFv                                  */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
ASM_FUNCTION(getFontNo__11J2DTevBlockCFv) {
	nofralloc
#include "asm/JSystem/J2DGraph/J2DTevs/getFontNo__11J2DTevBlockCFv.s"
}
#pragma pop


/* 802EA170-802EA17C 000C+00 .text      getTexNo__11J2DTevBlockCFUl                                  */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
ASM_FUNCTION(getTexNo__11J2DTevBlockCFUl) {
	nofralloc
#include "asm/JSystem/J2DGraph/J2DTevs/getTexNo__11J2DTevBlockCFUl.s"
}
#pragma pop


/* 802EA17C-802EA184 0008+00 .text      getTevStageNum__11J2DTevBlockCFv                             */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
ASM_FUNCTION(getTevStageNum__11J2DTevBlockCFv) {
	nofralloc
#include "asm/JSystem/J2DGraph/J2DTevs/getTevStageNum__11J2DTevBlockCFv.s"
}
#pragma pop


/* 802EA184-802EA18C 0008+00 .text      getIndTevStage__11J2DTevBlockFUl                             */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
ASM_FUNCTION(getIndTevStage__11J2DTevBlockFUl) {
	nofralloc
#include "asm/JSystem/J2DGraph/J2DTevs/getIndTevStage__11J2DTevBlockFUl.s"
}
#pragma pop


/* 802EA18C-802EA194 0008+00 .text      getIndTexCoordScale__11J2DIndBlockFUl                        */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
ASM_FUNCTION(getIndTexCoordScale__11J2DIndBlockFUl) {
	nofralloc
#include "asm/JSystem/J2DGraph/J2DTevs/getIndTexCoordScale__11J2DIndBlockFUl.s"
}
#pragma pop


/* 802EA194-802EA19C 0008+00 .text      getIndTexMtx__11J2DIndBlockFUl                               */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
ASM_FUNCTION(getIndTexMtx__11J2DIndBlockFUl) {
	nofralloc
#include "asm/JSystem/J2DGraph/J2DTevs/getIndTexMtx__11J2DIndBlockFUl.s"
}
#pragma pop


/* 802EA19C-802EA1A4 0008+00 .text      getIndTexOrder__11J2DIndBlockFUl                             */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
ASM_FUNCTION(getIndTexOrder__11J2DIndBlockFUl) {
	nofralloc
#include "asm/JSystem/J2DGraph/J2DTevs/getIndTexOrder__11J2DIndBlockFUl.s"
}
#pragma pop


/* 802EA1A4-802EA1AC 0008+00 .text      getIndTexStageNum__11J2DIndBlockCFv                          */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
ASM_FUNCTION(getIndTexStageNum__11J2DIndBlockCFv) {
	nofralloc
#include "asm/JSystem/J2DGraph/J2DTevs/getIndTexStageNum__11J2DIndBlockCFv.s"
}
#pragma pop


/* ############################################################################################## */
/* 803A1B80-803A1BA0 0020+00 .rodata    j2dDefaultTexCoordInfo                                       */
SECTION_RODATA const u8 j2dDefaultTexCoordInfo[32] = {
	0x01, 0x04, 0x3C, 0x00, 0x01, 0x05, 0x3C, 0x00, 0x01, 0x06, 0x3C, 0x00, 0x01, 0x07, 0x3C, 0x00,
	0x01, 0x08, 0x3C, 0x00, 0x01, 0x09, 0x3C, 0x00, 0x01, 0x0A, 0x3C, 0x00, 0x01, 0x0B, 0x3C, 0x00,
};

/* 803A1BA0-803A1BC4 0024+00 .rodata    j2dDefaultTexMtxInfo                                         */
SECTION_RODATA const u8 j2dDefaultTexMtxInfo[36] = {
	0x01, 0x01, 0xFF, 0xFF, 0x3F, 0x00, 0x00, 0x00, 0x3F, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
	0x3F, 0x80, 0x00, 0x00, 0x3F, 0x80, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
	0x00, 0x00, 0x00, 0x00,
};

/* 803A1BC4-803A1BE0 001C+00 .rodata    j2dDefaultIndTexMtxInfo                                      */
SECTION_RODATA const u8 j2dDefaultIndTexMtxInfo[28] = {
	0x3F, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
	0x3F, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00,
};

/* 803A1BE0-803A1BF4 0014+00 .rodata    j2dDefaultTevStageInfo                                       */
SECTION_RODATA const u8 j2dDefaultTevStageInfo[20] = {
	0x04, 0x0A, 0x0F, 0x0F, 0x00, 0x00, 0x00, 0x00, 0x01, 0x00, 0x05, 0x07, 0x07, 0x00, 0x00, 0x00,
	0x00, 0x01, 0x00, 0x00,
};

/* 803A1BF4-803A1C00 000C+00 .rodata    j2dDefaultIndTevStageInfo                                    */
SECTION_RODATA const u8 j2dDefaultIndTevStageInfo[12] = {
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
};

/* 8045617C-80456180 0004+00 .sdata2    j2dDefaultColInfo                                            */
u32 j2dDefaultColInfo = 0xFFFFFFFF;

/* 80456180-80456184 0004+00 .sdata2    j2dDefaultTevOrderInfoNull                                   */
u32 j2dDefaultTevOrderInfoNull = 0xFFFFFF00;

/* 80456184-80456188 0002+02 .sdata2    j2dDefaultIndTexOrderNull                                    */
u16 j2dDefaultIndTexOrderNull = 0xFFFF;
/* padding 2 bytes */

/* 80456188-80456190 0008+00 .sdata2    j2dDefaultTevColor                                           */
u8 j2dDefaultTevColor[8] = {
	0x00, 0xFF, 0x00, 0xFF, 0x00, 0xFF, 0x00, 0xFF,
};

/* 80456190-80456194 0002+02 .sdata2    j2dDefaultIndTexCoordScaleInfo                               */
u8 j2dDefaultIndTexCoordScaleInfo[4] = {
	0x00, 0x00,
	/* padding */
	0x00, 0x00,
};

/* 80456194-80456198 0004+00 .sdata2    j2dDefaultTevKColor                                          */
u32 j2dDefaultTevKColor = 0xFFFFFFFF;

/* 80456198-8045619C 0004+00 .sdata2    j2dDefaultTevSwapMode                                        */
u8 j2dDefaultTevSwapMode[4] = {
	0x00, 0x00, 0x00, 0x00,
};

/* 8045619C-804561A0 0004+00 .sdata2    j2dDefaultTevSwapModeTable                                   */
u32 j2dDefaultTevSwapModeTable = 0x00010203;

/* 804561A0-804561A4 0004+00 .sdata2    j2dDefaultBlendInfo                                          */
u32 j2dDefaultBlendInfo = 0x01040505;

/* 804561A4-804561A8 0004+00 .sdata2    None                                                         */
u8 data_804561A4[4] = {
	0x00, 0x00, 0x00, 0x00,
};

/* 804561A8-804561AC 0004+00 .sdata2    j2dDefaultColorChanInfo                                      */
u32 j2dDefaultColorChanInfo = 0x00030000;

/* 804561AC-804561AE 0002+00 .sdata2    None                                                         */
u16 data_804561AC = 0x1B00;

/* 804561AE-804561B0 0002+00 .sdata2    j2dDefaultAlphaCmp                                           */
u16 j2dDefaultAlphaCmp = 0x00E7;

