// 
// Generated By: dol2asm
// Translation Unit: J2DPane
// 

#include "dolphin/types.h"

// 
// Types:
// 

// build J2DPane (J2DPane) False/False
// build J2DAnmTransform (J2DAnmTransform) False/False
/* top-level dependencies (begin J2DAnmTransform) */
/* top-level dependencies (end J2DAnmTransform) */
struct J2DAnmTransform {
};

// build JKRArchive (JKRArchive) False/False
/* top-level dependencies (begin JKRArchive) */
/* top-level dependencies (end JKRArchive) */
struct JKRArchive {
};

// build ResTIMG (ResTIMG) False/False
/* top-level dependencies (begin ResTIMG) */
/* top-level dependencies (end ResTIMG) */
struct ResTIMG {
};

// build JSURandomInputStream (JSURandomInputStream) False/False
// build JSUStreamSeekFrom (JSUStreamSeekFrom) False/False
/* top-level dependencies (begin JSUStreamSeekFrom) */
/* top-level dependencies (end JSUStreamSeekFrom) */
struct JSUStreamSeekFrom {
};

/* top-level dependencies (begin JSURandomInputStream) */
// outer dependency: JSUStreamSeekFrom
/* top-level dependencies (end JSURandomInputStream) */
struct JSURandomInputStream {
	// JSUStreamSeekFrom
	/* 802DC370 */ void align(s32);
	/* 802DC458 */ void peek(void*, s32);
	/* 802DC4DC */ void seek(s32, JSUStreamSeekFrom);
};

// build J2DAnmTextureSRTKey (J2DAnmTextureSRTKey) False/False
/* top-level dependencies (begin J2DAnmTextureSRTKey) */
/* top-level dependencies (end J2DAnmTextureSRTKey) */
struct J2DAnmTextureSRTKey {
};

// build J2DAnmVisibilityFull (J2DAnmVisibilityFull) False/False
/* top-level dependencies (begin J2DAnmVisibilityFull) */
/* top-level dependencies (end J2DAnmVisibilityFull) */
struct J2DAnmVisibilityFull {
};

// build J2DAnmTexPattern (J2DAnmTexPattern) False/False
/* top-level dependencies (begin J2DAnmTexPattern) */
/* top-level dependencies (end J2DAnmTexPattern) */
struct J2DAnmTexPattern {
};

// build J2DAnmTevRegKey (J2DAnmTevRegKey) False/False
/* top-level dependencies (begin J2DAnmTevRegKey) */
/* top-level dependencies (end J2DAnmTevRegKey) */
struct J2DAnmTevRegKey {
};

// build ResFONT (ResFONT) False/False
/* top-level dependencies (begin ResFONT) */
/* top-level dependencies (end ResFONT) */
struct ResFONT {
};

// build J2DAnmVtxColor (J2DAnmVtxColor) False/False
/* top-level dependencies (begin J2DAnmVtxColor) */
/* top-level dependencies (end J2DAnmVtxColor) */
struct J2DAnmVtxColor {
};

// build J2DRotateAxis (J2DRotateAxis) False/False
/* top-level dependencies (begin J2DRotateAxis) */
/* top-level dependencies (end J2DRotateAxis) */
struct J2DRotateAxis {
};

// build J2DAnmBase (J2DAnmBase) False/False
/* top-level dependencies (begin J2DAnmBase) */
/* top-level dependencies (end J2DAnmBase) */
struct J2DAnmBase {
};

// build J2DBasePosition (J2DBasePosition) False/False
/* top-level dependencies (begin J2DBasePosition) */
/* top-level dependencies (end J2DBasePosition) */
struct J2DBasePosition {
};

// build J2DGrafContext (J2DGrafContext) False/False
/* top-level dependencies (begin J2DGrafContext) */
/* top-level dependencies (end J2DGrafContext) */
struct J2DGrafContext {
	/* 802E8E20 */ void setScissor();
};

// build J2DAnmColor (J2DAnmColor) False/False
/* top-level dependencies (begin J2DAnmColor) */
/* top-level dependencies (end J2DAnmColor) */
struct J2DAnmColor {
};

// build _GXCullMode (_GXCullMode) False/False
/* top-level dependencies (begin _GXCullMode) */
/* top-level dependencies (end _GXCullMode) */
struct _GXCullMode {
};

/* top-level dependencies (begin J2DPane) */
// outer dependency: J2DAnmTransform
// outer dependency: JKRArchive
// outer dependency: ResTIMG
// outer dependency: JSURandomInputStream
// outer dependency: J2DAnmTextureSRTKey
// outer dependency: J2DAnmVisibilityFull
// outer dependency: J2DAnmTexPattern
// outer dependency: J2DAnmTevRegKey
// outer dependency: ResFONT
// outer dependency: J2DAnmVtxColor
// outer dependency: J2DRotateAxis
// outer dependency: J2DAnmBase
// outer dependency: J2DBasePosition
// outer dependency: J2DGrafContext
// outer dependency: J2DAnmColor
// outer dependency: _GXCullMode
/* top-level dependencies (end J2DPane) */
struct J2DPane {
	// J2DAnmTransform
	// ResFONT
	// J2DAnmVtxColor
	// J2DAnmColor
	// JKRArchive
	// J2DAnmVisibilityFull
	// ResTIMG
	// J2DAnmBase
	// J2DAnmTextureSRTKey
	// JSURandomInputStream
	// J2DBasePosition
	// J2DGrafContext
	// J2DRotateAxis
	// _GXCullMode
	// J2DAnmTexPattern
	// J2DAnmTevRegKey
	/* 80020158 */ void setAlpha(u8);
	/* 80053BC0 */ void calcMtx();
	/* 80053C00 */ void makeMatrix(f32, f32);
	/* 80053C3C */ s32 getTypeID() const;
	/* 80126350 */ void setAnimation(J2DAnmTevRegKey*);
	/* 80126354 */ void setAnimation(J2DAnmColor*);
	/* 8018BF28 */ void setAnimation(J2DAnmTextureSRTKey*);
	/* 80256018 */ void setAnimation(J2DAnmVtxColor*);
	/* 8025601C */ void setAnimation(J2DAnmVisibilityFull*);
	/* 80256020 */ void setAnimation(J2DAnmTexPattern*);
	/* 802F5BF8 */ J2DPane();
	/* 802F5CB8 */ void initiate();
	/* 802F5F9C */ J2DPane(J2DPane*, JSURandomInputStream*, u8);
	/* 802F60C4 */ void makePaneStream(J2DPane*, JSURandomInputStream*);
	/* 802F63F8 */ void changeUseTrans(J2DPane*);
	/* 802F658C */ ~J2DPane();
	/* 802F666C */ void appendChild(J2DPane*);
	/* 802F6714 */ void insertChild(J2DPane*, J2DPane*);
	/* 802F67E0 */ void draw(f32, f32, J2DGrafContext const*, bool, bool);
	/* 802F6F60 */ void move(f32, f32);
	/* 802F6FB4 */ void add(f32, f32);
	/* 802F6FF8 */ void resize(f32, f32);
	/* 802F7100 */ void getBounds();
	/* 802F71DC */ void rotate(f32, f32, J2DRotateAxis, f32);
	/* 802F720C */ void rotate(f32);
	/* 802F72E0 */ void search(u64);
	/* 802F7388 */ void searchUserInfo(u64);
	/* 802F7430 */ void isUsed(ResTIMG const*);
	/* 802F74B8 */ void isUsed(ResFONT const*);
	/* 802F7540 */ void makeMatrix(f32, f32, f32, f32);
	/* 802F7680 */ void setCullBack(_GXCullMode);
	/* 802F76F8 */ void setBasePosition(J2DBasePosition);
	/* 802F77D0 */ void setInfluencedAlpha(bool, bool);
	/* 802F79A8 */ void getGlbVtx(u8) const;
	/* 802F7A8C */ void getFirstChildPane();
	/* 802F7AC4 */ void getNextChildPane();
	/* 802F7AFC */ void getParentPane();
	/* 802F7B18 */ void makePaneExStream(J2DPane*, JSURandomInputStream*);
	/* 802F7D00 */ void J2DCast_F32_to_S16(f32, u8);
	/* 802F7DB8 */ void getPointer(JSURandomInputStream*, u32, JKRArchive*);
	/* 802F7EF4 */ void setAnimation(J2DAnmBase*);
	/* 802F7FC4 */ void setAnimation(J2DAnmTransform*);
	/* 802F7FCC */ void animationTransform();
	/* 802F8004 */ void clearAnmTransform();
	/* 802F8080 */ void animationTransform(J2DAnmTransform const*);
	/* 802F8118 */ void setVisibileAnimation(J2DAnmVisibilityFull*);
	/* 802F81A0 */ void setVtxColorAnimation(J2DAnmVtxColor*);
	/* 802F8228 */ void animationPane(J2DAnmTransform const*);
	/* 802F82C0 */ void updateTransform(J2DAnmTransform const*);
	/* 802F83C8 */ void drawSelf(f32, f32, f32 (* )[3][4]);
	/* 802F83CC */ void rewriteAlpha();
	/* 802F83D0 */ void setAnimationVF(J2DAnmVisibilityFull*);
	/* 802F83FC */ void setAnimationVC(J2DAnmVtxColor*);
	/* 802F8428 */ void setCullBack(bool);
	/* 802F8464 */ void setConnectParent(bool);
	/* 802F8474 */ void update();
	/* 802F8478 */ void drawSelf(f32, f32);
};

// build JSURandomInputStream (JSURandomInputStream) True/True
// build J2DGrafContext (J2DGrafContext) True/True
// build J2DRotateAxis (J2DRotateAxis) True/True
// build ResTIMG (ResTIMG) True/True
// build ResFONT (ResFONT) True/True
// build _GXCullMode (_GXCullMode) True/True
// build J2DBasePosition (J2DBasePosition) True/True
// build JKRArchive (JKRArchive) True/True
// build J2DAnmBase (J2DAnmBase) True/True
// build J2DAnmTransform (J2DAnmTransform) True/True
// build J2DAnmVisibilityFull (J2DAnmVisibilityFull) True/True
// build J2DAnmVtxColor (J2DAnmVtxColor) True/True
// build J2DAnmTevRegKey (J2DAnmTevRegKey) True/True
// build J2DAnmColor (J2DAnmColor) True/True
// build J2DAnmTextureSRTKey (J2DAnmTextureSRTKey) True/True
// build J2DAnmTexPattern (J2DAnmTexPattern) True/True
// build JSUPtrLink (JSUPtrLink) False/False
/* top-level dependencies (begin JSUPtrLink) */
/* top-level dependencies (end JSUPtrLink) */
struct JSUPtrLink {
	/* 802DBDFC */ JSUPtrLink(void*);
	/* 802DBE14 */ ~JSUPtrLink();
};

// build JSUPtrList (JSUPtrList) False/False
// build JSUPtrLink (JSUPtrLink) True/True
/* top-level dependencies (begin JSUPtrList) */
// outer dependency: JSUPtrLink
/* top-level dependencies (end JSUPtrList) */
struct JSUPtrList {
	// JSUPtrLink
	/* 802DBEAC */ ~JSUPtrList();
	/* 802DBF14 */ void initiate();
	/* 802DBF4C */ void append(JSUPtrLink*);
	/* 802DC094 */ void insert(JSUPtrLink*, JSUPtrLink*);
};

// build JSUInputStream (JSUInputStream) False/False
/* top-level dependencies (begin JSUInputStream) */
/* top-level dependencies (end JSUInputStream) */
struct JSUInputStream {
	/* 802DC298 */ void read(void*, s32);
};

// build JSUStreamSeekFrom (JSUStreamSeekFrom) True/True
// build JUTResReference (JUTResReference) False/False
// build JSUInputStream (JSUInputStream) True/True
// build JKRArchive (JKRArchive) True/True
/* top-level dependencies (begin JUTResReference) */
// outer dependency: JSUInputStream
// outer dependency: JKRArchive
/* top-level dependencies (end JUTResReference) */
struct JUTResReference {
	// JSUInputStream
	// JKRArchive
	/* 802DE078 */ void getResource(JSUInputStream*, u32, JKRArchive*);
};

// build J2DDataManage (J2DDataManage) False/False
// build JSUInputStream (JSUInputStream) True/True
/* top-level dependencies (begin J2DDataManage) */
// outer dependency: JSUInputStream
/* top-level dependencies (end J2DDataManage) */
struct J2DDataManage {
	// JSUInputStream
	/* 8030CE7C */ void get(JSUInputStream*);
};

// 
// Forward References:
// 

extern "C" void func_802F5D40();
extern "C" static void func_802F5DD0();
extern "C" void func_802F5E88();
extern "C" static void func_802F5F08();
extern "C" void func_802F6D18();
extern "C" void func_802F7264();
extern "C" void __sinit_J2DPane_cpp();

extern "C" void __ct__7J2DPaneFv();
extern "C" void initiate__7J2DPaneFv();
extern "C" void func_802F5D40();
extern "C" static void func_802F5DD0();
extern "C" void func_802F5E88();
extern "C" static void func_802F5F08();
extern "C" void __ct__7J2DPaneFP7J2DPaneP20JSURandomInputStreamUc();
extern "C" void makePaneStream__7J2DPaneFP7J2DPaneP20JSURandomInputStream();
extern "C" void changeUseTrans__7J2DPaneFP7J2DPane();
extern "C" void __dt__7J2DPaneFv();
extern "C" void appendChild__7J2DPaneFP7J2DPane();
extern "C" void insertChild__7J2DPaneFP7J2DPaneP7J2DPane();
extern "C" void draw__7J2DPaneFffPC14J2DGrafContextbb();
extern "C" void func_802F6D18();
extern "C" void move__7J2DPaneFff();
extern "C" void add__7J2DPaneFff();
extern "C" void resize__7J2DPaneFff();
extern "C" void getBounds__7J2DPaneFv();
extern "C" void rotate__7J2DPaneFff13J2DRotateAxisf();
extern "C" void rotate__7J2DPaneFf();
extern "C" void func_802F7264();
extern "C" void search__7J2DPaneFUx();
extern "C" void searchUserInfo__7J2DPaneFUx();
extern "C" void isUsed__7J2DPaneFPC7ResTIMG();
extern "C" void isUsed__7J2DPaneFPC7ResFONT();
extern "C" void makeMatrix__7J2DPaneFffff();
extern "C" void setCullBack__7J2DPaneF11_GXCullMode();
extern "C" void setBasePosition__7J2DPaneF15J2DBasePosition();
extern "C" void setInfluencedAlpha__7J2DPaneFbb();
extern "C" void getGlbVtx__7J2DPaneCFUc();
extern "C" void getFirstChildPane__7J2DPaneFv();
extern "C" void getNextChildPane__7J2DPaneFv();
extern "C" void getParentPane__7J2DPaneFv();
extern "C" void makePaneExStream__7J2DPaneFP7J2DPaneP20JSURandomInputStream();
extern "C" void J2DCast_F32_to_S16__7J2DPaneFfUc();
extern "C" void getPointer__7J2DPaneFP20JSURandomInputStreamUlP10JKRArchive();
extern "C" void setAnimation__7J2DPaneFP10J2DAnmBase();
extern "C" void setAnimation__7J2DPaneFP15J2DAnmTransform();
extern "C" void animationTransform__7J2DPaneFv();
extern "C" void clearAnmTransform__7J2DPaneFv();
extern "C" void animationTransform__7J2DPaneFPC15J2DAnmTransform();
extern "C" void setVisibileAnimation__7J2DPaneFP20J2DAnmVisibilityFull();
extern "C" void setVtxColorAnimation__7J2DPaneFP14J2DAnmVtxColor();
extern "C" void animationPane__7J2DPaneFPC15J2DAnmTransform();
extern "C" void updateTransform__7J2DPaneFPC15J2DAnmTransform();
extern "C" void drawSelf__7J2DPaneFffPA3_A4_f();
extern "C" void rewriteAlpha__7J2DPaneFv();
extern "C" void setAnimationVF__7J2DPaneFP20J2DAnmVisibilityFull();
extern "C" void setAnimationVC__7J2DPaneFP14J2DAnmVtxColor();
extern "C" void setCullBack__7J2DPaneFb();
extern "C" void setConnectParent__7J2DPaneFb();
extern "C" void update__7J2DPaneFv();
extern "C" void drawSelf__7J2DPaneFff();
extern "C" void __sinit_J2DPane_cpp();
SECTION_DATA extern void*lit_2709[8];
SECTION_DATA extern void*const __vt__7J2DPane[38];
SECTION_BSS extern u8 static_mBounds__7J2DPane[16];
SECTION_SDATA2 extern u8 lit_1469[4];
SECTION_SDATA2 extern f32 J2DPane__lit_1489;
SECTION_SDATA2 extern f64 lit_1651;
SECTION_SDATA2 extern f64 lit_1655;
SECTION_SDATA2 extern f32 lit_1725;
SECTION_SDATA2 extern f32 J2DPane__lit_2466;
SECTION_SDATA2 extern f32 lit_2547;
SECTION_SDATA2 extern f32 lit_2890;
SECTION_SDATA2 extern f32 lit_2891;

// 
// External References:
// 

void operator delete(void*);
extern "C" void func_802E90C0();
extern "C" void func_802E987C();
extern "C" void PSMTXCopy();
extern "C" void PSMTXConcat();
extern "C" void PSMTXRotRad();
extern "C" void PSMTXTrans();
extern "C" void PSMTXTransApply();
extern "C" void PSMTXScaleApply();
extern "C" void GXSetCullMode();
extern "C" void _savegpr_25();
extern "C" void _savegpr_27();
extern "C" void _savegpr_28();
extern "C" void _savegpr_29();
extern "C" void _restgpr_25();
extern "C" void _restgpr_27();
extern "C" void _restgpr_28();
extern "C" void _restgpr_29();

extern "C" void setAlpha__7J2DPaneFUc();
extern "C" void calcMtx__7J2DPaneFv();
extern "C" void makeMatrix__7J2DPaneFff();
extern "C" s32 getTypeID__7J2DPaneCFv();
extern "C" void setAnimation__7J2DPaneFP15J2DAnmTevRegKey();
extern "C" void setAnimation__7J2DPaneFP11J2DAnmColor();
extern "C" void setAnimation__7J2DPaneFP19J2DAnmTextureSRTKey();
extern "C" void setAnimation__7J2DPaneFP14J2DAnmVtxColor();
extern "C" void setAnimation__7J2DPaneFP20J2DAnmVisibilityFull();
extern "C" void setAnimation__7J2DPaneFP16J2DAnmTexPattern();
extern "C" void __dl__FPv();
extern "C" void __ct__10JSUPtrLinkFPv();
extern "C" void __dt__10JSUPtrLinkFv();
extern "C" void __dt__10JSUPtrListFv();
extern "C" void initiate__10JSUPtrListFv();
extern "C" void append__10JSUPtrListFP10JSUPtrLink();
extern "C" void insert__10JSUPtrListFP10JSUPtrLinkP10JSUPtrLink();
extern "C" void read__14JSUInputStreamFPvl();
extern "C" void align__20JSURandomInputStreamFl();
extern "C" void peek__20JSURandomInputStreamFPvl();
extern "C" void seek__20JSURandomInputStreamFl17JSUStreamSeekFrom();
extern "C" void getResource__15JUTResReferenceFP14JSUInputStreamUlP10JKRArchive();
extern "C" void setScissor__14J2DGrafContextFv();
extern "C" void func_802E90C0();
extern "C" void func_802E987C();
extern "C" void get__13J2DDataManageFP14JSUInputStream();
extern "C" void PSMTXCopy();
extern "C" void PSMTXConcat();
extern "C" void PSMTXRotRad();
extern "C" void PSMTXTrans();
extern "C" void PSMTXTransApply();
extern "C" void PSMTXScaleApply();
extern "C" void GXSetCullMode();
extern "C" void _savegpr_25();
extern "C" void _savegpr_27();
extern "C" void _savegpr_28();
extern "C" void _savegpr_29();
extern "C" void _restgpr_25();
extern "C" void _restgpr_27();
extern "C" void _restgpr_28();
extern "C" void _restgpr_29();
SECTION_DATA extern void*const __vt__14J2DGrafContext[10];
SECTION_SBSS extern u8 mDataManage__9J2DScreen[4 + 4 /* padding */];

// 
// Declarations:
// 

/* ############################################################################################## */
/* 803CCFB0-803CCFD0 0020+00 rc=1 efc=0 .data      @2709                                                        */
void* lit_2709[8] = {
	(void*)(((char*)setAnimation__7J2DPaneFP10J2DAnmBase)+0x38),
	(void*)(((char*)setAnimation__7J2DPaneFP10J2DAnmBase)+0x4C),
	(void*)(((char*)setAnimation__7J2DPaneFP10J2DAnmBase)+0x88),
	(void*)(((char*)setAnimation__7J2DPaneFP10J2DAnmBase)+0xC0),
	(void*)(((char*)setAnimation__7J2DPaneFP10J2DAnmBase)+0x74),
	(void*)(((char*)setAnimation__7J2DPaneFP10J2DAnmBase)+0xB0),
	(void*)(((char*)setAnimation__7J2DPaneFP10J2DAnmBase)+0x9C),
	(void*)(((char*)setAnimation__7J2DPaneFP10J2DAnmBase)+0x60),
};

/* 803CCFD0-803CD068 0094+04 rc=5 efc=0 .data      __vt__7J2DPane                                               */
void* const __vt__7J2DPane[38] = {
	NULL, /* RTTI */
	NULL,
	(void*)__dt__7J2DPaneFv,
	(void*)getTypeID__7J2DPaneCFv,
	(void*)move__7J2DPaneFff,
	(void*)add__7J2DPaneFff,
	(void*)resize__7J2DPaneFff,
	(void*)setCullBack__7J2DPaneFb,
	(void*)setCullBack__7J2DPaneF11_GXCullMode,
	(void*)setAlpha__7J2DPaneFUc,
	(void*)setConnectParent__7J2DPaneFb,
	(void*)calcMtx__7J2DPaneFv,
	(void*)update__7J2DPaneFv,
	(void*)drawSelf__7J2DPaneFff,
	(void*)drawSelf__7J2DPaneFffPA3_A4_f,
	(void*)search__7J2DPaneFUx,
	(void*)searchUserInfo__7J2DPaneFUx,
	(void*)makeMatrix__7J2DPaneFff,
	(void*)makeMatrix__7J2DPaneFffff,
	(void*)isUsed__7J2DPaneFPC7ResTIMG,
	(void*)isUsed__7J2DPaneFPC7ResFONT,
	(void*)clearAnmTransform__7J2DPaneFv,
	(void*)rewriteAlpha__7J2DPaneFv,
	(void*)setAnimation__7J2DPaneFP10J2DAnmBase,
	(void*)setAnimation__7J2DPaneFP15J2DAnmTransform,
	(void*)setAnimation__7J2DPaneFP11J2DAnmColor,
	(void*)setAnimation__7J2DPaneFP16J2DAnmTexPattern,
	(void*)setAnimation__7J2DPaneFP19J2DAnmTextureSRTKey,
	(void*)setAnimation__7J2DPaneFP15J2DAnmTevRegKey,
	(void*)setAnimation__7J2DPaneFP20J2DAnmVisibilityFull,
	(void*)setAnimation__7J2DPaneFP14J2DAnmVtxColor,
	(void*)animationTransform__7J2DPaneFPC15J2DAnmTransform,
	(void*)setVisibileAnimation__7J2DPaneFP20J2DAnmVisibilityFull,
	(void*)setAnimationVF__7J2DPaneFP20J2DAnmVisibilityFull,
	(void*)setVtxColorAnimation__7J2DPaneFP14J2DAnmVtxColor,
	(void*)setAnimationVC__7J2DPaneFP14J2DAnmVtxColor,
	(void*)animationPane__7J2DPaneFPC15J2DAnmTransform,
	/* padding */
	NULL,
};

/* 804561F0-804561F4 0004+00 rc=12 efc=0 .sdata2    @1469                                                        */
u8 lit_1469[4] = {
	0x00, 0x00, 0x00, 0x00,
};

/* 802F5BF8-802F5CB8 00C0+00 rc=10 efc=10 .text      __ct__7J2DPaneFv                                             */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm J2DPane::J2DPane() {
	nofralloc
#include "asm/JSystem/J2DGraph/J2DPane/__ct__7J2DPaneFv.s"
}
#pragma pop


/* ############################################################################################## */
/* 804561F4-804561F8 0004+00 rc=3 efc=0 .sdata2    @1489                                                        */
f32 J2DPane__lit_1489 = 1.0f;

/* 802F5CB8-802F5D40 0088+00 rc=3 efc=0 .text      initiate__7J2DPaneFv                                         */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void J2DPane::initiate() {
	nofralloc
#include "asm/JSystem/J2DGraph/J2DPane/initiate__7J2DPaneFv.s"
}
#pragma pop


/* 802F5D40-802F5DD0 0090+00 rc=1 efc=1 .text      __ct__7J2DPaneFP7J2DPanebUxRCQ29JGeometry8TBox2<f>           */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
extern "C" asm void func_802F5D40() {
	nofralloc
#include "asm/JSystem/J2DGraph/J2DPane/func_802F5D40.s"
}
#pragma pop


/* 802F5DD0-802F5E88 00B8+00 rc=1 efc=0 .text      initialize__7J2DPaneFP7J2DPanebUxRCQ29JGeometry8TBox2<f>     */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
extern "C" asm static void func_802F5DD0() {
	nofralloc
#include "asm/JSystem/J2DGraph/J2DPane/func_802F5DD0.s"
}
#pragma pop


/* 802F5E88-802F5F08 0080+00 rc=3 efc=3 .text      __ct__7J2DPaneFUxRCQ29JGeometry8TBox2<f>                     */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
extern "C" asm void func_802F5E88() {
	nofralloc
#include "asm/JSystem/J2DGraph/J2DPane/func_802F5E88.s"
}
#pragma pop


/* 802F5F08-802F5F9C 0094+00 rc=1 efc=0 .text      initialize__7J2DPaneFUxRCQ29JGeometry8TBox2<f>               */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
extern "C" asm static void func_802F5F08() {
	nofralloc
#include "asm/JSystem/J2DGraph/J2DPane/func_802F5F08.s"
}
#pragma pop


/* 802F5F9C-802F60C4 0128+00 rc=1 efc=1 .text      __ct__7J2DPaneFP7J2DPaneP20JSURandomInputStreamUc            */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm J2DPane::J2DPane(J2DPane* field_0, JSURandomInputStream* field_1, u8 field_2) {
	nofralloc
#include "asm/JSystem/J2DGraph/J2DPane/__ct__7J2DPaneFP7J2DPaneP20JSURandomInputStreamUc.s"
}
#pragma pop


/* ############################################################################################## */
/* 804561F8-80456200 0008+00 rc=3 efc=0 .sdata2    @1651                                                        */
f64 lit_1651 = 4503601774854144.0 /* cast s32 to float */;

/* 80456200-80456208 0008+00 rc=3 efc=0 .sdata2    @1655                                                        */
f64 lit_1655 = 4503599627370496.0 /* cast u32 to float */;

/* 802F60C4-802F63F8 0334+00 rc=4 efc=3 .text      makePaneStream__7J2DPaneFP7J2DPaneP20JSURandomInputStream    */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void J2DPane::makePaneStream(J2DPane* field_0, JSURandomInputStream* field_1) {
	nofralloc
#include "asm/JSystem/J2DGraph/J2DPane/makePaneStream__7J2DPaneFP7J2DPaneP20JSURandomInputStream.s"
}
#pragma pop


/* ############################################################################################## */
/* 80456208-8045620C 0004+00 rc=4 efc=0 .sdata2    @1725                                                        */
f32 lit_1725 = 0.5f;

/* 802F63F8-802F658C 0194+00 rc=4 efc=0 .text      changeUseTrans__7J2DPaneFP7J2DPane                           */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void J2DPane::changeUseTrans(J2DPane* field_0) {
	nofralloc
#include "asm/JSystem/J2DGraph/J2DPane/changeUseTrans__7J2DPaneFP7J2DPane.s"
}
#pragma pop


/* 802F658C-802F666C 00E0+00 rc=5 efc=4 .text      __dt__7J2DPaneFv                                             */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm J2DPane::~J2DPane() {
	nofralloc
#include "asm/JSystem/J2DGraph/J2DPane/__dt__7J2DPaneFv.s"
}
#pragma pop


/* 802F666C-802F6714 00A8+00 rc=2 efc=2 .text      appendChild__7J2DPaneFP7J2DPane                              */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void J2DPane::appendChild(J2DPane* field_0) {
	nofralloc
#include "asm/JSystem/J2DGraph/J2DPane/appendChild__7J2DPaneFP7J2DPane.s"
}
#pragma pop


/* 802F6714-802F67E0 00CC+00 rc=1 efc=1 .text      insertChild__7J2DPaneFP7J2DPaneP7J2DPane                     */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void J2DPane::insertChild(J2DPane* field_0, J2DPane* field_1) {
	nofralloc
#include "asm/JSystem/J2DGraph/J2DPane/insertChild__7J2DPaneFP7J2DPaneP7J2DPane.s"
}
#pragma pop


/* 802F67E0-802F6D18 0538+00 rc=1 efc=1 .text      draw__7J2DPaneFffPC14J2DGrafContextbb                        */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void J2DPane::draw(f32 field_0, f32 field_1, J2DGrafContext const* field_2, bool field_3, bool field_4) {
	nofralloc
#include "asm/JSystem/J2DGraph/J2DPane/draw__7J2DPaneFffPC14J2DGrafContextbb.s"
}
#pragma pop


/* 802F6D18-802F6F60 0248+00 rc=6 efc=4 .text      place__7J2DPaneFRCQ29JGeometry8TBox2<f>                      */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
extern "C" asm void func_802F6D18() {
	nofralloc
#include "asm/JSystem/J2DGraph/J2DPane/func_802F6D18.s"
}
#pragma pop


/* 802F6F60-802F6FB4 0054+00 rc=8 efc=7 .text      move__7J2DPaneFff                                            */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void J2DPane::move(f32 field_0, f32 field_1) {
	nofralloc
#include "asm/JSystem/J2DGraph/J2DPane/move__7J2DPaneFff.s"
}
#pragma pop


/* 802F6FB4-802F6FF8 0044+00 rc=8 efc=7 .text      add__7J2DPaneFff                                             */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void J2DPane::add(f32 field_0, f32 field_1) {
	nofralloc
#include "asm/JSystem/J2DGraph/J2DPane/add__7J2DPaneFff.s"
}
#pragma pop


/* 802F6FF8-802F7100 0108+00 rc=6 efc=5 .text      resize__7J2DPaneFff                                          */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void J2DPane::resize(f32 field_0, f32 field_1) {
	nofralloc
#include "asm/JSystem/J2DGraph/J2DPane/resize__7J2DPaneFff.s"
}
#pragma pop


/* ############################################################################################## */
/* 804349B0-804349C0 0010+00 rc=2 efc=0 .bss       static_mBounds__7J2DPane                                     */
u8 static_mBounds__7J2DPane[16];

/* 802F7100-802F71DC 00DC+00 rc=25 efc=25 .text      getBounds__7J2DPaneFv                                        */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void J2DPane::getBounds() {
	nofralloc
#include "asm/JSystem/J2DGraph/J2DPane/getBounds__7J2DPaneFv.s"
}
#pragma pop


/* 802F71DC-802F720C 0030+00 rc=12 efc=12 .text      rotate__7J2DPaneFff13J2DRotateAxisf                          */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void J2DPane::rotate(f32 field_0, f32 field_1, J2DRotateAxis field_2, f32 field_3) {
	nofralloc
#include "asm/JSystem/J2DGraph/J2DPane/rotate__7J2DPaneFff13J2DRotateAxisf.s"
}
#pragma pop


/* 802F720C-802F7264 0058+00 rc=1 efc=0 .text      rotate__7J2DPaneFf                                           */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void J2DPane::rotate(f32 field_0) {
	nofralloc
#include "asm/JSystem/J2DGraph/J2DPane/rotate__7J2DPaneFf.s"
}
#pragma pop


/* 802F7264-802F72E0 007C+00 rc=2 efc=2 .text      clip__7J2DPaneFRCQ29JGeometry8TBox2<f>                       */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
extern "C" asm void func_802F7264() {
	nofralloc
#include "asm/JSystem/J2DGraph/J2DPane/func_802F7264.s"
}
#pragma pop


/* 802F72E0-802F7388 00A8+00 rc=8 efc=7 .text      search__7J2DPaneFUx                                          */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void J2DPane::search(u64 field_0) {
	nofralloc
#include "asm/JSystem/J2DGraph/J2DPane/search__7J2DPaneFUx.s"
}
#pragma pop


/* 802F7388-802F7430 00A8+00 rc=8 efc=7 .text      searchUserInfo__7J2DPaneFUx                                  */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void J2DPane::searchUserInfo(u64 field_0) {
	nofralloc
#include "asm/JSystem/J2DGraph/J2DPane/searchUserInfo__7J2DPaneFUx.s"
}
#pragma pop


/* 802F7430-802F74B8 0088+00 rc=8 efc=7 .text      isUsed__7J2DPaneFPC7ResTIMG                                  */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void J2DPane::isUsed(ResTIMG const* field_0) {
	nofralloc
#include "asm/JSystem/J2DGraph/J2DPane/isUsed__7J2DPaneFPC7ResTIMG.s"
}
#pragma pop


/* 802F74B8-802F7540 0088+00 rc=8 efc=7 .text      isUsed__7J2DPaneFPC7ResFONT                                  */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void J2DPane::isUsed(ResFONT const* field_0) {
	nofralloc
#include "asm/JSystem/J2DGraph/J2DPane/isUsed__7J2DPaneFPC7ResFONT.s"
}
#pragma pop


/* ############################################################################################## */
/* 8045620C-80456210 0004+00 rc=1 efc=0 .sdata2    @2466                                                        */
f32 J2DPane__lit_2466 = 0.01745329238474369f;

/* 802F7540-802F7680 0140+00 rc=8 efc=7 .text      makeMatrix__7J2DPaneFffff                                    */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void J2DPane::makeMatrix(f32 field_0, f32 field_1, f32 field_2, f32 field_3) {
	nofralloc
#include "asm/JSystem/J2DGraph/J2DPane/makeMatrix__7J2DPaneFffff.s"
}
#pragma pop


/* 802F7680-802F76F8 0078+00 rc=8 efc=7 .text      setCullBack__7J2DPaneF11_GXCullMode                          */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void J2DPane::setCullBack(_GXCullMode field_0) {
	nofralloc
#include "asm/JSystem/J2DGraph/J2DPane/setCullBack__7J2DPaneF11_GXCullMode.s"
}
#pragma pop


/* 802F76F8-802F77D0 00D8+00 rc=8 efc=8 .text      setBasePosition__7J2DPaneF15J2DBasePosition                  */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void J2DPane::setBasePosition(J2DBasePosition field_0) {
	nofralloc
#include "asm/JSystem/J2DGraph/J2DPane/setBasePosition__7J2DPaneF15J2DBasePosition.s"
}
#pragma pop


/* ############################################################################################## */
/* 80456210-80456214 0004+00 rc=1 efc=0 .sdata2    @2547                                                        */
f32 lit_2547 = 255.0f;

/* 802F77D0-802F79A8 01D8+00 rc=1 efc=1 .text      setInfluencedAlpha__7J2DPaneFbb                              */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void J2DPane::setInfluencedAlpha(bool field_0, bool field_1) {
	nofralloc
#include "asm/JSystem/J2DGraph/J2DPane/setInfluencedAlpha__7J2DPaneFbb.s"
}
#pragma pop


/* 802F79A8-802F7A8C 00E4+00 rc=3 efc=3 .text      getGlbVtx__7J2DPaneCFUc                                      */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void J2DPane::getGlbVtx(u8 field_0) const {
	nofralloc
#include "asm/JSystem/J2DGraph/J2DPane/getGlbVtx__7J2DPaneCFUc.s"
}
#pragma pop


/* 802F7A8C-802F7AC4 0038+00 rc=16 efc=15 .text      getFirstChildPane__7J2DPaneFv                                */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void J2DPane::getFirstChildPane() {
	nofralloc
#include "asm/JSystem/J2DGraph/J2DPane/getFirstChildPane__7J2DPaneFv.s"
}
#pragma pop


/* 802F7AC4-802F7AFC 0038+00 rc=9 efc=8 .text      getNextChildPane__7J2DPaneFv                                 */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void J2DPane::getNextChildPane() {
	nofralloc
#include "asm/JSystem/J2DGraph/J2DPane/getNextChildPane__7J2DPaneFv.s"
}
#pragma pop


/* 802F7AFC-802F7B18 001C+00 rc=17 efc=11 .text      getParentPane__7J2DPaneFv                                    */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void J2DPane::getParentPane() {
	nofralloc
#include "asm/JSystem/J2DGraph/J2DPane/getParentPane__7J2DPaneFv.s"
}
#pragma pop


/* 802F7B18-802F7D00 01E8+00 rc=7 efc=6 .text      makePaneExStream__7J2DPaneFP7J2DPaneP20JSURandomInputStream  */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void J2DPane::makePaneExStream(J2DPane* field_0, JSURandomInputStream* field_1) {
	nofralloc
#include "asm/JSystem/J2DGraph/J2DPane/makePaneExStream__7J2DPaneFP7J2DPaneP20JSURandomInputStream.s"
}
#pragma pop


/* 802F7D00-802F7DB8 00B8+00 rc=1 efc=1 .text      J2DCast_F32_to_S16__7J2DPaneFfUc                             */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void J2DPane::J2DCast_F32_to_S16(f32 field_0, u8 field_1) {
	nofralloc
#include "asm/JSystem/J2DGraph/J2DPane/J2DCast_F32_to_S16__7J2DPaneFfUc.s"
}
#pragma pop


/* 802F7DB8-802F7EF4 013C+00 rc=3 efc=3 .text      getPointer__7J2DPaneFP20JSURandomInputStreamUlP10JKRArchive  */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void J2DPane::getPointer(JSURandomInputStream* field_0, u32 field_1, JKRArchive* field_2) {
	nofralloc
#include "asm/JSystem/J2DGraph/J2DPane/getPointer__7J2DPaneFP20JSURandomInputStreamUlP10JKRArchive.s"
}
#pragma pop


/* 802F7EF4-802F7FC4 00D0+00 rc=9 efc=7 .text      setAnimation__7J2DPaneFP10J2DAnmBase                         */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void J2DPane::setAnimation(J2DAnmBase* field_0) {
	nofralloc
#include "asm/JSystem/J2DGraph/J2DPane/setAnimation__7J2DPaneFP10J2DAnmBase.s"
}
#pragma pop


/* 802F7FC4-802F7FCC 0008+00 rc=8 efc=7 .text      setAnimation__7J2DPaneFP15J2DAnmTransform                    */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void J2DPane::setAnimation(J2DAnmTransform* field_0) {
	nofralloc
#include "asm/JSystem/J2DGraph/J2DPane/setAnimation__7J2DPaneFP15J2DAnmTransform.s"
}
#pragma pop


/* 802F7FCC-802F8004 0038+00 rc=57 efc=57 .text      animationTransform__7J2DPaneFv                               */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void J2DPane::animationTransform() {
	nofralloc
#include "asm/JSystem/J2DGraph/J2DPane/animationTransform__7J2DPaneFv.s"
}
#pragma pop


/* 802F8004-802F8080 007C+00 rc=8 efc=7 .text      clearAnmTransform__7J2DPaneFv                                */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void J2DPane::clearAnmTransform() {
	nofralloc
#include "asm/JSystem/J2DGraph/J2DPane/clearAnmTransform__7J2DPaneFv.s"
}
#pragma pop


/* 802F8080-802F8118 0098+00 rc=8 efc=7 .text      animationTransform__7J2DPaneFPC15J2DAnmTransform             */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void J2DPane::animationTransform(J2DAnmTransform const* field_0) {
	nofralloc
#include "asm/JSystem/J2DGraph/J2DPane/animationTransform__7J2DPaneFPC15J2DAnmTransform.s"
}
#pragma pop


/* 802F8118-802F81A0 0088+00 rc=9 efc=8 .text      setVisibileAnimation__7J2DPaneFP20J2DAnmVisibilityFull       */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void J2DPane::setVisibileAnimation(J2DAnmVisibilityFull* field_0) {
	nofralloc
#include "asm/JSystem/J2DGraph/J2DPane/setVisibileAnimation__7J2DPaneFP20J2DAnmVisibilityFull.s"
}
#pragma pop


/* 802F81A0-802F8228 0088+00 rc=9 efc=8 .text      setVtxColorAnimation__7J2DPaneFP14J2DAnmVtxColor             */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void J2DPane::setVtxColorAnimation(J2DAnmVtxColor* field_0) {
	nofralloc
#include "asm/JSystem/J2DGraph/J2DPane/setVtxColorAnimation__7J2DPaneFP14J2DAnmVtxColor.s"
}
#pragma pop


/* 802F8228-802F82C0 0098+00 rc=8 efc=7 .text      animationPane__7J2DPaneFPC15J2DAnmTransform                  */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void J2DPane::animationPane(J2DAnmTransform const* field_0) {
	nofralloc
#include "asm/JSystem/J2DGraph/J2DPane/animationPane__7J2DPaneFPC15J2DAnmTransform.s"
}
#pragma pop


/* ############################################################################################## */
/* 80456214-80456218 0004+00 rc=1 efc=0 .sdata2    @2890                                                        */
f32 lit_2890 = 360.0f;

/* 80456218-80456220 0004+04 rc=1 efc=0 .sdata2    @2891                                                        */
f32 lit_2891 = 65535.0f;
/* padding 4 bytes */

/* 802F82C0-802F83C8 0108+00 rc=2 efc=0 .text      updateTransform__7J2DPaneFPC15J2DAnmTransform                */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void J2DPane::updateTransform(J2DAnmTransform const* field_0) {
	nofralloc
#include "asm/JSystem/J2DGraph/J2DPane/updateTransform__7J2DPaneFPC15J2DAnmTransform.s"
}
#pragma pop


/* 802F83C8-802F83CC 0004+00 rc=1 efc=0 .text      drawSelf__7J2DPaneFffPA3_A4_f                                */
void J2DPane::drawSelf(f32 field_0, f32 field_1, f32 (* field_2)[3][4]) {
	/* empty function */
}


/* 802F83CC-802F83D0 0004+00 rc=2 efc=1 .text      rewriteAlpha__7J2DPaneFv                                     */
void J2DPane::rewriteAlpha() {
	/* empty function */
}


/* 802F83D0-802F83FC 002C+00 rc=7 efc=6 .text      setAnimationVF__7J2DPaneFP20J2DAnmVisibilityFull             */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void J2DPane::setAnimationVF(J2DAnmVisibilityFull* field_0) {
	nofralloc
#include "asm/JSystem/J2DGraph/J2DPane/setAnimationVF__7J2DPaneFP20J2DAnmVisibilityFull.s"
}
#pragma pop


/* 802F83FC-802F8428 002C+00 rc=7 efc=6 .text      setAnimationVC__7J2DPaneFP14J2DAnmVtxColor                   */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void J2DPane::setAnimationVC(J2DAnmVtxColor* field_0) {
	nofralloc
#include "asm/JSystem/J2DGraph/J2DPane/setAnimationVC__7J2DPaneFP14J2DAnmVtxColor.s"
}
#pragma pop


/* 802F8428-802F8464 003C+00 rc=5 efc=4 .text      setCullBack__7J2DPaneFb                                      */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void J2DPane::setCullBack(bool field_0) {
	nofralloc
#include "asm/JSystem/J2DGraph/J2DPane/setCullBack__7J2DPaneFb.s"
}
#pragma pop


/* 802F8464-802F8474 0010+00 rc=6 efc=5 .text      setConnectParent__7J2DPaneFb                                 */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void J2DPane::setConnectParent(bool field_0) {
	nofralloc
#include "asm/JSystem/J2DGraph/J2DPane/setConnectParent__7J2DPaneFb.s"
}
#pragma pop


/* 802F8474-802F8478 0004+00 rc=8 efc=7 .text      update__7J2DPaneFv                                           */
void J2DPane::update() {
	/* empty function */
}


/* 802F8478-802F847C 0004+00 rc=2 efc=1 .text      drawSelf__7J2DPaneFff                                        */
void J2DPane::drawSelf(f32 field_0, f32 field_1) {
	/* empty function */
}


/* 802F847C-802F8498 001C+00 rc=1 efc=1 .text      __sinit_J2DPane_cpp                                          */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
extern "C" asm void __sinit_J2DPane_cpp() {
	nofralloc
#include "asm/JSystem/J2DGraph/J2DPane/__sinit_J2DPane_cpp.s"
}
#pragma pop


