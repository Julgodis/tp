// 
// Generated By: dol2asm
// Translation Unit: JASAudioReseter
// 

#include "dolphin/types.h"

// 
// Types:
// 

struct JASAudioReseter {
	/* 8029D0B4 */ JASAudioReseter();
	/* 8029D0FC */ ~JASAudioReseter();
	/* 8029D138 */ void start(u32, bool);
	/* 8029D1D4 */ void resume();
	/* 8029D1F8 */ void checkDone() const;
	/* 8029D200 */ void calc();
	/* 8029D2D4 */ void callback(void*);
};

struct JASAudioThread {
	/* 8029CDC0 */ void stop();
};

struct JASDSPChannel {
	/* 8029D340 */ void drop();
	/* 8029D948 */ void getHandle(u32);
};

struct JASDriver {
	/* 8029E130 */ void setDSPLevel(f32);
	/* 8029E158 */ void getDSPLevel();
};

// 
// Forward References:
// 


extern "C" void __ct__15JASAudioReseterFv(); // 1
extern "C" void __dt__15JASAudioReseterFv(); // 1
extern "C" void start__15JASAudioReseterFUlb(); // 1
extern "C" void resume__15JASAudioReseterFv(); // 1
extern "C" void checkDone__15JASAudioReseterCFv(); // 1
extern "C" void calc__15JASAudioReseterFv(); // 1
extern "C" void callback__15JASAudioReseterFPv(); // 1

// 
// External References:
// 

extern "C" void registerDspSyncCallback__9JASDriverFPFPv_lPv(); // 1
void operator delete(void*); // 2
extern "C" void OSDisableInterrupts(); // 1
extern "C" void OSRestoreInterrupts(); // 1

extern "C" void stop__14JASAudioThreadFv(); // 1
extern "C" void drop__13JASDSPChannelFv(); // 1
extern "C" void getHandle__13JASDSPChannelFUl(); // 1
extern "C" void setDSPLevel__9JASDriverFf(); // 1
extern "C" void getDSPLevel__9JASDriverFv(); // 1
extern "C" void registerDspSyncCallback__9JASDriverFPFPv_lPv(); // 1
extern "C" void __dl__FPv(); // 1
extern "C" void OSDisableInterrupts(); // 1
extern "C" void OSRestoreInterrupts(); // 1
extern "C" extern u8 data_80450B8C[4];

// 
// Declarations:
// 

/* 8029D0B4-8029D0FC 0048+00 rc=1 efc=1 rfr=False None .text      __ct__15JASAudioReseterFv                                    */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm JASAudioReseter::JASAudioReseter() {
	nofralloc
#include "asm/JSystem/JAudio2/JASAudioReseter/__ct__15JASAudioReseterFv.s"
}
#pragma pop


/* 8029D0FC-8029D138 003C+00 rc=1 efc=1 rfr=False None .text      __dt__15JASAudioReseterFv                                    */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm JASAudioReseter::~JASAudioReseter() {
	nofralloc
#include "asm/JSystem/JAudio2/JASAudioReseter/__dt__15JASAudioReseterFv.s"
}
#pragma pop


/* 8029D138-8029D1D4 009C+00 rc=1 efc=1 rfr=False None .text      start__15JASAudioReseterFUlb                                 */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void JASAudioReseter::start(u32 field_0, bool field_1) {
	nofralloc
#include "asm/JSystem/JAudio2/JASAudioReseter/start__15JASAudioReseterFUlb.s"
}
#pragma pop


/* 8029D1D4-8029D1F8 0024+00 rc=1 efc=1 rfr=False None .text      resume__15JASAudioReseterFv                                  */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void JASAudioReseter::resume() {
	nofralloc
#include "asm/JSystem/JAudio2/JASAudioReseter/resume__15JASAudioReseterFv.s"
}
#pragma pop


/* 8029D1F8-8029D200 0008+00 rc=2 efc=2 rfr=False None .text      checkDone__15JASAudioReseterCFv                              */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void JASAudioReseter::checkDone() const {
	nofralloc
#include "asm/JSystem/JAudio2/JASAudioReseter/checkDone__15JASAudioReseterCFv.s"
}
#pragma pop


/* ############################################################################################## */
/* 80455740-80455748 0008+00 rc=1 efc=0 rfr=False None .sdata2    @156                                                         */
SECTION_SDATA2 static f64 JASAudioReseter__lit_156 = 4503599627370496.0 /* cast u32 to float */;

/* 8029D200-8029D2D4 00D4+00 rc=1 efc=0 rfr=False None .text      calc__15JASAudioReseterFv                                    */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void JASAudioReseter::calc() {
	nofralloc
#include "asm/JSystem/JAudio2/JASAudioReseter/calc__15JASAudioReseterFv.s"
}
#pragma pop


/* 8029D2D4-8029D2F4 0020+00 rc=1 efc=0 rfr=False None .text      callback__15JASAudioReseterFPv                               */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void JASAudioReseter::callback(void* field_0) {
	nofralloc
#include "asm/JSystem/JAudio2/JASAudioReseter/callback__15JASAudioReseterFPv.s"
}
#pragma pop


