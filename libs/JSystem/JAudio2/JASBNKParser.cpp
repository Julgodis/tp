// 
// Generated By: dol2asm
// Translation Unit: JASBNKParser
// 

#include "dol2asm.h"
#include "dolphin/types.h"
#include "JSystem/JAudio2/JASBNKParser.h"

// 
// Types:
// 

struct JKRHeap {
	/* 802CE72C */ void getFreeSize();
};

struct JASInst {
};

struct JASBasicBank {
	/* 80297D78 */ JASBasicBank();
	/* 80297DA4 */ void newInstTable(u8, JKRHeap*);
	/* 80297E68 */ void setInst(int, JASInst*);
	/* 80297E80 */ void getInst(int) const;
};

struct JASOscillator {
	struct Point {
	};

	struct Data {
	};

};

struct JASBNKParser {
	struct Ver1 {
		/* 80299600 */ void findChunk(void const*, u32);
		/* 8029963C */ void createBasicBank(void const*, JKRHeap*);
	};

	struct Ver0 {
		struct THeader {
		};

		struct TOsc {
		};

		/* 80299A3C */ void createBasicBank(void const*, JKRHeap*);
		/* 80299E68 */ void findOscPtr(JASBasicBank*, JASBNKParser::Ver0::THeader const*, JASBNKParser::Ver0::TOsc const*);
		/* 80299F8C */ void getOscTableEndPtr(JASOscillator::Point const*);
	};

	/* 80299538 */ void createBank(void const*, JKRHeap*);
	/* 80299558 */ void createBasicBank(void const*, JKRHeap*);
};

struct JASCalc {
	/* 8028F354 */ void bcopy(void const*, void*, u32);
};

struct JASGenericMemPool {
	/* 80290848 */ JASGenericMemPool();
};

template <typename A0>
struct JASMemPool_MultiThreaded { };
/* JASMemPool_MultiThreaded<JASChannel> */
struct JASMemPool_MultiThreaded__template2 {
	/* 802978DC */ ~JASMemPool_MultiThreaded__template2();
};

struct JASBasicInst {
	/* 80298014 */ JASBasicInst();
	/* 8029819C */ void setKeyRegionCount(u32, JKRHeap*);
	/* 8029821C */ void setOsc(int, JASOscillator::Data const*);
	/* 8029822C */ void getKeyRegion(int);
};

struct JASDrumSet {
	struct TPerc {
		/* 802984C4 */ TPerc();
		/* 802984E4 */ void setRelease(u32);
	};

	/* 802982EC */ JASDrumSet();
	/* 80298370 */ void newPercArray(u8, JKRHeap*);
	/* 802984B4 */ void setPerc(int, JASDrumSet::TPerc*);
};

// 
// Forward References:
// 

static void JSUConvertOffsetToPtr__template7(void const*, u32); // 2
static void JSUConvertOffsetToPtr__template8(void const*, u32); // 2
static void JSUConvertOffsetToPtr__template9(void const*, u32); // 2
static void JSUConvertOffsetToPtr__template10(void const*, u32); // 2
static void JSUConvertOffsetToPtr__template11(void const*, u32); // 2
static void JSUConvertOffsetToPtr__template12(void const*, u32); // 2
static void JSUConvertOffsetToPtr__template13(void const*, u32); // 2

extern "C" void createBank__12JASBNKParserFPCvP7JKRHeap(); // 1
extern "C" void createBasicBank__12JASBNKParserFPCvP7JKRHeap(); // 1
extern "C" void findChunk__Q212JASBNKParser4Ver1FPCvUl(); // 1
extern "C" void createBasicBank__Q212JASBNKParser4Ver1FPCvP7JKRHeap(); // 1
extern "C" void createBasicBank__Q212JASBNKParser4Ver0FPCvP7JKRHeap(); // 1
extern "C" void findOscPtr__Q212JASBNKParser4Ver0FP12JASBasicBankPCQ312JASBNKParser4Ver07THeaderPCQ312JASBNKParser4Ver04TOsc(); // 1
extern "C" void getOscTableEndPtr__Q212JASBNKParser4Ver0FPCQ213JASOscillator5Point(); // 1
extern "C" static void func_80299FA0(); // 1
extern "C" static void func_80299FB8(); // 1
extern "C" static void func_80299FD0(); // 1
extern "C" static void func_80299FE8(); // 1
extern "C" static void func_8029A000(); // 1
extern "C" static void func_8029A018(); // 1
extern "C" static void func_8029A030(); // 1
extern "C" void __sinit_JASBNKParser_cpp(); // 1

// 
// External References:
// 

void* operator new(u32, JKRHeap*, int); // 2
void* operator new[](u32, JKRHeap*, int); // 2

extern "C" void bcopy__7JASCalcFPCvPvUl(); // 1
extern "C" void __ct__17JASGenericMemPoolFv(); // 1
extern "C" void func_802978DC(); // 1
extern "C" void __ct__12JASBasicBankFv(); // 1
extern "C" void newInstTable__12JASBasicBankFUcP7JKRHeap(); // 1
extern "C" void setInst__12JASBasicBankFiP7JASInst(); // 1
extern "C" void getInst__12JASBasicBankCFi(); // 1
extern "C" void __ct__12JASBasicInstFv(); // 1
extern "C" void setKeyRegionCount__12JASBasicInstFUlP7JKRHeap(); // 1
extern "C" void setOsc__12JASBasicInstFiPCQ213JASOscillator4Data(); // 1
extern "C" void getKeyRegion__12JASBasicInstFi(); // 1
extern "C" void __ct__10JASDrumSetFv(); // 1
extern "C" void newPercArray__10JASDrumSetFUcP7JKRHeap(); // 1
extern "C" void setPerc__10JASDrumSetFiPQ210JASDrumSet5TPerc(); // 1
extern "C" void __ct__Q210JASDrumSet5TPercFv(); // 1
extern "C" void setRelease__Q210JASDrumSet5TPercFUl(); // 1
extern "C" void getFreeSize__7JKRHeapFv(); // 1
extern "C" void* __nw__FUlP7JKRHeapi(); // 1
extern "C" void* __nwa__FUlP7JKRHeapi(); // 1
extern "C" void __register_global_object(); // 1
extern "C" void _savegpr_17(); // 1
extern "C" void _savegpr_19(); // 1
extern "C" void _savegpr_23(); // 1
extern "C" void _savegpr_28(); // 1
extern "C" void _restgpr_17(); // 1
extern "C" void _restgpr_19(); // 1
extern "C" void _restgpr_23(); // 1
extern "C" void _restgpr_28(); // 1
extern "C" extern u8 JASDram[4];

// 
// Declarations:
// 

/* 80299538-80299558 0020+00 s=0 e=1 z=0  None .text      createBank__12JASBNKParserFPCvP7JKRHeap                      */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void JASBNKParser::createBank(void const* param_0, JKRHeap* param_1) {
	nofralloc
#include "asm/JSystem/JAudio2/JASBNKParser/createBank__12JASBNKParserFPCvP7JKRHeap.s"
}
#pragma pop


/* ############################################################################################## */
/* 80451288-8045128C 0004+00 s=1 e=0 z=0  None .sbss      sUsedHeapSize__12JASBNKParser                                */
static u8 sUsedHeapSize__12JASBNKParser[4];

/* 80299558-80299600 00A8+00 s=1 e=0 z=0  None .text      createBasicBank__12JASBNKParserFPCvP7JKRHeap                 */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void JASBNKParser::createBasicBank(void const* param_0, JKRHeap* param_1) {
	nofralloc
#include "asm/JSystem/JAudio2/JASBNKParser/createBasicBank__12JASBNKParserFPCvP7JKRHeap.s"
}
#pragma pop


/* 80299600-8029963C 003C+00 s=1 e=0 z=0  None .text      findChunk__Q212JASBNKParser4Ver1FPCvUl                       */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void JASBNKParser::Ver1::findChunk(void const* param_0, u32 param_1) {
	nofralloc
#include "asm/JSystem/JAudio2/JASBNKParser/findChunk__Q212JASBNKParser4Ver1FPCvUl.s"
}
#pragma pop


/* ############################################################################################## */
/* 80455658-80455660 0004+04 s=2 e=0 z=0  None .sdata2    @835                                                         */
SECTION_SDATA2 static f32 lit_835[1 + 1 /* padding */] = {
	127.0f,
	/* padding */
	0.0f,
};

/* 80455660-80455668 0008+00 s=1 e=0 z=0  None .sdata2    @838                                                         */
SECTION_SDATA2 static u8 lit_838[8] = {
	0x43, 0x30, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
};

/* 8029963C-80299A3C 0400+00 s=1 e=0 z=0  None .text      createBasicBank__Q212JASBNKParser4Ver1FPCvP7JKRHeap          */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void JASBNKParser::Ver1::createBasicBank(void const* param_0, JKRHeap* param_1) {
	nofralloc
#include "asm/JSystem/JAudio2/JASBNKParser/createBasicBank__Q212JASBNKParser4Ver1FPCvP7JKRHeap.s"
}
#pragma pop


/* ############################################################################################## */
/* 80455668-80455670 0008+00 s=1 e=0 z=0  None .sdata2    @990                                                         */
SECTION_SDATA2 static u8 lit_990[8] = {
	0x43, 0x30, 0x00, 0x00, 0x80, 0x00, 0x00, 0x00,
};

/* 80299A3C-80299E68 042C+00 s=1 e=0 z=0  None .text      createBasicBank__Q212JASBNKParser4Ver0FPCvP7JKRHeap          */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void JASBNKParser::Ver0::createBasicBank(void const* param_0, JKRHeap* param_1) {
	nofralloc
#include "asm/JSystem/JAudio2/JASBNKParser/createBasicBank__Q212JASBNKParser4Ver0FPCvP7JKRHeap.s"
}
#pragma pop


/* ############################################################################################## */
/* 80455670-80455674 0004+00 s=1 e=0 z=0  None .sdata2    @1045                                                        */
SECTION_SDATA2 static u32 lit_1045 = 0x3F800000;

/* 80455674-80455678 0004+00 s=1 e=0 z=0  None .sdata2    @1046                                                        */
SECTION_SDATA2 static u8 lit_1046[4] = {
	0x00, 0x00, 0x00, 0x00,
};

/* 80455678-80455680 0004+04 s=1 e=0 z=0  None .sdata2    @1047                                                        */
SECTION_SDATA2 static f32 lit_1047[1 + 1 /* padding */] = {
	0.5f,
	/* padding */
	0.0f,
};

/* 80299E68-80299F8C 0124+00 s=1 e=0 z=0  None .text      findOscPtr__Q212JASBNKParser4Ver0FP12JASBasicBankPCQ312JASBNKParser4Ver07THeaderPCQ312JASBNKParser4Ver04TOsc */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void JASBNKParser::Ver0::findOscPtr(JASBasicBank* param_0, JASBNKParser::Ver0::THeader const* param_1, JASBNKParser::Ver0::TOsc const* param_2) {
	nofralloc
#include "asm/JSystem/JAudio2/JASBNKParser/func_80299E68.s"
}
#pragma pop


/* 80299F8C-80299FA0 0014+00 s=1 e=0 z=0  None .text      getOscTableEndPtr__Q212JASBNKParser4Ver0FPCQ213JASOscillator5Point */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void JASBNKParser::Ver0::getOscTableEndPtr(JASOscillator::Point const* param_0) {
	nofralloc
#include "asm/JSystem/JAudio2/JASBNKParser/getOscTableEndPtr__Q212JASBNKParser4Ver0FPCQ213JASOscillator5Point.s"
}
#pragma pop


/* 80299FA0-80299FB8 0018+00 s=1 e=0 z=0  None .text      JSUConvertOffsetToPtr<Q312JASBNKParser4Ver05TPmap>__FPCvUl   */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm static void JSUConvertOffsetToPtr__template7(void const* param_0, u32 param_1) {
	nofralloc
#include "asm/JSystem/JAudio2/JASBNKParser/func_80299FA0.s"
}
#pragma pop


/* 80299FB8-80299FD0 0018+00 s=1 e=0 z=0  None .text      JSUConvertOffsetToPtr<Q312JASBNKParser4Ver05TPerc>__FPCvUl   */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm static void JSUConvertOffsetToPtr__template8(void const* param_0, u32 param_1) {
	nofralloc
#include "asm/JSystem/JAudio2/JASBNKParser/func_80299FB8.s"
}
#pragma pop


/* 80299FD0-80299FE8 0018+00 s=1 e=0 z=0  None .text      JSUConvertOffsetToPtr<Q312JASBNKParser4Ver05TVmap>__FPCvUl   */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm static void JSUConvertOffsetToPtr__template9(void const* param_0, u32 param_1) {
	nofralloc
#include "asm/JSystem/JAudio2/JASBNKParser/func_80299FD0.s"
}
#pragma pop


/* 80299FE8-8029A000 0018+00 s=1 e=0 z=0  None .text      JSUConvertOffsetToPtr<Q312JASBNKParser4Ver07TKeymap>__FPCvUl */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm static void JSUConvertOffsetToPtr__template10(void const* param_0, u32 param_1) {
	nofralloc
#include "asm/JSystem/JAudio2/JASBNKParser/func_80299FE8.s"
}
#pragma pop


/* 8029A000-8029A018 0018+00 s=1 e=0 z=0  None .text      JSUConvertOffsetToPtr<Q213JASOscillator5Point>__FPCvUl       */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm static void JSUConvertOffsetToPtr__template11(void const* param_0, u32 param_1) {
	nofralloc
#include "asm/JSystem/JAudio2/JASBNKParser/func_8029A000.s"
}
#pragma pop


/* 8029A018-8029A030 0018+00 s=2 e=0 z=0  None .text      JSUConvertOffsetToPtr<Q312JASBNKParser4Ver04TOsc>__FPCvUl    */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm static void JSUConvertOffsetToPtr__template12(void const* param_0, u32 param_1) {
	nofralloc
#include "asm/JSystem/JAudio2/JASBNKParser/func_8029A018.s"
}
#pragma pop


/* 8029A030-8029A048 0018+00 s=2 e=0 z=0  None .text      JSUConvertOffsetToPtr<Q312JASBNKParser4Ver05TInst>__FPCvUl   */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm static void JSUConvertOffsetToPtr__template13(void const* param_0, u32 param_1) {
	nofralloc
#include "asm/JSystem/JAudio2/JASBNKParser/func_8029A030.s"
}
#pragma pop


/* ############################################################################################## */
/* 80431B70-80431B7C 000C+00 s=1 e=0 z=0  None .bss       @1065                                                        */
static u8 lit_1065[12];

/* 80431B7C-80431B90 0010+04 s=1 e=0 z=0  None .bss       memPool___46JASPoolAllocObject_MultiThreaded<10JASChannel>   */
static u8 data_80431B7C[16 + 4 /* padding */];

/* 8045128C-80451290 0004+00 s=1 e=0 z=0  None .sbss      None                                                         */
static u8 data_8045128C[4];

/* 8029A048-8029A0A0 0058+00 s=0 e=1 z=0  None .text      __sinit_JASBNKParser_cpp                                     */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
extern "C" asm void __sinit_JASBNKParser_cpp() {
	nofralloc
#include "asm/JSystem/JAudio2/JASBNKParser/__sinit_JASBNKParser_cpp.s"
}
#pragma pop


