// 
// Generated By: dol2asm
// Translation Unit: JASTrack
// 

#include "dolphin/types.h"

// 
// Types:
// 

// build JASTrack (['JASTrack']) False/False
// build JASDsp (['JASDsp']) False/False
/* top-level dependencies (begin ['JASDsp']) */
/* top-level dependencies (end ['JASDsp']) */
struct JASDsp {
	// build TChannel (['JASDsp', 'TChannel']) False/False
	/* dependencies (begin ['JASDsp', 'TChannel']) */
	/* dependencies (end ['JASDsp', 'TChannel']) */
	struct TChannel {
		/* 8029E00C */ void setFilterMode(u16);
		/* 8029E044 */ void setIIRFilterParam(s16*);
		/* 8029E06C */ void setFIR8FilterParam(s16*);
		/* 8029E094 */ void setDistFilter(s16);
	};

};

// build JASTrack (['JASTrack']) True/False
struct JASTrack;
// build JASSoundParams (['JASSoundParams']) False/False
/* top-level dependencies (begin ['JASSoundParams']) */
/* top-level dependencies (end ['JASSoundParams']) */
struct JASSoundParams {
};

// build JASOscillator (['JASOscillator']) False/False
/* top-level dependencies (begin ['JASOscillator']) */
/* top-level dependencies (end ['JASOscillator']) */
struct JASOscillator {
	// build Point (['JASOscillator', 'Point']) False/False
	/* dependencies (begin ['JASOscillator', 'Point']) */
	/* dependencies (end ['JASOscillator', 'Point']) */
	struct Point {
	};

	// build Data (['JASOscillator', 'Data']) False/False
	/* dependencies (begin ['JASOscillator', 'Data']) */
	/* dependencies (end ['JASOscillator', 'Data']) */
	struct Data {
	};

};

// build JASChannel (['JASChannel']) False/False
// build JASOscillator (['JASOscillator']) True/True
/* top-level dependencies (begin ['JASChannel']) */
// outer dependency: ('JASOscillator', 'Data')
/* top-level dependencies (end ['JASChannel']) */
struct JASChannel {
	// ('JASOscillator', 'Data')
	/* 8029AAD0 */ void release(u16);
	/* 8029AB64 */ void setOscInit(u32, JASOscillator::Data const*);
	/* 8029AB98 */ void setMixConfig(u32, u16);
	/* 8029ACD4 */ void setKeySweepTarget(s32, u32);
	/* 8029BBFC */ void free();
};

/* top-level dependencies (begin ['JASTrack']) */
// outer dependency: ('JASDsp', 'TChannel')
// outer dependency: ('JASTrack', 'TChannelMgr')
// outer dependency: ('JASSoundParams',)
// outer dependency: ('JASOscillator', 'Point')
// outer dependency: ('JASChannel',)
/* top-level dependencies (end ['JASTrack']) */
struct JASTrack {
	// ('JASTrack', 'TChannelMgr')
	// ('JASOscillator', 'Point')
	// ('JASDsp', 'TChannel')
	// ('JASSoundParams',)
	// ('JASChannel',)
	// build TChannelMgr (['JASTrack', 'TChannelMgr']) False/False
	/* dependencies (begin ['JASTrack', 'TChannelMgr']) */
	// inner dependency: 0 ('JASTrack',) (for ['JASTrack', 'TChannelMgr'])
	/* dependencies (end ['JASTrack', 'TChannelMgr']) */
	struct TChannelMgr {
		// ('JASTrack',)
		/* 802930DC */ TChannelMgr(JASTrack*);
		/* 80293148 */ void init();
		/* 802931B0 */ void releaseAll();
		/* 80293220 */ void noteOff(u32, u16);
		/* 802932A0 */ void setPauseFlag(bool);
	};

	// build TList (['JASTrack', 'TList']) False/False
	/* dependencies (begin ['JASTrack', 'TList']) */
	// inner dependency: 0 ('JASTrack',) (for ['JASTrack', 'TList'])
	/* dependencies (end ['JASTrack', 'TList']) */
	struct TList {
		// ('JASTrack',)
		/* 80292F6C */ void cbSeqMain(void*);
		/* 80292F90 */ void append(JASTrack*);
		/* 8029301C */ void seqMain();
		/* 8029345C */ ~TList();
	};

	// build MoveParam_ (['JASTrack', 'MoveParam_']) False/False
	/* dependencies (begin ['JASTrack', 'MoveParam_']) */
	/* dependencies (end ['JASTrack', 'MoveParam_']) */
	struct MoveParam_ {
		/* 802932C8 */ MoveParam_();
	};

	/* 80291228 */ JASTrack();
	/* 8029131C */ ~JASTrack();
	/* 80291444 */ void setChannelMgrCount(u32);
	/* 802915D4 */ void init();
	/* 802918FC */ void initTimed();
	/* 8029194C */ void inherit(JASTrack const&);
	/* 802919F4 */ void assignExtBuffer(u32, JASSoundParams*);
	/* 80291A08 */ void setSeqData(void*, u32);
	/* 80291A28 */ void startSeq();
	/* 80291A78 */ void stopSeq();
	/* 80291ABC */ void start();
	/* 80291AC8 */ void close();
	/* 80291B8C */ void connectChild(u32, JASTrack*);
	/* 80291BB8 */ void closeChild(u32);
	/* 80291C30 */ void openChild(u32);
	/* 80291DAC */ void connectBus(int, int);
	/* 80291DBC */ void setLatestKey(u8);
	/* 80291DF8 */ void channelStart(JASTrack::TChannelMgr*, u32, u32, u32);
	/* 80291F38 */ void noteOn(u32, u32, u32);
	/* 80292008 */ void gateOn(u32, u32, f32, u32);
	/* 80292198 */ void noteOff(u32, u16);
	/* 80292220 */ void checkNoteStop(u32) const;
	/* 8029226C */ void overwriteOsc(JASChannel*);
	/* 802922D8 */ void updateTimedParam();
	/* 80292348 */ void updateTrack(f32);
	/* 802924E4 */ void updateTempo();
	/* 80292580 */ void updateSeq(bool, f32);
	/* 80292644 */ void seqTimeToDspTime(f32);
	/* 802926E0 */ void setParam(u32, f32, u32);
	/* 80292708 */ void noteOffAll(u16);
	/* 802927A0 */ void mute(bool);
	/* 802927D8 */ void setOscScale(u32, f32);
	/* 802927E8 */ void setOscTable(u32, JASOscillator::Point const*);
	/* 80292808 */ void setOscAdsr(s16, s16, s16, s16, u16);
	/* 8029285C */ void setFIR(s16 const*);
	/* 8029289C */ void setIIR(s16 const*);
	/* 802928D0 */ void readPortSelf(u32);
	/* 802928F4 */ void writePortSelf(u32, u16);
	/* 80292918 */ void writePort(u32, u16);
	/* 8029297C */ void readPort(u32);
	/* 802929A0 */ void setChannelPauseFlag(bool);
	/* 80292A3C */ void pause(bool);
	/* 80292AA4 */ void getTransposeTotal() const;
	/* 80292AF4 */ void isMute() const;
	/* 80292B58 */ void setTempo(u16);
	/* 80292B8C */ void setTempoRate(f32);
	/* 80292BC0 */ void setTimebase(u16);
	/* 80292BF4 */ void updateChannel(JASChannel*, JASDsp::TChannel*);
	/* 80292CA4 */ void channelUpdateCallback(u32, JASChannel*, JASDsp::TChannel*, void*);
	/* 80292D88 */ void getRootTrack();
	/* 80292DA0 */ void tickProc();
	/* 80292E9C */ void seqMain();
};

// build JASSoundParams (['JASSoundParams']) True/True
// build JASChannel (['JASChannel']) True/True
// build JASOscillator (['JASOscillator']) True/True
// build JASDsp (['JASDsp']) True/True
// build JASDefaultBankTable (['JASDefaultBankTable']) False/False
/* top-level dependencies (begin ['JASDefaultBankTable']) */
/* top-level dependencies (end ['JASDefaultBankTable']) */
struct JASDefaultBankTable {
	/* 802934B4 */ ~JASDefaultBankTable();
};

// build JASGenericMemPool (['JASGenericMemPool']) False/False
/* top-level dependencies (begin ['JASGenericMemPool']) */
/* top-level dependencies (end ['JASGenericMemPool']) */
struct JASGenericMemPool {
	/* 80290848 */ JASGenericMemPool();
	/* 80290860 */ ~JASGenericMemPool();
	/* 80290948 */ void alloc(u32);
	/* 80290994 */ void free(void*, u32);
};

// build JASTrackPort (['JASTrackPort']) False/False
/* top-level dependencies (begin ['JASTrackPort']) */
/* top-level dependencies (end ['JASTrackPort']) */
struct JASTrackPort {
	/* 8029354C */ void init();
	/* 8029357C */ void readImport(u32);
	/* 802935A0 */ void readExport(u32);
	/* 802935C4 */ void writeImport(u32, u16);
	/* 802935E8 */ void writeExport(u32, u16);
};

// build JASRegisterParam (['JASRegisterParam']) False/False
/* top-level dependencies (begin ['JASRegisterParam']) */
/* top-level dependencies (end ['JASRegisterParam']) */
struct JASRegisterParam {
	/* 80293644 */ JASRegisterParam();
	/* 80293664 */ void init();
};

// build JASSeqCtrl (['JASSeqCtrl']) False/False
// build JASTrack (['JASTrack']) True/True
// build JASSeqCtrl (['JASSeqCtrl']) True/False
struct JASSeqCtrl;
/* top-level dependencies (begin ['JASSeqCtrl']) */
// outer dependency: ('JASTrack',)
// outer dependency: ('JASSeqCtrl', 'IntrType')
/* top-level dependencies (end ['JASSeqCtrl']) */
struct JASSeqCtrl {
	// ('JASTrack',)
	// ('JASSeqCtrl', 'IntrType')
	// build IntrType (['JASSeqCtrl', 'IntrType']) False/False
	/* dependencies (begin ['JASSeqCtrl', 'IntrType']) */
	/* dependencies (end ['JASSeqCtrl', 'IntrType']) */
	struct IntrType {
	};

	/* 802938BC */ JASSeqCtrl();
	/* 80293924 */ void init();
	/* 80293980 */ void start(void*, u32);
	/* 802939C4 */ void tickProc(JASTrack*);
	/* 80293ABC */ void interrupt(JASSeqCtrl::IntrType);
};

// build JASDriver (['JASDriver']) False/False
/* top-level dependencies (begin ['JASDriver']) */
/* top-level dependencies (end ['JASDriver']) */
struct JASDriver {
	/* 8029C9E8 */ void getDacRate();
	/* 8029C9F0 */ void getSubFrames();
};

// build JGadget (['JGadget']) False/False
// build JGadget (['JGadget']) True/False
struct JGadget;
// build JGadget (['JGadget']) True/True
/* top-level dependencies (begin ['JGadget']) */
// outer dependency: ('JGadget', 'TNodeLinkList', 'iterator')
// outer dependency: ('JGadget', 'TLinkListNode')
/* top-level dependencies (end ['JGadget']) */
struct JGadget {
	// build TNodeLinkList (['JGadget', 'TNodeLinkList']) False/False
	/* dependencies (begin ['JGadget', 'TNodeLinkList']) */
	// inner dependency: 1 ('JGadget', 'TNodeLinkList', 'iterator') (for ['JGadget', 'TNodeLinkList'])
	// inner dependency: 1 ('JGadget', 'TLinkListNode') (for ['JGadget', 'TNodeLinkList'])
	// build TLinkListNode (['JGadget', 'TLinkListNode']) False/False
	/* dependencies (begin ['JGadget', 'TLinkListNode']) */
	/* dependencies (end ['JGadget', 'TLinkListNode']) */
	struct TLinkListNode {
	};

	/* dependencies (end ['JGadget', 'TNodeLinkList']) */
	struct TNodeLinkList {
		// ('JGadget', 'TNodeLinkList', 'iterator')
		// ('JGadget', 'TLinkListNode')
		// build iterator (['JGadget', 'TNodeLinkList', 'iterator']) False/False
		/* dependencies (begin ['JGadget', 'TNodeLinkList', 'iterator']) */
		/* dependencies (end ['JGadget', 'TNodeLinkList', 'iterator']) */
		struct iterator {
		};

		/* 802DCA1C */ ~TNodeLinkList();
		/* 802DCBA8 */ void Insert(JGadget::TNodeLinkList::iterator, JGadget::TLinkListNode*);
		/* 802DCBF8 */ void Remove(JGadget::TLinkListNode*);
	};

	// build TLinkListNode (['JGadget', 'TLinkListNode']) True/True
};

// 
// Forward References:
// 

extern "C" void func_802932E0();
extern "C" void func_80293334();
extern "C" void __sinit_JASTrack_cpp();
extern "C" static void func_80293528();

extern "C" void __ct__8JASTrackFv();
extern "C" void __dt__8JASTrackFv();
extern "C" void setChannelMgrCount__8JASTrackFUl();
extern "C" void init__8JASTrackFv();
extern "C" void initTimed__8JASTrackFv();
extern "C" void inherit__8JASTrackFRC8JASTrack();
extern "C" void assignExtBuffer__8JASTrackFUlP14JASSoundParams();
extern "C" void setSeqData__8JASTrackFPvUl();
extern "C" void startSeq__8JASTrackFv();
extern "C" void stopSeq__8JASTrackFv();
extern "C" void start__8JASTrackFv();
extern "C" void close__8JASTrackFv();
extern "C" void connectChild__8JASTrackFUlP8JASTrack();
extern "C" void closeChild__8JASTrackFUl();
extern "C" void openChild__8JASTrackFUl();
extern "C" void connectBus__8JASTrackFii();
extern "C" void setLatestKey__8JASTrackFUc();
extern "C" void channelStart__8JASTrackFPQ28JASTrack11TChannelMgrUlUlUl();
extern "C" void noteOn__8JASTrackFUlUlUl();
extern "C" void gateOn__8JASTrackFUlUlfUl();
extern "C" void noteOff__8JASTrackFUlUs();
extern "C" void checkNoteStop__8JASTrackCFUl();
extern "C" void overwriteOsc__8JASTrackFP10JASChannel();
extern "C" void updateTimedParam__8JASTrackFv();
extern "C" void updateTrack__8JASTrackFf();
extern "C" void updateTempo__8JASTrackFv();
extern "C" void updateSeq__8JASTrackFbf();
extern "C" void seqTimeToDspTime__8JASTrackFf();
extern "C" void setParam__8JASTrackFUlfUl();
extern "C" void noteOffAll__8JASTrackFUs();
extern "C" void mute__8JASTrackFb();
extern "C" void setOscScale__8JASTrackFUlf();
extern "C" void setOscTable__8JASTrackFUlPCQ213JASOscillator5Point();
extern "C" void setOscAdsr__8JASTrackFssssUs();
extern "C" void setFIR__8JASTrackFPCs();
extern "C" void setIIR__8JASTrackFPCs();
extern "C" void readPortSelf__8JASTrackFUl();
extern "C" void writePortSelf__8JASTrackFUlUs();
extern "C" void writePort__8JASTrackFUlUs();
extern "C" void readPort__8JASTrackFUl();
extern "C" void setChannelPauseFlag__8JASTrackFb();
extern "C" void pause__8JASTrackFb();
extern "C" void getTransposeTotal__8JASTrackCFv();
extern "C" void isMute__8JASTrackCFv();
extern "C" void setTempo__8JASTrackFUs();
extern "C" void setTempoRate__8JASTrackFf();
extern "C" void setTimebase__8JASTrackFUs();
extern "C" void updateChannel__8JASTrackFP10JASChannelPQ26JASDsp8TChannel();
extern "C" void channelUpdateCallback__8JASTrackFUlP10JASChannelPQ26JASDsp8TChannelPv();
extern "C" void getRootTrack__8JASTrackFv();
extern "C" void tickProc__8JASTrackFv();
extern "C" void seqMain__8JASTrackFv();
extern "C" void cbSeqMain__Q28JASTrack5TListFPv();
extern "C" void append__Q28JASTrack5TListFP8JASTrack();
extern "C" void seqMain__Q28JASTrack5TListFv();
extern "C" void __ct__Q28JASTrack11TChannelMgrFP8JASTrack();
extern "C" void init__Q28JASTrack11TChannelMgrFv();
extern "C" void releaseAll__Q28JASTrack11TChannelMgrFv();
extern "C" void noteOff__Q28JASTrack11TChannelMgrFUlUs();
extern "C" void setPauseFlag__Q28JASTrack11TChannelMgrFb();
extern "C" void __ct__Q28JASTrack10MoveParam_Fv();
extern "C" void func_802932E0();
extern "C" void func_80293334();
extern "C" void __sinit_JASTrack_cpp();
extern "C" void __dt__Q28JASTrack5TListFv();
extern "C" void __dt__19JASDefaultBankTableFv();
extern "C" static void func_80293528();
SECTION_RODATA extern const u8 sAdsTable__8JASTrack[24];
SECTION_RODATA extern const u8 sEnvOsc__8JASTrack[24];
SECTION_RODATA extern const u8 sPitchEnvOsc__8JASTrack[24];
SECTION_DATA extern void*const __vt__19JASDefaultBankTable[3];
SECTION_DATA extern void*const data_803C5B74[3];
SECTION_DATA extern void*const __vt__11JASBankList[4];
SECTION_BSS extern u8 JASTrack__lit_431[12];
SECTION_BSS extern u8 sDefaultBankTable__8JASTrack[1036];
SECTION_BSS extern u8 JASTrack__lit_433[12];
SECTION_BSS extern u8 sTrackList__8JASTrack[16];
SECTION_BSS extern u8 lit_470[12];
SECTION_BSS extern u8 JASTrack__lit_476[12];
SECTION_BSS extern u8 data_80431AF4[16];
SECTION_BSS extern u8 data_80431B04[16 + 4 /* padding */];
SECTION_SDATA2 extern u8 JASTrack__lit_457[4];
SECTION_SDATA2 extern f32 lit_679;
SECTION_SDATA2 extern f32 JASTrack__lit_690;
SECTION_SDATA2 extern f32 lit_952;
SECTION_SDATA2 extern f64 lit_954;
SECTION_SDATA2 extern f32 JASTrack__lit_1032;
SECTION_SDATA2 extern f32 JASTrack__lit_1042;
SECTION_SDATA2 extern f64 lit_1044;
SECTION_SDATA2 extern f32 lit_1069;
SECTION_SDATA2 extern f32 JASTrack__lit_1070;
SECTION_SDATA2 extern u32 FILTER_MODE_IIR__6JASDsp;
SECTION_SDATA2 extern f32 lit_1246;

// 
// External References:
// 

SECTION_INIT void memset();
extern "C" void noteOn__7JASBankFPC7JASBankiUcUcUsPFUlP10JASChannelPQ26JASDsp8TChannelPv_vPv();
extern "C" void registerSubFrameCallback__9JASDriverFPFPv_lPv();
void operator delete(void*);
extern "C" void OSDisableInterrupts();
extern "C" void OSRestoreInterrupts();
extern "C" void __register_global_object();
extern "C" void __construct_array();
extern "C" void __cvt_fp2unsigned();
extern "C" void _savegpr_20();
extern "C" void _savegpr_23();
extern "C" void _savegpr_26();
extern "C" void _savegpr_27();
extern "C" void _savegpr_28();
extern "C" void _savegpr_29();
extern "C" void _restgpr_20();
extern "C" void _restgpr_23();
extern "C" void _restgpr_26();
extern "C" void _restgpr_27();
extern "C" void _restgpr_28();
extern "C" void _restgpr_29();

SECTION_INIT void memset();
extern "C" void __ct__17JASGenericMemPoolFv();
extern "C" void __dt__17JASGenericMemPoolFv();
extern "C" void alloc__17JASGenericMemPoolFUl();
extern "C" void free__17JASGenericMemPoolFPvUl();
extern "C" void init__12JASTrackPortFv();
extern "C" void readImport__12JASTrackPortFUl();
extern "C" void readExport__12JASTrackPortFUl();
extern "C" void writeImport__12JASTrackPortFUlUs();
extern "C" void writeExport__12JASTrackPortFUlUs();
extern "C" void __ct__16JASRegisterParamFv();
extern "C" void init__16JASRegisterParamFv();
extern "C" void __ct__10JASSeqCtrlFv();
extern "C" void init__10JASSeqCtrlFv();
extern "C" void start__10JASSeqCtrlFPvUl();
extern "C" void tickProc__10JASSeqCtrlFP8JASTrack();
extern "C" void interrupt__10JASSeqCtrlFQ210JASSeqCtrl8IntrType();
extern "C" void noteOn__7JASBankFPC7JASBankiUcUcUsPFUlP10JASChannelPQ26JASDsp8TChannelPv_vPv();
extern "C" void release__10JASChannelFUs();
extern "C" void setOscInit__10JASChannelFUlPCQ213JASOscillator4Data();
extern "C" void setMixConfig__10JASChannelFUlUs();
extern "C" void setKeySweepTarget__10JASChannelFlUl();
extern "C" void free__10JASChannelFv();
extern "C" void getDacRate__9JASDriverFv();
extern "C" void getSubFrames__9JASDriverFv();
extern "C" void setFilterMode__Q26JASDsp8TChannelFUs();
extern "C" void setIIRFilterParam__Q26JASDsp8TChannelFPs();
extern "C" void setFIR8FilterParam__Q26JASDsp8TChannelFPs();
extern "C" void setDistFilter__Q26JASDsp8TChannelFs();
extern "C" void registerSubFrameCallback__9JASDriverFPFPv_lPv();
extern "C" void __dl__FPv();
extern "C" void __dt__Q27JGadget13TNodeLinkListFv();
extern "C" void Insert__Q27JGadget13TNodeLinkListFQ37JGadget13TNodeLinkList8iteratorPQ27JGadget13TLinkListNode();
extern "C" void Remove__Q27JGadget13TNodeLinkListFPQ27JGadget13TLinkListNode();
extern "C" void OSDisableInterrupts();
extern "C" void OSRestoreInterrupts();
extern "C" void __register_global_object();
extern "C" void __construct_array();
extern "C" void __cvt_fp2unsigned();
extern "C" void _savegpr_20();
extern "C" void _savegpr_23();
extern "C" void _savegpr_26();
extern "C" void _savegpr_27();
extern "C" void _savegpr_28();
extern "C" void _savegpr_29();
extern "C" void _restgpr_20();
extern "C" void _restgpr_23();
extern "C" void _restgpr_26();
extern "C" void _restgpr_27();
extern "C" void _restgpr_28();
extern "C" void _restgpr_29();
SECTION_SBSS extern u8 data_80450B90[4 + 4 /* padding */];
SECTION_SBSS extern u8 struct_80451230[8];

// 
// Declarations:
// 

/* ############################################################################################## */
/* 804555A0-804555A4 0004+00 rc=6 efc=0 .sdata2    @457                                                         */
u8 JASTrack__lit_457[4] = {
	0x00, 0x00, 0x00, 0x00,
};

/* 80291228-8029131C 00F4+00 rc=4 efc=3 .text      __ct__8JASTrackFv                                            */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm JASTrack::JASTrack() {
	nofralloc
#include "asm/JSystem/JAudio2/JASTrack/__ct__8JASTrackFv.s"
}
#pragma pop


/* ############################################################################################## */
/* 804316A8-804316B4 000C+00 rc=1 efc=0 .bss       @431                                                         */
u8 JASTrack__lit_431[12];

/* 804316B4-80431AC0 040C+00 rc=1 efc=0 .bss       sDefaultBankTable__8JASTrack                                 */
u8 sDefaultBankTable__8JASTrack[1036];

/* 80431AC0-80431ACC 000C+00 rc=0 efc=0 .bss       @433                                                         */
u8 JASTrack__lit_433[12];

/* 80431ACC-80431ADC 0010+00 rc=1 efc=0 .bss       sTrackList__8JASTrack                                        */
u8 sTrackList__8JASTrack[16];

/* 80431ADC-80431AE8 000C+00 rc=3 efc=0 .bss       @470                                                         */
u8 lit_470[12];

/* 80431AE8-80431AF4 000C+00 rc=2 efc=0 .bss       @476                                                         */
u8 JASTrack__lit_476[12];

/* 80431AF4-80431B04 0010+00 rc=4 efc=1 .bss       memPool_$localstatic3$getMemPool___58JASPoolAllocObject_MultiThreaded<Q28JASTrack11TChannelMgr>Fv */
u8 data_80431AF4[16];

/* 80431B04-80431B18 0010+04 rc=4 efc=2 .bss       memPool_$localstatic3$getMemPool___43JASPoolAllocObject_MultiThreaded<8JASTrack>Fv */
u8 data_80431B04[16 + 4 /* padding */];

/* 8029131C-80291444 0128+00 rc=8 efc=4 .text      __dt__8JASTrackFv                                            */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm JASTrack::~JASTrack() {
	nofralloc
#include "asm/JSystem/JAudio2/JASTrack/__dt__8JASTrackFv.s"
}
#pragma pop


/* 80291444-802915D4 0190+00 rc=4 efc=3 .text      setChannelMgrCount__8JASTrackFUl                             */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void JASTrack::setChannelMgrCount(u32 field_0) {
	nofralloc
#include "asm/JSystem/JAudio2/JASTrack/setChannelMgrCount__8JASTrackFUl.s"
}
#pragma pop


/* ############################################################################################## */
/* 8039AFD0-8039AFE8 0018+00 rc=1 efc=0 .rodata    sAdsTable__8JASTrack                                         */
SECTION_RODATA const u8 sAdsTable__8JASTrack[24] = {
	0x00, 0x00, 0x00, 0x00, 0x7F, 0xFF, 0x00, 0x00, 0x00, 0x00, 0x7F, 0xFF, 0x00, 0x00, 0x00, 0x00,
	0x00, 0x00, 0x00, 0x0E, 0x00, 0x00, 0x00, 0x00,
};

/* 804555A4-804555A8 0004+00 rc=9 efc=0 .sdata2    @679                                                         */
f32 lit_679 = 1.0f;

/* 802915D4-802918FC 0328+00 rc=3 efc=1 .text      init__8JASTrackFv                                            */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void JASTrack::init() {
	nofralloc
#include "asm/JSystem/JAudio2/JASTrack/init__8JASTrackFv.s"
}
#pragma pop


/* ############################################################################################## */
/* 804555A8-804555AC 0004+00 rc=4 efc=0 .sdata2    @690                                                         */
f32 JASTrack__lit_690 = 0.5f;

/* 802918FC-8029194C 0050+00 rc=1 efc=0 .text      initTimed__8JASTrackFv                                       */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void JASTrack::initTimed() {
	nofralloc
#include "asm/JSystem/JAudio2/JASTrack/initTimed__8JASTrackFv.s"
}
#pragma pop


/* 8029194C-802919F4 00A8+00 rc=1 efc=0 .text      inherit__8JASTrackFRC8JASTrack                               */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void JASTrack::inherit(JASTrack const& field_0) {
	nofralloc
#include "asm/JSystem/JAudio2/JASTrack/inherit__8JASTrackFRC8JASTrack.s"
}
#pragma pop


/* 802919F4-80291A08 0014+00 rc=5 efc=5 .text      assignExtBuffer__8JASTrackFUlP14JASSoundParams               */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void JASTrack::assignExtBuffer(u32 field_0, JASSoundParams* field_1) {
	nofralloc
#include "asm/JSystem/JAudio2/JASTrack/assignExtBuffer__8JASTrackFUlP14JASSoundParams.s"
}
#pragma pop


/* 80291A08-80291A28 0020+00 rc=3 efc=3 .text      setSeqData__8JASTrackFPvUl                                   */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void JASTrack::setSeqData(void* field_0, u32 field_1) {
	nofralloc
#include "asm/JSystem/JAudio2/JASTrack/setSeqData__8JASTrackFPvUl.s"
}
#pragma pop


/* 80291A28-80291A78 0050+00 rc=2 efc=2 .text      startSeq__8JASTrackFv                                        */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void JASTrack::startSeq() {
	nofralloc
#include "asm/JSystem/JAudio2/JASTrack/startSeq__8JASTrackFv.s"
}
#pragma pop


/* 80291A78-80291ABC 0044+00 rc=2 efc=2 .text      stopSeq__8JASTrackFv                                         */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void JASTrack::stopSeq() {
	nofralloc
#include "asm/JSystem/JAudio2/JASTrack/stopSeq__8JASTrackFv.s"
}
#pragma pop


/* 80291ABC-80291AC8 000C+00 rc=1 efc=1 .text      start__8JASTrackFv                                           */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void JASTrack::start() {
	nofralloc
#include "asm/JSystem/JAudio2/JASTrack/start__8JASTrackFv.s"
}
#pragma pop


/* 80291AC8-80291B8C 00C4+00 rc=4 efc=0 .text      close__8JASTrackFv                                           */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void JASTrack::close() {
	nofralloc
#include "asm/JSystem/JAudio2/JASTrack/close__8JASTrackFv.s"
}
#pragma pop


/* 80291B8C-80291BB8 002C+00 rc=2 efc=1 .text      connectChild__8JASTrackFUlP8JASTrack                         */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void JASTrack::connectChild(u32 field_0, JASTrack* field_1) {
	nofralloc
#include "asm/JSystem/JAudio2/JASTrack/connectChild__8JASTrackFUlP8JASTrack.s"
}
#pragma pop


/* 80291BB8-80291C30 0078+00 rc=1 efc=1 .text      closeChild__8JASTrackFUl                                     */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void JASTrack::closeChild(u32 field_0) {
	nofralloc
#include "asm/JSystem/JAudio2/JASTrack/closeChild__8JASTrackFUl.s"
}
#pragma pop


/* 80291C30-80291DAC 017C+00 rc=2 efc=2 .text      openChild__8JASTrackFUl                                      */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void JASTrack::openChild(u32 field_0) {
	nofralloc
#include "asm/JSystem/JAudio2/JASTrack/openChild__8JASTrackFUl.s"
}
#pragma pop


/* 80291DAC-80291DBC 0010+00 rc=1 efc=1 .text      connectBus__8JASTrackFii                                     */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void JASTrack::connectBus(int field_0, int field_1) {
	nofralloc
#include "asm/JSystem/JAudio2/JASTrack/connectBus__8JASTrackFii.s"
}
#pragma pop


/* 80291DBC-80291DF8 003C+00 rc=1 efc=1 .text      setLatestKey__8JASTrackFUc                                   */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void JASTrack::setLatestKey(u8 field_0) {
	nofralloc
#include "asm/JSystem/JAudio2/JASTrack/setLatestKey__8JASTrackFUc.s"
}
#pragma pop


/* 80291DF8-80291F38 0140+00 rc=2 efc=0 .text      channelStart__8JASTrackFPQ28JASTrack11TChannelMgrUlUlUl      */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void JASTrack::channelStart(JASTrack::TChannelMgr* field_0, u32 field_1, u32 field_2, u32 field_3) {
	nofralloc
#include "asm/JSystem/JAudio2/JASTrack/channelStart__8JASTrackFPQ28JASTrack11TChannelMgrUlUlUl.s"
}
#pragma pop


/* 80291F38-80292008 00D0+00 rc=1 efc=1 .text      noteOn__8JASTrackFUlUlUl                                     */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void JASTrack::noteOn(u32 field_0, u32 field_1, u32 field_2) {
	nofralloc
#include "asm/JSystem/JAudio2/JASTrack/noteOn__8JASTrackFUlUlUl.s"
}
#pragma pop


/* ############################################################################################## */
/* 804555AC-804555B0 0004+00 rc=1 efc=0 .sdata2    @952                                                         */
f32 lit_952 = 100.0f;

/* 804555B0-804555B8 0008+00 rc=4 efc=0 .sdata2    @954                                                         */
f64 lit_954 = 4503599627370496.0 /* cast u32 to float */;

/* 80292008-80292198 0190+00 rc=1 efc=1 .text      gateOn__8JASTrackFUlUlfUl                                    */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void JASTrack::gateOn(u32 field_0, u32 field_1, f32 field_2, u32 field_3) {
	nofralloc
#include "asm/JSystem/JAudio2/JASTrack/gateOn__8JASTrackFUlUlfUl.s"
}
#pragma pop


/* 80292198-80292220 0088+00 rc=2 efc=1 .text      noteOff__8JASTrackFUlUs                                      */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void JASTrack::noteOff(u32 field_0, u16 field_1) {
	nofralloc
#include "asm/JSystem/JAudio2/JASTrack/noteOff__8JASTrackFUlUs.s"
}
#pragma pop


/* 80292220-8029226C 004C+00 rc=1 efc=1 .text      checkNoteStop__8JASTrackCFUl                                 */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void JASTrack::checkNoteStop(u32 field_0) const {
	nofralloc
#include "asm/JSystem/JAudio2/JASTrack/checkNoteStop__8JASTrackCFUl.s"
}
#pragma pop


/* 8029226C-802922D8 006C+00 rc=1 efc=0 .text      overwriteOsc__8JASTrackFP10JASChannel                        */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void JASTrack::overwriteOsc(JASChannel* field_0) {
	nofralloc
#include "asm/JSystem/JAudio2/JASTrack/overwriteOsc__8JASTrackFP10JASChannel.s"
}
#pragma pop


/* 802922D8-80292348 0070+00 rc=1 efc=0 .text      updateTimedParam__8JASTrackFv                                */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void JASTrack::updateTimedParam() {
	nofralloc
#include "asm/JSystem/JAudio2/JASTrack/updateTimedParam__8JASTrackFv.s"
}
#pragma pop


/* ############################################################################################## */
/* 804555B8-804555BC 0004+00 rc=1 efc=0 .sdata2    @1032                                                        */
f32 JASTrack__lit_1032 = 1.0f / 3.0f;

/* 80292348-802924E4 019C+00 rc=1 efc=0 .text      updateTrack__8JASTrackFf                                     */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void JASTrack::updateTrack(f32 field_0) {
	nofralloc
#include "asm/JSystem/JAudio2/JASTrack/updateTrack__8JASTrackFf.s"
}
#pragma pop


/* ############################################################################################## */
/* 804555BC-804555C0 0004+00 rc=1 efc=0 .sdata2    @1042                                                        */
f32 JASTrack__lit_1042 = 4.0f / 3.0f;

/* 804555C0-804555C8 0008+00 rc=1 efc=0 .sdata2    @1044                                                        */
f64 lit_1044 = 4503601774854144.0 /* cast s32 to float */;

/* 802924E4-80292580 009C+00 rc=5 efc=0 .text      updateTempo__8JASTrackFv                                     */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void JASTrack::updateTempo() {
	nofralloc
#include "asm/JSystem/JAudio2/JASTrack/updateTempo__8JASTrackFv.s"
}
#pragma pop


/* 80292580-80292644 00C4+00 rc=4 efc=0 .text      updateSeq__8JASTrackFbf                                      */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void JASTrack::updateSeq(bool field_0, f32 field_1) {
	nofralloc
#include "asm/JSystem/JAudio2/JASTrack/updateSeq__8JASTrackFbf.s"
}
#pragma pop


/* ############################################################################################## */
/* 804555C8-804555CC 0004+00 rc=1 efc=0 .sdata2    @1069                                                        */
f32 lit_1069 = 120.0f;

/* 804555CC-804555D0 0004+00 rc=1 efc=0 .sdata2    @1070                                                        */
f32 JASTrack__lit_1070 = 10.0f;

/* 80292644-802926E0 009C+00 rc=1 efc=0 .text      seqTimeToDspTime__8JASTrackFf                                */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void JASTrack::seqTimeToDspTime(f32 field_0) {
	nofralloc
#include "asm/JSystem/JAudio2/JASTrack/seqTimeToDspTime__8JASTrackFf.s"
}
#pragma pop


/* 802926E0-80292708 0028+00 rc=4 efc=4 .text      setParam__8JASTrackFUlfUl                                    */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void JASTrack::setParam(u32 field_0, f32 field_1, u32 field_2) {
	nofralloc
#include "asm/JSystem/JAudio2/JASTrack/setParam__8JASTrackFUlfUl.s"
}
#pragma pop


/* 80292708-802927A0 0098+00 rc=1 efc=0 .text      noteOffAll__8JASTrackFUs                                     */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void JASTrack::noteOffAll(u16 field_0) {
	nofralloc
#include "asm/JSystem/JAudio2/JASTrack/noteOffAll__8JASTrackFUs.s"
}
#pragma pop


/* 802927A0-802927D8 0038+00 rc=2 efc=2 .text      mute__8JASTrackFb                                            */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void JASTrack::mute(bool field_0) {
	nofralloc
#include "asm/JSystem/JAudio2/JASTrack/mute__8JASTrackFb.s"
}
#pragma pop


/* 802927D8-802927E8 0010+00 rc=1 efc=1 .text      setOscScale__8JASTrackFUlf                                   */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void JASTrack::setOscScale(u32 field_0, f32 field_1) {
	nofralloc
#include "asm/JSystem/JAudio2/JASTrack/setOscScale__8JASTrackFUlf.s"
}
#pragma pop


/* 802927E8-80292808 0020+00 rc=1 efc=1 .text      setOscTable__8JASTrackFUlPCQ213JASOscillator5Point           */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void JASTrack::setOscTable(u32 field_0, JASOscillator::Point const* field_1) {
	nofralloc
#include "asm/JSystem/JAudio2/JASTrack/setOscTable__8JASTrackFUlPCQ213JASOscillator5Point.s"
}
#pragma pop


/* ############################################################################################## */
/* 8039AFE8-8039B000 0018+00 rc=1 efc=0 .rodata    sEnvOsc__8JASTrack                                           */
SECTION_RODATA const u8 sEnvOsc__8JASTrack[24] = {
	0x00, 0x00, 0x00, 0x00, 0x3F, 0x80, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
	0x3F, 0x80, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
};

/* 80292808-8029285C 0054+00 rc=1 efc=1 .text      setOscAdsr__8JASTrackFssssUs                                 */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void JASTrack::setOscAdsr(s16 field_0, s16 field_1, s16 field_2, s16 field_3, u16 field_4) {
	nofralloc
#include "asm/JSystem/JAudio2/JASTrack/setOscAdsr__8JASTrackFssssUs.s"
}
#pragma pop


/* ############################################################################################## */
/* 804555D0-804555D4 0004+00 rc=2 efc=0 .sdata2    FILTER_MODE_IIR__6JASDsp                                     */
u32 FILTER_MODE_IIR__6JASDsp = 0x00000020;

/* 8029285C-8029289C 0040+00 rc=2 efc=2 .text      setFIR__8JASTrackFPCs                                        */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void JASTrack::setFIR(s16 const* field_0) {
	nofralloc
#include "asm/JSystem/JAudio2/JASTrack/setFIR__8JASTrackFPCs.s"
}
#pragma pop


/* 8029289C-802928D0 0034+00 rc=4 efc=4 .text      setIIR__8JASTrackFPCs                                        */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void JASTrack::setIIR(s16 const* field_0) {
	nofralloc
#include "asm/JSystem/JAudio2/JASTrack/setIIR__8JASTrackFPCs.s"
}
#pragma pop


/* 802928D0-802928F4 0024+00 rc=1 efc=1 .text      readPortSelf__8JASTrackFUl                                   */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void JASTrack::readPortSelf(u32 field_0) {
	nofralloc
#include "asm/JSystem/JAudio2/JASTrack/readPortSelf__8JASTrackFUl.s"
}
#pragma pop


/* 802928F4-80292918 0024+00 rc=1 efc=1 .text      writePortSelf__8JASTrackFUlUs                                */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void JASTrack::writePortSelf(u32 field_0, u16 field_1) {
	nofralloc
#include "asm/JSystem/JAudio2/JASTrack/writePortSelf__8JASTrackFUlUs.s"
}
#pragma pop


/* 80292918-8029297C 0064+00 rc=4 efc=4 .text      writePort__8JASTrackFUlUs                                    */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void JASTrack::writePort(u32 field_0, u16 field_1) {
	nofralloc
#include "asm/JSystem/JAudio2/JASTrack/writePort__8JASTrackFUlUs.s"
}
#pragma pop


/* 8029297C-802929A0 0024+00 rc=3 efc=3 .text      readPort__8JASTrackFUl                                       */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void JASTrack::readPort(u32 field_0) {
	nofralloc
#include "asm/JSystem/JAudio2/JASTrack/readPort__8JASTrackFUl.s"
}
#pragma pop


/* 802929A0-80292A3C 009C+00 rc=1 efc=0 .text      setChannelPauseFlag__8JASTrackFb                             */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void JASTrack::setChannelPauseFlag(bool field_0) {
	nofralloc
#include "asm/JSystem/JAudio2/JASTrack/setChannelPauseFlag__8JASTrackFb.s"
}
#pragma pop


/* 80292A3C-80292AA4 0068+00 rc=2 efc=2 .text      pause__8JASTrackFb                                           */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void JASTrack::pause(bool field_0) {
	nofralloc
#include "asm/JSystem/JAudio2/JASTrack/pause__8JASTrackFb.s"
}
#pragma pop


/* 80292AA4-80292AF4 0050+00 rc=3 efc=0 .text      getTransposeTotal__8JASTrackCFv                              */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void JASTrack::getTransposeTotal() const {
	nofralloc
#include "asm/JSystem/JAudio2/JASTrack/getTransposeTotal__8JASTrackCFv.s"
}
#pragma pop


/* 80292AF4-80292B58 0064+00 rc=2 efc=0 .text      isMute__8JASTrackCFv                                         */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void JASTrack::isMute() const {
	nofralloc
#include "asm/JSystem/JAudio2/JASTrack/isMute__8JASTrackCFv.s"
}
#pragma pop


/* 80292B58-80292B8C 0034+00 rc=1 efc=1 .text      setTempo__8JASTrackFUs                                       */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void JASTrack::setTempo(u16 field_0) {
	nofralloc
#include "asm/JSystem/JAudio2/JASTrack/setTempo__8JASTrackFUs.s"
}
#pragma pop


/* 80292B8C-80292BC0 0034+00 rc=2 efc=2 .text      setTempoRate__8JASTrackFf                                    */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void JASTrack::setTempoRate(f32 field_0) {
	nofralloc
#include "asm/JSystem/JAudio2/JASTrack/setTempoRate__8JASTrackFf.s"
}
#pragma pop


/* 80292BC0-80292BF4 0034+00 rc=1 efc=1 .text      setTimebase__8JASTrackFUs                                    */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void JASTrack::setTimebase(u16 field_0) {
	nofralloc
#include "asm/JSystem/JAudio2/JASTrack/setTimebase__8JASTrackFUs.s"
}
#pragma pop


/* ############################################################################################## */
/* 804555D4-804555D8 0004+00 rc=1 efc=0 .sdata2    @1246                                                        */
f32 lit_1246 = 32767.0f;

/* 80292BF4-80292CA4 00B0+00 rc=1 efc=0 .text      updateChannel__8JASTrackFP10JASChannelPQ26JASDsp8TChannel    */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void JASTrack::updateChannel(JASChannel* field_0, JASDsp::TChannel* field_1) {
	nofralloc
#include "asm/JSystem/JAudio2/JASTrack/updateChannel__8JASTrackFP10JASChannelPQ26JASDsp8TChannel.s"
}
#pragma pop


/* 80292CA4-80292D88 00E4+00 rc=1 efc=0 .text      channelUpdateCallback__8JASTrackFUlP10JASChannelPQ26JASDsp8TChannelPv */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void JASTrack::channelUpdateCallback(u32 field_0, JASChannel* field_1, JASDsp::TChannel* field_2, void* field_3) {
	nofralloc
#include "asm/JSystem/JAudio2/JASTrack/channelUpdateCallback__8JASTrackFUlP10JASChannelPQ26JASDsp8TChannelPv.s"
}
#pragma pop


/* 80292D88-80292DA0 0018+00 rc=3 efc=0 .text      getRootTrack__8JASTrackFv                                    */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void JASTrack::getRootTrack() {
	nofralloc
#include "asm/JSystem/JAudio2/JASTrack/getRootTrack__8JASTrackFv.s"
}
#pragma pop


/* 80292DA0-80292E9C 00FC+00 rc=1 efc=0 .text      tickProc__8JASTrackFv                                        */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void JASTrack::tickProc() {
	nofralloc
#include "asm/JSystem/JAudio2/JASTrack/tickProc__8JASTrackFv.s"
}
#pragma pop


/* 80292E9C-80292F6C 00D0+00 rc=1 efc=0 .text      seqMain__8JASTrackFv                                         */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void JASTrack::seqMain() {
	nofralloc
#include "asm/JSystem/JAudio2/JASTrack/seqMain__8JASTrackFv.s"
}
#pragma pop


/* 80292F6C-80292F90 0024+00 rc=1 efc=0 .text      cbSeqMain__Q28JASTrack5TListFPv                              */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void JASTrack::TList::cbSeqMain(void* field_0) {
	nofralloc
#include "asm/JSystem/JAudio2/JASTrack/cbSeqMain__Q28JASTrack5TListFPv.s"
}
#pragma pop


/* 80292F90-8029301C 008C+00 rc=1 efc=0 .text      append__Q28JASTrack5TListFP8JASTrack                         */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void JASTrack::TList::append(JASTrack* field_0) {
	nofralloc
#include "asm/JSystem/JAudio2/JASTrack/append__Q28JASTrack5TListFP8JASTrack.s"
}
#pragma pop


/* 8029301C-802930DC 00C0+00 rc=1 efc=0 .text      seqMain__Q28JASTrack5TListFv                                 */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void JASTrack::TList::seqMain() {
	nofralloc
#include "asm/JSystem/JAudio2/JASTrack/seqMain__Q28JASTrack5TListFv.s"
}
#pragma pop


/* 802930DC-80293148 006C+00 rc=2 efc=0 .text      __ct__Q28JASTrack11TChannelMgrFP8JASTrack                    */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm JASTrack::TChannelMgr::TChannelMgr(JASTrack* field_0) {
	nofralloc
#include "asm/JSystem/JAudio2/JASTrack/__ct__Q28JASTrack11TChannelMgrFP8JASTrack.s"
}
#pragma pop


/* 80293148-802931B0 0068+00 rc=1 efc=0 .text      init__Q28JASTrack11TChannelMgrFv                             */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void JASTrack::TChannelMgr::init() {
	nofralloc
#include "asm/JSystem/JAudio2/JASTrack/init__Q28JASTrack11TChannelMgrFv.s"
}
#pragma pop


/* 802931B0-80293220 0070+00 rc=1 efc=0 .text      releaseAll__Q28JASTrack11TChannelMgrFv                       */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void JASTrack::TChannelMgr::releaseAll() {
	nofralloc
#include "asm/JSystem/JAudio2/JASTrack/releaseAll__Q28JASTrack11TChannelMgrFv.s"
}
#pragma pop


/* 80293220-802932A0 0080+00 rc=3 efc=0 .text      noteOff__Q28JASTrack11TChannelMgrFUlUs                       */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void JASTrack::TChannelMgr::noteOff(u32 field_0, u16 field_1) {
	nofralloc
#include "asm/JSystem/JAudio2/JASTrack/noteOff__Q28JASTrack11TChannelMgrFUlUs.s"
}
#pragma pop


/* 802932A0-802932C8 0028+00 rc=1 efc=0 .text      setPauseFlag__Q28JASTrack11TChannelMgrFb                     */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void JASTrack::TChannelMgr::setPauseFlag(bool field_0) {
	nofralloc
#include "asm/JSystem/JAudio2/JASTrack/setPauseFlag__Q28JASTrack11TChannelMgrFb.s"
}
#pragma pop


/* 802932C8-802932E0 0018+00 rc=1 efc=0 .text      __ct__Q28JASTrack10MoveParam_Fv                              */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm JASTrack::MoveParam_::MoveParam_() {
	nofralloc
#include "asm/JSystem/JAudio2/JASTrack/__ct__Q28JASTrack10MoveParam_Fv.s"
}
#pragma pop


/* 802932E0-80293334 0054+00 rc=4 efc=2 .text      __dt__35JASMemPool_MultiThreaded<8JASTrack>Fv                */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
extern "C" asm void func_802932E0() {
	nofralloc
#include "asm/JSystem/JAudio2/JASTrack/func_802932E0.s"
}
#pragma pop


/* 80293334-80293388 0054+00 rc=4 efc=1 .text      __dt__50JASMemPool_MultiThreaded<Q28JASTrack11TChannelMgr>Fv */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
extern "C" asm void func_80293334() {
	nofralloc
#include "asm/JSystem/JAudio2/JASTrack/func_80293334.s"
}
#pragma pop


/* ############################################################################################## */
/* 803C5B68-803C5B74 000C+00 rc=2 efc=0 .data      __vt__19JASDefaultBankTable                                  */
void* const __vt__19JASDefaultBankTable[3] = {
	NULL, /* RTTI */
	NULL,
	(void*)func_80293528,
};

/* 803C5B74-803C5B80 000C+00 rc=1 efc=0 .data      __vt__17JASBankTable<256>                                    */
void* const data_803C5B74[3] = {
	NULL, /* RTTI */
	NULL,
	(void*)func_80293528,
};

/* 803C5B80-803C5B90 000C+04 rc=2 efc=1 .data      __vt__11JASBankList                                          */
void* const __vt__11JASBankList[4] = {
	NULL, /* RTTI */
	NULL,
	NULL,
	/* padding */
	NULL,
};

/* 80293388-8029345C 00D4+00 rc=1 efc=1 .text      __sinit_JASTrack_cpp                                         */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
extern "C" asm void __sinit_JASTrack_cpp() {
	nofralloc
#include "asm/JSystem/JAudio2/JASTrack/__sinit_JASTrack_cpp.s"
}
#pragma pop


/* 8029345C-802934B4 0058+00 rc=1 efc=0 .text      __dt__Q28JASTrack5TListFv                                    */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm JASTrack::TList::~TList() {
	nofralloc
#include "asm/JSystem/JAudio2/JASTrack/__dt__Q28JASTrack5TListFv.s"
}
#pragma pop


/* 802934B4-80293528 0074+00 rc=1 efc=0 .text      __dt__19JASDefaultBankTableFv                                */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm JASDefaultBankTable::~JASDefaultBankTable() {
	nofralloc
#include "asm/JSystem/JAudio2/JASTrack/__dt__19JASDefaultBankTableFv.s"
}
#pragma pop


/* 80293528-8029354C 0024+00 rc=2 efc=0 .text      getBank__17JASBankTable<256>CFUl                             */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
extern "C" asm static void func_80293528() {
	nofralloc
#include "asm/JSystem/JAudio2/JASTrack/func_80293528.s"
}
#pragma pop


/* ############################################################################################## */
/* 8039B000-8039B018 0018+00 rc=0 efc=0 .rodata    sPitchEnvOsc__8JASTrack                                      */
SECTION_RODATA const u8 sPitchEnvOsc__8JASTrack[24] = {
	0x00, 0x00, 0x00, 0x01, 0x3F, 0x80, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
	0x3F, 0x80, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
};

