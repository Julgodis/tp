//
// Generated By: dol2asm
// Translation Unit: JASWSParser
//

#include "JSystem/JAudio2/JASWSParser.h"
#include "dol2asm.h"
#include "dolphin/types.h"

//
// Types:
//

struct JKRHeap {
    /* 802CE72C */ void getFreeSize();
};

struct JASWSParser {
    /* 80298FB0 */ void getGroupCount(void const*);
    /* 80298FD8 */ void createWaveBank(void const*, JKRHeap*);
    /* 80299034 */ void createBasicWaveBank(void const*, JKRHeap*);
    /* 80299264 */ void createSimpleWaveBank(void const*, JKRHeap*);
};

struct JASWaveInfo {};

struct JASBasicWaveBank {
    struct TWaveGroup {
        /* 80298A84 */ void setWaveCount(u32, JKRHeap*);
    };

    /* 802984F8 */ JASBasicWaveBank();
    /* 80298640 */ void getWaveGroup(u32);
    /* 80298664 */ void setGroupCount(u32, JKRHeap*);
    /* 80298710 */ void setWaveTableSize(u32, JKRHeap*);
    /* 80298910 */ void setWaveInfo(JASBasicWaveBank::TWaveGroup*, int, u16, JASWaveInfo const&);
};

struct JASSimpleWaveBank {
    /* 80298C94 */ JASSimpleWaveBank();
    /* 80298DE0 */ void setWaveTableSize(u32, JKRHeap*);
    /* 80298E84 */ void setWaveInfo(u32, JASWaveInfo const&);
};

struct JASWaveArc {
    /* 8029A70C */ void setFileName(char const*);
};

//
// Forward References:
//

static void JSUConvertOffsetToPtr__template0(void const*, u32);  // 2
static void JSUConvertOffsetToPtr__template1(void const*, u32);  // 2
static void JSUConvertOffsetToPtr__template2(void const*, u32);  // 2
static void JSUConvertOffsetToPtr__template3(void const*, u32);  // 2
static void JSUConvertOffsetToPtr__template4(void const*, u32);  // 2
static void JSUConvertOffsetToPtr__template5(void const*, u32);  // 2
static void JSUConvertOffsetToPtr__template6(void const*, u32);  // 2

extern "C" void getGroupCount__11JASWSParserFPCv();                  // 1
extern "C" void createWaveBank__11JASWSParserFPCvP7JKRHeap();        // 1
extern "C" void createBasicWaveBank__11JASWSParserFPCvP7JKRHeap();   // 1
extern "C" void createSimpleWaveBank__11JASWSParserFPCvP7JKRHeap();  // 1
extern "C" static void func_80299490();                              // 1
extern "C" static void func_802994A8();                              // 1
extern "C" static void func_802994C0();                              // 1
extern "C" static void func_802994D8();                              // 1
extern "C" static void func_802994F0();                              // 1
extern "C" static void func_80299508();                              // 1
extern "C" static void func_80299520();                              // 1

//
// External References:
//

void* operator new(u32, JKRHeap*, int);  // 2

extern "C" void __ct__16JASBasicWaveBankFv();                        // 1
extern "C" void getWaveGroup__16JASBasicWaveBankFUl();               // 1
extern "C" void setGroupCount__16JASBasicWaveBankFUlP7JKRHeap();     // 1
extern "C" void setWaveTableSize__16JASBasicWaveBankFUlP7JKRHeap();  // 1
extern "C" void
setWaveInfo__16JASBasicWaveBankFPQ216JASBasicWaveBank10TWaveGroupiUsRC11JASWaveInfo();  // 1
extern "C" void setWaveCount__Q216JASBasicWaveBank10TWaveGroupFUlP7JKRHeap();           // 1
extern "C" void __ct__17JASSimpleWaveBankFv();                                          // 1
extern "C" void setWaveTableSize__17JASSimpleWaveBankFUlP7JKRHeap();                    // 1
extern "C" void setWaveInfo__17JASSimpleWaveBankFUlRC11JASWaveInfo();                   // 1
extern "C" void setFileName__10JASWaveArcFPCc();                                        // 1
extern "C" void getFreeSize__7JKRHeapFv();                                              // 1
extern "C" void* __nw__FUlP7JKRHeapi();                                                 // 1
extern "C" void _savegpr_20();                                                          // 1
extern "C" void _savegpr_23();                                                          // 1
extern "C" void _restgpr_20();                                                          // 1
extern "C" void _restgpr_23();                                                          // 1
extern "C" extern u32 one__11JASWaveInfo[1 + 1 /* padding */];
extern "C" extern u8 JASDram[4];

//
// Declarations:
//

/* 80298FB0-80298FD8 0028+00 s=1 e=0 z=0  None .text      getGroupCount__11JASWSParserFPCv */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void JASWSParser::getGroupCount(void const* param_0) {
    nofralloc
#include "asm/JSystem/JAudio2/JASWSParser/getGroupCount__11JASWSParserFPCv.s"
}
#pragma pop

/* 80298FD8-80299034 005C+00 s=0 e=1 z=0  None .text      createWaveBank__11JASWSParserFPCvP7JKRHeap
 */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void JASWSParser::createWaveBank(void const* param_0, JKRHeap* param_1) {
    nofralloc
#include "asm/JSystem/JAudio2/JASWSParser/createWaveBank__11JASWSParserFPCvP7JKRHeap.s"
}
#pragma pop

/* ############################################################################################## */
/* 80451280-80451288 0004+04 s=2 e=0 z=0  None .sbss      sUsedHeapSize__11JASWSParser */
static u8 sUsedHeapSize__11JASWSParser[4 + 4 /* padding */];

/* 80299034-80299264 0230+00 s=1 e=0 z=0  None .text
 * createBasicWaveBank__11JASWSParserFPCvP7JKRHeap              */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void JASWSParser::createBasicWaveBank(void const* param_0, JKRHeap* param_1) {
    nofralloc
#include "asm/JSystem/JAudio2/JASWSParser/createBasicWaveBank__11JASWSParserFPCvP7JKRHeap.s"
}
#pragma pop

/* 80299264-80299490 022C+00 s=1 e=0 z=0  None .text
 * createSimpleWaveBank__11JASWSParserFPCvP7JKRHeap             */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void JASWSParser::createSimpleWaveBank(void const* param_0, JKRHeap* param_1) {
    nofralloc
#include "asm/JSystem/JAudio2/JASWSParser/createSimpleWaveBank__11JASWSParserFPCvP7JKRHeap.s"
}
#pragma pop

/* 80299490-802994A8 0018+00 s=2 e=0 z=0  None .text
 * JSUConvertOffsetToPtr<Q211JASWSParser9TCtrlWave>__FPCvUl     */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm static void JSUConvertOffsetToPtr__template0(void const* param_0, u32 param_1) {
    nofralloc
#include "asm/JSystem/JAudio2/JASWSParser/func_80299490.s"
}
#pragma pop

/* 802994A8-802994C0 0018+00 s=2 e=0 z=0  None .text
 * JSUConvertOffsetToPtr<Q211JASWSParser5TWave>__FPCvUl         */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm static void JSUConvertOffsetToPtr__template1(void const* param_0, u32 param_1) {
    nofralloc
#include "asm/JSystem/JAudio2/JASWSParser/func_802994A8.s"
}
#pragma pop

/* 802994C0-802994D8 0018+00 s=2 e=0 z=0  None .text
 * JSUConvertOffsetToPtr<Q211JASWSParser12TWaveArchive>__FPCvUl */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm static void JSUConvertOffsetToPtr__template2(void const* param_0, u32 param_1) {
    nofralloc
#include "asm/JSystem/JAudio2/JASWSParser/func_802994C0.s"
}
#pragma pop

/* 802994D8-802994F0 0018+00 s=2 e=0 z=0  None .text
 * JSUConvertOffsetToPtr<Q211JASWSParser16TWaveArchiveBank>__FPCvUl */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm static void JSUConvertOffsetToPtr__template3(void const* param_0, u32 param_1) {
    nofralloc
#include "asm/JSystem/JAudio2/JASWSParser/func_802994D8.s"
}
#pragma pop

/* 802994F0-80299508 0018+00 s=2 e=0 z=0  None .text
 * JSUConvertOffsetToPtr<Q211JASWSParser5TCtrl>__FPCvUl         */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm static void JSUConvertOffsetToPtr__template4(void const* param_0, u32 param_1) {
    nofralloc
#include "asm/JSystem/JAudio2/JASWSParser/func_802994F0.s"
}
#pragma pop

/* 80299508-80299520 0018+00 s=2 e=0 z=0  None .text
 * JSUConvertOffsetToPtr<Q211JASWSParser10TCtrlScene>__FPCvUl   */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm static void JSUConvertOffsetToPtr__template5(void const* param_0, u32 param_1) {
    nofralloc
#include "asm/JSystem/JAudio2/JASWSParser/func_80299508.s"
}
#pragma pop

/* 80299520-80299538 0018+00 s=3 e=0 z=0  None .text
 * JSUConvertOffsetToPtr<Q211JASWSParser10TCtrlGroup>__FPCvUl   */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm static void JSUConvertOffsetToPtr__template6(void const* param_0, u32 param_1) {
    nofralloc
#include "asm/JSystem/JAudio2/JASWSParser/func_80299520.s"
}
#pragma pop
