// 
// Generated By: dol2asm
// Translation Unit: JASDSPChannel
// 

#include "dolphin/types.h"

// 
// Types:
// 

struct JASDSPChannel {
	/* 8029D2F4 */ JASDSPChannel();
	/* 8029D320 */ void free();
	/* 8029D330 */ void start();
	/* 8029D340 */ void drop();
	/* 8029D3C8 */ void initAll();
	/* 8029D534 */ void setPriority(u8);
	/* 8029D540 */ void getLowestChannel(int);
	/* 8029D5D0 */ void getLowestActiveChannel();
	/* 8029D65C */ void updateProc();
	/* 8029D89C */ void updateAll();
	/* 8029D910 */ void killActiveChannel();
	/* 8029D948 */ void getHandle(u32);
};

struct JASDsp {
	struct TChannel {
		/* 8029DCA4 */ void init();
		/* 8029DCE0 */ void playStart();
		/* 8029DD44 */ void playStop();
		/* 8029DD50 */ void replyFinishRequest();
		/* 8029DD60 */ void forceStop();
		/* 8029DD7C */ void isFinish() const;
		/* 8029DF8C */ void flush();
	};

	/* 8029D9A4 */ void releaseHalt(u32);
	/* 8029DA38 */ void getDSPHandle(int);
};

struct JKRHeap {
};

// 
// Forward References:
// 

extern "C" void alloc__13JASDSPChannelFUcPFUlPQ26JASDsp8TChannelPv_lPv(); // 1
extern "C" void allocForce__13JASDSPChannelFUcPFUlPQ26JASDsp8TChannelPv_lPv(); // 1

extern "C" void __ct__13JASDSPChannelFv(); // 1
extern "C" void free__13JASDSPChannelFv(); // 1
extern "C" void start__13JASDSPChannelFv(); // 1
extern "C" void drop__13JASDSPChannelFv(); // 1
extern "C" void initAll__13JASDSPChannelFv(); // 1
extern "C" void alloc__13JASDSPChannelFUcPFUlPQ26JASDsp8TChannelPv_lPv(); // 1
extern "C" void allocForce__13JASDSPChannelFUcPFUlPQ26JASDsp8TChannelPv_lPv(); // 1
extern "C" void setPriority__13JASDSPChannelFUc(); // 1
extern "C" void getLowestChannel__13JASDSPChannelFi(); // 1
extern "C" void getLowestActiveChannel__13JASDSPChannelFv(); // 1
extern "C" void updateProc__13JASDSPChannelFv(); // 1
extern "C" void updateAll__13JASDSPChannelFv(); // 1
extern "C" void killActiveChannel__13JASDSPChannelFv(); // 1
extern "C" void getHandle__13JASDSPChannelFUl(); // 1
SECTION_SBSS extern u8 sDspChannels__13JASDSPChannel[4 + 4 /* padding */];

// 
// External References:
// 

void* operator new[](u32, JKRHeap*, int); // 2
extern "C" void __construct_new_array(); // 1
extern "C" void _savegpr_28(); // 1
extern "C" void _restgpr_28(); // 1

extern "C" void releaseHalt__6JASDspFUl(); // 1
extern "C" void getDSPHandle__6JASDspFi(); // 1
extern "C" void init__Q26JASDsp8TChannelFv(); // 1
extern "C" void playStart__Q26JASDsp8TChannelFv(); // 1
extern "C" void playStop__Q26JASDsp8TChannelFv(); // 1
extern "C" void replyFinishRequest__Q26JASDsp8TChannelFv(); // 1
extern "C" void forceStop__Q26JASDsp8TChannelFv(); // 1
extern "C" void isFinish__Q26JASDsp8TChannelCFv(); // 1
extern "C" void flush__Q26JASDsp8TChannelFv(); // 1
extern "C" void* __nwa__FUlP7JKRHeapi(); // 1
extern "C" void __construct_new_array(); // 1
extern "C" void _savegpr_28(); // 1
extern "C" void _restgpr_28(); // 1
SECTION_SBSS extern u8 JASDram[4];

// 
// Declarations:
// 

/* 8029D2F4-8029D320 002C+00 rc=1 efc=0 .text      __ct__13JASDSPChannelFv                                      */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm JASDSPChannel::JASDSPChannel() {
	nofralloc
#include "asm/JSystem/JAudio2/JASDSPChannel/__ct__13JASDSPChannelFv.s"
}
#pragma pop


/* 8029D320-8029D330 0010+00 rc=3 efc=3 .text      free__13JASDSPChannelFv                                      */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void JASDSPChannel::free() {
	nofralloc
#include "asm/JSystem/JAudio2/JASDSPChannel/free__13JASDSPChannelFv.s"
}
#pragma pop


/* 8029D330-8029D340 0010+00 rc=2 efc=2 .text      start__13JASDSPChannelFv                                     */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void JASDSPChannel::start() {
	nofralloc
#include "asm/JSystem/JAudio2/JASDSPChannel/start__13JASDSPChannelFv.s"
}
#pragma pop


/* 8029D340-8029D3C8 0088+00 rc=5 efc=2 .text      drop__13JASDSPChannelFv                                      */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void JASDSPChannel::drop() {
	nofralloc
#include "asm/JSystem/JAudio2/JASDSPChannel/drop__13JASDSPChannelFv.s"
}
#pragma pop


/* ############################################################################################## */
/* 804512E0-804512E8 0004+04 rc=5 efc=0 .sbss      sDspChannels__13JASDSPChannel                                */
u8 sDspChannels__13JASDSPChannel[4 + 4 /* padding */];

/* 8029D3C8-8029D44C 0084+00 rc=1 efc=1 .text      initAll__13JASDSPChannelFv                                   */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void JASDSPChannel::initAll() {
	nofralloc
#include "asm/JSystem/JAudio2/JASDSPChannel/initAll__13JASDSPChannelFv.s"
}
#pragma pop


/* 8029D44C-8029D4BC 0070+00 rc=1 efc=1 .text      alloc__13JASDSPChannelFUcPFUlPQ26JASDsp8TChannelPv_lPv       */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
extern "C" asm void alloc__13JASDSPChannelFUcPFUlPQ26JASDsp8TChannelPv_lPv() {
	nofralloc
#include "asm/JSystem/JAudio2/JASDSPChannel/alloc__13JASDSPChannelFUcPFUlPQ26JASDsp8TChannelPv_lPv.s"
}
#pragma pop


/* 8029D4BC-8029D534 0078+00 rc=1 efc=1 .text      allocForce__13JASDSPChannelFUcPFUlPQ26JASDsp8TChannelPv_lPv  */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
extern "C" asm void allocForce__13JASDSPChannelFUcPFUlPQ26JASDsp8TChannelPv_lPv() {
	nofralloc
#include "asm/JSystem/JAudio2/JASDSPChannel/allocForce__13JASDSPChannelFUcPFUlPQ26JASDsp8TChannelPv_lPv.s"
}
#pragma pop


/* 8029D534-8029D540 000C+00 rc=1 efc=1 .text      setPriority__13JASDSPChannelFUc                              */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void JASDSPChannel::setPriority(u8 field_0) {
	nofralloc
#include "asm/JSystem/JAudio2/JASDSPChannel/setPriority__13JASDSPChannelFUc.s"
}
#pragma pop


/* 8029D540-8029D5D0 0090+00 rc=2 efc=0 .text      getLowestChannel__13JASDSPChannelFi                          */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void JASDSPChannel::getLowestChannel(int field_0) {
	nofralloc
#include "asm/JSystem/JAudio2/JASDSPChannel/getLowestChannel__13JASDSPChannelFi.s"
}
#pragma pop


/* 8029D5D0-8029D65C 008C+00 rc=1 efc=0 .text      getLowestActiveChannel__13JASDSPChannelFv                    */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void JASDSPChannel::getLowestActiveChannel() {
	nofralloc
#include "asm/JSystem/JAudio2/JASDSPChannel/getLowestActiveChannel__13JASDSPChannelFv.s"
}
#pragma pop


/* 8029D65C-8029D89C 0240+00 rc=1 efc=0 .text      updateProc__13JASDSPChannelFv                                */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void JASDSPChannel::updateProc() {
	nofralloc
#include "asm/JSystem/JAudio2/JASDSPChannel/updateProc__13JASDSPChannelFv.s"
}
#pragma pop


/* 8029D89C-8029D910 0074+00 rc=1 efc=1 .text      updateAll__13JASDSPChannelFv                                 */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void JASDSPChannel::updateAll() {
	nofralloc
#include "asm/JSystem/JAudio2/JASDSPChannel/updateAll__13JASDSPChannelFv.s"
}
#pragma pop


/* 8029D910-8029D948 0038+00 rc=1 efc=1 .text      killActiveChannel__13JASDSPChannelFv                         */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void JASDSPChannel::killActiveChannel() {
	nofralloc
#include "asm/JSystem/JAudio2/JASDSPChannel/killActiveChannel__13JASDSPChannelFv.s"
}
#pragma pop


/* 8029D948-8029D958 0010+00 rc=1 efc=1 .text      getHandle__13JASDSPChannelFUl                                */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void JASDSPChannel::getHandle(u32 field_0) {
	nofralloc
#include "asm/JSystem/JAudio2/JASDSPChannel/getHandle__13JASDSPChannelFUl.s"
}
#pragma pop


