// 
// Generated By: dol2asm
// Translation Unit: JASResArcLoader
// 

#include "dol2asm.h"
#include "dolphin/types.h"
#include "JSystem/JAudio2/JASResArcLoader.h"

// 
// Types:
// 

struct JKRArchive {
	/* 802D5F40 */ void readResource(void*, u32, u16);
	/* 802D6684 */ void findIdxResource(u32) const;
	/* 802D6770 */ void findIdResource(u16) const;
};

struct JASResArcLoader {
	/* 80290BD0 */ void getResSize(JKRArchive const*, u16);
	/* 80290C04 */ void getResMaxSize(JKRArchive const*);
	/* 80290C7C */ void loadResourceCallback(void*);
	/* 80290D18 */ void loadResourceAsync(JKRArchive*, u16, u8*, u32, void (*)(u32, u32), u32);
};

struct JASTaskThread {
	/* 8028FB5C */ void sendCmdMsg(void (*)(void*), void const*, u32);
};

struct JASDvd {
	/* 8028FEFC */ void getThreadPointer();
};

// 
// Forward References:
// 


extern "C" void getResSize__15JASResArcLoaderFPC10JKRArchiveUs(); // 1
extern "C" void getResMaxSize__15JASResArcLoaderFPC10JKRArchive(); // 1
extern "C" void loadResourceCallback__15JASResArcLoaderFPv(); // 1
extern "C" void loadResourceAsync__15JASResArcLoaderFP10JKRArchiveUsPUcUlPFUlUl_vUl(); // 1

// 
// External References:
// 


extern "C" void sendCmdMsg__13JASTaskThreadFPFPv_vPCvUl(); // 1
extern "C" void getThreadPointer__6JASDvdFv(); // 1
extern "C" void readResource__10JKRArchiveFPvUlUs(); // 1
extern "C" void findIdxResource__10JKRArchiveCFUl(); // 1
extern "C" void findIdResource__10JKRArchiveCFUs(); // 1
extern "C" void OSSendMessage(); // 1
extern "C" void _savegpr_28(); // 1
extern "C" void _restgpr_28(); // 1

// 
// Declarations:
// 

/* 80290BD0-80290C04 0034+00 r=2 e=2 z=0  None .text      getResSize__15JASResArcLoaderFPC10JKRArchiveUs               */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void JASResArcLoader::getResSize(JKRArchive const* param_0, u16 param_1) {
	nofralloc
#include "asm/JSystem/JAudio2/JASResArcLoader/getResSize__15JASResArcLoaderFPC10JKRArchiveUs.s"
}
#pragma pop


/* 80290C04-80290C7C 0078+00 r=1 e=1 z=0  None .text      getResMaxSize__15JASResArcLoaderFPC10JKRArchive              */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void JASResArcLoader::getResMaxSize(JKRArchive const* param_0) {
	nofralloc
#include "asm/JSystem/JAudio2/JASResArcLoader/getResMaxSize__15JASResArcLoaderFPC10JKRArchive.s"
}
#pragma pop


/* 80290C7C-80290D18 009C+00 r=1 e=0 z=0  None .text      loadResourceCallback__15JASResArcLoaderFPv                   */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void JASResArcLoader::loadResourceCallback(void* param_0) {
	nofralloc
#include "asm/JSystem/JAudio2/JASResArcLoader/loadResourceCallback__15JASResArcLoaderFPv.s"
}
#pragma pop


/* 80290D18-80290D74 005C+00 r=1 e=1 z=0  None .text      loadResourceAsync__15JASResArcLoaderFP10JKRArchiveUsPUcUlPFUlUl_vUl */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void JASResArcLoader::loadResourceAsync(JKRArchive* param_0, u16 param_1, u8* param_2, u32 param_3, void (*)(u32, u32), u32 param_5) {
	nofralloc
#include "asm/JSystem/JAudio2/JASResArcLoader/loadResourceAsync__15JASResArcLoaderFP10JKRArchiveUsPUcUlPFUlUl_vUl.s"
}
#pragma pop


