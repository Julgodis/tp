//
// Generated By: dol2asm
// Translation Unit: MetroTRK/Portable/dispatch
//

#include "TRK_MINNOW_DOLPHIN/MetroTRK/Portable/dispatch.h"
#include "dol2asm.h"
#include "dolphin/types.h"

//
// Forward References:
//

extern "C" void TRKDispatchMessage();
extern "C" bool TRKInitializeDispatcher();

//
// External References:
//

extern "C" void TRKSetBufferPosition();
extern "C" void TRKDoSetOption();
extern "C" void TRKDoStop();
extern "C" void TRKDoStep();
extern "C" void TRKDoContinue();
extern "C" void TRKDoWriteRegisters();
extern "C" void TRKDoReadRegisters();
extern "C" void TRKDoWriteMemory();
extern "C" void TRKDoReadMemory();
extern "C" bool TRKDoSupportMask();
extern "C" bool TRKDoVersions();
extern "C" void TRKDoOverride();
extern "C" void TRKDoReset();
extern "C" void TRKDoDisconnect();
extern "C" void TRKDoConnect();
extern "C" void MWTRACE();

//
// Declarations:
//

/* ############################################################################################## */
/* 803A2890-803A28AC 0019+03 s=1 e=0 z=0  None .rodata    @126 */
SECTION_RODATA static u8 const lit_126[25 + 3 /* padding */] = {
    0x44,
    0x69,
    0x73,
    0x70,
    0x61,
    0x74,
    0x63,
    0x68,
    0x20,
    0x63,
    0x6F,
    0x6D,
    0x6D,
    0x61,
    0x6E,
    0x64,
    0x20,
    0x30,
    0x78,
    0x25,
    0x30,
    0x38,
    0x78,
    0x0A,
    0x00,
    /* padding */
    0x00,
    0x00,
    0x00,
};

/* 803A28AC-803A28D0 001D+07 s=1 e=0 z=0  None .rodata    @127 */
SECTION_RODATA static u8 const lit_127[29 + 7 /* padding */] = {
    0x44,
    0x69,
    0x73,
    0x70,
    0x61,
    0x74,
    0x63,
    0x68,
    0x20,
    0x63,
    0x6F,
    0x6D,
    0x70,
    0x6C,
    0x65,
    0x74,
    0x65,
    0x20,
    0x65,
    0x72,
    0x72,
    0x20,
    0x3D,
    0x20,
    0x25,
    0x6C,
    0x64,
    0x0A,
    0x00,
    /* padding */
    0x00,
    0x00,
    0x00,
    0x00,
    0x00,
    0x00,
    0x00,
};

/* 803D3190-803D3200 006C+04 s=1 e=0 z=0  None .data      @128 */
SECTION_DATA static void* lit_128[27 + 1 /* padding */] = {
    (void*)(((char*)TRKDispatchMessage) + 0x13C),
    (void*)(((char*)TRKDispatchMessage) + 0x60),
    (void*)(((char*)TRKDispatchMessage) + 0x70),
    (void*)(((char*)TRKDispatchMessage) + 0x80),
    (void*)(((char*)TRKDispatchMessage) + 0xA0),
    (void*)(((char*)TRKDispatchMessage) + 0xB0),
    (void*)(((char*)TRKDispatchMessage) + 0x13C),
    (void*)(((char*)TRKDispatchMessage) + 0x90),
    (void*)(((char*)TRKDispatchMessage) + 0x13C),
    (void*)(((char*)TRKDispatchMessage) + 0x13C),
    (void*)(((char*)TRKDispatchMessage) + 0x13C),
    (void*)(((char*)TRKDispatchMessage) + 0x13C),
    (void*)(((char*)TRKDispatchMessage) + 0x13C),
    (void*)(((char*)TRKDispatchMessage) + 0x13C),
    (void*)(((char*)TRKDispatchMessage) + 0x13C),
    (void*)(((char*)TRKDispatchMessage) + 0x13C),
    (void*)(((char*)TRKDispatchMessage) + 0xC0),
    (void*)(((char*)TRKDispatchMessage) + 0xD0),
    (void*)(((char*)TRKDispatchMessage) + 0xE0),
    (void*)(((char*)TRKDispatchMessage) + 0xF0),
    (void*)(((char*)TRKDispatchMessage) + 0x13C),
    (void*)(((char*)TRKDispatchMessage) + 0x13C),
    (void*)(((char*)TRKDispatchMessage) + 0x13C),
    (void*)(((char*)TRKDispatchMessage) + 0x130),
    (void*)(((char*)TRKDispatchMessage) + 0x100),
    (void*)(((char*)TRKDispatchMessage) + 0x110),
    (void*)(((char*)TRKDispatchMessage) + 0x120),
    /* padding */
    NULL,
};

/* 8036DB9C-8036DD0C 0170+00 s=1 e=1 z=0  None .text      TRKDispatchMessage */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
extern "C" asm void TRKDispatchMessage() {
    nofralloc
#include "asm/TRK_MINNOW_DOLPHIN/MetroTRK/Portable/dispatch/TRKDispatchMessage.s"
}
#pragma pop

/* 8036DD0C-8036DD14 0008+00 s=0 e=1 z=0  None .text      TRKInitializeDispatcher */
extern "C" bool TRKInitializeDispatcher() {
    return false;
}
