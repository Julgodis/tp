// 
// Generated By: dol2asm
// Translation Unit: MetroTRK/Portable/dispatch
// 

#include "dol2asm.h"
#include "dolphin/types.h"
#include "TRK_MINNOW_DOLPHIN/MetroTRK/Portable/dispatch.h"

// 
// Forward References:
// 


extern "C" void TRKDispatchMessage(); // 1
extern "C" bool TRKInitializeDispatcher(); // 1

// 
// External References:
// 


extern "C" void TRKSetBufferPosition(); // 1
extern "C" void TRKDoSetOption(); // 1
extern "C" void TRKDoStop(); // 1
extern "C" void TRKDoStep(); // 1
extern "C" void TRKDoContinue(); // 1
extern "C" void TRKDoWriteRegisters(); // 1
extern "C" void TRKDoReadRegisters(); // 1
extern "C" void TRKDoWriteMemory(); // 1
extern "C" void TRKDoReadMemory(); // 1
extern "C" bool TRKDoSupportMask(); // 1
extern "C" bool TRKDoVersions(); // 1
extern "C" void TRKDoOverride(); // 1
extern "C" void TRKDoReset(); // 1
extern "C" void TRKDoDisconnect(); // 1
extern "C" void TRKDoConnect(); // 1
extern "C" void MWTRACE(); // 1

// 
// Declarations:
// 

/* ############################################################################################## */
/* 803A2890-803A28AC 0019+03 rc=1 efc=0 rfr=False None .rodata    @126                                                         */
SECTION_RODATA static u8 const MetroTRK_Portable_dispatch__lit_126[25 + 3 /* padding */] = {
	0x44, 0x69, 0x73, 0x70, 0x61, 0x74, 0x63, 0x68, 0x20, 0x63, 0x6F, 0x6D, 0x6D, 0x61, 0x6E, 0x64,
	0x20, 0x30, 0x78, 0x25, 0x30, 0x38, 0x78, 0x0A, 0x00,
	/* padding */
	0x00, 0x00, 0x00,
};

/* 803A28AC-803A28D0 001D+07 rc=1 efc=0 rfr=False None .rodata    @127                                                         */
SECTION_RODATA static u8 const MetroTRK_Portable_dispatch__lit_127[29 + 7 /* padding */] = {
	0x44, 0x69, 0x73, 0x70, 0x61, 0x74, 0x63, 0x68, 0x20, 0x63, 0x6F, 0x6D, 0x70, 0x6C, 0x65, 0x74,
	0x65, 0x20, 0x65, 0x72, 0x72, 0x20, 0x3D, 0x20, 0x25, 0x6C, 0x64, 0x0A, 0x00,
	/* padding */
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
};

/* 803D3190-803D3200 006C+04 rc=1 efc=0 rfr=False None .data      @128                                                         */
SECTION_DATA static void* MetroTRK_Portable_dispatch__lit_128[27 + 1 /* padding */] = {
	/* 0    */ (void*)(((char*)TRKDispatchMessage)+0x13C),
	/* 1    */ (void*)(((char*)TRKDispatchMessage)+0x60),
	/* 2    */ (void*)(((char*)TRKDispatchMessage)+0x70),
	/* 3    */ (void*)(((char*)TRKDispatchMessage)+0x80),
	/* 4    */ (void*)(((char*)TRKDispatchMessage)+0xA0),
	/* 5    */ (void*)(((char*)TRKDispatchMessage)+0xB0),
	/* 6    */ (void*)(((char*)TRKDispatchMessage)+0x13C),
	/* 7    */ (void*)(((char*)TRKDispatchMessage)+0x90),
	/* 8    */ (void*)(((char*)TRKDispatchMessage)+0x13C),
	/* 9    */ (void*)(((char*)TRKDispatchMessage)+0x13C),
	/* 10   */ (void*)(((char*)TRKDispatchMessage)+0x13C),
	/* 11   */ (void*)(((char*)TRKDispatchMessage)+0x13C),
	/* 12   */ (void*)(((char*)TRKDispatchMessage)+0x13C),
	/* 13   */ (void*)(((char*)TRKDispatchMessage)+0x13C),
	/* 14   */ (void*)(((char*)TRKDispatchMessage)+0x13C),
	/* 15   */ (void*)(((char*)TRKDispatchMessage)+0x13C),
	/* 16   */ (void*)(((char*)TRKDispatchMessage)+0xC0),
	/* 17   */ (void*)(((char*)TRKDispatchMessage)+0xD0),
	/* 18   */ (void*)(((char*)TRKDispatchMessage)+0xE0),
	/* 19   */ (void*)(((char*)TRKDispatchMessage)+0xF0),
	/* 20   */ (void*)(((char*)TRKDispatchMessage)+0x13C),
	/* 21   */ (void*)(((char*)TRKDispatchMessage)+0x13C),
	/* 22   */ (void*)(((char*)TRKDispatchMessage)+0x13C),
	/* 23   */ (void*)(((char*)TRKDispatchMessage)+0x130),
	/* 24   */ (void*)(((char*)TRKDispatchMessage)+0x100),
	/* 25   */ (void*)(((char*)TRKDispatchMessage)+0x110),
	/* 26   */ (void*)(((char*)TRKDispatchMessage)+0x120),
	/* padding */
	NULL,
};

/* 8036DB9C-8036DD0C 0170+00 rc=2 efc=1 rfr=False None .text      TRKDispatchMessage                                           */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
extern "C" asm void TRKDispatchMessage() {
	nofralloc
#include "asm/TRK_MINNOW_DOLPHIN/MetroTRK/Portable/dispatch/TRKDispatchMessage.s"
}
#pragma pop


/* 8036DD0C-8036DD14 0008+00 rc=1 efc=1 rfr=False None .text      TRKInitializeDispatcher                                      */
extern "C" bool TRKInitializeDispatcher() {
	return false;
}


