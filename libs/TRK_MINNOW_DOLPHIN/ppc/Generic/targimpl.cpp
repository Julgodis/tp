// 
// Generated By: dol2asm
// 

#include "dolphin/types.h"

// 
// Additional Symbols:
// 

extern "C" {
SECTION_INIT extern void memset();
extern void TRKConstructEvent();
extern void TRKPostEvent();
extern void TRKReadBuffer_ui32();
extern void TRKReadBuffer1_ui64();
extern void TRKAppendBuffer_ui32();
extern void TRKAppendBuffer_ui8();
extern void TRKAppendBuffer1_ui64();
extern void HandlePositionFileSupportRequest();
extern void HandleCloseFileSupportRequest();
extern void HandleOpenFileSupportRequest();
extern void TRKSuppAccessFile();
extern void TRKDoNotifyStopped();
extern void TRK_flush_cache();
extern void __TRK_get_MSR();
extern void __TRK_set_MSR();
extern void TRK_ppc_memcpy();
extern void TRKInterruptHandler();
extern void TRKExceptionHandler();
extern void TRKSwapAndGo();
extern void TRKInterruptHandlerEnableInterrupts();
extern void ReadFPSCR();
extern void WriteFPSCR();
extern void TRKTargetAccessARAM();
extern void TRKTargetSetInputPendingPtr();
extern void TRKTargetStop();
extern void TRKTargetSetStopped();
extern void TRKTargetStopped();
extern void TRKTargetSupportRequest();
extern void TRKTargetGetPC();
extern void TRKTargetStepOutOfRange();
extern void TRKTargetSingleStep();
extern void TRKTargetAddExceptionInfo();
extern void TRKTargetAddStopInfo();
extern void TRKTargetInterrupt();
extern void TRKPostInterruptEvent();
extern void TRKTargetAccessExtended2();
extern void TRKTargetAccessExtended1();
extern void TRKTargetAccessFP();
extern void TRKTargetAccessDefault();
extern void TRKTargetReadInstruction();
extern void TRKTargetAccessMemory();
extern void TRKValidMemory32();
extern void TRKSaveExtended1Block();
extern void TRKRestoreExtended1Block();
extern void TRK__write_aram();
extern void TRK__read_aram();
extern void TRKTargetTranslate();
extern void TRKUARTInterruptHandler();
extern void MWTRACE();
SECTION_RODATA extern const u8 gTRKMemMap[16];
SECTION_RODATA extern const u8 ppc_Generic_targimpl__LIT_276[40];
SECTION_RODATA extern const u8 LIT_283[40];
SECTION_RODATA extern const u8 ppc_Generic_targimpl__LIT_290[40];
SECTION_RODATA extern const u8 LIT_422[16];
SECTION_DATA extern u8 gTRKRestoreFlags[12];
SECTION_DATA extern u8 gTRKExceptionStatus[16];
SECTION_DATA extern u8 gTRKStepStatus[20];
SECTION_BSS extern u8 TRK_saved_exceptionID[2 + 2 /* padding */];
SECTION_BSS extern u8 gTRKState[164];
SECTION_BSS extern u8 gTRKCPUState[1072];
SECTION_BSS extern u8 gTRKSaveState[148];
SECTION_BSS extern u8 TRKvalue128_temp[16 + 4 /* padding */];
}


/* ###################################################################################### */
/*                                        .rodata                                         */
/* ###################################################################################### */

extern "C" {
/* 803A2B60-803A2B70 0010 .rodata    gTRKMemMap                                                   */
SECTION_RODATA const u8 gTRKMemMap[16] = {
	0x00, 0x00, 0x00, 0x00, 0xFF, 0xFF, 0xFF, 0xFF, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x01,
};
/* 803A2B70-803A2B98 0028 .rodata    @276                                                         */
SECTION_RODATA const u8 ppc_Generic_targimpl__LIT_276[40] = {
	0x60, 0x00, 0x00, 0x00, 0x60, 0x00, 0x00, 0x00, 0x60, 0x00, 0x00, 0x00, 0x60, 0x00, 0x00, 0x00,
	0x60, 0x00, 0x00, 0x00, 0x60, 0x00, 0x00, 0x00, 0x60, 0x00, 0x00, 0x00, 0x60, 0x00, 0x00, 0x00,
	0x60, 0x00, 0x00, 0x00, 0x60, 0x00, 0x00, 0x00,
};
/* 803A2B98-803A2BC0 0028 .rodata    @283                                                         */
SECTION_RODATA const u8 LIT_283[40] = {
	0x60, 0x00, 0x00, 0x00, 0x60, 0x00, 0x00, 0x00, 0x60, 0x00, 0x00, 0x00, 0x60, 0x00, 0x00, 0x00,
	0x60, 0x00, 0x00, 0x00, 0x60, 0x00, 0x00, 0x00, 0x60, 0x00, 0x00, 0x00, 0x60, 0x00, 0x00, 0x00,
	0x60, 0x00, 0x00, 0x00, 0x60, 0x00, 0x00, 0x00,
};
/* 803A2BC0-803A2BE8 0028 .rodata    @290                                                         */
SECTION_RODATA const u8 ppc_Generic_targimpl__LIT_290[40] = {
	0x60, 0x00, 0x00, 0x00, 0x60, 0x00, 0x00, 0x00, 0x60, 0x00, 0x00, 0x00, 0x60, 0x00, 0x00, 0x00,
	0x60, 0x00, 0x00, 0x00, 0x60, 0x00, 0x00, 0x00, 0x60, 0x00, 0x00, 0x00, 0x60, 0x00, 0x00, 0x00,
	0x60, 0x00, 0x00, 0x00, 0x60, 0x00, 0x00, 0x00,
};
/* 803A2BE8-803A2BF8 0010 .rodata    @422                                                         */
SECTION_RODATA const u8 LIT_422[16] = {
	0x54, 0x61, 0x72, 0x67, 0x65, 0x74, 0x44, 0x6F, 0x53, 0x74, 0x65, 0x70, 0x28, 0x29, 0x0A, 0x00,
};
}


/* ###################################################################################### */
/*                                         .data                                          */
/* ###################################################################################### */

extern "C" {
/* 803D3238-803D3244 0009 .data      gTRKRestoreFlags                                             */
SECTION_DATA u8 gTRKRestoreFlags[12] = {
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
	/* padding */
	0x00, 0x00, 0x00,
};
/* 803D3244-803D3254 0010 .data      gTRKExceptionStatus                                          */
SECTION_DATA u8 gTRKExceptionStatus[16] = {
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00,
};
/* 803D3254-803D3268 0014 .data      gTRKStepStatus                                               */
SECTION_DATA u8 gTRKStepStatus[20] = {
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
	0x00, 0x00, 0x00, 0x00,
};
}


/* ###################################################################################### */
/*                                          .bss                                          */
/* ###################################################################################### */

extern "C" {
/* 8044F290-8044F294 0002 .bss       TRK_saved_exceptionID                                        */
SECTION_BSS u8 TRK_saved_exceptionID[2 + 2 /* padding */];
/* 8044F294-8044F338 00A4 .bss       gTRKState                                                    */
SECTION_BSS u8 gTRKState[164];
/* 8044F338-8044F768 0430 .bss       gTRKCPUState                                                 */
SECTION_BSS u8 gTRKCPUState[1072];
/* 8044F768-8044F7FC 0094 .bss       gTRKSaveState                                                */
SECTION_BSS u8 gTRKSaveState[148];
/* 8044F7FC-8044F810 0010 .bss       TRKvalue128_temp                                             */
SECTION_BSS u8 TRKvalue128_temp[16 + 4 /* padding */];
}


/* ###################################################################################### */
/*                                         .text                                          */
/* ###################################################################################### */

/* 8036F638-8036F640 0008 .text      __TRK_get_MSR                                                */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void __TRK_get_MSR() {
	nofralloc
#include "asm/TRK_MINNOW_DOLPHIN/ppc/Generic/targimpl/__TRK_get_MSR.s"
}
#pragma pop

/* 8036F640-8036F648 0008 .text      __TRK_set_MSR                                                */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void __TRK_set_MSR() {
	nofralloc
#include "asm/TRK_MINNOW_DOLPHIN/ppc/Generic/targimpl/__TRK_set_MSR.s"
}
#pragma pop

/* 8036F648-8036F684 003C .text      TRK_ppc_memcpy                                               */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void TRK_ppc_memcpy() {
	nofralloc
#include "asm/TRK_MINNOW_DOLPHIN/ppc/Generic/targimpl/TRK_ppc_memcpy.s"
}
#pragma pop

/* 8036F684-8036F818 0194 .text      TRKInterruptHandler                                          */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void TRKInterruptHandler() {
	nofralloc
#include "asm/TRK_MINNOW_DOLPHIN/ppc/Generic/targimpl/TRKInterruptHandler.s"
}
#pragma pop

/* 8036F818-8036F8B4 009C .text      TRKExceptionHandler                                          */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void TRKExceptionHandler() {
	nofralloc
#include "asm/TRK_MINNOW_DOLPHIN/ppc/Generic/targimpl/TRKExceptionHandler.s"
}
#pragma pop

/* 8036F8B4-8036F978 00C4 .text      TRKSwapAndGo                                                 */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void TRKSwapAndGo() {
	nofralloc
#include "asm/TRK_MINNOW_DOLPHIN/ppc/Generic/targimpl/TRKSwapAndGo.s"
}
#pragma pop

/* 8036F978-8036F9CC 0054 .text      TRKInterruptHandlerEnableInterrupts                          */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void TRKInterruptHandlerEnableInterrupts() {
	nofralloc
#include "asm/TRK_MINNOW_DOLPHIN/ppc/Generic/targimpl/TRKInterruptHandlerEnableInterrupts.s"
}
#pragma pop

/* 8036F9CC-8036F9F0 0024 .text      ReadFPSCR                                                    */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void ReadFPSCR() {
	nofralloc
#include "asm/TRK_MINNOW_DOLPHIN/ppc/Generic/targimpl/ReadFPSCR.s"
}
#pragma pop

/* 8036F9F0-8036FA14 0024 .text      WriteFPSCR                                                   */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void WriteFPSCR() {
	nofralloc
#include "asm/TRK_MINNOW_DOLPHIN/ppc/Generic/targimpl/WriteFPSCR.s"
}
#pragma pop

/* 8036FA14-8036FAD8 00C4 .text      TRKTargetAccessARAM                                          */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void TRKTargetAccessARAM() {
	nofralloc
#include "asm/TRK_MINNOW_DOLPHIN/ppc/Generic/targimpl/TRKTargetAccessARAM.s"
}
#pragma pop

/* 8036FAD8-8036FAE8 0010 .text      TRKTargetSetInputPendingPtr                                  */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void TRKTargetSetInputPendingPtr() {
	nofralloc
#include "asm/TRK_MINNOW_DOLPHIN/ppc/Generic/targimpl/TRKTargetSetInputPendingPtr.s"
}
#pragma pop

/* 8036FAE8-8036FB00 0018 .text      TRKTargetStop                                                */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void TRKTargetStop() {
	nofralloc
#include "asm/TRK_MINNOW_DOLPHIN/ppc/Generic/targimpl/TRKTargetStop.s"
}
#pragma pop

/* 8036FB00-8036FB10 0010 .text      TRKTargetSetStopped                                          */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void TRKTargetSetStopped() {
	nofralloc
#include "asm/TRK_MINNOW_DOLPHIN/ppc/Generic/targimpl/TRKTargetSetStopped.s"
}
#pragma pop

/* 8036FB10-8036FB20 0010 .text      TRKTargetStopped                                             */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void TRKTargetStopped() {
	nofralloc
#include "asm/TRK_MINNOW_DOLPHIN/ppc/Generic/targimpl/TRKTargetStopped.s"
}
#pragma pop

/* 8036FB20-8036FD20 0200 .text      TRKTargetSupportRequest                                      */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void TRKTargetSupportRequest() {
	nofralloc
#include "asm/TRK_MINNOW_DOLPHIN/ppc/Generic/targimpl/TRKTargetSupportRequest.s"
}
#pragma pop

/* 8036FD20-8036FD30 0010 .text      TRKTargetGetPC                                               */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void TRKTargetGetPC() {
	nofralloc
#include "asm/TRK_MINNOW_DOLPHIN/ppc/Generic/targimpl/TRKTargetGetPC.s"
}
#pragma pop

/* 8036FD30-8036FDE8 00B8 .text      TRKTargetStepOutOfRange                                      */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void TRKTargetStepOutOfRange() {
	nofralloc
#include "asm/TRK_MINNOW_DOLPHIN/ppc/Generic/targimpl/TRKTargetStepOutOfRange.s"
}
#pragma pop

/* 8036FDE8-8036FE94 00AC .text      TRKTargetSingleStep                                          */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void TRKTargetSingleStep() {
	nofralloc
#include "asm/TRK_MINNOW_DOLPHIN/ppc/Generic/targimpl/TRKTargetSingleStep.s"
}
#pragma pop

/* 8036FE94-8036FF18 0084 .text      TRKTargetAddExceptionInfo                                    */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void TRKTargetAddExceptionInfo() {
	nofralloc
#include "asm/TRK_MINNOW_DOLPHIN/ppc/Generic/targimpl/TRKTargetAddExceptionInfo.s"
}
#pragma pop

/* 8036FF18-8036FFA4 008C .text      TRKTargetAddStopInfo                                         */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void TRKTargetAddStopInfo() {
	nofralloc
#include "asm/TRK_MINNOW_DOLPHIN/ppc/Generic/targimpl/TRKTargetAddStopInfo.s"
}
#pragma pop

/* 8036FFA4-80370134 0190 .text      TRKTargetInterrupt                                           */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void TRKTargetInterrupt() {
	nofralloc
#include "asm/TRK_MINNOW_DOLPHIN/ppc/Generic/targimpl/TRKTargetInterrupt.s"
}
#pragma pop

/* 80370134-803701E0 00AC .text      TRKPostInterruptEvent                                        */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void TRKPostInterruptEvent() {
	nofralloc
#include "asm/TRK_MINNOW_DOLPHIN/ppc/Generic/targimpl/TRKPostInterruptEvent.s"
}
#pragma pop

/* 803701E0-80370618 0438 .text      TRKTargetAccessExtended2                                     */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void TRKTargetAccessExtended2() {
	nofralloc
#include "asm/TRK_MINNOW_DOLPHIN/ppc/Generic/targimpl/TRKTargetAccessExtended2.s"
}
#pragma pop

/* 80370618-80370788 0170 .text      TRKTargetAccessExtended1                                     */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void TRKTargetAccessExtended1() {
	nofralloc
#include "asm/TRK_MINNOW_DOLPHIN/ppc/Generic/targimpl/TRKTargetAccessExtended1.s"
}
#pragma pop

/* 80370788-80370C94 050C .text      TRKTargetAccessFP                                            */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void TRKTargetAccessFP() {
	nofralloc
#include "asm/TRK_MINNOW_DOLPHIN/ppc/Generic/targimpl/TRKTargetAccessFP.s"
}
#pragma pop

/* 80370C94-80370D88 00F4 .text      TRKTargetAccessDefault                                       */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void TRKTargetAccessDefault() {
	nofralloc
#include "asm/TRK_MINNOW_DOLPHIN/ppc/Generic/targimpl/TRKTargetAccessDefault.s"
}
#pragma pop

/* 80370D88-80370DD4 004C .text      TRKTargetReadInstruction                                     */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void TRKTargetReadInstruction() {
	nofralloc
#include "asm/TRK_MINNOW_DOLPHIN/ppc/Generic/targimpl/TRKTargetReadInstruction.s"
}
#pragma pop

/* 80370DD4-80370F20 014C .text      TRKTargetAccessMemory                                        */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void TRKTargetAccessMemory() {
	nofralloc
#include "asm/TRK_MINNOW_DOLPHIN/ppc/Generic/targimpl/TRKTargetAccessMemory.s"
}
#pragma pop

/* 80370F20-803711C4 02A4 .text      TRKValidMemory32                                             */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void TRKValidMemory32() {
	nofralloc
#include "asm/TRK_MINNOW_DOLPHIN/ppc/Generic/targimpl/TRKValidMemory32.s"
}
#pragma pop


