// 
// Generated By: dol2asm
// Translation Unit: Z2AudioArcLoader
// 

#include "dol2asm.h"
#include "dolphin/types.h"
#include "Z2AudioLib/Z2AudioArcLoader.h"

// 
// Types:
// 

struct JAUSection {
};

struct Z2AudioArcLoader {
	/* 802A9A34 */ Z2AudioArcLoader(JAUSection*);
	/* 802A9A70 */ void readCommandMore(u32);
	/* 802A9AC8 */ void readBFCA(void const*);
	/* 802A9B54 */ void readBSTN(void const*, u32);
	/* 802A9B58 */ ~Z2AudioArcLoader();
};

struct JAUAudioArcInterpreter {
	/* 802A4260 */ ~JAUAudioArcInterpreter();
};

struct JAUAudioArcLoader {
	/* 802A4740 */ JAUAudioArcLoader(JAUSection*);
	/* 802A47AC */ void readWS(u32, void const*, u32);
	/* 802A4804 */ void readBNK(u32, void const*);
	/* 802A4834 */ void readBSC(void const*, u32);
	/* 802A4858 */ void readBST(void const*, u32);
	/* 802A48A8 */ void readBMS(u32, void const*, u32);
	/* 802A48D4 */ void readBMS_fromArchive(u32);
	/* 802A4900 */ void newVoiceBank(u32, u32);
	/* 802A4930 */ void newDynamicSeqBlock(u32);
	/* 802A4968 */ void readBSFT(void const*);
	/* 802A4990 */ void beginBNKList(u32, u32);
	/* 802A49B4 */ void endBNKList();
	/* 802A49D8 */ void readMaxSeCategory(int, int, int);
};

struct JAUSectionHeap {
	/* 802A6094 */ void getOpenSection();
};

struct JKRHeap {
};

struct JKRArchive {
	struct EMountDirection {
	};

	/* 802D5840 */ void mount(void*, JKRHeap*, JKRArchive::EMountDirection);
};

struct Z2FxLineMgr {
	/* 802BA7FC */ void initDataArc(JKRArchive*, JKRHeap*);
};

// 
// Forward References:
// 


extern "C" void __ct__16Z2AudioArcLoaderFP10JAUSection(); // 1
extern "C" void readCommandMore__16Z2AudioArcLoaderFUl(); // 1
extern "C" void readBFCA__16Z2AudioArcLoaderFPCv(); // 1
extern "C" void readBSTN__16Z2AudioArcLoaderFPCvUl(); // 1
extern "C" void __dt__16Z2AudioArcLoaderFv(); // 1
extern "C" extern void* __vt__16Z2AudioArcLoader[17 + 1 /* padding */];

// 
// External References:
// 

void operator delete(void*); // 2

extern "C" void __dt__22JAUAudioArcInterpreterFv(); // 1
extern "C" void __ct__17JAUAudioArcLoaderFP10JAUSection(); // 1
extern "C" void readWS__17JAUAudioArcLoaderFUlPCvUl(); // 1
extern "C" void readBNK__17JAUAudioArcLoaderFUlPCv(); // 1
extern "C" void readBSC__17JAUAudioArcLoaderFPCvUl(); // 1
extern "C" void readBST__17JAUAudioArcLoaderFPCvUl(); // 1
extern "C" void readBMS__17JAUAudioArcLoaderFUlPCvUl(); // 1
extern "C" void readBMS_fromArchive__17JAUAudioArcLoaderFUl(); // 1
extern "C" void newVoiceBank__17JAUAudioArcLoaderFUlUl(); // 1
extern "C" void newDynamicSeqBlock__17JAUAudioArcLoaderFUl(); // 1
extern "C" void readBSFT__17JAUAudioArcLoaderFPCv(); // 1
extern "C" void beginBNKList__17JAUAudioArcLoaderFUlUl(); // 1
extern "C" void endBNKList__17JAUAudioArcLoaderFv(); // 1
extern "C" void readMaxSeCategory__17JAUAudioArcLoaderFiii(); // 1
extern "C" void getOpenSection__14JAUSectionHeapFv(); // 1
extern "C" void initDataArc__11Z2FxLineMgrFP10JKRArchiveP7JKRHeap(); // 1
extern "C" void __dl__FPv(); // 1
extern "C" void mount__10JKRArchiveFPvP7JKRHeapQ210JKRArchive15EMountDirection(); // 1
extern "C" void _savegpr_29(); // 1
extern "C" void _restgpr_29(); // 1
extern "C" extern void* __vt__17JAUAudioArcLoader[17 + 1 /* padding */];
extern "C" extern u8 data_80450B40[4];
extern "C" extern u8 data_80450CC0[4 + 4 /* padding */];
extern "C" extern u8 sCurrentHeap__7JKRHeap[4];

// 
// Declarations:
// 

/* ############################################################################################## */
/* 803C9CD0-803C9D18 0044+04 r=3 e=1 z=0  None .data      __vt__16Z2AudioArcLoader                                     */
SECTION_DATA void* __vt__16Z2AudioArcLoader[17 + 1 /* padding */] = {
	/* 0    */ (void*)NULL /* RTTI */,
	/* 1    */ (void*)NULL,
	/* 2    */ (void*)__dt__16Z2AudioArcLoaderFv,
	/* 3    */ (void*)readWS__17JAUAudioArcLoaderFUlPCvUl,
	/* 4    */ (void*)readBNK__17JAUAudioArcLoaderFUlPCv,
	/* 5    */ (void*)readBSC__17JAUAudioArcLoaderFPCvUl,
	/* 6    */ (void*)readBST__17JAUAudioArcLoaderFPCvUl,
	/* 7    */ (void*)readBSTN__16Z2AudioArcLoaderFPCvUl,
	/* 8    */ (void*)readBMS__17JAUAudioArcLoaderFUlPCvUl,
	/* 9    */ (void*)readBMS_fromArchive__17JAUAudioArcLoaderFUl,
	/* 10   */ (void*)newVoiceBank__17JAUAudioArcLoaderFUlUl,
	/* 11   */ (void*)newDynamicSeqBlock__17JAUAudioArcLoaderFUl,
	/* 12   */ (void*)readBSFT__17JAUAudioArcLoaderFPCv,
	/* 13   */ (void*)readMaxSeCategory__17JAUAudioArcLoaderFiii,
	/* 14   */ (void*)beginBNKList__17JAUAudioArcLoaderFUlUl,
	/* 15   */ (void*)endBNKList__17JAUAudioArcLoaderFv,
	/* 16   */ (void*)readCommandMore__16Z2AudioArcLoaderFUl,
	/* padding */
	NULL,
};

/* 802A9A34-802A9A70 003C+00 r=1 e=1 z=0  None .text      __ct__16Z2AudioArcLoaderFP10JAUSection                       */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm Z2AudioArcLoader::Z2AudioArcLoader(JAUSection* param_0) {
	nofralloc
#include "asm/Z2AudioLib/Z2AudioArcLoader/__ct__16Z2AudioArcLoaderFP10JAUSection.s"
}
#pragma pop


/* 802A9A70-802A9AC8 0058+00 r=1 e=0 z=0  None .text      readCommandMore__16Z2AudioArcLoaderFUl                       */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void Z2AudioArcLoader::readCommandMore(u32 param_0) {
	nofralloc
#include "asm/Z2AudioLib/Z2AudioArcLoader/readCommandMore__16Z2AudioArcLoaderFUl.s"
}
#pragma pop


/* 802A9AC8-802A9B54 008C+00 r=1 e=0 z=0  None .text      readBFCA__16Z2AudioArcLoaderFPCv                             */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void Z2AudioArcLoader::readBFCA(void const* param_0) {
	nofralloc
#include "asm/Z2AudioLib/Z2AudioArcLoader/readBFCA__16Z2AudioArcLoaderFPCv.s"
}
#pragma pop


/* 802A9B54-802A9B58 0004+00 r=1 e=0 z=0  None .text      readBSTN__16Z2AudioArcLoaderFPCvUl                           */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void Z2AudioArcLoader::readBSTN(void const* param_0, u32 param_1) {
	nofralloc
#include "asm/Z2AudioLib/Z2AudioArcLoader/readBSTN__16Z2AudioArcLoaderFPCvUl.s"
}
#pragma pop


/* 802A9B58-802A9BC8 0070+00 r=1 e=0 z=0  None .text      __dt__16Z2AudioArcLoaderFv                                   */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm Z2AudioArcLoader::~Z2AudioArcLoader() {
	nofralloc
#include "asm/Z2AudioLib/Z2AudioArcLoader/__dt__16Z2AudioArcLoaderFv.s"
}
#pragma pop


