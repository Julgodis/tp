// 
// Generated By: dol2asm
// Translation Unit: Z2SoundObjMgr
// 

#include "dol2asm.h"
#include "dolphin/types.h"
#include "Z2AudioLib/Z2SoundObjMgr.h"

// 
// Types:
// 

struct Z2CreatureEnemy {
};

template <typename A0>
struct JSULink { };
/* JSULink<Z2CreatureEnemy> */
struct JSULink__template2 {
};

struct Z2SoundObjMgr {
	/* 802BF920 */ Z2SoundObjMgr();
	/* 802BF980 */ void setForceBattleArea(bool, u16, u16, u16);
	/* 802BF994 */ void searchEnemy();
	/* 802BFFEC */ void setGhostEnemyState(u8);
	/* 802C0074 */ void getEnemyID(char const*, JSULink<Z2CreatureEnemy>*);
	/* 802C0100 */ void setBattleInit();
	/* 802C0120 */ void checkBattleFinish();
	/* 802C013C */ void deleteEnemyAll();
	/* 802C0190 */ void removeEnemy(JSULink<Z2CreatureEnemy>*);
	/* 802C01E4 */ void isTwilightBattle();
};

struct Z2Calc {
	struct CurveSign {
	};

	/* 802A96F4 */ void getParamByExp(f32, f32, f32, f32, f32, f32, Z2Calc::CurveSign);
};

struct Z2SeqMgr {
	/* 802AFF8C */ void changeBgmStatus(s32);
	/* 802B1DF4 */ void changeSubBgmStatus(s32);
	/* 802B421C */ void setBattleSearched(bool);
	/* 802B43E0 */ void setBattleGhostMute(bool);
	/* 802B4498 */ void setBattleDistState(u8);
	/* 802B5204 */ void stopBattleBgm(u8, u8);
};

struct JSUPtrLink {
};

struct JSUPtrList {
	/* 802DBF14 */ void initiate();
	/* 802DBF4C */ void append(JSUPtrLink*);
	/* 802DC15C */ void remove(JSUPtrLink*);
};

// 
// Forward References:
// 


extern "C" void __ct__13Z2SoundObjMgrFv(); // 1
extern "C" void setForceBattleArea__13Z2SoundObjMgrFbUsUsUs(); // 1
extern "C" void searchEnemy__13Z2SoundObjMgrFv(); // 1
extern "C" void setGhostEnemyState__13Z2SoundObjMgrFUc(); // 1
extern "C" void func_802C0074(); // 1
extern "C" void setBattleInit__13Z2SoundObjMgrFv(); // 1
extern "C" void checkBattleFinish__13Z2SoundObjMgrFv(); // 1
extern "C" void deleteEnemyAll__13Z2SoundObjMgrFv(); // 1
extern "C" void func_802C0190(); // 1
extern "C" void isTwilightBattle__13Z2SoundObjMgrFv(); // 1
extern "C" void __sinit_Z2SoundObjMgr_cpp(); // 1

// 
// External References:
// 


extern "C" void getParamByExp__6Z2CalcFffffffQ26Z2Calc9CurveSign(); // 1
extern "C" void changeBgmStatus__8Z2SeqMgrFl(); // 1
extern "C" void changeSubBgmStatus__8Z2SeqMgrFl(); // 1
extern "C" void setBattleSearched__8Z2SeqMgrFb(); // 1
extern "C" void setBattleGhostMute__8Z2SeqMgrFb(); // 1
extern "C" void setBattleDistState__8Z2SeqMgrFUc(); // 1
extern "C" void stopBattleBgm__8Z2SeqMgrFUcUc(); // 1
extern "C" void initiate__10JSUPtrListFv(); // 1
extern "C" void append__10JSUPtrListFP10JSUPtrLink(); // 1
extern "C" void remove__10JSUPtrListFP10JSUPtrLink(); // 1
extern "C" void PSVECSubtract(); // 1
extern "C" void PSVECMag(); // 1
extern "C" void _savegpr_23(); // 1
extern "C" void _savegpr_27(); // 1
extern "C" void _restgpr_23(); // 1
extern "C" void _restgpr_27(); // 1
extern "C" void strcmp(); // 1
extern "C" extern u8 data_80450B48[4];
extern "C" extern u8 data_80450B80[4];
extern "C" extern u8 data_80450B84[4];
extern "C" extern u8 mLinkPtr__14Z2CreatureLink[4 + 4 /* padding */];

// 
// Declarations:
// 

/* 802BF920-802BF980 0060+00 r=1 e=1 z=0  None .text      __ct__13Z2SoundObjMgrFv                                      */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm Z2SoundObjMgr::Z2SoundObjMgr() {
	nofralloc
#include "asm/Z2AudioLib/Z2SoundObjMgr/__ct__13Z2SoundObjMgrFv.s"
}
#pragma pop


/* 802BF980-802BF994 0014+00 r=7 e=3 z=3  None .text      setForceBattleArea__13Z2SoundObjMgrFbUsUsUs                  */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void Z2SoundObjMgr::setForceBattleArea(bool param_0, u16 param_1, u16 param_2, u16 param_3) {
	nofralloc
#include "asm/Z2AudioLib/Z2SoundObjMgr/setForceBattleArea__13Z2SoundObjMgrFbUsUsUs.s"
}
#pragma pop


/* ############################################################################################## */
/* 8039C240-8039C250 000C+04 r=1 e=0 z=0  None .rodata    @3380                                                        */
SECTION_RODATA static u8 const lit_3380[12 + 4 /* padding */] = {
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
	/* padding */
	0x00, 0x00, 0x00, 0x00,
};

/* 803CAD70-803CB170 0400+00 r=3 e=0 z=0  None .data      mEnemyInfo                                                   */
SECTION_DATA static u8 Z2SoundObjMgr__mEnemyInfo[1024] = {
	0x44, 0x75, 0x6D, 0x6D, 0x79, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
	0x45, 0x5F, 0x73, 0x31, 0x00, 0x00, 0x00, 0x00, 0x01, 0x00, 0x02, 0xBC, 0x04, 0xB0, 0x07, 0xD0,
	0x45, 0x5F, 0x79, 0x6B, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
	0x45, 0x5F, 0x79, 0x72, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
	0x45, 0x5F, 0x79, 0x67, 0x00, 0x00, 0x00, 0x00, 0x01, 0x00, 0x01, 0x2C, 0x01, 0xF4, 0x02, 0xBC,
	0x45, 0x5F, 0x79, 0x63, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
	0x45, 0x5F, 0x79, 0x64, 0x00, 0x00, 0x00, 0x00, 0x01, 0x00, 0x01, 0xF4, 0x03, 0x84, 0x05, 0xDC,
	0x45, 0x5F, 0x72, 0x64, 0x79, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
	0x45, 0x5F, 0x79, 0x6D, 0x62, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x0A, 0x00, 0x14, 0x00, 0x1E,
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
	0x45, 0x5F, 0x77, 0x62, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
	0x45, 0x5F, 0x72, 0x64, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
	0x45, 0x5F, 0x64, 0x6E, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
	0x45, 0x5F, 0x6B, 0x72, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
	0x45, 0x5F, 0x73, 0x74, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
	0x45, 0x5F, 0x74, 0x6B, 0x00, 0x00, 0x00, 0x00, 0x01, 0x00, 0x02, 0xBC, 0x05, 0xDC, 0x09, 0xC4,
	0x45, 0x5F, 0x74, 0x6B, 0x32, 0x00, 0x00, 0x00, 0x01, 0x00, 0x02, 0xBC, 0x05, 0xDC, 0x09, 0xC4,
	0x45, 0x5F, 0x63, 0x72, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
	0x45, 0x5F, 0x64, 0x66, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
	0x45, 0x5F, 0x66, 0x73, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
	0x45, 0x5F, 0x53, 0x42, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
	0x45, 0x5F, 0x50, 0x4D, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
	0x45, 0x5F, 0x64, 0x62, 0x00, 0x00, 0x00, 0x00, 0x01, 0x00, 0x01, 0xF4, 0x03, 0x84, 0x07, 0x08,
	0x45, 0x5F, 0x6B, 0x67, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
	0x45, 0x5F, 0x73, 0x68, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
	0x45, 0x5F, 0x73, 0x66, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
	0x45, 0x5F, 0x62, 0x73, 0x00, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0xC8, 0x01, 0x90, 0x02, 0x58,
	0x45, 0x5F, 0x53, 0x4D, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
	0x45, 0x5F, 0x62, 0x61, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
	0x45, 0x5F, 0x62, 0x75, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
	0x45, 0x5F, 0x48, 0x4D, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
	0x45, 0x5F, 0x67, 0x65, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
	0x45, 0x5F, 0x68, 0x7A, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x01, 0xF4, 0x03, 0x20, 0x05, 0x14,
	0x45, 0x5F, 0x77, 0x73, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
	0x45, 0x5F, 0x6F, 0x63, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
	0x45, 0x5F, 0x66, 0x7A, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
	0x45, 0x5F, 0x66, 0x62, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
	0x45, 0x5F, 0x62, 0x67, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
	0x45, 0x5F, 0x6D, 0x6D, 0x00, 0x00, 0x00, 0x00, 0x01, 0x00, 0x01, 0xF4, 0x03, 0x20, 0x05, 0xDC,
	0x45, 0x5F, 0x6E, 0x7A, 0x00, 0x00, 0x00, 0x00, 0x01, 0x00, 0x01, 0xF4, 0x02, 0xBC, 0x04, 0x4C,
	0x45, 0x5F, 0x70, 0x6F, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
	0x45, 0x5F, 0x72, 0x62, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
	0x45, 0x5F, 0x73, 0x67, 0x00, 0x00, 0x00, 0x00, 0x01, 0x00, 0x01, 0xF4, 0x02, 0xBC, 0x03, 0x84,
	0x45, 0x5F, 0x68, 0x62, 0x00, 0x00, 0x00, 0x00, 0x01, 0x00, 0x01, 0xF4, 0x03, 0x84, 0x05, 0xDC,
	0x45, 0x5F, 0x67, 0x62, 0x00, 0x00, 0x00, 0x00, 0x01, 0x00, 0x06, 0x40, 0x0B, 0xB8, 0x0F, 0xA0,
	0x45, 0x5F, 0x6D, 0x73, 0x00, 0x00, 0x00, 0x00, 0x01, 0x00, 0x01, 0xF4, 0x02, 0xBC, 0x04, 0x4C,
	0x45, 0x5F, 0x64, 0x64, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
	0x45, 0x5F, 0x62, 0x69, 0x00, 0x00, 0x00, 0x00, 0x01, 0x00, 0x01, 0xF4, 0x02, 0xBC, 0x03, 0x84,
	0x45, 0x5F, 0x74, 0x74, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
	0x45, 0x5F, 0x61, 0x69, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
	0x45, 0x5F, 0x64, 0x6B, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
	0x45, 0x5F, 0x77, 0x77, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
	0x45, 0x5F, 0x67, 0x69, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
	0x45, 0x5F, 0x73, 0x6D, 0x32, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
	0x45, 0x5F, 0x73, 0x77, 0x00, 0x00, 0x00, 0x00, 0x01, 0x00, 0x01, 0x90, 0x02, 0x58, 0x05, 0xDC,
	0x45, 0x5F, 0x72, 0x64, 0x62, 0x00, 0x00, 0x00, 0x01, 0x00, 0x01, 0xF4, 0x03, 0xE8, 0x05, 0xDC,
	0x45, 0x5F, 0x6B, 0x6B, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
	0x45, 0x5F, 0x68, 0x70, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
	0x45, 0x5F, 0x7A, 0x68, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
	0x45, 0x5F, 0x67, 0x6D, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
	0x42, 0x5F, 0x47, 0x47, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x03, 0xE8, 0x07, 0xD0, 0x0F, 0xA0,
	0x45, 0x5F, 0x6D, 0x66, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
	0x45, 0x5F, 0x7A, 0x6D, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
	0x42, 0x5F, 0x74, 0x6E, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
};

/* 803CB170-803CB230 00C0+00 r=1 e=0 z=0  None .data      @3704                                                        */
SECTION_DATA static void* Z2SoundObjMgr__lit_3704[48] = {
	/* 0    */ (void*)(((char*)searchEnemy__13Z2SoundObjMgrFv)+0x1E4),
	/* 1    */ (void*)(((char*)searchEnemy__13Z2SoundObjMgrFv)+0x1E4),
	/* 2    */ (void*)(((char*)searchEnemy__13Z2SoundObjMgrFv)+0x1EC),
	/* 3    */ (void*)(((char*)searchEnemy__13Z2SoundObjMgrFv)+0x208),
	/* 4    */ (void*)(((char*)searchEnemy__13Z2SoundObjMgrFv)+0x208),
	/* 5    */ (void*)(((char*)searchEnemy__13Z2SoundObjMgrFv)+0x208),
	/* 6    */ (void*)(((char*)searchEnemy__13Z2SoundObjMgrFv)+0x208),
	/* 7    */ (void*)(((char*)searchEnemy__13Z2SoundObjMgrFv)+0x1BC),
	/* 8    */ (void*)(((char*)searchEnemy__13Z2SoundObjMgrFv)+0x208),
	/* 9    */ (void*)(((char*)searchEnemy__13Z2SoundObjMgrFv)+0x208),
	/* 10   */ (void*)(((char*)searchEnemy__13Z2SoundObjMgrFv)+0x208),
	/* 11   */ (void*)(((char*)searchEnemy__13Z2SoundObjMgrFv)+0x208),
	/* 12   */ (void*)(((char*)searchEnemy__13Z2SoundObjMgrFv)+0x1EC),
	/* 13   */ (void*)(((char*)searchEnemy__13Z2SoundObjMgrFv)+0x208),
	/* 14   */ (void*)(((char*)searchEnemy__13Z2SoundObjMgrFv)+0x208),
	/* 15   */ (void*)(((char*)searchEnemy__13Z2SoundObjMgrFv)+0x208),
	/* 16   */ (void*)(((char*)searchEnemy__13Z2SoundObjMgrFv)+0x208),
	/* 17   */ (void*)(((char*)searchEnemy__13Z2SoundObjMgrFv)+0x208),
	/* 18   */ (void*)(((char*)searchEnemy__13Z2SoundObjMgrFv)+0x208),
	/* 19   */ (void*)(((char*)searchEnemy__13Z2SoundObjMgrFv)+0x208),
	/* 20   */ (void*)(((char*)searchEnemy__13Z2SoundObjMgrFv)+0x208),
	/* 21   */ (void*)(((char*)searchEnemy__13Z2SoundObjMgrFv)+0x1EC),
	/* 22   */ (void*)(((char*)searchEnemy__13Z2SoundObjMgrFv)+0x208),
	/* 23   */ (void*)(((char*)searchEnemy__13Z2SoundObjMgrFv)+0x208),
	/* 24   */ (void*)(((char*)searchEnemy__13Z2SoundObjMgrFv)+0x1EC),
	/* 25   */ (void*)(((char*)searchEnemy__13Z2SoundObjMgrFv)+0x208),
	/* 26   */ (void*)(((char*)searchEnemy__13Z2SoundObjMgrFv)+0x208),
	/* 27   */ (void*)(((char*)searchEnemy__13Z2SoundObjMgrFv)+0x208),
	/* 28   */ (void*)(((char*)searchEnemy__13Z2SoundObjMgrFv)+0x1EC),
	/* 29   */ (void*)(((char*)searchEnemy__13Z2SoundObjMgrFv)+0x1D0),
	/* 30   */ (void*)(((char*)searchEnemy__13Z2SoundObjMgrFv)+0x1D0),
	/* 31   */ (void*)(((char*)searchEnemy__13Z2SoundObjMgrFv)+0x1EC),
	/* 32   */ (void*)(((char*)searchEnemy__13Z2SoundObjMgrFv)+0x208),
	/* 33   */ (void*)(((char*)searchEnemy__13Z2SoundObjMgrFv)+0x1EC),
	/* 34   */ (void*)(((char*)searchEnemy__13Z2SoundObjMgrFv)+0x208),
	/* 35   */ (void*)(((char*)searchEnemy__13Z2SoundObjMgrFv)+0x208),
	/* 36   */ (void*)(((char*)searchEnemy__13Z2SoundObjMgrFv)+0x208),
	/* 37   */ (void*)(((char*)searchEnemy__13Z2SoundObjMgrFv)+0x208),
	/* 38   */ (void*)(((char*)searchEnemy__13Z2SoundObjMgrFv)+0x1EC),
	/* 39   */ (void*)(((char*)searchEnemy__13Z2SoundObjMgrFv)+0x208),
	/* 40   */ (void*)(((char*)searchEnemy__13Z2SoundObjMgrFv)+0x208),
	/* 41   */ (void*)(((char*)searchEnemy__13Z2SoundObjMgrFv)+0x208),
	/* 42   */ (void*)(((char*)searchEnemy__13Z2SoundObjMgrFv)+0x208),
	/* 43   */ (void*)(((char*)searchEnemy__13Z2SoundObjMgrFv)+0x1EC),
	/* 44   */ (void*)(((char*)searchEnemy__13Z2SoundObjMgrFv)+0x1A8),
	/* 45   */ (void*)(((char*)searchEnemy__13Z2SoundObjMgrFv)+0x1D8),
	/* 46   */ (void*)(((char*)searchEnemy__13Z2SoundObjMgrFv)+0x208),
	/* 47   */ (void*)(((char*)searchEnemy__13Z2SoundObjMgrFv)+0x1D0),
};

/* 80455B80-80455B84 0004+00 r=1 e=0 z=0  None .sdata2    sAreaDefault                                                 */
SECTION_SDATA2 static u32 Z2SoundObjMgr__sAreaDefault = 0x010002BC;

/* 80455B84-80455B88 0004+00 r=1 e=0 z=0  None .sdata2    None                                                         */
SECTION_SDATA2 static u32 data_80455B84 = 0x044C05DC;

/* 80455B88-80455B8C 0004+00 r=1 e=0 z=0  None .sdata2    sAreaFloating                                                */
SECTION_SDATA2 static u32 Z2SoundObjMgr__sAreaFloating = 0x000002BC;

/* 80455B8C-80455B90 0004+00 r=1 e=0 z=0  None .sdata2    None                                                         */
SECTION_SDATA2 static u32 data_80455B8C = 0x044C05DC;

/* 80455B90-80455B94 0004+00 r=1 e=0 z=0  None .sdata2    sAreaWide                                                    */
SECTION_SDATA2 static u32 Z2SoundObjMgr__sAreaWide = 0x010002BC;

/* 80455B94-80455B98 0004+00 r=1 e=0 z=0  None .sdata2    None                                                         */
SECTION_SDATA2 static u32 data_80455B94 = 0x05DC0CE4;

/* 80455B98-80455B9C 0004+00 r=1 e=0 z=0  None .sdata2    sAreaWideFloating                                            */
SECTION_SDATA2 static u32 Z2SoundObjMgr__sAreaWideFloating = 0x000002BC;

/* 80455B9C-80455BA0 0004+00 r=1 e=0 z=0  None .sdata2    None                                                         */
SECTION_SDATA2 static u32 data_80455B9C = 0x05DC0CE4;

/* 80455BA0-80455BA4 0004+00 r=1 e=0 z=0  None .sdata2    sAreaSmall                                                   */
SECTION_SDATA2 static u32 Z2SoundObjMgr__sAreaSmall = 0x0100012C;

/* 80455BA4-80455BA8 0004+00 r=1 e=0 z=0  None .sdata2    None                                                         */
SECTION_SDATA2 static u32 data_80455BA4 = 0x02BC03E8;

/* 80455BA8-80455BAC 0004+00 r=1 e=0 z=0  None .sdata2    sAreaSmallFloating                                           */
SECTION_SDATA2 static u32 Z2SoundObjMgr__sAreaSmallFloating = 0x000001F4;

/* 80455BAC-80455BB0 0004+00 r=1 e=0 z=0  None .sdata2    None                                                         */
SECTION_SDATA2 static u32 data_80455BAC = 0x032004B0;

/* 80455BB0-80455BB4 0004+00 r=1 e=0 z=0  None .sdata2    @3694                                                        */
SECTION_SDATA2 static u8 Z2SoundObjMgr__lit_3694[4] = {
	0x00, 0x00, 0x00, 0x00,
};

/* 80455BB4-80455BB8 0004+00 r=1 e=0 z=0  None .sdata2    @3695                                                        */
SECTION_SDATA2 static f32 Z2SoundObjMgr__lit_3695 = 100.0f;

/* 80455BB8-80455BBC 0004+00 r=1 e=0 z=0  None .sdata2    @3696                                                        */
SECTION_SDATA2 static f32 Z2SoundObjMgr__lit_3696 = 3.0f / 10.0f;

/* 80455BBC-80455BC0 0004+00 r=1 e=0 z=0  None .sdata2    @3697                                                        */
SECTION_SDATA2 static f32 Z2SoundObjMgr__lit_3697 = 1.0f;

/* 80455BC0-80455BC4 0004+00 r=1 e=0 z=0  None .sdata2    @3698                                                        */
SECTION_SDATA2 static f32 Z2SoundObjMgr__lit_3698 = 2.5f;

/* 80455BC4-80455BC8 0004+00 r=1 e=0 z=0  None .sdata2    @3699                                                        */
SECTION_SDATA2 static f32 lit_3699 = 5000.0f;

/* 80455BC8-80455BCC 0004+00 r=1 e=0 z=0  None .sdata2    @3700                                                        */
SECTION_SDATA2 static f32 lit_3700 = 2.0f;

/* 80455BCC-80455BD0 0004+00 r=1 e=0 z=0  None .sdata2    @3701                                                        */
SECTION_SDATA2 static f32 lit_3701 = 4.0f;

/* 80455BD0-80455BD8 0008+00 r=1 e=0 z=0  None .sdata2    @3703                                                        */
SECTION_SDATA2 static f64 Z2SoundObjMgr__lit_3703 = 4503599627370496.0 /* cast u32 to float */;

/* 802BF994-802BFFEC 0658+00 r=2 e=1 z=0  None .text      searchEnemy__13Z2SoundObjMgrFv                               */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void Z2SoundObjMgr::searchEnemy() {
	nofralloc
#include "asm/Z2AudioLib/Z2SoundObjMgr/searchEnemy__13Z2SoundObjMgrFv.s"
}
#pragma pop


/* 802BFFEC-802C0074 0088+00 r=3 e=2 z=0  None .text      setGhostEnemyState__13Z2SoundObjMgrFUc                       */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void Z2SoundObjMgr::setGhostEnemyState(u8 param_0) {
	nofralloc
#include "asm/Z2AudioLib/Z2SoundObjMgr/setGhostEnemyState__13Z2SoundObjMgrFUc.s"
}
#pragma pop


/* 802C0074-802C0100 008C+00 r=1 e=1 z=0  None .text      getEnemyID__13Z2SoundObjMgrFPCcP26JSULink<15Z2CreatureEnemy> */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void Z2SoundObjMgr::getEnemyID(char const* param_0, JSULink<Z2CreatureEnemy>* param_1) {
	nofralloc
#include "asm/Z2AudioLib/Z2SoundObjMgr/func_802C0074.s"
}
#pragma pop


/* 802C0100-802C0120 0020+00 r=2 e=1 z=0  None .text      setBattleInit__13Z2SoundObjMgrFv                             */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void Z2SoundObjMgr::setBattleInit() {
	nofralloc
#include "asm/Z2AudioLib/Z2SoundObjMgr/setBattleInit__13Z2SoundObjMgrFv.s"
}
#pragma pop


/* 802C0120-802C013C 001C+00 r=1 e=1 z=0  None .text      checkBattleFinish__13Z2SoundObjMgrFv                         */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void Z2SoundObjMgr::checkBattleFinish() {
	nofralloc
#include "asm/Z2AudioLib/Z2SoundObjMgr/checkBattleFinish__13Z2SoundObjMgrFv.s"
}
#pragma pop


/* 802C013C-802C0190 0054+00 r=1 e=1 z=0  None .text      deleteEnemyAll__13Z2SoundObjMgrFv                            */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void Z2SoundObjMgr::deleteEnemyAll() {
	nofralloc
#include "asm/Z2AudioLib/Z2SoundObjMgr/deleteEnemyAll__13Z2SoundObjMgrFv.s"
}
#pragma pop


/* 802C0190-802C01E4 0054+00 r=2 e=2 z=0  None .text      removeEnemy__13Z2SoundObjMgrFP26JSULink<15Z2CreatureEnemy>   */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void Z2SoundObjMgr::removeEnemy(JSULink<Z2CreatureEnemy>* param_0) {
	nofralloc
#include "asm/Z2AudioLib/Z2SoundObjMgr/func_802C0190.s"
}
#pragma pop


/* 802C01E4-802C01EC 0008+00 r=4 e=4 z=0  None .text      isTwilightBattle__13Z2SoundObjMgrFv                          */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void Z2SoundObjMgr::isTwilightBattle() {
	nofralloc
#include "asm/Z2AudioLib/Z2SoundObjMgr/isTwilightBattle__13Z2SoundObjMgrFv.s"
}
#pragma pop


/* 802C01EC-802C03C8 01DC+00 r=1 e=1 z=0  None .text      __sinit_Z2SoundObjMgr_cpp                                    */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
extern "C" asm void __sinit_Z2SoundObjMgr_cpp() {
	nofralloc
#include "asm/Z2AudioLib/Z2SoundObjMgr/__sinit_Z2SoundObjMgr_cpp.s"
}
#pragma pop


