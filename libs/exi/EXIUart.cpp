// 
// Generated By: dol2asm
// 

#include "dolphin/types.h"

// 
// Forward References:
// 

extern "C" extern void OSGetConsoleType();
extern "C" extern void EXIImm();
extern "C" extern void EXISync();
extern "C" extern void EXIAttach();
extern "C" extern void EXIDetach();
extern "C" extern void EXISelect();
extern "C" extern void EXIDeselect();
extern "C" extern void EXILock();
extern "C" extern void EXIUnlock();
extern "C" extern void EXIGetID();
extern "C" extern void ProbeBarnacle();
extern "C" extern void __OSEnableBarnacle();
extern "C" extern void InitializeUART();
extern "C" extern void WriteUARTN();
SECTION_SBSS extern u8 Chan[4];
SECTION_SBSS extern u8 Dev[4];
SECTION_SBSS extern u8 Enabled[4];
SECTION_SBSS extern u8 BarnacleEnabled[4];

// 
// Functions:
// 

/* 803445E8-80344774 018C .text      ProbeBarnacle                                                */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
extern "C" asm void ProbeBarnacle() {
	nofralloc
#include "asm/exi/EXIUart/ProbeBarnacle.s"
}
#pragma pop


/* ###################################################################################### */
/* 804516E0-804516E4 0004 .sbss      Chan                                                         */
u8 Chan[4];

/* 804516E4-804516E8 0004 .sbss      Dev                                                          */
u8 Dev[4];

/* 804516E8-804516EC 0004 .sbss      Enabled                                                      */
u8 Enabled[4];

/* 804516EC-804516F0 0004 .sbss      BarnacleEnabled                                              */
u8 BarnacleEnabled[4];

/* 80344774-80344930 01BC .text      __OSEnableBarnacle                                           */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
extern "C" asm void __OSEnableBarnacle() {
	nofralloc
#include "asm/exi/EXIUart/__OSEnableBarnacle.s"
}
#pragma pop


/* 80344930-803449A0 0070 .text      InitializeUART                                               */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
extern "C" asm void InitializeUART() {
	nofralloc
#include "asm/exi/EXIUart/InitializeUART.s"
}
#pragma pop


/* 803449A0-80344BA0 0200 .text      WriteUARTN                                                   */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
extern "C" asm void WriteUARTN() {
	nofralloc
#include "asm/exi/EXIUart/WriteUARTN.s"
}
#pragma pop


