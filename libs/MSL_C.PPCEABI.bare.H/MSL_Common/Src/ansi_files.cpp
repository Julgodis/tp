// 
// Generated By: dol2asm
// 

#include "dolphin/types.h"

// 
// Forward References:
// 

extern "C" extern void free();
extern "C" extern void __flush_all();
extern "C" extern void __close_all();
extern "C" extern void __end_critical_region();
extern "C" extern void __begin_critical_region();
extern "C" extern void fflush();
extern "C" extern void fclose();
extern "C" extern void __close_console();
extern "C" extern void __write_console();
extern "C" extern void __read_console();
SECTION_DATA extern void* __files[80];
SECTION_BSS extern u8 stderr_buff[256];
SECTION_BSS extern u8 stdout_buff[256];
SECTION_BSS extern u8 stdin_buff[256];

// 
// Functions:
// 

/* ###################################################################################### */
/* 803D29B0-803D2AF0 0140 .data      __files                                                      */
void* __files[80] = {
	NULL,
	(void*)0x0A800000,
	NULL,
	NULL,
	NULL,
	NULL,
	NULL,
	(void*)&stdin_buff,
	(void*)0x00000100,
	(void*)&stdin_buff,
	NULL,
	NULL,
	NULL,
	NULL,
	NULL,
	(void*)__read_console,
	(void*)__write_console,
	(void*)__close_console,
	NULL,
	(void*)(((char*)&__files)+0x50),
	(void*)0x00000001,
	(void*)0x12800000,
	NULL,
	NULL,
	NULL,
	NULL,
	NULL,
	(void*)&stdout_buff,
	(void*)0x00000100,
	(void*)&stdout_buff,
	NULL,
	NULL,
	NULL,
	NULL,
	NULL,
	(void*)__read_console,
	(void*)__write_console,
	(void*)__close_console,
	NULL,
	(void*)(((char*)&__files)+0xA0),
	(void*)0x00000002,
	(void*)0x10800000,
	NULL,
	NULL,
	NULL,
	NULL,
	NULL,
	(void*)&stderr_buff,
	(void*)0x00000100,
	(void*)&stderr_buff,
	NULL,
	NULL,
	NULL,
	NULL,
	NULL,
	(void*)__read_console,
	(void*)__write_console,
	(void*)__close_console,
	NULL,
	(void*)(((char*)&__files)+0xF0),
	NULL,
	NULL,
	NULL,
	NULL,
	NULL,
	NULL,
	NULL,
	NULL,
	NULL,
	NULL,
	NULL,
	NULL,
	NULL,
	NULL,
	NULL,
	NULL,
	NULL,
	NULL,
	NULL,
	NULL,
};

/* 8036300C-8036307C 0070 .text      __flush_all                                                  */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
extern "C" asm void __flush_all() {
	nofralloc
#include "asm/MSL_C.PPCEABI.bare.H/MSL_Common/Src/ansi_files/__flush_all.s"
}
#pragma pop


/* 8036307C-80363124 00A8 .text      __close_all                                                  */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
extern "C" asm void __close_all() {
	nofralloc
#include "asm/MSL_C.PPCEABI.bare.H/MSL_Common/Src/ansi_files/__close_all.s"
}
#pragma pop


/* 8044D578-8044D678 0100 .bss       stderr_buff                                                  */
u8 stderr_buff[256];

/* 8044D678-8044D778 0100 .bss       stdout_buff                                                  */
u8 stdout_buff[256];

/* 8044D778-8044D878 0100 .bss       stdin_buff                                                   */
u8 stdin_buff[256];

