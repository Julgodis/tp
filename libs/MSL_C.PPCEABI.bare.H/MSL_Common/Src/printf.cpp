// 
// Generated By: dol2asm
// Translation Unit: MSL_Common/Src/printf
// 

#include "dol2asm.h"
#include "dolphin/types.h"
#include "MSL_C.PPCEABI.bare.H/MSL_Common/Src/printf.h"

// 
// Forward References:
// 


extern "C" void sprintf(); // 1
extern "C" void snprintf(); // 1
extern "C" void vsnprintf(); // 1
extern "C" void vprintf(); // 1
extern "C" void fprintf(); // 1
extern "C" void printf(); // 1
extern "C" static void __StringWrite(); // 1
extern "C" static void __FileWrite(); // 1
extern "C" static void __pformatter(); // 1
extern "C" static void float2str(); // 1
extern "C" static void round_decimal(); // 1
extern "C" static void double2hex(); // 1
extern "C" static void longlong2str(); // 1
extern "C" static void long2str(); // 1
extern "C" static void parse_format(); // 1
extern "C" extern char const* const MSL_Common_Src_printf__stringBase0;

// 
// External References:
// 


SECTION_INIT void memcpy(); // 1
extern "C" void __va_arg(); // 1
extern "C" void __div2u(); // 1
extern "C" void __mod2u(); // 1
extern "C" void __num2dec(); // 1
extern "C" void __end_critical_region(); // 1
extern "C" void __begin_critical_region(); // 1
extern "C" void fwrite(); // 1
extern "C" void wcstombs(); // 1
extern "C" void memchr(); // 1
extern "C" void strchr(); // 1
extern "C" void strcpy(); // 1
extern "C" void strlen(); // 1
extern "C" void fwide(); // 1
extern "C" extern void* __files[80];
extern "C" extern u8 __ctype_map[256];

// 
// Declarations:
// 

/* 803664DC-803665BC 00E0+00 s=0 e=32 z=0  None .text      sprintf                                                      */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
extern "C" asm void sprintf() {
	nofralloc
#include "asm/MSL_C.PPCEABI.bare.H/MSL_Common/Src/printf/sprintf.s"
}
#pragma pop


/* 803665BC-80366690 00D4+00 s=0 e=19 z=0  None .text      snprintf                                                     */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
extern "C" asm void snprintf() {
	nofralloc
#include "asm/MSL_C.PPCEABI.bare.H/MSL_Common/Src/printf/snprintf.s"
}
#pragma pop


/* 80366690-80366704 0074+00 s=0 e=8 z=0  None .text      vsnprintf                                                    */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
extern "C" asm void vsnprintf() {
	nofralloc
#include "asm/MSL_C.PPCEABI.bare.H/MSL_Common/Src/printf/vsnprintf.s"
}
#pragma pop


/* 80366704-8036679C 0098+00 s=0 e=2 z=0  None .text      vprintf                                                      */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
extern "C" asm void vprintf() {
	nofralloc
#include "asm/MSL_C.PPCEABI.bare.H/MSL_Common/Src/printf/vprintf.s"
}
#pragma pop


/* 8036679C-8036687C 00E0+00 s=0 e=9 z=0  None .text      fprintf                                                      */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
extern "C" asm void fprintf() {
	nofralloc
#include "asm/MSL_C.PPCEABI.bare.H/MSL_Common/Src/printf/fprintf.s"
}
#pragma pop


/* 8036687C-80366964 00E8+00 s=0 e=4 z=0  None .text      printf                                                       */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
extern "C" asm void printf() {
	nofralloc
#include "asm/MSL_C.PPCEABI.bare.H/MSL_Common/Src/printf/printf.s"
}
#pragma pop


/* 80366964-803669D0 006C+00 s=3 e=0 z=0  None .text      __StringWrite                                                */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
extern "C" asm static void __StringWrite() {
	nofralloc
#include "asm/MSL_C.PPCEABI.bare.H/MSL_Common/Src/printf/__StringWrite.s"
}
#pragma pop


/* 803669D0-80366A28 0058+00 s=3 e=0 z=0  None .text      __FileWrite                                                  */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
extern "C" asm static void __FileWrite() {
	nofralloc
#include "asm/MSL_C.PPCEABI.bare.H/MSL_Common/Src/printf/__FileWrite.s"
}
#pragma pop


/* ############################################################################################## */
/* 803A2318-803A2340 0025+03 s=3 e=0 z=0  None .rodata    @stringBase0                                                 */
#pragma push
#pragma force_active on
#pragma section ".dead"
SECTION_DEAD char const* const stringBase_803A2318 = "";
SECTION_DEAD char const* const stringBase_803A2319 = "-INF";
SECTION_DEAD char const* const stringBase_803A231E = "-inf";
SECTION_DEAD char const* const stringBase_803A2323 = "INF";
SECTION_DEAD char const* const stringBase_803A2327 = "inf";
SECTION_DEAD char const* const stringBase_803A232B = "-NAN";
SECTION_DEAD char const* const stringBase_803A2330 = "-nan";
SECTION_DEAD char const* const stringBase_803A2335 = "NAN";
SECTION_DEAD char const* const stringBase_803A2339 = "nan";
/* @stringBase0 padding */
SECTION_DEAD static char const* const pad_803A233D = "\0\0";
#pragma pop

/* 80450AD8-80450AE0 0002+06 s=1 e=0 z=0  None .sdata     @wstringBase0                                                */
SECTION_SDATA static u8 data_80450AD8[2 + 6 /* padding */] = {
	0x00, 0x00,
	/* padding */
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
};

/* 80366A28-8036719C 0774+00 s=6 e=0 z=0  None .text      __pformatter                                                 */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
extern "C" asm static void __pformatter() {
	nofralloc
#include "asm/MSL_C.PPCEABI.bare.H/MSL_Common/Src/printf/__pformatter.s"
}
#pragma pop


/* ############################################################################################## */
/* 80456670-80456678 0008+00 s=1 e=0 z=0  None .sdata2    @1089                                                        */
SECTION_SDATA2 static u8 MSL_Common_Src_printf__lit_1089[8] = {
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
};

/* 8036719C-803678B8 071C+00 s=1 e=0 z=0  None .text      float2str                                                    */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
extern "C" asm static void float2str() {
	nofralloc
#include "asm/MSL_C.PPCEABI.bare.H/MSL_Common/Src/printf/float2str.s"
}
#pragma pop


/* 803678B8-803679E4 012C+00 s=1 e=0 z=0  None .text      round_decimal                                                */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
extern "C" asm static void round_decimal() {
	nofralloc
#include "asm/MSL_C.PPCEABI.bare.H/MSL_Common/Src/printf/round_decimal.s"
}
#pragma pop


/* 803679E4-80367D1C 0338+00 s=1 e=0 z=0  None .text      double2hex                                                   */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
extern "C" asm static void double2hex() {
	nofralloc
#include "asm/MSL_C.PPCEABI.bare.H/MSL_Common/Src/printf/double2hex.s"
}
#pragma pop


/* ############################################################################################## */
/* 803D2F18-803D2F9C 0084+00 s=1 e=0 z=0  None .data      @1248                                                        */
SECTION_DATA static void* lit_1248[33] = {
	/* 0    */ (void*)(((char*)longlong2str)+0xF8),
	/* 1    */ (void*)(((char*)longlong2str)+0x108),
	/* 2    */ (void*)(((char*)longlong2str)+0x108),
	/* 3    */ (void*)(((char*)longlong2str)+0x108),
	/* 4    */ (void*)(((char*)longlong2str)+0x108),
	/* 5    */ (void*)(((char*)longlong2str)+0x108),
	/* 6    */ (void*)(((char*)longlong2str)+0x108),
	/* 7    */ (void*)(((char*)longlong2str)+0x108),
	/* 8    */ (void*)(((char*)longlong2str)+0x108),
	/* 9    */ (void*)(((char*)longlong2str)+0x108),
	/* 10   */ (void*)(((char*)longlong2str)+0x108),
	/* 11   */ (void*)(((char*)longlong2str)+0x108),
	/* 12   */ (void*)(((char*)longlong2str)+0x98),
	/* 13   */ (void*)(((char*)longlong2str)+0x108),
	/* 14   */ (void*)(((char*)longlong2str)+0x108),
	/* 15   */ (void*)(((char*)longlong2str)+0x108),
	/* 16   */ (void*)(((char*)longlong2str)+0x108),
	/* 17   */ (void*)(((char*)longlong2str)+0x98),
	/* 18   */ (void*)(((char*)longlong2str)+0x108),
	/* 19   */ (void*)(((char*)longlong2str)+0x108),
	/* 20   */ (void*)(((char*)longlong2str)+0x108),
	/* 21   */ (void*)(((char*)longlong2str)+0x108),
	/* 22   */ (void*)(((char*)longlong2str)+0x108),
	/* 23   */ (void*)(((char*)longlong2str)+0xD0),
	/* 24   */ (void*)(((char*)longlong2str)+0x108),
	/* 25   */ (void*)(((char*)longlong2str)+0x108),
	/* 26   */ (void*)(((char*)longlong2str)+0x108),
	/* 27   */ (void*)(((char*)longlong2str)+0x108),
	/* 28   */ (void*)(((char*)longlong2str)+0x108),
	/* 29   */ (void*)(((char*)longlong2str)+0xE4),
	/* 30   */ (void*)(((char*)longlong2str)+0x108),
	/* 31   */ (void*)(((char*)longlong2str)+0x108),
	/* 32   */ (void*)(((char*)longlong2str)+0xF8),
};

/* 80367D1C-80368030 0314+00 s=2 e=0 z=0  None .text      longlong2str                                                 */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
extern "C" asm static void longlong2str() {
	nofralloc
#include "asm/MSL_C.PPCEABI.bare.H/MSL_Common/Src/printf/longlong2str.s"
}
#pragma pop


/* ############################################################################################## */
/* 803D2F9C-803D3020 0084+00 s=1 e=0 z=0  None .data      @1307                                                        */
SECTION_DATA static void* lit_1307[33] = {
	/* 0    */ (void*)(((char*)long2str)+0xA8),
	/* 1    */ (void*)(((char*)long2str)+0xB4),
	/* 2    */ (void*)(((char*)long2str)+0xB4),
	/* 3    */ (void*)(((char*)long2str)+0xB4),
	/* 4    */ (void*)(((char*)long2str)+0xB4),
	/* 5    */ (void*)(((char*)long2str)+0xB4),
	/* 6    */ (void*)(((char*)long2str)+0xB4),
	/* 7    */ (void*)(((char*)long2str)+0xB4),
	/* 8    */ (void*)(((char*)long2str)+0xB4),
	/* 9    */ (void*)(((char*)long2str)+0xB4),
	/* 10   */ (void*)(((char*)long2str)+0xB4),
	/* 11   */ (void*)(((char*)long2str)+0xB4),
	/* 12   */ (void*)(((char*)long2str)+0x70),
	/* 13   */ (void*)(((char*)long2str)+0xB4),
	/* 14   */ (void*)(((char*)long2str)+0xB4),
	/* 15   */ (void*)(((char*)long2str)+0xB4),
	/* 16   */ (void*)(((char*)long2str)+0xB4),
	/* 17   */ (void*)(((char*)long2str)+0x70),
	/* 18   */ (void*)(((char*)long2str)+0xB4),
	/* 19   */ (void*)(((char*)long2str)+0xB4),
	/* 20   */ (void*)(((char*)long2str)+0xB4),
	/* 21   */ (void*)(((char*)long2str)+0xB4),
	/* 22   */ (void*)(((char*)long2str)+0xB4),
	/* 23   */ (void*)(((char*)long2str)+0x88),
	/* 24   */ (void*)(((char*)long2str)+0xB4),
	/* 25   */ (void*)(((char*)long2str)+0xB4),
	/* 26   */ (void*)(((char*)long2str)+0xB4),
	/* 27   */ (void*)(((char*)long2str)+0xB4),
	/* 28   */ (void*)(((char*)long2str)+0xB4),
	/* 29   */ (void*)(((char*)long2str)+0x98),
	/* 30   */ (void*)(((char*)long2str)+0xB4),
	/* 31   */ (void*)(((char*)long2str)+0xB4),
	/* 32   */ (void*)(((char*)long2str)+0xA8),
};

/* 80368030-80368288 0258+00 s=3 e=0 z=0  None .text      long2str                                                     */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
extern "C" asm static void long2str() {
	nofralloc
#include "asm/MSL_C.PPCEABI.bare.H/MSL_Common/Src/printf/long2str.s"
}
#pragma pop


/* ############################################################################################## */
/* 803D3020-803D3100 00E0+00 s=1 e=0 z=0  None .data      @1443                                                        */
SECTION_DATA static void* lit_1443[56] = {
	/* 0    */ (void*)(((char*)parse_format)+0x38C),
	/* 1    */ (void*)(((char*)parse_format)+0x4BC),
	/* 2    */ (void*)(((char*)parse_format)+0x4BC),
	/* 3    */ (void*)(((char*)parse_format)+0x4BC),
	/* 4    */ (void*)(((char*)parse_format)+0x3DC),
	/* 5    */ (void*)(((char*)parse_format)+0x354),
	/* 6    */ (void*)(((char*)parse_format)+0x3C8),
	/* 7    */ (void*)(((char*)parse_format)+0x4BC),
	/* 8    */ (void*)(((char*)parse_format)+0x4BC),
	/* 9    */ (void*)(((char*)parse_format)+0x4BC),
	/* 10   */ (void*)(((char*)parse_format)+0x4BC),
	/* 11   */ (void*)(((char*)parse_format)+0x4BC),
	/* 12   */ (void*)(((char*)parse_format)+0x4BC),
	/* 13   */ (void*)(((char*)parse_format)+0x4BC),
	/* 14   */ (void*)(((char*)parse_format)+0x4BC),
	/* 15   */ (void*)(((char*)parse_format)+0x4BC),
	/* 16   */ (void*)(((char*)parse_format)+0x4BC),
	/* 17   */ (void*)(((char*)parse_format)+0x4BC),
	/* 18   */ (void*)(((char*)parse_format)+0x4BC),
	/* 19   */ (void*)(((char*)parse_format)+0x4BC),
	/* 20   */ (void*)(((char*)parse_format)+0x4BC),
	/* 21   */ (void*)(((char*)parse_format)+0x4BC),
	/* 22   */ (void*)(((char*)parse_format)+0x4BC),
	/* 23   */ (void*)(((char*)parse_format)+0x30C),
	/* 24   */ (void*)(((char*)parse_format)+0x4BC),
	/* 25   */ (void*)(((char*)parse_format)+0x4BC),
	/* 26   */ (void*)(((char*)parse_format)+0x4BC),
	/* 27   */ (void*)(((char*)parse_format)+0x4BC),
	/* 28   */ (void*)(((char*)parse_format)+0x4BC),
	/* 29   */ (void*)(((char*)parse_format)+0x4BC),
	/* 30   */ (void*)(((char*)parse_format)+0x4BC),
	/* 31   */ (void*)(((char*)parse_format)+0x4BC),
	/* 32   */ (void*)(((char*)parse_format)+0x38C),
	/* 33   */ (void*)(((char*)parse_format)+0x4BC),
	/* 34   */ (void*)(((char*)parse_format)+0x440),
	/* 35   */ (void*)(((char*)parse_format)+0x30C),
	/* 36   */ (void*)(((char*)parse_format)+0x3DC),
	/* 37   */ (void*)(((char*)parse_format)+0x354),
	/* 38   */ (void*)(((char*)parse_format)+0x3C8),
	/* 39   */ (void*)(((char*)parse_format)+0x4BC),
	/* 40   */ (void*)(((char*)parse_format)+0x30C),
	/* 41   */ (void*)(((char*)parse_format)+0x4BC),
	/* 42   */ (void*)(((char*)parse_format)+0x4BC),
	/* 43   */ (void*)(((char*)parse_format)+0x4BC),
	/* 44   */ (void*)(((char*)parse_format)+0x4BC),
	/* 45   */ (void*)(((char*)parse_format)+0x4A4),
	/* 46   */ (void*)(((char*)parse_format)+0x30C),
	/* 47   */ (void*)(((char*)parse_format)+0x41C),
	/* 48   */ (void*)(((char*)parse_format)+0x4BC),
	/* 49   */ (void*)(((char*)parse_format)+0x4BC),
	/* 50   */ (void*)(((char*)parse_format)+0x478),
	/* 51   */ (void*)(((char*)parse_format)+0x4BC),
	/* 52   */ (void*)(((char*)parse_format)+0x30C),
	/* 53   */ (void*)(((char*)parse_format)+0x4BC),
	/* 54   */ (void*)(((char*)parse_format)+0x4BC),
	/* 55   */ (void*)(((char*)parse_format)+0x30C),
};

/* 803D3100-803D3148 0044+04 s=1 e=0 z=0  None .data      @1442                                                        */
SECTION_DATA static void* lit_1442[17 + 1 /* padding */] = {
	/* 0    */ (void*)(((char*)parse_format)+0xBC),
	/* 1    */ (void*)(((char*)parse_format)+0xF8),
	/* 2    */ (void*)(((char*)parse_format)+0xF8),
	/* 3    */ (void*)(((char*)parse_format)+0xD4),
	/* 4    */ (void*)(((char*)parse_format)+0xF8),
	/* 5    */ (void*)(((char*)parse_format)+0xF8),
	/* 6    */ (void*)(((char*)parse_format)+0xF8),
	/* 7    */ (void*)(((char*)parse_format)+0xF8),
	/* 8    */ (void*)(((char*)parse_format)+0xF8),
	/* 9    */ (void*)(((char*)parse_format)+0xF8),
	/* 10   */ (void*)(((char*)parse_format)+0xF8),
	/* 11   */ (void*)(((char*)parse_format)+0xB0),
	/* 12   */ (void*)(((char*)parse_format)+0xF8),
	/* 13   */ (void*)(((char*)parse_format)+0xA4),
	/* 14   */ (void*)(((char*)parse_format)+0xF8),
	/* 15   */ (void*)(((char*)parse_format)+0xF8),
	/* 16   */ (void*)(((char*)parse_format)+0xE0),
	/* padding */
	NULL,
};

/* 80368288-8036878C 0504+00 s=3 e=0 z=0  None .text      parse_format                                                 */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
extern "C" asm static void parse_format() {
	nofralloc
#include "asm/MSL_C.PPCEABI.bare.H/MSL_Common/Src/printf/parse_format.s"
}
#pragma pop


