// 
// Generated By: dol2asm
// Translation Unit: MSL_Common_Embedded/Src/ansi_fp
// 

#include "dolphin/types.h"

// 
// Forward References:
// 

extern "C" extern void __num2dec();
extern "C" extern void __num2dec_internal();
extern "C" extern void __two_exp();
extern "C" extern void __timesdec();
SECTION_RODATA extern const u8 MSL_Common_Embedded_Src_ansi_fp__stringBase0[224];
SECTION_DATA extern void*lit_1710[74];
SECTION_SDATA2 extern u8 lit_824[8];

// 
// External References:
// 

extern "C" extern void __div2u();
extern "C" extern void __mod2u();
extern "C" extern void __cvt_dbl_usll();
extern "C" extern void frexp();
extern "C" extern void ldexp();
extern "C" extern void modf();

// 
// Declarations:
// 

/* 80363124-803632C8 01A4+00 .text      __num2dec                                                    */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
ASM_FUNCTION(__num2dec) {
	nofralloc
#include "asm/MSL_C.PPCEABI.bare.H/MSL_Common_Embedded/Src/ansi_fp/__num2dec.s"
}
#pragma pop


/* ############################################################################################## */
/* 80456660-80456668 0008+00 .sdata2    @824                                                         */
u8 lit_824[8] = {
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
};

/* 803632C8-8036367C 03B4+00 .text      __num2dec_internal                                           */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
ASM_FUNCTION(__num2dec_internal) {
	nofralloc
#include "asm/MSL_C.PPCEABI.bare.H/MSL_Common_Embedded/Src/ansi_fp/__num2dec_internal.s"
}
#pragma pop


/* ############################################################################################## */
/* 803A2238-803A2318 00DD+03 .rodata    @stringBase0                                                 */
SECTION_RODATA const u8 MSL_Common_Embedded_Src_ansi_fp__stringBase0[224] = {
	0x31, 0x37, 0x39, 0x37, 0x36, 0x39, 0x33, 0x31, 0x33, 0x34, 0x38, 0x36, 0x32, 0x33, 0x31, 0x35,
	0x38, 0x30, 0x37, 0x39, 0x33, 0x37, 0x32, 0x39, 0x30, 0x31, 0x31, 0x34, 0x30, 0x35, 0x33, 0x30,
	0x33, 0x34, 0x32, 0x30, 0x00, 0x35, 0x34, 0x32, 0x31, 0x30, 0x31, 0x30, 0x38, 0x36, 0x32, 0x34,
	0x32, 0x37, 0x35, 0x32, 0x32, 0x31, 0x37, 0x30, 0x30, 0x33, 0x37, 0x32, 0x36, 0x34, 0x30, 0x30,
	0x34, 0x33, 0x34, 0x39, 0x37, 0x30, 0x38, 0x35, 0x35, 0x37, 0x31, 0x32, 0x38, 0x39, 0x30, 0x36,
	0x32, 0x35, 0x00, 0x31, 0x31, 0x31, 0x30, 0x32, 0x32, 0x33, 0x30, 0x32, 0x34, 0x36, 0x32, 0x35,
	0x31, 0x35, 0x36, 0x35, 0x34, 0x30, 0x34, 0x32, 0x33, 0x36, 0x33, 0x31, 0x36, 0x36, 0x38, 0x30,
	0x39, 0x30, 0x38, 0x32, 0x30, 0x33, 0x31, 0x32, 0x35, 0x00, 0x32, 0x33, 0x32, 0x38, 0x33, 0x30,
	0x36, 0x34, 0x33, 0x36, 0x35, 0x33, 0x38, 0x36, 0x39, 0x36, 0x32, 0x38, 0x39, 0x30, 0x36, 0x32,
	0x35, 0x00, 0x31, 0x35, 0x32, 0x35, 0x38, 0x37, 0x38, 0x39, 0x30, 0x36, 0x32, 0x35, 0x00, 0x33,
	0x39, 0x30, 0x36, 0x32, 0x35, 0x00, 0x37, 0x38, 0x31, 0x32, 0x35, 0x00, 0x31, 0x35, 0x36, 0x32,
	0x35, 0x00, 0x33, 0x31, 0x32, 0x35, 0x00, 0x36, 0x32, 0x35, 0x00, 0x31, 0x32, 0x35, 0x00, 0x32,
	0x35, 0x00, 0x35, 0x00, 0x31, 0x00, 0x32, 0x00, 0x34, 0x00, 0x38, 0x00, 0x31, 0x36, 0x00, 0x33,
	0x32, 0x00, 0x36, 0x34, 0x00, 0x31, 0x32, 0x38, 0x00, 0x32, 0x35, 0x36, 0x00,
	/* padding */
	0x00, 0x00, 0x00,
};

/* 803D2AF0-803D2C18 0124+04 .data      @1710                                                        */
void* lit_1710[74] = {
	(void*)(((char*)__two_exp)+0x40),
	(void*)(((char*)__two_exp)+0x14DC),
	(void*)(((char*)__two_exp)+0x14DC),
	(void*)(((char*)__two_exp)+0x14DC),
	(void*)(((char*)__two_exp)+0x14DC),
	(void*)(((char*)__two_exp)+0x14DC),
	(void*)(((char*)__two_exp)+0x14DC),
	(void*)(((char*)__two_exp)+0x14DC),
	(void*)(((char*)__two_exp)+0x14DC),
	(void*)(((char*)__two_exp)+0x14DC),
	(void*)(((char*)__two_exp)+0x14DC),
	(void*)(((char*)__two_exp)+0x13C),
	(void*)(((char*)__two_exp)+0x14DC),
	(void*)(((char*)__two_exp)+0x14DC),
	(void*)(((char*)__two_exp)+0x14DC),
	(void*)(((char*)__two_exp)+0x14DC),
	(void*)(((char*)__two_exp)+0x14DC),
	(void*)(((char*)__two_exp)+0x14DC),
	(void*)(((char*)__two_exp)+0x14DC),
	(void*)(((char*)__two_exp)+0x14DC),
	(void*)(((char*)__two_exp)+0x14DC),
	(void*)(((char*)__two_exp)+0x14DC),
	(void*)(((char*)__two_exp)+0x14DC),
	(void*)(((char*)__two_exp)+0x14DC),
	(void*)(((char*)__two_exp)+0x14DC),
	(void*)(((char*)__two_exp)+0x14DC),
	(void*)(((char*)__two_exp)+0x14DC),
	(void*)(((char*)__two_exp)+0x14DC),
	(void*)(((char*)__two_exp)+0x14DC),
	(void*)(((char*)__two_exp)+0x14DC),
	(void*)(((char*)__two_exp)+0x14DC),
	(void*)(((char*)__two_exp)+0x14DC),
	(void*)(((char*)__two_exp)+0x238),
	(void*)(((char*)__two_exp)+0x14DC),
	(void*)(((char*)__two_exp)+0x14DC),
	(void*)(((char*)__two_exp)+0x14DC),
	(void*)(((char*)__two_exp)+0x14DC),
	(void*)(((char*)__two_exp)+0x14DC),
	(void*)(((char*)__two_exp)+0x14DC),
	(void*)(((char*)__two_exp)+0x14DC),
	(void*)(((char*)__two_exp)+0x14DC),
	(void*)(((char*)__two_exp)+0x14DC),
	(void*)(((char*)__two_exp)+0x14DC),
	(void*)(((char*)__two_exp)+0x14DC),
	(void*)(((char*)__two_exp)+0x14DC),
	(void*)(((char*)__two_exp)+0x14DC),
	(void*)(((char*)__two_exp)+0x14DC),
	(void*)(((char*)__two_exp)+0x14DC),
	(void*)(((char*)__two_exp)+0x334),
	(void*)(((char*)__two_exp)+0x14DC),
	(void*)(((char*)__two_exp)+0x14DC),
	(void*)(((char*)__two_exp)+0x14DC),
	(void*)(((char*)__two_exp)+0x14DC),
	(void*)(((char*)__two_exp)+0x14DC),
	(void*)(((char*)__two_exp)+0x14DC),
	(void*)(((char*)__two_exp)+0x14DC),
	(void*)(((char*)__two_exp)+0x430),
	(void*)(((char*)__two_exp)+0x52C),
	(void*)(((char*)__two_exp)+0x628),
	(void*)(((char*)__two_exp)+0x724),
	(void*)(((char*)__two_exp)+0x820),
	(void*)(((char*)__two_exp)+0x91C),
	(void*)(((char*)__two_exp)+0xA18),
	(void*)(((char*)__two_exp)+0xB14),
	(void*)(((char*)__two_exp)+0xC10),
	(void*)(((char*)__two_exp)+0xD08),
	(void*)(((char*)__two_exp)+0xE00),
	(void*)(((char*)__two_exp)+0xEF8),
	(void*)(((char*)__two_exp)+0xFF0),
	(void*)(((char*)__two_exp)+0x10EC),
	(void*)(((char*)__two_exp)+0x11E8),
	(void*)(((char*)__two_exp)+0x12E4),
	(void*)(((char*)__two_exp)+0x13E0),
	/* padding */
	NULL,
};

/* 8036367C-80364E00 1784+00 .text      __two_exp                                                    */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
ASM_FUNCTION(__two_exp) {
	nofralloc
#include "asm/MSL_C.PPCEABI.bare.H/MSL_Common_Embedded/Src/ansi_fp/__two_exp.s"
}
#pragma pop


/* 80364E00-80365078 0278+00 .text      __timesdec                                                   */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
ASM_FUNCTION(__timesdec) {
	nofralloc
#include "asm/MSL_C.PPCEABI.bare.H/MSL_Common_Embedded/Src/ansi_fp/__timesdec.s"
}
#pragma pop


/* ############################################################################################## */
