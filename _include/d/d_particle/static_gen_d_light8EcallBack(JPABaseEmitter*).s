lbl_8004A224:
/* 8004A224 00000000  94 21 FF F0 */	stwu r1, -0x10(r1)
/* 8004A228 00000004  7C 08 02 A6 */	mflr r0
/* 8004A22C 00000008  90 01 00 14 */	stw r0, 0x14(r1)
/* 8004A230 0000000C  93 E1 00 0C */	stw r31, 0xc(r1)
/* 8004A234 00000010  7C 7F 1B 78 */	mr r31, r3
/* 8004A238 00000014  48 31 1C 95 */	bl GXFlush
/* 8004A23C 00000018  3C 60 80 43 */	lis r3, j3dSys@ha
/* 8004A240 0000001C  38 63 4A C8 */	addi r3, r3, j3dSys@l
/* 8004A244 00000020  38 80 00 00 */	li r4, 0
/* 8004A248 00000024  48 31 60 05 */	bl GXLoadPosMtxImm
/* 8004A24C 00000028  3C 60 80 43 */	lis r3, j3dSys@ha
/* 8004A250 0000002C  38 63 4A C8 */	addi r3, r3, j3dSys@l
/* 8004A254 00000030  38 80 00 00 */	li r4, 0
/* 8004A258 00000034  48 31 60 45 */	bl GXLoadNrmMtxImm
/* 8004A25C 00000038  48 31 19 11 */	bl GXInvalidateVtxCache
/* 8004A260 0000003C  38 60 00 00 */	li r3, 0
/* 8004A264 00000040  38 80 00 09 */	li r4, 9
/* 8004A268 00000044  38 A0 00 01 */	li r5, 1
/* 8004A26C 00000048  38 C0 00 04 */	li r6, 4
/* 8004A270 0000004C  38 E0 00 00 */	li r7, 0
/* 8004A274 00000050  48 31 13 51 */	bl GXSetVtxAttrFmt
/* 8004A278 00000054  38 60 00 00 */	li r3, 0
/* 8004A27C 00000058  38 80 00 0A */	li r4, 0xa
/* 8004A280 0000005C  38 A0 00 00 */	li r5, 0
/* 8004A284 00000060  38 C0 00 04 */	li r6, 4
/* 8004A288 00000064  38 E0 00 00 */	li r7, 0
/* 8004A28C 00000068  48 31 13 39 */	bl GXSetVtxAttrFmt
/* 8004A290 0000006C  38 60 00 00 */	li r3, 0
/* 8004A294 00000070  38 80 00 0B */	li r4, 0xb
/* 8004A298 00000074  38 A0 00 01 */	li r5, 1
/* 8004A29C 00000078  38 C0 00 05 */	li r6, 5
/* 8004A2A0 0000007C  38 E0 00 00 */	li r7, 0
/* 8004A2A4 00000080  48 31 13 21 */	bl GXSetVtxAttrFmt
/* 8004A2A8 00000084  38 60 00 00 */	li r3, 0
/* 8004A2AC 00000088  38 80 00 0D */	li r4, 0xd
/* 8004A2B0 0000008C  38 A0 00 01 */	li r5, 1
/* 8004A2B4 00000090  38 C0 00 04 */	li r6, 4
/* 8004A2B8 00000094  38 E0 00 00 */	li r7, 0
/* 8004A2BC 00000098  48 31 13 09 */	bl GXSetVtxAttrFmt
/* 8004A2C0 0000009C  48 31 12 CD */	bl GXClearVtxDesc
/* 8004A2C4 000000A0  38 60 00 09 */	li r3, 9
/* 8004A2C8 000000A4  38 80 00 01 */	li r4, 1
/* 8004A2CC 000000A8  48 31 0B ED */	bl GXSetVtxDesc
/* 8004A2D0 000000AC  38 60 00 0A */	li r3, 0xa
/* 8004A2D4 000000B0  38 80 00 01 */	li r4, 1
/* 8004A2D8 000000B4  48 31 0B E1 */	bl GXSetVtxDesc
/* 8004A2DC 000000B8  38 60 00 0B */	li r3, 0xb
/* 8004A2E0 000000BC  38 80 00 01 */	li r4, 1
/* 8004A2E4 000000C0  48 31 0B D5 */	bl GXSetVtxDesc
/* 8004A2E8 000000C4  38 60 00 0D */	li r3, 0xd
/* 8004A2EC 000000C8  38 80 00 01 */	li r4, 1
/* 8004A2F0 000000CC  48 31 0B C9 */	bl GXSetVtxDesc
/* 8004A2F4 000000D0  7F E3 FB 78 */	mr r3, r31
/* 8004A2F8 000000D4  48 23 4C 49 */	bl getDrawCount__14JPABaseEmitterCFv
/* 8004A2FC 000000D8  54 60 06 3E */	clrlwi r0, r3, 0x18
/* 8004A300 000000DC  2C 00 00 02 */	cmpwi r0, 2
/* 8004A304 000000E0  41 82 00 20 */	beq lbl_8004A324
/* 8004A308 000000E4  40 80 00 24 */	bge lbl_8004A32C
/* 8004A30C 000000E8  2C 00 00 01 */	cmpwi r0, 1
/* 8004A310 000000EC  40 80 00 08 */	bge lbl_8004A318
/* 8004A314 000000F0  48 00 00 18 */	b lbl_8004A32C
lbl_8004A318:
/* 8004A318 00000000  7F E3 FB 78 */	mr r3, r31
/* 8004A31C 00000004  4B FF F9 05 */	bl drawFirst_l8(JPABaseEmitter*)
/* 8004A320 00000008  48 00 00 0C */	b lbl_8004A32C
lbl_8004A324:
/* 8004A324 00000000  7F E3 FB 78 */	mr r3, r31
/* 8004A328 00000004  4B FF FB 19 */	bl drawSecond_b_light8(JPABaseEmitter*)
lbl_8004A32C:
/* 8004A32C 00000000  83 E1 00 0C */	lwz r31, 0xc(r1)
/* 8004A330 00000004  80 01 00 14 */	lwz r0, 0x14(r1)
/* 8004A334 00000008  7C 08 03 A6 */	mtlr r0
/* 8004A338 0000000C  38 21 00 10 */	addi r1, r1, 0x10
/* 8004A33C 00000010  4E 80 00 20 */	blr 
