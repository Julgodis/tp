// 
// Generated By: dol2asm
// 

#include "dolphin/types.h"

// 
// Additional Symbols:
// 

extern "C" {
/* Function             */
extern void GXSetGPMetric();
/* Function             */
extern void GXClearGPMetric();
/* Function             */
extern void GXReadXfRasMetric();
/* SymbolReferenceArrayData */
SECTION_DATA extern void* LIT_182[23];
/* SymbolReferenceArrayData */
SECTION_DATA extern void* LIT_181[37];
/* ZeroInitializedData  */
SECTION_SBSS extern u8 __cpReg[4];
/* SymbolReferenceArrayData */
SECTION_SDATA2 extern void* __GXData;
}


/* ###################################################################################### */
/*                                         .data                                          */
/* ###################################################################################### */

extern "C" {
/* 803D2858-803D28B4 005C .data      @182                                                         SymbolReferenceArrayData */
SECTION_DATA void* LIT_182[23] = {
	(void*)(((u32*)GXSetGPMetric)+346),
	(void*)(((u32*)GXSetGPMetric)+353),
	(void*)(((u32*)GXSetGPMetric)+360),
	(void*)(((u32*)GXSetGPMetric)+367),
	(void*)(((u32*)GXSetGPMetric)+388),
	(void*)(((u32*)GXSetGPMetric)+395),
	(void*)(((u32*)GXSetGPMetric)+402),
	(void*)(((u32*)GXSetGPMetric)+409),
	(void*)(((u32*)GXSetGPMetric)+374),
	(void*)(((u32*)GXSetGPMetric)+416),
	(void*)(((u32*)GXSetGPMetric)+428),
	(void*)(((u32*)GXSetGPMetric)+440),
	(void*)(((u32*)GXSetGPMetric)+452),
	(void*)(((u32*)GXSetGPMetric)+464),
	(void*)(((u32*)GXSetGPMetric)+476),
	(void*)(((u32*)GXSetGPMetric)+488),
	(void*)(((u32*)GXSetGPMetric)+500),
	(void*)(((u32*)GXSetGPMetric)+511),
	(void*)(((u32*)GXSetGPMetric)+515),
	(void*)(((u32*)GXSetGPMetric)+519),
	(void*)(((u32*)GXSetGPMetric)+523),
	(void*)(((u32*)GXSetGPMetric)+381),
	(void*)(((u32*)GXSetGPMetric)+526),
};
/* 803D28B4-803D2948 0090 .data      @181                                                         SymbolReferenceArrayData */
SECTION_DATA void* LIT_181[37] = {
	(void*)(((u32*)GXSetGPMetric)+79),
	(void*)(((u32*)GXSetGPMetric)+87),
	(void*)(((u32*)GXSetGPMetric)+95),
	(void*)(((u32*)GXSetGPMetric)+103),
	(void*)(((u32*)GXSetGPMetric)+111),
	(void*)(((u32*)GXSetGPMetric)+119),
	(void*)(((u32*)GXSetGPMetric)+127),
	(void*)(((u32*)GXSetGPMetric)+135),
	(void*)(((u32*)GXSetGPMetric)+143),
	(void*)(((u32*)GXSetGPMetric)+151),
	(void*)(((u32*)GXSetGPMetric)+167),
	(void*)(((u32*)GXSetGPMetric)+175),
	(void*)(((u32*)GXSetGPMetric)+182),
	(void*)(((u32*)GXSetGPMetric)+189),
	(void*)(((u32*)GXSetGPMetric)+196),
	(void*)(((u32*)GXSetGPMetric)+203),
	(void*)(((u32*)GXSetGPMetric)+210),
	(void*)(((u32*)GXSetGPMetric)+217),
	(void*)(((u32*)GXSetGPMetric)+224),
	(void*)(((u32*)GXSetGPMetric)+231),
	(void*)(((u32*)GXSetGPMetric)+238),
	(void*)(((u32*)GXSetGPMetric)+245),
	(void*)(((u32*)GXSetGPMetric)+252),
	(void*)(((u32*)GXSetGPMetric)+259),
	(void*)(((u32*)GXSetGPMetric)+266),
	(void*)(((u32*)GXSetGPMetric)+273),
	(void*)(((u32*)GXSetGPMetric)+280),
	(void*)(((u32*)GXSetGPMetric)+287),
	(void*)(((u32*)GXSetGPMetric)+294),
	(void*)(((u32*)GXSetGPMetric)+301),
	(void*)(((u32*)GXSetGPMetric)+308),
	(void*)(((u32*)GXSetGPMetric)+315),
	(void*)(((u32*)GXSetGPMetric)+322),
	(void*)(((u32*)GXSetGPMetric)+329),
	(void*)(((u32*)GXSetGPMetric)+159),
	(void*)(((u32*)GXSetGPMetric)+335),
	/* padding */
	NULL,
};
}


/* ###################################################################################### */
/*                                         .text                                          */
/* ###################################################################################### */

extern "C" {
/* 8036067C-80360EC4 0848 .text      GXSetGPMetric                                                Function */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void GXSetGPMetric() {
	nofralloc
#include "_include/gx/GXPerf/GXSetGPMetric.s"
}
#pragma pop

/* 80360EC4-80360ED4 0010 .text      GXClearGPMetric                                              Function */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void GXClearGPMetric() {
	nofralloc
#include "_include/gx/GXPerf/GXClearGPMetric.s"
}
#pragma pop

/* 80360ED4-80360F98 00C4 .text      GXReadXfRasMetric                                            Function */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void GXReadXfRasMetric() {
	nofralloc
#include "_include/gx/GXPerf/GXReadXfRasMetric.s"
}
#pragma pop

}

