// 
// Generated By: dol2asm
// 

#include "dolphin/types.h"

// 
// Additional Symbols:
// 

extern "C" {
/* Function             */
extern void PPCSync();
/* Function             */
extern void OSSetCurrentContext();
/* Function             */
extern void OSClearContext();
/* Function             */
extern void OSDisableInterrupts();
/* Function             */
extern void OSRestoreInterrupts();
/* Function             */
extern void __OSSetInterruptHandler();
/* Function             */
extern void __OSUnmaskInterrupts();
/* Function             */
extern void OSInitThreadQueue();
/* Function             */
extern void OSSleepThread();
/* Function             */
extern void OSWakeupThread();
/* Function             */
extern void OSGetTime();
/* Function             */
extern void __GXInitRevisionBits();
/* Function             */
extern void __GXCleanGPFifo();
/* GlobalFunction       */
extern u32 GXGetGPFifo();
/* Function             */
extern void GXSetMisc();
/* Function             */
extern void GXFlush();
/* Function             */
extern void __GXAbort();
/* Function             */
extern void GXAbortFrame();
/* Function             */
extern void GXSetDrawDone();
/* Function             */
extern void GXDrawDone();
/* Function             */
extern void GXPixModeSync();
/* Function             */
extern void GXPokeAlphaMode();
/* Function             */
extern void GXPokeAlphaRead();
/* Function             */
extern void GXPokeAlphaUpdate();
/* Function             */
extern void GXPokeBlendMode();
/* Function             */
extern void GXPokeColorUpdate();
/* Function             */
extern void GXPokeDstAlpha();
/* Function             */
extern void GXPokeDither();
/* Function             */
extern void GXPokeZMode();
/* Function             */
extern void GXPeekZ();
/* Function             */
extern void GXSetDrawSyncCallback();
/* Function             */
extern void GXTokenInterruptHandler();
/* Function             */
extern void GXSetDrawDoneCallback();
/* Function             */
extern void GXFinishInterruptHandler();
/* Function             */
extern void __GXPEInit();
/* Function             */
extern void __GXSetDirtyState();
/* ZeroInitializedData  */
SECTION_SBSS extern u8 __peReg[4];
/* ZeroInitializedData  */
SECTION_SBSS extern u8 __memReg[4];
/* ZeroInitializedData  */
SECTION_SBSS extern u8 TokenCB[4];
/* ZeroInitializedData  */
SECTION_SBSS extern u8 DrawDoneCB[4];
/* ZeroInitializedData  */
SECTION_SBSS extern u8 data_80451970[4];
/* ZeroInitializedData  */
SECTION_SBSS extern u8 FinishQueue[8 + 4 /* padding */];
/* SymbolReferenceArrayData */
SECTION_SDATA2 extern void* __GXData;
}


/* ###################################################################################### */
/*                                         .sbss                                          */
/* ###################################################################################### */

extern "C" {
/* 80451968-8045196C 0004 .sbss      TokenCB                                                      ZeroInitializedData */
SECTION_SBSS u8 TokenCB[4];
/* 8045196C-80451970 0004 .sbss      DrawDoneCB                                                   ZeroInitializedData */
SECTION_SBSS u8 DrawDoneCB[4];
/* 80451970-80451974 0004 .sbss      data_80451970                                                ZeroInitializedData */
SECTION_SBSS u8 data_80451970[4];
/* 80451974-80451980 0008 .sbss      FinishQueue                                                  ZeroInitializedData */
SECTION_SBSS u8 FinishQueue[8 + 4 /* padding */];
}


/* ###################################################################################### */
/*                                         .text                                          */
/* ###################################################################################### */

extern "C" {
/* 8035BE38-8035BECC 0094 .text      GXSetMisc                                                    Function */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void GXSetMisc() {
	nofralloc
#include "_include/gx/GXMisc/GXSetMisc.s"
}
#pragma pop

/* 8035BECC-8035BF28 005C .text      GXFlush                                                      Function */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void GXFlush() {
	nofralloc
#include "_include/gx/GXMisc/GXFlush.s"
}
#pragma pop

/* 8035BF28-8035C094 016C .text      __GXAbort                                                    Function */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void __GXAbort() {
	nofralloc
#include "_include/gx/GXMisc/__GXAbort.s"
}
#pragma pop

/* 8035C094-8035C25C 01C8 .text      GXAbortFrame                                                 Function */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void GXAbortFrame() {
	nofralloc
#include "_include/gx/GXMisc/GXAbortFrame.s"
}
#pragma pop

/* 8035C25C-8035C2F4 0098 .text      GXSetDrawDone                                                Function */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void GXSetDrawDone() {
	nofralloc
#include "_include/gx/GXMisc/GXSetDrawDone.s"
}
#pragma pop

/* 8035C2F4-8035C374 0080 .text      GXDrawDone                                                   Function */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void GXDrawDone() {
	nofralloc
#include "_include/gx/GXMisc/GXDrawDone.s"
}
#pragma pop

/* 8035C374-8035C398 0024 .text      GXPixModeSync                                                Function */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void GXPixModeSync() {
	nofralloc
#include "_include/gx/GXMisc/GXPixModeSync.s"
}
#pragma pop

/* 8035C398-8035C3AC 0014 .text      GXPokeAlphaMode                                              Function */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void GXPokeAlphaMode() {
	nofralloc
#include "_include/gx/GXMisc/GXPokeAlphaMode.s"
}
#pragma pop

/* 8035C3AC-8035C3CC 0020 .text      GXPokeAlphaRead                                              Function */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void GXPokeAlphaRead() {
	nofralloc
#include "_include/gx/GXMisc/GXPokeAlphaRead.s"
}
#pragma pop

/* 8035C3CC-8035C3E4 0018 .text      GXPokeAlphaUpdate                                            Function */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void GXPokeAlphaUpdate() {
	nofralloc
#include "_include/gx/GXMisc/GXPokeAlphaUpdate.s"
}
#pragma pop

/* 8035C3E4-8035C448 0064 .text      GXPokeBlendMode                                              Function */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void GXPokeBlendMode() {
	nofralloc
#include "_include/gx/GXMisc/GXPokeBlendMode.s"
}
#pragma pop

/* 8035C448-8035C460 0018 .text      GXPokeColorUpdate                                            Function */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void GXPokeColorUpdate() {
	nofralloc
#include "_include/gx/GXMisc/GXPokeColorUpdate.s"
}
#pragma pop

/* 8035C460-8035C484 0024 .text      GXPokeDstAlpha                                               Function */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void GXPokeDstAlpha() {
	nofralloc
#include "_include/gx/GXMisc/GXPokeDstAlpha.s"
}
#pragma pop

/* 8035C484-8035C49C 0018 .text      GXPokeDither                                                 Function */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void GXPokeDither() {
	nofralloc
#include "_include/gx/GXMisc/GXPokeDither.s"
}
#pragma pop

/* 8035C49C-8035C4BC 0020 .text      GXPokeZMode                                                  Function */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void GXPokeZMode() {
	nofralloc
#include "_include/gx/GXMisc/GXPokeZMode.s"
}
#pragma pop

/* 8035C4BC-8035C4E0 0024 .text      GXPeekZ                                                      Function */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void GXPeekZ() {
	nofralloc
#include "_include/gx/GXMisc/GXPeekZ.s"
}
#pragma pop

/* 8035C4E0-8035C524 0044 .text      GXSetDrawSyncCallback                                        Function */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void GXSetDrawSyncCallback() {
	nofralloc
#include "_include/gx/GXMisc/GXSetDrawSyncCallback.s"
}
#pragma pop

/* 8035C524-8035C5AC 0088 .text      GXTokenInterruptHandler                                      Function */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void GXTokenInterruptHandler() {
	nofralloc
#include "_include/gx/GXMisc/GXTokenInterruptHandler.s"
}
#pragma pop

/* 8035C5AC-8035C5F0 0044 .text      GXSetDrawDoneCallback                                        Function */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void GXSetDrawDoneCallback() {
	nofralloc
#include "_include/gx/GXMisc/GXSetDrawDoneCallback.s"
}
#pragma pop

/* 8035C5F0-8035C670 0080 .text      GXFinishInterruptHandler                                     Function */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void GXFinishInterruptHandler() {
	nofralloc
#include "_include/gx/GXMisc/GXFinishInterruptHandler.s"
}
#pragma pop

/* 8035C670-8035C6E4 0074 .text      __GXPEInit                                                   Function */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void __GXPEInit() {
	nofralloc
#include "_include/gx/GXMisc/__GXPEInit.s"
}
#pragma pop

}

