// 
// Generated By: dol2asm
// 

#include "dolphin/types.h"

// 
// Additional Symbols:
// 

extern "C" {
extern void cosf();
SECTION_DATA extern u8 GXLight__LIT_145[32];
SECTION_SDATA2 extern u8 __GXData[4];
SECTION_SDATA2 extern u8 LIT_134[4];
SECTION_SDATA2 extern f32 GXLight__LIT_135;
SECTION_SDATA2 extern u8 LIT_136[4];
SECTION_SDATA2 extern f32 LIT_137;
SECTION_SDATA2 extern f32 LIT_138;
SECTION_SDATA2 extern f32 LIT_139;
SECTION_SDATA2 extern f32 GXLight__LIT_140;
SECTION_SDATA2 extern f32 LIT_141;
SECTION_SDATA2 extern f32 LIT_142;
SECTION_SDATA2 extern f32 LIT_143;
SECTION_SDATA2 extern f32 LIT_144;
SECTION_SDATA2 extern f32 GXLight__LIT_160;
}


/* ###################################################################################### */
/*                                         .data                                          */
/* ###################################################################################### */

extern "C" {
/* 803D2578 001C .data      @145                                                         */
SECTION_DATA u8 GXLight__LIT_145[32] = {
	0x80, 0x35, 0xD7, 0xAC, 0x80, 0x35, 0xD6, 0xBC, 0x80, 0x35, 0xD6, 0xD0, 0x80, 0x35, 0xD6, 0xF0,
	0x80, 0x35, 0xD7, 0x10, 0x80, 0x35, 0xD7, 0x3C, 0x80, 0x35, 0xD7, 0x70,
	/* padding */
	0x00, 0x00, 0x00, 0x00,
};
}


/* ###################################################################################### */
/*                                        .sdata2                                         */
/* ###################################################################################### */

extern "C" {
/* 804565B8 0004 .sdata2    @134                                                         */
SECTION_SDATA2 u8 LIT_134[4] = {
	0x00, 0x00, 0x00, 0x00,
};
/* 804565BC 0004 .sdata2    @135                                                         */
// 0x42b40000
SECTION_SDATA2 f32 GXLight__LIT_135 = 90.000000f;
/* 804565C0 0004 .sdata2    @136                                                         */
SECTION_SDATA2 u8 LIT_136[4] = {
	0x40, 0x49, 0x0F, 0xDB,
};
/* 804565C4 0004 .sdata2    @137                                                         */
// 0x43340000
SECTION_SDATA2 f32 LIT_137 = 180.000000f;
/* 804565C8 0004 .sdata2    @138                                                         */
// 0xc47a0000
SECTION_SDATA2 f32 LIT_138 = -1000.000000f;
/* 804565CC 0004 .sdata2    @139                                                         */
// 0x447a0000
SECTION_SDATA2 f32 LIT_139 = 1000.000000f;
/* 804565D0 0004 .sdata2    @140                                                         */
// 0x3f800000
SECTION_SDATA2 f32 GXLight__LIT_140 = 1.000000f;
/* 804565D4 0004 .sdata2    @141                                                         */
// 0x40000000
SECTION_SDATA2 f32 LIT_141 = 2.000000f;
/* 804565D8 0004 .sdata2    @142                                                         */
// 0xc0800000
SECTION_SDATA2 f32 LIT_142 = -4.000000f;
/* 804565DC 0004 .sdata2    @143                                                         */
// 0x40800000
SECTION_SDATA2 f32 LIT_143 = 4.000000f;
/* 804565E0 0004 .sdata2    @144                                                         */
// 0xc0000000
SECTION_SDATA2 f32 LIT_144 = -2.000000f;
/* 804565E4 0004 .sdata2    @160                                                         */
// 0x3f000000
SECTION_SDATA2 f32 GXLight__LIT_160 = 0.500000f;
}


/* ###################################################################################### */
/*                                         .text                                          */
/* ###################################################################################### */

extern "C" {
/* 8035D630 001C .text      GXInitLightAttn                                              */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void GXInitLightAttn() {
	nofralloc
#include "_include/gx/GXLight/GXInitLightAttn.s"
}
#pragma pop

/* 8035D64C 0190 .text      GXInitLightSpot                                              */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void GXInitLightSpot() {
	nofralloc
#include "_include/gx/GXLight/GXInitLightSpot.s"
}
#pragma pop

/* 8035D7DC 00D0 .text      GXInitLightDistAttn                                          */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void GXInitLightDistAttn() {
	nofralloc
#include "_include/gx/GXLight/GXInitLightDistAttn.s"
}
#pragma pop

/* 8035D8AC 0010 .text      GXInitLightPos                                               */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void GXInitLightPos() {
	nofralloc
#include "_include/gx/GXLight/GXInitLightPos.s"
}
#pragma pop

/* 8035D8BC 001C .text      GXInitLightDir                                               */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void GXInitLightDir() {
	nofralloc
#include "_include/gx/GXLight/GXInitLightDir.s"
}
#pragma pop

/* 8035D8D8 000C .text      GXInitLightColor                                             */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void GXInitLightColor() {
	nofralloc
#include "_include/gx/GXLight/GXInitLightColor.s"
}
#pragma pop

/* 8035D8E4 007C .text      GXLoadLightObjImm                                            */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void GXLoadLightObjImm() {
	nofralloc
#include "_include/gx/GXLight/GXLoadLightObjImm.s"
}
#pragma pop

/* 8035D960 00E8 .text      GXSetChanAmbColor                                            */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void GXSetChanAmbColor() {
	nofralloc
#include "_include/gx/GXLight/GXSetChanAmbColor.s"
}
#pragma pop

/* 8035DA48 00E8 .text      GXSetChanMatColor                                            */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void GXSetChanMatColor() {
	nofralloc
#include "_include/gx/GXLight/GXSetChanMatColor.s"
}
#pragma pop

/* 8035DB30 003C .text      GXSetNumChans                                                */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void GXSetNumChans() {
	nofralloc
#include "_include/gx/GXLight/GXSetNumChans.s"
}
#pragma pop

/* 8035DB6C 00B0 .text      GXSetChanCtrl                                                */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void GXSetChanCtrl() {
	nofralloc
#include "_include/gx/GXLight/GXSetChanCtrl.s"
}
#pragma pop

}

