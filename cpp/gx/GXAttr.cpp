// 
// Generated By: dol2asm
// 

#include "dolphin/types.h"

// 
// Additional Symbols:
// 

extern "C" {
extern void __GXSetMatrixIndex();
SECTION_DATA extern u8 GXAttr__LIT_176[104];
SECTION_DATA extern u8 LIT_223[104];
SECTION_DATA extern u8 GXAttr__LIT_476[68];
SECTION_DATA extern u8 GXAttr__LIT_503[68];
SECTION_DATA extern u8 GXAttr__LIT_740[28];
SECTION_DATA extern u8 LIT_739[84];
SECTION_SDATA extern u8 data_80450A80[4];
SECTION_SDATA extern u8 data_80450A84[4];
SECTION_SDATA extern u8 data_80450A88[8];
SECTION_SDATA2 extern u8 __GXData[4];
}


/* ###################################################################################### */
/*                                         .data                                          */
/* ###################################################################################### */

extern "C" {
/* 803D2280 0068 .data      @176                                                         */
SECTION_DATA u8 GXAttr__LIT_176[104] = {
	0x80, 0x35, 0xAE, 0xD8, 0x80, 0x35, 0xAE, 0xEC, 0x80, 0x35, 0xAF, 0x00, 0x80, 0x35, 0xAF, 0x14,
	0x80, 0x35, 0xAF, 0x28, 0x80, 0x35, 0xAF, 0x3C, 0x80, 0x35, 0xAF, 0x50, 0x80, 0x35, 0xAF, 0x64,
	0x80, 0x35, 0xAF, 0x78, 0x80, 0x35, 0xAF, 0x8C, 0x80, 0x35, 0xAF, 0xA0, 0x80, 0x35, 0xB0, 0x08,
	0x80, 0x35, 0xB0, 0x1C, 0x80, 0x35, 0xB0, 0x30, 0x80, 0x35, 0xB0, 0x44, 0x80, 0x35, 0xB0, 0x58,
	0x80, 0x35, 0xB0, 0x6C, 0x80, 0x35, 0xB0, 0x80, 0x80, 0x35, 0xB0, 0x94, 0x80, 0x35, 0xB0, 0xA8,
	0x80, 0x35, 0xB0, 0xBC, 0x80, 0x35, 0xB0, 0xCC, 0x80, 0x35, 0xB0, 0xCC, 0x80, 0x35, 0xB0, 0xCC,
	0x80, 0x35, 0xB0, 0xCC, 0x80, 0x35, 0xAF, 0xD4,
};
/* 803D22E8 0068 .data      @223                                                         */
SECTION_DATA u8 LIT_223[104] = {
	0x80, 0x35, 0xB1, 0x50, 0x80, 0x35, 0xB1, 0x64, 0x80, 0x35, 0xB1, 0x78, 0x80, 0x35, 0xB1, 0x8C,
	0x80, 0x35, 0xB1, 0xA0, 0x80, 0x35, 0xB1, 0xB4, 0x80, 0x35, 0xB1, 0xC8, 0x80, 0x35, 0xB1, 0xDC,
	0x80, 0x35, 0xB1, 0xF0, 0x80, 0x35, 0xB2, 0x04, 0x80, 0x35, 0xB2, 0x18, 0x80, 0x35, 0xB2, 0x80,
	0x80, 0x35, 0xB2, 0x94, 0x80, 0x35, 0xB2, 0xA8, 0x80, 0x35, 0xB2, 0xBC, 0x80, 0x35, 0xB2, 0xD0,
	0x80, 0x35, 0xB2, 0xE4, 0x80, 0x35, 0xB2, 0xF8, 0x80, 0x35, 0xB3, 0x0C, 0x80, 0x35, 0xB3, 0x20,
	0x80, 0x35, 0xB3, 0x34, 0x80, 0x35, 0xB3, 0x44, 0x80, 0x35, 0xB3, 0x44, 0x80, 0x35, 0xB3, 0x44,
	0x80, 0x35, 0xB3, 0x44, 0x80, 0x35, 0xB2, 0x4C,
};
/* 803D2350 0044 .data      @476                                                         */
SECTION_DATA u8 GXAttr__LIT_476[68] = {
	0x80, 0x35, 0xB6, 0x00, 0x80, 0x35, 0xB6, 0x28, 0x80, 0x35, 0xB6, 0x7C, 0x80, 0x35, 0xB6, 0x98,
	0x80, 0x35, 0xB6, 0xB4, 0x80, 0x35, 0xB6, 0xDC, 0x80, 0x35, 0xB7, 0x04, 0x80, 0x35, 0xB7, 0x2C,
	0x80, 0x35, 0xB7, 0x54, 0x80, 0x35, 0xB7, 0x7C, 0x80, 0x35, 0xB7, 0xA4, 0x80, 0x35, 0xB7, 0xCC,
	0x80, 0x35, 0xB7, 0xF0, 0x80, 0x35, 0xB7, 0xF0, 0x80, 0x35, 0xB7, 0xF0, 0x80, 0x35, 0xB7, 0xF0,
	0x80, 0x35, 0xB6, 0x28,
};
/* 803D2394 0044 .data      @503                                                         */
SECTION_DATA u8 GXAttr__LIT_503[68] = {
	0x80, 0x35, 0xB8, 0x70, 0x80, 0x35, 0xB8, 0x98, 0x80, 0x35, 0xB8, 0xEC, 0x80, 0x35, 0xB9, 0x08,
	0x80, 0x35, 0xB9, 0x24, 0x80, 0x35, 0xB9, 0x4C, 0x80, 0x35, 0xB9, 0x74, 0x80, 0x35, 0xB9, 0x9C,
	0x80, 0x35, 0xB9, 0xC4, 0x80, 0x35, 0xB9, 0xEC, 0x80, 0x35, 0xBA, 0x14, 0x80, 0x35, 0xBA, 0x3C,
	0x80, 0x35, 0xBA, 0x60, 0x80, 0x35, 0xBA, 0x60, 0x80, 0x35, 0xBA, 0x60, 0x80, 0x35, 0xBA, 0x60,
	0x80, 0x35, 0xB8, 0x98,
};
/* 803D23D8 001C .data      @740                                                         */
SECTION_DATA u8 GXAttr__LIT_740[28] = {
	0x80, 0x35, 0xBD, 0x48, 0x80, 0x35, 0xBD, 0x5C, 0x80, 0x35, 0xBD, 0x70, 0x80, 0x35, 0xBD, 0x84,
	0x80, 0x35, 0xBD, 0x98, 0x80, 0x35, 0xBD, 0xAC, 0x80, 0x35, 0xBD, 0xC0,
};
/* 803D23F4 0054 .data      @739                                                         */
SECTION_DATA u8 LIT_739[84] = {
	0x80, 0x35, 0xBB, 0xB4, 0x80, 0x35, 0xBB, 0xC0, 0x80, 0x35, 0xBB, 0xCC, 0x80, 0x35, 0xBB, 0xD8,
	0x80, 0x35, 0xBB, 0xF4, 0x80, 0x35, 0xBB, 0xFC, 0x80, 0x35, 0xBC, 0x04, 0x80, 0x35, 0xBC, 0x0C,
	0x80, 0x35, 0xBC, 0x14, 0x80, 0x35, 0xBC, 0x1C, 0x80, 0x35, 0xBC, 0x24, 0x80, 0x35, 0xBC, 0x2C,
	0x80, 0x35, 0xBC, 0x30, 0x80, 0x35, 0xBC, 0x30, 0x80, 0x35, 0xBC, 0x30, 0x80, 0x35, 0xBC, 0x30,
	0x80, 0x35, 0xBC, 0x30, 0x80, 0x35, 0xBC, 0x30, 0x80, 0x35, 0xBC, 0x30, 0x80, 0x35, 0xBB, 0xE4,
	0x80, 0x35, 0xBB, 0xEC,
};
}


/* ###################################################################################### */
/*                                         .sdata                                         */
/* ###################################################################################### */

extern "C" {
/* 80450A80 0004 .sdata     tbl1$241                                                     */
SECTION_SDATA u8 data_80450A80[4] = {
	0x00, 0x04, 0x01, 0x02,
};
/* 80450A84 0004 .sdata     tbl2$242                                                     */
SECTION_SDATA u8 data_80450A84[4] = {
	0x00, 0x08, 0x01, 0x02,
};
/* 80450A88 0004 .sdata     tbl3$243                                                     */
SECTION_SDATA u8 data_80450A88[8] = {
	0x00, 0x0C, 0x01, 0x02,
	/* padding */
	0x00, 0x00, 0x00, 0x00,
};
}


/* ###################################################################################### */
/*                                         .text                                          */
/* ###################################################################################### */

extern "C" {
/* 8035AEB8 026C .text      GXSetVtxDesc                                                 */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void GXSetVtxDesc() {
	nofralloc
#include "_include/gx/GXAttr/GXSetVtxDesc.s"
}
#pragma pop

/* 8035B124 0288 .text      GXSetVtxDescv                                                */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void GXSetVtxDescv() {
	nofralloc
#include "_include/gx/GXAttr/GXSetVtxDescv.s"
}
#pragma pop

/* 8035B3AC 00BC .text      __GXSetVCD                                                   */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void __GXSetVCD() {
	nofralloc
#include "_include/gx/GXAttr/__GXSetVCD.s"
}
#pragma pop

/* 8035B468 0124 .text      __GXCalculateVLim                                            */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void __GXCalculateVLim() {
	nofralloc
#include "_include/gx/GXAttr/__GXCalculateVLim.s"
}
#pragma pop

/* 8035B58C 0038 .text      GXClearVtxDesc                                               */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void GXClearVtxDesc() {
	nofralloc
#include "_include/gx/GXAttr/GXClearVtxDesc.s"
}
#pragma pop

/* 8035B5C4 025C .text      GXSetVtxAttrFmt                                              */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void GXSetVtxAttrFmt() {
	nofralloc
#include "_include/gx/GXAttr/GXSetVtxAttrFmt.s"
}
#pragma pop

/* 8035B820 0280 .text      GXSetVtxAttrFmtv                                             */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void GXSetVtxAttrFmtv() {
	nofralloc
#include "_include/gx/GXAttr/GXSetVtxAttrFmtv.s"
}
#pragma pop

/* 8035BAA0 0088 .text      __GXSetVAT                                                   */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void __GXSetVAT() {
	nofralloc
#include "_include/gx/GXAttr/__GXSetVAT.s"
}
#pragma pop

/* 8035BB28 0044 .text      GXSetArray                                                   */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void GXSetArray() {
	nofralloc
#include "_include/gx/GXAttr/GXSetArray.s"
}
#pragma pop

/* 8035BB6C 0010 .text      GXInvalidateVtxCache                                         */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void GXInvalidateVtxCache() {
	nofralloc
#include "_include/gx/GXAttr/GXInvalidateVtxCache.s"
}
#pragma pop

/* 8035BB7C 0280 .text      GXSetTexCoordGen2                                            */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void GXSetTexCoordGen2() {
	nofralloc
#include "_include/gx/GXAttr/GXSetTexCoordGen2.s"
}
#pragma pop

/* 8035BDFC 003C .text      GXSetNumTexGens                                              */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void GXSetNumTexGens() {
	nofralloc
#include "_include/gx/GXAttr/GXSetNumTexGens.s"
}
#pragma pop

}

