// 
// Generated By: dol2asm
// 

#include "dolphin/types.h"

// 
// Additional Symbols:
// 

extern "C" {
/* Function             */
extern void GXSetTevOp();
/* Function             */
extern void GXSetTevColorIn();
/* Function             */
extern void GXSetTevAlphaIn();
/* Function             */
extern void GXSetTevColorOp();
/* Function             */
extern void GXSetTevAlphaOp();
/* Function             */
extern void GXSetTevColor();
/* Function             */
extern void GXSetTevColorS10();
/* Function             */
extern void GXSetTevKColor();
/* Function             */
extern void GXSetTevKColorSel();
/* Function             */
extern void GXSetTevKAlphaSel();
/* Function             */
extern void GXSetTevSwapMode();
/* Function             */
extern void GXSetTevSwapModeTable();
/* Function             */
extern void GXSetAlphaCompare();
/* Function             */
extern void GXSetZTexture();
/* Function             */
extern void GXSetTevOrder();
/* Function             */
extern void GXSetNumTevStages();
/* InitializedData      */
SECTION_DATA extern u8 TEVCOpTableST0[20];
/* InitializedData      */
SECTION_DATA extern u8 TEVCOpTableST1[20];
/* InitializedData      */
SECTION_DATA extern u8 TEVAOpTableST0[20];
/* InitializedData      */
SECTION_DATA extern u8 TEVAOpTableST1[20];
/* InitializedData      */
SECTION_DATA extern u8 data_803D2810[40];
/* SymbolReferenceArrayData */
SECTION_SDATA2 extern void* __GXData;
}


/* ###################################################################################### */
/*                                         .data                                          */
/* ###################################################################################### */

extern "C" {
/* 803D27C0-803D27C0 0000 .data      ...data.0                                                    InitializedData */
/* 803D27C0-803D27D4 0014 .data      TEVCOpTableST0                                               InitializedData */
SECTION_DATA u8 TEVCOpTableST0[20] = {
	0xC0, 0x08, 0xF8, 0xAF, 0xC0, 0x08, 0xA8, 0x9F, 0xC0, 0x08, 0xAC, 0x8F, 0xC0, 0x08, 0xFF, 0xF8,
	0xC0, 0x08, 0xFF, 0xFA,
};
/* 803D27D4-803D27E8 0014 .data      TEVCOpTableST1                                               InitializedData */
SECTION_DATA u8 TEVCOpTableST1[20] = {
	0xC0, 0x08, 0xF8, 0x0F, 0xC0, 0x08, 0x08, 0x9F, 0xC0, 0x08, 0x0C, 0x8F, 0xC0, 0x08, 0xFF, 0xF8,
	0xC0, 0x08, 0xFF, 0xF0,
};
/* 803D27E8-803D27FC 0014 .data      TEVAOpTableST0                                               InitializedData */
SECTION_DATA u8 TEVAOpTableST0[20] = {
	0xC1, 0x08, 0xF2, 0xF0, 0xC1, 0x08, 0xFF, 0xD0, 0xC1, 0x08, 0xF2, 0xF0, 0xC1, 0x08, 0xFF, 0xC0,
	0xC1, 0x08, 0xFF, 0xD0,
};
/* 803D27FC-803D2810 0014 .data      TEVAOpTableST1                                               InitializedData */
SECTION_DATA u8 TEVAOpTableST1[20] = {
	0xC1, 0x08, 0xF0, 0x70, 0xC1, 0x08, 0xFF, 0x80, 0xC1, 0x08, 0xF0, 0x70, 0xC1, 0x08, 0xFF, 0xC0,
	0xC1, 0x08, 0xFF, 0x80,
};
/* 803D2810-803D2838 0024 .data      c2r$334                                                      InitializedData */
SECTION_DATA u8 data_803D2810[40] = {
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x01,
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x07, 0x00, 0x00, 0x00, 0x05,
	0x00, 0x00, 0x00, 0x06,
	/* padding */
	0x00, 0x00, 0x00, 0x00,
};
}


/* ###################################################################################### */
/*                                         .text                                          */
/* ###################################################################################### */

extern "C" {
/* 8035F198-8035F224 008C .text      GXSetTevOp                                                   Function */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void GXSetTevOp() {
	nofralloc
#include "_include/gx/GXTev/GXSetTevOp.s"
}
#pragma pop

/* 8035F224-8035F268 0044 .text      GXSetTevColorIn                                              Function */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void GXSetTevColorIn() {
	nofralloc
#include "_include/gx/GXTev/GXSetTevColorIn.s"
}
#pragma pop

/* 8035F268-8035F2AC 0044 .text      GXSetTevAlphaIn                                              Function */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void GXSetTevAlphaIn() {
	nofralloc
#include "_include/gx/GXTev/GXSetTevAlphaIn.s"
}
#pragma pop

/* 8035F2AC-8035F314 0068 .text      GXSetTevColorOp                                              Function */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void GXSetTevColorOp() {
	nofralloc
#include "_include/gx/GXTev/GXSetTevColorOp.s"
}
#pragma pop

/* 8035F314-8035F37C 0068 .text      GXSetTevAlphaOp                                              Function */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void GXSetTevAlphaOp() {
	nofralloc
#include "_include/gx/GXTev/GXSetTevAlphaOp.s"
}
#pragma pop

/* 8035F37C-8035F3DC 0060 .text      GXSetTevColor                                                Function */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void GXSetTevColor() {
	nofralloc
#include "_include/gx/GXTev/GXSetTevColor.s"
}
#pragma pop

/* 8035F3DC-8035F440 0064 .text      GXSetTevColorS10                                             Function */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void GXSetTevColorS10() {
	nofralloc
#include "_include/gx/GXTev/GXSetTevColorS10.s"
}
#pragma pop

/* 8035F440-8035F4A4 0064 .text      GXSetTevKColor                                               Function */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void GXSetTevKColor() {
	nofralloc
#include "_include/gx/GXTev/GXSetTevKColor.s"
}
#pragma pop

/* 8035F4A4-8035F500 005C .text      GXSetTevKColorSel                                            Function */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void GXSetTevKColorSel() {
	nofralloc
#include "_include/gx/GXTev/GXSetTevKColorSel.s"
}
#pragma pop

/* 8035F500-8035F55C 005C .text      GXSetTevKAlphaSel                                            Function */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void GXSetTevKAlphaSel() {
	nofralloc
#include "_include/gx/GXTev/GXSetTevKAlphaSel.s"
}
#pragma pop

/* 8035F55C-8035F5A4 0048 .text      GXSetTevSwapMode                                             Function */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void GXSetTevSwapMode() {
	nofralloc
#include "_include/gx/GXTev/GXSetTevSwapMode.s"
}
#pragma pop

/* 8035F5A4-8035F624 0080 .text      GXSetTevSwapModeTable                                        Function */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void GXSetTevSwapModeTable() {
	nofralloc
#include "_include/gx/GXTev/GXSetTevSwapModeTable.s"
}
#pragma pop

/* 8035F624-8035F668 0044 .text      GXSetAlphaCompare                                            Function */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void GXSetAlphaCompare() {
	nofralloc
#include "_include/gx/GXTev/GXSetAlphaCompare.s"
}
#pragma pop

/* 8035F668-8035F6F4 008C .text      GXSetZTexture                                                Function */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void GXSetZTexture() {
	nofralloc
#include "_include/gx/GXTev/GXSetZTexture.s"
}
#pragma pop

/* 8035F6F4-8035F890 019C .text      GXSetTevOrder                                                Function */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void GXSetTevOrder() {
	nofralloc
#include "_include/gx/GXTev/GXSetTevOrder.s"
}
#pragma pop

/* 8035F890-8035F8B8 0028 .text      GXSetNumTevStages                                            Function */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void GXSetNumTevStages() {
	nofralloc
#include "_include/gx/GXTev/GXSetNumTevStages.s"
}
#pragma pop

}

