// 
// Generated By: dol2asm
// 

// 
// Compiler Options: -str pool,readonly,reuse
// 

#include "dolphin/types.h"

// 
// Additional Symbols:
// 

struct CARDFileInfo;

extern void mDoMemCd_main(void*); /* mDoMemCd_main__FPv */
extern void mDoMemCdRWm_Store(CARDFileInfo*, void*, u32); /* mDoMemCdRWm_Store__FP12CARDFileInfoPvUl */
extern void mDoMemCdRWm_Restore(CARDFileInfo*, void*, u32); /* mDoMemCdRWm_Restore__FP12CARDFileInfoPvUl */

extern "C" {
extern void memcpy();
extern u32 mDoExt_getAssertHeap__Fv();
extern void __ct__15mDoMemCd_Ctrl_cFv();
extern void main__15mDoMemCd_Ctrl_cFv();
extern void restore__15mDoMemCd_Ctrl_cFv();
extern void store__15mDoMemCd_Ctrl_cFv();
extern void getStatus__15mDoMemCd_Ctrl_cFUl();
extern void format__15mDoMemCd_Ctrl_cFv();
extern void attach__15mDoMemCd_Ctrl_cFv();
extern void detach__15mDoMemCd_Ctrl_cFv();
extern void mount__15mDoMemCd_Ctrl_cFv();
extern void loadfile__15mDoMemCd_Ctrl_cFv();
extern void checkspace__15mDoMemCd_Ctrl_cFv();
extern void setCardState__15mDoMemCd_Ctrl_cFl();
extern void mDoMemCd_main__FPv();
extern void mDoMemCdRWm_Store__FP12CARDFileInfoPvUl();
extern void mDoMemCdRWm_Restore__FP12CARDFileInfoPvUl();
extern void becomeCurrentHeap__7JKRHeapFv();
extern void __ct__9JKRThreadFP8OSThreadi();
extern void __dt__9JKRThreadFv();
extern void OSInitMutex();
extern void OSLockMutex();
extern void OSUnlockMutex();
extern void OSTryLockMutex();
extern void OSInitCond();
extern void OSWaitCond();
extern void OSSignalCond();
extern void OSGetCurrentThread();
extern void OSCreateThread();
extern void OSResumeThread();
extern u32 OSGetThreadPriority(u8*);
extern void CARDInit();
extern void CARDFreeBlocks();
extern void CARDCheck();
extern void CARDProbe();
extern void CARDProbeEx();
extern void CARDMount();
extern void CARDUnmount();
extern void CARDFormat();
extern void CARDOpen();
extern void CARDClose();
extern void CARDCreate();
extern void _savegpr_27();
extern void _savegpr_28();
extern void _restgpr_27();
extern void _restgpr_28();
SECTION_RODATA extern const u8 m_Do_m_Do_MemCard__stringBase0[16];
SECTION_DATA extern u8 m_Do_m_Do_MemCard__LIT_3770[56];
SECTION_DATA extern u8 m_Do_m_Do_MemCard__LIT_3850[56];
SECTION_BSS extern u8 MemCardStack[4096];
SECTION_BSS extern u8 MemCardThread[800];
SECTION_BSS extern u8 MemCardWorkArea0[40960];
SECTION_BSS extern u8 g_mDoMemCd_control[8192];
SECTION_SBSS extern u8 mResetData__6mDoRst[4];
}


/* ###################################################################################### */
/*                                        .rodata                                         */
/* ###################################################################################### */

extern "C" {
/* 803743F8 0009 .rodata    @stringBase0                                                 */
const char* const stringBase_803743F8 = "gczelda2";
}


/* ###################################################################################### */
/*                                         .data                                          */
/* ###################################################################################### */

extern "C" {
/* 803A34F8 0038 .data      @3770                                                        */
SECTION_DATA u8 m_Do_m_Do_MemCard__LIT_3770[56] = {
	0x80, 0x01, 0x6D, 0xE8, 0x80, 0x01, 0x6D, 0xC0, 0x80, 0x01, 0x6D, 0xC8, 0x80, 0x01, 0x6D, 0xD0,
	0x80, 0x01, 0x6D, 0xD8, 0x80, 0x01, 0x6D, 0xE0, 0x80, 0x01, 0x6D, 0xF0, 0x80, 0x01, 0x6D, 0xF8,
	0x80, 0x01, 0x6E, 0x00, 0x80, 0x01, 0x6E, 0x08, 0x80, 0x01, 0x6E, 0x10, 0x80, 0x01, 0x6E, 0x18,
	0x80, 0x01, 0x6E, 0x20, 0x80, 0x01, 0x6E, 0x28,
};
/* 803A3530 0038 .data      @3850                                                        */
SECTION_DATA u8 m_Do_m_Do_MemCard__LIT_3850[56] = {
	0x80, 0x01, 0x72, 0x3C, 0x80, 0x01, 0x72, 0x5C, 0x80, 0x01, 0x72, 0x5C, 0x80, 0x01, 0x72, 0x5C,
	0x80, 0x01, 0x72, 0x5C, 0x80, 0x01, 0x72, 0x5C, 0x80, 0x01, 0x72, 0x5C, 0x80, 0x01, 0x72, 0x0C,
	0x80, 0x01, 0x72, 0x1C, 0x80, 0x01, 0x72, 0x5C, 0x80, 0x01, 0x72, 0x2C, 0x80, 0x01, 0x72, 0x5C,
	0x80, 0x01, 0x72, 0x5C, 0x80, 0x01, 0x72, 0x04,
};
}


/* ###################################################################################### */
/*                                          .bss                                          */
/* ###################################################################################### */

extern "C" {
/* 803DFC20 1000 .bss       MemCardStack                                                 */
SECTION_BSS u8 MemCardStack[4096];
/* 803E0C20 0318 .bss       MemCardThread                                                */
SECTION_BSS u8 MemCardThread[800];
/* 803E0F40 A000 .bss       MemCardWorkArea0                                             */
SECTION_BSS u8 MemCardWorkArea0[40960];
/* 803EAF40 2000 .bss       g_mDoMemCd_control                                           */
SECTION_BSS u8 g_mDoMemCd_control[8192];
}


/* ###################################################################################### */
/*                                         .text                                          */
/* ###################################################################################### */

extern "C" {
/* 8001672C 0004 .text      __ct__15mDoMemCd_Ctrl_cFv                                    */
// mDoMemCd_Ctrl_c::mDoMemCd_Ctrl_c(void)
void __ct__15mDoMemCd_Ctrl_cFv() {
	return;
}

/* 80016730 00A0 .text      ThdInit__15mDoMemCd_Ctrl_cFv                                 */
// mDoMemCd_Ctrl_c::ThdInit(void)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void ThdInit__15mDoMemCd_Ctrl_cFv() {
	nofralloc
#include "_include/m_Do/m_Do_MemCard/ThdInit__15mDoMemCd_Ctrl_cFv.s"
}
#pragma pop

/* 800167D0 00C4 .text      main__15mDoMemCd_Ctrl_cFv                                    */
// mDoMemCd_Ctrl_c::main(void)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void main__15mDoMemCd_Ctrl_cFv() {
	nofralloc
#include "_include/m_Do/m_Do_MemCard/main__15mDoMemCd_Ctrl_cFv.s"
}
#pragma pop

/* 80016894 0120 .text      update__15mDoMemCd_Ctrl_cFv                                  */
// mDoMemCd_Ctrl_c::update(void)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void update__15mDoMemCd_Ctrl_cFv() {
	nofralloc
#include "_include/m_Do/m_Do_MemCard/update__15mDoMemCd_Ctrl_cFv.s"
}
#pragma pop

/* 800169B4 0058 .text      load__15mDoMemCd_Ctrl_cFv                                    */
// mDoMemCd_Ctrl_c::load(void)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void load__15mDoMemCd_Ctrl_cFv() {
	nofralloc
#include "_include/m_Do/m_Do_MemCard/load__15mDoMemCd_Ctrl_cFv.s"
}
#pragma pop

/* 80016A0C 00A4 .text      restore__15mDoMemCd_Ctrl_cFv                                 */
// mDoMemCd_Ctrl_c::restore(void)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void restore__15mDoMemCd_Ctrl_cFv() {
	nofralloc
#include "_include/m_Do/m_Do_MemCard/restore__15mDoMemCd_Ctrl_cFv.s"
}
#pragma pop

/* 80016AB0 00A8 .text      LoadSync__15mDoMemCd_Ctrl_cFPvUlUl                           */
// mDoMemCd_Ctrl_c::LoadSync(void*, u32, u32)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void LoadSync__15mDoMemCd_Ctrl_cFPvUlUl() {
	nofralloc
#include "_include/m_Do/m_Do_MemCard/LoadSync__15mDoMemCd_Ctrl_cFPvUlUl.s"
}
#pragma pop

/* 80016B58 007C .text      save__15mDoMemCd_Ctrl_cFPvUlUl                               */
// mDoMemCd_Ctrl_c::save(void*, u32, u32)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void save__15mDoMemCd_Ctrl_cFPvUlUl() {
	nofralloc
#include "_include/m_Do/m_Do_MemCard/save__15mDoMemCd_Ctrl_cFPvUlUl.s"
}
#pragma pop

/* 80016BD4 010C .text      store__15mDoMemCd_Ctrl_cFv                                   */
// mDoMemCd_Ctrl_c::store(void)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void store__15mDoMemCd_Ctrl_cFv() {
	nofralloc
#include "_include/m_Do/m_Do_MemCard/store__15mDoMemCd_Ctrl_cFv.s"
}
#pragma pop

/* 80016CE0 0094 .text      SaveSync__15mDoMemCd_Ctrl_cFv                                */
// mDoMemCd_Ctrl_c::SaveSync(void)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void SaveSync__15mDoMemCd_Ctrl_cFv() {
	nofralloc
#include "_include/m_Do/m_Do_MemCard/SaveSync__15mDoMemCd_Ctrl_cFv.s"
}
#pragma pop

/* 80016D74 00E4 .text      getStatus__15mDoMemCd_Ctrl_cFUl                              */
// mDoMemCd_Ctrl_c::getStatus(u32)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void getStatus__15mDoMemCd_Ctrl_cFUl() {
	nofralloc
#include "_include/m_Do/m_Do_MemCard/getStatus__15mDoMemCd_Ctrl_cFUl.s"
}
#pragma pop

/* 80016E58 0050 .text      command_format__15mDoMemCd_Ctrl_cFv                          */
// mDoMemCd_Ctrl_c::command_format(void)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void command_format__15mDoMemCd_Ctrl_cFv() {
	nofralloc
#include "_include/m_Do/m_Do_MemCard/command_format__15mDoMemCd_Ctrl_cFv.s"
}
#pragma pop

/* 80016EA8 0084 .text      format__15mDoMemCd_Ctrl_cFv                                  */
// mDoMemCd_Ctrl_c::format(void)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void format__15mDoMemCd_Ctrl_cFv() {
	nofralloc
#include "_include/m_Do/m_Do_MemCard/format__15mDoMemCd_Ctrl_cFv.s"
}
#pragma pop

/* 80016F2C 008C .text      FormatSync__15mDoMemCd_Ctrl_cFv                              */
// mDoMemCd_Ctrl_c::FormatSync(void)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void FormatSync__15mDoMemCd_Ctrl_cFv() {
	nofralloc
#include "_include/m_Do/m_Do_MemCard/FormatSync__15mDoMemCd_Ctrl_cFv.s"
}
#pragma pop

/* 80016FB8 0100 .text      attach__15mDoMemCd_Ctrl_cFv                                  */
// mDoMemCd_Ctrl_c::attach(void)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void attach__15mDoMemCd_Ctrl_cFv() {
	nofralloc
#include "_include/m_Do/m_Do_MemCard/attach__15mDoMemCd_Ctrl_cFv.s"
}
#pragma pop

/* 800170B8 0058 .text      command_attach__15mDoMemCd_Ctrl_cFv                          */
// mDoMemCd_Ctrl_c::command_attach(void)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void command_attach__15mDoMemCd_Ctrl_cFv() {
	nofralloc
#include "_include/m_Do/m_Do_MemCard/command_attach__15mDoMemCd_Ctrl_cFv.s"
}
#pragma pop

/* 80017110 0038 .text      detach__15mDoMemCd_Ctrl_cFv                                  */
// mDoMemCd_Ctrl_c::detach(void)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void detach__15mDoMemCd_Ctrl_cFv() {
	nofralloc
#include "_include/m_Do/m_Do_MemCard/detach__15mDoMemCd_Ctrl_cFv.s"
}
#pragma pop

/* 80017148 012C .text      mount__15mDoMemCd_Ctrl_cFv                                   */
// mDoMemCd_Ctrl_c::mount(void)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void mount__15mDoMemCd_Ctrl_cFv() {
	nofralloc
#include "_include/m_Do/m_Do_MemCard/mount__15mDoMemCd_Ctrl_cFv.s"
}
#pragma pop

/* 80017274 0060 .text      loadfile__15mDoMemCd_Ctrl_cFv                                */
// mDoMemCd_Ctrl_c::loadfile(void)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void loadfile__15mDoMemCd_Ctrl_cFv() {
	nofralloc
#include "_include/m_Do/m_Do_MemCard/loadfile__15mDoMemCd_Ctrl_cFv.s"
}
#pragma pop

/* 800172D4 008C .text      checkspace__15mDoMemCd_Ctrl_cFv                              */
// mDoMemCd_Ctrl_c::checkspace(void)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void checkspace__15mDoMemCd_Ctrl_cFv() {
	nofralloc
#include "_include/m_Do/m_Do_MemCard/checkspace__15mDoMemCd_Ctrl_cFv.s"
}
#pragma pop

/* 80017360 00BC .text      setCardState__15mDoMemCd_Ctrl_cFl                            */
// mDoMemCd_Ctrl_c::setCardState(s32)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void setCardState__15mDoMemCd_Ctrl_cFl() {
	nofralloc
#include "_include/m_Do/m_Do_MemCard/setCardState__15mDoMemCd_Ctrl_cFl.s"
}
#pragma pop

/* 8001741C 0054 .text      mDoMemCd_main__FPv                                           */
}

#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void mDoMemCd_main(void*) {
	nofralloc
#include "_include/m_Do/m_Do_MemCard/mDoMemCd_main__FPv.s"
}
#pragma pop

extern "C" {
/* 80017470 0028 .text      __sinit_m_Do_MemCard_cpp                                     */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void __sinit_m_Do_MemCard_cpp() {
	nofralloc
#include "_include/m_Do/m_Do_MemCard/__sinit_m_Do_MemCard_cpp.s"
}
#pragma pop

}

