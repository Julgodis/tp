// 
// Generated By: dol2asm
// 

// 
// Compiler Options: -str pool,readonly,reuse
// 

#include "dolphin/types.h"

// 
// Additional Symbols:
// 

struct JKRHeap;
struct node_list_class;
struct node_class;

extern void my_DVDConvertPathToEntrynum(const s8*); /* my_DVDConvertPathToEntrynum__FPCc */
extern void cb(void*); /* cb__FPv */
extern void cLs_SingleCut(node_class*); /* cLs_SingleCut__FP10node_class */
extern void cLs_Addition(node_list_class*, node_class*); /* cLs_Addition__FP15node_list_classP10node_class */
extern void cLs_Create(node_list_class*); /* cLs_Create__FP15node_list_class */
extern void cNd_ForcedClear(node_class*); /* cNd_ForcedClear__FP10node_class */
extern void* operator new(u32, JKRHeap*, int); /* __nw__FUlP7JKRHeapi */
extern void operator delete(void*); /* __dl__FPv */

extern "C" {
extern void OSReport_FatalError();
extern void OSReport_Error();
extern u32 mDoExt_getAssertHeap__Fv();
extern u32 mDoExt_getGameHeap__Fv();
extern u32 mDoExt_getZeldaHeap__Fv();
extern u32 mDoExt_getCommandHeap__Fv();
extern u32 mDoExt_getArchiveHeap__Fv();
extern u32 mDoExt_getArchiveHeapPtr__Fv();
extern u32 mDoExt_getJ2dHeap__Fv();
extern void main__9mDoDvdThdFPv();
extern void my_DVDConvertPathToEntrynum__FPCc();
extern void __dt__19mDoDvdThd_command_cFv();
extern void __ct__17mDoDvdThd_param_cFv();
extern void kick__17mDoDvdThd_param_cFv();
extern void waitForKick__17mDoDvdThd_param_cFv();
extern u32 getFirstCommand__17mDoDvdThd_param_cFv(u8*);
extern void addition__17mDoDvdThd_param_cFP19mDoDvdThd_command_c();
extern void cut__17mDoDvdThd_param_cFP19mDoDvdThd_command_c();
extern void cb__FPv();
extern void mainLoop__17mDoDvdThd_param_cFv();
extern void __ct__19mDoDvdThd_command_cFv();
extern void __dt__20mDoDvdThd_callback_cFv();
extern void __ct__20mDoDvdThd_callback_cFPFPv_PvPv();
extern void execute__20mDoDvdThd_callback_cFv();
extern void __dt__24mDoDvdThd_mountArchive_cFv();
extern void __ct__24mDoDvdThd_mountArchive_cFUc();
extern void execute__24mDoDvdThd_mountArchive_cFv();
extern void __dt__25mDoDvdThd_mountXArchive_cFv();
extern void __ct__25mDoDvdThd_mountXArchive_cFUcQ210JKRArchive10EMountMode();
extern void execute__25mDoDvdThd_mountXArchive_cFv();
extern void __ct__21mDoDvdThd_toMainRam_cFUc();
extern void __dt__21mDoDvdThd_toMainRam_cFv();
extern void execute__21mDoDvdThd_toMainRam_cFv();
extern void cLs_SingleCut__FP10node_class();
extern void cLs_Addition__FP15node_list_classP10node_class();
extern void cLs_Create__FP15node_list_class();
extern void cNd_ForcedClear__FP10node_class();
extern void sendCmdMsg__13JASTaskThreadFPFPv_vPCvUl();
extern u32 getThreadPointer__6JASDvdFv();
extern void becomeCurrentHeap__7JKRHeapFv();
extern void getSize__7JKRHeapFPv();
extern void __nw__FUlP7JKRHeapi();
extern void __dl__FPv();
extern void __ct__9JKRThreadFP8OSThreadi();
extern void __dt__9JKRThreadFv();
extern void mount__10JKRArchiveFlQ210JKRArchive10EMountModeP7JKRHeapQ210JKRArchive15EMountDirection();
extern void __ct__13JKRMemArchiveFlQ210JKRArchive15EMountDirection();
extern void loadToMainRAM__12JKRDvdRipperFlPUc15JKRExpandSwitchUlP7JKRHeapQ212JKRDvdRipper15EAllocDirectionUlPiPUl();
extern void OSInitMessageQueue();
extern void OSSendMessage();
extern void OSReceiveMessage();
extern void OSInitMutex();
extern void OSLockMutex();
extern void OSUnlockMutex();
extern void OSGetCurrentThread();
extern void OSCreateThread();
extern void OSResumeThread();
extern void OSSuspendThread();
extern void DVDConvertPathToEntrynum();
extern void _savegpr_25();
extern void _savegpr_27();
extern void _savegpr_28();
extern void _savegpr_29();
extern void _restgpr_25();
extern void _restgpr_27();
extern void _restgpr_28();
extern void _restgpr_29();
SECTION_RODATA extern const u8 m_Do_m_Do_dvd_thread__stringBase0[592];
SECTION_DATA extern const void* __vt__21mDoDvdThd_toMainRam_c[4];
SECTION_DATA extern const void* __vt__25mDoDvdThd_mountXArchive_c[4];
SECTION_DATA extern const void* __vt__24mDoDvdThd_mountArchive_c[4];
SECTION_DATA extern const void* __vt__20mDoDvdThd_callback_c[4];
SECTION_DATA extern const void* __vt__19mDoDvdThd_command_c[4];
SECTION_BSS extern u8 l_thread__9mDoDvdThd[800];
SECTION_BSS extern u8 l_param__9mDoDvdThd[96];
SECTION_SBSS extern u8 merged_80450C80[8];
}


/* ###################################################################################### */
/*                                        .rodata                                         */
/* ###################################################################################### */

extern "C" {
/* 803741A8 0250 .rodata    @stringBase0                                                 */
const char* const stringBase_803741A8 = 
    "mDoDvdThd_param_c::mainLoop() コマ"
    "ンドの実行が失敗しました。\n";
const char* const stringBase_803741E6 = 
    "mDoDvdThd_mountArchive_c::execut"
    "e マウント失敗\n";
const char* const stringBase_80374216 = 
    "mDoDvdThd_mountArchive_c::execut"
    "e ゼルダヒープで再チャレンジ！\n";
const char* const stringBase_80374256 = 
    "mDoDvdThd_mountArchive_c::execut"
    "e アーカイブヒープで再チャレンジ！\n";
const char* const stringBase_8037429A = 
    "mDoDvdThd_mountArchive_c::execut"
    "e ゲームヒープで再チャレンジ！\n";
const char* const stringBase_803742DA = 
    "mDoDvdThd_mountArchive_c::execut"
    "e J2Dヒープで再チャレンジ！\n";
const char* const stringBase_80374317 = 
    "mDoDvdThd_mountArchive_c::execut"
    "e ヒープが致命的に足りません！\n";
const char* const stringBase_80374357 = 
    "mDoDvdThd_getResource_c::create("
    ") クラス生成に失敗\n";
// MWCC ignores mapping of some japanese characters using the 
// byte 0x5C (ASCII '\') because of a C++98 standard. This is
// why this string is hex-encoded.
const char* const stringBase_8037438B = 
    """\x6D""""\x44""""\x6F""""\x44""""\x76""""\x64""""\x54""""\x68""""\x64""""\x5F""""\x67""""\x65""""\x74""""\x52""""\x65""""\x73""""\x6F""""\x75""""\x72""""\x63""""\x65""""\x5F""""\x63""""\x3A""""\x3A""""\x63""""\x72""""\x65""""\x61""""\x74""""\x65""""\x28"""
    """\x29""""\x20""""\x83""""\x8A""""\x83""""\x5C""""\x81""""\x5B""""\x83""""\x58""""\x8E""""\xE6""""\x93""""\xBE""""\x82""""\xC9""""\x8E""""\xB8""""\x94""""\x73""""\x0A""";
// MWCC ignores mapping of some japanese characters using the 
// byte 0x5C (ASCII '\') because of a C++98 standard. This is
// why this string is hex-encoded.
const char* const stringBase_803743C1 = 
    """\x6D""""\x44""""\x6F""""\x44""""\x76""""\x64""""\x54""""\x68""""\x64""""\x5F""""\x67""""\x65""""\x74""""\x52""""\x65""""\x73""""\x6F""""\x75""""\x72""""\x63""""\x65""""\x5F""""\x63""""\x3A""""\x3A""""\x65""""\x78""""\x65""""\x63""""\x75""""\x74""""\x65"""
    """\x28""""\x29""""\x20""""\x83""""\x8A""""\x83""""\x5C""""\x81""""\x5B""""\x83""""\x58""""\x8E""""\xE6""""\x93""""\xBE""""\x82""""\xC9""""\x8E""""\xB8""""\x94""""\x73""""\x0A""";
}


/* ###################################################################################### */
/*                                         .data                                          */
/* ###################################################################################### */

extern "C" {
/* 803A34A8 0010 .data      __vt__21mDoDvdThd_toMainRam_c                                */
SECTION_DATA const  void* __vt__21mDoDvdThd_toMainRam_c[4] = {
	NULL, /* RTTI */
	NULL,
	(void*)__dt__21mDoDvdThd_toMainRam_cFv,
	(void*)execute__21mDoDvdThd_toMainRam_cFv,
};
/* 803A34B8 0010 .data      __vt__25mDoDvdThd_mountXArchive_c                            */
SECTION_DATA const  void* __vt__25mDoDvdThd_mountXArchive_c[4] = {
	NULL, /* RTTI */
	NULL,
	(void*)__dt__25mDoDvdThd_mountXArchive_cFv,
	(void*)execute__25mDoDvdThd_mountXArchive_cFv,
};
/* 803A34C8 0010 .data      __vt__24mDoDvdThd_mountArchive_c                             */
SECTION_DATA const  void* __vt__24mDoDvdThd_mountArchive_c[4] = {
	NULL, /* RTTI */
	NULL,
	(void*)__dt__24mDoDvdThd_mountArchive_cFv,
	(void*)execute__24mDoDvdThd_mountArchive_cFv,
};
/* 803A34D8 0010 .data      __vt__20mDoDvdThd_callback_c                                 */
SECTION_DATA const  void* __vt__20mDoDvdThd_callback_c[4] = {
	NULL, /* RTTI */
	NULL,
	(void*)__dt__20mDoDvdThd_callback_cFv,
	(void*)execute__20mDoDvdThd_callback_cFv,
};
/* 803A34E8 0010 .data      __vt__19mDoDvdThd_command_c                                  */
SECTION_DATA const  void* __vt__19mDoDvdThd_command_c[4] = {
	NULL, /* RTTI */
	NULL,
	(void*)__dt__19mDoDvdThd_command_cFv,
	NULL,
};
}


/* ###################################################################################### */
/*                                          .bss                                          */
/* ###################################################################################### */

extern "C" {
/* 803DD940 0000 .bss       ...bss.0                                                     */
/* 803DD940 0318 .bss       l_thread__9mDoDvdThd                                         */
SECTION_BSS u8 l_thread__9mDoDvdThd[800];
/* 803DDC60 1000 .bss       l_threadStack__9mDoDvdThd                                    */
SECTION_BSS u8 l_threadStack__9mDoDvdThd[4096];
/* 803DEC60 0048 .bss       l_param__9mDoDvdThd                                          */
SECTION_BSS u8 l_param__9mDoDvdThd[96];
}


/* ###################################################################################### */
/*                                         .text                                          */
/* ###################################################################################### */

extern "C" {
/* 800157FC 005C .text      main__9mDoDvdThdFPv                                          */
// mDoDvdThd::main(void*)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void main__9mDoDvdThdFPv() {
	nofralloc
#include "_include/m_Do/m_Do_dvd_thread/main__9mDoDvdThdFPv.s"
}
#pragma pop

/* 80015858 005C .text      create__9mDoDvdThdFl                                         */
// mDoDvdThd::create(s32)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void create__9mDoDvdThdFl() {
	nofralloc
#include "_include/m_Do/m_Do_dvd_thread/create__9mDoDvdThdFl.s"
}
#pragma pop

/* 800158B4 0028 .text      suspend__9mDoDvdThdFv                                        */
// mDoDvdThd::suspend(void)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void suspend__9mDoDvdThdFv() {
	nofralloc
#include "_include/m_Do/m_Do_dvd_thread/suspend__9mDoDvdThdFv.s"
}
#pragma pop

/* 800158DC 0020 .text      my_DVDConvertPathToEntrynum__FPCc                            */
}

#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void my_DVDConvertPathToEntrynum(const s8*) {
	nofralloc
#include "_include/m_Do/m_Do_dvd_thread/my_DVDConvertPathToEntrynum__FPCc.s"
}
#pragma pop

extern "C" {
/* 800158FC 0048 .text      __dt__19mDoDvdThd_command_cFv                                */
// mDoDvdThd_command_c::~mDoDvdThd_command_c(void)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void __dt__19mDoDvdThd_command_cFv() {
	nofralloc
#include "_include/m_Do/m_Do_dvd_thread/__dt__19mDoDvdThd_command_cFv.s"
}
#pragma pop

/* 80015944 0048 .text      __ct__17mDoDvdThd_param_cFv                                  */
// mDoDvdThd_param_c::mDoDvdThd_param_c(void)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void __ct__17mDoDvdThd_param_cFv() {
	nofralloc
#include "_include/m_Do/m_Do_dvd_thread/__ct__17mDoDvdThd_param_cFv.s"
}
#pragma pop

/* 8001598C 0028 .text      kick__17mDoDvdThd_param_cFv                                  */
// mDoDvdThd_param_c::kick(void)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void kick__17mDoDvdThd_param_cFv() {
	nofralloc
#include "_include/m_Do/m_Do_dvd_thread/kick__17mDoDvdThd_param_cFv.s"
}
#pragma pop

/* 800159B4 0028 .text      waitForKick__17mDoDvdThd_param_cFv                           */
// mDoDvdThd_param_c::waitForKick(void)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void waitForKick__17mDoDvdThd_param_cFv() {
	nofralloc
#include "_include/m_Do/m_Do_dvd_thread/waitForKick__17mDoDvdThd_param_cFv.s"
}
#pragma pop

/* 800159DC 0008 .text      getFirstCommand__17mDoDvdThd_param_cFv                       */
// mDoDvdThd_param_c::getFirstCommand(void)
u32 getFirstCommand__17mDoDvdThd_param_cFv(u8* param0) {
	return *(u32*)&param0[36]; /* param0->field_0x24 */
}

/* 800159E4 0058 .text      addition__17mDoDvdThd_param_cFP19mDoDvdThd_command_c         */
// mDoDvdThd_param_c::addition(mDoDvdThd_command_c*)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void addition__17mDoDvdThd_param_cFP19mDoDvdThd_command_c() {
	nofralloc
#include "_include/m_Do/m_Do_dvd_thread/addition__17mDoDvdThd_param_cFP19mDoDvdThd_command_c.s"
}
#pragma pop

/* 80015A3C 0054 .text      cut__17mDoDvdThd_param_cFP19mDoDvdThd_command_c              */
// mDoDvdThd_param_c::cut(mDoDvdThd_command_c*)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void cut__17mDoDvdThd_param_cFP19mDoDvdThd_command_c() {
	nofralloc
#include "_include/m_Do/m_Do_dvd_thread/cut__17mDoDvdThd_param_cFP19mDoDvdThd_command_c.s"
}
#pragma pop

/* 80015A90 0048 .text      cb__FPv                                                      */
}

#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void cb(void*) {
	nofralloc
#include "_include/m_Do/m_Do_dvd_thread/cb__FPv.s"
}
#pragma pop

extern "C" {
/* 80015AD8 009C .text      mainLoop__17mDoDvdThd_param_cFv                              */
// mDoDvdThd_param_c::mainLoop(void)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void mainLoop__17mDoDvdThd_param_cFv() {
	nofralloc
#include "_include/m_Do/m_Do_dvd_thread/mainLoop__17mDoDvdThd_param_cFv.s"
}
#pragma pop

/* 80015B74 0044 .text      __ct__19mDoDvdThd_command_cFv                                */
// mDoDvdThd_command_c::mDoDvdThd_command_c(void)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void __ct__19mDoDvdThd_command_cFv() {
	nofralloc
#include "_include/m_Do/m_Do_dvd_thread/__ct__19mDoDvdThd_command_cFv.s"
}
#pragma pop

/* 80015BB8 0060 .text      __dt__20mDoDvdThd_callback_cFv                               */
// mDoDvdThd_callback_c::~mDoDvdThd_callback_c(void)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void __dt__20mDoDvdThd_callback_cFv() {
	nofralloc
#include "_include/m_Do/m_Do_dvd_thread/__dt__20mDoDvdThd_callback_cFv.s"
}
#pragma pop

/* 80015C18 005C .text      __ct__20mDoDvdThd_callback_cFPFPv_PvPv                       */
// mDoDvdThd_callback_c::mDoDvdThd_callback_c(void* (*)(void*), void*)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void __ct__20mDoDvdThd_callback_cFPFPv_PvPv() {
	nofralloc
#include "_include/m_Do/m_Do_dvd_thread/__ct__20mDoDvdThd_callback_cFPFPv_PvPv.s"
}
#pragma pop

/* 80015C74 007C .text      create__20mDoDvdThd_callback_cFPFPv_PvPv                     */
// mDoDvdThd_callback_c::create(void* (*)(void*), void*)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void create__20mDoDvdThd_callback_cFPFPv_PvPv() {
	nofralloc
#include "_include/m_Do/m_Do_dvd_thread/create__20mDoDvdThd_callback_cFPFPv_PvPv.s"
}
#pragma pop

/* 80015CF0 0054 .text      execute__20mDoDvdThd_callback_cFv                            */
// mDoDvdThd_callback_c::execute(void)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void execute__20mDoDvdThd_callback_cFv() {
	nofralloc
#include "_include/m_Do/m_Do_dvd_thread/execute__20mDoDvdThd_callback_cFv.s"
}
#pragma pop

/* 80015D44 0060 .text      __dt__24mDoDvdThd_mountArchive_cFv                           */
// mDoDvdThd_mountArchive_c::~mDoDvdThd_mountArchive_c(void)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void __dt__24mDoDvdThd_mountArchive_cFv() {
	nofralloc
#include "_include/m_Do/m_Do_dvd_thread/__dt__24mDoDvdThd_mountArchive_cFv.s"
}
#pragma pop

/* 80015DA4 0070 .text      __ct__24mDoDvdThd_mountArchive_cFUc                          */
// mDoDvdThd_mountArchive_c::mDoDvdThd_mountArchive_c(u8)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void __ct__24mDoDvdThd_mountArchive_cFUc() {
	nofralloc
#include "_include/m_Do/m_Do_dvd_thread/__ct__24mDoDvdThd_mountArchive_cFUc.s"
}
#pragma pop

/* 80015E14 00C8 .text      create__24mDoDvdThd_mountArchive_cFPCcUcP7JKRHeap            */
// mDoDvdThd_mountArchive_c::create(const s8*, u8, JKRHeap*)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void create__24mDoDvdThd_mountArchive_cFPCcUcP7JKRHeap() {
	nofralloc
#include "_include/m_Do/m_Do_dvd_thread/create__24mDoDvdThd_mountArchive_cFPCcUcP7JKRHeap.s"
}
#pragma pop

/* 80015EDC 022C .text      execute__24mDoDvdThd_mountArchive_cFv                        */
// mDoDvdThd_mountArchive_c::execute(void)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void execute__24mDoDvdThd_mountArchive_cFv() {
	nofralloc
#include "_include/m_Do/m_Do_dvd_thread/execute__24mDoDvdThd_mountArchive_cFv.s"
}
#pragma pop

/* 80016108 0060 .text      __dt__25mDoDvdThd_mountXArchive_cFv                          */
// mDoDvdThd_mountXArchive_c::~mDoDvdThd_mountXArchive_c(void)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void __dt__25mDoDvdThd_mountXArchive_cFv() {
	nofralloc
#include "_include/m_Do/m_Do_dvd_thread/__dt__25mDoDvdThd_mountXArchive_cFv.s"
}
#pragma pop

/* 80016168 0078 .text      __ct__25mDoDvdThd_mountXArchive_cFUcQ210JKRArchive10EMountMode */
// mDoDvdThd_mountXArchive_c::mDoDvdThd_mountXArchive_c(u8, JKRArchive::EMountMode)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void __ct__25mDoDvdThd_mountXArchive_cFUcQ210JKRArchive10EMountMode() {
	nofralloc
#include "_include/m_Do/m_Do_dvd_thread/__ct__25mDoDvdThd_mountXArchive_cFUcQ210JKRArchive10EMountMode.s"
}
#pragma pop

/* 800161E0 00D0 .text      create__25mDoDvdThd_mountXArchive_cFPCcUcQ210JKRArchive10EMountModeP7JKRHeap */
// mDoDvdThd_mountXArchive_c::create(const s8*, u8, JKRArchive::EMountMode, JKRHeap*)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void create__25mDoDvdThd_mountXArchive_cFPCcUcQ210JKRArchive10EMountModeP7JKRHeap() {
	nofralloc
#include "_include/m_Do/m_Do_dvd_thread/create__25mDoDvdThd_mountXArchive_cFPCcUcQ210JKRArchive10EMountModeP7JKRHeap.s"
}
#pragma pop

/* 800162B0 0088 .text      execute__25mDoDvdThd_mountXArchive_cFv                       */
// mDoDvdThd_mountXArchive_c::execute(void)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void execute__25mDoDvdThd_mountXArchive_cFv() {
	nofralloc
#include "_include/m_Do/m_Do_dvd_thread/execute__25mDoDvdThd_mountXArchive_cFv.s"
}
#pragma pop

/* 80016338 005C .text      __ct__21mDoDvdThd_toMainRam_cFUc                             */
// mDoDvdThd_toMainRam_c::mDoDvdThd_toMainRam_c(u8)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void __ct__21mDoDvdThd_toMainRam_cFUc() {
	nofralloc
#include "_include/m_Do/m_Do_dvd_thread/__ct__21mDoDvdThd_toMainRam_cFUc.s"
}
#pragma pop

/* 80016394 00C8 .text      create__21mDoDvdThd_toMainRam_cFPCcUcP7JKRHeap               */
// mDoDvdThd_toMainRam_c::create(const s8*, u8, JKRHeap*)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void create__21mDoDvdThd_toMainRam_cFPCcUcP7JKRHeap() {
	nofralloc
#include "_include/m_Do/m_Do_dvd_thread/create__21mDoDvdThd_toMainRam_cFPCcUcP7JKRHeap.s"
}
#pragma pop

/* 8001645C 0060 .text      __dt__21mDoDvdThd_toMainRam_cFv                              */
// mDoDvdThd_toMainRam_c::~mDoDvdThd_toMainRam_c(void)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void __dt__21mDoDvdThd_toMainRam_cFv() {
	nofralloc
#include "_include/m_Do/m_Do_dvd_thread/__dt__21mDoDvdThd_toMainRam_cFv.s"
}
#pragma pop

/* 800164BC 00B8 .text      execute__21mDoDvdThd_toMainRam_cFv                           */
// mDoDvdThd_toMainRam_c::execute(void)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void execute__21mDoDvdThd_toMainRam_cFv() {
	nofralloc
#include "_include/m_Do/m_Do_dvd_thread/execute__21mDoDvdThd_toMainRam_cFv.s"
}
#pragma pop

/* 80016574 0028 .text      __sinit_m_Do_dvd_thread_cpp                                  */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void __sinit_m_Do_dvd_thread_cpp() {
	nofralloc
#include "_include/m_Do/m_Do_dvd_thread/__sinit_m_Do_dvd_thread_cpp.s"
}
#pragma pop

}

