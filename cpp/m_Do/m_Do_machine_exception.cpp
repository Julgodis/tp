// 
// Generated By: dol2asm
// 

// 
// Compiler Options: -str pool,readonly,reuse
// 

#include "dolphin/types.h"

// 
// Additional Symbols:
// 

struct JUTConsole;

extern void print_f(const s8*, ...); /* print_f__FPCce */
extern void print(const s8*); /* print__FPCc */
extern void dispHeapInfo(void); /* dispHeapInfo__Fv */
extern void dispGameInfo(void); /* dispGameInfo__Fv */
extern void dispDateInfo(void); /* dispDateInfo__Fv */
extern void dispConsoleToTerminal(void); /* dispConsoleToTerminal__Fv */

extern "C" {
extern void print_f__FPCce();
extern void print__FPCc();
extern void dispHeapInfo__Fv();
extern void dispGameInfo__Fv();
extern void dispDateInfo__Fv();
extern void dispConsoleToTerminal__Fv();
extern void dump__14dRes_control_cFv();
extern void dump__24DynamicModuleControlBaseFv();
extern void getFreeSize__7JKRHeapFv();
extern void getTotalFreeSize__7JKRHeapFv();
extern void dump__11JKRAramHeapFv();
extern void print__10JUTConsoleFPCc();
extern void JUTConsole_print_f_va_();
extern void dumpToTerminal__10JUTConsoleFUi();
extern void OSTicksToCalendarTime();
extern void _savegpr_23();
extern void _restgpr_23();
SECTION_RODATA extern const u8 m_Do_m_Do_machine_exception__stringBase0[480];
SECTION_DATA extern u8 COPYDATE_STRING__7mDoMain[20];
SECTION_BSS extern u8 g_dComIfG_gameInfo[122384];
SECTION_SBSS extern u8 sPowerOnTime__7mDoMain[4];
SECTION_SBSS extern u8 data_80450B0C[4];
SECTION_SBSS extern u8 sHungUpTime__7mDoMain[4];
SECTION_SBSS extern u8 data_80450B14[4];
SECTION_SBSS extern u8 gameHeap[4];
SECTION_SBSS extern u8 zeldaHeap[4];
SECTION_SBSS extern u8 archiveHeap[4];
SECTION_SBSS extern u8 sConsole[4];
SECTION_SBSS extern u8 systemConsole__9JFWSystem[4];
SECTION_SBSS extern u8 sAramObject__7JKRAram[4];
}


/* ###################################################################################### */
/*                                        .rodata                                         */
/* ###################################################################################### */

extern "C" {
/* 80374460 01DF .rodata    @stringBase0                                                 */
const char* const stringBase_80374460 = 
    "--------------------------------"
    "------\n";
const char* const stringBase_80374488 = 
    "-- Heap Free / TotalFree (KB) --"
    "\n";
const char* const stringBase_803744AA = "  Zelda %5d / %5d\n";
const char* const stringBase_803744BD = "   Game %5d / %5d\n";
const char* const stringBase_803744D0 = "Archive %5d / %5d\n";
const char* const stringBase_803744E3 = 
    "--------------------------------"
    "\n";
const char* const stringBase_80374505 = "Start StageName:RoomNo [%s:%d]\n";
const char* const stringBase_80374525 = 
    "------------- Date Infomation --"
    "-------\n";
const char* const stringBase_8037454E = " FINAL VERSION\n";
const char* const stringBase_8037455E = "COMPILE USER: FINAL\n";
const char* const stringBase_80374573 = "COPYDATE   : %17s\n";
const char* const stringBase_80374586 = 
    "PowerOnTime: %04d/%2d/%2d %2d:%2"
    "d:%2d`%03d\"%03d\n";
const char* const stringBase_803745B7 = 
    "HungUpTime : %04d/%2d/%2d %2d:%2"
    "d:%2d`%03d\"%03d\n";
const char* const stringBase_803745E8 = 
    "PlayTime   : %4d days, %2d:%2d:%"
    "2d`%03d\"%03d\n";
const char* const stringBase_80374616 = 
    "--------------------------------"
    "-------\n";
}


/* ###################################################################################### */
/*                                         .sbss                                          */
/* ###################################################################################### */

extern "C" {
/* 80450C90 0004 .sbss      sConsole                                                     */
SECTION_SBSS u8 sConsole[4];
SECTION_SBSS u8 pad_80450C94[4];
SECTION_SBSS u8 pad_80450C98[4];
SECTION_SBSS u8 pad_80450C9C[4];
SECTION_SBSS u8 pad_80450CA0[4];
}


/* ###################################################################################### */
/*                                         .text                                          */
/* ###################################################################################### */

extern "C" {
/* 80017D7C 008C .text      print_f__FPCce                                               */
}

#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void print_f(const s8*, ...) {
	nofralloc
#include "_include/m_Do/m_Do_machine_exception/print_f__FPCce.s"
}
#pragma pop

extern "C" {
/* 80017E08 0028 .text      print__FPCc                                                  */
}

#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void print(const s8*) {
	nofralloc
#include "_include/m_Do/m_Do_machine_exception/print__FPCc.s"
}
#pragma pop

extern "C" {
/* 80017E30 015C .text      dispHeapInfo__Fv                                             */
}

#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void dispHeapInfo(void) {
	nofralloc
#include "_include/m_Do/m_Do_machine_exception/dispHeapInfo__Fv.s"
}
#pragma pop

extern "C" {
/* 80017F8C 0044 .text      dispGameInfo__Fv                                             */
}

#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void dispGameInfo(void) {
	nofralloc
#include "_include/m_Do/m_Do_machine_exception/dispGameInfo__Fv.s"
}
#pragma pop

extern "C" {
/* 80017FD0 0154 .text      dispDateInfo__Fv                                             */
}

#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void dispDateInfo(void) {
	nofralloc
#include "_include/m_Do/m_Do_machine_exception/dispDateInfo__Fv.s"
}
#pragma pop

extern "C" {
/* 80018124 0028 .text      dispConsoleToTerminal__Fv                                    */
}

#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void dispConsoleToTerminal(void) {
	nofralloc
#include "_include/m_Do/m_Do_machine_exception/dispConsoleToTerminal__Fv.s"
}
#pragma pop

extern "C" {
/* 8001814C 0030 .text      exception_addition__FP10JUTConsole                           */
}

#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void exception_addition(JUTConsole*) {
	nofralloc
#include "_include/m_Do/m_Do_machine_exception/exception_addition__FP10JUTConsole.s"
}
#pragma pop

extern "C" {
}

