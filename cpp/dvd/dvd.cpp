// 
// Generated By: dol2asm
// 

#include "dolphin/types.h"

// 
// Additional Symbols:
// 

extern "C" {
/* Function             */
SECTION_INIT extern void memcpy();
/* Function             */
extern void OSReport();
/* Function             */
extern void OSPanic();
/* Function             */
extern void OSRegisterVersion();
/* Function             */
extern void OSCreateAlarm();
/* Function             */
extern void OSSetAlarm();
/* Function             */
extern void DCInvalidateRange();
/* Function             */
extern void OSDisableInterrupts();
/* Function             */
extern void OSRestoreInterrupts();
/* Function             */
extern void __OSSetInterruptHandler();
/* Function             */
extern void __OSUnmaskInterrupts();
/* Function             */
extern void OSInitThreadQueue();
/* Function             */
extern void OSSleepThread();
/* Function             */
extern void OSWakeupThread();
/* Function             */
extern void __DVDInitWA();
/* Function             */
extern void __DVDInterruptHandler();
/* Function             */
extern void DVDLowRead();
/* Function             */
extern void DVDLowSeek();
/* Function             */
extern void DVDLowWaitCoverClose();
/* Function             */
extern void DVDLowReadDiskID();
/* Function             */
extern void DVDLowStopMotor();
/* Function             */
extern void DVDLowRequestError();
/* Function             */
extern void DVDLowInquiry();
/* Function             */
extern void DVDLowAudioStream();
/* Function             */
extern void DVDLowRequestAudioStatus();
/* Function             */
extern void DVDLowAudioBufferConfig();
/* Function             */
extern void DVDLowReset();
/* Function             */
extern void DVDLowBreak();
/* Function             */
extern void DVDLowClearCallback();
/* Function             */
extern void __DVDLowTestAlarm();
/* Function             */
extern void __DVDFSInit();
/* ReturnFunction       */
extern void defaultOptionalCommandChecker();
/* Function             */
extern void DVDInit();
/* Function             */
extern void stateReadingFST();
/* Function             */
extern void cbForStateReadingFST();
/* Function             */
extern void cbForStateError();
/* Function             */
extern void stateTimeout();
/* Function             */
extern void stateGettingError();
/* Function             */
extern void CategorizeError();
/* Function             */
extern void cbForStateGettingError();
/* Function             */
extern void cbForUnrecoveredError();
/* Function             */
extern void cbForUnrecoveredErrorRetry();
/* Function             */
extern void stateGoToRetry();
/* Function             */
extern void cbForStateGoToRetry();
/* Function             */
extern void stateCheckID();
/* Function             */
extern void stateCheckID3();
/* Function             */
extern void stateCheckID2a();
/* Function             */
extern void cbForStateCheckID2a();
/* Function             */
extern void stateCheckID2();
/* Function             */
extern void cbForStateCheckID1();
/* Function             */
extern void cbForStateCheckID2();
/* Function             */
extern void cbForStateCheckID3();
/* Function             */
extern void dvd__AlarmHandler();
/* Function             */
extern void stateCoverClosed();
/* Function             */
extern void stateCoverClosed_CMD();
/* Function             */
extern void cbForStateCoverClosed();
/* Function             */
extern void stateMotorStopped();
/* Function             */
extern void cbForStateMotorStopped();
/* Function             */
extern void stateReady();
/* Function             */
extern void stateBusy();
/* Function             */
extern void cbForStateBusy();
/* Function             */
extern void DVDReadAbsAsyncPrio();
/* Function             */
extern void DVDReadAbsAsyncForBS();
/* Function             */
extern void DVDReadDiskID();
/* Function             */
extern void DVDCancelStreamAsync();
/* Function             */
extern void DVDInquiryAsync();
/* Function             */
extern void DVDReset();
/* Function             */
extern void DVDGetCommandBlockStatus();
/* Function             */
extern void DVDGetDriveStatus();
/* Function             */
extern void DVDSetAutoInvalidation();
/* Function             */
extern void DVDResume();
/* Function             */
extern void DVDCancelAsync();
/* Function             */
extern void DVDCancel();
/* Function             */
extern void cbForCancelSync();
/* Function             */
extern void DVDGetCurrentDiskID();
/* Function             */
extern void DVDCheckDisk();
/* Function             */
extern void __DVDPrepareResetAsync();
/* Function             */
extern void __DVDTestAlarm();
/* Function             */
extern void __DVDClearWaitingQueue();
/* Function             */
extern void __DVDPushWaitingQueue();
/* Function             */
extern void __DVDPopWaitingQueue();
/* Function             */
extern void __DVDCheckWaitingQueue();
/* Function             */
extern void __DVDDequeueWaitingQueue();
/* Function             */
extern void __DVDStoreErrorCode();
/* Function             */
extern void DVDCompareDiskID();
/* Function             */
extern void __DVDPrintFatalMessage();
/* Function             */
extern void __fstLoad();
/* Function             */
extern void memcmp();
/* InitializedData      */
SECTION_DATA extern u8 dvd__LIT_1[72];
/* InitializedData      */
SECTION_DATA extern u8 LIT_18[12];
/* InitializedData      */
SECTION_DATA extern u8 LIT_24[52];
/* SymbolReferenceArrayData */
SECTION_DATA extern void* dvd__LIT_359[17];
/* InitializedData      */
SECTION_DATA extern u8 ImmCommand[12];
/* InitializedData      */
SECTION_DATA extern u8 LIT_789[68];
/* SymbolReferenceArrayData */
SECTION_DATA extern void* LIT_956[13];
/* SymbolReferenceArrayData */
SECTION_DATA extern void* dvd__LIT_1060[14];
/* ZeroInitializedData  */
SECTION_BSS extern u8 BB2[32];
/* ZeroInitializedData  */
SECTION_BSS extern u8 CurrDiskID[32];
/* ZeroInitializedData  */
SECTION_BSS extern u8 DummyCommandBlock[48];
/* ZeroInitializedData  */
SECTION_BSS extern u8 ResetAlarm[40];
/* SymbolReferenceArrayData */
SECTION_SDATA extern void* __DVDVersion;
/* InitializedData      */
SECTION_SDATA extern u8 autoInvalidation[4];
/* SymbolReferenceArrayData */
SECTION_SDATA extern void* checkOptionalCommand;
/* InitializedData      */
SECTION_SDATA extern u8 LIT_23[8];
/* InitializedData      */
SECTION_SDATA extern u8 DmaCommand[4];
/* ZeroInitializedData  */
SECTION_SBSS extern u8 executing[4];
/* ZeroInitializedData  */
SECTION_SBSS extern u8 IDShouldBe[4];
/* ZeroInitializedData  */
SECTION_SBSS extern u8 bootInfo[4];
/* ZeroInitializedData  */
SECTION_SBSS extern u8 PauseFlag[4];
/* ZeroInitializedData  */
SECTION_SBSS extern u8 PausingFlag[4];
/* ZeroInitializedData  */
SECTION_SBSS extern u8 AutoFinishing[4];
/* ZeroInitializedData  */
SECTION_SBSS extern u8 FatalErrorFlag[4];
/* ZeroInitializedData  */
SECTION_SBSS extern u8 CurrCommand[4];
/* ZeroInitializedData  */
SECTION_SBSS extern u8 Canceling[4];
/* ZeroInitializedData  */
SECTION_SBSS extern u8 CancelCallback[4];
/* ZeroInitializedData  */
SECTION_SBSS extern u8 ResumeFromHere[4];
/* ZeroInitializedData  */
SECTION_SBSS extern u8 CancelLastError[4];
/* ZeroInitializedData  */
SECTION_SBSS extern u8 LastError[4];
/* ZeroInitializedData  */
SECTION_SBSS extern u8 NumInternalRetry[4];
/* ZeroInitializedData  */
SECTION_SBSS extern u8 ResetRequired[4];
/* ZeroInitializedData  */
SECTION_SBSS extern u8 FirstTimeInBootrom[4];
/* ZeroInitializedData  */
SECTION_SBSS extern u8 MotorState[4];
/* ZeroInitializedData  */
SECTION_SBSS extern u8 DVDInitialized[4];
/* ZeroInitializedData  */
SECTION_SBSS extern u8 dvd__LastState[4 + 4 /* padding */];
}


/* ###################################################################################### */
/*                                         .data                                          */
/* ###################################################################################### */

extern "C" {
/* 803D1520-803D1520 0000 .data      ...data.0                                                    InitializedData */
/* 803D1520-803D1568 0045 .data      @1                                                           InitializedData */
SECTION_DATA u8 dvd__LIT_1[72] = {
	0x3C, 0x3C, 0x20, 0x44, 0x6F, 0x6C, 0x70, 0x68, 0x69, 0x6E, 0x20, 0x53, 0x44, 0x4B, 0x20, 0x2D,
	0x20, 0x44, 0x56, 0x44, 0x09, 0x72, 0x65, 0x6C, 0x65, 0x61, 0x73, 0x65, 0x20, 0x62, 0x75, 0x69,
	0x6C, 0x64, 0x3A, 0x20, 0x41, 0x70, 0x72, 0x20, 0x20, 0x35, 0x20, 0x32, 0x30, 0x30, 0x34, 0x20,
	0x30, 0x34, 0x3A, 0x31, 0x34, 0x3A, 0x35, 0x31, 0x20, 0x28, 0x30, 0x78, 0x32, 0x33, 0x30, 0x31,
	0x29, 0x20, 0x3E, 0x3E, 0x00,
	/* padding */
	0x00, 0x00, 0x00,
};
/* 803D1568-803D1574 000A .data      @18                                                          InitializedData */
SECTION_DATA u8 LIT_18[12] = {
	0x6C, 0x6F, 0x61, 0x64, 0x20, 0x66, 0x73, 0x74, 0x0A, 0x00,
	/* padding */
	0x00, 0x00,
};
/* 803D1574-803D15A8 0034 .data      @24                                                          InitializedData */
SECTION_DATA u8 LIT_24[52] = {
	0x44, 0x56, 0x44, 0x43, 0x68, 0x61, 0x6E, 0x67, 0x65, 0x44, 0x69, 0x73, 0x6B, 0x28, 0x29, 0x3A,
	0x20, 0x46, 0x53, 0x54, 0x20, 0x69, 0x6E, 0x20, 0x74, 0x68, 0x65, 0x20, 0x6E, 0x65, 0x77, 0x20,
	0x64, 0x69, 0x73, 0x63, 0x20, 0x69, 0x73, 0x20, 0x74, 0x6F, 0x6F, 0x20, 0x62, 0x69, 0x67, 0x2E,
	0x20, 0x20, 0x20, 0x00,
};
/* 803D15A8-803D15EC 0044 .data      @359                                                         SymbolReferenceArrayData */
SECTION_DATA void* dvd__LIT_359[17] = {
	(void*)(((u32*)stateBusy)+198),
	(void*)(((u32*)stateBusy)+27),
	(void*)(((u32*)stateBusy)+67),
	(void*)(((u32*)stateBusy)+76),
	(void*)(((u32*)stateBusy)+27),
	(void*)(((u32*)stateBusy)+16),
	(void*)(((u32*)stateBusy)+84),
	(void*)(((u32*)stateBusy)+109),
	(void*)(((u32*)stateBusy)+120),
	(void*)(((u32*)stateBusy)+133),
	(void*)(((u32*)stateBusy)+142),
	(void*)(((u32*)stateBusy)+151),
	(void*)(((u32*)stateBusy)+160),
	(void*)(((u32*)stateBusy)+169),
	(void*)(((u32*)stateBusy)+179),
	(void*)(((u32*)stateBusy)+80),
	(void*)(((u32*)stateBusy)+190),
};
/* 803D15EC-803D15F8 000C .data      ImmCommand                                                   InitializedData */
SECTION_DATA u8 ImmCommand[12] = {
	0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF,
};
/* 803D15F8-803D163C 0041 .data      @789                                                         InitializedData */
SECTION_DATA u8 LIT_789[68] = {
	0x44, 0x56, 0x44, 0x43, 0x68, 0x61, 0x6E, 0x67, 0x65, 0x44, 0x69, 0x73, 0x6B, 0x41, 0x73, 0x79,
	0x6E, 0x63, 0x28, 0x29, 0x3A, 0x20, 0x59, 0x6F, 0x75, 0x20, 0x63, 0x61, 0x6E, 0x27, 0x74, 0x20,
	0x73, 0x70, 0x65, 0x63, 0x69, 0x66, 0x79, 0x20, 0x4E, 0x55, 0x4C, 0x4C, 0x20, 0x74, 0x6F, 0x20,
	0x63, 0x6F, 0x6D, 0x70, 0x61, 0x6E, 0x79, 0x20, 0x6E, 0x61, 0x6D, 0x65, 0x2E, 0x20, 0x20, 0x0A,
	0x00,
	/* padding */
	0x00, 0x00, 0x00,
};
/* 803D163C-803D1670 0034 .data      @956                                                         SymbolReferenceArrayData */
SECTION_DATA void* LIT_956[13] = {
	(void*)(((u32*)DVDCancelAsync)+20),
	(void*)(((u32*)DVDCancelAsync)+20),
	(void*)(((u32*)DVDCancelAsync)+28),
	(void*)(((u32*)DVDCancelAsync)+45),
	(void*)(((u32*)DVDCancelAsync)+64),
	(void*)(((u32*)DVDCancelAsync)+95),
	(void*)(((u32*)DVDCancelAsync)+95),
	(void*)(((u32*)DVDCancelAsync)+95),
	(void*)(((u32*)DVDCancelAsync)+95),
	(void*)(((u32*)DVDCancelAsync)+149),
	(void*)(((u32*)DVDCancelAsync)+149),
	(void*)(((u32*)DVDCancelAsync)+20),
	(void*)(((u32*)DVDCancelAsync)+95),
};
/* 803D1670-803D16A8 0034 .data      @1060                                                        SymbolReferenceArrayData */
SECTION_DATA void* dvd__LIT_1060[14] = {
	(void*)(((u32*)DVDCheckDisk)+38),
	(void*)(((u32*)DVDCheckDisk)+40),
	(void*)(((u32*)DVDCheckDisk)+36),
	(void*)(((u32*)DVDCheckDisk)+36),
	(void*)(((u32*)DVDCheckDisk)+38),
	(void*)(((u32*)DVDCheckDisk)+38),
	(void*)(((u32*)DVDCheckDisk)+38),
	(void*)(((u32*)DVDCheckDisk)+38),
	(void*)(((u32*)DVDCheckDisk)+38),
	(void*)(((u32*)DVDCheckDisk)+40),
	(void*)(((u32*)DVDCheckDisk)+36),
	(void*)(((u32*)DVDCheckDisk)+36),
	(void*)(((u32*)DVDCheckDisk)+38),
	/* padding */
	NULL,
};
}


/* ###################################################################################### */
/*                                         .sdata                                         */
/* ###################################################################################### */

extern "C" {
/* 804509E8-804509EC 0004 .sdata     __DVDVersion                                                 SymbolReferenceArrayData */
SECTION_SDATA void* __DVDVersion = (void*)&dvd__LIT_1;
/* 804509EC-804509F0 0004 .sdata     autoInvalidation                                             InitializedData */
SECTION_SDATA u8 autoInvalidation[4] = {
	0x00, 0x00, 0x00, 0x01,
};
/* 804509F0-804509F4 0004 .sdata     checkOptionalCommand                                         SymbolReferenceArrayData */
SECTION_SDATA void* checkOptionalCommand = (void*)defaultOptionalCommandChecker;
/* 804509F4-804509FC 0006 .sdata     @23                                                          InitializedData */
SECTION_SDATA u8 LIT_23[8] = {
	0x64, 0x76, 0x64, 0x2E, 0x63, 0x00,
	/* padding */
	0x00, 0x00,
};
/* 804509FC-80450A00 0004 .sdata     DmaCommand                                                   InitializedData */
SECTION_SDATA u8 DmaCommand[4] = {
	0xFF, 0xFF, 0xFF, 0xFF,
};
}


/* ###################################################################################### */
/*                                          .bss                                          */
/* ###################################################################################### */

extern "C" {
/* 8044C900-8044C900 0000 .bss       ...bss.0                                                     ZeroInitializedData */
/* 8044C900-8044C920 0020 .bss       BB2                                                          ZeroInitializedData */
SECTION_BSS u8 BB2[32];
/* 8044C920-8044C940 0020 .bss       CurrDiskID                                                   ZeroInitializedData */
SECTION_BSS u8 CurrDiskID[32];
/* 8044C940-8044C970 0030 .bss       DummyCommandBlock                                            ZeroInitializedData */
SECTION_BSS u8 DummyCommandBlock[48];
/* 8044C970-8044C998 0028 .bss       ResetAlarm                                                   ZeroInitializedData */
SECTION_BSS u8 ResetAlarm[40];
}


/* ###################################################################################### */
/*                                         .sbss                                          */
/* ###################################################################################### */

extern "C" {
/* 80451778-8045177C 0004 .sbss      executing                                                    ZeroInitializedData */
SECTION_SBSS u8 executing[4];
/* 8045177C-80451780 0004 .sbss      IDShouldBe                                                   ZeroInitializedData */
SECTION_SBSS u8 IDShouldBe[4];
/* 80451780-80451784 0004 .sbss      bootInfo                                                     ZeroInitializedData */
SECTION_SBSS u8 bootInfo[4];
/* 80451784-80451788 0004 .sbss      PauseFlag                                                    ZeroInitializedData */
SECTION_SBSS u8 PauseFlag[4];
/* 80451788-8045178C 0004 .sbss      PausingFlag                                                  ZeroInitializedData */
SECTION_SBSS u8 PausingFlag[4];
/* 8045178C-80451790 0004 .sbss      AutoFinishing                                                ZeroInitializedData */
SECTION_SBSS u8 AutoFinishing[4];
/* 80451790-80451794 0004 .sbss      FatalErrorFlag                                               ZeroInitializedData */
SECTION_SBSS u8 FatalErrorFlag[4];
/* 80451794-80451798 0004 .sbss      CurrCommand                                                  ZeroInitializedData */
SECTION_SBSS u8 CurrCommand[4];
/* 80451798-8045179C 0004 .sbss      Canceling                                                    ZeroInitializedData */
SECTION_SBSS u8 Canceling[4];
/* 8045179C-804517A0 0004 .sbss      CancelCallback                                               ZeroInitializedData */
SECTION_SBSS u8 CancelCallback[4];
/* 804517A0-804517A4 0004 .sbss      ResumeFromHere                                               ZeroInitializedData */
SECTION_SBSS u8 ResumeFromHere[4];
/* 804517A4-804517A8 0004 .sbss      CancelLastError                                              ZeroInitializedData */
SECTION_SBSS u8 CancelLastError[4];
/* 804517A8-804517AC 0004 .sbss      LastError                                                    ZeroInitializedData */
SECTION_SBSS u8 LastError[4];
/* 804517AC-804517B0 0004 .sbss      NumInternalRetry                                             ZeroInitializedData */
SECTION_SBSS u8 NumInternalRetry[4];
/* 804517B0-804517B4 0004 .sbss      ResetRequired                                                ZeroInitializedData */
SECTION_SBSS u8 ResetRequired[4];
/* 804517B4-804517B8 0004 .sbss      FirstTimeInBootrom                                           ZeroInitializedData */
SECTION_SBSS u8 FirstTimeInBootrom[4];
/* 804517B8-804517BC 0004 .sbss      MotorState                                                   ZeroInitializedData */
SECTION_SBSS u8 MotorState[4];
/* 804517BC-804517C0 0004 .sbss      DVDInitialized                                               ZeroInitializedData */
SECTION_SBSS u8 DVDInitialized[4];
/* 804517C0-804517C8 0004 .sbss      LastState                                                    ZeroInitializedData */
SECTION_SBSS u8 dvd__LastState[4 + 4 /* padding */];
}


/* ###################################################################################### */
/*                                         .text                                          */
/* ###################################################################################### */

extern "C" {
/* 803490EC-803490F0 0004 .text      defaultOptionalCommandChecker                                ReturnFunction */
void defaultOptionalCommandChecker() {
	return;
}

/* 803490F0-803491C8 00D8 .text      DVDInit                                                      Function */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void DVDInit() {
	nofralloc
#include "_include/dvd/dvd/DVDInit.s"
}
#pragma pop

/* 803491C8-8034925C 0094 .text      stateReadingFST                                              Function */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void stateReadingFST() {
	nofralloc
#include "_include/dvd/dvd/stateReadingFST.s"
}
#pragma pop

/* 8034925C-803492DC 0080 .text      cbForStateReadingFST                                         Function */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void cbForStateReadingFST() {
	nofralloc
#include "_include/dvd/dvd/cbForStateReadingFST.s"
}
#pragma pop

/* 803492DC-80349388 00AC .text      cbForStateError                                              Function */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void cbForStateError() {
	nofralloc
#include "_include/dvd/dvd/cbForStateError.s"
}
#pragma pop

/* 80349388-803493BC 0034 .text      stateTimeout                                                 Function */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void stateTimeout() {
	nofralloc
#include "_include/dvd/dvd/stateTimeout.s"
}
#pragma pop

/* 803493BC-803493E4 0028 .text      stateGettingError                                            Function */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void stateGettingError() {
	nofralloc
#include "_include/dvd/dvd/stateGettingError.s"
}
#pragma pop

/* 803493E4-80349498 00B4 .text      CategorizeError                                              Function */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void CategorizeError() {
	nofralloc
#include "_include/dvd/dvd/CategorizeError.s"
}
#pragma pop

/* 80349498-803496FC 0264 .text      cbForStateGettingError                                       Function */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void cbForStateGettingError() {
	nofralloc
#include "_include/dvd/dvd/cbForStateGettingError.s"
}
#pragma pop

/* 803496FC-80349758 005C .text      cbForUnrecoveredError                                        Function */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void cbForUnrecoveredError() {
	nofralloc
#include "_include/dvd/dvd/cbForUnrecoveredError.s"
}
#pragma pop

/* 80349758-803497D8 0080 .text      cbForUnrecoveredErrorRetry                                   Function */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void cbForUnrecoveredErrorRetry() {
	nofralloc
#include "_include/dvd/dvd/cbForUnrecoveredErrorRetry.s"
}
#pragma pop

/* 803497D8-80349800 0028 .text      stateGoToRetry                                               Function */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void stateGoToRetry() {
	nofralloc
#include "_include/dvd/dvd/stateGoToRetry.s"
}
#pragma pop

/* 80349800-80349940 0140 .text      cbForStateGoToRetry                                          Function */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void cbForStateGoToRetry() {
	nofralloc
#include "_include/dvd/dvd/cbForStateGoToRetry.s"
}
#pragma pop

/* 80349940-80349A20 00E0 .text      stateCheckID                                                 Function */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void stateCheckID() {
	nofralloc
#include "_include/dvd/dvd/stateCheckID.s"
}
#pragma pop

/* 80349A20-80349A54 0034 .text      stateCheckID3                                                Function */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void stateCheckID3() {
	nofralloc
#include "_include/dvd/dvd/stateCheckID3.s"
}
#pragma pop

/* 80349A54-80349A88 0034 .text      stateCheckID2a                                               Function */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void stateCheckID2a() {
	nofralloc
#include "_include/dvd/dvd/stateCheckID2a.s"
}
#pragma pop

/* 80349A88-80349AF0 0068 .text      cbForStateCheckID2a                                          Function */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void cbForStateCheckID2a() {
	nofralloc
#include "_include/dvd/dvd/cbForStateCheckID2a.s"
}
#pragma pop

/* 80349AF0-80349B28 0038 .text      stateCheckID2                                                Function */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void stateCheckID2() {
	nofralloc
#include "_include/dvd/dvd/stateCheckID2.s"
}
#pragma pop

/* 80349B28-80349C24 00FC .text      cbForStateCheckID1                                           Function */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void cbForStateCheckID1() {
	nofralloc
#include "_include/dvd/dvd/cbForStateCheckID1.s"
}
#pragma pop

/* 80349C24-80349CFC 00D8 .text      cbForStateCheckID2                                           Function */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void cbForStateCheckID2() {
	nofralloc
#include "_include/dvd/dvd/cbForStateCheckID2.s"
}
#pragma pop

/* 80349CFC-80349DEC 00F0 .text      cbForStateCheckID3                                           Function */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void cbForStateCheckID3() {
	nofralloc
#include "_include/dvd/dvd/cbForStateCheckID3.s"
}
#pragma pop

/* 80349DEC-80349E30 0044 .text      AlarmHandler                                                 Function */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void dvd__AlarmHandler() {
	nofralloc
#include "_include/dvd/dvd/dvd__AlarmHandler.s"
}
#pragma pop

/* 80349E30-80349F04 00D4 .text      stateCoverClosed                                             Function */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void stateCoverClosed() {
	nofralloc
#include "_include/dvd/dvd/stateCoverClosed.s"
}
#pragma pop

/* 80349F04-80349F34 0030 .text      stateCoverClosed_CMD                                         Function */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void stateCoverClosed_CMD() {
	nofralloc
#include "_include/dvd/dvd/stateCoverClosed_CMD.s"
}
#pragma pop

/* 80349F34-80349F98 0064 .text      cbForStateCoverClosed                                        Function */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void cbForStateCoverClosed() {
	nofralloc
#include "_include/dvd/dvd/cbForStateCoverClosed.s"
}
#pragma pop

/* 80349F98-80349FC0 0028 .text      stateMotorStopped                                            Function */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void stateMotorStopped() {
	nofralloc
#include "_include/dvd/dvd/stateMotorStopped.s"
}
#pragma pop

/* 80349FC0-8034A0AC 00EC .text      cbForStateMotorStopped                                       Function */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void cbForStateMotorStopped() {
	nofralloc
#include "_include/dvd/dvd/cbForStateMotorStopped.s"
}
#pragma pop

/* 8034A0AC-8034A394 02E8 .text      stateReady                                                   Function */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void stateReady() {
	nofralloc
#include "_include/dvd/dvd/stateReady.s"
}
#pragma pop

/* 8034A394-8034A6D4 0340 .text      stateBusy                                                    Function */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void stateBusy() {
	nofralloc
#include "_include/dvd/dvd/stateBusy.s"
}
#pragma pop

/* 8034A6D4-8034AD2C 0658 .text      cbForStateBusy                                               Function */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void cbForStateBusy() {
	nofralloc
#include "_include/dvd/dvd/cbForStateBusy.s"
}
#pragma pop

/* 8034AD2C-8034AE08 00DC .text      DVDReadAbsAsyncPrio                                          Function */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void DVDReadAbsAsyncPrio() {
	nofralloc
#include "_include/dvd/dvd/DVDReadAbsAsyncPrio.s"
}
#pragma pop

/* 8034AE08-8034AED8 00D0 .text      DVDReadAbsAsyncForBS                                         Function */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void DVDReadAbsAsyncForBS() {
	nofralloc
#include "_include/dvd/dvd/DVDReadAbsAsyncForBS.s"
}
#pragma pop

/* 8034AED8-8034AFAC 00D4 .text      DVDReadDiskID                                                Function */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void DVDReadDiskID() {
	nofralloc
#include "_include/dvd/dvd/DVDReadDiskID.s"
}
#pragma pop

/* 8034AFAC-8034B068 00BC .text      DVDCancelStreamAsync                                         Function */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void DVDCancelStreamAsync() {
	nofralloc
#include "_include/dvd/dvd/DVDCancelStreamAsync.s"
}
#pragma pop

/* 8034B068-8034B138 00D0 .text      DVDInquiryAsync                                              Function */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void DVDInquiryAsync() {
	nofralloc
#include "_include/dvd/dvd/DVDInquiryAsync.s"
}
#pragma pop

/* 8034B138-8034B17C 0044 .text      DVDReset                                                     Function */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void DVDReset() {
	nofralloc
#include "_include/dvd/dvd/DVDReset.s"
}
#pragma pop

/* 8034B17C-8034B1C8 004C .text      DVDGetCommandBlockStatus                                     Function */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void DVDGetCommandBlockStatus() {
	nofralloc
#include "_include/dvd/dvd/DVDGetCommandBlockStatus.s"
}
#pragma pop

/* 8034B1C8-8034B274 00AC .text      DVDGetDriveStatus                                            Function */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void DVDGetDriveStatus() {
	nofralloc
#include "_include/dvd/dvd/DVDGetDriveStatus.s"
}
#pragma pop

/* 8034B274-8034B284 0010 .text      DVDSetAutoInvalidation                                       Function */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void DVDSetAutoInvalidation() {
	nofralloc
#include "_include/dvd/dvd/DVDSetAutoInvalidation.s"
}
#pragma pop

/* 8034B284-8034B2D4 0050 .text      DVDResume                                                    Function */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void DVDResume() {
	nofralloc
#include "_include/dvd/dvd/DVDResume.s"
}
#pragma pop

/* 8034B2D4-8034B550 027C .text      DVDCancelAsync                                               Function */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void DVDCancelAsync() {
	nofralloc
#include "_include/dvd/dvd/DVDCancelAsync.s"
}
#pragma pop

/* 8034B550-8034B5FC 00AC .text      DVDCancel                                                    Function */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void DVDCancel() {
	nofralloc
#include "_include/dvd/dvd/DVDCancel.s"
}
#pragma pop

/* 8034B5FC-8034B620 0024 .text      cbForCancelSync                                              Function */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void cbForCancelSync() {
	nofralloc
#include "_include/dvd/dvd/cbForCancelSync.s"
}
#pragma pop

/* 8034B620-8034B628 0008 .text      DVDGetCurrentDiskID                                          Function */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void DVDGetCurrentDiskID() {
	nofralloc
#include "_include/dvd/dvd/DVDGetCurrentDiskID.s"
}
#pragma pop

/* 8034B628-8034B720 00F8 .text      DVDCheckDisk                                                 Function */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void DVDCheckDisk() {
	nofralloc
#include "_include/dvd/dvd/DVDCheckDisk.s"
}
#pragma pop

/* 8034B720-8034B83C 011C .text      __DVDPrepareResetAsync                                       Function */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void __DVDPrepareResetAsync() {
	nofralloc
#include "_include/dvd/dvd/__DVDPrepareResetAsync.s"
}
#pragma pop

/* 8034B83C-8034B874 0038 .text      __DVDTestAlarm                                               Function */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void __DVDTestAlarm() {
	nofralloc
#include "_include/dvd/dvd/__DVDTestAlarm.s"
}
#pragma pop

}

