// 
// Generated By: dol2asm
// 

// 
// Compiler Options: -str pool,readonly,reuse
// 

#include "dolphin/types.h"

// 
// Additional Symbols:
// 

struct JKRHeap;

extern void* operator new[](u32, JKRHeap*, int); /* __nwa__FUlP7JKRHeapi */
extern void operator delete(void*); /* __dl__FPv */
extern void operator delete[](void*); /* __dla__FPv */

extern "C" {
extern void __nwa__FUlP7JKRHeapi();
extern void __dl__FPv();
extern void __dla__FPv();
extern u32 getResFont__10JUTResFontCFv(u8*);
extern void getFontType__10JUTResFontCFv();
extern void getLeading__10JUTResFontCFv();
extern void getWidth__10JUTResFontCFv();
extern void getAscent__10JUTResFontCFv();
extern void getDescent__10JUTResFontCFv();
extern void getHeight__10JUTResFontCFv();
extern void __ct__7JUTFontFv();
extern void initialize_state__7JUTFontFv();
extern void __dt__10JUTResFontFv();
extern void deleteMemBlocks_ResFont__10JUTResFontFv();
extern void initialize_state__10JUTResFontFv();
extern void initiate__10JUTResFontFPC7ResFONTP7JKRHeap();
extern void protected_initiate__10JUTResFontFPC7ResFONTP7JKRHeap();
extern void countBlock__10JUTResFontFv();
extern void setBlock__10JUTResFontFv();
extern void setGX__10JUTResFontFv();
extern void setGX__10JUTResFontFQ28JUtility6TColorQ28JUtility6TColor();
extern void drawChar_scale__10JUTResFontFffffib();
extern void loadFont__10JUTResFontFi11_GXTexMapIDPQ27JUTFont6TWidth();
extern void getWidthEntry__10JUTResFontCFiPQ27JUTFont6TWidth();
extern void getCellWidth__10JUTResFontCFv();
extern void getCellHeight__10JUTResFontCFv();
extern void isLeadByte__10JUTResFontCFi();
extern void getFontCode__10JUTResFontCFi();
extern void loadImage__10JUTResFontFi11_GXTexMapID();
extern void convertSjis__10JUTResFontCFiPUs();
extern void JUTReportConsole();
extern void GXSetVtxDesc();
extern void GXClearVtxDesc();
extern void GXSetVtxAttrFmt();
extern void GXSetNumTexGens();
extern void GXBegin();
extern void GXSetNumChans();
extern void GXSetChanCtrl();
extern void GXInitTexObj();
extern void GXInitTexObjLOD();
extern void GXLoadTexObj();
extern void GXSetTevOp();
extern void GXSetTevColorIn();
extern void GXSetTevAlphaIn();
extern void GXSetTevColorOp();
extern void GXSetTevAlphaOp();
extern void GXSetTevColor();
extern void GXSetTevOrder();
extern void GXSetNumTevStages();
extern void GXSetBlendMode();
extern void _savegpr_25();
extern void _savegpr_27();
extern void _savegpr_28();
extern void _savegpr_29();
extern void _restgpr_25();
extern void _restgpr_27();
extern void _restgpr_28();
extern void _restgpr_29();
SECTION_RODATA extern const u8 saoAboutEncoding___10JUTResFont[12];
SECTION_RODATA extern const u8 data_8039D39C[192];
SECTION_RODATA extern const u8 JUTResFont__stringBase0[52];
SECTION_DATA extern const void* __vt__7JUTFont[17];
SECTION_DATA extern const void* __vt__10JUTResFont[20];
SECTION_SDATA2 extern u8 LIT_647[8];
SECTION_SDATA2 extern f64 LIT_649;
SECTION_SDATA2 extern f64 LIT_651;
}


/* ###################################################################################### */
/*                                        .rodata                                         */
/* ###################################################################################### */

extern "C" {
/* 8039D390 000C .rodata    saoAboutEncoding___10JUTResFont                              */
SECTION_RODATA const u8 saoAboutEncoding___10JUTResFont[12] = {
	0x80, 0x2E, 0x01, 0x08, 0x80, 0x2E, 0x01, 0x10, 0x80, 0x2E, 0x01, 0x18,
};
/* 8039D39C 00BE .rodata    halftofull$726                                               */
SECTION_RODATA const u8 data_8039D39C[192] = {
	0x81, 0x40, 0x81, 0x49, 0x81, 0x68, 0x81, 0x94, 0x81, 0x90, 0x81, 0x93, 0x81, 0x95, 0x81, 0x66,
	0x81, 0x69, 0x81, 0x6A, 0x81, 0x96, 0x81, 0x7B, 0x81, 0x43, 0x81, 0x7C, 0x81, 0x44, 0x81, 0x5E,
	0x82, 0x4F, 0x82, 0x50, 0x82, 0x51, 0x82, 0x52, 0x82, 0x53, 0x82, 0x54, 0x82, 0x55, 0x82, 0x56,
	0x82, 0x57, 0x82, 0x58, 0x81, 0x46, 0x81, 0x47, 0x81, 0x83, 0x81, 0x81, 0x81, 0x84, 0x81, 0x48,
	0x81, 0x97, 0x82, 0x60, 0x82, 0x61, 0x82, 0x62, 0x82, 0x63, 0x82, 0x64, 0x82, 0x65, 0x82, 0x66,
	0x82, 0x67, 0x82, 0x68, 0x82, 0x69, 0x82, 0x6A, 0x82, 0x6B, 0x82, 0x6C, 0x82, 0x6D, 0x82, 0x6E,
	0x82, 0x6F, 0x82, 0x70, 0x82, 0x71, 0x82, 0x72, 0x82, 0x73, 0x82, 0x74, 0x82, 0x75, 0x82, 0x76,
	0x82, 0x77, 0x82, 0x78, 0x82, 0x79, 0x81, 0x6D, 0x81, 0x8F, 0x81, 0x6E, 0x81, 0x4F, 0x81, 0x51,
	0x81, 0x65, 0x82, 0x81, 0x82, 0x82, 0x82, 0x83, 0x82, 0x84, 0x82, 0x85, 0x82, 0x86, 0x82, 0x87,
	0x82, 0x88, 0x82, 0x89, 0x82, 0x8A, 0x82, 0x8B, 0x82, 0x8C, 0x82, 0x8D, 0x82, 0x8E, 0x82, 0x8F,
	0x82, 0x90, 0x82, 0x91, 0x82, 0x92, 0x82, 0x93, 0x82, 0x94, 0x82, 0x95, 0x82, 0x96, 0x82, 0x97,
	0x82, 0x98, 0x82, 0x99, 0x82, 0x9A, 0x81, 0x6F, 0x81, 0x62, 0x81, 0x70, 0x81, 0x60,
	/* padding */
	0x00, 0x00,
};
/* 8039D45C 0034 .rodata    @stringBase0                                                 */
const char* const stringBase_8039D45C = "JUTResFont: Unknown data block\n";
const char* const stringBase_8039D47C = "Unknown data block\n";
}


/* ###################################################################################### */
/*                                         .data                                          */
/* ###################################################################################### */

extern "C" {
/* 803CC5A0 004C .data      __vt__10JUTResFont                                           */
SECTION_DATA const  void* __vt__10JUTResFont[20] = {
	NULL, /* RTTI */
	NULL,
	(void*)__dt__10JUTResFontFv,
	(void*)setGX__10JUTResFontFv,
	(void*)setGX__10JUTResFontFQ28JUtility6TColorQ28JUtility6TColor,
	(void*)drawChar_scale__10JUTResFontFffffib,
	(void*)getLeading__10JUTResFontCFv,
	(void*)getAscent__10JUTResFontCFv,
	(void*)getDescent__10JUTResFontCFv,
	(void*)getHeight__10JUTResFontCFv,
	(void*)getWidth__10JUTResFontCFv,
	(void*)getWidthEntry__10JUTResFontCFiPQ27JUTFont6TWidth,
	(void*)getCellWidth__10JUTResFontCFv,
	(void*)getCellHeight__10JUTResFontCFv,
	(void*)getFontType__10JUTResFontCFv,
	(void*)getResFont__10JUTResFontCFv,
	(void*)isLeadByte__10JUTResFontCFi,
	(void*)loadImage__10JUTResFontFi11_GXTexMapID,
	(void*)setBlock__10JUTResFontFv,
	/* padding */
	NULL,
};
}


/* ###################################################################################### */
/*                                        .sdata2                                         */
/* ###################################################################################### */

extern "C" {
/* 80455FF0 0004 .sdata2    @647                                                         */
SECTION_SDATA2 u8 LIT_647[8] = {
	0x00, 0x00, 0x00, 0x00,
	/* padding */
	0x00, 0x00, 0x00, 0x00,
};
/* 80455FF8 0008 .sdata2    @649                                                         */
// 0x4330000080000000 | compiler-generated value used in cast: (float)s32
SECTION_SDATA2 f64 LIT_649 = 4503601774854144.000000;
/* 80456000 0008 .sdata2    @651                                                         */
// 0x4330000000000000 | compiler-generated value used in cast: (float)u32
SECTION_SDATA2 f64 LIT_651 = 4503599627370496.000000;
}


/* ###################################################################################### */
/*                                         .text                                          */
/* ###################################################################################### */

extern "C" {
/* 802DEF48 004C .text      __ct__10JUTResFontFv                                         */
// JUTResFont::JUTResFont(void)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void __ct__10JUTResFontFv() {
	nofralloc
#include "_include/JUtility/JUTResFont/__ct__10JUTResFontFv.s"
}
#pragma pop

/* 802DEF94 006C .text      __ct__10JUTResFontFPC7ResFONTP7JKRHeap                       */
// JUTResFont::JUTResFont(const ResFONT*, JKRHeap*)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void __ct__10JUTResFontFPC7ResFONTP7JKRHeap() {
	nofralloc
#include "_include/JUtility/JUTResFont/__ct__10JUTResFontFPC7ResFONTP7JKRHeap.s"
}
#pragma pop

/* 802DF000 008C .text      __dt__10JUTResFontFv                                         */
// JUTResFont::~JUTResFont(void)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void __dt__10JUTResFontFv() {
	nofralloc
#include "_include/JUtility/JUTResFont/__dt__10JUTResFontFv.s"
}
#pragma pop

/* 802DF08C 0024 .text      deleteMemBlocks_ResFont__10JUTResFontFv                      */
// JUTResFont::deleteMemBlocks_ResFont(void)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void deleteMemBlocks_ResFont__10JUTResFontFv() {
	nofralloc
#include "_include/JUtility/JUTResFont/deleteMemBlocks_ResFont__10JUTResFontFv.s"
}
#pragma pop

/* 802DF0B0 002C .text      initialize_state__10JUTResFontFv                             */
// JUTResFont::initialize_state(void)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void initialize_state__10JUTResFontFv() {
	nofralloc
#include "_include/JUtility/JUTResFont/initialize_state__10JUTResFontFv.s"
}
#pragma pop

/* 802DF0DC 0060 .text      initiate__10JUTResFontFPC7ResFONTP7JKRHeap                   */
// JUTResFont::initiate(const ResFONT*, JKRHeap*)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void initiate__10JUTResFontFPC7ResFONTP7JKRHeap() {
	nofralloc
#include "_include/JUtility/JUTResFont/initiate__10JUTResFontFPC7ResFONTP7JKRHeap.s"
}
#pragma pop

/* 802DF13C 010C .text      protected_initiate__10JUTResFontFPC7ResFONTP7JKRHeap         */
// JUTResFont::protected_initiate(const ResFONT*, JKRHeap*)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void protected_initiate__10JUTResFontFPC7ResFONTP7JKRHeap() {
	nofralloc
#include "_include/JUtility/JUTResFont/protected_initiate__10JUTResFontFPC7ResFONTP7JKRHeap.s"
}
#pragma pop

/* 802DF248 00FC .text      countBlock__10JUTResFontFv                                   */
// JUTResFont::countBlock(void)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void countBlock__10JUTResFontFv() {
	nofralloc
#include "_include/JUtility/JUTResFont/countBlock__10JUTResFontFv.s"
}
#pragma pop

/* 802DF344 0148 .text      setBlock__10JUTResFontFv                                     */
// JUTResFont::setBlock(void)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void setBlock__10JUTResFontFv() {
	nofralloc
#include "_include/JUtility/JUTResFont/setBlock__10JUTResFontFv.s"
}
#pragma pop

/* 802DF48C 00F8 .text      setGX__10JUTResFontFv                                        */
// JUTResFont::setGX(void)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void setGX__10JUTResFontFv() {
	nofralloc
#include "_include/JUtility/JUTResFont/setGX__10JUTResFontFv.s"
}
#pragma pop

/* 802DF584 0240 .text      setGX__10JUTResFontFQ28JUtility6TColorQ28JUtility6TColor     */
// JUTResFont::setGX(JUtility::TColor, JUtility::TColor)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void setGX__10JUTResFontFQ28JUtility6TColorQ28JUtility6TColor() {
	nofralloc
#include "_include/JUtility/JUTResFont/setGX__10JUTResFontFQ28JUtility6TColorQ28JUtility6TColor.s"
}
#pragma pop

/* 802DF7C4 0424 .text      drawChar_scale__10JUTResFontFffffib                          */
// JUTResFont::drawChar_scale(f32, f32, f32, f32, int, bool)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void drawChar_scale__10JUTResFontFffffib() {
	nofralloc
#include "_include/JUtility/JUTResFont/drawChar_scale__10JUTResFontFffffib.s"
}
#pragma pop

/* 802DFBE8 007C .text      loadFont__10JUTResFontFi11_GXTexMapIDPQ27JUTFont6TWidth      */
// JUTResFont::loadFont(int, _GXTexMapID, JUTFont::TWidth)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void loadFont__10JUTResFontFi11_GXTexMapIDPQ27JUTFont6TWidth() {
	nofralloc
#include "_include/JUtility/JUTResFont/loadFont__10JUTResFontFi11_GXTexMapIDPQ27JUTFont6TWidth.s"
}
#pragma pop

/* 802DFC64 00A8 .text      getWidthEntry__10JUTResFontCFiPQ27JUTFont6TWidth             */
// JUTResFont::getWidthEntry(int, JUTFont::TWidth) const
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void getWidthEntry__10JUTResFontCFiPQ27JUTFont6TWidth() {
	nofralloc
#include "_include/JUtility/JUTResFont/getWidthEntry__10JUTResFontCFiPQ27JUTFont6TWidth.s"
}
#pragma pop

/* 802DFD0C 004C .text      getCellWidth__10JUTResFontCFv                                */
// JUTResFont::getCellWidth(void) const
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void getCellWidth__10JUTResFontCFv() {
	nofralloc
#include "_include/JUtility/JUTResFont/getCellWidth__10JUTResFontCFv.s"
}
#pragma pop

/* 802DFD58 004C .text      getCellHeight__10JUTResFontCFv                               */
// JUTResFont::getCellHeight(void) const
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void getCellHeight__10JUTResFontCFv() {
	nofralloc
#include "_include/JUtility/JUTResFont/getCellHeight__10JUTResFontCFv.s"
}
#pragma pop

/* 802DFDA4 0034 .text      isLeadByte__10JUTResFontCFi                                  */
// JUTResFont::isLeadByte(int) const
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void isLeadByte__10JUTResFontCFi() {
	nofralloc
#include "_include/JUtility/JUTResFont/isLeadByte__10JUTResFontCFi.s"
}
#pragma pop

/* 802DFDD8 0188 .text      getFontCode__10JUTResFontCFi                                 */
// JUTResFont::getFontCode(int) const
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void getFontCode__10JUTResFontCFi() {
	nofralloc
#include "_include/JUtility/JUTResFont/getFontCode__10JUTResFontCFi.s"
}
#pragma pop

/* 802DFF60 0164 .text      loadImage__10JUTResFontFi11_GXTexMapID                       */
// JUTResFont::loadImage(int, _GXTexMapID)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void loadImage__10JUTResFontFi11_GXTexMapID() {
	nofralloc
#include "_include/JUtility/JUTResFont/loadImage__10JUTResFontFi11_GXTexMapID.s"
}
#pragma pop

/* 802E00C4 0044 .text      convertSjis__10JUTResFontCFiPUs                              */
// JUTResFont::convertSjis(int, u16*) const
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void convertSjis__10JUTResFontCFiPUs() {
	nofralloc
#include "_include/JUtility/JUTResFont/convertSjis__10JUTResFontCFiPUs.s"
}
#pragma pop

/* 802E0108 0008 .text      isLeadByte_1Byte__7JUTFontFi                                 */
// JUTFont::isLeadByte_1Byte(int)
int isLeadByte_1Byte__7JUTFontFi() {
	return 0;
}

/* 802E0110 0008 .text      isLeadByte_2Byte__7JUTFontFi                                 */
// JUTFont::isLeadByte_2Byte(int)
int isLeadByte_2Byte__7JUTFontFi() {
	return 1;
}

/* 802E0118 0030 .text      isLeadByte_ShiftJIS__7JUTFontFi                              */
// JUTFont::isLeadByte_ShiftJIS(int)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void isLeadByte_ShiftJIS__7JUTFontFi() {
	nofralloc
#include "_include/JUtility/JUTResFont/isLeadByte_ShiftJIS__7JUTFontFi.s"
}
#pragma pop

}

