// 
// Generated By: dol2asm
// 

#include "dolphin/types.h"

// 
// Additional Symbols:
// 

extern "C" {
extern void PSVECAdd();
extern void PSVECNormalize();
extern void PSVECDotProduct();
SECTION_SDATA2 extern u8 vec__LIT_113[4];
SECTION_SDATA2 extern f32 vec__LIT_118;
SECTION_SDATA2 extern f32 vec__LIT_119;
SECTION_SDATA2 extern f32 vec__LIT_161;
}


/* ###################################################################################### */
/*                                        .sdata2                                         */
/* ###################################################################################### */

extern "C" {
/* 80456540 0004 .sdata2    @113                                                         */
SECTION_SDATA2 u8 vec__LIT_113[4] = {
	0x00, 0x00, 0x00, 0x00,
};
/* 80456544 0004 .sdata2    @118                                                         */
// 0x3f000000
SECTION_SDATA2 f32 vec__LIT_118 = 0.500000f;
/* 80456548 0004 .sdata2    @119                                                         */
// 0x40400000
SECTION_SDATA2 f32 vec__LIT_119 = 3.000000f;
/* 8045654C 0004 .sdata2    @161                                                         */
// 0x40000000
SECTION_SDATA2 f32 vec__LIT_161 = 2.000000f;
}


/* ###################################################################################### */
/*                                         .text                                          */
/* ###################################################################################### */

extern "C" {
/* 80347090 0024 .text      PSVECAdd                                                     */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void PSVECAdd() {
	nofralloc
#include "_include/mtx/vec/PSVECAdd.s"
}
#pragma pop

/* 803470B4 0024 .text      PSVECSubtract                                                */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void PSVECSubtract() {
	nofralloc
#include "_include/mtx/vec/PSVECSubtract.s"
}
#pragma pop

/* 803470D8 001C .text      PSVECScale                                                   */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void PSVECScale() {
	nofralloc
#include "_include/mtx/vec/PSVECScale.s"
}
#pragma pop

/* 803470F4 0044 .text      PSVECNormalize                                               */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void PSVECNormalize() {
	nofralloc
#include "_include/mtx/vec/PSVECNormalize.s"
}
#pragma pop

/* 80347138 0018 .text      PSVECSquareMag                                               */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void PSVECSquareMag() {
	nofralloc
#include "_include/mtx/vec/PSVECSquareMag.s"
}
#pragma pop

/* 80347150 0044 .text      PSVECMag                                                     */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void PSVECMag() {
	nofralloc
#include "_include/mtx/vec/PSVECMag.s"
}
#pragma pop

/* 80347194 0020 .text      PSVECDotProduct                                              */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void PSVECDotProduct() {
	nofralloc
#include "_include/mtx/vec/PSVECDotProduct.s"
}
#pragma pop

/* 803471B4 003C .text      PSVECCrossProduct                                            */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void PSVECCrossProduct() {
	nofralloc
#include "_include/mtx/vec/PSVECCrossProduct.s"
}
#pragma pop

/* 803471F0 00D8 .text      C_VECHalfAngle                                               */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void C_VECHalfAngle() {
	nofralloc
#include "_include/mtx/vec/C_VECHalfAngle.s"
}
#pragma pop

/* 803472C8 00D4 .text      C_VECReflect                                                 */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void C_VECReflect() {
	nofralloc
#include "_include/mtx/vec/C_VECReflect.s"
}
#pragma pop

/* 8034739C 0028 .text      PSVECSquareDistance                                          */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void PSVECSquareDistance() {
	nofralloc
#include "_include/mtx/vec/PSVECSquareDistance.s"
}
#pragma pop

/* 803473C4 0054 .text      PSVECDistance                                                */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void PSVECDistance() {
	nofralloc
#include "_include/mtx/vec/PSVECDistance.s"
}
#pragma pop

}

