// 
// Generated By: dol2asm
// 

#include "dolphin/types.h"

// 
// Additional Symbols:
// 

extern "C" {
extern void PSMTXRotTrig();
extern void __PSMTXRotAxisRadInternal();
extern void PSVECNormalize();
extern void PSVECCrossProduct();
extern void tanf();
extern void sinf();
extern void cosf();
SECTION_SDATA extern u8 mtx__Unit01[8];
SECTION_SDATA2 extern f32 mtx__LIT_96;
SECTION_SDATA2 extern u8 mtx__LIT_97[4];
SECTION_SDATA2 extern f32 LIT_190;
SECTION_SDATA2 extern f32 LIT_191;
SECTION_SDATA2 extern f32 mtx__LIT_206;
SECTION_SDATA2 extern f32 LIT_227;
SECTION_SDATA2 extern u8 LIT_230[8];
}


/* ###################################################################################### */
/*                                         .sdata                                         */
/* ###################################################################################### */

extern "C" {
/* 804509D0 0008 .sdata     Unit01                                                       */
SECTION_SDATA u8 mtx__Unit01[8] = {
	0x00, 0x00, 0x00, 0x00, 0x3F, 0x80, 0x00, 0x00,
};
}


/* ###################################################################################### */
/*                                        .sdata2                                         */
/* ###################################################################################### */

extern "C" {
/* 80456508 0004 .sdata2    @96                                                          */
// 0x3f800000
SECTION_SDATA2 f32 mtx__LIT_96 = 1.000000f;
/* 8045650C 0004 .sdata2    @97                                                          */
SECTION_SDATA2 u8 mtx__LIT_97[4] = {
	0x00, 0x00, 0x00, 0x00,
};
/* 80456510 0004 .sdata2    @190                                                         */
// 0x3f000000
SECTION_SDATA2 f32 LIT_190 = 0.500000f;
/* 80456514 0004 .sdata2    @191                                                         */
// 0x40400000
SECTION_SDATA2 f32 LIT_191 = 3.000000f;
/* 80456518 0004 .sdata2    @206                                                         */
// 0x40000000
SECTION_SDATA2 f32 mtx__LIT_206 = 2.000000f;
/* 8045651C 0004 .sdata2    @227                                                         */
// 0xbf800000
SECTION_SDATA2 f32 LIT_227 = -1.000000f;
/* 80456520 0004 .sdata2    @230                                                         */
SECTION_SDATA2 u8 LIT_230[8] = {
	0x3C, 0x8E, 0xFA, 0x35,
	/* padding */
	0x00, 0x00, 0x00, 0x00,
};
}


/* ###################################################################################### */
/*                                         .text                                          */
/* ###################################################################################### */

extern "C" {
/* 80346484 002C .text      PSMTXIdentity                                                */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void PSMTXIdentity() {
	nofralloc
#include "_include/mtx/mtx/PSMTXIdentity.s"
}
#pragma pop

/* 803464B0 0034 .text      PSMTXCopy                                                    */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void PSMTXCopy() {
	nofralloc
#include "_include/mtx/mtx/PSMTXCopy.s"
}
#pragma pop

/* 803464E4 00CC .text      PSMTXConcat                                                  */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void PSMTXConcat() {
	nofralloc
#include "_include/mtx/mtx/PSMTXConcat.s"
}
#pragma pop

/* 803465B0 00F8 .text      PSMTXInverse                                                 */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void PSMTXInverse() {
	nofralloc
#include "_include/mtx/mtx/PSMTXInverse.s"
}
#pragma pop

/* 803466A8 0070 .text      PSMTXRotRad                                                  */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void PSMTXRotRad() {
	nofralloc
#include "_include/mtx/mtx/PSMTXRotRad.s"
}
#pragma pop

/* 80346718 00B0 .text      PSMTXRotTrig                                                 */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void PSMTXRotTrig() {
	nofralloc
#include "_include/mtx/mtx/PSMTXRotTrig.s"
}
#pragma pop

/* 803467C8 00B0 .text      __PSMTXRotAxisRadInternal                                    */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void __PSMTXRotAxisRadInternal() {
	nofralloc
#include "_include/mtx/mtx/__PSMTXRotAxisRadInternal.s"
}
#pragma pop

/* 80346878 0070 .text      PSMTXRotAxisRad                                              */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void PSMTXRotAxisRad() {
	nofralloc
#include "_include/mtx/mtx/PSMTXRotAxisRad.s"
}
#pragma pop

/* 803468E8 0034 .text      PSMTXTrans                                                   */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void PSMTXTrans() {
	nofralloc
#include "_include/mtx/mtx/PSMTXTrans.s"
}
#pragma pop

/* 8034691C 004C .text      PSMTXTransApply                                              */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void PSMTXTransApply() {
	nofralloc
#include "_include/mtx/mtx/PSMTXTransApply.s"
}
#pragma pop

/* 80346968 0028 .text      PSMTXScale                                                   */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void PSMTXScale() {
	nofralloc
#include "_include/mtx/mtx/PSMTXScale.s"
}
#pragma pop

/* 80346990 0058 .text      PSMTXScaleApply                                              */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void PSMTXScaleApply() {
	nofralloc
#include "_include/mtx/mtx/PSMTXScaleApply.s"
}
#pragma pop

/* 803469E8 00A4 .text      PSMTXQuat                                                    */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void PSMTXQuat() {
	nofralloc
#include "_include/mtx/mtx/PSMTXQuat.s"
}
#pragma pop

/* 80346A8C 018C .text      C_MTXLookAt                                                  */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void C_MTXLookAt() {
	nofralloc
#include "_include/mtx/mtx/C_MTXLookAt.s"
}
#pragma pop

/* 80346C18 00CC .text      C_MTXLightPerspective                                        */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void C_MTXLightPerspective() {
	nofralloc
#include "_include/mtx/mtx/C_MTXLightPerspective.s"
}
#pragma pop

/* 80346CE4 0088 .text      C_MTXLightOrtho                                              */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void C_MTXLightOrtho() {
	nofralloc
#include "_include/mtx/mtx/C_MTXLightOrtho.s"
}
#pragma pop

}

