// 
// Generated By: dol2asm
// 

#include "dolphin/types.h"

// 
// Additional Symbols:
// 

struct overlap_task_class;
struct dOvlpFd2_c;

extern void mDoMtx_ZrotM(f32 (*)[4], s16); /* mDoMtx_ZrotM__FPA4_fs */
extern void fopOvlpM_SceneIsStop(void); /* fopOvlpM_SceneIsStop__Fv */
extern void fopOvlpM_SceneIsStart(void); /* fopOvlpM_SceneIsStart__Fv */
extern void fopOvlpM_IsOutReq(overlap_task_class*); /* fopOvlpM_IsOutReq__FP18overlap_task_class */
extern void fopOvlpM_Done(overlap_task_class*); /* fopOvlpM_Done__FP18overlap_task_class */
extern void cLib_addCalc2(f32*, f32, f32, f32); /* cLib_addCalc2__FPffff */
extern void cLib_addCalc0(f32*, f32, f32); /* cLib_addCalc0__FPfff */
extern void cLib_chaseAngleS(s16*, s16, s16); /* cLib_chaseAngleS__FPsss */
extern void operator delete(void*); /* __dl__FPv */

extern "C" {
extern void mDoMtx_ZrotM__FPA4_fs();
extern void scaleM__14mDoMtx_stack_cFfff();
extern void fopOvlpM_SceneIsStop__Fv();
extern void fopOvlpM_SceneIsStart__Fv();
extern void fopOvlpM_IsOutReq__FP18overlap_task_class();
extern void fopOvlpM_Done__FP18overlap_task_class();
extern void set__12dDlst_list_cFRPP12dDlst_base_cRPP12dDlst_base_cP12dDlst_base_c();
extern void draw__15dOvlpFd2_dlst_cFv();
extern void __ct__10dOvlpFd2_cFv();
extern void func_80252E70();
extern void __dt__15dOvlpFd2_dlst_cFv();
extern void cLib_addCalc2__FPffff();
extern void cLib_addCalc0__FPfff();
extern void cLib_chaseAngleS__FPsss();
extern void __dl__FPv();
extern void func_802E980C();
extern void PSMTXCopy();
extern void PSMTXTrans();
extern void C_MTXPerspective();
extern void GXSetVtxDesc();
extern void GXClearVtxDesc();
extern void GXSetVtxAttrFmt();
extern void GXSetTexCoordGen2();
extern void GXSetNumTexGens();
extern void GXBegin();
extern void GXSetCullMode();
extern void GXSetChanMatColor();
extern void GXSetNumChans();
extern void GXSetChanCtrl();
extern void GXInitTexObj();
extern void GXInitTexObjLOD();
extern void GXLoadTexObj();
extern void GXSetTevColorIn();
extern void GXSetTevAlphaIn();
extern void GXSetTevColorOp();
extern void GXSetTevAlphaOp();
extern void GXSetAlphaCompare();
extern void GXSetTevOrder();
extern void GXSetNumTevStages();
extern void GXSetFog();
extern void GXSetBlendMode();
extern void GXSetZMode();
extern void GXSetZCompLoc();
extern void GXSetDither();
extern void GXSetProjection();
extern void GXLoadPosMtxImm();
extern void GXSetCurrentMtx();
extern void GXSetViewport();
extern void GXSetScissor();
extern void GXSetClipMode();
extern void __ptmf_scall();
SECTION_DATA extern u8 g_mDoMtx_identity[72];
SECTION_DATA extern const void* __vt__12dDlst_base_c[3];
SECTION_DATA extern u8 d_d_ovlp_fade2__LIT_3695[12];
SECTION_DATA extern u8 d_d_ovlp_fade2__LIT_3721[12];
SECTION_DATA extern u8 d_d_ovlp_fade2__LIT_3736[12];
SECTION_DATA extern u8 d_d_ovlp_fade2__LIT_3765[12];
SECTION_DATA extern const void* __vt__15dOvlpFd2_dlst_c[5];
SECTION_DATA extern const void* __vt__16dDlst_snapShot_c[3];
SECTION_BSS extern u8 mFrameBufferTexObj__13mDoGph_gInf_c[32];
SECTION_BSS extern u8 now__14mDoMtx_stack_c[48];
SECTION_BSS extern u8 g_dComIfG_gameInfo[122384];
SECTION_SDATA extern u8 g_clearColor[4];
SECTION_SBSS extern u8 mFrameBufferTex__13mDoGph_gInf_c[4];
SECTION_SBSS extern u8 merged_80450BE4[4];
SECTION_SBSS extern u8 sManager__10JFWDisplay[4];
SECTION_SDATA2 extern u8 LIT_3631[4];
SECTION_SDATA2 extern u8 LIT_3683[4];
SECTION_SDATA2 extern f32 d_d_ovlp_fade2__LIT_3684;
SECTION_SDATA2 extern f32 d_d_ovlp_fade2__LIT_3685;
SECTION_SDATA2 extern f32 LIT_3686;
SECTION_SDATA2 extern f32 LIT_3687;
SECTION_SDATA2 extern f32 d_d_ovlp_fade2__LIT_3688;
SECTION_SDATA2 extern f32 d_d_ovlp_fade2__LIT_3689;
SECTION_SDATA2 extern f32 d_d_ovlp_fade2__LIT_3690;
SECTION_SDATA2 extern f32 d_d_ovlp_fade2__LIT_3691;
SECTION_SDATA2 extern u8 d_d_ovlp_fade2__LIT_3757[4];
SECTION_SDATA2 extern u8 d_d_ovlp_fade2__LIT_3794[4];
SECTION_SDATA2 extern u8 d_d_ovlp_fade2__LIT_3795[4];
SECTION_SDATA2 extern f32 d_d_ovlp_fade2__LIT_3822;
}


/* ###################################################################################### */
/*                                         .data                                          */
/* ###################################################################################### */

extern "C" {
/* 803C2CF0 000C .data      @3695                                                        */
SECTION_DATA u8 d_d_ovlp_fade2__LIT_3695[12] = {
	0x00, 0x00, 0x00, 0x00, 0xFF, 0xFF, 0xFF, 0xFF, 0x80, 0x25, 0x29, 0xF4,
};
/* 803C2CFC 000C .data      @3721                                                        */
SECTION_DATA u8 d_d_ovlp_fade2__LIT_3721[12] = {
	0x00, 0x00, 0x00, 0x00, 0xFF, 0xFF, 0xFF, 0xFF, 0x80, 0x25, 0x2A, 0x78,
};
/* 803C2D08 000C .data      @3736                                                        */
SECTION_DATA u8 d_d_ovlp_fade2__LIT_3736[12] = {
	0x00, 0x00, 0x00, 0x00, 0xFF, 0xFF, 0xFF, 0xFF, 0x80, 0x25, 0x2B, 0xC0,
};
/* 803C2D14 000C .data      @3765                                                        */
SECTION_DATA u8 d_d_ovlp_fade2__LIT_3765[12] = {
	0x00, 0x00, 0x00, 0x00, 0xFF, 0xFF, 0xFF, 0xFF, 0x80, 0x25, 0x2C, 0x68,
};
/* 803C2D20 0014 .data      l_dOvlpFd2_Method                                            */
SECTION_DATA u8 l_dOvlpFd2_Method[20] = {
	0x80, 0x25, 0x2E, 0x44, 0x80, 0x25, 0x2E, 0x3C, 0x80, 0x25, 0x2E, 0x08, 0x80, 0x25, 0x2E, 0x34,
	0x80, 0x25, 0x2D, 0x0C,
};
/* 803C2D34 0028 .data      g_profile_OVERLAP2                                           */
SECTION_DATA u8 g_profile_OVERLAP2[40] = {
	0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xFF, 0xFD, 0x00, 0x11, 0x00, 0x00, 0x80, 0x3A, 0x39, 0xE8,
	0x00, 0x00, 0x01, 0x20, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x80, 0x3A, 0x38, 0x78,
	0x03, 0x07, 0x00, 0x00, 0x80, 0x3C, 0x2D, 0x20,
};
/* 803C2D5C 0010 .data      __vt__15dOvlpFd2_dlst_c                                      */
SECTION_DATA const  void* __vt__15dOvlpFd2_dlst_c[5] = {
	NULL, /* RTTI */
	NULL,
	(void*)draw__15dOvlpFd2_dlst_cFv,
	(void*)__dt__15dOvlpFd2_dlst_cFv,
	/* padding */
	NULL,
};
}


/* ###################################################################################### */
/*                                        .sdata2                                         */
/* ###################################################################################### */

extern "C" {
/* 80454E20 0004 .sdata2    @3631                                                        */
SECTION_SDATA2 u8 LIT_3631[4] = {
	0xFF, 0xFF, 0xFF, 0xFF,
};
/* 80454E24 0004 .sdata2    @3683                                                        */
SECTION_SDATA2 u8 LIT_3683[4] = {
	0x00, 0x00, 0x00, 0x00,
};
/* 80454E28 0004 .sdata2    @3684                                                        */
// 0x44180000
SECTION_SDATA2 f32 d_d_ovlp_fade2__LIT_3684 = 608.000000f;
/* 80454E2C 0004 .sdata2    @3685                                                        */
// 0x43e00000
SECTION_SDATA2 f32 d_d_ovlp_fade2__LIT_3685 = 448.000000f;
/* 80454E30 0004 .sdata2    @3686                                                        */
// 0x3f800000
SECTION_SDATA2 f32 LIT_3686 = 1.000000f;
/* 80454E34 0004 .sdata2    @3687                                                        */
// 0x42700000
SECTION_SDATA2 f32 LIT_3687 = 60.000000f;
/* 80454E38 0004 .sdata2    @3688                                                        */
// 1.3571428f 0x3fadb6db
SECTION_SDATA2 f32 d_d_ovlp_fade2__LIT_3688 = 19.000000f / 14.000000f;
/* 80454E3C 0004 .sdata2    @3689                                                        */
// 0x42c80000
SECTION_SDATA2 f32 d_d_ovlp_fade2__LIT_3689 = 100.000000f;
/* 80454E40 0004 .sdata2    @3690                                                        */
// 0x47c35000
SECTION_SDATA2 f32 d_d_ovlp_fade2__LIT_3690 = 100000.000000f;
/* 80454E44 0004 .sdata2    @3691                                                        */
// 0xbf800000
SECTION_SDATA2 f32 d_d_ovlp_fade2__LIT_3691 = -1.000000f;
/* 80454E48 0004 .sdata2    @3757                                                        */
SECTION_SDATA2 u8 d_d_ovlp_fade2__LIT_3757[4] = {
	0x3D, 0x4C, 0xCC, 0xCD,
};
/* 80454E4C 0004 .sdata2    @3794                                                        */
SECTION_SDATA2 u8 d_d_ovlp_fade2__LIT_3794[4] = {
	0x3C, 0xF5, 0xC2, 0x8F,
};
/* 80454E50 0004 .sdata2    @3795                                                        */
SECTION_SDATA2 u8 d_d_ovlp_fade2__LIT_3795[4] = {
	0x3A, 0x83, 0x12, 0x6F,
};
/* 80454E54 0004 .sdata2    @3822                                                        */
// 0xc3d20000
SECTION_SDATA2 f32 d_d_ovlp_fade2__LIT_3822 = -420.000000f;
}


/* ###################################################################################### */
/*                                         .text                                          */
/* ###################################################################################### */

extern "C" {
/* 8025247C 0514 .text      draw__15dOvlpFd2_dlst_cFv                                    */
// dOvlpFd2_dlst_c::draw(void)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void draw__15dOvlpFd2_dlst_cFv() {
	nofralloc
#include "_include/d/d_ovlp_fade2/draw__15dOvlpFd2_dlst_cFv.s"
}
#pragma pop

/* 80252990 0064 .text      __ct__10dOvlpFd2_cFv                                         */
// dOvlpFd2_c::dOvlpFd2_c(void)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void __ct__10dOvlpFd2_cFv() {
	nofralloc
#include "_include/d/d_ovlp_fade2/__ct__10dOvlpFd2_cFv.s"
}
#pragma pop

/* 802529F4 0084 .text      execFirstSnap__10dOvlpFd2_cFv                                */
// dOvlpFd2_c::execFirstSnap(void)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void execFirstSnap__10dOvlpFd2_cFv() {
	nofralloc
#include "_include/d/d_ovlp_fade2/execFirstSnap__10dOvlpFd2_cFv.s"
}
#pragma pop

/* 80252A78 0148 .text      execFadeOut__10dOvlpFd2_cFv                                  */
// dOvlpFd2_c::execFadeOut(void)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void execFadeOut__10dOvlpFd2_cFv() {
	nofralloc
#include "_include/d/d_ovlp_fade2/execFadeOut__10dOvlpFd2_cFv.s"
}
#pragma pop

/* 80252BC0 00A8 .text      execNextSnap__10dOvlpFd2_cFv                                 */
// dOvlpFd2_c::execNextSnap(void)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void execNextSnap__10dOvlpFd2_cFv() {
	nofralloc
#include "_include/d/d_ovlp_fade2/execNextSnap__10dOvlpFd2_cFv.s"
}
#pragma pop

/* 80252C68 00A4 .text      execFadeIn__10dOvlpFd2_cFv                                   */
// dOvlpFd2_c::execFadeIn(void)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void execFadeIn__10dOvlpFd2_cFv() {
	nofralloc
#include "_include/d/d_ovlp_fade2/execFadeIn__10dOvlpFd2_cFv.s"
}
#pragma pop

/* 80252D0C 00FC .text      dOvlpFd2_Draw__FP10dOvlpFd2_c                                */
}

#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void dOvlpFd2_Draw(dOvlpFd2_c*) {
	nofralloc
#include "_include/d/d_ovlp_fade2/dOvlpFd2_Draw__FP10dOvlpFd2_c.s"
}
#pragma pop

extern "C" {
/* 80252E08 002C .text      dOvlpFd2_Execute__FP10dOvlpFd2_c                             */
}

#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void dOvlpFd2_Execute(dOvlpFd2_c*) {
	nofralloc
#include "_include/d/d_ovlp_fade2/dOvlpFd2_Execute__FP10dOvlpFd2_c.s"
}
#pragma pop

extern "C" {
/* 80252E34 0008 .text      dOvlpFd2_IsDelete__FP10dOvlpFd2_c                            */
// dOvlpFd2_IsDelete(dOvlpFd2_c*)
int dOvlpFd2_IsDelete__FP10dOvlpFd2_c() {
	return 1;
}

/* 80252E3C 0008 .text      dOvlpFd2_Delete__FP10dOvlpFd2_c                              */
// dOvlpFd2_Delete(dOvlpFd2_c*)
int dOvlpFd2_Delete__FP10dOvlpFd2_c() {
	return 1;
}

/* 80252E44 002C .text      dOvlpFd2_Create__FPv                                         */
}

#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void dOvlpFd2_Create(void*) {
	nofralloc
#include "_include/d/d_ovlp_fade2/dOvlpFd2_Create__FPv.s"
}
#pragma pop

extern "C" {
/* 80252E70 001C .text      cLib_calcTimer<Sc>__FPSc                                     */
// cLib_calcTimer<Sc>(s8*)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void func_80252E70() {
	nofralloc
#include "_include/d/d_ovlp_fade2/func_80252E70.s"
}
#pragma pop

/* 80252E8C 0048 .text      __dt__15dOvlpFd2_dlst_cFv                                    */
// dOvlpFd2_dlst_c::~dOvlpFd2_dlst_c(void)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void __dt__15dOvlpFd2_dlst_cFv() {
	nofralloc
#include "_include/d/d_ovlp_fade2/__dt__15dOvlpFd2_dlst_cFv.s"
}
#pragma pop

}

