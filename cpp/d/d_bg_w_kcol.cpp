// 
// Generated By: dol2asm
// 

#include "dolphin/types.h"

// 
// Additional Symbols:
// 

struct cM2dGCir;
struct cM3dGSph;
struct cM3dGTri;
struct Vec;

extern void cM_atan2s(f32, f32); /* cM_atan2s__Fff */
extern void cBgW_CheckBGround(f32); /* cBgW_CheckBGround__Ff */
extern void cBgW_CheckBRoof(f32); /* cBgW_CheckBRoof__Ff */
extern void cBgW_CheckBWall(f32); /* cBgW_CheckBWall__Ff */
extern void cM2d_CrossCirLin(cM2dGCir&, f32, f32, f32, f32, f32*, f32*); /* cM2d_CrossCirLin__FR8cM2dGCirffffPfPf */
extern void cM3d_Len2dSq(f32, f32, f32, f32); /* cM3d_Len2dSq__Fffff */
extern void cM3d_Len2dSqPntAndSegLine(f32, f32, f32, f32, f32, f32, f32*, f32*, f32*); /* cM3d_Len2dSqPntAndSegLine__FffffffPfPfPf */
extern void cM3d_Cross_SphTri(const cM3dGSph*, const cM3dGTri*, Vec*); /* cM3d_Cross_SphTri__FPC8cM3dGSphPC8cM3dGTriP3Vec */
extern void operator delete(void*); /* __dl__FPv */

extern "C" {
extern void setCode__5dBgPcFR5sBgPc();
extern void __ct__6dBgPlcFv();
extern void __dt__6dBgPlcFv();
extern void setBase__6dBgPlcFPv();
extern void getCode__6dBgPlcCFiPP5sBgPc();
extern void getGrpCode__6dBgPlcCFi();
extern void SetOldShapeAngleY__9dBgW_BaseFs();
extern void GetSpeedY__9dBgS_AcchFv();
extern void GetWallAddY__9dBgS_AcchFR3Vec();
extern void SetWallPolyIndex__9dBgS_AcchFii();
extern void CalcMovePosWork__9dBgS_AcchFv();
extern void ChkNoHorse__16dBgS_PolyPassChkFv();
extern void __ct__9dBgW_BaseFv();
extern void __dt__9dBgW_BaseFv();
extern void ClrDBgWBase__9dBgW_BaseFv();
extern int ChkMemoryError__9dBgW_BaseFv();
extern void CallRideCallBack__9dBgW_BaseFP10fopAc_ac_cP10fopAc_ac_c();
extern void CallArrowStickCallBack__9dBgW_BaseFP10fopAc_ac_cP10fopAc_ac_cR4cXyz();
extern void __dt__8dBgWKColFv();
extern void getTriNrm__8dBgWKColCFP12KC_PrismDataPP3Vec();
extern void ChkNotReady__8dBgWKColCFv();
extern int ChkLock__8dBgWKColCFv();
extern int ChkMoveBg__8dBgWKColCFv();
extern int ChkMoveFlag__8dBgWKColCFv();
extern void GetTriPla__8dBgWKColCFRC13cBgS_PolyInfo();
extern void GetTriPla__8dBgWKColCFi();
extern void GetTriPnt__8dBgWKColCFRC13cBgS_PolyInfoP4cXyzP4cXyzP4cXyz();
extern void GetTriPnt__8dBgWKColCFiP3VecP3VecP3Vec();
extern void GetTriPnt__8dBgWKColCFPC12KC_PrismDataP3VecP3VecP3Vec();
extern u8* GetBnd__8dBgWKColCFv(u8*);
extern void GetGrpInf__8dBgWKColCFRC13cBgS_PolyInfo();
extern void OffMoveFlag__8dBgWKColFv();
extern void getPolyCode__8dBgWKColCFiP5dBgPc();
extern void chkPolyThrough__8dBgWKColCFP5dBgPcP16cBgS_PolyPassChkP15cBgS_GrpPassChkR4cXyz();
extern void LineCheck__8dBgWKColFP11cBgS_LinChk();
extern void GroundCross__8dBgWKColFP11cBgS_GndChk();
extern void ShdwDraw__8dBgWKColFP13cBgS_ShdwDraw();
extern void ChkShdwDrawThrough__8dBgWKColFP5dBgPc();
extern void CaptPoly__8dBgWKColFR13dBgS_CaptPoly();
extern void WallCorrectSort__8dBgWKColFP9dBgS_Acch();
extern void WallCorrect__8dBgWKColFP9dBgS_Acch();
extern void RoofChk__8dBgWKColFP12dBgS_RoofChk();
extern void SplGrpChk__8dBgWKColFP14dBgS_SplGrpChk();
extern void SphChk__8dBgWKColFP11dBgS_SphChkPv();
extern void GetTopUnder__8dBgWKColCFPfPf();
extern void GetGrpRoomIndex__8dBgWKColCFRC13cBgS_PolyInfo();
extern void GetExitId__8dBgWKColFRC13cBgS_PolyInfo();
extern void GetPolyColor__8dBgWKColFRC13cBgS_PolyInfo();
extern void GetHorseNoEntry__8dBgWKColFRC13cBgS_PolyInfo();
extern void GetSpecialCode__8dBgWKColFRC13cBgS_PolyInfo();
extern void GetSpecialCode__8dBgWKColFi();
extern void GetMagnetCode__8dBgWKColFRC13cBgS_PolyInfo();
extern void GetMonkeyBarsCode__8dBgWKColFRC13cBgS_PolyInfo();
extern void GetPolyObjThrough__8dBgWKColFi();
extern void GetPolyCamThrough__8dBgWKColFi();
extern void GetPolyLinkThrough__8dBgWKColFi();
extern void GetPolyArrowThrough__8dBgWKColFi();
extern void GetPolyHSStick__8dBgWKColFi();
extern void GetPolyBoomerangThrough__8dBgWKColFi();
extern void GetPolyRopeThrough__8dBgWKColFi();
extern void GetPolyBombThrough__8dBgWKColFi();
extern void GetUnderwaterRoofCode__8dBgWKColFi();
extern void GetShdwThrough__8dBgWKColFi();
extern void GetLinkNo__8dBgWKColFRC13cBgS_PolyInfo();
extern void GetWallCode__8dBgWKColFRC13cBgS_PolyInfo();
extern void GetPolyAtt0__8dBgWKColFRC13cBgS_PolyInfo();
extern void GetPolyAtt1__8dBgWKColFRC13cBgS_PolyInfo();
extern void GetGroundCode__8dBgWKColFRC13cBgS_PolyInfo();
extern void GetIronBallThrough__8dBgWKColFi();
extern void GetAttackThrough__8dBgWKColFi();
extern void GetCamMoveBG__8dBgWKColFRC13cBgS_PolyInfo();
extern void GetRoomCamId__8dBgWKColFRC13cBgS_PolyInfo();
extern void GetRoomPathId__8dBgWKColFRC13cBgS_PolyInfo();
extern void GetRoomPathPntNo__8dBgWKColFRC13cBgS_PolyInfo();
extern void GetPolyGrpRoomInfId__8dBgWKColFRC13cBgS_PolyInfo();
extern void GetGrpSoundId__8dBgWKColFRC13cBgS_PolyInfo();
extern void CrrPos__8dBgWKColFRC13cBgS_PolyInfoPvbP4cXyzP5csXyzP5csXyz();
extern void TransPos__8dBgWKColFRC13cBgS_PolyInfoPvbP4cXyzP5csXyzP5csXyz();
extern void MatrixCrrPos__8dBgWKColFRC13cBgS_PolyInfoPvbP4cXyzP5csXyzP5csXyz();
extern void cM_atan2s__Fff();
extern void SetPolyIndex__13cBgS_PolyInfoFi();
extern void cBgW_CheckBGround__Ff();
extern void cBgW_CheckBRoof__Ff();
extern void cBgW_CheckBWall__Ff();
extern void cM2d_CrossCirLin__FR8cM2dGCirffffPfPf();
extern void cM3d_Len2dSq__Fffff();
extern void cM3d_Len2dSqPntAndSegLine__FffffffPfPfPf();
extern void cM3d_Cross_SphTri__FPC8cM3dGSphPC8cM3dGTriP3Vec();
extern void calcMinMax__8cM3dGCylFP4cXyzP4cXyz();
extern void SetupNP__8cM3dGPlaFRC3VecRC3Vec();
extern void GetMinMaxCube__8cM3dGSphCFR4cXyzR4cXyz();
extern void set__8cM3dGTriFPC3VecPC3VecPC3VecPC3Vec();
extern void __dl__FPv();
extern void PSVECAdd();
extern void PSVECSubtract();
extern void PSVECScale();
extern void PSVECDotProduct();
extern void PSVECCrossProduct();
extern void PSVECSquareDistance();
extern void __ptmf_scall();
extern void __cvt_fp2unsigned();
extern void __save_gpr();
extern void _savegpr_19();
extern void _savegpr_25();
extern void _savegpr_29();
extern void __restore_gpr();
extern void _restgpr_19();
extern void _restgpr_25();
extern void _restgpr_29();
SECTION_DATA extern const void* __vt__8cM3dGPla[3];
SECTION_DATA extern const void* __vt__8cM3dGAab[3];
SECTION_DATA extern const void* __vt__8cM3dGTri[3];
SECTION_DATA extern const void* __vt__8dBgWKCol[60];
SECTION_BSS extern u8 g_dComIfG_gameInfo[122384];
SECTION_BSS extern u8 data_80424F70[36];
SECTION_BSS extern u8 d_d_bg_w_kcol__l_wcsbuf[1008];
SECTION_BSS extern u8 data_80425384[36];
SECTION_BSS extern u8 sincosTable___5JMath[65536];
SECTION_SDATA extern u8 __float_nan[4];
SECTION_SBSS extern u8 G_CM3D_F_ABS_MIN[4];
SECTION_SDATA2 extern u8 d_d_bg_w_kcol__LIT_4187[4];
SECTION_SDATA2 extern f32 d_d_bg_w_kcol__LIT_4188;
SECTION_SDATA2 extern f32 d_d_bg_w_kcol__LIT_4189;
SECTION_SDATA2 extern u8 d_d_bg_w_kcol__LIT_4190[4];
SECTION_SDATA2 extern u8 d_d_bg_w_kcol__LIT_4191[4];
SECTION_SDATA2 extern u8 d_d_bg_w_kcol__LIT_4293[4];
SECTION_SDATA2 extern f64 d_d_bg_w_kcol__LIT_5298;
SECTION_SDATA2 extern f64 LIT_5299;
SECTION_SDATA2 extern u8 LIT_5300[8];
SECTION_SDATA2 extern u8 LIT_5301[8];
SECTION_SDATA2 extern f64 LIT_6099;
}


/* ###################################################################################### */
/*                                         .data                                          */
/* ###################################################################################### */

extern "C" {
/* 803ABDC8 00F0 .data      __vt__8dBgWKCol                                              */
SECTION_DATA const  void* __vt__8dBgWKCol[60] = {
	NULL, /* RTTI */
	NULL,
	(void*)__dt__8dBgWKColFv,
	(void*)ChkMemoryError__9dBgW_BaseFv,
	(void*)ChkNotReady__8dBgWKColCFv,
	(void*)ChkLock__8dBgWKColCFv,
	(void*)ChkMoveBg__8dBgWKColCFv,
	(void*)ChkMoveFlag__8dBgWKColCFv,
	(void*)GetTriPla__8dBgWKColCFRC13cBgS_PolyInfo,
	(void*)GetTriPnt__8dBgWKColCFRC13cBgS_PolyInfoP4cXyzP4cXyzP4cXyz,
	(void*)GetBnd__8dBgWKColCFv,
	(void*)GetGrpInf__8dBgWKColCFRC13cBgS_PolyInfo,
	(void*)OffMoveFlag__8dBgWKColFv,
	(void*)GetTopUnder__8dBgWKColCFPfPf,
	(void*)SetOldShapeAngleY__9dBgW_BaseFs,
	(void*)LineCheck__8dBgWKColFP11cBgS_LinChk,
	(void*)GroundCross__8dBgWKColFP11cBgS_GndChk,
	(void*)ShdwDraw__8dBgWKColFP13cBgS_ShdwDraw,
	(void*)CaptPoly__8dBgWKColFR13dBgS_CaptPoly,
	(void*)WallCorrect__8dBgWKColFP9dBgS_Acch,
	(void*)WallCorrectSort__8dBgWKColFP9dBgS_Acch,
	(void*)RoofChk__8dBgWKColFP12dBgS_RoofChk,
	(void*)SplGrpChk__8dBgWKColFP14dBgS_SplGrpChk,
	(void*)SphChk__8dBgWKColFP11dBgS_SphChkPv,
	(void*)GetGrpRoomIndex__8dBgWKColCFRC13cBgS_PolyInfo,
	(void*)GetExitId__8dBgWKColFRC13cBgS_PolyInfo,
	(void*)GetPolyColor__8dBgWKColFRC13cBgS_PolyInfo,
	(void*)GetHorseNoEntry__8dBgWKColFRC13cBgS_PolyInfo,
	(void*)GetSpecialCode__8dBgWKColFRC13cBgS_PolyInfo,
	(void*)GetSpecialCode__8dBgWKColFi,
	(void*)GetMagnetCode__8dBgWKColFRC13cBgS_PolyInfo,
	(void*)GetPolyObjThrough__8dBgWKColFi,
	(void*)GetPolyCamThrough__8dBgWKColFi,
	(void*)GetPolyLinkThrough__8dBgWKColFi,
	(void*)GetPolyArrowThrough__8dBgWKColFi,
	(void*)GetPolyHSStick__8dBgWKColFi,
	(void*)GetPolyBoomerangThrough__8dBgWKColFi,
	(void*)GetPolyRopeThrough__8dBgWKColFi,
	(void*)GetPolyBombThrough__8dBgWKColFi,
	(void*)GetShdwThrough__8dBgWKColFi,
	(void*)GetUnderwaterRoofCode__8dBgWKColFi,
	(void*)GetMonkeyBarsCode__8dBgWKColFRC13cBgS_PolyInfo,
	(void*)GetLinkNo__8dBgWKColFRC13cBgS_PolyInfo,
	(void*)GetWallCode__8dBgWKColFRC13cBgS_PolyInfo,
	(void*)GetPolyAtt0__8dBgWKColFRC13cBgS_PolyInfo,
	(void*)GetPolyAtt1__8dBgWKColFRC13cBgS_PolyInfo,
	(void*)GetGroundCode__8dBgWKColFRC13cBgS_PolyInfo,
	(void*)GetIronBallThrough__8dBgWKColFi,
	(void*)GetAttackThrough__8dBgWKColFi,
	(void*)GetCamMoveBG__8dBgWKColFRC13cBgS_PolyInfo,
	(void*)GetRoomCamId__8dBgWKColFRC13cBgS_PolyInfo,
	(void*)GetRoomPathId__8dBgWKColFRC13cBgS_PolyInfo,
	(void*)GetRoomPathPntNo__8dBgWKColFRC13cBgS_PolyInfo,
	(void*)GetPolyGrpRoomInfId__8dBgWKColFRC13cBgS_PolyInfo,
	(void*)GetGrpSoundId__8dBgWKColFRC13cBgS_PolyInfo,
	(void*)CrrPos__8dBgWKColFRC13cBgS_PolyInfoPvbP4cXyzP5csXyzP5csXyz,
	(void*)TransPos__8dBgWKColFRC13cBgS_PolyInfoPvbP4cXyzP5csXyzP5csXyz,
	(void*)MatrixCrrPos__8dBgWKColFRC13cBgS_PolyInfoPvbP4cXyzP5csXyzP5csXyz,
	(void*)CallRideCallBack__9dBgW_BaseFP10fopAc_ac_cP10fopAc_ac_c,
	(void*)CallArrowStickCallBack__9dBgW_BaseFP10fopAc_ac_cP10fopAc_ac_cR4cXyz,
};
}


/* ###################################################################################### */
/*                                        .sdata2                                         */
/* ###################################################################################### */

extern "C" {
/* 80452718 0004 .sdata2    @4187                                                        */
SECTION_SDATA2 u8 d_d_bg_w_kcol__LIT_4187[4] = {
	0x00, 0x00, 0x00, 0x00,
};
/* 8045271C 0004 .sdata2    @4188                                                        */
// 0x43fa0000
SECTION_SDATA2 f32 d_d_bg_w_kcol__LIT_4188 = 500.000000f;
/* 80452720 0004 .sdata2    @4189                                                        */
// 0x3f800000
SECTION_SDATA2 f32 d_d_bg_w_kcol__LIT_4189 = 1.000000f;
/* 80452724 0004 .sdata2    @4190                                                        */
SECTION_SDATA2 u8 d_d_bg_w_kcol__LIT_4190[4] = {
	0x3B, 0xF5, 0xC2, 0x8F,
};
/* 80452728 0004 .sdata2    @4191                                                        */
SECTION_SDATA2 u8 d_d_bg_w_kcol__LIT_4191[4] = {
	0xBB, 0xF5, 0xC2, 0x8F,
};
/* 8045272C 0004 .sdata2    @4293                                                        */
SECTION_SDATA2 u8 d_d_bg_w_kcol__LIT_4293[4] = {
	0x3C, 0x65, 0x60, 0x42,
};
/* 80452730 0008 .sdata2    @5298                                                        */
// 0x3fe0000000000000
SECTION_SDATA2 f64 d_d_bg_w_kcol__LIT_5298 = 0.500000;
/* 80452738 0008 .sdata2    @5299                                                        */
// 0x4008000000000000
SECTION_SDATA2 f64 LIT_5299 = 3.000000;
/* 80452740 0008 .sdata2    @5300                                                        */
SECTION_SDATA2 u8 LIT_5300[8] = {
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
};
/* 80452748 0004 .sdata2    @5301                                                        */
SECTION_SDATA2 u8 LIT_5301[8] = {
	0x3C, 0x03, 0x12, 0x6F,
	/* padding */
	0x00, 0x00, 0x00, 0x00,
};
/* 80452750 0008 .sdata2    @6099                                                        */
// 0x4330000000000000 | compiler-generated value used in cast: (float)u32
SECTION_SDATA2 f64 LIT_6099 = 4503599627370496.000000;
}


/* ###################################################################################### */
/*                                          .bss                                          */
/* ###################################################################################### */

extern "C" {
/* 80424F70 0024 .bss       vtx_tbl$4582                                                 */
SECTION_BSS u8 data_80424F70[36];
/* 80424F94 03F0 .bss       l_wcsbuf                                                     */
SECTION_BSS u8 d_d_bg_w_kcol__l_wcsbuf[1008];
/* 80425384 0024 .bss       vtx_tbl$5950                                                 */
SECTION_BSS u8 data_80425384[36];
}


/* ###################################################################################### */
/*                                         .text                                          */
/* ###################################################################################### */

extern "C" {
/* 8007E6F4 0058 .text      __ct__8dBgWKColFv                                            */
// dBgWKCol::dBgWKCol(void)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void __ct__8dBgWKColFv() {
	nofralloc
#include "_include/d/d_bg_w_kcol/__ct__8dBgWKColFv.s"
}
#pragma pop

/* 8007E74C 0084 .text      __dt__8dBgWKColFv                                            */
// dBgWKCol::~dBgWKCol(void)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void __dt__8dBgWKColFv() {
	nofralloc
#include "_include/d/d_bg_w_kcol/__dt__8dBgWKColFv.s"
}
#pragma pop

/* 8007E7D0 0034 .text      initKCollision__8dBgWKColFPv                                 */
// dBgWKCol::initKCollision(void*)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void initKCollision__8dBgWKColFPv() {
	nofralloc
#include "_include/d/d_bg_w_kcol/initKCollision__8dBgWKColFPv.s"
}
#pragma pop

/* 8007E804 004C .text      create__8dBgWKColFPvPv                                       */
// dBgWKCol::create(void*, void*)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void create__8dBgWKColFPvPv() {
	nofralloc
#include "_include/d/d_bg_w_kcol/create__8dBgWKColFPvPv.s"
}
#pragma pop

/* 8007E850 001C .text      getTriNrm__8dBgWKColCFP12KC_PrismDataPP3Vec                  */
// dBgWKCol::getTriNrm(KC_PrismData*, Vec**) const
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void getTriNrm__8dBgWKColCFP12KC_PrismDataPP3Vec() {
	nofralloc
#include "_include/d/d_bg_w_kcol/getTriNrm__8dBgWKColCFP12KC_PrismDataPP3Vec.s"
}
#pragma pop

/* 8007E86C 0010 .text      ChkNotReady__8dBgWKColCFv                                    */
// dBgWKCol::ChkNotReady(void) const
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void ChkNotReady__8dBgWKColCFv() {
	nofralloc
#include "_include/d/d_bg_w_kcol/ChkNotReady__8dBgWKColCFv.s"
}
#pragma pop

/* 8007E87C 0008 .text      ChkLock__8dBgWKColCFv                                        */
// dBgWKCol::ChkLock(void) const
int ChkLock__8dBgWKColCFv() {
	return 0;
}

/* 8007E884 0008 .text      ChkMoveBg__8dBgWKColCFv                                      */
// dBgWKCol::ChkMoveBg(void) const
int ChkMoveBg__8dBgWKColCFv() {
	return 0;
}

/* 8007E88C 0008 .text      ChkMoveFlag__8dBgWKColCFv                                    */
// dBgWKCol::ChkMoveFlag(void) const
int ChkMoveFlag__8dBgWKColCFv() {
	return 0;
}

/* 8007E894 002C .text      GetTriPla__8dBgWKColCFRC13cBgS_PolyInfo                      */
// dBgWKCol::GetTriPla(const cBgS_PolyInfo&) const
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void GetTriPla__8dBgWKColCFRC13cBgS_PolyInfo() {
	nofralloc
#include "_include/d/d_bg_w_kcol/GetTriPla__8dBgWKColCFRC13cBgS_PolyInfo.s"
}
#pragma pop

/* 8007E8C0 00C0 .text      GetTriPla__8dBgWKColCFi                                      */
// dBgWKCol::GetTriPla(int) const
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void GetTriPla__8dBgWKColCFi() {
	nofralloc
#include "_include/d/d_bg_w_kcol/GetTriPla__8dBgWKColCFi.s"
}
#pragma pop

/* 8007E980 0024 .text      GetTriPnt__8dBgWKColCFRC13cBgS_PolyInfoP4cXyzP4cXyzP4cXyz    */
// dBgWKCol::GetTriPnt(const cBgS_PolyInfo&, cXyz*, cXyz*, cXyz*) const
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void GetTriPnt__8dBgWKColCFRC13cBgS_PolyInfoP4cXyzP4cXyzP4cXyz() {
	nofralloc
#include "_include/d/d_bg_w_kcol/GetTriPnt__8dBgWKColCFRC13cBgS_PolyInfoP4cXyzP4cXyzP4cXyz.s"
}
#pragma pop

/* 8007E9A4 0030 .text      GetTriPnt__8dBgWKColCFiP3VecP3VecP3Vec                       */
// dBgWKCol::GetTriPnt(int, Vec*, Vec*, Vec*) const
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void GetTriPnt__8dBgWKColCFiP3VecP3VecP3Vec() {
	nofralloc
#include "_include/d/d_bg_w_kcol/GetTriPnt__8dBgWKColCFiP3VecP3VecP3Vec.s"
}
#pragma pop

/* 8007E9D4 0154 .text      GetTriPnt__8dBgWKColCFPC12KC_PrismDataP3VecP3VecP3Vec        */
// dBgWKCol::GetTriPnt(const KC_PrismData*, Vec*, Vec*, Vec*) const
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void GetTriPnt__8dBgWKColCFPC12KC_PrismDataP3VecP3VecP3Vec() {
	nofralloc
#include "_include/d/d_bg_w_kcol/GetTriPnt__8dBgWKColCFPC12KC_PrismDataP3VecP3VecP3Vec.s"
}
#pragma pop

/* 8007EB28 0008 .text      GetBnd__8dBgWKColCFv                                         */
// dBgWKCol::GetBnd(void) const
u8* GetBnd__8dBgWKColCFv(u8* param0) {
	return (u8*)&param0[32]; /* param0->field_0x20 */
}

/* 8007EB30 003C .text      GetGrpInf__8dBgWKColCFRC13cBgS_PolyInfo                      */
// dBgWKCol::GetGrpInf(const cBgS_PolyInfo&) const
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void GetGrpInf__8dBgWKColCFRC13cBgS_PolyInfo() {
	nofralloc
#include "_include/d/d_bg_w_kcol/GetGrpInf__8dBgWKColCFRC13cBgS_PolyInfo.s"
}
#pragma pop

/* 8007EB6C 0004 .text      OffMoveFlag__8dBgWKColFv                                     */
// dBgWKCol::OffMoveFlag(void)
void OffMoveFlag__8dBgWKColFv() {
	return;
}

/* 8007EB70 0054 .text      getPolyCode__8dBgWKColCFiP5dBgPc                             */
// dBgWKCol::getPolyCode(int, dBgPc*) const
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void getPolyCode__8dBgWKColCFiP5dBgPc() {
	nofralloc
#include "_include/d/d_bg_w_kcol/getPolyCode__8dBgWKColCFiP5dBgPc.s"
}
#pragma pop

/* 8007EBC4 0270 .text      chkPolyThrough__8dBgWKColCFP5dBgPcP16cBgS_PolyPassChkP15cBgS_GrpPassChkR4cXyz */
// dBgWKCol::chkPolyThrough(dBgPc*, cBgS_PolyPassChk*, cBgS_GrpPassChk*, cXyz&) const
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void chkPolyThrough__8dBgWKColCFP5dBgPcP16cBgS_PolyPassChkP15cBgS_GrpPassChkR4cXyz() {
	nofralloc
#include "_include/d/d_bg_w_kcol/chkPolyThrough__8dBgWKColCFP5dBgPcP16cBgS_PolyPassChkP15cBgS_GrpPassChkR4cXyz.s"
}
#pragma pop

/* 8007EE34 07F4 .text      LineCheck__8dBgWKColFP11cBgS_LinChk                          */
// dBgWKCol::LineCheck(cBgS_LinChk*)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void LineCheck__8dBgWKColFP11cBgS_LinChk() {
	nofralloc
#include "_include/d/d_bg_w_kcol/LineCheck__8dBgWKColFP11cBgS_LinChk.s"
}
#pragma pop

/* 8007F628 037C .text      GroundCross__8dBgWKColFP11cBgS_GndChk                        */
// dBgWKCol::GroundCross(cBgS_GndChk*)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void GroundCross__8dBgWKColFP11cBgS_GndChk() {
	nofralloc
#include "_include/d/d_bg_w_kcol/GroundCross__8dBgWKColFP11cBgS_GndChk.s"
}
#pragma pop

/* 8007F9A4 055C .text      ShdwDraw__8dBgWKColFP13cBgS_ShdwDraw                         */
// dBgWKCol::ShdwDraw(cBgS_ShdwDraw*)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void ShdwDraw__8dBgWKColFP13cBgS_ShdwDraw() {
	nofralloc
#include "_include/d/d_bg_w_kcol/ShdwDraw__8dBgWKColFP13cBgS_ShdwDraw.s"
}
#pragma pop

/* 8007FF00 001C .text      ChkShdwDrawThrough__8dBgWKColFP5dBgPc                        */
// dBgWKCol::ChkShdwDrawThrough(dBgPc*)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void ChkShdwDrawThrough__8dBgWKColFP5dBgPc() {
	nofralloc
#include "_include/d/d_bg_w_kcol/ChkShdwDrawThrough__8dBgWKColFP5dBgPc.s"
}
#pragma pop

/* 8007FF1C 0414 .text      CaptPoly__8dBgWKColFR13dBgS_CaptPoly                         */
// dBgWKCol::CaptPoly(dBgS_CaptPoly&)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void CaptPoly__8dBgWKColFR13dBgS_CaptPoly() {
	nofralloc
#include "_include/d/d_bg_w_kcol/CaptPoly__8dBgWKColFR13dBgS_CaptPoly.s"
}
#pragma pop

/* 80080330 0E70 .text      WallCorrectSort__8dBgWKColFP9dBgS_Acch                       */
// dBgWKCol::WallCorrectSort(dBgS_Acch*)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void WallCorrectSort__8dBgWKColFP9dBgS_Acch() {
	nofralloc
#include "_include/d/d_bg_w_kcol/WallCorrectSort__8dBgWKColFP9dBgS_Acch.s"
}
#pragma pop

/* 800811A0 0C78 .text      WallCorrect__8dBgWKColFP9dBgS_Acch                           */
// dBgWKCol::WallCorrect(dBgS_Acch*)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void WallCorrect__8dBgWKColFP9dBgS_Acch() {
	nofralloc
#include "_include/d/d_bg_w_kcol/WallCorrect__8dBgWKColFP9dBgS_Acch.s"
}
#pragma pop

/* 80081E18 036C .text      RoofChk__8dBgWKColFP12dBgS_RoofChk                           */
// dBgWKCol::RoofChk(dBgS_RoofChk*)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void RoofChk__8dBgWKColFP12dBgS_RoofChk() {
	nofralloc
#include "_include/d/d_bg_w_kcol/RoofChk__8dBgWKColFP12dBgS_RoofChk.s"
}
#pragma pop

/* 80082184 0368 .text      SplGrpChk__8dBgWKColFP14dBgS_SplGrpChk                       */
// dBgWKCol::SplGrpChk(dBgS_SplGrpChk*)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void SplGrpChk__8dBgWKColFP14dBgS_SplGrpChk() {
	nofralloc
#include "_include/d/d_bg_w_kcol/SplGrpChk__8dBgWKColFP14dBgS_SplGrpChk.s"
}
#pragma pop

/* 800824EC 04C0 .text      SphChk__8dBgWKColFP11dBgS_SphChkPv                           */
// dBgWKCol::SphChk(dBgS_SphChk*, void*)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void SphChk__8dBgWKColFP11dBgS_SphChkPv() {
	nofralloc
#include "_include/d/d_bg_w_kcol/SphChk__8dBgWKColFP11dBgS_SphChkPv.s"
}
#pragma pop

/* 800829AC 0044 .text      GetTopUnder__8dBgWKColCFPfPf                                 */
// dBgWKCol::GetTopUnder(f32*, f32*) const
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void GetTopUnder__8dBgWKColCFPfPf() {
	nofralloc
#include "_include/d/d_bg_w_kcol/GetTopUnder__8dBgWKColCFPfPf.s"
}
#pragma pop

/* 800829F0 0030 .text      GetGrpRoomIndex__8dBgWKColCFRC13cBgS_PolyInfo                */
// dBgWKCol::GetGrpRoomIndex(const cBgS_PolyInfo&) const
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void GetGrpRoomIndex__8dBgWKColCFRC13cBgS_PolyInfo() {
	nofralloc
#include "_include/d/d_bg_w_kcol/GetGrpRoomIndex__8dBgWKColCFRC13cBgS_PolyInfo.s"
}
#pragma pop

/* 80082A20 0030 .text      GetExitId__8dBgWKColFRC13cBgS_PolyInfo                       */
// dBgWKCol::GetExitId(const cBgS_PolyInfo&)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void GetExitId__8dBgWKColFRC13cBgS_PolyInfo() {
	nofralloc
#include "_include/d/d_bg_w_kcol/GetExitId__8dBgWKColFRC13cBgS_PolyInfo.s"
}
#pragma pop

/* 80082A50 0030 .text      GetPolyColor__8dBgWKColFRC13cBgS_PolyInfo                    */
// dBgWKCol::GetPolyColor(const cBgS_PolyInfo&)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void GetPolyColor__8dBgWKColFRC13cBgS_PolyInfo() {
	nofralloc
#include "_include/d/d_bg_w_kcol/GetPolyColor__8dBgWKColFRC13cBgS_PolyInfo.s"
}
#pragma pop

/* 80082A80 0030 .text      GetHorseNoEntry__8dBgWKColFRC13cBgS_PolyInfo                 */
// dBgWKCol::GetHorseNoEntry(const cBgS_PolyInfo&)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void GetHorseNoEntry__8dBgWKColFRC13cBgS_PolyInfo() {
	nofralloc
#include "_include/d/d_bg_w_kcol/GetHorseNoEntry__8dBgWKColFRC13cBgS_PolyInfo.s"
}
#pragma pop

/* 80082AB0 0030 .text      GetSpecialCode__8dBgWKColFRC13cBgS_PolyInfo                  */
// dBgWKCol::GetSpecialCode(const cBgS_PolyInfo&)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void GetSpecialCode__8dBgWKColFRC13cBgS_PolyInfo() {
	nofralloc
#include "_include/d/d_bg_w_kcol/GetSpecialCode__8dBgWKColFRC13cBgS_PolyInfo.s"
}
#pragma pop

/* 80082AE0 002C .text      GetSpecialCode__8dBgWKColFi                                  */
// dBgWKCol::GetSpecialCode(int)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void GetSpecialCode__8dBgWKColFi() {
	nofralloc
#include "_include/d/d_bg_w_kcol/GetSpecialCode__8dBgWKColFi.s"
}
#pragma pop

/* 80082B0C 0030 .text      GetMagnetCode__8dBgWKColFRC13cBgS_PolyInfo                   */
// dBgWKCol::GetMagnetCode(const cBgS_PolyInfo&)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void GetMagnetCode__8dBgWKColFRC13cBgS_PolyInfo() {
	nofralloc
#include "_include/d/d_bg_w_kcol/GetMagnetCode__8dBgWKColFRC13cBgS_PolyInfo.s"
}
#pragma pop

/* 80082B3C 0030 .text      GetMonkeyBarsCode__8dBgWKColFRC13cBgS_PolyInfo               */
// dBgWKCol::GetMonkeyBarsCode(const cBgS_PolyInfo&)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void GetMonkeyBarsCode__8dBgWKColFRC13cBgS_PolyInfo() {
	nofralloc
#include "_include/d/d_bg_w_kcol/GetMonkeyBarsCode__8dBgWKColFRC13cBgS_PolyInfo.s"
}
#pragma pop

/* 80082B6C 002C .text      GetPolyObjThrough__8dBgWKColFi                               */
// dBgWKCol::GetPolyObjThrough(int)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void GetPolyObjThrough__8dBgWKColFi() {
	nofralloc
#include "_include/d/d_bg_w_kcol/GetPolyObjThrough__8dBgWKColFi.s"
}
#pragma pop

/* 80082B98 002C .text      GetPolyCamThrough__8dBgWKColFi                               */
// dBgWKCol::GetPolyCamThrough(int)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void GetPolyCamThrough__8dBgWKColFi() {
	nofralloc
#include "_include/d/d_bg_w_kcol/GetPolyCamThrough__8dBgWKColFi.s"
}
#pragma pop

/* 80082BC4 002C .text      GetPolyLinkThrough__8dBgWKColFi                              */
// dBgWKCol::GetPolyLinkThrough(int)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void GetPolyLinkThrough__8dBgWKColFi() {
	nofralloc
#include "_include/d/d_bg_w_kcol/GetPolyLinkThrough__8dBgWKColFi.s"
}
#pragma pop

/* 80082BF0 002C .text      GetPolyArrowThrough__8dBgWKColFi                             */
// dBgWKCol::GetPolyArrowThrough(int)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void GetPolyArrowThrough__8dBgWKColFi() {
	nofralloc
#include "_include/d/d_bg_w_kcol/GetPolyArrowThrough__8dBgWKColFi.s"
}
#pragma pop

/* 80082C1C 002C .text      GetPolyHSStick__8dBgWKColFi                                  */
// dBgWKCol::GetPolyHSStick(int)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void GetPolyHSStick__8dBgWKColFi() {
	nofralloc
#include "_include/d/d_bg_w_kcol/GetPolyHSStick__8dBgWKColFi.s"
}
#pragma pop

/* 80082C48 002C .text      GetPolyBoomerangThrough__8dBgWKColFi                         */
// dBgWKCol::GetPolyBoomerangThrough(int)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void GetPolyBoomerangThrough__8dBgWKColFi() {
	nofralloc
#include "_include/d/d_bg_w_kcol/GetPolyBoomerangThrough__8dBgWKColFi.s"
}
#pragma pop

/* 80082C74 002C .text      GetPolyRopeThrough__8dBgWKColFi                              */
// dBgWKCol::GetPolyRopeThrough(int)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void GetPolyRopeThrough__8dBgWKColFi() {
	nofralloc
#include "_include/d/d_bg_w_kcol/GetPolyRopeThrough__8dBgWKColFi.s"
}
#pragma pop

/* 80082CA0 002C .text      GetPolyBombThrough__8dBgWKColFi                              */
// dBgWKCol::GetPolyBombThrough(int)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void GetPolyBombThrough__8dBgWKColFi() {
	nofralloc
#include "_include/d/d_bg_w_kcol/GetPolyBombThrough__8dBgWKColFi.s"
}
#pragma pop

/* 80082CCC 002C .text      GetUnderwaterRoofCode__8dBgWKColFi                           */
// dBgWKCol::GetUnderwaterRoofCode(int)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void GetUnderwaterRoofCode__8dBgWKColFi() {
	nofralloc
#include "_include/d/d_bg_w_kcol/GetUnderwaterRoofCode__8dBgWKColFi.s"
}
#pragma pop

/* 80082CF8 002C .text      GetShdwThrough__8dBgWKColFi                                  */
// dBgWKCol::GetShdwThrough(int)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void GetShdwThrough__8dBgWKColFi() {
	nofralloc
#include "_include/d/d_bg_w_kcol/GetShdwThrough__8dBgWKColFi.s"
}
#pragma pop

/* 80082D24 0030 .text      GetLinkNo__8dBgWKColFRC13cBgS_PolyInfo                       */
// dBgWKCol::GetLinkNo(const cBgS_PolyInfo&)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void GetLinkNo__8dBgWKColFRC13cBgS_PolyInfo() {
	nofralloc
#include "_include/d/d_bg_w_kcol/GetLinkNo__8dBgWKColFRC13cBgS_PolyInfo.s"
}
#pragma pop

/* 80082D54 0030 .text      GetWallCode__8dBgWKColFRC13cBgS_PolyInfo                     */
// dBgWKCol::GetWallCode(const cBgS_PolyInfo&)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void GetWallCode__8dBgWKColFRC13cBgS_PolyInfo() {
	nofralloc
#include "_include/d/d_bg_w_kcol/GetWallCode__8dBgWKColFRC13cBgS_PolyInfo.s"
}
#pragma pop

/* 80082D84 0030 .text      GetPolyAtt0__8dBgWKColFRC13cBgS_PolyInfo                     */
// dBgWKCol::GetPolyAtt0(const cBgS_PolyInfo&)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void GetPolyAtt0__8dBgWKColFRC13cBgS_PolyInfo() {
	nofralloc
#include "_include/d/d_bg_w_kcol/GetPolyAtt0__8dBgWKColFRC13cBgS_PolyInfo.s"
}
#pragma pop

/* 80082DB4 0030 .text      GetPolyAtt1__8dBgWKColFRC13cBgS_PolyInfo                     */
// dBgWKCol::GetPolyAtt1(const cBgS_PolyInfo&)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void GetPolyAtt1__8dBgWKColFRC13cBgS_PolyInfo() {
	nofralloc
#include "_include/d/d_bg_w_kcol/GetPolyAtt1__8dBgWKColFRC13cBgS_PolyInfo.s"
}
#pragma pop

/* 80082DE4 0030 .text      GetGroundCode__8dBgWKColFRC13cBgS_PolyInfo                   */
// dBgWKCol::GetGroundCode(const cBgS_PolyInfo&)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void GetGroundCode__8dBgWKColFRC13cBgS_PolyInfo() {
	nofralloc
#include "_include/d/d_bg_w_kcol/GetGroundCode__8dBgWKColFRC13cBgS_PolyInfo.s"
}
#pragma pop

/* 80082E14 002C .text      GetIronBallThrough__8dBgWKColFi                              */
// dBgWKCol::GetIronBallThrough(int)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void GetIronBallThrough__8dBgWKColFi() {
	nofralloc
#include "_include/d/d_bg_w_kcol/GetIronBallThrough__8dBgWKColFi.s"
}
#pragma pop

/* 80082E40 002C .text      GetAttackThrough__8dBgWKColFi                                */
// dBgWKCol::GetAttackThrough(int)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void GetAttackThrough__8dBgWKColFi() {
	nofralloc
#include "_include/d/d_bg_w_kcol/GetAttackThrough__8dBgWKColFi.s"
}
#pragma pop

/* 80082E6C 0030 .text      GetCamMoveBG__8dBgWKColFRC13cBgS_PolyInfo                    */
// dBgWKCol::GetCamMoveBG(const cBgS_PolyInfo&)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void GetCamMoveBG__8dBgWKColFRC13cBgS_PolyInfo() {
	nofralloc
#include "_include/d/d_bg_w_kcol/GetCamMoveBG__8dBgWKColFRC13cBgS_PolyInfo.s"
}
#pragma pop

/* 80082E9C 0030 .text      GetRoomCamId__8dBgWKColFRC13cBgS_PolyInfo                    */
// dBgWKCol::GetRoomCamId(const cBgS_PolyInfo&)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void GetRoomCamId__8dBgWKColFRC13cBgS_PolyInfo() {
	nofralloc
#include "_include/d/d_bg_w_kcol/GetRoomCamId__8dBgWKColFRC13cBgS_PolyInfo.s"
}
#pragma pop

/* 80082ECC 0030 .text      GetRoomPathId__8dBgWKColFRC13cBgS_PolyInfo                   */
// dBgWKCol::GetRoomPathId(const cBgS_PolyInfo&)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void GetRoomPathId__8dBgWKColFRC13cBgS_PolyInfo() {
	nofralloc
#include "_include/d/d_bg_w_kcol/GetRoomPathId__8dBgWKColFRC13cBgS_PolyInfo.s"
}
#pragma pop

/* 80082EFC 0030 .text      GetRoomPathPntNo__8dBgWKColFRC13cBgS_PolyInfo                */
// dBgWKCol::GetRoomPathPntNo(const cBgS_PolyInfo&)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void GetRoomPathPntNo__8dBgWKColFRC13cBgS_PolyInfo() {
	nofralloc
#include "_include/d/d_bg_w_kcol/GetRoomPathPntNo__8dBgWKColFRC13cBgS_PolyInfo.s"
}
#pragma pop

/* 80082F2C 0030 .text      GetPolyGrpRoomInfId__8dBgWKColFRC13cBgS_PolyInfo             */
// dBgWKCol::GetPolyGrpRoomInfId(const cBgS_PolyInfo&)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void GetPolyGrpRoomInfId__8dBgWKColFRC13cBgS_PolyInfo() {
	nofralloc
#include "_include/d/d_bg_w_kcol/GetPolyGrpRoomInfId__8dBgWKColFRC13cBgS_PolyInfo.s"
}
#pragma pop

/* 80082F5C 0030 .text      GetGrpSoundId__8dBgWKColFRC13cBgS_PolyInfo                   */
// dBgWKCol::GetGrpSoundId(const cBgS_PolyInfo&)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void GetGrpSoundId__8dBgWKColFRC13cBgS_PolyInfo() {
	nofralloc
#include "_include/d/d_bg_w_kcol/GetGrpSoundId__8dBgWKColFRC13cBgS_PolyInfo.s"
}
#pragma pop

/* 80082F8C 0004 .text      CrrPos__8dBgWKColFRC13cBgS_PolyInfoPvbP4cXyzP5csXyzP5csXyz   */
// dBgWKCol::CrrPos(const cBgS_PolyInfo&, void*, bool, cXyz*, csXyz*, csXyz*)
void CrrPos__8dBgWKColFRC13cBgS_PolyInfoPvbP4cXyzP5csXyzP5csXyz() {
	return;
}

/* 80082F90 0004 .text      TransPos__8dBgWKColFRC13cBgS_PolyInfoPvbP4cXyzP5csXyzP5csXyz */
// dBgWKCol::TransPos(const cBgS_PolyInfo&, void*, bool, cXyz*, csXyz*, csXyz*)
void TransPos__8dBgWKColFRC13cBgS_PolyInfoPvbP4cXyzP5csXyzP5csXyz() {
	return;
}

/* 80082F94 0004 .text      MatrixCrrPos__8dBgWKColFRC13cBgS_PolyInfoPvbP4cXyzP5csXyzP5csXyz */
// dBgWKCol::MatrixCrrPos(const cBgS_PolyInfo&, void*, bool, cXyz*, csXyz*, csXyz*)
void MatrixCrrPos__8dBgWKColFRC13cBgS_PolyInfoPvbP4cXyzP5csXyzP5csXyz() {
	return;
}

}

