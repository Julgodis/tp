// 
// Generated By: dol2asm
// 

#include "dolphin/types.h"

// 
// Additional Symbols:
// 

extern void operator delete(void*); /* __dl__FPv */

extern "C" {
extern u32 mDoExt_getCurrentHeap__Fv();
extern void __ct__13CPaneMgrAlphaFP9J2DScreenUxUcP10JKRExpHeap();
extern void __dt__13CPaneMgrAlphaFv();
extern void initiateAlpha__13CPaneMgrAlphaFP7J2DPaneP10JKRExpHeap();
extern void isVisible__13CPaneMgrAlphaFv();
extern void rateCalc__13CPaneMgrAlphaFssUc();
extern void setAlpha__13CPaneMgrAlphaFUc();
extern void setAlphaRate__13CPaneMgrAlphaFf();
extern void childPaneCount__13CPaneMgrAlphaFP7J2DPane();
extern void childPaneGetAlpha__13CPaneMgrAlphaFP7J2DPane();
extern void childPaneSetAlpha__13CPaneMgrAlphaFP7J2DPaneUc();
extern void __dt__17CPaneMgrAlphaMorfFv();
extern void initiateAlphaMorf__17CPaneMgrAlphaMorfFv();
extern void setBackupAlpha__17CPaneMgrAlphaMorfFv();
extern void childPaneBackupAlpha__17CPaneMgrAlphaMorfFP7J2DPane();
extern void childPaneSetAlphaMorf__17CPaneMgrAlphaMorfFP7J2DPanef();
extern void alloc__7JKRHeapFUli();
extern void free__7JKRHeapFPv();
extern void __dl__FPv();
extern void getFirstChildPane__7J2DPaneFv();
extern void getNextChildPane__7J2DPaneFv();
extern void _savegpr_28();
extern void _savegpr_29();
extern void _restgpr_28();
extern void _restgpr_29();
SECTION_DATA extern const void* __vt__17CPaneMgrAlphaMorf[4];
SECTION_DATA extern const void* __vt__13CPaneMgrAlpha[4];
SECTION_SDATA2 extern u8 d_d_pane_class_alpha__LIT_3692[8];
SECTION_SDATA2 extern f64 d_d_pane_class_alpha__LIT_3694;
SECTION_SDATA2 extern f64 LIT_3708;
SECTION_SDATA2 extern u8 d_d_pane_class_alpha__LIT_3721[8];
}


/* ###################################################################################### */
/*                                         .data                                          */
/* ###################################################################################### */

extern "C" {
/* 803C2E18 0010 .data      __vt__17CPaneMgrAlphaMorf                                    */
SECTION_DATA const  void* __vt__17CPaneMgrAlphaMorf[4] = {
	NULL, /* RTTI */
	NULL,
	(void*)__dt__17CPaneMgrAlphaMorfFv,
	(void*)setAlpha__13CPaneMgrAlphaFUc,
};
/* 803C2E28 0010 .data      __vt__13CPaneMgrAlpha                                        */
SECTION_DATA const  void* __vt__13CPaneMgrAlpha[4] = {
	NULL, /* RTTI */
	NULL,
	(void*)__dt__13CPaneMgrAlphaFv,
	(void*)setAlpha__13CPaneMgrAlphaFUc,
};
}


/* ###################################################################################### */
/*                                        .sdata2                                         */
/* ###################################################################################### */

extern "C" {
/* 80454EB8 0004 .sdata2    @3692                                                        */
SECTION_SDATA2 u8 d_d_pane_class_alpha__LIT_3692[8] = {
	0x3F, 0x80, 0x00, 0x00,
	/* padding */
	0x00, 0x00, 0x00, 0x00,
};
/* 80454EC0 0008 .sdata2    @3694                                                        */
// 0x4330000080000000 | compiler-generated value used in cast: (float)s32
SECTION_SDATA2 f64 d_d_pane_class_alpha__LIT_3694 = 4503601774854144.000000;
/* 80454EC8 0008 .sdata2    @3708                                                        */
// 0x4330000000000000 | compiler-generated value used in cast: (float)u32
SECTION_SDATA2 f64 LIT_3708 = 4503599627370496.000000;
/* 80454ED0 0004 .sdata2    @3721                                                        */
SECTION_SDATA2 u8 d_d_pane_class_alpha__LIT_3721[8] = {
	0x00, 0x00, 0x00, 0x00,
	/* padding */
	0x00, 0x00, 0x00, 0x00,
};
}


/* ###################################################################################### */
/*                                         .text                                          */
/* ###################################################################################### */

extern "C" {
/* 802553EC 0010 .text      __ct__13CPaneMgrAlphaFv                                      */
// CPaneMgrAlpha::CPaneMgrAlpha(void)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void __ct__13CPaneMgrAlphaFv() {
	nofralloc
#include "_include/d/d_pane_class_alpha/__ct__13CPaneMgrAlphaFv.s"
}
#pragma pop

/* 802553FC 0070 .text      __ct__13CPaneMgrAlphaFP9J2DScreenUxUcP10JKRExpHeap           */
// CPaneMgrAlpha::CPaneMgrAlpha(J2DScreen*, u64, u8, JKRExpHeap*)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void __ct__13CPaneMgrAlphaFP9J2DScreenUxUcP10JKRExpHeap() {
	nofralloc
#include "_include/d/d_pane_class_alpha/__ct__13CPaneMgrAlphaFP9J2DScreenUxUcP10JKRExpHeap.s"
}
#pragma pop

/* 8025546C 0074 .text      __dt__13CPaneMgrAlphaFv                                      */
// CPaneMgrAlpha::~CPaneMgrAlpha(void)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void __dt__13CPaneMgrAlphaFv() {
	nofralloc
#include "_include/d/d_pane_class_alpha/__dt__13CPaneMgrAlphaFv.s"
}
#pragma pop

/* 802554E0 00E8 .text      initiateAlpha__13CPaneMgrAlphaFP7J2DPaneP10JKRExpHeap        */
// CPaneMgrAlpha::initiateAlpha(J2DPane*, JKRExpHeap*)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void initiateAlpha__13CPaneMgrAlphaFP7J2DPaneP10JKRExpHeap() {
	nofralloc
#include "_include/d/d_pane_class_alpha/initiateAlpha__13CPaneMgrAlphaFP7J2DPaneP10JKRExpHeap.s"
}
#pragma pop

/* 802555C8 0040 .text      show__13CPaneMgrAlphaFv                                      */
// CPaneMgrAlpha::show(void)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void show__13CPaneMgrAlphaFv() {
	nofralloc
#include "_include/d/d_pane_class_alpha/show__13CPaneMgrAlphaFv.s"
}
#pragma pop

/* 80255608 0044 .text      hide__13CPaneMgrAlphaFv                                      */
// CPaneMgrAlpha::hide(void)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void hide__13CPaneMgrAlphaFv() {
	nofralloc
#include "_include/d/d_pane_class_alpha/hide__13CPaneMgrAlphaFv.s"
}
#pragma pop

/* 8025564C 000C .text      isVisible__13CPaneMgrAlphaFv                                 */
// CPaneMgrAlpha::isVisible(void)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void isVisible__13CPaneMgrAlphaFv() {
	nofralloc
#include "_include/d/d_pane_class_alpha/isVisible__13CPaneMgrAlphaFv.s"
}
#pragma pop

/* 80255658 0100 .text      rateCalc__13CPaneMgrAlphaFssUc                               */
// CPaneMgrAlpha::rateCalc(s16, s16, u8)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void rateCalc__13CPaneMgrAlphaFssUc() {
	nofralloc
#include "_include/d/d_pane_class_alpha/rateCalc__13CPaneMgrAlphaFssUc.s"
}
#pragma pop

/* 80255758 0078 .text      setAlpha__13CPaneMgrAlphaFUc                                 */
// CPaneMgrAlpha::setAlpha(u8)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void setAlpha__13CPaneMgrAlphaFUc() {
	nofralloc
#include "_include/d/d_pane_class_alpha/setAlpha__13CPaneMgrAlphaFUc.s"
}
#pragma pop

/* 802557D0 0058 .text      setAlphaRate__13CPaneMgrAlphaFf                              */
// CPaneMgrAlpha::setAlphaRate(f32)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void setAlphaRate__13CPaneMgrAlphaFf() {
	nofralloc
#include "_include/d/d_pane_class_alpha/setAlphaRate__13CPaneMgrAlphaFf.s"
}
#pragma pop

/* 80255828 0050 .text      getAlphaRate__13CPaneMgrAlphaFv                              */
// CPaneMgrAlpha::getAlphaRate(void)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void getAlphaRate__13CPaneMgrAlphaFv() {
	nofralloc
#include "_include/d/d_pane_class_alpha/getAlphaRate__13CPaneMgrAlphaFv.s"
}
#pragma pop

/* 80255878 00EC .text      alphaAnime__13CPaneMgrAlphaFsUcUcUc                          */
// CPaneMgrAlpha::alphaAnime(s16, u8, u8, u8)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void alphaAnime__13CPaneMgrAlphaFsUcUcUc() {
	nofralloc
#include "_include/d/d_pane_class_alpha/alphaAnime__13CPaneMgrAlphaFsUcUcUc.s"
}
#pragma pop

/* 80255964 00FC .text      alphaAnimeLoop__13CPaneMgrAlphaFsUcUcUc                      */
// CPaneMgrAlpha::alphaAnimeLoop(s16, u8, u8, u8)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void alphaAnimeLoop__13CPaneMgrAlphaFsUcUcUc() {
	nofralloc
#include "_include/d/d_pane_class_alpha/alphaAnimeLoop__13CPaneMgrAlphaFsUcUcUc.s"
}
#pragma pop

/* 80255A60 006C .text      childPaneCount__13CPaneMgrAlphaFP7J2DPane                    */
// CPaneMgrAlpha::childPaneCount(J2DPane*)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void childPaneCount__13CPaneMgrAlphaFP7J2DPane() {
	nofralloc
#include "_include/d/d_pane_class_alpha/childPaneCount__13CPaneMgrAlphaFP7J2DPane.s"
}
#pragma pop

/* 80255ACC 0090 .text      childPaneGetAlpha__13CPaneMgrAlphaFP7J2DPane                 */
// CPaneMgrAlpha::childPaneGetAlpha(J2DPane*)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void childPaneGetAlpha__13CPaneMgrAlphaFP7J2DPane() {
	nofralloc
#include "_include/d/d_pane_class_alpha/childPaneGetAlpha__13CPaneMgrAlphaFP7J2DPane.s"
}
#pragma pop

/* 80255B5C 010C .text      childPaneSetAlpha__13CPaneMgrAlphaFP7J2DPaneUc               */
// CPaneMgrAlpha::childPaneSetAlpha(J2DPane*, u8)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void childPaneSetAlpha__13CPaneMgrAlphaFP7J2DPaneUc() {
	nofralloc
#include "_include/d/d_pane_class_alpha/childPaneSetAlpha__13CPaneMgrAlphaFP7J2DPaneUc.s"
}
#pragma pop

/* 80255C68 0044 .text      __ct__17CPaneMgrAlphaMorfFP9J2DScreenUxUcP10JKRExpHeap       */
// CPaneMgrAlphaMorf::CPaneMgrAlphaMorf(J2DScreen*, u64, u8, JKRExpHeap*)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void __ct__17CPaneMgrAlphaMorfFP9J2DScreenUxUcP10JKRExpHeap() {
	nofralloc
#include "_include/d/d_pane_class_alpha/__ct__17CPaneMgrAlphaMorfFP9J2DScreenUxUcP10JKRExpHeap.s"
}
#pragma pop

/* 80255CAC 009C .text      __dt__17CPaneMgrAlphaMorfFv                                  */
// CPaneMgrAlphaMorf::~CPaneMgrAlphaMorf(void)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void __dt__17CPaneMgrAlphaMorfFv() {
	nofralloc
#include "_include/d/d_pane_class_alpha/__dt__17CPaneMgrAlphaMorfFv.s"
}
#pragma pop

/* 80255D48 0088 .text      initiateAlphaMorf__17CPaneMgrAlphaMorfFv                     */
// CPaneMgrAlphaMorf::initiateAlphaMorf(void)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void initiateAlphaMorf__17CPaneMgrAlphaMorfFv() {
	nofralloc
#include "_include/d/d_pane_class_alpha/initiateAlphaMorf__17CPaneMgrAlphaMorfFv.s"
}
#pragma pop

/* 80255DD0 0058 .text      setBackupAlpha__17CPaneMgrAlphaMorfFv                        */
// CPaneMgrAlphaMorf::setBackupAlpha(void)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void setBackupAlpha__17CPaneMgrAlphaMorfFv() {
	nofralloc
#include "_include/d/d_pane_class_alpha/setBackupAlpha__17CPaneMgrAlphaMorfFv.s"
}
#pragma pop

/* 80255E28 0070 .text      setAlphaMorfRate__17CPaneMgrAlphaMorfFf                      */
// CPaneMgrAlphaMorf::setAlphaMorfRate(f32)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void setAlphaMorfRate__17CPaneMgrAlphaMorfFf() {
	nofralloc
#include "_include/d/d_pane_class_alpha/setAlphaMorfRate__17CPaneMgrAlphaMorfFf.s"
}
#pragma pop

/* 80255E98 0090 .text      childPaneBackupAlpha__17CPaneMgrAlphaMorfFP7J2DPane          */
// CPaneMgrAlphaMorf::childPaneBackupAlpha(J2DPane*)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void childPaneBackupAlpha__17CPaneMgrAlphaMorfFP7J2DPane() {
	nofralloc
#include "_include/d/d_pane_class_alpha/childPaneBackupAlpha__17CPaneMgrAlphaMorfFP7J2DPane.s"
}
#pragma pop

/* 80255F28 00F0 .text      childPaneSetAlphaMorf__17CPaneMgrAlphaMorfFP7J2DPanef        */
// CPaneMgrAlphaMorf::childPaneSetAlphaMorf(J2DPane*, f32)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void childPaneSetAlphaMorf__17CPaneMgrAlphaMorfFP7J2DPanef() {
	nofralloc
#include "_include/d/d_pane_class_alpha/childPaneSetAlphaMorf__17CPaneMgrAlphaMorfFP7J2DPanef.s"
}
#pragma pop

}

