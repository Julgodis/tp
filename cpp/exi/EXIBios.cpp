// 
// Generated By: dol2asm
// 

#include "dolphin/types.h"

// 
// Additional Symbols:
// 

extern "C" {
extern void OSGetConsoleType();
extern void __OSGetDIConfig();
extern void OSRegisterVersion();
extern void OSSetCurrentContext();
extern void OSClearContext();
extern void OSDisableInterrupts();
extern void OSRestoreInterrupts();
extern void __OSSetInterruptHandler();
extern void __OSGetInterruptHandler();
extern void __OSMaskInterrupts();
extern void __OSUnmaskInterrupts();
extern void OSGetTime();
extern void SetExiInterruptMask();
extern void EXIImm();
extern void EXISync();
extern void EXIClearInterrupts();
extern void __EXIProbe();
extern void EXISelect();
extern void EXIDeselect();
extern void EXIIntrruptHandler();
extern void TCIntrruptHandler();
extern void EXTIntrruptHandler();
extern void EXILock();
extern void UnlockedHandler();
extern void EXIGetID();
extern void __OSEnableBarnacle();
extern void __div2i();
extern void memmove();
SECTION_BSS extern u8 Ecb[192];
SECTION_SDATA extern u8 __EXIVersion[8];
SECTION_SBSS extern u8 __OSInIPL[4];
SECTION_SBSS extern u8 IDSerialPort1[4];
}


/* ###################################################################################### */
/*                                         .data                                          */
/* ###################################################################################### */

extern "C" {
/* 803D10A8 0000 .data      ...data.0                                                    */
/* 803D10A8 0045 .data      @1                                                           */
SECTION_DATA u8 EXIBios__LIT_1[72] = {
	0x3C, 0x3C, 0x20, 0x44, 0x6F, 0x6C, 0x70, 0x68, 0x69, 0x6E, 0x20, 0x53, 0x44, 0x4B, 0x20, 0x2D,
	0x20, 0x45, 0x58, 0x49, 0x09, 0x72, 0x65, 0x6C, 0x65, 0x61, 0x73, 0x65, 0x20, 0x62, 0x75, 0x69,
	0x6C, 0x64, 0x3A, 0x20, 0x41, 0x70, 0x72, 0x20, 0x20, 0x35, 0x20, 0x32, 0x30, 0x30, 0x34, 0x20,
	0x30, 0x34, 0x3A, 0x31, 0x34, 0x3A, 0x31, 0x34, 0x20, 0x28, 0x30, 0x78, 0x32, 0x33, 0x30, 0x31,
	0x29, 0x20, 0x3E, 0x3E, 0x00,
	/* padding */
	0x00, 0x00, 0x00,
};
/* 803D10F0 000F .data      @473                                                         */
SECTION_DATA u8 LIT_473[16] = {
	0x4D, 0x65, 0x6D, 0x6F, 0x72, 0x79, 0x20, 0x43, 0x61, 0x72, 0x64, 0x20, 0x35, 0x39, 0x00,
	/* padding */
	0x00,
};
/* 803D1100 0010 .data      @474                                                         */
SECTION_DATA u8 LIT_474[16] = {
	0x4D, 0x65, 0x6D, 0x6F, 0x72, 0x79, 0x20, 0x43, 0x61, 0x72, 0x64, 0x20, 0x31, 0x32, 0x33, 0x00,
};
/* 803D1110 0010 .data      @475                                                         */
SECTION_DATA u8 LIT_475[16] = {
	0x4D, 0x65, 0x6D, 0x6F, 0x72, 0x79, 0x20, 0x43, 0x61, 0x72, 0x64, 0x20, 0x32, 0x35, 0x31, 0x00,
};
/* 803D1120 0010 .data      @476                                                         */
SECTION_DATA u8 EXIBios__LIT_476[16] = {
	0x4D, 0x65, 0x6D, 0x6F, 0x72, 0x79, 0x20, 0x43, 0x61, 0x72, 0x64, 0x20, 0x35, 0x30, 0x37, 0x00,
};
/* 803D1130 0011 .data      @477                                                         */
SECTION_DATA u8 LIT_477[20] = {
	0x4D, 0x65, 0x6D, 0x6F, 0x72, 0x79, 0x20, 0x43, 0x61, 0x72, 0x64, 0x20, 0x31, 0x30, 0x31, 0x39,
	0x00,
	/* padding */
	0x00, 0x00, 0x00,
};
/* 803D1144 0011 .data      @478                                                         */
SECTION_DATA u8 LIT_478[20] = {
	0x4D, 0x65, 0x6D, 0x6F, 0x72, 0x79, 0x20, 0x43, 0x61, 0x72, 0x64, 0x20, 0x32, 0x30, 0x34, 0x33,
	0x00,
	/* padding */
	0x00, 0x00, 0x00,
};
/* 803D1158 000C .data      @479                                                         */
SECTION_DATA u8 LIT_479[12] = {
	0x55, 0x53, 0x42, 0x20, 0x41, 0x64, 0x61, 0x70, 0x74, 0x65, 0x72, 0x00,
};
/* 803D1164 0009 .data      @485                                                         */
SECTION_DATA u8 LIT_485[12] = {
	0x4E, 0x65, 0x74, 0x20, 0x43, 0x61, 0x72, 0x64, 0x00,
	/* padding */
	0x00, 0x00, 0x00,
};
/* 803D1170 000D .data      @486                                                         */
SECTION_DATA u8 EXIBios__LIT_486[16] = {
	0x41, 0x72, 0x74, 0x69, 0x73, 0x74, 0x20, 0x45, 0x74, 0x68, 0x65, 0x72, 0x00,
	/* padding */
	0x00, 0x00, 0x00,
};
/* 803D1180 0012 .data      @487                                                         */
SECTION_DATA u8 EXIBios__LIT_487[20] = {
	0x42, 0x72, 0x6F, 0x61, 0x64, 0x62, 0x61, 0x6E, 0x64, 0x20, 0x41, 0x64, 0x61, 0x70, 0x74, 0x65,
	0x72, 0x00,
	/* padding */
	0x00, 0x00,
};
/* 803D1194 000E .data      @489                                                         */
SECTION_DATA u8 EXIBios__LIT_489[16] = {
	0x53, 0x74, 0x72, 0x65, 0x61, 0x6D, 0x20, 0x48, 0x61, 0x6E, 0x67, 0x65, 0x72, 0x00,
	/* padding */
	0x00, 0x00,
};
/* 803D11A4 000E .data      @490                                                         */
SECTION_DATA u8 EXIBios__LIT_490[20] = {
	0x49, 0x53, 0x2D, 0x44, 0x4F, 0x4C, 0x2D, 0x56, 0x49, 0x45, 0x57, 0x45, 0x52, 0x00,
	/* padding */
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
};
}


/* ###################################################################################### */
/*                                         .sdata                                         */
/* ###################################################################################### */

extern "C" {
/* 804509C0 0004 .sdata     __EXIVersion                                                 */
SECTION_SDATA u8 __EXIVersion[8] = {
	0x80, 0x3D, 0x10, 0xA8,
	/* padding */
	0x00, 0x00, 0x00, 0x00,
};
}


/* ###################################################################################### */
/*                                          .bss                                          */
/* ###################################################################################### */

extern "C" {
/* 8044C570 00C0 .bss       Ecb                                                          */
SECTION_BSS u8 Ecb[192];
}


/* ###################################################################################### */
/*                                         .sbss                                          */
/* ###################################################################################### */

extern "C" {
/* 804516D8 0004 .sbss      IDSerialPort1                                                */
SECTION_SBSS u8 IDSerialPort1[4];
SECTION_SBSS u8 pad_804516DC[4];
}


/* ###################################################################################### */
/*                                         .text                                          */
/* ###################################################################################### */

extern "C" {
/* 80342C0C 00F4 .text      SetExiInterruptMask                                          */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void SetExiInterruptMask() {
	nofralloc
#include "_include/exi/EXIBios/SetExiInterruptMask.s"
}
#pragma pop

/* 80342D00 025C .text      EXIImm                                                       */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void EXIImm() {
	nofralloc
#include "_include/exi/EXIBios/EXIImm.s"
}
#pragma pop

/* 80342F5C 00A0 .text      EXIImmEx                                                     */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void EXIImmEx() {
	nofralloc
#include "_include/exi/EXIBios/EXIImmEx.s"
}
#pragma pop

/* 80342FFC 00EC .text      EXIDma                                                       */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void EXIDma() {
	nofralloc
#include "_include/exi/EXIBios/EXIDma.s"
}
#pragma pop

/* 803430E8 024C .text      EXISync                                                      */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void EXISync() {
	nofralloc
#include "_include/exi/EXIBios/EXISync.s"
}
#pragma pop

/* 80343334 0048 .text      EXIClearInterrupts                                           */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void EXIClearInterrupts() {
	nofralloc
#include "_include/exi/EXIBios/EXIClearInterrupts.s"
}
#pragma pop

/* 8034337C 007C .text      EXISetExiCallback                                            */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void EXISetExiCallback() {
	nofralloc
#include "_include/exi/EXIBios/EXISetExiCallback.s"
}
#pragma pop

/* 803433F8 0174 .text      __EXIProbe                                                   */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void __EXIProbe() {
	nofralloc
#include "_include/exi/EXIBios/__EXIProbe.s"
}
#pragma pop

/* 8034356C 0080 .text      EXIProbe                                                     */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void EXIProbe() {
	nofralloc
#include "_include/exi/EXIBios/EXIProbe.s"
}
#pragma pop

/* 803435EC 00B4 .text      EXIProbeEx                                                   */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void EXIProbeEx() {
	nofralloc
#include "_include/exi/EXIBios/EXIProbeEx.s"
}
#pragma pop

/* 803436A0 010C .text      EXIAttach                                                    */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void EXIAttach() {
	nofralloc
#include "_include/exi/EXIBios/EXIAttach.s"
}
#pragma pop

/* 803437AC 00BC .text      EXIDetach                                                    */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void EXIDetach() {
	nofralloc
#include "_include/exi/EXIBios/EXIDetach.s"
}
#pragma pop

/* 80343868 012C .text      EXISelect                                                    */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void EXISelect() {
	nofralloc
#include "_include/exi/EXIBios/EXISelect.s"
}
#pragma pop

/* 80343994 0110 .text      EXIDeselect                                                  */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void EXIDeselect() {
	nofralloc
#include "_include/exi/EXIBios/EXIDeselect.s"
}
#pragma pop

/* 80343AA4 00C8 .text      EXIIntrruptHandler                                           */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void EXIIntrruptHandler() {
	nofralloc
#include "_include/exi/EXIBios/EXIIntrruptHandler.s"
}
#pragma pop

/* 80343B6C 0218 .text      TCIntrruptHandler                                            */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void TCIntrruptHandler() {
	nofralloc
#include "_include/exi/EXIBios/TCIntrruptHandler.s"
}
#pragma pop

/* 80343D84 00D0 .text      EXTIntrruptHandler                                           */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void EXTIntrruptHandler() {
	nofralloc
#include "_include/exi/EXIBios/EXTIntrruptHandler.s"
}
#pragma pop

/* 80343E54 01D4 .text      EXIInit                                                      */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void EXIInit() {
	nofralloc
#include "_include/exi/EXIBios/EXIInit.s"
}
#pragma pop

/* 80344028 00F4 .text      EXILock                                                      */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void EXILock() {
	nofralloc
#include "_include/exi/EXIBios/EXILock.s"
}
#pragma pop

/* 8034411C 00DC .text      EXIUnlock                                                    */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void EXIUnlock() {
	nofralloc
#include "_include/exi/EXIBios/EXIUnlock.s"
}
#pragma pop

/* 803441F8 0018 .text      EXIGetState                                                  */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void EXIGetState() {
	nofralloc
#include "_include/exi/EXIBios/EXIGetState.s"
}
#pragma pop

/* 80344210 0028 .text      UnlockedHandler                                              */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void UnlockedHandler() {
	nofralloc
#include "_include/exi/EXIBios/UnlockedHandler.s"
}
#pragma pop

/* 80344238 03B0 .text      EXIGetID                                                     */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void EXIGetID() {
	nofralloc
#include "_include/exi/EXIBios/EXIGetID.s"
}
#pragma pop

}

