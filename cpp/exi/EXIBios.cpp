// 
// Generated By: dol2asm
// 

#include "dolphin/types.h"

// 
// Additional Symbols:
// 

extern "C" {
/* Function             */
extern void OSGetConsoleType();
/* Function             */
extern void __OSGetDIConfig();
/* Function             */
extern void OSRegisterVersion();
/* Function             */
extern void OSSetCurrentContext();
/* Function             */
extern void OSClearContext();
/* Function             */
extern void OSDisableInterrupts();
/* Function             */
extern void OSRestoreInterrupts();
/* Function             */
extern void __OSSetInterruptHandler();
/* Function             */
extern void __OSGetInterruptHandler();
/* Function             */
extern void __OSMaskInterrupts();
/* Function             */
extern void __OSUnmaskInterrupts();
/* Function             */
extern void OSGetTime();
/* Function             */
extern void SetExiInterruptMask();
/* Function             */
extern void EXIImm();
/* Function             */
extern void EXIImmEx();
/* Function             */
extern void EXIDma();
/* Function             */
extern void EXISync();
/* Function             */
extern void EXIClearInterrupts();
/* Function             */
extern void EXISetExiCallback();
/* Function             */
extern void __EXIProbe();
/* Function             */
extern void EXIProbe();
/* Function             */
extern void EXIProbeEx();
/* Function             */
extern void EXIAttach();
/* Function             */
extern void EXIDetach();
/* Function             */
extern void EXISelect();
/* Function             */
extern void EXIDeselect();
/* Function             */
extern void EXIIntrruptHandler();
/* Function             */
extern void TCIntrruptHandler();
/* Function             */
extern void EXTIntrruptHandler();
/* Function             */
extern void EXIInit();
/* Function             */
extern void EXILock();
/* Function             */
extern void EXIUnlock();
/* Function             */
extern void EXIGetState();
/* Function             */
extern void UnlockedHandler();
/* Function             */
extern void EXIGetID();
/* Function             */
extern void __OSEnableBarnacle();
/* Function             */
extern void __div2i();
/* Function             */
extern void memmove();
/* InitializedData      */
SECTION_DATA extern u8 EXIBios__LIT_1[72];
/* InitializedData      */
SECTION_DATA extern u8 LIT_473[16];
/* InitializedData      */
SECTION_DATA extern u8 LIT_474[16];
/* InitializedData      */
SECTION_DATA extern u8 LIT_475[16];
/* InitializedData      */
SECTION_DATA extern u8 EXIBios__LIT_476[16];
/* InitializedData      */
SECTION_DATA extern u8 LIT_477[20];
/* InitializedData      */
SECTION_DATA extern u8 LIT_478[20];
/* InitializedData      */
SECTION_DATA extern u8 LIT_479[12];
/* InitializedData      */
SECTION_DATA extern u8 LIT_485[12];
/* InitializedData      */
SECTION_DATA extern u8 EXIBios__LIT_486[16];
/* InitializedData      */
SECTION_DATA extern u8 EXIBios__LIT_487[20];
/* InitializedData      */
SECTION_DATA extern u8 EXIBios__LIT_489[16];
/* InitializedData      */
SECTION_DATA extern u8 EXIBios__LIT_490[20];
/* ZeroInitializedData  */
SECTION_BSS extern u8 Ecb[192];
/* SymbolReferenceArrayData */
SECTION_SDATA extern void* __EXIVersion[2];
/* ZeroInitializedData  */
SECTION_SBSS extern u8 __OSInIPL[4 + 4 /* padding */];
/* ZeroInitializedData  */
SECTION_SBSS extern u8 IDSerialPort1[4 + 4 /* padding */];
}


/* ###################################################################################### */
/*                                         .data                                          */
/* ###################################################################################### */

extern "C" {
/* 803D10A8-803D10A8 0000 .data      ...data.0                                                    InitializedData */
/* 803D10A8-803D10F0 0045 .data      @1                                                           InitializedData */
SECTION_DATA u8 EXIBios__LIT_1[72] = {
	0x3C, 0x3C, 0x20, 0x44, 0x6F, 0x6C, 0x70, 0x68, 0x69, 0x6E, 0x20, 0x53, 0x44, 0x4B, 0x20, 0x2D,
	0x20, 0x45, 0x58, 0x49, 0x09, 0x72, 0x65, 0x6C, 0x65, 0x61, 0x73, 0x65, 0x20, 0x62, 0x75, 0x69,
	0x6C, 0x64, 0x3A, 0x20, 0x41, 0x70, 0x72, 0x20, 0x20, 0x35, 0x20, 0x32, 0x30, 0x30, 0x34, 0x20,
	0x30, 0x34, 0x3A, 0x31, 0x34, 0x3A, 0x31, 0x34, 0x20, 0x28, 0x30, 0x78, 0x32, 0x33, 0x30, 0x31,
	0x29, 0x20, 0x3E, 0x3E, 0x00,
	/* padding */
	0x00, 0x00, 0x00,
};
/* 803D10F0-803D1100 000F .data      @473                                                         InitializedData */
SECTION_DATA u8 LIT_473[16] = {
	0x4D, 0x65, 0x6D, 0x6F, 0x72, 0x79, 0x20, 0x43, 0x61, 0x72, 0x64, 0x20, 0x35, 0x39, 0x00,
	/* padding */
	0x00,
};
/* 803D1100-803D1110 0010 .data      @474                                                         InitializedData */
SECTION_DATA u8 LIT_474[16] = {
	0x4D, 0x65, 0x6D, 0x6F, 0x72, 0x79, 0x20, 0x43, 0x61, 0x72, 0x64, 0x20, 0x31, 0x32, 0x33, 0x00,
};
/* 803D1110-803D1120 0010 .data      @475                                                         InitializedData */
SECTION_DATA u8 LIT_475[16] = {
	0x4D, 0x65, 0x6D, 0x6F, 0x72, 0x79, 0x20, 0x43, 0x61, 0x72, 0x64, 0x20, 0x32, 0x35, 0x31, 0x00,
};
/* 803D1120-803D1130 0010 .data      @476                                                         InitializedData */
SECTION_DATA u8 EXIBios__LIT_476[16] = {
	0x4D, 0x65, 0x6D, 0x6F, 0x72, 0x79, 0x20, 0x43, 0x61, 0x72, 0x64, 0x20, 0x35, 0x30, 0x37, 0x00,
};
/* 803D1130-803D1144 0011 .data      @477                                                         InitializedData */
SECTION_DATA u8 LIT_477[20] = {
	0x4D, 0x65, 0x6D, 0x6F, 0x72, 0x79, 0x20, 0x43, 0x61, 0x72, 0x64, 0x20, 0x31, 0x30, 0x31, 0x39,
	0x00,
	/* padding */
	0x00, 0x00, 0x00,
};
/* 803D1144-803D1158 0011 .data      @478                                                         InitializedData */
SECTION_DATA u8 LIT_478[20] = {
	0x4D, 0x65, 0x6D, 0x6F, 0x72, 0x79, 0x20, 0x43, 0x61, 0x72, 0x64, 0x20, 0x32, 0x30, 0x34, 0x33,
	0x00,
	/* padding */
	0x00, 0x00, 0x00,
};
/* 803D1158-803D1164 000C .data      @479                                                         InitializedData */
SECTION_DATA u8 LIT_479[12] = {
	0x55, 0x53, 0x42, 0x20, 0x41, 0x64, 0x61, 0x70, 0x74, 0x65, 0x72, 0x00,
};
/* 803D1164-803D1170 0009 .data      @485                                                         InitializedData */
SECTION_DATA u8 LIT_485[12] = {
	0x4E, 0x65, 0x74, 0x20, 0x43, 0x61, 0x72, 0x64, 0x00,
	/* padding */
	0x00, 0x00, 0x00,
};
/* 803D1170-803D1180 000D .data      @486                                                         InitializedData */
SECTION_DATA u8 EXIBios__LIT_486[16] = {
	0x41, 0x72, 0x74, 0x69, 0x73, 0x74, 0x20, 0x45, 0x74, 0x68, 0x65, 0x72, 0x00,
	/* padding */
	0x00, 0x00, 0x00,
};
/* 803D1180-803D1194 0012 .data      @487                                                         InitializedData */
SECTION_DATA u8 EXIBios__LIT_487[20] = {
	0x42, 0x72, 0x6F, 0x61, 0x64, 0x62, 0x61, 0x6E, 0x64, 0x20, 0x41, 0x64, 0x61, 0x70, 0x74, 0x65,
	0x72, 0x00,
	/* padding */
	0x00, 0x00,
};
/* 803D1194-803D11A4 000E .data      @489                                                         InitializedData */
SECTION_DATA u8 EXIBios__LIT_489[16] = {
	0x53, 0x74, 0x72, 0x65, 0x61, 0x6D, 0x20, 0x48, 0x61, 0x6E, 0x67, 0x65, 0x72, 0x00,
	/* padding */
	0x00, 0x00,
};
/* 803D11A4-803D11B8 000E .data      @490                                                         InitializedData */
SECTION_DATA u8 EXIBios__LIT_490[20] = {
	0x49, 0x53, 0x2D, 0x44, 0x4F, 0x4C, 0x2D, 0x56, 0x49, 0x45, 0x57, 0x45, 0x52, 0x00,
	/* padding */
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
};
}


/* ###################################################################################### */
/*                                         .sdata                                         */
/* ###################################################################################### */

extern "C" {
/* 804509C0-804509C8 0004 .sdata     __EXIVersion                                                 SymbolReferenceArrayData */
SECTION_SDATA void* __EXIVersion[2] = {
	(void*)&EXIBios__LIT_1,
	/* padding */
	NULL,
};
}


/* ###################################################################################### */
/*                                          .bss                                          */
/* ###################################################################################### */

extern "C" {
/* 8044C570-8044C630 00C0 .bss       Ecb                                                          ZeroInitializedData */
SECTION_BSS u8 Ecb[192];
}


/* ###################################################################################### */
/*                                         .sbss                                          */
/* ###################################################################################### */

extern "C" {
/* 804516D8-804516E0 0004 .sbss      IDSerialPort1                                                ZeroInitializedData */
SECTION_SBSS u8 IDSerialPort1[4 + 4 /* padding */];
}


/* ###################################################################################### */
/*                                         .text                                          */
/* ###################################################################################### */

extern "C" {
/* 80342C0C-80342D00 00F4 .text      SetExiInterruptMask                                          Function */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void SetExiInterruptMask() {
	nofralloc
#include "_include/exi/EXIBios/SetExiInterruptMask.s"
}
#pragma pop

/* 80342D00-80342F5C 025C .text      EXIImm                                                       Function */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void EXIImm() {
	nofralloc
#include "_include/exi/EXIBios/EXIImm.s"
}
#pragma pop

/* 80342F5C-80342FFC 00A0 .text      EXIImmEx                                                     Function */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void EXIImmEx() {
	nofralloc
#include "_include/exi/EXIBios/EXIImmEx.s"
}
#pragma pop

/* 80342FFC-803430E8 00EC .text      EXIDma                                                       Function */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void EXIDma() {
	nofralloc
#include "_include/exi/EXIBios/EXIDma.s"
}
#pragma pop

/* 803430E8-80343334 024C .text      EXISync                                                      Function */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void EXISync() {
	nofralloc
#include "_include/exi/EXIBios/EXISync.s"
}
#pragma pop

/* 80343334-8034337C 0048 .text      EXIClearInterrupts                                           Function */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void EXIClearInterrupts() {
	nofralloc
#include "_include/exi/EXIBios/EXIClearInterrupts.s"
}
#pragma pop

/* 8034337C-803433F8 007C .text      EXISetExiCallback                                            Function */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void EXISetExiCallback() {
	nofralloc
#include "_include/exi/EXIBios/EXISetExiCallback.s"
}
#pragma pop

/* 803433F8-8034356C 0174 .text      __EXIProbe                                                   Function */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void __EXIProbe() {
	nofralloc
#include "_include/exi/EXIBios/__EXIProbe.s"
}
#pragma pop

/* 8034356C-803435EC 0080 .text      EXIProbe                                                     Function */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void EXIProbe() {
	nofralloc
#include "_include/exi/EXIBios/EXIProbe.s"
}
#pragma pop

/* 803435EC-803436A0 00B4 .text      EXIProbeEx                                                   Function */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void EXIProbeEx() {
	nofralloc
#include "_include/exi/EXIBios/EXIProbeEx.s"
}
#pragma pop

/* 803436A0-803437AC 010C .text      EXIAttach                                                    Function */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void EXIAttach() {
	nofralloc
#include "_include/exi/EXIBios/EXIAttach.s"
}
#pragma pop

/* 803437AC-80343868 00BC .text      EXIDetach                                                    Function */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void EXIDetach() {
	nofralloc
#include "_include/exi/EXIBios/EXIDetach.s"
}
#pragma pop

/* 80343868-80343994 012C .text      EXISelect                                                    Function */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void EXISelect() {
	nofralloc
#include "_include/exi/EXIBios/EXISelect.s"
}
#pragma pop

/* 80343994-80343AA4 0110 .text      EXIDeselect                                                  Function */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void EXIDeselect() {
	nofralloc
#include "_include/exi/EXIBios/EXIDeselect.s"
}
#pragma pop

/* 80343AA4-80343B6C 00C8 .text      EXIIntrruptHandler                                           Function */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void EXIIntrruptHandler() {
	nofralloc
#include "_include/exi/EXIBios/EXIIntrruptHandler.s"
}
#pragma pop

/* 80343B6C-80343D84 0218 .text      TCIntrruptHandler                                            Function */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void TCIntrruptHandler() {
	nofralloc
#include "_include/exi/EXIBios/TCIntrruptHandler.s"
}
#pragma pop

/* 80343D84-80343E54 00D0 .text      EXTIntrruptHandler                                           Function */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void EXTIntrruptHandler() {
	nofralloc
#include "_include/exi/EXIBios/EXTIntrruptHandler.s"
}
#pragma pop

/* 80343E54-80344028 01D4 .text      EXIInit                                                      Function */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void EXIInit() {
	nofralloc
#include "_include/exi/EXIBios/EXIInit.s"
}
#pragma pop

/* 80344028-8034411C 00F4 .text      EXILock                                                      Function */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void EXILock() {
	nofralloc
#include "_include/exi/EXIBios/EXILock.s"
}
#pragma pop

/* 8034411C-803441F8 00DC .text      EXIUnlock                                                    Function */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void EXIUnlock() {
	nofralloc
#include "_include/exi/EXIBios/EXIUnlock.s"
}
#pragma pop

/* 803441F8-80344210 0018 .text      EXIGetState                                                  Function */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void EXIGetState() {
	nofralloc
#include "_include/exi/EXIBios/EXIGetState.s"
}
#pragma pop

/* 80344210-80344238 0028 .text      UnlockedHandler                                              Function */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void UnlockedHandler() {
	nofralloc
#include "_include/exi/EXIBios/UnlockedHandler.s"
}
#pragma pop

/* 80344238-803445E8 03B0 .text      EXIGetID                                                     Function */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void EXIGetID() {
	nofralloc
#include "_include/exi/EXIBios/EXIGetID.s"
}
#pragma pop

}

