// 
// Generated By: dol2asm
// 

#include "dolphin/types.h"

// 
// Additional Symbols:
// 

extern "C" {
extern void stop__8JAISoundFUl();
extern void stop__8JAISoundFv();
extern void moveVolume__18JAISoundParamsMoveFfUl();
extern void movePitch__18JAISoundParamsMoveFfUl();
extern void func_802A2FEC();
extern void linearTransform__6Z2CalcFfffffb();
extern void getParamByExp__6Z2CalcFffffffQ26Z2Calc9CurveSign();
extern void seStart__7Z2SeMgrF10JAISoundIDPC3VecUlScffffUc();
extern void subBgmStart__8Z2SeqMgrFUl();
extern void stopWolfHowlSong__8Z2SeqMgrFv();
extern void resetState__13Z2WolfHowlMgrFv();
extern void calcVolumeMod__13Z2WolfHowlMgrFf();
extern void getNowPitch__13Z2WolfHowlMgrFv();
extern void calcPitchMod__13Z2WolfHowlMgrFff();
extern void getCorrectLine__13Z2WolfHowlMgrFUc();
extern void getCorrectLineNum__13Z2WolfHowlMgrFv();
extern void checkLine__13Z2WolfHowlMgrFv();
extern void getOnLineNum__13Z2WolfHowlMgrFv();
extern void PSVECSquareDistance();
extern void _savegpr_28();
extern void _savegpr_29();
extern void _restgpr_28();
extern void _restgpr_29();
SECTION_DATA extern u8 sGuideData[72];
SECTION_BSS extern u8 sCorrectPhrase[36];
SECTION_BSS extern u8 sWindStoneSound[36];
SECTION_BSS extern u8 sCorrectDuo[40];
SECTION_SDATA extern u8 cPitchDown[4];
SECTION_SDATA extern f32 cPitchCenter;
SECTION_SDATA extern u8 cPitchUp[4];
SECTION_SDATA extern u8 merged_8045088C[4];
SECTION_SDATA extern u8 cR_FlatWidth[4];
SECTION_SDATA extern u8 merged_80450894[4];
SECTION_SDATA extern f32 sStickHigh;
SECTION_SDATA extern u8 sStickCenter[4];
SECTION_SDATA extern u8 __float_nan[4];
SECTION_SBSS extern u8 data_80450B38[4];
SECTION_SBSS extern u8 data_80450B44[4];
SECTION_SBSS extern u8 data_80450B60[4];
SECTION_SBSS extern u8 data_80450B74[4];
SECTION_SBSS extern u8 data_80450B80[4];
SECTION_SBSS extern u8 data_80450B84[4];
SECTION_SBSS extern u8 data_80450B88[4];
SECTION_SBSS extern u8 mLinkPtr__14Z2CreatureLink[4];
SECTION_SDATA2 extern u8 LIT_3485[4];
SECTION_SDATA2 extern f32 LIT_3486;
SECTION_SDATA2 extern f32 LIT_3527;
SECTION_SDATA2 extern f32 LIT_3528;
SECTION_SDATA2 extern f64 LIT_3530;
SECTION_SDATA2 extern u8 LIT_3589[4];
SECTION_SDATA2 extern f32 LIT_3590;
SECTION_SDATA2 extern u8 Z2WolfHowlMgr__LIT_3711[4];
SECTION_SDATA2 extern u8 LIT_3712[4];
SECTION_SDATA2 extern u8 Z2WolfHowlMgr__LIT_3713[4];
SECTION_SDATA2 extern u8 Z2WolfHowlMgr__LIT_3714[4];
SECTION_SDATA2 extern u8 LIT_3715[4];
SECTION_SDATA2 extern u8 Z2WolfHowlMgr__LIT_3716[4];
SECTION_SDATA2 extern u8 Z2WolfHowlMgr__LIT_3717[4];
SECTION_SDATA2 extern u8 Z2WolfHowlMgr__LIT_3718[4];
SECTION_SDATA2 extern u8 Z2WolfHowlMgr__LIT_3719[4];
SECTION_SDATA2 extern u8 Z2WolfHowlMgr__LIT_3720[4];
SECTION_SDATA2 extern f64 Z2WolfHowlMgr__LIT_4032;
SECTION_SDATA2 extern f64 Z2WolfHowlMgr__LIT_4033;
SECTION_SDATA2 extern u8 Z2WolfHowlMgr__LIT_4034[8];
SECTION_SDATA2 extern f32 Z2WolfHowlMgr__LIT_4035;
SECTION_SDATA2 extern f32 Z2WolfHowlMgr__LIT_4036;
SECTION_SDATA2 extern f32 Z2WolfHowlMgr__LIT_4037;
SECTION_SDATA2 extern u8 Z2WolfHowlMgr__LIT_4038[4];
SECTION_SDATA2 extern u8 Z2WolfHowlMgr__LIT_4039[4];
SECTION_SDATA2 extern u8 Z2WolfHowlMgr__LIT_4040[4];
SECTION_SDATA2 extern u8 Z2WolfHowlMgr__LIT_4041[8];
}


/* ###################################################################################### */
/*                                         .data                                          */
/* ###################################################################################### */

extern "C" {
/* 803CBC50 000C .data      sHowlUmakusa                                                 */
SECTION_DATA u8 sHowlUmakusa[12] = {
	0x01, 0x0F, 0x02, 0x0F, 0x03, 0x3C, 0x01, 0x0F, 0x02, 0x0F, 0x03, 0x3C,
};
/* 803CBC5C 000C .data      sHowlZeldaSong                                               */
SECTION_DATA u8 sHowlZeldaSong[12] = {
	0x02, 0x1E, 0x01, 0x0F, 0x03, 0x2D, 0x02, 0x1E, 0x01, 0x0F, 0x03, 0x2D,
};
/* 803CBC68 000C .data      sHowlLightPrelude                                            */
SECTION_DATA u8 sHowlLightPrelude[12] = {
	0x01, 0x14, 0x03, 0x28, 0x01, 0x14, 0x03, 0x14, 0x02, 0x14, 0x01, 0x1E,
};
/* 803CBC74 000C .data      sHowlSoulRequiem                                             */
SECTION_DATA u8 sHowlSoulRequiem[12] = {
	0x03, 0x1E, 0x02, 0x0F, 0x03, 0x0F, 0x01, 0x1E, 0x02, 0x1E, 0x03, 0x1E,
};
/* 803CBC80 000C .data      sHealingSong                                                 */
SECTION_DATA u8 sHealingSong[12] = {
	0x01, 0x1E, 0x02, 0x1E, 0x03, 0x1E, 0x01, 0x1E, 0x02, 0x1E, 0x03, 0x1E,
};
/* 803CBC8C 000E .data      sNewSong1                                                    */
SECTION_DATA u8 sNewSong1[16] = {
	0x03, 0x1E, 0x02, 0x1E, 0x01, 0x1E, 0x03, 0x28, 0x02, 0x14, 0x03, 0x1E, 0x01, 0x1E,
	/* padding */
	0x00, 0x00,
};
/* 803CBC9C 0010 .data      sNewSong2                                                    */
SECTION_DATA u8 sNewSong2[16] = {
	0x01, 0x14, 0x02, 0x14, 0x03, 0x14, 0x02, 0x3C, 0x03, 0x14, 0x01, 0x14, 0x02, 0x14, 0x03, 0x1E,
};
/* 803CBCAC 0012 .data      sNewSong3                                                    */
SECTION_DATA u8 sNewSong3[20] = {
	0x02, 0x1E, 0x03, 0x3C, 0x02, 0x28, 0x01, 0x14, 0x03, 0x3C, 0x01, 0x14, 0x02, 0x14, 0x01, 0x14,
	0x02, 0x2D,
	/* padding */
	0x00, 0x00,
};
/* 803CBCC0 0048 .data      sGuideData                                                   */
SECTION_DATA u8 sGuideData[72] = {
	0x04, 0x00, 0x00, 0x00, 0x80, 0x45, 0x08, 0xA0, 0x06, 0x00, 0x00, 0x00, 0x80, 0x3C, 0xBC, 0x50,
	0x06, 0x00, 0x00, 0x00, 0x80, 0x3C, 0xBC, 0x5C, 0x06, 0x00, 0x00, 0x00, 0x80, 0x3C, 0xBC, 0x80,
	0x06, 0x00, 0x00, 0x00, 0x80, 0x3C, 0xBC, 0x74, 0x06, 0x00, 0x00, 0x00, 0x80, 0x3C, 0xBC, 0x68,
	0x07, 0x00, 0x00, 0x00, 0x80, 0x3C, 0xBC, 0x8C, 0x08, 0x00, 0x00, 0x00, 0x80, 0x3C, 0xBC, 0x9C,
	0x09, 0x00, 0x00, 0x00, 0x80, 0x3C, 0xBC, 0xAC,
};
}


/* ###################################################################################### */
/*                                         .sdata                                         */
/* ###################################################################################### */

extern "C" {
/* 80450880 0004 .sdata     cPitchDown                                                   */
SECTION_SDATA u8 cPitchDown[4] = {
	0x3F, 0x64, 0x12, 0x06,
};
/* 80450884 0004 .sdata     cPitchCenter                                                 */
// 0x3f800000
SECTION_SDATA f32 cPitchCenter = 1.000000f;
/* 80450888 0004 .sdata     cPitchUp                                                     */
SECTION_SDATA u8 cPitchUp[4] = {
	0x3F, 0x98, 0x37, 0xB5,
};
/* 8045088C 0004 .sdata     merged_8045088C                                              */
SECTION_SDATA u8 merged_8045088C[4] = {
	/* data_8045088C */
	0x07,
	/* data_8045088D */
	0x07,
	/* data_8045088E */
	0x1E, 0x00,
};
/* 80450890 0004 .sdata     cR_FlatWidth                                                 */
SECTION_SDATA u8 cR_FlatWidth[4] = {
	0x3F, 0x71, 0xA1, 0x77,
};
/* 80450894 0004 .sdata     merged_80450894                                              */
SECTION_SDATA u8 merged_80450894[4] = {
	/* data_80450894 */
	0x05,
	/* data_80450895 */
	0x1E, 0x00, 0x00,
};
/* 80450898 0004 .sdata     sStickHigh                                                   */
// 0x3f000000
SECTION_SDATA f32 sStickHigh = 0.500000f;
/* 8045089C 0004 .sdata     sStickCenter                                                 */
SECTION_SDATA u8 sStickCenter[4] = {
	0x3E, 0x4C, 0xCC, 0xCD,
};
/* 804508A0 0008 .sdata     sHowlTobikusa                                                */
SECTION_SDATA u8 sHowlTobikusa[8] = {
	0x01, 0x1E, 0x03, 0x1E, 0x01, 0x1E, 0x03, 0x1E,
};
}


/* ###################################################################################### */
/*                                        .sdata2                                         */
/* ###################################################################################### */

extern "C" {
/* 80455E60 0004 .sdata2    @3485                                                        */
SECTION_SDATA2 u8 LIT_3485[4] = {
	0x00, 0x00, 0x00, 0x00,
};
/* 80455E64 0004 .sdata2    @3486                                                        */
// 0x3f800000
SECTION_SDATA2 f32 LIT_3486 = 1.000000f;
/* 80455E68 0004 .sdata2    @3527                                                        */
// 0x41f00000
SECTION_SDATA2 f32 LIT_3527 = 30.000000f;
/* 80455E6C 0004 .sdata2    @3528                                                        */
// 0x40000000
SECTION_SDATA2 f32 LIT_3528 = 2.000000f;
/* 80455E70 0008 .sdata2    @3530                                                        */
// 0x4330000000000000 | compiler-generated value used in cast: (float)u32
SECTION_SDATA2 f64 LIT_3530 = 4503599627370496.000000;
/* 80455E78 0004 .sdata2    @3589                                                        */
SECTION_SDATA2 u8 LIT_3589[4] = {
	0x3F, 0x78, 0x51, 0xEC,
};
/* 80455E7C 0004 .sdata2    @3590                                                        */
// 0xbf800000
SECTION_SDATA2 f32 LIT_3590 = -1.000000f;
/* 80455E80 0004 .sdata2    @3711                                                        */
SECTION_SDATA2 u8 Z2WolfHowlMgr__LIT_3711[4] = {
	0x3F, 0x8F, 0xAC, 0xC5,
};
/* 80455E84 0004 .sdata2    @3712                                                        */
SECTION_SDATA2 u8 LIT_3712[4] = {
	0x3F, 0x87, 0x9C, 0x63,
};
/* 80455E88 0004 .sdata2    @3713                                                        */
SECTION_SDATA2 u8 Z2WolfHowlMgr__LIT_3713[4] = {
	0x3F, 0x4B, 0x2F, 0x01,
};
/* 80455E8C 0004 .sdata2    @3714                                                        */
SECTION_SDATA2 u8 Z2WolfHowlMgr__LIT_3714[4] = {
	0x3F, 0xA1, 0x44, 0x9A,
};
/* 80455E90 0004 .sdata2    @3715                                                        */
SECTION_SDATA2 u8 LIT_3715[4] = {
	0x3F, 0x71, 0xA1, 0x77,
};
/* 80455E94 0004 .sdata2    @3716                                                        */
SECTION_SDATA2 u8 Z2WolfHowlMgr__LIT_3716[4] = {
	0x3F, 0x57, 0x44, 0x3D,
};
/* 80455E98 0004 .sdata2    @3717                                                        */
SECTION_SDATA2 u8 Z2WolfHowlMgr__LIT_3717[4] = {
	0x3F, 0xAA, 0xDC, 0x0A,
};
/* 80455E9C 0004 .sdata2    @3718                                                        */
SECTION_SDATA2 u8 Z2WolfHowlMgr__LIT_3718[4] = {
	0x3F, 0x64, 0x12, 0x06,
};
/* 80455EA0 0004 .sdata2    @3719                                                        */
SECTION_SDATA2 u8 Z2WolfHowlMgr__LIT_3719[4] = {
	0x3F, 0x3F, 0xC8, 0x4B,
};
/* 80455EA4 0004 .sdata2    @3720                                                        */
SECTION_SDATA2 u8 Z2WolfHowlMgr__LIT_3720[4] = {
	0x3F, 0x98, 0x37, 0xB5,
};
/* 80455EA8 0008 .sdata2    @4032                                                        */
// 0x3fe0000000000000
SECTION_SDATA2 f64 Z2WolfHowlMgr__LIT_4032 = 0.500000;
/* 80455EB0 0008 .sdata2    @4033                                                        */
// 0x4008000000000000
SECTION_SDATA2 f64 Z2WolfHowlMgr__LIT_4033 = 3.000000;
/* 80455EB8 0008 .sdata2    @4034                                                        */
SECTION_SDATA2 u8 Z2WolfHowlMgr__LIT_4034[8] = {
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
};
/* 80455EC0 0004 .sdata2    @4035                                                        */
// 0x45034000
SECTION_SDATA2 f32 Z2WolfHowlMgr__LIT_4035 = 2100.000000f;
/* 80455EC4 0004 .sdata2    @4036                                                        */
// 0x43160000
SECTION_SDATA2 f32 Z2WolfHowlMgr__LIT_4036 = 150.000000f;
/* 80455EC8 0004 .sdata2    @4037                                                        */
// 0x44fa0000
SECTION_SDATA2 f32 Z2WolfHowlMgr__LIT_4037 = 2000.000000f;
/* 80455ECC 0004 .sdata2    @4038                                                        */
SECTION_SDATA2 u8 Z2WolfHowlMgr__LIT_4038[4] = {
	0x3E, 0xE6, 0x66, 0x66,
};
/* 80455ED0 0004 .sdata2    @4039                                                        */
SECTION_SDATA2 u8 Z2WolfHowlMgr__LIT_4039[4] = {
	0x3D, 0x4C, 0xCC, 0xCD,
};
/* 80455ED4 0004 .sdata2    @4040                                                        */
SECTION_SDATA2 u8 Z2WolfHowlMgr__LIT_4040[4] = {
	0x3E, 0xCC, 0xCC, 0xCD,
};
/* 80455ED8 0004 .sdata2    @4041                                                        */
SECTION_SDATA2 u8 Z2WolfHowlMgr__LIT_4041[8] = {
	0x3D, 0x23, 0xD7, 0x0A,
	/* padding */
	0x00, 0x00, 0x00, 0x00,
};
}


/* ###################################################################################### */
/*                                          .bss                                          */
/* ###################################################################################### */

extern "C" {
/* 804341F8 0000 .bss       ...bss.0                                                     */
/* 804341F8 0024 .bss       sCorrectPhrase                                               */
SECTION_BSS u8 sCorrectPhrase[36];
/* 8043421C 0024 .bss       sWindStoneSound                                              */
SECTION_BSS u8 sWindStoneSound[36];
/* 80434240 0024 .bss       sCorrectDuo                                                  */
SECTION_BSS u8 sCorrectDuo[40];
}


/* ###################################################################################### */
/*                                         .text                                          */
/* ###################################################################################### */

extern "C" {
/* 802CAAC0 00CC .text      __ct__13Z2WolfHowlMgrFv                                      */
// Z2WolfHowlMgr::Z2WolfHowlMgr(void)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void __ct__13Z2WolfHowlMgrFv() {
	nofralloc
#include "_include/Z2AudioLib/Z2WolfHowlMgr/__ct__13Z2WolfHowlMgrFv.s"
}
#pragma pop

/* 802CAB8C 0060 .text      resetState__13Z2WolfHowlMgrFv                                */
// Z2WolfHowlMgr::resetState(void)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void resetState__13Z2WolfHowlMgrFv() {
	nofralloc
#include "_include/Z2AudioLib/Z2WolfHowlMgr/resetState__13Z2WolfHowlMgrFv.s"
}
#pragma pop

/* 802CABEC 00C4 .text      calcVolumeMod__13Z2WolfHowlMgrFf                             */
// Z2WolfHowlMgr::calcVolumeMod(f32)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void calcVolumeMod__13Z2WolfHowlMgrFf() {
	nofralloc
#include "_include/Z2AudioLib/Z2WolfHowlMgr/calcVolumeMod__13Z2WolfHowlMgrFf.s"
}
#pragma pop

/* 802CACB0 001C .text      getNowPitch__13Z2WolfHowlMgrFv                               */
// Z2WolfHowlMgr::getNowPitch(void)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void getNowPitch__13Z2WolfHowlMgrFv() {
	nofralloc
#include "_include/Z2AudioLib/Z2WolfHowlMgr/getNowPitch__13Z2WolfHowlMgrFv.s"
}
#pragma pop

/* 802CACCC 0008 .text      getNowInputValue__13Z2WolfHowlMgrFv                          */
// Z2WolfHowlMgr::getNowInputValue(void)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void getNowInputValue__13Z2WolfHowlMgrFv() {
	nofralloc
#include "_include/Z2AudioLib/Z2WolfHowlMgr/getNowInputValue__13Z2WolfHowlMgrFv.s"
}
#pragma pop

/* 802CACD4 0200 .text      calcPitchMod__13Z2WolfHowlMgrFff                             */
// Z2WolfHowlMgr::calcPitchMod(f32, f32)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void calcPitchMod__13Z2WolfHowlMgrFff() {
	nofralloc
#include "_include/Z2AudioLib/Z2WolfHowlMgr/calcPitchMod__13Z2WolfHowlMgrFff.s"
}
#pragma pop

/* 802CAED4 022C .text      startWolfHowlSound__13Z2WolfHowlMgrFffbf                     */
// Z2WolfHowlMgr::startWolfHowlSound(f32, f32, bool, f32)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void startWolfHowlSound__13Z2WolfHowlMgrFffbf() {
	nofralloc
#include "_include/Z2AudioLib/Z2WolfHowlMgr/startWolfHowlSound__13Z2WolfHowlMgrFffbf.s"
}
#pragma pop

/* 802CB100 0220 .text      setCorrectData__13Z2WolfHowlMgrFScP14Z2WolfHowlData          */
// Z2WolfHowlMgr::setCorrectData(s8, Z2WolfHowlData*)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void setCorrectData__13Z2WolfHowlMgrFScP14Z2WolfHowlData() {
	nofralloc
#include "_include/Z2AudioLib/Z2WolfHowlMgr/setCorrectData__13Z2WolfHowlMgrFScP14Z2WolfHowlData.s"
}
#pragma pop

/* 802CB320 0050 .text      getCorrectLine__13Z2WolfHowlMgrFUc                           */
// Z2WolfHowlMgr::getCorrectLine(u8)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void getCorrectLine__13Z2WolfHowlMgrFUc() {
	nofralloc
#include "_include/Z2AudioLib/Z2WolfHowlMgr/getCorrectLine__13Z2WolfHowlMgrFUc.s"
}
#pragma pop

/* 802CB370 001C .text      getCorrectLineNum__13Z2WolfHowlMgrFv                         */
// Z2WolfHowlMgr::getCorrectLineNum(void)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void getCorrectLineNum__13Z2WolfHowlMgrFv() {
	nofralloc
#include "_include/Z2AudioLib/Z2WolfHowlMgr/getCorrectLineNum__13Z2WolfHowlMgrFv.s"
}
#pragma pop

/* 802CB38C 02C4 .text      checkLine__13Z2WolfHowlMgrFv                                 */
// Z2WolfHowlMgr::checkLine(void)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void checkLine__13Z2WolfHowlMgrFv() {
	nofralloc
#include "_include/Z2AudioLib/Z2WolfHowlMgr/checkLine__13Z2WolfHowlMgrFv.s"
}
#pragma pop

/* 802CB650 009C .text      getOnLineNum__13Z2WolfHowlMgrFv                              */
// Z2WolfHowlMgr::getOnLineNum(void)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void getOnLineNum__13Z2WolfHowlMgrFv() {
	nofralloc
#include "_include/Z2AudioLib/Z2WolfHowlMgr/getOnLineNum__13Z2WolfHowlMgrFv.s"
}
#pragma pop

/* 802CB6EC 039C .text      startWindStoneSound__13Z2WolfHowlMgrFScP3Vec                 */
// Z2WolfHowlMgr::startWindStoneSound(s8, Vec*)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void startWindStoneSound__13Z2WolfHowlMgrFScP3Vec() {
	nofralloc
#include "_include/Z2AudioLib/Z2WolfHowlMgr/startWindStoneSound__13Z2WolfHowlMgrFScP3Vec.s"
}
#pragma pop

/* 802CBA88 00D0 .text      startGuideMelody__13Z2WolfHowlMgrFb                          */
// Z2WolfHowlMgr::startGuideMelody(bool)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void startGuideMelody__13Z2WolfHowlMgrFb() {
	nofralloc
#include "_include/Z2AudioLib/Z2WolfHowlMgr/startGuideMelody__13Z2WolfHowlMgrFb.s"
}
#pragma pop

/* 802CBB58 0024 .text      skipCorrectDemo__13Z2WolfHowlMgrFv                           */
// Z2WolfHowlMgr::skipCorrectDemo(void)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void skipCorrectDemo__13Z2WolfHowlMgrFv() {
	nofralloc
#include "_include/Z2AudioLib/Z2WolfHowlMgr/skipCorrectDemo__13Z2WolfHowlMgrFv.s"
}
#pragma pop

/* 802CBB7C 00E4 .text      __sinit_Z2WolfHowlMgr_cpp                                    */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void __sinit_Z2WolfHowlMgr_cpp() {
	nofralloc
#include "_include/Z2AudioLib/Z2WolfHowlMgr/__sinit_Z2WolfHowlMgr_cpp.s"
}
#pragma pop

}

