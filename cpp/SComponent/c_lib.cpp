// 
// Generated By: dol2asm
// 

#include "dolphin/types.h"

// 
// Additional Symbols:
// 

struct cXyz;
struct Vec;

extern void cM_atan2s(f32, f32); /* cM_atan2s__Fff */
extern void cLib_memCpy(void*, const void*, u32); /* cLib_memCpy__FPvPCvUl */
extern void cLib_memSet(void*, int, u32); /* cLib_memSet__FPviUl */
extern void cLib_addCalc(f32*, f32, f32, f32, f32); /* cLib_addCalc__FPfffff */
extern void cLib_addCalc2(f32*, f32, f32, f32); /* cLib_addCalc2__FPffff */
extern void cLib_addCalc0(f32*, f32, f32); /* cLib_addCalc0__FPfff */
extern void cLib_addCalcPos(cXyz*, const cXyz&, f32, f32, f32); /* cLib_addCalcPos__FP4cXyzRC4cXyzfff */
extern void cLib_addCalcPosXZ(cXyz*, const cXyz&, f32, f32, f32); /* cLib_addCalcPosXZ__FP4cXyzRC4cXyzfff */
extern void cLib_addCalcPos2(cXyz*, const cXyz&, f32, f32); /* cLib_addCalcPos2__FP4cXyzRC4cXyzff */
extern void cLib_addCalcPosXZ2(cXyz*, const cXyz&, f32, f32); /* cLib_addCalcPosXZ2__FP4cXyzRC4cXyzff */
extern void cLib_addCalcAngleS(short*, short, short, short, short); /* cLib_addCalcAngleS__FPsssss */
extern void cLib_addCalcAngleS2(short*, short, short, short); /* cLib_addCalcAngleS2__FPssss */
extern void cLib_chaseUC(u8*, u8, u8); /* cLib_chaseUC__FPUcUcUc */
extern void cLib_chaseS(short*, short, short); /* cLib_chaseS__FPsss */
extern void cLib_chaseF(f32*, f32, f32); /* cLib_chaseF__FPfff */
extern void cLib_chasePos(cXyz*, const cXyz&, f32); /* cLib_chasePos__FP4cXyzRC4cXyzf */
extern void cLib_chasePosXZ(cXyz*, const cXyz&, f32); /* cLib_chasePosXZ__FP4cXyzRC4cXyzf */
extern void cLib_chaseAngleS(short*, short, short); /* cLib_chaseAngleS__FPsss */
extern void cLib_targetAngleY(const Vec*, const Vec*); /* cLib_targetAngleY__FPC3VecPC3Vec */
extern void cLib_targetAngleY(const Vec&, const Vec&); /* cLib_targetAngleY__FRC3VecRC3Vec */
extern void cLib_targetAngleX(const cXyz*, const cXyz*); /* cLib_targetAngleX__FPC4cXyzPC4cXyz */
extern void cLib_offsetPos(cXyz*, const cXyz*, short, const cXyz*); /* cLib_offsetPos__FP4cXyzPC4cXyzsPC4cXyz */
extern void cLib_distanceAngleS(short, short); /* cLib_distanceAngleS__Fss */
extern void MtxInit(void); /* MtxInit__Fv */
extern void MtxTrans(f32, f32, f32, u8); /* MtxTrans__FfffUc */
extern void MtxScale(f32, f32, f32, u8); /* MtxScale__FfffUc */
extern void MtxPosition(cXyz*, cXyz*); /* MtxPosition__FP4cXyzP4cXyz */
extern void MtxPush(void); /* MtxPush__Fv */
extern void MtxPull(void); /* MtxPull__Fv */

extern "C" {
/* Function             */
SECTION_INIT extern void memset();
/* Function             */
SECTION_INIT extern void memcpy();
/* Function             */
extern void __mi__4cXyzCFRC3Vec();
/* Function             */
extern void __ml__4cXyzCFf();
/* Function             */
extern void normZP__4cXyzCFv();
/* Function             */
extern void __eq__4cXyzCFRC3Vec();
/* Function             */
extern void __ne__4cXyzCFRC3Vec();
/* Function             */
extern void cM_atan2s__Fff();
/* Function             */
extern void cLib_memCpy__FPvPCvUl();
/* Function             */
extern void cLib_memSet__FPviUl();
/* Function             */
extern void cLib_addCalc__FPfffff();
/* Function             */
extern void cLib_addCalc2__FPffff();
/* Function             */
extern void cLib_addCalc0__FPfff();
/* Function             */
extern void cLib_addCalcPos__FP4cXyzRC4cXyzfff();
/* Function             */
extern void cLib_addCalcPosXZ__FP4cXyzRC4cXyzfff();
/* Function             */
extern void cLib_addCalcPos2__FP4cXyzRC4cXyzff();
/* Function             */
extern void cLib_addCalcPosXZ2__FP4cXyzRC4cXyzff();
/* Function             */
extern void cLib_addCalcAngleS__FPsssss();
/* Function             */
extern void cLib_addCalcAngleS2__FPssss();
/* Function             */
extern void cLib_chaseUC__FPUcUcUc();
/* Function             */
extern void cLib_chaseS__FPsss();
/* Function             */
extern void cLib_chaseF__FPfff();
/* Function             */
extern void cLib_chasePos__FP4cXyzRC4cXyzf();
/* Function             */
extern void cLib_chasePosXZ__FP4cXyzRC4cXyzf();
/* Function             */
extern void cLib_chaseAngleS__FPsss();
/* Function             */
extern void cLib_targetAngleY__FPC3VecPC3Vec();
/* Function             */
extern void cLib_targetAngleY__FRC3VecRC3Vec();
/* Function             */
extern void cLib_targetAngleX__FPC4cXyzPC4cXyz();
/* Function             */
extern void cLib_offsetPos__FP4cXyzPC4cXyzsPC4cXyz();
/* Function             */
extern void cLib_distanceAngleS__Fss();
/* Function             */
extern void MtxInit__Fv();
/* Function             */
extern void MtxTrans__FfffUc();
/* Function             */
extern void MtxScale__FfffUc();
/* Function             */
extern void MtxPosition__FP4cXyzP4cXyz();
/* Function             */
extern void MtxPush__Fv();
/* Function             */
extern void MtxPull__Fv();
/* Function             */
extern void PSMTXCopy();
/* Function             */
extern void PSMTXConcat();
/* Function             */
extern void PSMTXTrans();
/* Function             */
extern void PSMTXScale();
/* Function             */
extern void PSMTXMultVec();
/* Function             */
extern void PSVECSubtract();
/* Function             */
extern void PSVECScale();
/* Function             */
extern void PSVECSquareMag();
/* Function             */
extern void PSVECSquareDistance();
/* Function             */
extern void abs();
/* ZeroInitializedData  */
SECTION_BSS extern u8 mtx[480];
/* ZeroInitializedData  */
SECTION_BSS extern u8 sincosTable___5JMath[65536];
/* SymbolReferenceArrayData */
SECTION_SDATA extern void* calc_mtx[2];
/* InitializedData      */
SECTION_SDATA extern u8 __float_nan[4];
/* InitializedData      */
SECTION_SDATA2 extern u8 c_lib__LIT_2262[8];
/* Float64Data          */
SECTION_SDATA2 extern f64 c_lib__LIT_2379;
/* Float64Data          */
SECTION_SDATA2 extern f64 LIT_2380;
/* InitializedData      */
SECTION_SDATA2 extern u8 LIT_2381[8];
/* InitializedData      */
SECTION_SDATA2 extern u8 LIT_2382[8];
}


/* ###################################################################################### */
/*                                         .sdata                                         */
/* ###################################################################################### */

extern "C" {
/* 80450768-80450770 0004 .sdata     calc_mtx                                                     SymbolReferenceArrayData */
SECTION_SDATA void* calc_mtx[2] = {
	(void*)&mtx,
	/* padding */
	NULL,
};
}


/* ###################################################################################### */
/*                                        .sdata2                                         */
/* ###################################################################################### */

extern "C" {
/* 804551E0-804551E8 0004 .sdata2    @2262                                                        InitializedData */
SECTION_SDATA2 u8 c_lib__LIT_2262[8] = {
	0x00, 0x00, 0x00, 0x00,
	/* padding */
	0x00, 0x00, 0x00, 0x00,
};
/* 804551E8-804551F0 0008 .sdata2    @2379                                                        Float64Data */
// 0x3fe0000000000000
SECTION_SDATA2 f64 c_lib__LIT_2379 = 0.500000;
/* 804551F0-804551F8 0008 .sdata2    @2380                                                        Float64Data */
// 0x4008000000000000
SECTION_SDATA2 f64 LIT_2380 = 3.000000;
/* 804551F8-80455200 0008 .sdata2    @2381                                                        InitializedData */
SECTION_SDATA2 u8 LIT_2381[8] = {
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
};
/* 80455200-80455208 0004 .sdata2    @2382                                                        InitializedData */
SECTION_SDATA2 u8 LIT_2382[8] = {
	0x2E, 0xAF, 0xEB, 0xFF,
	/* padding */
	0x00, 0x00, 0x00, 0x00,
};
}


/* ###################################################################################### */
/*                                          .bss                                          */
/* ###################################################################################### */

extern "C" {
/* 80430DB8-80430F98 01E0 .bss       mtx                                                          ZeroInitializedData */
SECTION_BSS u8 mtx[480];
}


/* ###################################################################################### */
/*                                         .text                                          */
/* ###################################################################################### */

extern "C" {
/* 8026F93C-8026F95C 0020 .text      cLib_memCpy__FPvPCvUl                                        Function */
}

#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void cLib_memCpy(void*, const void*, u32) {
	nofralloc
#include "_include/SComponent/c_lib/cLib_memCpy__FPvPCvUl.s"
}
#pragma pop

extern "C" {
/* 8026F95C-8026F97C 0020 .text      cLib_memSet__FPviUl                                          Function */
}

#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void cLib_memSet(void*, int, u32) {
	nofralloc
#include "_include/SComponent/c_lib/cLib_memSet__FPviUl.s"
}
#pragma pop

extern "C" {
/* 8026F97C-8026FA3C 00C0 .text      cLib_addCalc__FPfffff                                        Function */
}

#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void cLib_addCalc(f32*, f32, f32, f32, f32) {
	nofralloc
#include "_include/SComponent/c_lib/cLib_addCalc__FPfffff.s"
}
#pragma pop

extern "C" {
/* 8026FA3C-8026FA80 0044 .text      cLib_addCalc2__FPffff                                        Function */
}

#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void cLib_addCalc2(f32*, f32, f32, f32) {
	nofralloc
#include "_include/SComponent/c_lib/cLib_addCalc2__FPffff.s"
}
#pragma pop

extern "C" {
/* 8026FA80-8026FAB8 0038 .text      cLib_addCalc0__FPfff                                         Function */
}

#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void cLib_addCalc0(f32*, f32, f32) {
	nofralloc
#include "_include/SComponent/c_lib/cLib_addCalc0__FPfff.s"
}
#pragma pop

extern "C" {
/* 8026FAB8-8026FDF4 033C .text      cLib_addCalcPos__FP4cXyzRC4cXyzfff                           Function */
}

#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void cLib_addCalcPos(cXyz*, const cXyz&, f32, f32, f32) {
	nofralloc
#include "_include/SComponent/c_lib/cLib_addCalcPos__FP4cXyzRC4cXyzfff.s"
}
#pragma pop

extern "C" {
/* 8026FDF4-80270178 0384 .text      cLib_addCalcPosXZ__FP4cXyzRC4cXyzfff                         Function */
}

#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void cLib_addCalcPosXZ(cXyz*, const cXyz&, f32, f32, f32) {
	nofralloc
#include "_include/SComponent/c_lib/cLib_addCalcPosXZ__FP4cXyzRC4cXyzfff.s"
}
#pragma pop

extern "C" {
/* 80270178-80270350 01D8 .text      cLib_addCalcPos2__FP4cXyzRC4cXyzff                           Function */
}

#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void cLib_addCalcPos2(cXyz*, const cXyz&, f32, f32) {
	nofralloc
#include "_include/SComponent/c_lib/cLib_addCalcPos2__FP4cXyzRC4cXyzff.s"
}
#pragma pop

extern "C" {
/* 80270350-80270540 01F0 .text      cLib_addCalcPosXZ2__FP4cXyzRC4cXyzff                         Function */
}

#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void cLib_addCalcPosXZ2(cXyz*, const cXyz&, f32, f32) {
	nofralloc
#include "_include/SComponent/c_lib/cLib_addCalcPosXZ2__FP4cXyzRC4cXyzff.s"
}
#pragma pop

extern "C" {
/* 80270540-80270608 00C8 .text      cLib_addCalcAngleS__FPsssss                                  Function */
}

#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void cLib_addCalcAngleS(short*, short, short, short, short) {
	nofralloc
#include "_include/SComponent/c_lib/cLib_addCalcAngleS__FPsssss.s"
}
#pragma pop

extern "C" {
/* 80270608-8027065C 0054 .text      cLib_addCalcAngleS2__FPssss                                  Function */
}

#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void cLib_addCalcAngleS2(short*, short, short, short) {
	nofralloc
#include "_include/SComponent/c_lib/cLib_addCalcAngleS2__FPssss.s"
}
#pragma pop

extern "C" {
/* 8027065C-802706D0 0074 .text      cLib_chaseUC__FPUcUcUc                                       Function */
}

#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void cLib_chaseUC(u8*, u8, u8) {
	nofralloc
#include "_include/SComponent/c_lib/cLib_chaseUC__FPUcUcUc.s"
}
#pragma pop

extern "C" {
/* 802706D0-80270740 0070 .text      cLib_chaseS__FPsss                                           Function */
}

#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void cLib_chaseS(short*, short, short) {
	nofralloc
#include "_include/SComponent/c_lib/cLib_chaseS__FPsss.s"
}
#pragma pop

extern "C" {
/* 80270740-802707AC 006C .text      cLib_chaseF__FPfff                                           Function */
}

#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void cLib_chaseF(f32*, f32, f32) {
	nofralloc
#include "_include/SComponent/c_lib/cLib_chaseF__FPfff.s"
}
#pragma pop

extern "C" {
/* 802707AC-80270990 01E4 .text      cLib_chasePos__FP4cXyzRC4cXyzf                               Function */
}

#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void cLib_chasePos(cXyz*, const cXyz&, f32) {
	nofralloc
#include "_include/SComponent/c_lib/cLib_chasePos__FP4cXyzRC4cXyzf.s"
}
#pragma pop

extern "C" {
/* 80270990-80270B90 0200 .text      cLib_chasePosXZ__FP4cXyzRC4cXyzf                             Function */
}

#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void cLib_chasePosXZ(cXyz*, const cXyz&, f32) {
	nofralloc
#include "_include/SComponent/c_lib/cLib_chasePosXZ__FP4cXyzRC4cXyzf.s"
}
#pragma pop

extern "C" {
/* 80270B90-80270C04 0074 .text      cLib_chaseAngleS__FPsss                                      Function */
}

#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void cLib_chaseAngleS(short*, short, short) {
	nofralloc
#include "_include/SComponent/c_lib/cLib_chaseAngleS__FPsss.s"
}
#pragma pop

extern "C" {
/* 80270C04-80270C3C 0038 .text      cLib_targetAngleY__FPC3VecPC3Vec                             Function */
}

#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void cLib_targetAngleY(const Vec*, const Vec*) {
	nofralloc
#include "_include/SComponent/c_lib/cLib_targetAngleY__FPC3VecPC3Vec.s"
}
#pragma pop

extern "C" {
/* 80270C3C-80270C74 0038 .text      cLib_targetAngleY__FRC3VecRC3Vec                             Function */
}

#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void cLib_targetAngleY(const Vec&, const Vec&) {
	nofralloc
#include "_include/SComponent/c_lib/cLib_targetAngleY__FRC3VecRC3Vec.s"
}
#pragma pop

extern "C" {
/* 80270C74-80270DC0 014C .text      cLib_targetAngleX__FPC4cXyzPC4cXyz                           Function */
}

#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void cLib_targetAngleX(const cXyz*, const cXyz*) {
	nofralloc
#include "_include/SComponent/c_lib/cLib_targetAngleX__FPC4cXyzPC4cXyz.s"
}
#pragma pop

extern "C" {
/* 80270DC0-80270E24 0064 .text      cLib_offsetPos__FP4cXyzPC4cXyzsPC4cXyz                       Function */
}

#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void cLib_offsetPos(cXyz*, const cXyz*, short, const cXyz*) {
	nofralloc
#include "_include/SComponent/c_lib/cLib_offsetPos__FP4cXyzPC4cXyzsPC4cXyz.s"
}
#pragma pop

extern "C" {
/* 80270E24-80270E4C 0028 .text      cLib_distanceAngleS__Fss                                     Function */
}

#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void cLib_distanceAngleS(short, short) {
	nofralloc
#include "_include/SComponent/c_lib/cLib_distanceAngleS__Fss.s"
}
#pragma pop

extern "C" {
/* 80270E4C-80270E5C 0010 .text      MtxInit__Fv                                                  Function */
}

#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void MtxInit(void) {
	nofralloc
#include "_include/SComponent/c_lib/MtxInit__Fv.s"
}
#pragma pop

extern "C" {
/* 80270E5C-80270EA4 0048 .text      MtxTrans__FfffUc                                             Function */
}

#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void MtxTrans(f32, f32, f32, u8) {
	nofralloc
#include "_include/SComponent/c_lib/MtxTrans__FfffUc.s"
}
#pragma pop

extern "C" {
/* 80270EA4-80270EEC 0048 .text      MtxScale__FfffUc                                             Function */
}

#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void MtxScale(f32, f32, f32, u8) {
	nofralloc
#include "_include/SComponent/c_lib/MtxScale__FfffUc.s"
}
#pragma pop

extern "C" {
/* 80270EEC-80270F1C 0030 .text      MtxPosition__FP4cXyzP4cXyz                                   Function */
}

#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void MtxPosition(cXyz*, cXyz*) {
	nofralloc
#include "_include/SComponent/c_lib/MtxPosition__FP4cXyzP4cXyz.s"
}
#pragma pop

extern "C" {
/* 80270F1C-80270F58 003C .text      MtxPush__Fv                                                  Function */
}

#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void MtxPush(void) {
	nofralloc
#include "_include/SComponent/c_lib/MtxPush__Fv.s"
}
#pragma pop

extern "C" {
/* 80270F58-80270F68 0010 .text      MtxPull__Fv                                                  Function */
}

#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void MtxPull(void) {
	nofralloc
#include "_include/SComponent/c_lib/MtxPull__Fv.s"
}
#pragma pop

extern "C" {
}

