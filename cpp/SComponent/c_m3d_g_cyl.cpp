// 
// Generated By: dol2asm
// 

#include "dolphin/types.h"

// 
// Additional Symbols:
// 

struct cM3dGSph;
struct Vec;
struct cM3dGCyl;

extern void cM3d_Cross_CylSph(const cM3dGCyl*, const cM3dGSph*, Vec*, f32*); /* cM3d_Cross_CylSph__FPC8cM3dGCylPC8cM3dGSphP3VecPf */
extern void cM3d_Cross_CylCyl(const cM3dGCyl*, const cM3dGCyl*, Vec*); /* cM3d_Cross_CylCyl__FPC8cM3dGCylPC8cM3dGCylP3Vec */

extern "C" {
extern void cM3d_Cross_CylSph__FPC8cM3dGCylPC8cM3dGSphP3VecPf();
extern void cM3d_Cross_CylCyl__FPC8cM3dGCylPC8cM3dGCylP3Vec();
extern void SetC__8cM3dGCylFRC4cXyz();
extern void SetH__8cM3dGCylFf();
extern void SetR__8cM3dGCylFf();
SECTION_DATA extern const void* __vt__8cM3dGCyl[3];
}


/* ###################################################################################### */
/*                                         .text                                          */
/* ###################################################################################### */

extern "C" {
/* 8026F0A8 006C .text      __ct__8cM3dGCylFPC4cXyzff                                    */
// cM3dGCyl::cM3dGCyl(const cXyz*, f32, f32)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void __ct__8cM3dGCylFPC4cXyzff() {
	nofralloc
#include "_include/SComponent/c_m3d_g_cyl/__ct__8cM3dGCylFPC4cXyzff.s"
}
#pragma pop

/* 8026F114 006C .text      Set__8cM3dGCylFRC9cM3dGCylS                                  */
// cM3dGCyl::Set(const cM3dGCylS&)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void Set__8cM3dGCylFRC9cM3dGCylS() {
	nofralloc
#include "_include/SComponent/c_m3d_g_cyl/Set__8cM3dGCylFRC9cM3dGCylS.s"
}
#pragma pop

/* 8026F180 005C .text      Set__8cM3dGCylFRC4cXyzff                                     */
// cM3dGCyl::Set(const cXyz&, f32, f32)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void Set__8cM3dGCylFRC4cXyzff() {
	nofralloc
#include "_include/SComponent/c_m3d_g_cyl/Set__8cM3dGCylFRC4cXyzff.s"
}
#pragma pop

/* 8026F1DC 001C .text      SetC__8cM3dGCylFRC4cXyz                                      */
// cM3dGCyl::SetC(const cXyz&)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void SetC__8cM3dGCylFRC4cXyz() {
	nofralloc
#include "_include/SComponent/c_m3d_g_cyl/SetC__8cM3dGCylFRC4cXyz.s"
}
#pragma pop

/* 8026F1F8 0008 .text      SetH__8cM3dGCylFf                                            */
// cM3dGCyl::SetH(f32)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void SetH__8cM3dGCylFf() {
	nofralloc
#include "_include/SComponent/c_m3d_g_cyl/SetH__8cM3dGCylFf.s"
}
#pragma pop

/* 8026F200 0008 .text      SetR__8cM3dGCylFf                                            */
// cM3dGCyl::SetR(f32)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void SetR__8cM3dGCylFf() {
	nofralloc
#include "_include/SComponent/c_m3d_g_cyl/SetR__8cM3dGCylFf.s"
}
#pragma pop

/* 8026F208 0024 .text      cross__8cM3dGCylCFPC8cM3dGSphP4cXyz                          */
// cM3dGCyl::cross(const cM3dGSph*, cXyz*) const
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void cross__8cM3dGCylCFPC8cM3dGSphP4cXyz() {
	nofralloc
#include "_include/SComponent/c_m3d_g_cyl/cross__8cM3dGCylCFPC8cM3dGSphP4cXyz.s"
}
#pragma pop

/* 8026F22C 0020 .text      cross__8cM3dGCylCFPC8cM3dGCylP4cXyz                          */
// cM3dGCyl::cross(const cM3dGCyl*, cXyz*) const
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void cross__8cM3dGCylCFPC8cM3dGCylP4cXyz() {
	nofralloc
#include "_include/SComponent/c_m3d_g_cyl/cross__8cM3dGCylCFPC8cM3dGCylP4cXyz.s"
}
#pragma pop

/* 8026F24C 005C .text      calcMinMax__8cM3dGCylFP4cXyzP4cXyz                           */
// cM3dGCyl::calcMinMax(cXyz*, cXyz*)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void calcMinMax__8cM3dGCylFP4cXyzP4cXyz() {
	nofralloc
#include "_include/SComponent/c_m3d_g_cyl/calcMinMax__8cM3dGCylFP4cXyzP4cXyz.s"
}
#pragma pop

}

