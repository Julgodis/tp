// 
// Generated By: dol2asm
// 

#include "dolphin/types.h"

// 
// Additional Symbols:
// 

extern "C" {
extern void SetMinMax__8cM3dGAabFRC4cXyz();
extern void SetMin__8cM3dGAabFRC4cXyz();
extern void SetMax__8cM3dGAabFRC4cXyz();
extern void PSVECAdd();
extern void PSVECScale();
SECTION_SDATA2 extern f32 LIT_416;
SECTION_SDATA2 extern f32 LIT_417;
SECTION_SDATA2 extern u8 c_m3d_g_aab__LIT_493[8];
}


/* ###################################################################################### */
/*                                        .sdata2                                         */
/* ###################################################################################### */

extern "C" {
/* 804551D0 0004 .sdata2    @416                                                         */
// 0x4e6e6b28
SECTION_SDATA2 f32 LIT_416 = 1000000000.000000f;
/* 804551D4 0004 .sdata2    @417                                                         */
// 0xce6e6b28
SECTION_SDATA2 f32 LIT_417 = -1000000000.000000f;
/* 804551D8 0004 .sdata2    @493                                                         */
SECTION_SDATA2 u8 c_m3d_g_aab__LIT_493[8] = {
	0x3F, 0x00, 0x00, 0x00,
	/* padding */
	0x00, 0x00, 0x00, 0x00,
};
}


/* ###################################################################################### */
/*                                         .text                                          */
/* ###################################################################################### */

extern "C" {
/* 8026EC54 0034 .text      Set__8cM3dGAabFPC4cXyzPC4cXyz                                */
// cM3dGAab::Set(const cXyz*, const cXyz*)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void Set__8cM3dGAabFPC4cXyzPC4cXyz() {
	nofralloc
#include "_include/SComponent/c_m3d_g_aab/Set__8cM3dGAabFPC4cXyzPC4cXyz.s"
}
#pragma pop

/* 8026EC88 0048 .text      CrossY__8cM3dGAabCFPC4cXyz                                   */
// cM3dGAab::CrossY(const cXyz*) const
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void CrossY__8cM3dGAabCFPC4cXyz() {
	nofralloc
#include "_include/SComponent/c_m3d_g_aab/CrossY__8cM3dGAabCFPC4cXyz.s"
}
#pragma pop

/* 8026ECD0 0014 .text      UnderPlaneYUnder__8cM3dGAabCFf                               */
// cM3dGAab::UnderPlaneYUnder(f32) const
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void UnderPlaneYUnder__8cM3dGAabCFf() {
	nofralloc
#include "_include/SComponent/c_m3d_g_aab/UnderPlaneYUnder__8cM3dGAabCFf.s"
}
#pragma pop

/* 8026ECE4 0014 .text      TopPlaneYUnder__8cM3dGAabCFf                                 */
// cM3dGAab::TopPlaneYUnder(f32) const
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void TopPlaneYUnder__8cM3dGAabCFf() {
	nofralloc
#include "_include/SComponent/c_m3d_g_aab/TopPlaneYUnder__8cM3dGAabCFf.s"
}
#pragma pop

/* 8026ECF8 0024 .text      ClearForMinMax__8cM3dGAabFv                                  */
// cM3dGAab::ClearForMinMax(void)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void ClearForMinMax__8cM3dGAabFv() {
	nofralloc
#include "_include/SComponent/c_m3d_g_aab/ClearForMinMax__8cM3dGAabFv.s"
}
#pragma pop

/* 8026ED1C 0044 .text      SetMinMax__8cM3dGAabFRC4cXyz                                 */
// cM3dGAab::SetMinMax(const cXyz&)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void SetMinMax__8cM3dGAabFRC4cXyz() {
	nofralloc
#include "_include/SComponent/c_m3d_g_aab/SetMinMax__8cM3dGAabFRC4cXyz.s"
}
#pragma pop

/* 8026ED60 0044 .text      SetMinMax__8cM3dGAabFRC8cM3dGAab                             */
// cM3dGAab::SetMinMax(const cM3dGAab&)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void SetMinMax__8cM3dGAabFRC8cM3dGAab() {
	nofralloc
#include "_include/SComponent/c_m3d_g_aab/SetMinMax__8cM3dGAabFRC8cM3dGAab.s"
}
#pragma pop

/* 8026EDA4 0040 .text      SetMin__8cM3dGAabFRC4cXyz                                    */
// cM3dGAab::SetMin(const cXyz&)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void SetMin__8cM3dGAabFRC4cXyz() {
	nofralloc
#include "_include/SComponent/c_m3d_g_aab/SetMin__8cM3dGAabFRC4cXyz.s"
}
#pragma pop

/* 8026EDE4 0040 .text      SetMax__8cM3dGAabFRC4cXyz                                    */
// cM3dGAab::SetMax(const cXyz&)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void SetMax__8cM3dGAabFRC4cXyz() {
	nofralloc
#include "_include/SComponent/c_m3d_g_aab/SetMax__8cM3dGAabFRC4cXyz.s"
}
#pragma pop

/* 8026EE24 0044 .text      CalcCenter__8cM3dGAabCFP4cXyz                                */
// cM3dGAab::CalcCenter(cXyz*) const
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void CalcCenter__8cM3dGAabCFP4cXyz() {
	nofralloc
#include "_include/SComponent/c_m3d_g_aab/CalcCenter__8cM3dGAabCFP4cXyz.s"
}
#pragma pop

/* 8026EE68 004C .text      PlusR__8cM3dGAabFf                                           */
// cM3dGAab::PlusR(f32)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void PlusR__8cM3dGAabFf() {
	nofralloc
#include "_include/SComponent/c_m3d_g_aab/PlusR__8cM3dGAabFf.s"
}
#pragma pop

}

