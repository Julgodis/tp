// 
// Generated By: dol2asm
// 

#include "dolphin/types.h"

// 
// Additional Symbols:
// 

struct request_base_class;
struct scene_class;
struct overlap_task_class;
struct overlap_request_class;

extern void fopOvlpReq_Request(overlap_request_class*, s16, u16); /* fopOvlpReq_Request__FP21overlap_request_classsUs */
extern void fopOvlpReq_Handler(overlap_request_class*); /* fopOvlpReq_Handler__FP21overlap_request_class */
extern void fopOvlpReq_Cancel(overlap_request_class*); /* fopOvlpReq_Cancel__FP21overlap_request_class */
extern void fopOvlpReq_OverlapClr(overlap_request_class*); /* fopOvlpReq_OverlapClr__FP21overlap_request_class */
extern void fopScnPause_Enable(scene_class*); /* fopScnPause_Enable__FP11scene_class */
extern void fopScnPause_Disable(scene_class*); /* fopScnPause_Disable__FP11scene_class */
extern void fpcEx_SearchByID(unsigned int); /* fpcEx_SearchByID__FUi */
extern void cReq_Is_Done(request_base_class*); /* cReq_Is_Done__FP18request_base_class */
extern void cReq_Done(request_base_class*); /* cReq_Done__FP18request_base_class */

extern "C" {
extern void fopOvlpReq_Request__FP21overlap_request_classsUs();
extern void fopOvlpReq_Handler__FP21overlap_request_class();
extern void fopOvlpReq_Cancel__FP21overlap_request_class();
extern void fopOvlpReq_OverlapClr__FP21overlap_request_class();
extern void fopScnPause_Enable__FP11scene_class();
extern void fopScnPause_Disable__FP11scene_class();
extern void fpcEx_SearchByID__FUi();
extern void cReq_Is_Done__FP18request_base_class();
extern void cReq_Done__FP18request_base_class();
SECTION_BSS extern u8 l_fopOvlpM_Request[40];
SECTION_SDATA extern u8 l_fopOvlpM_overlap[8];
}


/* ###################################################################################### */
/*                                         .sdata                                         */
/* ###################################################################################### */

extern "C" {
/* 804505B0 0004 .sdata     l_fopOvlpM_overlap                                           */
SECTION_SDATA u8 l_fopOvlpM_overlap[8] = {
	0x00, 0x00, 0x00, 0x00,
	/* padding */
	0x00, 0x00, 0x00, 0x00,
};
}


/* ###################################################################################### */
/*                                          .bss                                          */
/* ###################################################################################### */

extern "C" {
/* 803F1DE8 0028 .bss       l_fopOvlpM_Request                                           */
SECTION_BSS u8 l_fopOvlpM_Request[40];
}


/* ###################################################################################### */
/*                                         .text                                          */
/* ###################################################################################### */

extern "C" {
/* 8001E484 0040 .text      fopOvlpM_SceneIsStop__Fv                                     */
}

#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void fopOvlpM_SceneIsStop(void) {
	nofralloc
#include "_include/f_op/f_op_overlap_mng/fopOvlpM_SceneIsStop__Fv.s"
}
#pragma pop

extern "C" {
/* 8001E4C4 0040 .text      fopOvlpM_SceneIsStart__Fv                                    */
}

#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void fopOvlpM_SceneIsStart(void) {
	nofralloc
#include "_include/f_op/f_op_overlap_mng/fopOvlpM_SceneIsStart__Fv.s"
}
#pragma pop

extern "C" {
/* 8001E504 0018 .text      fopOvlpM_IsOutReq__FP18overlap_task_class                    */
}

#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void fopOvlpM_IsOutReq(overlap_task_class*) {
	nofralloc
#include "_include/f_op/f_op_overlap_mng/fopOvlpM_IsOutReq__FP18overlap_task_class.s"
}
#pragma pop

extern "C" {
/* 8001E51C 0024 .text      fopOvlpM_Done__FP18overlap_task_class                        */
}

#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void fopOvlpM_Done(overlap_task_class*) {
	nofralloc
#include "_include/f_op/f_op_overlap_mng/fopOvlpM_Done__FP18overlap_task_class.s"
}
#pragma pop

extern "C" {
/* 8001E540 0018 .text      fopOvlpM_ToldAboutID__FUi                                    */
}

#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void fopOvlpM_ToldAboutID(unsigned int) {
	nofralloc
#include "_include/f_op/f_op_overlap_mng/fopOvlpM_ToldAboutID__FUi.s"
}
#pragma pop

extern "C" {
/* 8001E558 001C .text      fopOvlpM_IsPeek__Fv                                          */
}

#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void fopOvlpM_IsPeek(void) {
	nofralloc
#include "_include/f_op/f_op_overlap_mng/fopOvlpM_IsPeek__Fv.s"
}
#pragma pop

extern "C" {
/* 8001E574 0034 .text      fopOvlpM_IsDone__Fv                                          */
}

#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void fopOvlpM_IsDone(void) {
	nofralloc
#include "_include/f_op/f_op_overlap_mng/fopOvlpM_IsDone__Fv.s"
}
#pragma pop

extern "C" {
/* 8001E5A8 0028 .text      fopOvlpM_IsDoingReq__Fv                                      */
}

#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void fopOvlpM_IsDoingReq(void) {
	nofralloc
#include "_include/f_op/f_op_overlap_mng/fopOvlpM_IsDoingReq__Fv.s"
}
#pragma pop

extern "C" {
/* 8001E5D0 0034 .text      fopOvlpM_ClearOfReq__Fv                                      */
}

#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void fopOvlpM_ClearOfReq(void) {
	nofralloc
#include "_include/f_op/f_op_overlap_mng/fopOvlpM_ClearOfReq__Fv.s"
}
#pragma pop

extern "C" {
/* 8001E604 004C .text      fopOvlpM_Request__FsUs                                       */
}

#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void fopOvlpM_Request(s16, u16) {
	nofralloc
#include "_include/f_op/f_op_overlap_mng/fopOvlpM_Request__FsUs.s"
}
#pragma pop

extern "C" {
/* 8001E650 0048 .text      fopOvlpM_Management__Fv                                      */
}

#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void fopOvlpM_Management(void) {
	nofralloc
#include "_include/f_op/f_op_overlap_mng/fopOvlpM_Management__Fv.s"
}
#pragma pop

extern "C" {
/* 8001E698 0050 .text      fopOvlpM_Cancel__Fv                                          */
}

#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void fopOvlpM_Cancel(void) {
	nofralloc
#include "_include/f_op/f_op_overlap_mng/fopOvlpM_Cancel__Fv.s"
}
#pragma pop

extern "C" {
/* 8001E6E8 0004 .text      fopOvlpM_Init__Fv                                            */
// fopOvlpM_Init(void)
void fopOvlpM_Init__Fv() {
	return;
}

}

