// 
// Generated By: dol2asm
// 

// 
// Compiler Options: -str pool,readonly,reuse
// 

#include "dolphin/types.h"

// 
// Additional Symbols:
// 

struct _GXFogAdjTable;
struct J3DTexCoord;

extern void operator delete(void*); /* __dl__FPv */
extern void J3DGDSetFogRangeAdj(u8, u16, _GXFogAdjTable*); /* J3DGDSetFogRangeAdj__FUcUsP14_GXFogAdjTable */
extern void loadTexCoordGens(u32, J3DTexCoord*); /* loadTexCoordGens__FUlP11J3DTexCoord */
extern void isTexNoReg(void*); /* isTexNoReg__FPv */
extern void getTexNoReg(void*); /* getTexNoReg__FPv */
extern void loadTexNo(u32, const u16&); /* loadTexNo__FUlRCUs */
extern void patchTexNo_PtrToIdx(u32, const u16&); /* patchTexNo_PtrToIdx__FUlRCUs */

extern "C" {
/* Function             */
SECTION_INIT extern void memcpy();
/* Function             */
extern void OSReport();
/* ReturnFunction       */
extern void patchTexNoAndTexCoordScale__11J3DTevBlockFv();
/* ReturnFunction       */
extern void patch__10J3DPEBlockFv();
/* ReturnFunction       */
extern void patch__11J3DTevBlockFv();
/* ReturnIntegerFunction */
extern  int getZCompLoc__10J3DPEBlockCFv();
/* ReturnIntegerFunction */
extern  int getZMode__10J3DPEBlockFv();
/* ReturnIntegerFunction */
extern  int getBlend__10J3DPEBlockFv();
/* ReturnIntegerFunction */
extern  int getAlphaComp__10J3DPEBlockFv();
/* ReturnIntegerFunction */
extern  int getFog__10J3DPEBlockFv();
/* ReturnIntegerFunction */
extern  int getIndTevStage__11J3DTevBlockFUl();
/* ReturnIntegerFunction */
extern  int getTevStage__11J3DTevBlockFUl();
/* Function             */
extern void getTexNo__11J3DTevBlockCFUl();
/* ReturnIntegerFunction */
extern  int getTevSwapModeTable__11J3DTevBlockFUl();
/* ReturnIntegerFunction */
extern  int getTevKAlphaSel__11J3DTevBlockFUl();
/* ReturnIntegerFunction */
extern  int getTevKColorSel__11J3DTevBlockFUl();
/* ReturnIntegerFunction */
extern  int getTevOrder__11J3DTevBlockFUl();
/* ReturnIntegerFunction */
extern  int getTevKColor__11J3DTevBlockFUl();
/* ReturnIntegerFunction */
extern  int getTevColor__11J3DTevBlockFUl();
/* ReturnIntegerFunction */
extern  int getTevStageNum__11J3DTevBlockCFv();
/* ReturnIntegerFunction */
extern  int getAmbColor__13J3DColorBlockFUl();
/* ReturnFunction       */
extern void setZCompLoc__10J3DPEBlockFUc();
/* ReturnFunction       */
extern void setZMode__10J3DPEBlockF8J3DZMode();
/* ReturnFunction       */
extern void setBlend__10J3DPEBlockFRC8J3DBlend();
/* ReturnFunction       */
extern void setAlphaComp__10J3DPEBlockFRC12J3DAlphaComp();
/* Function             */
extern void __dt__19J3DIndTexCoordScaleFv();
/* Function             */
extern void __dt__12J3DIndTexMtxFv();
/* ReturnFunction       */
extern void setIndTevStage__11J3DTevBlockFUl14J3DIndTevStage();
/* ReturnFunction       */
extern void setTevStage__11J3DTevBlockFUl11J3DTevStage();
/* ReturnFunction       */
extern void setTexNo__11J3DTevBlockFUlUs();
/* ReturnFunction       */
extern void setTevSwapModeTable__11J3DTevBlockFUl19J3DTevSwapModeTable();
/* ReturnFunction       */
extern void setTevKAlphaSel__11J3DTevBlockFUlUc();
/* ReturnFunction       */
extern void setTevKColorSel__11J3DTevBlockFUlUc();
/* ReturnFunction       */
extern void setTevOrder__11J3DTevBlockFUl11J3DTevOrder();
/* ReturnFunction       */
extern void setTevKColor__11J3DTevBlockFUl10J3DGXColor();
/* ReturnFunction       */
extern void setTevColor__11J3DTevBlockFUl13J3DGXColorS10();
/* ReturnFunction       */
extern void setTevStageNum__11J3DTevBlockFUc();
/* ReturnFunction       */
extern void setAmbColor__13J3DColorBlockFUl10J3DGXColor();
/* ReturnFunction       */
extern void setTevKColor__11J3DTevBlockFUlPC10J3DGXColor();
/* ReturnFunction       */
extern void setTevColor__11J3DTevBlockFUlPC13J3DGXColorS10();
/* ReturnFunction       */
extern void setLight__13J3DColorBlockFUlP11J3DLightObj();
/* ReturnFunction       */
extern void setAmbColor__13J3DColorBlockFUlPC10J3DGXColor();
/* Function             */
extern void __dl__FPv();
/* Function             */
extern void J3DGDSetTexCoordScale2__F13_GXTexCoordIDUsUcUcUsUcUc();
/* Function             */
extern void J3DGDSetIndTexMtx__F14_GXIndTexMtxIDPA3_fSc();
/* Function             */
extern void J3DGDSetIndTexCoordScale__F16_GXIndTexStageID14_GXIndTexScale14_GXIndTexScale14_GXIndTexScale14_GXIndTexScale();
/* Function             */
extern void J3DGDSetIndTexOrder__FUl13_GXTexCoordID11_GXTexMapID13_GXTexCoordID11_GXTexMapID13_GXTexCoordID11_GXTexMapID13_GXTexCoordID11_GXTexMapID();
/* Function             */
extern void J3DGDSetTevOrder__F13_GXTevStageID13_GXTexCoordID11_GXTexMapID12_GXChannelID13_GXTexCoordID11_GXTexMapID12_GXChannelID();
/* Function             */
extern void J3DGDSetTevKColor__F14_GXTevKColorID8_GXColor();
/* Function             */
extern void J3DGDSetTevColorS10__F11_GXTevRegID11_GXColorS10();
/* Function             */
extern void J3DGDSetFog__F10_GXFogTypeffff8_GXColor();
/* Function             */
extern void J3DGDSetFogRangeAdj__FUcUsP14_GXFogAdjTable();
/* Function             */
extern void __dt__21J3DColorBlockLightOffFv();
/* Function             */
extern void __dt__21J3DTexGenBlockPatchedFv();
/* Function             */
extern void __dt__11J3DTevBlockFv();
/* ReturnIntegerFunction */
extern  int countDLSize__11J3DTevBlockFv();
/* ReturnFunction       */
extern void load__11J3DTevBlockFv();
/* ReturnIntegerFunction */
extern  int getNBTScale__14J3DTexGenBlockFv();
/* ReturnFunction       */
extern void diff__10J3DPEBlockFUl();
/* ReturnFunction       */
extern void reset__10J3DPEBlockFP10J3DPEBlock();
/* ReturnFunction       */
extern void reset__11J3DTevBlockFP11J3DTevBlock();
/* ReturnFunction       */
extern void diffFog__10J3DPEBlockFv();
/* ReturnFunction       */
extern void diffBlend__10J3DPEBlockFv();
/* ReturnFunction       */
extern void setFog__10J3DPEBlockFP6J3DFog();
/* ReturnFunction       */
extern void setFog__10J3DPEBlockF6J3DFog();
/* ReturnFunction       */
extern void setAlphaComp__10J3DPEBlockFPC12J3DAlphaComp();
/* ReturnFunction       */
extern void setBlend__10J3DPEBlockFPC8J3DBlend();
/* ReturnFunction       */
extern void setZMode__10J3DPEBlockFPC8J3DZMode();
/* ReturnFunction       */
extern void setZCompLoc__10J3DPEBlockFPCUc();
/* ReturnFunction       */
extern void setDither__10J3DPEBlockFUc();
/* ReturnFunction       */
extern void setDither__10J3DPEBlockFPCUc();
/* ReturnIntegerFunction */
extern  int getDither__10J3DPEBlockCFv();
/* ReturnIntegerFunction */
extern  int getFogOffset__10J3DPEBlockCFv();
/* ReturnFunction       */
extern void setFogOffset__10J3DPEBlockFUl();
/* ReturnFunction       */
extern void setNBTScale__14J3DTexGenBlockF11J3DNBTScale();
/* ReturnFunction       */
extern void setNBTScale__14J3DTexGenBlockFPC11J3DNBTScale();
/* ReturnFunction       */
extern void diffAmbColor__13J3DColorBlockFv();
/* ReturnFunction       */
extern void diffLightObj__13J3DColorBlockFUl();
/* ReturnIntegerFunction */
extern  int getLight__13J3DColorBlockFUl();
/* Function             */
extern void initialize__21J3DColorBlockLightOffFv();
/* Function             */
extern void initialize__22J3DColorBlockAmbientOnFv();
/* Function             */
extern void initialize__20J3DColorBlockLightOnFv();
/* Function             */
extern void initialize__21J3DTexGenBlockPatchedFv();
/* Function             */
extern void initialize__15J3DTexGenBlock4Fv();
/* Function             */
extern void initialize__19J3DTexGenBlockBasicFv();
/* Function             */
extern void initialize__15J3DTevBlockNullFv();
/* Function             */
extern void initialize__18J3DTevBlockPatchedFv();
/* Function             */
extern void initialize__12J3DTevBlock1Fv();
/* Function             */
extern void initialize__12J3DTevBlock2Fv();
/* Function             */
extern void initialize__12J3DTevBlock4Fv();
/* Function             */
extern void initialize__13J3DTevBlock16Fv();
/* Function             */
extern void initialize__15J3DIndBlockFullFv();
/* Function             */
extern void initialize__16J3DPEBlockFogOffFv();
/* Function             */
extern void initialize__14J3DPEBlockFullFv();
/* ReturnIntegerFunction */
extern  int countDLSize__21J3DColorBlockLightOffFv();
/* ReturnIntegerFunction */
extern  int countDLSize__22J3DColorBlockAmbientOnFv();
/* ReturnIntegerFunction */
extern  int countDLSize__20J3DColorBlockLightOnFv();
/* ReturnIntegerFunction */
extern  int countDLSize__21J3DTexGenBlockPatchedFv();
/* ReturnIntegerFunction */
extern  int countDLSize__15J3DTexGenBlock4Fv();
/* ReturnIntegerFunction */
extern  int countDLSize__19J3DTexGenBlockBasicFv();
/* ReturnIntegerFunction */
extern  int countDLSize__18J3DTevBlockPatchedFv();
/* ReturnIntegerFunction */
extern  int countDLSize__12J3DTevBlock1Fv();
/* ReturnIntegerFunction */
extern  int countDLSize__12J3DTevBlock2Fv();
/* ReturnIntegerFunction */
extern  int countDLSize__12J3DTevBlock4Fv();
/* ReturnIntegerFunction */
extern  int countDLSize__13J3DTevBlock16Fv();
/* ReturnIntegerFunction */
extern  int countDLSize__15J3DIndBlockFullFv();
/* ReturnIntegerFunction */
extern  int countDLSize__13J3DPEBlockOpaFv();
/* ReturnIntegerFunction */
extern  int countDLSize__17J3DPEBlockTexEdgeFv();
/* ReturnIntegerFunction */
extern  int countDLSize__13J3DPEBlockXluFv();
/* ReturnIntegerFunction */
extern  int countDLSize__16J3DPEBlockFogOffFv();
/* ReturnIntegerFunction */
extern  int countDLSize__14J3DPEBlockFullFv();
/* Function             */
extern void load__21J3DColorBlockLightOffFv();
/* Function             */
extern void load__22J3DColorBlockAmbientOnFv();
/* Function             */
extern void load__20J3DColorBlockLightOnFv();
/* Function             */
extern void patch__21J3DColorBlockLightOffFv();
/* Function             */
extern void patchMatColor__21J3DColorBlockLightOffFv();
/* Function             */
extern void patchLight__21J3DColorBlockLightOffFv();
/* Function             */
extern void patch__20J3DColorBlockLightOnFv();
/* Function             */
extern void patchMatColor__20J3DColorBlockLightOnFv();
/* Function             */
extern void patchLight__20J3DColorBlockLightOnFv();
/* Function             */
extern void diff__21J3DColorBlockLightOffFUl();
/* Function             */
extern void diffMatColor__21J3DColorBlockLightOffFv();
/* Function             */
extern void diffColorChan__21J3DColorBlockLightOffFv();
/* Function             */
extern void diff__20J3DColorBlockLightOnFUl();
/* Function             */
extern void diffAmbColor__20J3DColorBlockLightOnFv();
/* Function             */
extern void diffMatColor__20J3DColorBlockLightOnFv();
/* Function             */
extern void diffColorChan__20J3DColorBlockLightOnFv();
/* Function             */
extern void diffLightObj__20J3DColorBlockLightOnFUl();
/* Function             */
extern void load__15J3DTexGenBlock4Fv();
/* Function             */
extern void load__19J3DTexGenBlockBasicFv();
/* Function             */
extern void patch__21J3DTexGenBlockPatchedFv();
/* Function             */
extern void patch__15J3DTexGenBlock4Fv();
/* Function             */
extern void patch__19J3DTexGenBlockBasicFv();
/* Function             */
extern void diff__21J3DTexGenBlockPatchedFUl();
/* Function             */
extern void diffTexMtx__21J3DTexGenBlockPatchedFv();
/* Function             */
extern void diffTexGen__21J3DTexGenBlockPatchedFv();
/* Function             */
extern void load__12J3DTevBlock1Fv();
/* Function             */
extern void load__12J3DTevBlock2Fv();
/* Function             */
extern void load__12J3DTevBlock4Fv();
/* Function             */
extern void load__13J3DTevBlock16Fv();
/* Function             */
extern void patchTexNo__18J3DTevBlockPatchedFv();
/* Function             */
extern void patchTevReg__18J3DTevBlockPatchedFv();
/* Function             */
extern void patchTexNoAndTexCoordScale__18J3DTevBlockPatchedFv();
/* Function             */
extern void patch__18J3DTevBlockPatchedFv();
/* Function             */
extern void patchTexNo__12J3DTevBlock1Fv();
/* ReturnFunction       */
extern void patchTevReg__12J3DTevBlock1Fv();
/* Function             */
extern void patchTexNoAndTexCoordScale__12J3DTevBlock1Fv();
/* Function             */
extern void patch__12J3DTevBlock1Fv();
/* Function             */
extern void patchTexNo__12J3DTevBlock2Fv();
/* Function             */
extern void patchTevReg__12J3DTevBlock2Fv();
/* Function             */
extern void patchTexNoAndTexCoordScale__12J3DTevBlock2Fv();
/* Function             */
extern void patch__12J3DTevBlock2Fv();
/* Function             */
extern void patchTexNo__12J3DTevBlock4Fv();
/* Function             */
extern void patchTevReg__12J3DTevBlock4Fv();
/* Function             */
extern void patchTexNoAndTexCoordScale__12J3DTevBlock4Fv();
/* Function             */
extern void patch__12J3DTevBlock4Fv();
/* Function             */
extern void patchTexNo__13J3DTevBlock16Fv();
/* Function             */
extern void patchTevReg__13J3DTevBlock16Fv();
/* Function             */
extern void patchTexNoAndTexCoordScale__13J3DTevBlock16Fv();
/* Function             */
extern void patch__13J3DTevBlock16Fv();
/* Function             */
extern void diff__11J3DTevBlockFUl();
/* Function             */
extern void diffTexNo__18J3DTevBlockPatchedFv();
/* Function             */
extern void diffTevStage__18J3DTevBlockPatchedFv();
/* Function             */
extern void diffTevStageIndirect__18J3DTevBlockPatchedFv();
/* Function             */
extern void diffTevReg__18J3DTevBlockPatchedFv();
/* Function             */
extern void diffTexCoordScale__18J3DTevBlockPatchedFv();
/* Function             */
extern void diffTexNo__12J3DTevBlock1Fv();
/* ReturnFunction       */
extern void diffTevReg__12J3DTevBlock1Fv();
/* Function             */
extern void diffTevStage__12J3DTevBlock1Fv();
/* Function             */
extern void diffTevStageIndirect__12J3DTevBlock1Fv();
/* Function             */
extern void diffTexCoordScale__12J3DTevBlock1Fv();
/* Function             */
extern void diffTexNo__12J3DTevBlock2Fv();
/* Function             */
extern void diffTevReg__12J3DTevBlock2Fv();
/* Function             */
extern void diffTevStage__12J3DTevBlock2Fv();
/* Function             */
extern void diffTevStageIndirect__12J3DTevBlock2Fv();
/* Function             */
extern void diffTexCoordScale__12J3DTevBlock2Fv();
/* Function             */
extern void diffTexNo__12J3DTevBlock4Fv();
/* Function             */
extern void diffTevReg__12J3DTevBlock4Fv();
/* Function             */
extern void diffTevStage__12J3DTevBlock4Fv();
/* Function             */
extern void diffTevStageIndirect__12J3DTevBlock4Fv();
/* Function             */
extern void diffTexCoordScale__12J3DTevBlock4Fv();
/* Function             */
extern void diffTexNo__13J3DTevBlock16Fv();
/* Function             */
extern void diffTevReg__13J3DTevBlock16Fv();
/* Function             */
extern void diffTevStage__13J3DTevBlock16Fv();
/* Function             */
extern void diffTevStageIndirect__13J3DTevBlock16Fv();
/* Function             */
extern void diffTexCoordScale__13J3DTevBlock16Fv();
/* Function             */
extern void ptrToIndex__13J3DTevBlock16Fv();
/* Function             */
extern void ptrToIndex__18J3DTevBlockPatchedFv();
/* Function             */
extern void indexToPtr_private__11J3DTevBlockFUl();
/* Function             */
extern void load__15J3DIndBlockFullFv();
/* Function             */
extern void diff__15J3DIndBlockFullFUl();
/* Function             */
extern void load__13J3DPEBlockOpaFv();
/* Function             */
extern void load__17J3DPEBlockTexEdgeFv();
/* Function             */
extern void load__13J3DPEBlockXluFv();
/* Function             */
extern void load__16J3DPEBlockFogOffFv();
/* Function             */
extern void diffBlend__16J3DPEBlockFogOffFv();
/* Function             */
extern void load__14J3DPEBlockFullFv();
/* Function             */
extern void patch__14J3DPEBlockFullFv();
/* Function             */
extern void diffFog__14J3DPEBlockFullFv();
/* Function             */
extern void diffBlend__14J3DPEBlockFullFv();
/* Function             */
extern void diff__14J3DPEBlockFullFUl();
/* Function             */
extern void reset__21J3DColorBlockLightOffFP13J3DColorBlock();
/* Function             */
extern void reset__22J3DColorBlockAmbientOnFP13J3DColorBlock();
/* Function             */
extern void reset__20J3DColorBlockLightOnFP13J3DColorBlock();
/* Function             */
extern void reset__21J3DTexGenBlockPatchedFP14J3DTexGenBlock();
/* Function             */
extern void reset__15J3DTexGenBlock4FP14J3DTexGenBlock();
/* Function             */
extern void reset__19J3DTexGenBlockBasicFP14J3DTexGenBlock();
/* Function             */
extern void reset__18J3DTevBlockPatchedFP11J3DTevBlock();
/* Function             */
extern void reset__12J3DTevBlock1FP11J3DTevBlock();
/* Function             */
extern void reset__12J3DTevBlock2FP11J3DTevBlock();
/* Function             */
extern void reset__12J3DTevBlock4FP11J3DTevBlock();
/* Function             */
extern void reset__13J3DTevBlock16FP11J3DTevBlock();
/* Function             */
extern void reset__15J3DIndBlockFullFP11J3DIndBlock();
/* Function             */
extern void reset__16J3DPEBlockFogOffFP10J3DPEBlock();
/* Function             */
extern void reset__14J3DPEBlockFullFP10J3DPEBlock();
/* Function             */
extern void calc__21J3DTexGenBlockPatchedFPA4_Cf();
/* Function             */
extern void calcWithoutViewMtx__21J3DTexGenBlockPatchedFPA4_Cf();
/* Function             */
extern void calcPostTexMtx__21J3DTexGenBlockPatchedFPA4_Cf();
/* Function             */
extern void calcPostTexMtxWithoutViewMtx__21J3DTexGenBlockPatchedFPA4_Cf();
/* ReturnFunction       */
extern void diffTevReg__11J3DTevBlockFv();
/* ReturnFunction       */
extern void diffTevStageIndirect__11J3DTevBlockFv();
/* ReturnFunction       */
extern void diffTevStage__11J3DTevBlockFv();
/* ReturnFunction       */
extern void diffTexCoordScale__11J3DTevBlockFv();
/* ReturnFunction       */
extern void diffTexNo__11J3DTevBlockFv();
/* Function             */
extern void getType__14J3DPEBlockFullFv();
/* Function             */
extern void setFog__14J3DPEBlockFullFP6J3DFog();
/* Function             */
extern void setFog__14J3DPEBlockFullF6J3DFog();
/* FirstParamFunction   */
extern u8* getFog__14J3DPEBlockFullFv(u8*);
/* Function             */
extern void setAlphaComp__14J3DPEBlockFullFRC12J3DAlphaComp();
/* Function             */
extern void setAlphaComp__14J3DPEBlockFullFPC12J3DAlphaComp();
/* FirstParamFunction   */
extern u8* getAlphaComp__14J3DPEBlockFullFv(u8*);
/* Function             */
extern void setBlend__14J3DPEBlockFullFRC8J3DBlend();
/* Function             */
extern void setBlend__14J3DPEBlockFullFPC8J3DBlend();
/* FirstParamFunction   */
extern u8* getBlend__14J3DPEBlockFullFv(u8*);
/* Function             */
extern void setZMode__14J3DPEBlockFullF8J3DZMode();
/* Function             */
extern void setZMode__14J3DPEBlockFullFPC8J3DZMode();
/* FirstParamFunction   */
extern u8* getZMode__14J3DPEBlockFullFv(u8*);
/* Function             */
extern void setZCompLoc__14J3DPEBlockFullFUc();
/* Function             */
extern void setZCompLoc__14J3DPEBlockFullFPCUc();
/* FirstParamFunction   */
extern u8 getZCompLoc__14J3DPEBlockFullCFv(u8*);
/* Function             */
extern void setDither__14J3DPEBlockFullFUc();
/* Function             */
extern void setDither__14J3DPEBlockFullFPCUc();
/* FirstParamFunction   */
extern u8 getDither__14J3DPEBlockFullCFv(u8*);
/* FirstParamFunction   */
extern u32 getFogOffset__14J3DPEBlockFullCFv(u8*);
/* Function             */
extern void setFogOffset__14J3DPEBlockFullFUl();
/* Function             */
extern void __dt__14J3DPEBlockFullFv();
/* Function             */
extern void diff__16J3DPEBlockFogOffFUl();
/* Function             */
extern void getType__16J3DPEBlockFogOffFv();
/* Function             */
extern void setAlphaComp__16J3DPEBlockFogOffFRC12J3DAlphaComp();
/* Function             */
extern void setAlphaComp__16J3DPEBlockFogOffFPC12J3DAlphaComp();
/* FirstParamFunction   */
extern u8* getAlphaComp__16J3DPEBlockFogOffFv(u8*);
/* Function             */
extern void setBlend__16J3DPEBlockFogOffFRC8J3DBlend();
/* Function             */
extern void setBlend__16J3DPEBlockFogOffFPC8J3DBlend();
/* FirstParamFunction   */
extern u8* getBlend__16J3DPEBlockFogOffFv(u8*);
/* Function             */
extern void setZMode__16J3DPEBlockFogOffF8J3DZMode();
/* Function             */
extern void setZMode__16J3DPEBlockFogOffFPC8J3DZMode();
/* FirstParamFunction   */
extern u8* getZMode__16J3DPEBlockFogOffFv(u8*);
/* Function             */
extern void setZCompLoc__16J3DPEBlockFogOffFUc();
/* Function             */
extern void setZCompLoc__16J3DPEBlockFogOffFPCUc();
/* FirstParamFunction   */
extern u8 getZCompLoc__16J3DPEBlockFogOffCFv(u8*);
/* Function             */
extern void setDither__16J3DPEBlockFogOffFUc();
/* Function             */
extern void setDither__16J3DPEBlockFogOffFPCUc();
/* FirstParamFunction   */
extern u8 getDither__16J3DPEBlockFogOffCFv(u8*);
/* Function             */
extern void __dt__16J3DPEBlockFogOffFv();
/* Function             */
extern void indexToPtr__13J3DTevBlock16Fv();
/* Function             */
extern void getType__13J3DTevBlock16Fv();
/* Function             */
extern void setTexNo__13J3DTevBlock16FUlUs();
/* Function             */
extern void setTexNo__13J3DTevBlock16FUlPCUs();
/* Function             */
extern void getTexNo__13J3DTevBlock16CFUl();
/* Function             */
extern void setTevOrder__13J3DTevBlock16FUl11J3DTevOrder();
/* Function             */
extern void setTevOrder__13J3DTevBlock16FUlPC11J3DTevOrder();
/* Function             */
extern void getTevOrder__13J3DTevBlock16FUl();
/* Function             */
extern void setTevColor__13J3DTevBlock16FUl13J3DGXColorS10();
/* Function             */
extern void setTevColor__13J3DTevBlock16FUlPC13J3DGXColorS10();
/* Function             */
extern void getTevColor__13J3DTevBlock16FUl();
/* Function             */
extern void setTevKColor__13J3DTevBlock16FUl10J3DGXColor();
/* Function             */
extern void setTevKColor__13J3DTevBlock16FUlPC10J3DGXColor();
/* Function             */
extern void getTevKColor__13J3DTevBlock16FUl();
/* Function             */
extern void setTevKColorSel__13J3DTevBlock16FUlUc();
/* Function             */
extern void setTevKColorSel__13J3DTevBlock16FUlPCUc();
/* Function             */
extern void getTevKColorSel__13J3DTevBlock16FUl();
/* Function             */
extern void setTevKAlphaSel__13J3DTevBlock16FUlUc();
/* Function             */
extern void setTevKAlphaSel__13J3DTevBlock16FUlPCUc();
/* Function             */
extern void getTevKAlphaSel__13J3DTevBlock16FUl();
/* Function             */
extern void setTevStageNum__13J3DTevBlock16FUc();
/* Function             */
extern void setTevStageNum__13J3DTevBlock16FPCUc();
/* FirstParamFunction   */
extern u8 getTevStageNum__13J3DTevBlock16CFv(u8*);
/* Function             */
extern void setTevStage__13J3DTevBlock16FUl11J3DTevStage();
/* Function             */
extern void setTevStage__13J3DTevBlock16FUlPC11J3DTevStage();
/* Function             */
extern void getTevStage__13J3DTevBlock16FUl();
/* Function             */
extern void setTevSwapModeInfo__13J3DTevBlock16FUl18J3DTevSwapModeInfo();
/* Function             */
extern void setTevSwapModeInfo__13J3DTevBlock16FUlPC18J3DTevSwapModeInfo();
/* Function             */
extern void setTevSwapModeTable__13J3DTevBlock16FUl19J3DTevSwapModeTable();
/* Function             */
extern void setTevSwapModeTable__13J3DTevBlock16FUlPC19J3DTevSwapModeTable();
/* Function             */
extern void getTevSwapModeTable__13J3DTevBlock16FUl();
/* Function             */
extern void setIndTevStage__13J3DTevBlock16FUl14J3DIndTevStage();
/* Function             */
extern void setIndTevStage__13J3DTevBlock16FUlPC14J3DIndTevStage();
/* Function             */
extern void getIndTevStage__13J3DTevBlock16FUl();
/* FirstParamFunction   */
extern u32 getTexNoOffset__13J3DTevBlock16CFv(u8*);
/* FirstParamFunction   */
extern u32 getTevRegOffset__13J3DTevBlock16CFv(u8*);
/* Function             */
extern void setTevRegOffset__13J3DTevBlock16FUl();
/* Function             */
extern void __dt__13J3DTevBlock16Fv();
/* Function             */
extern void setTexNoOffset__11J3DTevBlockFUl();
/* ReturnFunction       */
extern void ptrToIndex__12J3DTevBlock4Fv();
/* Function             */
extern void indexToPtr__12J3DTevBlock4Fv();
/* Function             */
extern void getType__12J3DTevBlock4Fv();
/* Function             */
extern void setTexNo__12J3DTevBlock4FUlUs();
/* Function             */
extern void setTexNo__12J3DTevBlock4FUlPCUs();
/* Function             */
extern void getTexNo__12J3DTevBlock4CFUl();
/* Function             */
extern void setTevOrder__12J3DTevBlock4FUl11J3DTevOrder();
/* Function             */
extern void setTevOrder__12J3DTevBlock4FUlPC11J3DTevOrder();
/* Function             */
extern void getTevOrder__12J3DTevBlock4FUl();
/* Function             */
extern void setTevColor__12J3DTevBlock4FUl13J3DGXColorS10();
/* Function             */
extern void setTevColor__12J3DTevBlock4FUlPC13J3DGXColorS10();
/* Function             */
extern void getTevColor__12J3DTevBlock4FUl();
/* Function             */
extern void setTevKColor__12J3DTevBlock4FUl10J3DGXColor();
/* Function             */
extern void setTevKColor__12J3DTevBlock4FUlPC10J3DGXColor();
/* Function             */
extern void getTevKColor__12J3DTevBlock4FUl();
/* Function             */
extern void setTevKColorSel__12J3DTevBlock4FUlUc();
/* Function             */
extern void setTevKColorSel__12J3DTevBlock4FUlPCUc();
/* Function             */
extern void getTevKColorSel__12J3DTevBlock4FUl();
/* Function             */
extern void setTevKAlphaSel__12J3DTevBlock4FUlUc();
/* Function             */
extern void setTevKAlphaSel__12J3DTevBlock4FUlPCUc();
/* Function             */
extern void getTevKAlphaSel__12J3DTevBlock4FUl();
/* Function             */
extern void setTevStageNum__12J3DTevBlock4FUc();
/* Function             */
extern void setTevStageNum__12J3DTevBlock4FPCUc();
/* FirstParamFunction   */
extern u8 getTevStageNum__12J3DTevBlock4CFv(u8*);
/* Function             */
extern void setTevStage__12J3DTevBlock4FUl11J3DTevStage();
/* Function             */
extern void setTevStage__12J3DTevBlock4FUlPC11J3DTevStage();
/* Function             */
extern void getTevStage__12J3DTevBlock4FUl();
/* Function             */
extern void setTevSwapModeInfo__12J3DTevBlock4FUl18J3DTevSwapModeInfo();
/* Function             */
extern void setTevSwapModeInfo__12J3DTevBlock4FUlPC18J3DTevSwapModeInfo();
/* Function             */
extern void setTevSwapModeTable__12J3DTevBlock4FUl19J3DTevSwapModeTable();
/* Function             */
extern void setTevSwapModeTable__12J3DTevBlock4FUlPC19J3DTevSwapModeTable();
/* Function             */
extern void getTevSwapModeTable__12J3DTevBlock4FUl();
/* Function             */
extern void setIndTevStage__12J3DTevBlock4FUl14J3DIndTevStage();
/* Function             */
extern void setIndTevStage__12J3DTevBlock4FUlPC14J3DIndTevStage();
/* Function             */
extern void getIndTevStage__12J3DTevBlock4FUl();
/* FirstParamFunction   */
extern u32 getTexNoOffset__12J3DTevBlock4CFv(u8*);
/* FirstParamFunction   */
extern u32 getTevRegOffset__12J3DTevBlock4CFv(u8*);
/* Function             */
extern void setTevRegOffset__12J3DTevBlock4FUl();
/* Function             */
extern void __dt__12J3DTevBlock4Fv();
/* ReturnFunction       */
extern void ptrToIndex__12J3DTevBlock2Fv();
/* Function             */
extern void indexToPtr__12J3DTevBlock2Fv();
/* Function             */
extern void getType__12J3DTevBlock2Fv();
/* Function             */
extern void setTexNo__12J3DTevBlock2FUlUs();
/* Function             */
extern void setTexNo__12J3DTevBlock2FUlPCUs();
/* Function             */
extern void getTexNo__12J3DTevBlock2CFUl();
/* Function             */
extern void setTevOrder__12J3DTevBlock2FUl11J3DTevOrder();
/* Function             */
extern void setTevOrder__12J3DTevBlock2FUlPC11J3DTevOrder();
/* Function             */
extern void getTevOrder__12J3DTevBlock2FUl();
/* Function             */
extern void setTevColor__12J3DTevBlock2FUl13J3DGXColorS10();
/* Function             */
extern void setTevColor__12J3DTevBlock2FUlPC13J3DGXColorS10();
/* Function             */
extern void getTevColor__12J3DTevBlock2FUl();
/* Function             */
extern void setTevKColor__12J3DTevBlock2FUl10J3DGXColor();
/* Function             */
extern void setTevKColor__12J3DTevBlock2FUlPC10J3DGXColor();
/* Function             */
extern void getTevKColor__12J3DTevBlock2FUl();
/* Function             */
extern void setTevKColorSel__12J3DTevBlock2FUlUc();
/* Function             */
extern void setTevKColorSel__12J3DTevBlock2FUlPCUc();
/* Function             */
extern void getTevKColorSel__12J3DTevBlock2FUl();
/* Function             */
extern void setTevKAlphaSel__12J3DTevBlock2FUlUc();
/* Function             */
extern void setTevKAlphaSel__12J3DTevBlock2FUlPCUc();
/* Function             */
extern void getTevKAlphaSel__12J3DTevBlock2FUl();
/* Function             */
extern void setTevStageNum__12J3DTevBlock2FUc();
/* Function             */
extern void setTevStageNum__12J3DTevBlock2FPCUc();
/* FirstParamFunction   */
extern u8 getTevStageNum__12J3DTevBlock2CFv(u8*);
/* Function             */
extern void setTevStage__12J3DTevBlock2FUl11J3DTevStage();
/* Function             */
extern void setTevStage__12J3DTevBlock2FUlPC11J3DTevStage();
/* Function             */
extern void getTevStage__12J3DTevBlock2FUl();
/* Function             */
extern void setTevSwapModeInfo__12J3DTevBlock2FUl18J3DTevSwapModeInfo();
/* Function             */
extern void setTevSwapModeInfo__12J3DTevBlock2FUlPC18J3DTevSwapModeInfo();
/* Function             */
extern void setTevSwapModeTable__12J3DTevBlock2FUl19J3DTevSwapModeTable();
/* Function             */
extern void setTevSwapModeTable__12J3DTevBlock2FUlPC19J3DTevSwapModeTable();
/* Function             */
extern void getTevSwapModeTable__12J3DTevBlock2FUl();
/* Function             */
extern void setIndTevStage__12J3DTevBlock2FUl14J3DIndTevStage();
/* Function             */
extern void setIndTevStage__12J3DTevBlock2FUlPC14J3DIndTevStage();
/* Function             */
extern void getIndTevStage__12J3DTevBlock2FUl();
/* FirstParamFunction   */
extern u32 getTexNoOffset__12J3DTevBlock2CFv(u8*);
/* FirstParamFunction   */
extern u32 getTevRegOffset__12J3DTevBlock2CFv(u8*);
/* Function             */
extern void setTevRegOffset__12J3DTevBlock2FUl();
/* Function             */
extern void __dt__12J3DTevBlock2Fv();
/* ReturnFunction       */
extern void ptrToIndex__12J3DTevBlock1Fv();
/* Function             */
extern void indexToPtr__12J3DTevBlock1Fv();
/* Function             */
extern void getType__12J3DTevBlock1Fv();
/* Function             */
extern void setTexNo__12J3DTevBlock1FUlUs();
/* Function             */
extern void setTexNo__12J3DTevBlock1FUlPCUs();
/* Function             */
extern void getTexNo__12J3DTevBlock1CFUl();
/* Function             */
extern void setTevOrder__12J3DTevBlock1FUl11J3DTevOrder();
/* Function             */
extern void setTevOrder__12J3DTevBlock1FUlPC11J3DTevOrder();
/* Function             */
extern void getTevOrder__12J3DTevBlock1FUl();
/* ReturnFunction       */
extern void setTevStageNum__12J3DTevBlock1FUc();
/* ReturnFunction       */
extern void setTevStageNum__12J3DTevBlock1FPCUc();
/* ReturnIntegerFunction */
extern  int getTevStageNum__12J3DTevBlock1CFv();
/* Function             */
extern void setTevStage__12J3DTevBlock1FUl11J3DTevStage();
/* Function             */
extern void setTevStage__12J3DTevBlock1FUlPC11J3DTevStage();
/* Function             */
extern void getTevStage__12J3DTevBlock1FUl();
/* Function             */
extern void setIndTevStage__12J3DTevBlock1FUl14J3DIndTevStage();
/* Function             */
extern void setIndTevStage__12J3DTevBlock1FUlPC14J3DIndTevStage();
/* Function             */
extern void getIndTevStage__12J3DTevBlock1FUl();
/* FirstParamFunction   */
extern u32 getTexNoOffset__12J3DTevBlock1CFv(u8*);
/* Function             */
extern void __dt__12J3DTevBlock1Fv();
/* ReturnFunction       */
extern void setTevKColorSel__11J3DTevBlockFUlPCUc();
/* ReturnFunction       */
extern void setTevKAlphaSel__11J3DTevBlockFUlPCUc();
/* ReturnFunction       */
extern void setTevSwapModeInfo__11J3DTevBlockFUl18J3DTevSwapModeInfo();
/* ReturnFunction       */
extern void setTevSwapModeInfo__11J3DTevBlockFUlPC18J3DTevSwapModeInfo();
/* ReturnFunction       */
extern void setTevSwapModeTable__11J3DTevBlockFUlPC19J3DTevSwapModeTable();
/* ReturnIntegerFunction */
extern  int getTevRegOffset__11J3DTevBlockCFv();
/* ReturnFunction       */
extern void setTevRegOffset__11J3DTevBlockFUl();
/* ReturnFunction       */
extern void load__18J3DTevBlockPatchedFv();
/* Function             */
extern void indexToPtr__18J3DTevBlockPatchedFv();
/* Function             */
extern void getType__18J3DTevBlockPatchedFv();
/* Function             */
extern void setTevStageNum__18J3DTevBlockPatchedFUc();
/* Function             */
extern void setTevStageNum__18J3DTevBlockPatchedFPCUc();
/* FirstParamFunction   */
extern u8 getTevStageNum__18J3DTevBlockPatchedCFv(u8*);
/* Function             */
extern void setTexNo__18J3DTevBlockPatchedFUlUs();
/* Function             */
extern void setTexNo__18J3DTevBlockPatchedFUlPCUs();
/* Function             */
extern void getTexNo__18J3DTevBlockPatchedCFUl();
/* Function             */
extern void setTevOrder__18J3DTevBlockPatchedFUl11J3DTevOrder();
/* Function             */
extern void setTevOrder__18J3DTevBlockPatchedFUlPC11J3DTevOrder();
/* Function             */
extern void getTevOrder__18J3DTevBlockPatchedFUl();
/* Function             */
extern void setTevStage__18J3DTevBlockPatchedFUl11J3DTevStage();
/* Function             */
extern void setTevStage__18J3DTevBlockPatchedFUlPC11J3DTevStage();
/* Function             */
extern void getTevStage__18J3DTevBlockPatchedFUl();
/* Function             */
extern void setIndTevStage__18J3DTevBlockPatchedFUl14J3DIndTevStage();
/* Function             */
extern void setIndTevStage__18J3DTevBlockPatchedFUlPC14J3DIndTevStage();
/* Function             */
extern void getIndTevStage__18J3DTevBlockPatchedFUl();
/* Function             */
extern void setTevColor__18J3DTevBlockPatchedFUl13J3DGXColorS10();
/* Function             */
extern void setTevColor__18J3DTevBlockPatchedFUlPC13J3DGXColorS10();
/* Function             */
extern void getTevColor__18J3DTevBlockPatchedFUl();
/* Function             */
extern void setTevKColor__18J3DTevBlockPatchedFUl10J3DGXColor();
/* Function             */
extern void setTevKColor__18J3DTevBlockPatchedFUlPC10J3DGXColor();
/* Function             */
extern void getTevKColor__18J3DTevBlockPatchedFUl();
/* Function             */
extern void setTevKColorSel__18J3DTevBlockPatchedFUlUc();
/* Function             */
extern void setTevKColorSel__18J3DTevBlockPatchedFUlPCUc();
/* Function             */
extern void getTevKColorSel__18J3DTevBlockPatchedFUl();
/* FirstParamFunction   */
extern u32 getTexNoOffset__18J3DTevBlockPatchedCFv(u8*);
/* FirstParamFunction   */
extern u32 getTevRegOffset__18J3DTevBlockPatchedCFv(u8*);
/* Function             */
extern void setTevRegOffset__18J3DTevBlockPatchedFUl();
/* Function             */
extern void __dt__18J3DTevBlockPatchedFv();
/* Function             */
extern void getType__19J3DTexGenBlockBasicFv();
/* Function             */
extern void setNBTScale__19J3DTexGenBlockBasicF11J3DNBTScale();
/* Function             */
extern void setNBTScale__19J3DTexGenBlockBasicFPC11J3DNBTScale();
/* FirstParamFunction   */
extern u8* getNBTScale__19J3DTexGenBlockBasicFv(u8*);
/* Function             */
extern void __dt__19J3DTexGenBlockBasicFv();
/* Function             */
extern void setTexGenNum__21J3DTexGenBlockPatchedFUl();
/* Function             */
extern void setTexGenNum__21J3DTexGenBlockPatchedFPCUl();
/* FirstParamFunction   */
extern u32 getTexGenNum__21J3DTexGenBlockPatchedCFv(u8*);
/* Function             */
extern void setTexCoord__21J3DTexGenBlockPatchedFUlPC11J3DTexCoord();
/* Function             */
extern void getTexCoord__21J3DTexGenBlockPatchedFUl();
/* Function             */
extern void setTexMtx__21J3DTexGenBlockPatchedFUlP9J3DTexMtx();
/* Function             */
extern void getTexMtx__21J3DTexGenBlockPatchedFUl();
/* FirstParamFunction   */
extern u32 getTexMtxOffset__21J3DTexGenBlockPatchedCFv(u8*);
/* Function             */
extern void setTexMtxOffset__21J3DTexGenBlockPatchedFUl();
/* Function             */
extern void getType__15J3DTexGenBlock4Fv();
/* Function             */
extern void setNBTScale__15J3DTexGenBlock4F11J3DNBTScale();
/* Function             */
extern void setNBTScale__15J3DTexGenBlock4FPC11J3DNBTScale();
/* FirstParamFunction   */
extern u8* getNBTScale__15J3DTexGenBlock4Fv(u8*);
/* Function             */
extern void __dt__15J3DTexGenBlock4Fv();
/* ReturnFunction       */
extern void load__21J3DTexGenBlockPatchedFv();
/* Function             */
extern void getType__21J3DTexGenBlockPatchedFv();
/* Function             */
extern void getType__20J3DColorBlockLightOnFv();
/* Function             */
extern void setMatColor__20J3DColorBlockLightOnFUl10J3DGXColor();
/* Function             */
extern void setMatColor__20J3DColorBlockLightOnFUlPC10J3DGXColor();
/* Function             */
extern void getMatColor__20J3DColorBlockLightOnFUl();
/* Function             */
extern void setAmbColor__20J3DColorBlockLightOnFUl10J3DGXColor();
/* Function             */
extern void setAmbColor__20J3DColorBlockLightOnFUlPC10J3DGXColor();
/* Function             */
extern void getAmbColor__20J3DColorBlockLightOnFUl();
/* Function             */
extern void setColorChanNum__20J3DColorBlockLightOnFPCUc();
/* Function             */
extern void setColorChanNum__20J3DColorBlockLightOnFUc();
/* FirstParamFunction   */
extern u8 getColorChanNum__20J3DColorBlockLightOnCFv(u8*);
/* Function             */
extern void setColorChan__20J3DColorBlockLightOnFUlPC12J3DColorChan();
/* Function             */
extern void setColorChan__20J3DColorBlockLightOnFUlRC12J3DColorChan();
/* Function             */
extern void getColorChan__20J3DColorBlockLightOnFUl();
/* Function             */
extern void setLight__20J3DColorBlockLightOnFUlP11J3DLightObj();
/* Function             */
extern void getLight__20J3DColorBlockLightOnFUl();
/* Function             */
extern void setCullMode__20J3DColorBlockLightOnFUc();
/* Function             */
extern void setCullMode__20J3DColorBlockLightOnFPCUc();
/* FirstParamFunction   */
extern u8 getCullMode__20J3DColorBlockLightOnCFv(u8*);
/* FirstParamFunction   */
extern u32 getMatColorOffset__20J3DColorBlockLightOnCFv(u8*);
/* FirstParamFunction   */
extern u32 getColorChanOffset__20J3DColorBlockLightOnCFv(u8*);
/* Function             */
extern void setMatColorOffset__20J3DColorBlockLightOnFUl();
/* Function             */
extern void setColorChanOffset__20J3DColorBlockLightOnFUl();
/* Function             */
extern void __dt__20J3DColorBlockLightOnFv();
/* Function             */
extern void getType__22J3DColorBlockAmbientOnFv();
/* Function             */
extern void setAmbColor__22J3DColorBlockAmbientOnFUl10J3DGXColor();
/* Function             */
extern void setAmbColor__22J3DColorBlockAmbientOnFUlPC10J3DGXColor();
/* Function             */
extern void getAmbColor__22J3DColorBlockAmbientOnFUl();
/* Function             */
extern void __dt__22J3DColorBlockAmbientOnFv();
/* Function             */
extern void setMatColor__21J3DColorBlockLightOffFUl10J3DGXColor();
/* Function             */
extern void setMatColor__21J3DColorBlockLightOffFUlPC10J3DGXColor();
/* Function             */
extern void getMatColor__21J3DColorBlockLightOffFUl();
/* Function             */
extern void setColorChanNum__21J3DColorBlockLightOffFPCUc();
/* Function             */
extern void setColorChanNum__21J3DColorBlockLightOffFUc();
/* FirstParamFunction   */
extern u8 getColorChanNum__21J3DColorBlockLightOffCFv(u8*);
/* Function             */
extern void setColorChan__21J3DColorBlockLightOffFUlPC12J3DColorChan();
/* Function             */
extern void setColorChan__21J3DColorBlockLightOffFUlRC12J3DColorChan();
/* Function             */
extern void getColorChan__21J3DColorBlockLightOffFUl();
/* Function             */
extern void setCullMode__21J3DColorBlockLightOffFUc();
/* Function             */
extern void setCullMode__21J3DColorBlockLightOffFPCUc();
/* FirstParamFunction   */
extern u8 getCullMode__21J3DColorBlockLightOffCFv(u8*);
/* FirstParamFunction   */
extern u32 getMatColorOffset__21J3DColorBlockLightOffCFv(u8*);
/* FirstParamFunction   */
extern u32 getColorChanOffset__21J3DColorBlockLightOffCFv(u8*);
/* Function             */
extern void setMatColorOffset__21J3DColorBlockLightOffFUl();
/* Function             */
extern void setColorChanOffset__21J3DColorBlockLightOffFUl();
/* Function             */
extern void getType__13J3DPEBlockXluFv();
/* Function             */
extern void __dt__13J3DPEBlockXluFv();
/* Function             */
extern void getType__17J3DPEBlockTexEdgeFv();
/* Function             */
extern void __dt__17J3DPEBlockTexEdgeFv();
/* Function             */
extern void getType__13J3DPEBlockOpaFv();
/* Function             */
extern void __dt__13J3DPEBlockOpaFv();
/* Function             */
extern void getType__15J3DIndBlockFullFv();
/* Function             */
extern void setIndTexStageNum__15J3DIndBlockFullFUc();
/* FirstParamFunction   */
extern u8 getIndTexStageNum__15J3DIndBlockFullCFv(u8*);
/* Function             */
extern void setIndTexOrder__15J3DIndBlockFullFUl14J3DIndTexOrder();
/* Function             */
extern void setIndTexOrder__15J3DIndBlockFullFUlPC14J3DIndTexOrder();
/* Function             */
extern void getIndTexOrder__15J3DIndBlockFullFUl();
/* Function             */
extern void setIndTexMtx__15J3DIndBlockFullFUl12J3DIndTexMtx();
/* Function             */
extern void setIndTexMtx__15J3DIndBlockFullFUlPC12J3DIndTexMtx();
/* Function             */
extern void getIndTexMtx__15J3DIndBlockFullFUl();
/* Function             */
extern void setIndTexCoordScale__15J3DIndBlockFullFUl19J3DIndTexCoordScale();
/* Function             */
extern void setIndTexCoordScale__15J3DIndBlockFullFUlPC19J3DIndTexCoordScale();
/* Function             */
extern void getIndTexCoordScale__15J3DIndBlockFullFUl();
/* Function             */
extern void __dt__15J3DIndBlockFullFv();
/* ReturnFunction       */
extern void patchTexNo__11J3DTevBlockFv();
/* ReturnFunction       */
extern void patchTevReg__11J3DTevBlockFv();
/* ReturnFunction       */
extern void setTexNo__11J3DTevBlockFUlPCUs();
/* ReturnFunction       */
extern void setTevOrder__11J3DTevBlockFUlPC11J3DTevOrder();
/* ReturnFunction       */
extern void setTevStageNum__11J3DTevBlockFPCUc();
/* ReturnFunction       */
extern void setTevStage__11J3DTevBlockFUlPC11J3DTevStage();
/* ReturnFunction       */
extern void setIndTevStage__11J3DTevBlockFUlPC14J3DIndTevStage();
/* ReturnIntegerFunction */
extern  int getTexNoOffset__11J3DTevBlockCFv();
/* Function             */
extern void getType__21J3DColorBlockLightOffFv();
/* SInitFunction        */
extern void __sinit_J3DMatBlock_cpp();
/* Function             */
extern void load__11J3DLightObjCFUl();
/* Function             */
extern void loadTexCoordGens__FUlP11J3DTexCoord();
/* Function             */
extern void load__9J3DTexMtxCFUl();
/* Function             */
extern void calc__9J3DTexMtxFPA4_Cf();
/* Function             */
extern void calcPostTexMtx__9J3DTexMtxFPA4_Cf();
/* Function             */
extern void isTexNoReg__FPv();
/* Function             */
extern void getTexNoReg__FPv();
/* Function             */
extern void loadTexNo__FUlRCUs();
/* Function             */
extern void patchTexNo_PtrToIdx__FUlRCUs();
/* Function             */
extern void __as__16J3DIndTexMtxInfoFRC16J3DIndTexMtxInfo();
/* Function             */
extern void __as__10J3DFogInfoFRC10J3DFogInfo();
/* Function             */
extern void __as__15J3DNBTScaleInfoFRC15J3DNBTScaleInfo();
/* Function             */
extern void DCStoreRange();
/* Function             */
extern void PSMTXCopy();
/* Function             */
extern void PSMTXConcat();
/* Function             */
extern void PSMTXInverse();
/* Function             */
extern void GDOverflowed();
/* Function             */
extern void __destroy_arr();
/* Function             */
extern void _savegpr_24();
/* Function             */
extern void _savegpr_25();
/* Function             */
extern void _savegpr_26();
/* Function             */
extern void _savegpr_27();
/* Function             */
extern void _savegpr_28();
/* Function             */
extern void _savegpr_29();
/* Function             */
extern void _restgpr_24();
/* Function             */
extern void _restgpr_25();
/* Function             */
extern void _restgpr_26();
/* Function             */
extern void _restgpr_27();
/* Function             */
extern void _restgpr_28();
/* Function             */
extern void _restgpr_29();
/* InitializedData      */
SECTION_RODATA extern const u8 j3dDefaultMtx[48];
/* StringBaseData       */
SECTION_RODATA extern const u8 J3DMatBlock__stringBase0[32];
/* VTableData           */
SECTION_DATA extern void* __vt__10J3DPEBlock[31];
/* VTableData           */
SECTION_DATA extern void* __vt__11J3DIndBlock[19];
/* VTableData           */
SECTION_DATA extern void* __vt__14J3DTexGenBlock[27];
/* VTableData           */
SECTION_DATA extern void* __vt__13J3DColorBlock[36];
/* SymbolReferenceArrayData */
SECTION_DATA extern void* J3DMatBlock__LIT_5062[12];
/* SymbolReferenceArrayData */
SECTION_DATA extern void* J3DMatBlock__LIT_5110[12];
/* SymbolReferenceArrayData */
SECTION_DATA extern void* LIT_5150[12];
/* SymbolReferenceArrayData */
SECTION_DATA extern void* J3DMatBlock__LIT_5187[12];
/* VTableData           */
SECTION_DATA extern void* __vt__14J3DPEBlockFull[31];
/* VTableData           */
SECTION_DATA extern void* __vt__16J3DPEBlockFogOff[31];
/* VTableData           */
SECTION_DATA extern void* __vt__13J3DTevBlock16[55];
/* VTableData           */
SECTION_DATA extern void* __vt__12J3DTevBlock4[55];
/* VTableData           */
SECTION_DATA extern void* __vt__12J3DTevBlock2[55];
/* VTableData           */
SECTION_DATA extern void* __vt__12J3DTevBlock1[55];
/* VTableData           */
SECTION_DATA extern void* __vt__18J3DTevBlockPatched[55];
/* VTableData           */
SECTION_DATA extern void* __vt__19J3DTexGenBlockBasic[27];
/* VTableData           */
SECTION_DATA extern void* __vt__15J3DTexGenBlock4[27];
/* VTableData           */
SECTION_DATA extern void* __vt__21J3DTexGenBlockPatched[27];
/* VTableData           */
SECTION_DATA extern void* __vt__20J3DColorBlockLightOn[36];
/* VTableData           */
SECTION_DATA extern void* __vt__22J3DColorBlockAmbientOn[36];
/* VTableData           */
SECTION_DATA extern void* __vt__13J3DPEBlockXlu[31];
/* VTableData           */
SECTION_DATA extern void* __vt__17J3DPEBlockTexEdge[31];
/* VTableData           */
SECTION_DATA extern void* __vt__13J3DPEBlockOpa[31];
/* VTableData           */
SECTION_DATA extern void* __vt__15J3DIndBlockFull[19];
/* VTableData           */
SECTION_DATA extern void* __vt__11J3DTevBlock[55];
/* VTableData           */
SECTION_DATA extern void* __vt__21J3DColorBlockLightOff[37];
/* ZeroInitializedData  */
SECTION_BSS extern u8 j3dSys[284];
/* ZeroInitializedData  */
SECTION_BSS extern u8 sTexCoordScaleTable__6J3DSys[64 + 4 /* padding */];
/* ZeroInitializedData  */
SECTION_BSS extern u8 j3dTevSwapTableTable[1024];
/* ZeroInitializedData  */
SECTION_BSS extern u8 j3dAlphaCmpTable[768];
/* ZeroInitializedData  */
SECTION_BSS extern u8 j3dZModeTable[96];
/* InitializedData      */
SECTION_SDATA extern u8 SizeOfLoadMatColors[4];
/* InitializedData      */
SECTION_SDATA extern u8 SizeOfLoadAmbColors[4];
/* InitializedData      */
SECTION_SDATA extern u8 SizeOfLoadColorChans[8];
/* ZeroInitializedData  */
SECTION_SBSS extern u8 SizeOfJ3DColorBlockLightOffLoad[4];
/* ZeroInitializedData  */
SECTION_SBSS extern u8 SizeOfJ3DColorBlockAmbientOnLoad[4];
/* ZeroInitializedData  */
SECTION_SBSS extern u8 __GDCurrentDL[4];
/* InitializedData      */
SECTION_SDATA2 extern u8 LIT_585[4];
/* InitializedData      */
SECTION_SDATA2 extern u8 J3DMatBlock__LIT_5060[4];
/* InitializedData      */
SECTION_SDATA2 extern u8 j3dDefaultColInfo[4];
/* InitializedData      */
SECTION_SDATA2 extern u8 j3dDefaultAmbInfo[4];
/* InitializedData      */
SECTION_SDATA2 extern u8 j3dDefaultTevColor[4];
/* InitializedData      */
SECTION_SDATA2 extern u8 j3dDefaultTevKColor[4];
}


/* ###################################################################################### */
/*                                        .rodata                                         */
/* ###################################################################################### */

extern "C" {
/* 803A1EA8-803A1EC8 001D .rodata    @stringBase0                                                 StringBaseData */
#pragma push
#pragma force_active on
#pragma section ".dead"
SECTION_DEAD const char* const stringBase_803A1EA8 = "Error : TexMtx[%d] is Null.\n";
/* @stringBase0 padding */
SECTION_DEAD const char* const pad_803A1EC5 = "\0\0";
#pragma pop
}


/* ###################################################################################### */
/*                                         .data                                          */
/* ###################################################################################### */

extern "C" {
/* 803CDF30-803CDF60 0030 .data      @5062                                                        SymbolReferenceArrayData */
SECTION_DATA void* J3DMatBlock__LIT_5062[12] = {
	(void*)(((u32*)calc__21J3DTexGenBlockPatchedFPA4_Cf)+98),
	(void*)(((u32*)calc__21J3DTexGenBlockPatchedFPA4_Cf)+29),
	(void*)(((u32*)calc__21J3DTexGenBlockPatchedFPA4_Cf)+50),
	(void*)(((u32*)calc__21J3DTexGenBlockPatchedFPA4_Cf)+62),
	(void*)(((u32*)calc__21J3DTexGenBlockPatchedFPA4_Cf)+98),
	(void*)(((u32*)calc__21J3DTexGenBlockPatchedFPA4_Cf)+79),
	(void*)(((u32*)calc__21J3DTexGenBlockPatchedFPA4_Cf)+29),
	(void*)(((u32*)calc__21J3DTexGenBlockPatchedFPA4_Cf)+29),
	(void*)(((u32*)calc__21J3DTexGenBlockPatchedFPA4_Cf)+50),
	(void*)(((u32*)calc__21J3DTexGenBlockPatchedFPA4_Cf)+62),
	(void*)(((u32*)calc__21J3DTexGenBlockPatchedFPA4_Cf)+79),
	(void*)(((u32*)calc__21J3DTexGenBlockPatchedFPA4_Cf)+79),
};
/* 803CDF60-803CDF90 0030 .data      @5110                                                        SymbolReferenceArrayData */
SECTION_DATA void* J3DMatBlock__LIT_5110[12] = {
	(void*)(((u32*)calcWithoutViewMtx__21J3DTexGenBlockPatchedFPA4_Cf)+70),
	(void*)(((u32*)calcWithoutViewMtx__21J3DTexGenBlockPatchedFPA4_Cf)+29),
	(void*)(((u32*)calcWithoutViewMtx__21J3DTexGenBlockPatchedFPA4_Cf)+34),
	(void*)(((u32*)calcWithoutViewMtx__21J3DTexGenBlockPatchedFPA4_Cf)+46),
	(void*)(((u32*)calcWithoutViewMtx__21J3DTexGenBlockPatchedFPA4_Cf)+70),
	(void*)(((u32*)calcWithoutViewMtx__21J3DTexGenBlockPatchedFPA4_Cf)+51),
	(void*)(((u32*)calcWithoutViewMtx__21J3DTexGenBlockPatchedFPA4_Cf)+29),
	(void*)(((u32*)calcWithoutViewMtx__21J3DTexGenBlockPatchedFPA4_Cf)+29),
	(void*)(((u32*)calcWithoutViewMtx__21J3DTexGenBlockPatchedFPA4_Cf)+34),
	(void*)(((u32*)calcWithoutViewMtx__21J3DTexGenBlockPatchedFPA4_Cf)+46),
	(void*)(((u32*)calcWithoutViewMtx__21J3DTexGenBlockPatchedFPA4_Cf)+51),
	(void*)(((u32*)calcWithoutViewMtx__21J3DTexGenBlockPatchedFPA4_Cf)+51),
};
/* 803CDF90-803CDFC0 0030 .data      @5150                                                        SymbolReferenceArrayData */
SECTION_DATA void* LIT_5150[12] = {
	(void*)(((u32*)calcPostTexMtx__21J3DTexGenBlockPatchedFPA4_Cf)+64),
	(void*)(((u32*)calcPostTexMtx__21J3DTexGenBlockPatchedFPA4_Cf)+26),
	(void*)(((u32*)calcPostTexMtx__21J3DTexGenBlockPatchedFPA4_Cf)+33),
	(void*)(((u32*)calcPostTexMtx__21J3DTexGenBlockPatchedFPA4_Cf)+43),
	(void*)(((u32*)calcPostTexMtx__21J3DTexGenBlockPatchedFPA4_Cf)+64),
	(void*)(((u32*)calcPostTexMtx__21J3DTexGenBlockPatchedFPA4_Cf)+50),
	(void*)(((u32*)calcPostTexMtx__21J3DTexGenBlockPatchedFPA4_Cf)+26),
	(void*)(((u32*)calcPostTexMtx__21J3DTexGenBlockPatchedFPA4_Cf)+26),
	(void*)(((u32*)calcPostTexMtx__21J3DTexGenBlockPatchedFPA4_Cf)+33),
	(void*)(((u32*)calcPostTexMtx__21J3DTexGenBlockPatchedFPA4_Cf)+43),
	(void*)(((u32*)calcPostTexMtx__21J3DTexGenBlockPatchedFPA4_Cf)+50),
	(void*)(((u32*)calcPostTexMtx__21J3DTexGenBlockPatchedFPA4_Cf)+50),
};
/* 803CDFC0-803CDFF0 0030 .data      @5187                                                        SymbolReferenceArrayData */
SECTION_DATA void* J3DMatBlock__LIT_5187[12] = {
	(void*)(((u32*)calcPostTexMtxWithoutViewMtx__21J3DTexGenBlockPatchedFPA4_Cf)+54),
	(void*)(((u32*)calcPostTexMtxWithoutViewMtx__21J3DTexGenBlockPatchedFPA4_Cf)+26),
	(void*)(((u32*)calcPostTexMtxWithoutViewMtx__21J3DTexGenBlockPatchedFPA4_Cf)+33),
	(void*)(((u32*)calcPostTexMtxWithoutViewMtx__21J3DTexGenBlockPatchedFPA4_Cf)+40),
	(void*)(((u32*)calcPostTexMtxWithoutViewMtx__21J3DTexGenBlockPatchedFPA4_Cf)+54),
	(void*)(((u32*)calcPostTexMtxWithoutViewMtx__21J3DTexGenBlockPatchedFPA4_Cf)+47),
	(void*)(((u32*)calcPostTexMtxWithoutViewMtx__21J3DTexGenBlockPatchedFPA4_Cf)+26),
	(void*)(((u32*)calcPostTexMtxWithoutViewMtx__21J3DTexGenBlockPatchedFPA4_Cf)+26),
	(void*)(((u32*)calcPostTexMtxWithoutViewMtx__21J3DTexGenBlockPatchedFPA4_Cf)+33),
	(void*)(((u32*)calcPostTexMtxWithoutViewMtx__21J3DTexGenBlockPatchedFPA4_Cf)+40),
	(void*)(((u32*)calcPostTexMtxWithoutViewMtx__21J3DTexGenBlockPatchedFPA4_Cf)+47),
	(void*)(((u32*)calcPostTexMtxWithoutViewMtx__21J3DTexGenBlockPatchedFPA4_Cf)+47),
};
/* 803CDFF0-803CE06C 007C .data      __vt__14J3DPEBlockFull                                       VTableData */
SECTION_DATA void* __vt__14J3DPEBlockFull[31] = {
	NULL, /* RTTI */
	NULL,
	(void*)reset__14J3DPEBlockFullFP10J3DPEBlock,
	(void*)load__14J3DPEBlockFullFv,
	(void*)patch__14J3DPEBlockFullFv,
	(void*)diff__14J3DPEBlockFullFUl,
	(void*)diffFog__14J3DPEBlockFullFv,
	(void*)diffBlend__14J3DPEBlockFullFv,
	(void*)countDLSize__14J3DPEBlockFullFv,
	(void*)getType__14J3DPEBlockFullFv,
	(void*)setFog__14J3DPEBlockFullF6J3DFog,
	(void*)setFog__14J3DPEBlockFullFP6J3DFog,
	(void*)getFog__14J3DPEBlockFullFv,
	(void*)setAlphaComp__14J3DPEBlockFullFPC12J3DAlphaComp,
	(void*)setAlphaComp__14J3DPEBlockFullFRC12J3DAlphaComp,
	(void*)getAlphaComp__14J3DPEBlockFullFv,
	(void*)setBlend__14J3DPEBlockFullFPC8J3DBlend,
	(void*)setBlend__14J3DPEBlockFullFRC8J3DBlend,
	(void*)getBlend__14J3DPEBlockFullFv,
	(void*)setZMode__14J3DPEBlockFullFPC8J3DZMode,
	(void*)setZMode__14J3DPEBlockFullF8J3DZMode,
	(void*)getZMode__14J3DPEBlockFullFv,
	(void*)setZCompLoc__14J3DPEBlockFullFPCUc,
	(void*)setZCompLoc__14J3DPEBlockFullFUc,
	(void*)getZCompLoc__14J3DPEBlockFullCFv,
	(void*)setDither__14J3DPEBlockFullFPCUc,
	(void*)setDither__14J3DPEBlockFullFUc,
	(void*)getDither__14J3DPEBlockFullCFv,
	(void*)getFogOffset__14J3DPEBlockFullCFv,
	(void*)setFogOffset__14J3DPEBlockFullFUl,
	(void*)__dt__14J3DPEBlockFullFv,
};
/* 803CE06C-803CE0E8 007C .data      __vt__16J3DPEBlockFogOff                                     VTableData */
SECTION_DATA void* __vt__16J3DPEBlockFogOff[31] = {
	NULL, /* RTTI */
	NULL,
	(void*)reset__16J3DPEBlockFogOffFP10J3DPEBlock,
	(void*)load__16J3DPEBlockFogOffFv,
	(void*)patch__10J3DPEBlockFv,
	(void*)diff__16J3DPEBlockFogOffFUl,
	(void*)diffFog__10J3DPEBlockFv,
	(void*)diffBlend__16J3DPEBlockFogOffFv,
	(void*)countDLSize__16J3DPEBlockFogOffFv,
	(void*)getType__16J3DPEBlockFogOffFv,
	(void*)setFog__10J3DPEBlockF6J3DFog,
	(void*)setFog__10J3DPEBlockFP6J3DFog,
	(void*)getFog__10J3DPEBlockFv,
	(void*)setAlphaComp__16J3DPEBlockFogOffFPC12J3DAlphaComp,
	(void*)setAlphaComp__16J3DPEBlockFogOffFRC12J3DAlphaComp,
	(void*)getAlphaComp__16J3DPEBlockFogOffFv,
	(void*)setBlend__16J3DPEBlockFogOffFPC8J3DBlend,
	(void*)setBlend__16J3DPEBlockFogOffFRC8J3DBlend,
	(void*)getBlend__16J3DPEBlockFogOffFv,
	(void*)setZMode__16J3DPEBlockFogOffFPC8J3DZMode,
	(void*)setZMode__16J3DPEBlockFogOffF8J3DZMode,
	(void*)getZMode__16J3DPEBlockFogOffFv,
	(void*)setZCompLoc__16J3DPEBlockFogOffFPCUc,
	(void*)setZCompLoc__16J3DPEBlockFogOffFUc,
	(void*)getZCompLoc__16J3DPEBlockFogOffCFv,
	(void*)setDither__16J3DPEBlockFogOffFPCUc,
	(void*)setDither__16J3DPEBlockFogOffFUc,
	(void*)getDither__16J3DPEBlockFogOffCFv,
	(void*)getFogOffset__10J3DPEBlockCFv,
	(void*)setFogOffset__10J3DPEBlockFUl,
	(void*)__dt__16J3DPEBlockFogOffFv,
};
/* 803CE0E8-803CE1C4 00DC .data      __vt__13J3DTevBlock16                                        VTableData */
SECTION_DATA void* __vt__13J3DTevBlock16[55] = {
	NULL, /* RTTI */
	NULL,
	(void*)reset__13J3DTevBlock16FP11J3DTevBlock,
	(void*)load__13J3DTevBlock16Fv,
	(void*)diff__11J3DTevBlockFUl,
	(void*)diffTexNo__13J3DTevBlock16Fv,
	(void*)diffTevReg__13J3DTevBlock16Fv,
	(void*)diffTexCoordScale__13J3DTevBlock16Fv,
	(void*)diffTevStage__13J3DTevBlock16Fv,
	(void*)diffTevStageIndirect__13J3DTevBlock16Fv,
	(void*)patch__13J3DTevBlock16Fv,
	(void*)patchTexNo__13J3DTevBlock16Fv,
	(void*)patchTevReg__13J3DTevBlock16Fv,
	(void*)patchTexNoAndTexCoordScale__13J3DTevBlock16Fv,
	(void*)ptrToIndex__13J3DTevBlock16Fv,
	(void*)indexToPtr__13J3DTevBlock16Fv,
	(void*)getType__13J3DTevBlock16Fv,
	(void*)countDLSize__13J3DTevBlock16Fv,
	(void*)setTexNo__13J3DTevBlock16FUlPCUs,
	(void*)setTexNo__13J3DTevBlock16FUlUs,
	(void*)getTexNo__13J3DTevBlock16CFUl,
	(void*)setTevOrder__13J3DTevBlock16FUlPC11J3DTevOrder,
	(void*)setTevOrder__13J3DTevBlock16FUl11J3DTevOrder,
	(void*)getTevOrder__13J3DTevBlock16FUl,
	(void*)setTevColor__13J3DTevBlock16FUlPC13J3DGXColorS10,
	(void*)setTevColor__13J3DTevBlock16FUl13J3DGXColorS10,
	(void*)getTevColor__13J3DTevBlock16FUl,
	(void*)setTevKColor__13J3DTevBlock16FUlPC10J3DGXColor,
	(void*)setTevKColor__13J3DTevBlock16FUl10J3DGXColor,
	(void*)getTevKColor__13J3DTevBlock16FUl,
	(void*)setTevKColorSel__13J3DTevBlock16FUlPCUc,
	(void*)setTevKColorSel__13J3DTevBlock16FUlUc,
	(void*)getTevKColorSel__13J3DTevBlock16FUl,
	(void*)setTevKAlphaSel__13J3DTevBlock16FUlPCUc,
	(void*)setTevKAlphaSel__13J3DTevBlock16FUlUc,
	(void*)getTevKAlphaSel__13J3DTevBlock16FUl,
	(void*)setTevStageNum__13J3DTevBlock16FPCUc,
	(void*)setTevStageNum__13J3DTevBlock16FUc,
	(void*)getTevStageNum__13J3DTevBlock16CFv,
	(void*)setTevStage__13J3DTevBlock16FUlPC11J3DTevStage,
	(void*)setTevStage__13J3DTevBlock16FUl11J3DTevStage,
	(void*)getTevStage__13J3DTevBlock16FUl,
	(void*)setTevSwapModeInfo__13J3DTevBlock16FUlPC18J3DTevSwapModeInfo,
	(void*)setTevSwapModeInfo__13J3DTevBlock16FUl18J3DTevSwapModeInfo,
	(void*)setTevSwapModeTable__13J3DTevBlock16FUlPC19J3DTevSwapModeTable,
	(void*)setTevSwapModeTable__13J3DTevBlock16FUl19J3DTevSwapModeTable,
	(void*)getTevSwapModeTable__13J3DTevBlock16FUl,
	(void*)setIndTevStage__13J3DTevBlock16FUlPC14J3DIndTevStage,
	(void*)setIndTevStage__13J3DTevBlock16FUl14J3DIndTevStage,
	(void*)getIndTevStage__13J3DTevBlock16FUl,
	(void*)getTexNoOffset__13J3DTevBlock16CFv,
	(void*)getTevRegOffset__13J3DTevBlock16CFv,
	(void*)setTexNoOffset__11J3DTevBlockFUl,
	(void*)setTevRegOffset__13J3DTevBlock16FUl,
	(void*)__dt__13J3DTevBlock16Fv,
};
/* 803CE1C4-803CE2A0 00DC .data      __vt__12J3DTevBlock4                                         VTableData */
SECTION_DATA void* __vt__12J3DTevBlock4[55] = {
	NULL, /* RTTI */
	NULL,
	(void*)reset__12J3DTevBlock4FP11J3DTevBlock,
	(void*)load__12J3DTevBlock4Fv,
	(void*)diff__11J3DTevBlockFUl,
	(void*)diffTexNo__12J3DTevBlock4Fv,
	(void*)diffTevReg__12J3DTevBlock4Fv,
	(void*)diffTexCoordScale__12J3DTevBlock4Fv,
	(void*)diffTevStage__12J3DTevBlock4Fv,
	(void*)diffTevStageIndirect__12J3DTevBlock4Fv,
	(void*)patch__12J3DTevBlock4Fv,
	(void*)patchTexNo__12J3DTevBlock4Fv,
	(void*)patchTevReg__12J3DTevBlock4Fv,
	(void*)patchTexNoAndTexCoordScale__12J3DTevBlock4Fv,
	(void*)ptrToIndex__12J3DTevBlock4Fv,
	(void*)indexToPtr__12J3DTevBlock4Fv,
	(void*)getType__12J3DTevBlock4Fv,
	(void*)countDLSize__12J3DTevBlock4Fv,
	(void*)setTexNo__12J3DTevBlock4FUlPCUs,
	(void*)setTexNo__12J3DTevBlock4FUlUs,
	(void*)getTexNo__12J3DTevBlock4CFUl,
	(void*)setTevOrder__12J3DTevBlock4FUlPC11J3DTevOrder,
	(void*)setTevOrder__12J3DTevBlock4FUl11J3DTevOrder,
	(void*)getTevOrder__12J3DTevBlock4FUl,
	(void*)setTevColor__12J3DTevBlock4FUlPC13J3DGXColorS10,
	(void*)setTevColor__12J3DTevBlock4FUl13J3DGXColorS10,
	(void*)getTevColor__12J3DTevBlock4FUl,
	(void*)setTevKColor__12J3DTevBlock4FUlPC10J3DGXColor,
	(void*)setTevKColor__12J3DTevBlock4FUl10J3DGXColor,
	(void*)getTevKColor__12J3DTevBlock4FUl,
	(void*)setTevKColorSel__12J3DTevBlock4FUlPCUc,
	(void*)setTevKColorSel__12J3DTevBlock4FUlUc,
	(void*)getTevKColorSel__12J3DTevBlock4FUl,
	(void*)setTevKAlphaSel__12J3DTevBlock4FUlPCUc,
	(void*)setTevKAlphaSel__12J3DTevBlock4FUlUc,
	(void*)getTevKAlphaSel__12J3DTevBlock4FUl,
	(void*)setTevStageNum__12J3DTevBlock4FPCUc,
	(void*)setTevStageNum__12J3DTevBlock4FUc,
	(void*)getTevStageNum__12J3DTevBlock4CFv,
	(void*)setTevStage__12J3DTevBlock4FUlPC11J3DTevStage,
	(void*)setTevStage__12J3DTevBlock4FUl11J3DTevStage,
	(void*)getTevStage__12J3DTevBlock4FUl,
	(void*)setTevSwapModeInfo__12J3DTevBlock4FUlPC18J3DTevSwapModeInfo,
	(void*)setTevSwapModeInfo__12J3DTevBlock4FUl18J3DTevSwapModeInfo,
	(void*)setTevSwapModeTable__12J3DTevBlock4FUlPC19J3DTevSwapModeTable,
	(void*)setTevSwapModeTable__12J3DTevBlock4FUl19J3DTevSwapModeTable,
	(void*)getTevSwapModeTable__12J3DTevBlock4FUl,
	(void*)setIndTevStage__12J3DTevBlock4FUlPC14J3DIndTevStage,
	(void*)setIndTevStage__12J3DTevBlock4FUl14J3DIndTevStage,
	(void*)getIndTevStage__12J3DTevBlock4FUl,
	(void*)getTexNoOffset__12J3DTevBlock4CFv,
	(void*)getTevRegOffset__12J3DTevBlock4CFv,
	(void*)setTexNoOffset__11J3DTevBlockFUl,
	(void*)setTevRegOffset__12J3DTevBlock4FUl,
	(void*)__dt__12J3DTevBlock4Fv,
};
/* 803CE2A0-803CE37C 00DC .data      __vt__12J3DTevBlock2                                         VTableData */
SECTION_DATA void* __vt__12J3DTevBlock2[55] = {
	NULL, /* RTTI */
	NULL,
	(void*)reset__12J3DTevBlock2FP11J3DTevBlock,
	(void*)load__12J3DTevBlock2Fv,
	(void*)diff__11J3DTevBlockFUl,
	(void*)diffTexNo__12J3DTevBlock2Fv,
	(void*)diffTevReg__12J3DTevBlock2Fv,
	(void*)diffTexCoordScale__12J3DTevBlock2Fv,
	(void*)diffTevStage__12J3DTevBlock2Fv,
	(void*)diffTevStageIndirect__12J3DTevBlock2Fv,
	(void*)patch__12J3DTevBlock2Fv,
	(void*)patchTexNo__12J3DTevBlock2Fv,
	(void*)patchTevReg__12J3DTevBlock2Fv,
	(void*)patchTexNoAndTexCoordScale__12J3DTevBlock2Fv,
	(void*)ptrToIndex__12J3DTevBlock2Fv,
	(void*)indexToPtr__12J3DTevBlock2Fv,
	(void*)getType__12J3DTevBlock2Fv,
	(void*)countDLSize__12J3DTevBlock2Fv,
	(void*)setTexNo__12J3DTevBlock2FUlPCUs,
	(void*)setTexNo__12J3DTevBlock2FUlUs,
	(void*)getTexNo__12J3DTevBlock2CFUl,
	(void*)setTevOrder__12J3DTevBlock2FUlPC11J3DTevOrder,
	(void*)setTevOrder__12J3DTevBlock2FUl11J3DTevOrder,
	(void*)getTevOrder__12J3DTevBlock2FUl,
	(void*)setTevColor__12J3DTevBlock2FUlPC13J3DGXColorS10,
	(void*)setTevColor__12J3DTevBlock2FUl13J3DGXColorS10,
	(void*)getTevColor__12J3DTevBlock2FUl,
	(void*)setTevKColor__12J3DTevBlock2FUlPC10J3DGXColor,
	(void*)setTevKColor__12J3DTevBlock2FUl10J3DGXColor,
	(void*)getTevKColor__12J3DTevBlock2FUl,
	(void*)setTevKColorSel__12J3DTevBlock2FUlPCUc,
	(void*)setTevKColorSel__12J3DTevBlock2FUlUc,
	(void*)getTevKColorSel__12J3DTevBlock2FUl,
	(void*)setTevKAlphaSel__12J3DTevBlock2FUlPCUc,
	(void*)setTevKAlphaSel__12J3DTevBlock2FUlUc,
	(void*)getTevKAlphaSel__12J3DTevBlock2FUl,
	(void*)setTevStageNum__12J3DTevBlock2FPCUc,
	(void*)setTevStageNum__12J3DTevBlock2FUc,
	(void*)getTevStageNum__12J3DTevBlock2CFv,
	(void*)setTevStage__12J3DTevBlock2FUlPC11J3DTevStage,
	(void*)setTevStage__12J3DTevBlock2FUl11J3DTevStage,
	(void*)getTevStage__12J3DTevBlock2FUl,
	(void*)setTevSwapModeInfo__12J3DTevBlock2FUlPC18J3DTevSwapModeInfo,
	(void*)setTevSwapModeInfo__12J3DTevBlock2FUl18J3DTevSwapModeInfo,
	(void*)setTevSwapModeTable__12J3DTevBlock2FUlPC19J3DTevSwapModeTable,
	(void*)setTevSwapModeTable__12J3DTevBlock2FUl19J3DTevSwapModeTable,
	(void*)getTevSwapModeTable__12J3DTevBlock2FUl,
	(void*)setIndTevStage__12J3DTevBlock2FUlPC14J3DIndTevStage,
	(void*)setIndTevStage__12J3DTevBlock2FUl14J3DIndTevStage,
	(void*)getIndTevStage__12J3DTevBlock2FUl,
	(void*)getTexNoOffset__12J3DTevBlock2CFv,
	(void*)getTevRegOffset__12J3DTevBlock2CFv,
	(void*)setTexNoOffset__11J3DTevBlockFUl,
	(void*)setTevRegOffset__12J3DTevBlock2FUl,
	(void*)__dt__12J3DTevBlock2Fv,
};
/* 803CE37C-803CE458 00DC .data      __vt__12J3DTevBlock1                                         VTableData */
SECTION_DATA void* __vt__12J3DTevBlock1[55] = {
	NULL, /* RTTI */
	NULL,
	(void*)reset__12J3DTevBlock1FP11J3DTevBlock,
	(void*)load__12J3DTevBlock1Fv,
	(void*)diff__11J3DTevBlockFUl,
	(void*)diffTexNo__12J3DTevBlock1Fv,
	(void*)diffTevReg__12J3DTevBlock1Fv,
	(void*)diffTexCoordScale__12J3DTevBlock1Fv,
	(void*)diffTevStage__12J3DTevBlock1Fv,
	(void*)diffTevStageIndirect__12J3DTevBlock1Fv,
	(void*)patch__12J3DTevBlock1Fv,
	(void*)patchTexNo__12J3DTevBlock1Fv,
	(void*)patchTevReg__12J3DTevBlock1Fv,
	(void*)patchTexNoAndTexCoordScale__12J3DTevBlock1Fv,
	(void*)ptrToIndex__12J3DTevBlock1Fv,
	(void*)indexToPtr__12J3DTevBlock1Fv,
	(void*)getType__12J3DTevBlock1Fv,
	(void*)countDLSize__12J3DTevBlock1Fv,
	(void*)setTexNo__12J3DTevBlock1FUlPCUs,
	(void*)setTexNo__12J3DTevBlock1FUlUs,
	(void*)getTexNo__12J3DTevBlock1CFUl,
	(void*)setTevOrder__12J3DTevBlock1FUlPC11J3DTevOrder,
	(void*)setTevOrder__12J3DTevBlock1FUl11J3DTevOrder,
	(void*)getTevOrder__12J3DTevBlock1FUl,
	(void*)setTevColor__11J3DTevBlockFUlPC13J3DGXColorS10,
	(void*)setTevColor__11J3DTevBlockFUl13J3DGXColorS10,
	(void*)getTevColor__11J3DTevBlockFUl,
	(void*)setTevKColor__11J3DTevBlockFUlPC10J3DGXColor,
	(void*)setTevKColor__11J3DTevBlockFUl10J3DGXColor,
	(void*)getTevKColor__11J3DTevBlockFUl,
	(void*)setTevKColorSel__11J3DTevBlockFUlPCUc,
	(void*)setTevKColorSel__11J3DTevBlockFUlUc,
	(void*)getTevKColorSel__11J3DTevBlockFUl,
	(void*)setTevKAlphaSel__11J3DTevBlockFUlPCUc,
	(void*)setTevKAlphaSel__11J3DTevBlockFUlUc,
	(void*)getTevKAlphaSel__11J3DTevBlockFUl,
	(void*)setTevStageNum__12J3DTevBlock1FPCUc,
	(void*)setTevStageNum__12J3DTevBlock1FUc,
	(void*)getTevStageNum__12J3DTevBlock1CFv,
	(void*)setTevStage__12J3DTevBlock1FUlPC11J3DTevStage,
	(void*)setTevStage__12J3DTevBlock1FUl11J3DTevStage,
	(void*)getTevStage__12J3DTevBlock1FUl,
	(void*)setTevSwapModeInfo__11J3DTevBlockFUlPC18J3DTevSwapModeInfo,
	(void*)setTevSwapModeInfo__11J3DTevBlockFUl18J3DTevSwapModeInfo,
	(void*)setTevSwapModeTable__11J3DTevBlockFUlPC19J3DTevSwapModeTable,
	(void*)setTevSwapModeTable__11J3DTevBlockFUl19J3DTevSwapModeTable,
	(void*)getTevSwapModeTable__11J3DTevBlockFUl,
	(void*)setIndTevStage__12J3DTevBlock1FUlPC14J3DIndTevStage,
	(void*)setIndTevStage__12J3DTevBlock1FUl14J3DIndTevStage,
	(void*)getIndTevStage__12J3DTevBlock1FUl,
	(void*)getTexNoOffset__12J3DTevBlock1CFv,
	(void*)getTevRegOffset__11J3DTevBlockCFv,
	(void*)setTexNoOffset__11J3DTevBlockFUl,
	(void*)setTevRegOffset__11J3DTevBlockFUl,
	(void*)__dt__12J3DTevBlock1Fv,
};
/* 803CE458-803CE534 00DC .data      __vt__18J3DTevBlockPatched                                   VTableData */
SECTION_DATA void* __vt__18J3DTevBlockPatched[55] = {
	NULL, /* RTTI */
	NULL,
	(void*)reset__18J3DTevBlockPatchedFP11J3DTevBlock,
	(void*)load__18J3DTevBlockPatchedFv,
	(void*)diff__11J3DTevBlockFUl,
	(void*)diffTexNo__18J3DTevBlockPatchedFv,
	(void*)diffTevReg__18J3DTevBlockPatchedFv,
	(void*)diffTexCoordScale__18J3DTevBlockPatchedFv,
	(void*)diffTevStage__18J3DTevBlockPatchedFv,
	(void*)diffTevStageIndirect__18J3DTevBlockPatchedFv,
	(void*)patch__18J3DTevBlockPatchedFv,
	(void*)patchTexNo__18J3DTevBlockPatchedFv,
	(void*)patchTevReg__18J3DTevBlockPatchedFv,
	(void*)patchTexNoAndTexCoordScale__18J3DTevBlockPatchedFv,
	(void*)ptrToIndex__18J3DTevBlockPatchedFv,
	(void*)indexToPtr__18J3DTevBlockPatchedFv,
	(void*)getType__18J3DTevBlockPatchedFv,
	(void*)countDLSize__18J3DTevBlockPatchedFv,
	(void*)setTexNo__18J3DTevBlockPatchedFUlPCUs,
	(void*)setTexNo__18J3DTevBlockPatchedFUlUs,
	(void*)getTexNo__18J3DTevBlockPatchedCFUl,
	(void*)setTevOrder__18J3DTevBlockPatchedFUlPC11J3DTevOrder,
	(void*)setTevOrder__18J3DTevBlockPatchedFUl11J3DTevOrder,
	(void*)getTevOrder__18J3DTevBlockPatchedFUl,
	(void*)setTevColor__18J3DTevBlockPatchedFUlPC13J3DGXColorS10,
	(void*)setTevColor__18J3DTevBlockPatchedFUl13J3DGXColorS10,
	(void*)getTevColor__18J3DTevBlockPatchedFUl,
	(void*)setTevKColor__18J3DTevBlockPatchedFUlPC10J3DGXColor,
	(void*)setTevKColor__18J3DTevBlockPatchedFUl10J3DGXColor,
	(void*)getTevKColor__18J3DTevBlockPatchedFUl,
	(void*)setTevKColorSel__18J3DTevBlockPatchedFUlPCUc,
	(void*)setTevKColorSel__18J3DTevBlockPatchedFUlUc,
	(void*)getTevKColorSel__18J3DTevBlockPatchedFUl,
	(void*)setTevKAlphaSel__11J3DTevBlockFUlPCUc,
	(void*)setTevKAlphaSel__11J3DTevBlockFUlUc,
	(void*)getTevKAlphaSel__11J3DTevBlockFUl,
	(void*)setTevStageNum__18J3DTevBlockPatchedFPCUc,
	(void*)setTevStageNum__18J3DTevBlockPatchedFUc,
	(void*)getTevStageNum__18J3DTevBlockPatchedCFv,
	(void*)setTevStage__18J3DTevBlockPatchedFUlPC11J3DTevStage,
	(void*)setTevStage__18J3DTevBlockPatchedFUl11J3DTevStage,
	(void*)getTevStage__18J3DTevBlockPatchedFUl,
	(void*)setTevSwapModeInfo__11J3DTevBlockFUlPC18J3DTevSwapModeInfo,
	(void*)setTevSwapModeInfo__11J3DTevBlockFUl18J3DTevSwapModeInfo,
	(void*)setTevSwapModeTable__11J3DTevBlockFUlPC19J3DTevSwapModeTable,
	(void*)setTevSwapModeTable__11J3DTevBlockFUl19J3DTevSwapModeTable,
	(void*)getTevSwapModeTable__11J3DTevBlockFUl,
	(void*)setIndTevStage__18J3DTevBlockPatchedFUlPC14J3DIndTevStage,
	(void*)setIndTevStage__18J3DTevBlockPatchedFUl14J3DIndTevStage,
	(void*)getIndTevStage__18J3DTevBlockPatchedFUl,
	(void*)getTexNoOffset__18J3DTevBlockPatchedCFv,
	(void*)getTevRegOffset__18J3DTevBlockPatchedCFv,
	(void*)setTexNoOffset__11J3DTevBlockFUl,
	(void*)setTevRegOffset__18J3DTevBlockPatchedFUl,
	(void*)__dt__18J3DTevBlockPatchedFv,
};
/* 803CE534-803CE5A0 006C .data      __vt__19J3DTexGenBlockBasic                                  VTableData */
SECTION_DATA void* __vt__19J3DTexGenBlockBasic[27] = {
	NULL, /* RTTI */
	NULL,
	(void*)reset__19J3DTexGenBlockBasicFP14J3DTexGenBlock,
	(void*)calc__21J3DTexGenBlockPatchedFPA4_Cf,
	(void*)calcWithoutViewMtx__21J3DTexGenBlockPatchedFPA4_Cf,
	(void*)calcPostTexMtx__21J3DTexGenBlockPatchedFPA4_Cf,
	(void*)calcPostTexMtxWithoutViewMtx__21J3DTexGenBlockPatchedFPA4_Cf,
	(void*)load__19J3DTexGenBlockBasicFv,
	(void*)patch__19J3DTexGenBlockBasicFv,
	(void*)diff__21J3DTexGenBlockPatchedFUl,
	(void*)diffTexMtx__21J3DTexGenBlockPatchedFv,
	(void*)diffTexGen__21J3DTexGenBlockPatchedFv,
	(void*)countDLSize__19J3DTexGenBlockBasicFv,
	(void*)getType__19J3DTexGenBlockBasicFv,
	(void*)setTexGenNum__21J3DTexGenBlockPatchedFPCUl,
	(void*)setTexGenNum__21J3DTexGenBlockPatchedFUl,
	(void*)getTexGenNum__21J3DTexGenBlockPatchedCFv,
	(void*)setTexCoord__21J3DTexGenBlockPatchedFUlPC11J3DTexCoord,
	(void*)getTexCoord__21J3DTexGenBlockPatchedFUl,
	(void*)setTexMtx__21J3DTexGenBlockPatchedFUlP9J3DTexMtx,
	(void*)getTexMtx__21J3DTexGenBlockPatchedFUl,
	(void*)setNBTScale__19J3DTexGenBlockBasicFPC11J3DNBTScale,
	(void*)setNBTScale__19J3DTexGenBlockBasicF11J3DNBTScale,
	(void*)getNBTScale__19J3DTexGenBlockBasicFv,
	(void*)getTexMtxOffset__21J3DTexGenBlockPatchedCFv,
	(void*)setTexMtxOffset__21J3DTexGenBlockPatchedFUl,
	(void*)__dt__19J3DTexGenBlockBasicFv,
};
/* 803CE5A0-803CE60C 006C .data      __vt__15J3DTexGenBlock4                                      VTableData */
SECTION_DATA void* __vt__15J3DTexGenBlock4[27] = {
	NULL, /* RTTI */
	NULL,
	(void*)reset__15J3DTexGenBlock4FP14J3DTexGenBlock,
	(void*)calc__21J3DTexGenBlockPatchedFPA4_Cf,
	(void*)calcWithoutViewMtx__21J3DTexGenBlockPatchedFPA4_Cf,
	(void*)calcPostTexMtx__21J3DTexGenBlockPatchedFPA4_Cf,
	(void*)calcPostTexMtxWithoutViewMtx__21J3DTexGenBlockPatchedFPA4_Cf,
	(void*)load__15J3DTexGenBlock4Fv,
	(void*)patch__15J3DTexGenBlock4Fv,
	(void*)diff__21J3DTexGenBlockPatchedFUl,
	(void*)diffTexMtx__21J3DTexGenBlockPatchedFv,
	(void*)diffTexGen__21J3DTexGenBlockPatchedFv,
	(void*)countDLSize__15J3DTexGenBlock4Fv,
	(void*)getType__15J3DTexGenBlock4Fv,
	(void*)setTexGenNum__21J3DTexGenBlockPatchedFPCUl,
	(void*)setTexGenNum__21J3DTexGenBlockPatchedFUl,
	(void*)getTexGenNum__21J3DTexGenBlockPatchedCFv,
	(void*)setTexCoord__21J3DTexGenBlockPatchedFUlPC11J3DTexCoord,
	(void*)getTexCoord__21J3DTexGenBlockPatchedFUl,
	(void*)setTexMtx__21J3DTexGenBlockPatchedFUlP9J3DTexMtx,
	(void*)getTexMtx__21J3DTexGenBlockPatchedFUl,
	(void*)setNBTScale__15J3DTexGenBlock4FPC11J3DNBTScale,
	(void*)setNBTScale__15J3DTexGenBlock4F11J3DNBTScale,
	(void*)getNBTScale__15J3DTexGenBlock4Fv,
	(void*)getTexMtxOffset__21J3DTexGenBlockPatchedCFv,
	(void*)setTexMtxOffset__21J3DTexGenBlockPatchedFUl,
	(void*)__dt__15J3DTexGenBlock4Fv,
};
/* 803CE60C-803CE678 006C .data      __vt__21J3DTexGenBlockPatched                                VTableData */
SECTION_DATA void* __vt__21J3DTexGenBlockPatched[27] = {
	NULL, /* RTTI */
	NULL,
	(void*)reset__21J3DTexGenBlockPatchedFP14J3DTexGenBlock,
	(void*)calc__21J3DTexGenBlockPatchedFPA4_Cf,
	(void*)calcWithoutViewMtx__21J3DTexGenBlockPatchedFPA4_Cf,
	(void*)calcPostTexMtx__21J3DTexGenBlockPatchedFPA4_Cf,
	(void*)calcPostTexMtxWithoutViewMtx__21J3DTexGenBlockPatchedFPA4_Cf,
	(void*)load__21J3DTexGenBlockPatchedFv,
	(void*)patch__21J3DTexGenBlockPatchedFv,
	(void*)diff__21J3DTexGenBlockPatchedFUl,
	(void*)diffTexMtx__21J3DTexGenBlockPatchedFv,
	(void*)diffTexGen__21J3DTexGenBlockPatchedFv,
	(void*)countDLSize__21J3DTexGenBlockPatchedFv,
	(void*)getType__21J3DTexGenBlockPatchedFv,
	(void*)setTexGenNum__21J3DTexGenBlockPatchedFPCUl,
	(void*)setTexGenNum__21J3DTexGenBlockPatchedFUl,
	(void*)getTexGenNum__21J3DTexGenBlockPatchedCFv,
	(void*)setTexCoord__21J3DTexGenBlockPatchedFUlPC11J3DTexCoord,
	(void*)getTexCoord__21J3DTexGenBlockPatchedFUl,
	(void*)setTexMtx__21J3DTexGenBlockPatchedFUlP9J3DTexMtx,
	(void*)getTexMtx__21J3DTexGenBlockPatchedFUl,
	(void*)setNBTScale__14J3DTexGenBlockFPC11J3DNBTScale,
	(void*)setNBTScale__14J3DTexGenBlockF11J3DNBTScale,
	(void*)getNBTScale__14J3DTexGenBlockFv,
	(void*)getTexMtxOffset__21J3DTexGenBlockPatchedCFv,
	(void*)setTexMtxOffset__21J3DTexGenBlockPatchedFUl,
	(void*)__dt__21J3DTexGenBlockPatchedFv,
};
/* 803CE678-803CE708 0090 .data      __vt__20J3DColorBlockLightOn                                 VTableData */
SECTION_DATA void* __vt__20J3DColorBlockLightOn[36] = {
	NULL, /* RTTI */
	NULL,
	(void*)load__20J3DColorBlockLightOnFv,
	(void*)reset__20J3DColorBlockLightOnFP13J3DColorBlock,
	(void*)patch__20J3DColorBlockLightOnFv,
	(void*)patchMatColor__20J3DColorBlockLightOnFv,
	(void*)patchLight__20J3DColorBlockLightOnFv,
	(void*)diff__20J3DColorBlockLightOnFUl,
	(void*)diffAmbColor__20J3DColorBlockLightOnFv,
	(void*)diffMatColor__20J3DColorBlockLightOnFv,
	(void*)diffColorChan__20J3DColorBlockLightOnFv,
	(void*)diffLightObj__20J3DColorBlockLightOnFUl,
	(void*)countDLSize__20J3DColorBlockLightOnFv,
	(void*)getType__20J3DColorBlockLightOnFv,
	(void*)setMatColor__20J3DColorBlockLightOnFUlPC10J3DGXColor,
	(void*)setMatColor__20J3DColorBlockLightOnFUl10J3DGXColor,
	(void*)getMatColor__20J3DColorBlockLightOnFUl,
	(void*)setAmbColor__20J3DColorBlockLightOnFUlPC10J3DGXColor,
	(void*)setAmbColor__20J3DColorBlockLightOnFUl10J3DGXColor,
	(void*)getAmbColor__20J3DColorBlockLightOnFUl,
	(void*)setColorChanNum__20J3DColorBlockLightOnFUc,
	(void*)setColorChanNum__20J3DColorBlockLightOnFPCUc,
	(void*)getColorChanNum__20J3DColorBlockLightOnCFv,
	(void*)setColorChan__20J3DColorBlockLightOnFUlRC12J3DColorChan,
	(void*)setColorChan__20J3DColorBlockLightOnFUlPC12J3DColorChan,
	(void*)getColorChan__20J3DColorBlockLightOnFUl,
	(void*)setLight__20J3DColorBlockLightOnFUlP11J3DLightObj,
	(void*)getLight__20J3DColorBlockLightOnFUl,
	(void*)setCullMode__20J3DColorBlockLightOnFPCUc,
	(void*)setCullMode__20J3DColorBlockLightOnFUc,
	(void*)getCullMode__20J3DColorBlockLightOnCFv,
	(void*)getMatColorOffset__20J3DColorBlockLightOnCFv,
	(void*)getColorChanOffset__20J3DColorBlockLightOnCFv,
	(void*)setMatColorOffset__20J3DColorBlockLightOnFUl,
	(void*)setColorChanOffset__20J3DColorBlockLightOnFUl,
	(void*)__dt__20J3DColorBlockLightOnFv,
};
/* 803CE708-803CE798 0090 .data      __vt__22J3DColorBlockAmbientOn                               VTableData */
SECTION_DATA void* __vt__22J3DColorBlockAmbientOn[36] = {
	NULL, /* RTTI */
	NULL,
	(void*)load__22J3DColorBlockAmbientOnFv,
	(void*)reset__22J3DColorBlockAmbientOnFP13J3DColorBlock,
	(void*)patch__21J3DColorBlockLightOffFv,
	(void*)patchMatColor__21J3DColorBlockLightOffFv,
	(void*)patchLight__21J3DColorBlockLightOffFv,
	(void*)diff__21J3DColorBlockLightOffFUl,
	(void*)diffAmbColor__13J3DColorBlockFv,
	(void*)diffMatColor__21J3DColorBlockLightOffFv,
	(void*)diffColorChan__21J3DColorBlockLightOffFv,
	(void*)diffLightObj__13J3DColorBlockFUl,
	(void*)countDLSize__22J3DColorBlockAmbientOnFv,
	(void*)getType__22J3DColorBlockAmbientOnFv,
	(void*)setMatColor__21J3DColorBlockLightOffFUlPC10J3DGXColor,
	(void*)setMatColor__21J3DColorBlockLightOffFUl10J3DGXColor,
	(void*)getMatColor__21J3DColorBlockLightOffFUl,
	(void*)setAmbColor__22J3DColorBlockAmbientOnFUlPC10J3DGXColor,
	(void*)setAmbColor__22J3DColorBlockAmbientOnFUl10J3DGXColor,
	(void*)getAmbColor__22J3DColorBlockAmbientOnFUl,
	(void*)setColorChanNum__21J3DColorBlockLightOffFUc,
	(void*)setColorChanNum__21J3DColorBlockLightOffFPCUc,
	(void*)getColorChanNum__21J3DColorBlockLightOffCFv,
	(void*)setColorChan__21J3DColorBlockLightOffFUlRC12J3DColorChan,
	(void*)setColorChan__21J3DColorBlockLightOffFUlPC12J3DColorChan,
	(void*)getColorChan__21J3DColorBlockLightOffFUl,
	(void*)setLight__13J3DColorBlockFUlP11J3DLightObj,
	(void*)getLight__13J3DColorBlockFUl,
	(void*)setCullMode__21J3DColorBlockLightOffFPCUc,
	(void*)setCullMode__21J3DColorBlockLightOffFUc,
	(void*)getCullMode__21J3DColorBlockLightOffCFv,
	(void*)getMatColorOffset__21J3DColorBlockLightOffCFv,
	(void*)getColorChanOffset__21J3DColorBlockLightOffCFv,
	(void*)setMatColorOffset__21J3DColorBlockLightOffFUl,
	(void*)setColorChanOffset__21J3DColorBlockLightOffFUl,
	(void*)__dt__22J3DColorBlockAmbientOnFv,
};
/* 803CE798-803CE814 007C .data      __vt__13J3DPEBlockXlu                                        VTableData */
SECTION_DATA void* __vt__13J3DPEBlockXlu[31] = {
	NULL, /* RTTI */
	NULL,
	(void*)reset__10J3DPEBlockFP10J3DPEBlock,
	(void*)load__13J3DPEBlockXluFv,
	(void*)patch__10J3DPEBlockFv,
	(void*)diff__10J3DPEBlockFUl,
	(void*)diffFog__10J3DPEBlockFv,
	(void*)diffBlend__10J3DPEBlockFv,
	(void*)countDLSize__13J3DPEBlockXluFv,
	(void*)getType__13J3DPEBlockXluFv,
	(void*)setFog__10J3DPEBlockF6J3DFog,
	(void*)setFog__10J3DPEBlockFP6J3DFog,
	(void*)getFog__10J3DPEBlockFv,
	(void*)setAlphaComp__10J3DPEBlockFPC12J3DAlphaComp,
	(void*)setAlphaComp__10J3DPEBlockFRC12J3DAlphaComp,
	(void*)getAlphaComp__10J3DPEBlockFv,
	(void*)setBlend__10J3DPEBlockFPC8J3DBlend,
	(void*)setBlend__10J3DPEBlockFRC8J3DBlend,
	(void*)getBlend__10J3DPEBlockFv,
	(void*)setZMode__10J3DPEBlockFPC8J3DZMode,
	(void*)setZMode__10J3DPEBlockF8J3DZMode,
	(void*)getZMode__10J3DPEBlockFv,
	(void*)setZCompLoc__10J3DPEBlockFPCUc,
	(void*)setZCompLoc__10J3DPEBlockFUc,
	(void*)getZCompLoc__10J3DPEBlockCFv,
	(void*)setDither__10J3DPEBlockFPCUc,
	(void*)setDither__10J3DPEBlockFUc,
	(void*)getDither__10J3DPEBlockCFv,
	(void*)getFogOffset__10J3DPEBlockCFv,
	(void*)setFogOffset__10J3DPEBlockFUl,
	(void*)__dt__13J3DPEBlockXluFv,
};
/* 803CE814-803CE890 007C .data      __vt__17J3DPEBlockTexEdge                                    VTableData */
SECTION_DATA void* __vt__17J3DPEBlockTexEdge[31] = {
	NULL, /* RTTI */
	NULL,
	(void*)reset__10J3DPEBlockFP10J3DPEBlock,
	(void*)load__17J3DPEBlockTexEdgeFv,
	(void*)patch__10J3DPEBlockFv,
	(void*)diff__10J3DPEBlockFUl,
	(void*)diffFog__10J3DPEBlockFv,
	(void*)diffBlend__10J3DPEBlockFv,
	(void*)countDLSize__17J3DPEBlockTexEdgeFv,
	(void*)getType__17J3DPEBlockTexEdgeFv,
	(void*)setFog__10J3DPEBlockF6J3DFog,
	(void*)setFog__10J3DPEBlockFP6J3DFog,
	(void*)getFog__10J3DPEBlockFv,
	(void*)setAlphaComp__10J3DPEBlockFPC12J3DAlphaComp,
	(void*)setAlphaComp__10J3DPEBlockFRC12J3DAlphaComp,
	(void*)getAlphaComp__10J3DPEBlockFv,
	(void*)setBlend__10J3DPEBlockFPC8J3DBlend,
	(void*)setBlend__10J3DPEBlockFRC8J3DBlend,
	(void*)getBlend__10J3DPEBlockFv,
	(void*)setZMode__10J3DPEBlockFPC8J3DZMode,
	(void*)setZMode__10J3DPEBlockF8J3DZMode,
	(void*)getZMode__10J3DPEBlockFv,
	(void*)setZCompLoc__10J3DPEBlockFPCUc,
	(void*)setZCompLoc__10J3DPEBlockFUc,
	(void*)getZCompLoc__10J3DPEBlockCFv,
	(void*)setDither__10J3DPEBlockFPCUc,
	(void*)setDither__10J3DPEBlockFUc,
	(void*)getDither__10J3DPEBlockCFv,
	(void*)getFogOffset__10J3DPEBlockCFv,
	(void*)setFogOffset__10J3DPEBlockFUl,
	(void*)__dt__17J3DPEBlockTexEdgeFv,
};
/* 803CE890-803CE90C 007C .data      __vt__13J3DPEBlockOpa                                        VTableData */
SECTION_DATA void* __vt__13J3DPEBlockOpa[31] = {
	NULL, /* RTTI */
	NULL,
	(void*)reset__10J3DPEBlockFP10J3DPEBlock,
	(void*)load__13J3DPEBlockOpaFv,
	(void*)patch__10J3DPEBlockFv,
	(void*)diff__10J3DPEBlockFUl,
	(void*)diffFog__10J3DPEBlockFv,
	(void*)diffBlend__10J3DPEBlockFv,
	(void*)countDLSize__13J3DPEBlockOpaFv,
	(void*)getType__13J3DPEBlockOpaFv,
	(void*)setFog__10J3DPEBlockF6J3DFog,
	(void*)setFog__10J3DPEBlockFP6J3DFog,
	(void*)getFog__10J3DPEBlockFv,
	(void*)setAlphaComp__10J3DPEBlockFPC12J3DAlphaComp,
	(void*)setAlphaComp__10J3DPEBlockFRC12J3DAlphaComp,
	(void*)getAlphaComp__10J3DPEBlockFv,
	(void*)setBlend__10J3DPEBlockFPC8J3DBlend,
	(void*)setBlend__10J3DPEBlockFRC8J3DBlend,
	(void*)getBlend__10J3DPEBlockFv,
	(void*)setZMode__10J3DPEBlockFPC8J3DZMode,
	(void*)setZMode__10J3DPEBlockF8J3DZMode,
	(void*)getZMode__10J3DPEBlockFv,
	(void*)setZCompLoc__10J3DPEBlockFPCUc,
	(void*)setZCompLoc__10J3DPEBlockFUc,
	(void*)getZCompLoc__10J3DPEBlockCFv,
	(void*)setDither__10J3DPEBlockFPCUc,
	(void*)setDither__10J3DPEBlockFUc,
	(void*)getDither__10J3DPEBlockCFv,
	(void*)getFogOffset__10J3DPEBlockCFv,
	(void*)setFogOffset__10J3DPEBlockFUl,
	(void*)__dt__13J3DPEBlockOpaFv,
};
/* 803CE90C-803CE958 004C .data      __vt__15J3DIndBlockFull                                      VTableData */
SECTION_DATA void* __vt__15J3DIndBlockFull[19] = {
	NULL, /* RTTI */
	NULL,
	(void*)reset__15J3DIndBlockFullFP11J3DIndBlock,
	(void*)diff__15J3DIndBlockFullFUl,
	(void*)load__15J3DIndBlockFullFv,
	(void*)countDLSize__15J3DIndBlockFullFv,
	(void*)getType__15J3DIndBlockFullFv,
	(void*)setIndTexStageNum__15J3DIndBlockFullFUc,
	(void*)getIndTexStageNum__15J3DIndBlockFullCFv,
	(void*)setIndTexOrder__15J3DIndBlockFullFUl14J3DIndTexOrder,
	(void*)setIndTexOrder__15J3DIndBlockFullFUlPC14J3DIndTexOrder,
	(void*)getIndTexOrder__15J3DIndBlockFullFUl,
	(void*)setIndTexMtx__15J3DIndBlockFullFUlPC12J3DIndTexMtx,
	(void*)setIndTexMtx__15J3DIndBlockFullFUl12J3DIndTexMtx,
	(void*)getIndTexMtx__15J3DIndBlockFullFUl,
	(void*)setIndTexCoordScale__15J3DIndBlockFullFUlPC19J3DIndTexCoordScale,
	(void*)setIndTexCoordScale__15J3DIndBlockFullFUl19J3DIndTexCoordScale,
	(void*)getIndTexCoordScale__15J3DIndBlockFullFUl,
	(void*)__dt__15J3DIndBlockFullFv,
};
/* 803CE958-803CEA34 00DC .data      __vt__11J3DTevBlock                                          VTableData */
SECTION_DATA void* __vt__11J3DTevBlock[55] = {
	NULL, /* RTTI */
	NULL,
	(void*)reset__11J3DTevBlockFP11J3DTevBlock,
	(void*)load__11J3DTevBlockFv,
	(void*)diff__11J3DTevBlockFUl,
	(void*)diffTexNo__11J3DTevBlockFv,
	(void*)diffTevReg__11J3DTevBlockFv,
	(void*)diffTexCoordScale__11J3DTevBlockFv,
	(void*)diffTevStage__11J3DTevBlockFv,
	(void*)diffTevStageIndirect__11J3DTevBlockFv,
	(void*)patch__11J3DTevBlockFv,
	(void*)patchTexNo__11J3DTevBlockFv,
	(void*)patchTevReg__11J3DTevBlockFv,
	(void*)patchTexNoAndTexCoordScale__11J3DTevBlockFv,
	NULL,
	NULL,
	NULL,
	(void*)countDLSize__11J3DTevBlockFv,
	(void*)setTexNo__11J3DTevBlockFUlPCUs,
	(void*)setTexNo__11J3DTevBlockFUlUs,
	(void*)getTexNo__11J3DTevBlockCFUl,
	(void*)setTevOrder__11J3DTevBlockFUlPC11J3DTevOrder,
	(void*)setTevOrder__11J3DTevBlockFUl11J3DTevOrder,
	(void*)getTevOrder__11J3DTevBlockFUl,
	(void*)setTevColor__11J3DTevBlockFUlPC13J3DGXColorS10,
	(void*)setTevColor__11J3DTevBlockFUl13J3DGXColorS10,
	(void*)getTevColor__11J3DTevBlockFUl,
	(void*)setTevKColor__11J3DTevBlockFUlPC10J3DGXColor,
	(void*)setTevKColor__11J3DTevBlockFUl10J3DGXColor,
	(void*)getTevKColor__11J3DTevBlockFUl,
	(void*)setTevKColorSel__11J3DTevBlockFUlPCUc,
	(void*)setTevKColorSel__11J3DTevBlockFUlUc,
	(void*)getTevKColorSel__11J3DTevBlockFUl,
	(void*)setTevKAlphaSel__11J3DTevBlockFUlPCUc,
	(void*)setTevKAlphaSel__11J3DTevBlockFUlUc,
	(void*)getTevKAlphaSel__11J3DTevBlockFUl,
	(void*)setTevStageNum__11J3DTevBlockFPCUc,
	(void*)setTevStageNum__11J3DTevBlockFUc,
	(void*)getTevStageNum__11J3DTevBlockCFv,
	(void*)setTevStage__11J3DTevBlockFUlPC11J3DTevStage,
	(void*)setTevStage__11J3DTevBlockFUl11J3DTevStage,
	(void*)getTevStage__11J3DTevBlockFUl,
	(void*)setTevSwapModeInfo__11J3DTevBlockFUlPC18J3DTevSwapModeInfo,
	(void*)setTevSwapModeInfo__11J3DTevBlockFUl18J3DTevSwapModeInfo,
	(void*)setTevSwapModeTable__11J3DTevBlockFUlPC19J3DTevSwapModeTable,
	(void*)setTevSwapModeTable__11J3DTevBlockFUl19J3DTevSwapModeTable,
	(void*)getTevSwapModeTable__11J3DTevBlockFUl,
	(void*)setIndTevStage__11J3DTevBlockFUlPC14J3DIndTevStage,
	(void*)setIndTevStage__11J3DTevBlockFUl14J3DIndTevStage,
	(void*)getIndTevStage__11J3DTevBlockFUl,
	(void*)getTexNoOffset__11J3DTevBlockCFv,
	(void*)getTevRegOffset__11J3DTevBlockCFv,
	(void*)setTexNoOffset__11J3DTevBlockFUl,
	(void*)setTevRegOffset__11J3DTevBlockFUl,
	(void*)__dt__11J3DTevBlockFv,
};
/* 803CEA34-803CEAC8 0090 .data      __vt__21J3DColorBlockLightOff                                VTableData */
SECTION_DATA void* __vt__21J3DColorBlockLightOff[37] = {
	NULL, /* RTTI */
	NULL,
	(void*)load__21J3DColorBlockLightOffFv,
	(void*)reset__21J3DColorBlockLightOffFP13J3DColorBlock,
	(void*)patch__21J3DColorBlockLightOffFv,
	(void*)patchMatColor__21J3DColorBlockLightOffFv,
	(void*)patchLight__21J3DColorBlockLightOffFv,
	(void*)diff__21J3DColorBlockLightOffFUl,
	(void*)diffAmbColor__13J3DColorBlockFv,
	(void*)diffMatColor__21J3DColorBlockLightOffFv,
	(void*)diffColorChan__21J3DColorBlockLightOffFv,
	(void*)diffLightObj__13J3DColorBlockFUl,
	(void*)countDLSize__21J3DColorBlockLightOffFv,
	(void*)getType__21J3DColorBlockLightOffFv,
	(void*)setMatColor__21J3DColorBlockLightOffFUlPC10J3DGXColor,
	(void*)setMatColor__21J3DColorBlockLightOffFUl10J3DGXColor,
	(void*)getMatColor__21J3DColorBlockLightOffFUl,
	(void*)setAmbColor__13J3DColorBlockFUlPC10J3DGXColor,
	(void*)setAmbColor__13J3DColorBlockFUl10J3DGXColor,
	(void*)getAmbColor__13J3DColorBlockFUl,
	(void*)setColorChanNum__21J3DColorBlockLightOffFUc,
	(void*)setColorChanNum__21J3DColorBlockLightOffFPCUc,
	(void*)getColorChanNum__21J3DColorBlockLightOffCFv,
	(void*)setColorChan__21J3DColorBlockLightOffFUlRC12J3DColorChan,
	(void*)setColorChan__21J3DColorBlockLightOffFUlPC12J3DColorChan,
	(void*)getColorChan__21J3DColorBlockLightOffFUl,
	(void*)setLight__13J3DColorBlockFUlP11J3DLightObj,
	(void*)getLight__13J3DColorBlockFUl,
	(void*)setCullMode__21J3DColorBlockLightOffFPCUc,
	(void*)setCullMode__21J3DColorBlockLightOffFUc,
	(void*)getCullMode__21J3DColorBlockLightOffCFv,
	(void*)getMatColorOffset__21J3DColorBlockLightOffCFv,
	(void*)getColorChanOffset__21J3DColorBlockLightOffCFv,
	(void*)setMatColorOffset__21J3DColorBlockLightOffFUl,
	(void*)setColorChanOffset__21J3DColorBlockLightOffFUl,
	(void*)__dt__21J3DColorBlockLightOffFv,
	/* padding */
	NULL,
};
}


/* ###################################################################################### */
/*                                         .sdata                                         */
/* ###################################################################################### */

extern "C" {
/* 80450960-80450964 0004 .sdata     SizeOfLoadMatColors                                          InitializedData */
SECTION_SDATA u8 SizeOfLoadMatColors[4] = {
	0x00, 0x00, 0x00, 0x0D,
};
/* 80450964-80450968 0004 .sdata     SizeOfLoadAmbColors                                          InitializedData */
SECTION_SDATA u8 SizeOfLoadAmbColors[4] = {
	0x00, 0x00, 0x00, 0x0D,
};
/* 80450968-80450970 0004 .sdata     SizeOfLoadColorChans                                         InitializedData */
SECTION_SDATA u8 SizeOfLoadColorChans[8] = {
	0x00, 0x00, 0x00, 0x15,
	/* padding */
	0x00, 0x00, 0x00, 0x00,
};
}


/* ###################################################################################### */
/*                                        .sdata2                                         */
/* ###################################################################################### */

extern "C" {
/* 804563A8-804563AC 0004 .sdata2    @585                                                         InitializedData */
SECTION_SDATA2 u8 LIT_585[4] = {
	0x02, 0x00, 0x02, 0x01,
};
/* 804563AC-804563B0 0004 .sdata2    @5060                                                        InitializedData */
SECTION_SDATA2 u8 J3DMatBlock__LIT_5060[4] = {
	0x00, 0x00, 0x00, 0x00,
};
}


/* ###################################################################################### */
/*                                         .sbss                                          */
/* ###################################################################################### */

extern "C" {
/* 804515D8-804515DC 0004 .sbss      SizeOfJ3DColorBlockLightOffLoad                              ZeroInitializedData */
SECTION_SBSS u8 SizeOfJ3DColorBlockLightOffLoad[4];
/* 804515DC-804515E0 0004 .sbss      SizeOfJ3DColorBlockAmbientOnLoad                             ZeroInitializedData */
SECTION_SBSS u8 SizeOfJ3DColorBlockAmbientOnLoad[4];
}


/* ###################################################################################### */
/*                                         .text                                          */
/* ###################################################################################### */

extern "C" {
/* 8031747C-803174DC 0060 .text      initialize__21J3DColorBlockLightOffFv                        Function */
// J3DColorBlockLightOff::initialize(void)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void initialize__21J3DColorBlockLightOffFv() {
	nofralloc
#include "_include/J3DGraphBase/J3DMatBlock/initialize__21J3DColorBlockLightOffFv.s"
}
#pragma pop

/* 803174DC-80317580 00A4 .text      initialize__22J3DColorBlockAmbientOnFv                       Function */
// J3DColorBlockAmbientOn::initialize(void)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void initialize__22J3DColorBlockAmbientOnFv() {
	nofralloc
#include "_include/J3DGraphBase/J3DMatBlock/initialize__22J3DColorBlockAmbientOnFv.s"
}
#pragma pop

/* 80317580-80317644 00C4 .text      initialize__20J3DColorBlockLightOnFv                         Function */
// J3DColorBlockLightOn::initialize(void)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void initialize__20J3DColorBlockLightOnFv() {
	nofralloc
#include "_include/J3DGraphBase/J3DMatBlock/initialize__20J3DColorBlockLightOnFv.s"
}
#pragma pop

/* 80317644-80317674 0030 .text      initialize__21J3DTexGenBlockPatchedFv                        Function */
// J3DTexGenBlockPatched::initialize(void)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void initialize__21J3DTexGenBlockPatchedFv() {
	nofralloc
#include "_include/J3DGraphBase/J3DMatBlock/initialize__21J3DTexGenBlockPatchedFv.s"
}
#pragma pop

/* 80317674-803176A4 0030 .text      initialize__15J3DTexGenBlock4Fv                              Function */
// J3DTexGenBlock4::initialize(void)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void initialize__15J3DTexGenBlock4Fv() {
	nofralloc
#include "_include/J3DGraphBase/J3DMatBlock/initialize__15J3DTexGenBlock4Fv.s"
}
#pragma pop

/* 803176A4-803176D4 0030 .text      initialize__19J3DTexGenBlockBasicFv                          Function */
// J3DTexGenBlockBasic::initialize(void)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void initialize__19J3DTexGenBlockBasicFv() {
	nofralloc
#include "_include/J3DGraphBase/J3DMatBlock/initialize__19J3DTexGenBlockBasicFv.s"
}
#pragma pop

/* 803176D4-803176E0 000C .text      initialize__15J3DTevBlockNullFv                              Function */
// J3DTevBlockNull::initialize(void)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void initialize__15J3DTevBlockNullFv() {
	nofralloc
#include "_include/J3DGraphBase/J3DMatBlock/initialize__15J3DTevBlockNullFv.s"
}
#pragma pop

/* 803176E0-803177E8 0108 .text      initialize__18J3DTevBlockPatchedFv                           Function */
// J3DTevBlockPatched::initialize(void)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void initialize__18J3DTevBlockPatchedFv() {
	nofralloc
#include "_include/J3DGraphBase/J3DMatBlock/initialize__18J3DTevBlockPatchedFv.s"
}
#pragma pop

/* 803177E8-80317810 0028 .text      initialize__12J3DTevBlock1Fv                                 Function */
// J3DTevBlock1::initialize(void)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void initialize__12J3DTevBlock1Fv() {
	nofralloc
#include "_include/J3DGraphBase/J3DMatBlock/initialize__12J3DTevBlock1Fv.s"
}
#pragma pop

/* 80317810-803178EC 00DC .text      initialize__12J3DTevBlock2Fv                                 Function */
// J3DTevBlock2::initialize(void)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void initialize__12J3DTevBlock2Fv() {
	nofralloc
#include "_include/J3DGraphBase/J3DMatBlock/initialize__12J3DTevBlock2Fv.s"
}
#pragma pop

/* 803178EC-80317A00 0114 .text      initialize__12J3DTevBlock4Fv                                 Function */
// J3DTevBlock4::initialize(void)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void initialize__12J3DTevBlock4Fv() {
	nofralloc
#include "_include/J3DGraphBase/J3DMatBlock/initialize__12J3DTevBlock4Fv.s"
}
#pragma pop

/* 80317A00-80317B28 0128 .text      initialize__13J3DTevBlock16Fv                                Function */
// J3DTevBlock16::initialize(void)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void initialize__13J3DTevBlock16Fv() {
	nofralloc
#include "_include/J3DGraphBase/J3DMatBlock/initialize__13J3DTevBlock16Fv.s"
}
#pragma pop

/* 80317B28-80317B34 000C .text      initialize__15J3DIndBlockFullFv                              Function */
// J3DIndBlockFull::initialize(void)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void initialize__15J3DIndBlockFullFv() {
	nofralloc
#include "_include/J3DGraphBase/J3DMatBlock/initialize__15J3DIndBlockFullFv.s"
}
#pragma pop

/* 80317B34-80317B58 0024 .text      initialize__16J3DPEBlockFogOffFv                             Function */
// J3DPEBlockFogOff::initialize(void)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void initialize__16J3DPEBlockFogOffFv() {
	nofralloc
#include "_include/J3DGraphBase/J3DMatBlock/initialize__16J3DPEBlockFogOffFv.s"
}
#pragma pop

/* 80317B58-80317B84 002C .text      initialize__14J3DPEBlockFullFv                               Function */
// J3DPEBlockFull::initialize(void)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void initialize__14J3DPEBlockFullFv() {
	nofralloc
#include "_include/J3DGraphBase/J3DMatBlock/initialize__14J3DPEBlockFullFv.s"
}
#pragma pop

/* 80317B84-80317B8C 0008 .text      countDLSize__21J3DColorBlockLightOffFv                       ReturnIntegerFunction */
// J3DColorBlockLightOff::countDLSize(void)
int countDLSize__21J3DColorBlockLightOffFv() {
	return 34;
}

/* 80317B8C-80317B94 0008 .text      countDLSize__22J3DColorBlockAmbientOnFv                      ReturnIntegerFunction */
// J3DColorBlockAmbientOn::countDLSize(void)
int countDLSize__22J3DColorBlockAmbientOnFv() {
	return 47;
}

/* 80317B94-80317B9C 0008 .text      countDLSize__20J3DColorBlockLightOnFv                        ReturnIntegerFunction */
// J3DColorBlockLightOn::countDLSize(void)
int countDLSize__20J3DColorBlockLightOnFv() {
	return 623;
}

/* 80317B9C-80317BA4 0008 .text      countDLSize__21J3DTexGenBlockPatchedFv                       ReturnIntegerFunction */
// J3DTexGenBlockPatched::countDLSize(void)
int countDLSize__21J3DTexGenBlockPatchedFv() {
	return 424;
}

/* 80317BA4-80317BAC 0008 .text      countDLSize__15J3DTexGenBlock4Fv                             ReturnIntegerFunction */
// J3DTexGenBlock4::countDLSize(void)
int countDLSize__15J3DTexGenBlock4Fv() {
	return 254;
}

/* 80317BAC-80317BB4 0008 .text      countDLSize__19J3DTexGenBlockBasicFv                         ReturnIntegerFunction */
// J3DTexGenBlockBasic::countDLSize(void)
int countDLSize__19J3DTexGenBlockBasicFv() {
	return 498;
}

/* 80317BB4-80317BBC 0008 .text      countDLSize__18J3DTevBlockPatchedFv                          ReturnIntegerFunction */
// J3DTevBlockPatched::countDLSize(void)
int countDLSize__18J3DTevBlockPatchedFv() {
	return 560;
}

/* 80317BBC-80317BC4 0008 .text      countDLSize__12J3DTevBlock1Fv                                ReturnIntegerFunction */
// J3DTevBlock1::countDLSize(void)
int countDLSize__12J3DTevBlock1Fv() {
	return 105;
}

/* 80317BC4-80317BCC 0008 .text      countDLSize__12J3DTevBlock2Fv                                ReturnIntegerFunction */
// J3DTevBlock2::countDLSize(void)
int countDLSize__12J3DTevBlock2Fv() {
	return 335;
}

/* 80317BCC-80317BD4 0008 .text      countDLSize__12J3DTevBlock4Fv                                ReturnIntegerFunction */
// J3DTevBlock4::countDLSize(void)
int countDLSize__12J3DTevBlock4Fv() {
	return 580;
}

/* 80317BD4-80317BDC 0008 .text      countDLSize__13J3DTevBlock16Fv                               ReturnIntegerFunction */
// J3DTevBlock16::countDLSize(void)
int countDLSize__13J3DTevBlock16Fv() {
	return 1000;
}

/* 80317BDC-80317BE4 0008 .text      countDLSize__15J3DIndBlockFullFv                             ReturnIntegerFunction */
// J3DIndBlockFull::countDLSize(void)
int countDLSize__15J3DIndBlockFullFv() {
	return 140;
}

/* 80317BE4-80317BEC 0008 .text      countDLSize__13J3DPEBlockOpaFv                               ReturnIntegerFunction */
// J3DPEBlockOpa::countDLSize(void)
int countDLSize__13J3DPEBlockOpaFv() {
	return 30;
}

/* 80317BEC-80317BF4 0008 .text      countDLSize__17J3DPEBlockTexEdgeFv                           ReturnIntegerFunction */
// J3DPEBlockTexEdge::countDLSize(void)
int countDLSize__17J3DPEBlockTexEdgeFv() {
	return 30;
}

/* 80317BF4-80317BFC 0008 .text      countDLSize__13J3DPEBlockXluFv                               ReturnIntegerFunction */
// J3DPEBlockXlu::countDLSize(void)
int countDLSize__13J3DPEBlockXluFv() {
	return 30;
}

/* 80317BFC-80317C04 0008 .text      countDLSize__16J3DPEBlockFogOffFv                            ReturnIntegerFunction */
// J3DPEBlockFogOff::countDLSize(void)
int countDLSize__16J3DPEBlockFogOffFv() {
	return 30;
}

/* 80317C04-80317C0C 0008 .text      countDLSize__14J3DPEBlockFullFv                              ReturnIntegerFunction */
// J3DPEBlockFull::countDLSize(void)
int countDLSize__14J3DPEBlockFullFv() {
	return 85;
}

/* 80317C0C-8031816C 0560 .text      load__21J3DColorBlockLightOffFv                              Function */
// J3DColorBlockLightOff::load(void)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void load__21J3DColorBlockLightOffFv() {
	nofralloc
#include "_include/J3DGraphBase/J3DMatBlock/load__21J3DColorBlockLightOffFv.s"
}
#pragma pop

/* 8031816C-803187F4 0688 .text      load__22J3DColorBlockAmbientOnFv                             Function */
// J3DColorBlockAmbientOn::load(void)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void load__22J3DColorBlockAmbientOnFv() {
	nofralloc
#include "_include/J3DGraphBase/J3DMatBlock/load__22J3DColorBlockAmbientOnFv.s"
}
#pragma pop

/* 803187F4-80318EB4 06C0 .text      load__20J3DColorBlockLightOnFv                               Function */
// J3DColorBlockLightOn::load(void)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void load__20J3DColorBlockLightOnFv() {
	nofralloc
#include "_include/J3DGraphBase/J3DMatBlock/load__20J3DColorBlockLightOnFv.s"
}
#pragma pop

/* 80318EB4-80318F00 004C .text      patch__21J3DColorBlockLightOffFv                             Function */
// J3DColorBlockLightOff::patch(void)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void patch__21J3DColorBlockLightOffFv() {
	nofralloc
#include "_include/J3DGraphBase/J3DMatBlock/patch__21J3DColorBlockLightOffFv.s"
}
#pragma pop

/* 80318F00-803190AC 01AC .text      patchMatColor__21J3DColorBlockLightOffFv                     Function */
// J3DColorBlockLightOff::patchMatColor(void)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void patchMatColor__21J3DColorBlockLightOffFv() {
	nofralloc
#include "_include/J3DGraphBase/J3DMatBlock/patchMatColor__21J3DColorBlockLightOffFv.s"
}
#pragma pop

/* 803190AC-803194E8 043C .text      patchLight__21J3DColorBlockLightOffFv                        Function */
// J3DColorBlockLightOff::patchLight(void)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void patchLight__21J3DColorBlockLightOffFv() {
	nofralloc
#include "_include/J3DGraphBase/J3DMatBlock/patchLight__21J3DColorBlockLightOffFv.s"
}
#pragma pop

/* 803194E8-80319534 004C .text      patch__20J3DColorBlockLightOnFv                              Function */
// J3DColorBlockLightOn::patch(void)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void patch__20J3DColorBlockLightOnFv() {
	nofralloc
#include "_include/J3DGraphBase/J3DMatBlock/patch__20J3DColorBlockLightOnFv.s"
}
#pragma pop

/* 80319534-803196E0 01AC .text      patchMatColor__20J3DColorBlockLightOnFv                      Function */
// J3DColorBlockLightOn::patchMatColor(void)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void patchMatColor__20J3DColorBlockLightOnFv() {
	nofralloc
#include "_include/J3DGraphBase/J3DMatBlock/patchMatColor__20J3DColorBlockLightOnFv.s"
}
#pragma pop

/* 803196E0-80319B4C 046C .text      patchLight__20J3DColorBlockLightOnFv                         Function */
// J3DColorBlockLightOn::patchLight(void)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void patchLight__20J3DColorBlockLightOnFv() {
	nofralloc
#include "_include/J3DGraphBase/J3DMatBlock/patchLight__20J3DColorBlockLightOnFv.s"
}
#pragma pop

/* 80319B4C-80319BB4 0068 .text      diff__21J3DColorBlockLightOffFUl                             Function */
// J3DColorBlockLightOff::diff(u32)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void diff__21J3DColorBlockLightOffFUl() {
	nofralloc
#include "_include/J3DGraphBase/J3DMatBlock/diff__21J3DColorBlockLightOffFUl.s"
}
#pragma pop

/* 80319BB4-80319D30 017C .text      diffMatColor__21J3DColorBlockLightOffFv                      Function */
// J3DColorBlockLightOff::diffMatColor(void)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void diffMatColor__21J3DColorBlockLightOffFv() {
	nofralloc
#include "_include/J3DGraphBase/J3DMatBlock/diffMatColor__21J3DColorBlockLightOffFv.s"
}
#pragma pop

/* 80319D30-8031A13C 040C .text      diffColorChan__21J3DColorBlockLightOffFv                     Function */
// J3DColorBlockLightOff::diffColorChan(void)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void diffColorChan__21J3DColorBlockLightOffFv() {
	nofralloc
#include "_include/J3DGraphBase/J3DMatBlock/diffColorChan__21J3DColorBlockLightOffFv.s"
}
#pragma pop

/* 8031A13C-8031A1DC 00A0 .text      diff__20J3DColorBlockLightOnFUl                              Function */
// J3DColorBlockLightOn::diff(u32)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void diff__20J3DColorBlockLightOnFUl() {
	nofralloc
#include "_include/J3DGraphBase/J3DMatBlock/diff__20J3DColorBlockLightOnFUl.s"
}
#pragma pop

/* 8031A1DC-8031A358 017C .text      diffAmbColor__20J3DColorBlockLightOnFv                       Function */
// J3DColorBlockLightOn::diffAmbColor(void)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void diffAmbColor__20J3DColorBlockLightOnFv() {
	nofralloc
#include "_include/J3DGraphBase/J3DMatBlock/diffAmbColor__20J3DColorBlockLightOnFv.s"
}
#pragma pop

/* 8031A358-8031A4D4 017C .text      diffMatColor__20J3DColorBlockLightOnFv                       Function */
// J3DColorBlockLightOn::diffMatColor(void)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void diffMatColor__20J3DColorBlockLightOnFv() {
	nofralloc
#include "_include/J3DGraphBase/J3DMatBlock/diffMatColor__20J3DColorBlockLightOnFv.s"
}
#pragma pop

/* 8031A4D4-8031A8E0 040C .text      diffColorChan__20J3DColorBlockLightOnFv                      Function */
// J3DColorBlockLightOn::diffColorChan(void)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void diffColorChan__20J3DColorBlockLightOnFv() {
	nofralloc
#include "_include/J3DGraphBase/J3DMatBlock/diffColorChan__20J3DColorBlockLightOnFv.s"
}
#pragma pop

/* 8031A8E0-8031A948 0068 .text      diffLightObj__20J3DColorBlockLightOnFUl                      Function */
// J3DColorBlockLightOn::diffLightObj(u32)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void diffLightObj__20J3DColorBlockLightOnFUl() {
	nofralloc
#include "_include/J3DGraphBase/J3DMatBlock/diffLightObj__20J3DColorBlockLightOnFUl.s"
}
#pragma pop

/* 8031A948-8031A9E8 00A0 .text      load__15J3DTexGenBlock4Fv                                    Function */
// J3DTexGenBlock4::load(void)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void load__15J3DTexGenBlock4Fv() {
	nofralloc
#include "_include/J3DGraphBase/J3DMatBlock/load__15J3DTexGenBlock4Fv.s"
}
#pragma pop

/* 8031A9E8-8031AA88 00A0 .text      load__19J3DTexGenBlockBasicFv                                Function */
// J3DTexGenBlockBasic::load(void)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void load__19J3DTexGenBlockBasicFv() {
	nofralloc
#include "_include/J3DGraphBase/J3DMatBlock/load__19J3DTexGenBlockBasicFv.s"
}
#pragma pop

/* 8031AA88-8031AB18 0090 .text      patch__21J3DTexGenBlockPatchedFv                             Function */
// J3DTexGenBlockPatched::patch(void)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void patch__21J3DTexGenBlockPatchedFv() {
	nofralloc
#include "_include/J3DGraphBase/J3DMatBlock/patch__21J3DTexGenBlockPatchedFv.s"
}
#pragma pop

/* 8031AB18-8031ABC0 00A8 .text      patch__15J3DTexGenBlock4Fv                                   Function */
// J3DTexGenBlock4::patch(void)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void patch__15J3DTexGenBlock4Fv() {
	nofralloc
#include "_include/J3DGraphBase/J3DMatBlock/patch__15J3DTexGenBlock4Fv.s"
}
#pragma pop

/* 8031ABC0-8031AC68 00A8 .text      patch__19J3DTexGenBlockBasicFv                               Function */
// J3DTexGenBlockBasic::patch(void)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void patch__19J3DTexGenBlockBasicFv() {
	nofralloc
#include "_include/J3DGraphBase/J3DMatBlock/patch__19J3DTexGenBlockBasicFv.s"
}
#pragma pop

/* 8031AC68-8031ACD0 0068 .text      diff__21J3DTexGenBlockPatchedFUl                             Function */
// J3DTexGenBlockPatched::diff(u32)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void diff__21J3DTexGenBlockPatchedFUl() {
	nofralloc
#include "_include/J3DGraphBase/J3DMatBlock/diff__21J3DTexGenBlockPatchedFUl.s"
}
#pragma pop

/* 8031ACD0-8031AD30 0060 .text      diffTexMtx__21J3DTexGenBlockPatchedFv                        Function */
// J3DTexGenBlockPatched::diffTexMtx(void)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void diffTexMtx__21J3DTexGenBlockPatchedFv() {
	nofralloc
#include "_include/J3DGraphBase/J3DMatBlock/diffTexMtx__21J3DTexGenBlockPatchedFv.s"
}
#pragma pop

/* 8031AD30-8031AD64 0034 .text      diffTexGen__21J3DTexGenBlockPatchedFv                        Function */
// J3DTexGenBlockPatched::diffTexGen(void)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void diffTexGen__21J3DTexGenBlockPatchedFv() {
	nofralloc
#include "_include/J3DGraphBase/J3DMatBlock/diffTexGen__21J3DTexGenBlockPatchedFv.s"
}
#pragma pop

/* 8031AD64-8031AFA4 0240 .text      load__12J3DTevBlock1Fv                                       Function */
// J3DTevBlock1::load(void)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void load__12J3DTevBlock1Fv() {
	nofralloc
#include "_include/J3DGraphBase/J3DMatBlock/load__12J3DTevBlock1Fv.s"
}
#pragma pop

/* 8031AFA4-8031B4C0 051C .text      load__12J3DTevBlock2Fv                                       Function */
// J3DTevBlock2::load(void)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void load__12J3DTevBlock2Fv() {
	nofralloc
#include "_include/J3DGraphBase/J3DMatBlock/load__12J3DTevBlock2Fv.s"
}
#pragma pop

/* 8031B4C0-8031BA04 0544 .text      load__12J3DTevBlock4Fv                                       Function */
// J3DTevBlock4::load(void)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void load__12J3DTevBlock4Fv() {
	nofralloc
#include "_include/J3DGraphBase/J3DMatBlock/load__12J3DTevBlock4Fv.s"
}
#pragma pop

/* 8031BA04-8031BF4C 0548 .text      load__13J3DTevBlock16Fv                                      Function */
// J3DTevBlock16::load(void)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void load__13J3DTevBlock16Fv() {
	nofralloc
#include "_include/J3DGraphBase/J3DMatBlock/load__13J3DTevBlock16Fv.s"
}
#pragma pop

/* 8031BF4C-8031BFE0 0094 .text      patchTexNo__18J3DTevBlockPatchedFv                           Function */
// J3DTevBlockPatched::patchTexNo(void)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void patchTexNo__18J3DTevBlockPatchedFv() {
	nofralloc
#include "_include/J3DGraphBase/J3DMatBlock/patchTexNo__18J3DTevBlockPatchedFv.s"
}
#pragma pop

/* 8031BFE0-8031C0AC 00CC .text      patchTevReg__18J3DTevBlockPatchedFv                          Function */
// J3DTevBlockPatched::patchTevReg(void)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void patchTevReg__18J3DTevBlockPatchedFv() {
	nofralloc
#include "_include/J3DGraphBase/J3DMatBlock/patchTevReg__18J3DTevBlockPatchedFv.s"
}
#pragma pop

/* 8031C0AC-8031C228 017C .text      patchTexNoAndTexCoordScale__18J3DTevBlockPatchedFv           Function */
// J3DTevBlockPatched::patchTexNoAndTexCoordScale(void)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void patchTexNoAndTexCoordScale__18J3DTevBlockPatchedFv() {
	nofralloc
#include "_include/J3DGraphBase/J3DMatBlock/patchTexNoAndTexCoordScale__18J3DTevBlockPatchedFv.s"
}
#pragma pop

/* 8031C228-8031C274 004C .text      patch__18J3DTevBlockPatchedFv                                Function */
// J3DTevBlockPatched::patch(void)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void patch__18J3DTevBlockPatchedFv() {
	nofralloc
#include "_include/J3DGraphBase/J3DMatBlock/patch__18J3DTevBlockPatchedFv.s"
}
#pragma pop

/* 8031C274-8031C2E4 0070 .text      patchTexNo__12J3DTevBlock1Fv                                 Function */
// J3DTevBlock1::patchTexNo(void)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void patchTexNo__12J3DTevBlock1Fv() {
	nofralloc
#include "_include/J3DGraphBase/J3DMatBlock/patchTexNo__12J3DTevBlock1Fv.s"
}
#pragma pop

/* 8031C2E4-8031C2E8 0004 .text      patchTevReg__12J3DTevBlock1Fv                                ReturnFunction */
// J3DTevBlock1::patchTevReg(void)
void patchTevReg__12J3DTevBlock1Fv() {
	return;
}

/* 8031C2E8-8031C3CC 00E4 .text      patchTexNoAndTexCoordScale__12J3DTevBlock1Fv                 Function */
// J3DTevBlock1::patchTexNoAndTexCoordScale(void)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void patchTexNoAndTexCoordScale__12J3DTevBlock1Fv() {
	nofralloc
#include "_include/J3DGraphBase/J3DMatBlock/patchTexNoAndTexCoordScale__12J3DTevBlock1Fv.s"
}
#pragma pop

/* 8031C3CC-8031C3F8 002C .text      patch__12J3DTevBlock1Fv                                      Function */
// J3DTevBlock1::patch(void)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void patch__12J3DTevBlock1Fv() {
	nofralloc
#include "_include/J3DGraphBase/J3DMatBlock/patch__12J3DTevBlock1Fv.s"
}
#pragma pop

/* 8031C3F8-8031C48C 0094 .text      patchTexNo__12J3DTevBlock2Fv                                 Function */
// J3DTevBlock2::patchTexNo(void)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void patchTexNo__12J3DTevBlock2Fv() {
	nofralloc
#include "_include/J3DGraphBase/J3DMatBlock/patchTexNo__12J3DTevBlock2Fv.s"
}
#pragma pop

/* 8031C48C-8031C558 00CC .text      patchTevReg__12J3DTevBlock2Fv                                Function */
// J3DTevBlock2::patchTevReg(void)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void patchTevReg__12J3DTevBlock2Fv() {
	nofralloc
#include "_include/J3DGraphBase/J3DMatBlock/patchTevReg__12J3DTevBlock2Fv.s"
}
#pragma pop

/* 8031C558-8031C6A8 0150 .text      patchTexNoAndTexCoordScale__12J3DTevBlock2Fv                 Function */
// J3DTevBlock2::patchTexNoAndTexCoordScale(void)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void patchTexNoAndTexCoordScale__12J3DTevBlock2Fv() {
	nofralloc
#include "_include/J3DGraphBase/J3DMatBlock/patchTexNoAndTexCoordScale__12J3DTevBlock2Fv.s"
}
#pragma pop

/* 8031C6A8-8031C6F4 004C .text      patch__12J3DTevBlock2Fv                                      Function */
// J3DTevBlock2::patch(void)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void patch__12J3DTevBlock2Fv() {
	nofralloc
#include "_include/J3DGraphBase/J3DMatBlock/patch__12J3DTevBlock2Fv.s"
}
#pragma pop

/* 8031C6F4-8031C788 0094 .text      patchTexNo__12J3DTevBlock4Fv                                 Function */
// J3DTevBlock4::patchTexNo(void)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void patchTexNo__12J3DTevBlock4Fv() {
	nofralloc
#include "_include/J3DGraphBase/J3DMatBlock/patchTexNo__12J3DTevBlock4Fv.s"
}
#pragma pop

/* 8031C788-8031C854 00CC .text      patchTevReg__12J3DTevBlock4Fv                                Function */
// J3DTevBlock4::patchTevReg(void)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void patchTevReg__12J3DTevBlock4Fv() {
	nofralloc
#include "_include/J3DGraphBase/J3DMatBlock/patchTevReg__12J3DTevBlock4Fv.s"
}
#pragma pop

/* 8031C854-8031C9D0 017C .text      patchTexNoAndTexCoordScale__12J3DTevBlock4Fv                 Function */
// J3DTevBlock4::patchTexNoAndTexCoordScale(void)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void patchTexNoAndTexCoordScale__12J3DTevBlock4Fv() {
	nofralloc
#include "_include/J3DGraphBase/J3DMatBlock/patchTexNoAndTexCoordScale__12J3DTevBlock4Fv.s"
}
#pragma pop

/* 8031C9D0-8031CA1C 004C .text      patch__12J3DTevBlock4Fv                                      Function */
// J3DTevBlock4::patch(void)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void patch__12J3DTevBlock4Fv() {
	nofralloc
#include "_include/J3DGraphBase/J3DMatBlock/patch__12J3DTevBlock4Fv.s"
}
#pragma pop

/* 8031CA1C-8031CAB0 0094 .text      patchTexNo__13J3DTevBlock16Fv                                Function */
// J3DTevBlock16::patchTexNo(void)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void patchTexNo__13J3DTevBlock16Fv() {
	nofralloc
#include "_include/J3DGraphBase/J3DMatBlock/patchTexNo__13J3DTevBlock16Fv.s"
}
#pragma pop

/* 8031CAB0-8031CB7C 00CC .text      patchTevReg__13J3DTevBlock16Fv                               Function */
// J3DTevBlock16::patchTevReg(void)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void patchTevReg__13J3DTevBlock16Fv() {
	nofralloc
#include "_include/J3DGraphBase/J3DMatBlock/patchTevReg__13J3DTevBlock16Fv.s"
}
#pragma pop

/* 8031CB7C-8031CCF8 017C .text      patchTexNoAndTexCoordScale__13J3DTevBlock16Fv                Function */
// J3DTevBlock16::patchTexNoAndTexCoordScale(void)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void patchTexNoAndTexCoordScale__13J3DTevBlock16Fv() {
	nofralloc
#include "_include/J3DGraphBase/J3DMatBlock/patchTexNoAndTexCoordScale__13J3DTevBlock16Fv.s"
}
#pragma pop

/* 8031CCF8-8031CD44 004C .text      patch__13J3DTevBlock16Fv                                     Function */
// J3DTevBlock16::patch(void)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void patch__13J3DTevBlock16Fv() {
	nofralloc
#include "_include/J3DGraphBase/J3DMatBlock/patch__13J3DTevBlock16Fv.s"
}
#pragma pop

/* 8031CD44-8031CE00 00BC .text      diff__11J3DTevBlockFUl                                       Function */
// J3DTevBlock::diff(u32)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void diff__11J3DTevBlockFUl() {
	nofralloc
#include "_include/J3DGraphBase/J3DMatBlock/diff__11J3DTevBlockFUl.s"
}
#pragma pop

/* 8031CE00-8031CE64 0064 .text      diffTexNo__18J3DTevBlockPatchedFv                            Function */
// J3DTevBlockPatched::diffTexNo(void)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void diffTexNo__18J3DTevBlockPatchedFv() {
	nofralloc
#include "_include/J3DGraphBase/J3DMatBlock/diffTexNo__18J3DTevBlockPatchedFv.s"
}
#pragma pop

/* 8031CE64-8031CF78 0114 .text      diffTevStage__18J3DTevBlockPatchedFv                         Function */
// J3DTevBlockPatched::diffTevStage(void)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void diffTevStage__18J3DTevBlockPatchedFv() {
	nofralloc
#include "_include/J3DGraphBase/J3DMatBlock/diffTevStage__18J3DTevBlockPatchedFv.s"
}
#pragma pop

/* 8031CF78-8031D028 00B0 .text      diffTevStageIndirect__18J3DTevBlockPatchedFv                 Function */
// J3DTevBlockPatched::diffTevStageIndirect(void)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void diffTevStageIndirect__18J3DTevBlockPatchedFv() {
	nofralloc
#include "_include/J3DGraphBase/J3DMatBlock/diffTevStageIndirect__18J3DTevBlockPatchedFv.s"
}
#pragma pop

/* 8031D028-8031D0C4 009C .text      diffTevReg__18J3DTevBlockPatchedFv                           Function */
// J3DTevBlockPatched::diffTevReg(void)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void diffTevReg__18J3DTevBlockPatchedFv() {
	nofralloc
#include "_include/J3DGraphBase/J3DMatBlock/diffTevReg__18J3DTevBlockPatchedFv.s"
}
#pragma pop

/* 8031D0C4-8031D1BC 00F8 .text      diffTexCoordScale__18J3DTevBlockPatchedFv                    Function */
// J3DTevBlockPatched::diffTexCoordScale(void)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void diffTexCoordScale__18J3DTevBlockPatchedFv() {
	nofralloc
#include "_include/J3DGraphBase/J3DMatBlock/diffTexCoordScale__18J3DTevBlockPatchedFv.s"
}
#pragma pop

/* 8031D1BC-8031D1F4 0038 .text      diffTexNo__12J3DTevBlock1Fv                                  Function */
// J3DTevBlock1::diffTexNo(void)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void diffTexNo__12J3DTevBlock1Fv() {
	nofralloc
#include "_include/J3DGraphBase/J3DMatBlock/diffTexNo__12J3DTevBlock1Fv.s"
}
#pragma pop

/* 8031D1F4-8031D1F8 0004 .text      diffTevReg__12J3DTevBlock1Fv                                 ReturnFunction */
// J3DTevBlock1::diffTevReg(void)
void diffTevReg__12J3DTevBlock1Fv() {
	return;
}

/* 8031D1F8-8031D2E8 00F0 .text      diffTevStage__12J3DTevBlock1Fv                               Function */
// J3DTevBlock1::diffTevStage(void)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void diffTevStage__12J3DTevBlock1Fv() {
	nofralloc
#include "_include/J3DGraphBase/J3DMatBlock/diffTevStage__12J3DTevBlock1Fv.s"
}
#pragma pop

/* 8031D2E8-8031D368 0080 .text      diffTevStageIndirect__12J3DTevBlock1Fv                       Function */
// J3DTevBlock1::diffTevStageIndirect(void)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void diffTevStageIndirect__12J3DTevBlock1Fv() {
	nofralloc
#include "_include/J3DGraphBase/J3DMatBlock/diffTevStageIndirect__12J3DTevBlock1Fv.s"
}
#pragma pop

/* 8031D368-8031D3D0 0068 .text      diffTexCoordScale__12J3DTevBlock1Fv                          Function */
// J3DTevBlock1::diffTexCoordScale(void)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void diffTexCoordScale__12J3DTevBlock1Fv() {
	nofralloc
#include "_include/J3DGraphBase/J3DMatBlock/diffTexCoordScale__12J3DTevBlock1Fv.s"
}
#pragma pop

/* 8031D3D0-8031D434 0064 .text      diffTexNo__12J3DTevBlock2Fv                                  Function */
// J3DTevBlock2::diffTexNo(void)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void diffTexNo__12J3DTevBlock2Fv() {
	nofralloc
#include "_include/J3DGraphBase/J3DMatBlock/diffTexNo__12J3DTevBlock2Fv.s"
}
#pragma pop

/* 8031D434-8031D4D0 009C .text      diffTevReg__12J3DTevBlock2Fv                                 Function */
// J3DTevBlock2::diffTevReg(void)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void diffTevReg__12J3DTevBlock2Fv() {
	nofralloc
#include "_include/J3DGraphBase/J3DMatBlock/diffTevReg__12J3DTevBlock2Fv.s"
}
#pragma pop

/* 8031D4D0-8031D5E4 0114 .text      diffTevStage__12J3DTevBlock2Fv                               Function */
// J3DTevBlock2::diffTevStage(void)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void diffTevStage__12J3DTevBlock2Fv() {
	nofralloc
#include "_include/J3DGraphBase/J3DMatBlock/diffTevStage__12J3DTevBlock2Fv.s"
}
#pragma pop

/* 8031D5E4-8031D694 00B0 .text      diffTevStageIndirect__12J3DTevBlock2Fv                       Function */
// J3DTevBlock2::diffTevStageIndirect(void)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void diffTevStageIndirect__12J3DTevBlock2Fv() {
	nofralloc
#include "_include/J3DGraphBase/J3DMatBlock/diffTevStageIndirect__12J3DTevBlock2Fv.s"
}
#pragma pop

/* 8031D694-8031D758 00C4 .text      diffTexCoordScale__12J3DTevBlock2Fv                          Function */
// J3DTevBlock2::diffTexCoordScale(void)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void diffTexCoordScale__12J3DTevBlock2Fv() {
	nofralloc
#include "_include/J3DGraphBase/J3DMatBlock/diffTexCoordScale__12J3DTevBlock2Fv.s"
}
#pragma pop

/* 8031D758-8031D7BC 0064 .text      diffTexNo__12J3DTevBlock4Fv                                  Function */
// J3DTevBlock4::diffTexNo(void)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void diffTexNo__12J3DTevBlock4Fv() {
	nofralloc
#include "_include/J3DGraphBase/J3DMatBlock/diffTexNo__12J3DTevBlock4Fv.s"
}
#pragma pop

/* 8031D7BC-8031D858 009C .text      diffTevReg__12J3DTevBlock4Fv                                 Function */
// J3DTevBlock4::diffTevReg(void)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void diffTevReg__12J3DTevBlock4Fv() {
	nofralloc
#include "_include/J3DGraphBase/J3DMatBlock/diffTevReg__12J3DTevBlock4Fv.s"
}
#pragma pop

/* 8031D858-8031D96C 0114 .text      diffTevStage__12J3DTevBlock4Fv                               Function */
// J3DTevBlock4::diffTevStage(void)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void diffTevStage__12J3DTevBlock4Fv() {
	nofralloc
#include "_include/J3DGraphBase/J3DMatBlock/diffTevStage__12J3DTevBlock4Fv.s"
}
#pragma pop

/* 8031D96C-8031DA1C 00B0 .text      diffTevStageIndirect__12J3DTevBlock4Fv                       Function */
// J3DTevBlock4::diffTevStageIndirect(void)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void diffTevStageIndirect__12J3DTevBlock4Fv() {
	nofralloc
#include "_include/J3DGraphBase/J3DMatBlock/diffTevStageIndirect__12J3DTevBlock4Fv.s"
}
#pragma pop

/* 8031DA1C-8031DB14 00F8 .text      diffTexCoordScale__12J3DTevBlock4Fv                          Function */
// J3DTevBlock4::diffTexCoordScale(void)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void diffTexCoordScale__12J3DTevBlock4Fv() {
	nofralloc
#include "_include/J3DGraphBase/J3DMatBlock/diffTexCoordScale__12J3DTevBlock4Fv.s"
}
#pragma pop

/* 8031DB14-8031DB78 0064 .text      diffTexNo__13J3DTevBlock16Fv                                 Function */
// J3DTevBlock16::diffTexNo(void)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void diffTexNo__13J3DTevBlock16Fv() {
	nofralloc
#include "_include/J3DGraphBase/J3DMatBlock/diffTexNo__13J3DTevBlock16Fv.s"
}
#pragma pop

/* 8031DB78-8031DC14 009C .text      diffTevReg__13J3DTevBlock16Fv                                Function */
// J3DTevBlock16::diffTevReg(void)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void diffTevReg__13J3DTevBlock16Fv() {
	nofralloc
#include "_include/J3DGraphBase/J3DMatBlock/diffTevReg__13J3DTevBlock16Fv.s"
}
#pragma pop

/* 8031DC14-8031DD28 0114 .text      diffTevStage__13J3DTevBlock16Fv                              Function */
// J3DTevBlock16::diffTevStage(void)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void diffTevStage__13J3DTevBlock16Fv() {
	nofralloc
#include "_include/J3DGraphBase/J3DMatBlock/diffTevStage__13J3DTevBlock16Fv.s"
}
#pragma pop

/* 8031DD28-8031DDD8 00B0 .text      diffTevStageIndirect__13J3DTevBlock16Fv                      Function */
// J3DTevBlock16::diffTevStageIndirect(void)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void diffTevStageIndirect__13J3DTevBlock16Fv() {
	nofralloc
#include "_include/J3DGraphBase/J3DMatBlock/diffTevStageIndirect__13J3DTevBlock16Fv.s"
}
#pragma pop

/* 8031DDD8-8031DED0 00F8 .text      diffTexCoordScale__13J3DTevBlock16Fv                         Function */
// J3DTevBlock16::diffTexCoordScale(void)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void diffTexCoordScale__13J3DTevBlock16Fv() {
	nofralloc
#include "_include/J3DGraphBase/J3DMatBlock/diffTexCoordScale__13J3DTevBlock16Fv.s"
}
#pragma pop

/* 8031DED0-8031DFB4 00E4 .text      ptrToIndex__13J3DTevBlock16Fv                                Function */
// J3DTevBlock16::ptrToIndex(void)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void ptrToIndex__13J3DTevBlock16Fv() {
	nofralloc
#include "_include/J3DGraphBase/J3DMatBlock/ptrToIndex__13J3DTevBlock16Fv.s"
}
#pragma pop

/* 8031DFB4-8031E098 00E4 .text      ptrToIndex__18J3DTevBlockPatchedFv                           Function */
// J3DTevBlockPatched::ptrToIndex(void)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void ptrToIndex__18J3DTevBlockPatchedFv() {
	nofralloc
#include "_include/J3DGraphBase/J3DMatBlock/ptrToIndex__18J3DTevBlockPatchedFv.s"
}
#pragma pop

/* 8031E098-8031E12C 0094 .text      indexToPtr_private__11J3DTevBlockFUl                         Function */
// J3DTevBlock::indexToPtr_private(u32)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void indexToPtr_private__11J3DTevBlockFUl() {
	nofralloc
#include "_include/J3DGraphBase/J3DMatBlock/indexToPtr_private__11J3DTevBlockFUl.s"
}
#pragma pop

/* 8031E12C-8031E328 01FC .text      load__15J3DIndBlockFullFv                                    Function */
// J3DIndBlockFull::load(void)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void load__15J3DIndBlockFullFv() {
	nofralloc
#include "_include/J3DGraphBase/J3DMatBlock/load__15J3DIndBlockFullFv.s"
}
#pragma pop

/* 8031E328-8031E408 00E0 .text      diff__15J3DIndBlockFullFUl                                   Function */
// J3DIndBlockFull::diff(u32)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void diff__15J3DIndBlockFullFUl() {
	nofralloc
#include "_include/J3DGraphBase/J3DMatBlock/diff__15J3DIndBlockFullFUl.s"
}
#pragma pop

/* 8031E408-8031E6C8 02C0 .text      load__13J3DPEBlockOpaFv                                      Function */
// J3DPEBlockOpa::load(void)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void load__13J3DPEBlockOpaFv() {
	nofralloc
#include "_include/J3DGraphBase/J3DMatBlock/load__13J3DPEBlockOpaFv.s"
}
#pragma pop

/* 8031E6C8-8031E98C 02C4 .text      load__17J3DPEBlockTexEdgeFv                                  Function */
// J3DPEBlockTexEdge::load(void)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void load__17J3DPEBlockTexEdgeFv() {
	nofralloc
#include "_include/J3DGraphBase/J3DMatBlock/load__17J3DPEBlockTexEdgeFv.s"
}
#pragma pop

/* 8031E98C-8031EC50 02C4 .text      load__13J3DPEBlockXluFv                                      Function */
// J3DPEBlockXlu::load(void)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void load__13J3DPEBlockXluFv() {
	nofralloc
#include "_include/J3DGraphBase/J3DMatBlock/load__13J3DPEBlockXluFv.s"
}
#pragma pop

/* 8031EC50-8031F0D8 0488 .text      load__16J3DPEBlockFogOffFv                                   Function */
// J3DPEBlockFogOff::load(void)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void load__16J3DPEBlockFogOffFv() {
	nofralloc
#include "_include/J3DGraphBase/J3DMatBlock/load__16J3DPEBlockFogOffFv.s"
}
#pragma pop

/* 8031F0D8-8031F3C0 02E8 .text      diffBlend__16J3DPEBlockFogOffFv                              Function */
// J3DPEBlockFogOff::diffBlend(void)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void diffBlend__16J3DPEBlockFogOffFv() {
	nofralloc
#include "_include/J3DGraphBase/J3DMatBlock/diffBlend__16J3DPEBlockFogOffFv.s"
}
#pragma pop

/* 8031F3C0-8031F890 04D0 .text      load__14J3DPEBlockFullFv                                     Function */
// J3DPEBlockFull::load(void)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void load__14J3DPEBlockFullFv() {
	nofralloc
#include "_include/J3DGraphBase/J3DMatBlock/load__14J3DPEBlockFullFv.s"
}
#pragma pop

/* 8031F890-8031F940 00B0 .text      patch__14J3DPEBlockFullFv                                    Function */
// J3DPEBlockFull::patch(void)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void patch__14J3DPEBlockFullFv() {
	nofralloc
#include "_include/J3DGraphBase/J3DMatBlock/patch__14J3DPEBlockFullFv.s"
}
#pragma pop

/* 8031F940-8031F9B8 0078 .text      diffFog__14J3DPEBlockFullFv                                  Function */
// J3DPEBlockFull::diffFog(void)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void diffFog__14J3DPEBlockFullFv() {
	nofralloc
#include "_include/J3DGraphBase/J3DMatBlock/diffFog__14J3DPEBlockFullFv.s"
}
#pragma pop

/* 8031F9B8-8031FCA0 02E8 .text      diffBlend__14J3DPEBlockFullFv                                Function */
// J3DPEBlockFull::diffBlend(void)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void diffBlend__14J3DPEBlockFullFv() {
	nofralloc
#include "_include/J3DGraphBase/J3DMatBlock/diffBlend__14J3DPEBlockFullFv.s"
}
#pragma pop

/* 8031FCA0-8031FD08 0068 .text      diff__14J3DPEBlockFullFUl                                    Function */
// J3DPEBlockFull::diff(u32)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void diff__14J3DPEBlockFullFUl() {
	nofralloc
#include "_include/J3DGraphBase/J3DMatBlock/diff__14J3DPEBlockFullFUl.s"
}
#pragma pop

/* 8031FD08-8031FDE4 00DC .text      reset__21J3DColorBlockLightOffFP13J3DColorBlock              Function */
// J3DColorBlockLightOff::reset(J3DColorBlock*)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void reset__21J3DColorBlockLightOffFP13J3DColorBlock() {
	nofralloc
#include "_include/J3DGraphBase/J3DMatBlock/reset__21J3DColorBlockLightOffFP13J3DColorBlock.s"
}
#pragma pop

/* 8031FDE4-8031FF34 0150 .text      reset__22J3DColorBlockAmbientOnFP13J3DColorBlock             Function */
// J3DColorBlockAmbientOn::reset(J3DColorBlock*)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void reset__22J3DColorBlockAmbientOnFP13J3DColorBlock() {
	nofralloc
#include "_include/J3DGraphBase/J3DMatBlock/reset__22J3DColorBlockAmbientOnFP13J3DColorBlock.s"
}
#pragma pop

/* 8031FF34-80320084 0150 .text      reset__20J3DColorBlockLightOnFP13J3DColorBlock               Function */
// J3DColorBlockLightOn::reset(J3DColorBlock*)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void reset__20J3DColorBlockLightOnFP13J3DColorBlock() {
	nofralloc
#include "_include/J3DGraphBase/J3DMatBlock/reset__20J3DColorBlockLightOnFP13J3DColorBlock.s"
}
#pragma pop

/* 80320084-803201A0 011C .text      reset__21J3DTexGenBlockPatchedFP14J3DTexGenBlock             Function */
// J3DTexGenBlockPatched::reset(J3DTexGenBlock*)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void reset__21J3DTexGenBlockPatchedFP14J3DTexGenBlock() {
	nofralloc
#include "_include/J3DGraphBase/J3DMatBlock/reset__21J3DTexGenBlockPatchedFP14J3DTexGenBlock.s"
}
#pragma pop

/* 803201A0-803202DC 013C .text      reset__15J3DTexGenBlock4FP14J3DTexGenBlock                   Function */
// J3DTexGenBlock4::reset(J3DTexGenBlock*)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void reset__15J3DTexGenBlock4FP14J3DTexGenBlock() {
	nofralloc
#include "_include/J3DGraphBase/J3DMatBlock/reset__15J3DTexGenBlock4FP14J3DTexGenBlock.s"
}
#pragma pop

/* 803202DC-80320418 013C .text      reset__19J3DTexGenBlockBasicFP14J3DTexGenBlock               Function */
// J3DTexGenBlockBasic::reset(J3DTexGenBlock*)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void reset__19J3DTexGenBlockBasicFP14J3DTexGenBlock() {
	nofralloc
#include "_include/J3DGraphBase/J3DMatBlock/reset__19J3DTexGenBlockBasicFP14J3DTexGenBlock.s"
}
#pragma pop

/* 80320418-803205D4 01BC .text      reset__18J3DTevBlockPatchedFP11J3DTevBlock                   Function */
// J3DTevBlockPatched::reset(J3DTevBlock*)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void reset__18J3DTevBlockPatchedFP11J3DTevBlock() {
	nofralloc
#include "_include/J3DGraphBase/J3DMatBlock/reset__18J3DTevBlockPatchedFP11J3DTevBlock.s"
}
#pragma pop

/* 803205D4-803206AC 00D8 .text      reset__12J3DTevBlock1FP11J3DTevBlock                         Function */
// J3DTevBlock1::reset(J3DTevBlock*)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void reset__12J3DTevBlock1FP11J3DTevBlock() {
	nofralloc
#include "_include/J3DGraphBase/J3DMatBlock/reset__12J3DTevBlock1FP11J3DTevBlock.s"
}
#pragma pop

/* 803206AC-8032098C 02E0 .text      reset__12J3DTevBlock2FP11J3DTevBlock                         Function */
// J3DTevBlock2::reset(J3DTevBlock*)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void reset__12J3DTevBlock2FP11J3DTevBlock() {
	nofralloc
#include "_include/J3DGraphBase/J3DMatBlock/reset__12J3DTevBlock2FP11J3DTevBlock.s"
}
#pragma pop

/* 8032098C-80320E24 0498 .text      reset__12J3DTevBlock4FP11J3DTevBlock                         Function */
// J3DTevBlock4::reset(J3DTevBlock*)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void reset__12J3DTevBlock4FP11J3DTevBlock() {
	nofralloc
#include "_include/J3DGraphBase/J3DMatBlock/reset__12J3DTevBlock4FP11J3DTevBlock.s"
}
#pragma pop

/* 80320E24-803210B0 028C .text      reset__13J3DTevBlock16FP11J3DTevBlock                        Function */
// J3DTevBlock16::reset(J3DTevBlock*)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void reset__13J3DTevBlock16FP11J3DTevBlock() {
	nofralloc
#include "_include/J3DGraphBase/J3DMatBlock/reset__13J3DTevBlock16FP11J3DTevBlock.s"
}
#pragma pop

/* 803210B0-803211B4 0104 .text      reset__15J3DIndBlockFullFP11J3DIndBlock                      Function */
// J3DIndBlockFull::reset(J3DIndBlock*)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void reset__15J3DIndBlockFullFP11J3DIndBlock() {
	nofralloc
#include "_include/J3DGraphBase/J3DMatBlock/reset__15J3DIndBlockFullFP11J3DIndBlock.s"
}
#pragma pop

/* 803211B4-8032129C 00E8 .text      reset__16J3DPEBlockFogOffFP10J3DPEBlock                      Function */
// J3DPEBlockFogOff::reset(J3DPEBlock*)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void reset__16J3DPEBlockFogOffFP10J3DPEBlock() {
	nofralloc
#include "_include/J3DGraphBase/J3DMatBlock/reset__16J3DPEBlockFogOffFP10J3DPEBlock.s"
}
#pragma pop

/* 8032129C-803213C0 0124 .text      reset__14J3DPEBlockFullFP10J3DPEBlock                        Function */
// J3DPEBlockFull::reset(J3DPEBlock*)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void reset__14J3DPEBlockFullFP10J3DPEBlock() {
	nofralloc
#include "_include/J3DGraphBase/J3DMatBlock/reset__14J3DPEBlockFullFP10J3DPEBlock.s"
}
#pragma pop

/* 803213C0-80321584 01C4 .text      calc__21J3DTexGenBlockPatchedFPA4_Cf                         Function */
// J3DTexGenBlockPatched::calc(const f32 (*)[4])
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void calc__21J3DTexGenBlockPatchedFPA4_Cf() {
	nofralloc
#include "_include/J3DGraphBase/J3DMatBlock/calc__21J3DTexGenBlockPatchedFPA4_Cf.s"
}
#pragma pop

/* 80321584-803216D8 0154 .text      calcWithoutViewMtx__21J3DTexGenBlockPatchedFPA4_Cf           Function */
// J3DTexGenBlockPatched::calcWithoutViewMtx(const f32 (*)[4])
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void calcWithoutViewMtx__21J3DTexGenBlockPatchedFPA4_Cf() {
	nofralloc
#include "_include/J3DGraphBase/J3DMatBlock/calcWithoutViewMtx__21J3DTexGenBlockPatchedFPA4_Cf.s"
}
#pragma pop

/* 803216D8-8032181C 0144 .text      calcPostTexMtx__21J3DTexGenBlockPatchedFPA4_Cf               Function */
// J3DTexGenBlockPatched::calcPostTexMtx(const f32 (*)[4])
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void calcPostTexMtx__21J3DTexGenBlockPatchedFPA4_Cf() {
	nofralloc
#include "_include/J3DGraphBase/J3DMatBlock/calcPostTexMtx__21J3DTexGenBlockPatchedFPA4_Cf.s"
}
#pragma pop

/* 8032181C-80321938 011C .text      calcPostTexMtxWithoutViewMtx__21J3DTexGenBlockPatchedFPA4_Cf Function */
// J3DTexGenBlockPatched::calcPostTexMtxWithoutViewMtx(const f32 (*)[4])
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void calcPostTexMtxWithoutViewMtx__21J3DTexGenBlockPatchedFPA4_Cf() {
	nofralloc
#include "_include/J3DGraphBase/J3DMatBlock/calcPostTexMtxWithoutViewMtx__21J3DTexGenBlockPatchedFPA4_Cf.s"
}
#pragma pop

/* 80321938-8032193C 0004 .text      diffTevReg__11J3DTevBlockFv                                  ReturnFunction */
// J3DTevBlock::diffTevReg(void)
void diffTevReg__11J3DTevBlockFv() {
	return;
}

/* 8032193C-80321940 0004 .text      diffTevStageIndirect__11J3DTevBlockFv                        ReturnFunction */
// J3DTevBlock::diffTevStageIndirect(void)
void diffTevStageIndirect__11J3DTevBlockFv() {
	return;
}

/* 80321940-80321944 0004 .text      diffTevStage__11J3DTevBlockFv                                ReturnFunction */
// J3DTevBlock::diffTevStage(void)
void diffTevStage__11J3DTevBlockFv() {
	return;
}

/* 80321944-80321948 0004 .text      diffTexCoordScale__11J3DTevBlockFv                           ReturnFunction */
// J3DTevBlock::diffTexCoordScale(void)
void diffTexCoordScale__11J3DTevBlockFv() {
	return;
}

/* 80321948-8032194C 0004 .text      diffTexNo__11J3DTevBlockFv                                   ReturnFunction */
// J3DTevBlock::diffTexNo(void)
void diffTexNo__11J3DTevBlockFv() {
	return;
}

/* 8032194C-80321958 000C .text      getType__14J3DPEBlockFullFv                                  Function */
// J3DPEBlockFull::getType(void)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void getType__14J3DPEBlockFullFv() {
	nofralloc
#include "_include/J3DGraphBase/J3DMatBlock/getType__14J3DPEBlockFullFv.s"
}
#pragma pop

/* 80321958-8032197C 0024 .text      setFog__14J3DPEBlockFullFP6J3DFog                            Function */
// J3DPEBlockFull::setFog(J3DFog*)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void setFog__14J3DPEBlockFullFP6J3DFog() {
	nofralloc
#include "_include/J3DGraphBase/J3DMatBlock/setFog__14J3DPEBlockFullFP6J3DFog.s"
}
#pragma pop

/* 8032197C-803219A0 0024 .text      setFog__14J3DPEBlockFullF6J3DFog                             Function */
// J3DPEBlockFull::setFog(J3DFog)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void setFog__14J3DPEBlockFullF6J3DFog() {
	nofralloc
#include "_include/J3DGraphBase/J3DMatBlock/setFog__14J3DPEBlockFullF6J3DFog.s"
}
#pragma pop

/* 803219A0-803219A8 0008 .text      getFog__14J3DPEBlockFullFv                                   FirstParamFunction */
// J3DPEBlockFull::getFog(void)
u8* getFog__14J3DPEBlockFullFv(u8* param0) {
	return (u8*)&param0[4]; /* param0->field_0x4 */
}

/* 803219A8-803219C4 001C .text      setAlphaComp__14J3DPEBlockFullFRC12J3DAlphaComp              Function */
// J3DPEBlockFull::setAlphaComp(const J3DAlphaComp&)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void setAlphaComp__14J3DPEBlockFullFRC12J3DAlphaComp() {
	nofralloc
#include "_include/J3DGraphBase/J3DMatBlock/setAlphaComp__14J3DPEBlockFullFRC12J3DAlphaComp.s"
}
#pragma pop

/* 803219C4-803219E0 001C .text      setAlphaComp__14J3DPEBlockFullFPC12J3DAlphaComp              Function */
// J3DPEBlockFull::setAlphaComp(const J3DAlphaComp*)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void setAlphaComp__14J3DPEBlockFullFPC12J3DAlphaComp() {
	nofralloc
#include "_include/J3DGraphBase/J3DMatBlock/setAlphaComp__14J3DPEBlockFullFPC12J3DAlphaComp.s"
}
#pragma pop

/* 803219E0-803219E8 0008 .text      getAlphaComp__14J3DPEBlockFullFv                             FirstParamFunction */
// J3DPEBlockFull::getAlphaComp(void)
u8* getAlphaComp__14J3DPEBlockFullFv(u8* param0) {
	return (u8*)&param0[48]; /* param0->field_0x30 */
}

/* 803219E8-803219F4 000C .text      setBlend__14J3DPEBlockFullFRC8J3DBlend                       Function */
// J3DPEBlockFull::setBlend(const J3DBlend&)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void setBlend__14J3DPEBlockFullFRC8J3DBlend() {
	nofralloc
#include "_include/J3DGraphBase/J3DMatBlock/setBlend__14J3DPEBlockFullFRC8J3DBlend.s"
}
#pragma pop

/* 803219F4-80321A00 000C .text      setBlend__14J3DPEBlockFullFPC8J3DBlend                       Function */
// J3DPEBlockFull::setBlend(const J3DBlend*)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void setBlend__14J3DPEBlockFullFPC8J3DBlend() {
	nofralloc
#include "_include/J3DGraphBase/J3DMatBlock/setBlend__14J3DPEBlockFullFPC8J3DBlend.s"
}
#pragma pop

/* 80321A00-80321A08 0008 .text      getBlend__14J3DPEBlockFullFv                                 FirstParamFunction */
// J3DPEBlockFull::getBlend(void)
u8* getBlend__14J3DPEBlockFullFv(u8* param0) {
	return (u8*)&param0[52]; /* param0->field_0x34 */
}

/* 80321A08-80321A14 000C .text      setZMode__14J3DPEBlockFullF8J3DZMode                         Function */
// J3DPEBlockFull::setZMode(J3DZMode)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void setZMode__14J3DPEBlockFullF8J3DZMode() {
	nofralloc
#include "_include/J3DGraphBase/J3DMatBlock/setZMode__14J3DPEBlockFullF8J3DZMode.s"
}
#pragma pop

/* 80321A14-80321A20 000C .text      setZMode__14J3DPEBlockFullFPC8J3DZMode                       Function */
// J3DPEBlockFull::setZMode(const J3DZMode*)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void setZMode__14J3DPEBlockFullFPC8J3DZMode() {
	nofralloc
#include "_include/J3DGraphBase/J3DMatBlock/setZMode__14J3DPEBlockFullFPC8J3DZMode.s"
}
#pragma pop

/* 80321A20-80321A28 0008 .text      getZMode__14J3DPEBlockFullFv                                 FirstParamFunction */
// J3DPEBlockFull::getZMode(void)
u8* getZMode__14J3DPEBlockFullFv(u8* param0) {
	return (u8*)&param0[56]; /* param0->field_0x38 */
}

/* 80321A28-80321A30 0008 .text      setZCompLoc__14J3DPEBlockFullFUc                             Function */
// J3DPEBlockFull::setZCompLoc(u8)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void setZCompLoc__14J3DPEBlockFullFUc() {
	nofralloc
#include "_include/J3DGraphBase/J3DMatBlock/setZCompLoc__14J3DPEBlockFullFUc.s"
}
#pragma pop

/* 80321A30-80321A3C 000C .text      setZCompLoc__14J3DPEBlockFullFPCUc                           Function */
// J3DPEBlockFull::setZCompLoc(const u8*)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void setZCompLoc__14J3DPEBlockFullFPCUc() {
	nofralloc
#include "_include/J3DGraphBase/J3DMatBlock/setZCompLoc__14J3DPEBlockFullFPCUc.s"
}
#pragma pop

/* 80321A3C-80321A44 0008 .text      getZCompLoc__14J3DPEBlockFullCFv                             FirstParamFunction */
// J3DPEBlockFull::getZCompLoc(void) const
u8 getZCompLoc__14J3DPEBlockFullCFv(u8* param0) {
	return *(u8*)&param0[58]; /* param0->field_0x3a */
}

/* 80321A44-80321A4C 0008 .text      setDither__14J3DPEBlockFullFUc                               Function */
// J3DPEBlockFull::setDither(u8)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void setDither__14J3DPEBlockFullFUc() {
	nofralloc
#include "_include/J3DGraphBase/J3DMatBlock/setDither__14J3DPEBlockFullFUc.s"
}
#pragma pop

/* 80321A4C-80321A58 000C .text      setDither__14J3DPEBlockFullFPCUc                             Function */
// J3DPEBlockFull::setDither(const u8*)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void setDither__14J3DPEBlockFullFPCUc() {
	nofralloc
#include "_include/J3DGraphBase/J3DMatBlock/setDither__14J3DPEBlockFullFPCUc.s"
}
#pragma pop

/* 80321A58-80321A60 0008 .text      getDither__14J3DPEBlockFullCFv                               FirstParamFunction */
// J3DPEBlockFull::getDither(void) const
u8 getDither__14J3DPEBlockFullCFv(u8* param0) {
	return *(u8*)&param0[59]; /* param0->field_0x3b */
}

/* 80321A60-80321A68 0008 .text      getFogOffset__14J3DPEBlockFullCFv                            FirstParamFunction */
// J3DPEBlockFull::getFogOffset(void) const
u32 getFogOffset__14J3DPEBlockFullCFv(u8* param0) {
	return *(u32*)&param0[60]; /* param0->field_0x3c */
}

/* 80321A68-80321A70 0008 .text      setFogOffset__14J3DPEBlockFullFUl                            Function */
// J3DPEBlockFull::setFogOffset(u32)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void setFogOffset__14J3DPEBlockFullFUl() {
	nofralloc
#include "_include/J3DGraphBase/J3DMatBlock/setFogOffset__14J3DPEBlockFullFUl.s"
}
#pragma pop

/* 80321A70-80321ACC 005C .text      __dt__14J3DPEBlockFullFv                                     Function */
// J3DPEBlockFull::~J3DPEBlockFull(void)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void __dt__14J3DPEBlockFullFv() {
	nofralloc
#include "_include/J3DGraphBase/J3DMatBlock/__dt__14J3DPEBlockFullFv.s"
}
#pragma pop

/* 80321ACC-80321B00 0034 .text      diff__16J3DPEBlockFogOffFUl                                  Function */
// J3DPEBlockFogOff::diff(u32)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void diff__16J3DPEBlockFogOffFUl() {
	nofralloc
#include "_include/J3DGraphBase/J3DMatBlock/diff__16J3DPEBlockFogOffFUl.s"
}
#pragma pop

/* 80321B00-80321B0C 000C .text      getType__16J3DPEBlockFogOffFv                                Function */
// J3DPEBlockFogOff::getType(void)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void getType__16J3DPEBlockFogOffFv() {
	nofralloc
#include "_include/J3DGraphBase/J3DMatBlock/getType__16J3DPEBlockFogOffFv.s"
}
#pragma pop

/* 80321B0C-80321B28 001C .text      setAlphaComp__16J3DPEBlockFogOffFRC12J3DAlphaComp            Function */
// J3DPEBlockFogOff::setAlphaComp(const J3DAlphaComp&)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void setAlphaComp__16J3DPEBlockFogOffFRC12J3DAlphaComp() {
	nofralloc
#include "_include/J3DGraphBase/J3DMatBlock/setAlphaComp__16J3DPEBlockFogOffFRC12J3DAlphaComp.s"
}
#pragma pop

/* 80321B28-80321B44 001C .text      setAlphaComp__16J3DPEBlockFogOffFPC12J3DAlphaComp            Function */
// J3DPEBlockFogOff::setAlphaComp(const J3DAlphaComp*)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void setAlphaComp__16J3DPEBlockFogOffFPC12J3DAlphaComp() {
	nofralloc
#include "_include/J3DGraphBase/J3DMatBlock/setAlphaComp__16J3DPEBlockFogOffFPC12J3DAlphaComp.s"
}
#pragma pop

/* 80321B44-80321B4C 0008 .text      getAlphaComp__16J3DPEBlockFogOffFv                           FirstParamFunction */
// J3DPEBlockFogOff::getAlphaComp(void)
u8* getAlphaComp__16J3DPEBlockFogOffFv(u8* param0) {
	return (u8*)&param0[4]; /* param0->field_0x4 */
}

/* 80321B4C-80321B58 000C .text      setBlend__16J3DPEBlockFogOffFRC8J3DBlend                     Function */
// J3DPEBlockFogOff::setBlend(const J3DBlend&)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void setBlend__16J3DPEBlockFogOffFRC8J3DBlend() {
	nofralloc
#include "_include/J3DGraphBase/J3DMatBlock/setBlend__16J3DPEBlockFogOffFRC8J3DBlend.s"
}
#pragma pop

/* 80321B58-80321B64 000C .text      setBlend__16J3DPEBlockFogOffFPC8J3DBlend                     Function */
// J3DPEBlockFogOff::setBlend(const J3DBlend*)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void setBlend__16J3DPEBlockFogOffFPC8J3DBlend() {
	nofralloc
#include "_include/J3DGraphBase/J3DMatBlock/setBlend__16J3DPEBlockFogOffFPC8J3DBlend.s"
}
#pragma pop

/* 80321B64-80321B6C 0008 .text      getBlend__16J3DPEBlockFogOffFv                               FirstParamFunction */
// J3DPEBlockFogOff::getBlend(void)
u8* getBlend__16J3DPEBlockFogOffFv(u8* param0) {
	return (u8*)&param0[8]; /* param0->field_0x8 */
}

/* 80321B6C-80321B78 000C .text      setZMode__16J3DPEBlockFogOffF8J3DZMode                       Function */
// J3DPEBlockFogOff::setZMode(J3DZMode)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void setZMode__16J3DPEBlockFogOffF8J3DZMode() {
	nofralloc
#include "_include/J3DGraphBase/J3DMatBlock/setZMode__16J3DPEBlockFogOffF8J3DZMode.s"
}
#pragma pop

/* 80321B78-80321B84 000C .text      setZMode__16J3DPEBlockFogOffFPC8J3DZMode                     Function */
// J3DPEBlockFogOff::setZMode(const J3DZMode*)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void setZMode__16J3DPEBlockFogOffFPC8J3DZMode() {
	nofralloc
#include "_include/J3DGraphBase/J3DMatBlock/setZMode__16J3DPEBlockFogOffFPC8J3DZMode.s"
}
#pragma pop

/* 80321B84-80321B8C 0008 .text      getZMode__16J3DPEBlockFogOffFv                               FirstParamFunction */
// J3DPEBlockFogOff::getZMode(void)
u8* getZMode__16J3DPEBlockFogOffFv(u8* param0) {
	return (u8*)&param0[12]; /* param0->field_0xc */
}

/* 80321B8C-80321B94 0008 .text      setZCompLoc__16J3DPEBlockFogOffFUc                           Function */
// J3DPEBlockFogOff::setZCompLoc(u8)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void setZCompLoc__16J3DPEBlockFogOffFUc() {
	nofralloc
#include "_include/J3DGraphBase/J3DMatBlock/setZCompLoc__16J3DPEBlockFogOffFUc.s"
}
#pragma pop

/* 80321B94-80321BA0 000C .text      setZCompLoc__16J3DPEBlockFogOffFPCUc                         Function */
// J3DPEBlockFogOff::setZCompLoc(const u8*)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void setZCompLoc__16J3DPEBlockFogOffFPCUc() {
	nofralloc
#include "_include/J3DGraphBase/J3DMatBlock/setZCompLoc__16J3DPEBlockFogOffFPCUc.s"
}
#pragma pop

/* 80321BA0-80321BA8 0008 .text      getZCompLoc__16J3DPEBlockFogOffCFv                           FirstParamFunction */
// J3DPEBlockFogOff::getZCompLoc(void) const
u8 getZCompLoc__16J3DPEBlockFogOffCFv(u8* param0) {
	return *(u8*)&param0[14]; /* param0->field_0xe */
}

/* 80321BA8-80321BB0 0008 .text      setDither__16J3DPEBlockFogOffFUc                             Function */
// J3DPEBlockFogOff::setDither(u8)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void setDither__16J3DPEBlockFogOffFUc() {
	nofralloc
#include "_include/J3DGraphBase/J3DMatBlock/setDither__16J3DPEBlockFogOffFUc.s"
}
#pragma pop

/* 80321BB0-80321BBC 000C .text      setDither__16J3DPEBlockFogOffFPCUc                           Function */
// J3DPEBlockFogOff::setDither(const u8*)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void setDither__16J3DPEBlockFogOffFPCUc() {
	nofralloc
#include "_include/J3DGraphBase/J3DMatBlock/setDither__16J3DPEBlockFogOffFPCUc.s"
}
#pragma pop

/* 80321BBC-80321BC4 0008 .text      getDither__16J3DPEBlockFogOffCFv                             FirstParamFunction */
// J3DPEBlockFogOff::getDither(void) const
u8 getDither__16J3DPEBlockFogOffCFv(u8* param0) {
	return *(u8*)&param0[15]; /* param0->field_0xf */
}

/* 80321BC4-80321C20 005C .text      __dt__16J3DPEBlockFogOffFv                                   Function */
// J3DPEBlockFogOff::~J3DPEBlockFogOff(void)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void __dt__16J3DPEBlockFogOffFv() {
	nofralloc
#include "_include/J3DGraphBase/J3DMatBlock/__dt__16J3DPEBlockFogOffFv.s"
}
#pragma pop

/* 80321C20-80321C44 0024 .text      indexToPtr__13J3DTevBlock16Fv                                Function */
// J3DTevBlock16::indexToPtr(void)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void indexToPtr__13J3DTevBlock16Fv() {
	nofralloc
#include "_include/J3DGraphBase/J3DMatBlock/indexToPtr__13J3DTevBlock16Fv.s"
}
#pragma pop

/* 80321C44-80321C50 000C .text      getType__13J3DTevBlock16Fv                                   Function */
// J3DTevBlock16::getType(void)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void getType__13J3DTevBlock16Fv() {
	nofralloc
#include "_include/J3DGraphBase/J3DMatBlock/getType__13J3DTevBlock16Fv.s"
}
#pragma pop

/* 80321C50-80321C60 0010 .text      setTexNo__13J3DTevBlock16FUlUs                               Function */
// J3DTevBlock16::setTexNo(u32, u16)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void setTexNo__13J3DTevBlock16FUlUs() {
	nofralloc
#include "_include/J3DGraphBase/J3DMatBlock/setTexNo__13J3DTevBlock16FUlUs.s"
}
#pragma pop

/* 80321C60-80321C74 0014 .text      setTexNo__13J3DTevBlock16FUlPCUs                             Function */
// J3DTevBlock16::setTexNo(u32, const u16*)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void setTexNo__13J3DTevBlock16FUlPCUs() {
	nofralloc
#include "_include/J3DGraphBase/J3DMatBlock/setTexNo__13J3DTevBlock16FUlPCUs.s"
}
#pragma pop

/* 80321C74-80321C84 0010 .text      getTexNo__13J3DTevBlock16CFUl                                Function */
// J3DTevBlock16::getTexNo(u32) const
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void getTexNo__13J3DTevBlock16CFUl() {
	nofralloc
#include "_include/J3DGraphBase/J3DMatBlock/getTexNo__13J3DTevBlock16CFUl.s"
}
#pragma pop

/* 80321C84-80321C98 0014 .text      setTevOrder__13J3DTevBlock16FUl11J3DTevOrder                 Function */
// J3DTevBlock16::setTevOrder(u32, J3DTevOrder)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void setTevOrder__13J3DTevBlock16FUl11J3DTevOrder() {
	nofralloc
#include "_include/J3DGraphBase/J3DMatBlock/setTevOrder__13J3DTevBlock16FUl11J3DTevOrder.s"
}
#pragma pop

/* 80321C98-80321CAC 0014 .text      setTevOrder__13J3DTevBlock16FUlPC11J3DTevOrder               Function */
// J3DTevBlock16::setTevOrder(u32, const J3DTevOrder*)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void setTevOrder__13J3DTevBlock16FUlPC11J3DTevOrder() {
	nofralloc
#include "_include/J3DGraphBase/J3DMatBlock/setTevOrder__13J3DTevBlock16FUlPC11J3DTevOrder.s"
}
#pragma pop

/* 80321CAC-80321CC0 0014 .text      getTevOrder__13J3DTevBlock16FUl                              Function */
// J3DTevBlock16::getTevOrder(u32)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void getTevOrder__13J3DTevBlock16FUl() {
	nofralloc
#include "_include/J3DGraphBase/J3DMatBlock/getTevOrder__13J3DTevBlock16FUl.s"
}
#pragma pop

/* 80321CC0-80321CEC 002C .text      setTevColor__13J3DTevBlock16FUl13J3DGXColorS10               Function */
// J3DTevBlock16::setTevColor(u32, J3DGXColorS10)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void setTevColor__13J3DTevBlock16FUl13J3DGXColorS10() {
	nofralloc
#include "_include/J3DGraphBase/J3DMatBlock/setTevColor__13J3DTevBlock16FUl13J3DGXColorS10.s"
}
#pragma pop

/* 80321CEC-80321D18 002C .text      setTevColor__13J3DTevBlock16FUlPC13J3DGXColorS10             Function */
// J3DTevBlock16::setTevColor(u32, const J3DGXColorS10*)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void setTevColor__13J3DTevBlock16FUlPC13J3DGXColorS10() {
	nofralloc
#include "_include/J3DGraphBase/J3DMatBlock/setTevColor__13J3DTevBlock16FUlPC13J3DGXColorS10.s"
}
#pragma pop

/* 80321D18-80321D2C 0014 .text      getTevColor__13J3DTevBlock16FUl                              Function */
// J3DTevBlock16::getTevColor(u32)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void getTevColor__13J3DTevBlock16FUl() {
	nofralloc
#include "_include/J3DGraphBase/J3DMatBlock/getTevColor__13J3DTevBlock16FUl.s"
}
#pragma pop

/* 80321D2C-80321D58 002C .text      setTevKColor__13J3DTevBlock16FUl10J3DGXColor                 Function */
// J3DTevBlock16::setTevKColor(u32, J3DGXColor)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void setTevKColor__13J3DTevBlock16FUl10J3DGXColor() {
	nofralloc
#include "_include/J3DGraphBase/J3DMatBlock/setTevKColor__13J3DTevBlock16FUl10J3DGXColor.s"
}
#pragma pop

/* 80321D58-80321D84 002C .text      setTevKColor__13J3DTevBlock16FUlPC10J3DGXColor               Function */
// J3DTevBlock16::setTevKColor(u32, const J3DGXColor*)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void setTevKColor__13J3DTevBlock16FUlPC10J3DGXColor() {
	nofralloc
#include "_include/J3DGraphBase/J3DMatBlock/setTevKColor__13J3DTevBlock16FUlPC10J3DGXColor.s"
}
#pragma pop

/* 80321D84-80321D98 0014 .text      getTevKColor__13J3DTevBlock16FUl                             Function */
// J3DTevBlock16::getTevKColor(u32)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void getTevKColor__13J3DTevBlock16FUl() {
	nofralloc
#include "_include/J3DGraphBase/J3DMatBlock/getTevKColor__13J3DTevBlock16FUl.s"
}
#pragma pop

/* 80321D98-80321DA4 000C .text      setTevKColorSel__13J3DTevBlock16FUlUc                        Function */
// J3DTevBlock16::setTevKColorSel(u32, u8)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void setTevKColorSel__13J3DTevBlock16FUlUc() {
	nofralloc
#include "_include/J3DGraphBase/J3DMatBlock/setTevKColorSel__13J3DTevBlock16FUlUc.s"
}
#pragma pop

/* 80321DA4-80321DB4 0010 .text      setTevKColorSel__13J3DTevBlock16FUlPCUc                      Function */
// J3DTevBlock16::setTevKColorSel(u32, const u8*)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void setTevKColorSel__13J3DTevBlock16FUlPCUc() {
	nofralloc
#include "_include/J3DGraphBase/J3DMatBlock/setTevKColorSel__13J3DTevBlock16FUlPCUc.s"
}
#pragma pop

/* 80321DB4-80321DC0 000C .text      getTevKColorSel__13J3DTevBlock16FUl                          Function */
// J3DTevBlock16::getTevKColorSel(u32)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void getTevKColorSel__13J3DTevBlock16FUl() {
	nofralloc
#include "_include/J3DGraphBase/J3DMatBlock/getTevKColorSel__13J3DTevBlock16FUl.s"
}
#pragma pop

/* 80321DC0-80321DCC 000C .text      setTevKAlphaSel__13J3DTevBlock16FUlUc                        Function */
// J3DTevBlock16::setTevKAlphaSel(u32, u8)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void setTevKAlphaSel__13J3DTevBlock16FUlUc() {
	nofralloc
#include "_include/J3DGraphBase/J3DMatBlock/setTevKAlphaSel__13J3DTevBlock16FUlUc.s"
}
#pragma pop

/* 80321DCC-80321DDC 0010 .text      setTevKAlphaSel__13J3DTevBlock16FUlPCUc                      Function */
// J3DTevBlock16::setTevKAlphaSel(u32, const u8*)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void setTevKAlphaSel__13J3DTevBlock16FUlPCUc() {
	nofralloc
#include "_include/J3DGraphBase/J3DMatBlock/setTevKAlphaSel__13J3DTevBlock16FUlPCUc.s"
}
#pragma pop

/* 80321DDC-80321DE8 000C .text      getTevKAlphaSel__13J3DTevBlock16FUl                          Function */
// J3DTevBlock16::getTevKAlphaSel(u32)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void getTevKAlphaSel__13J3DTevBlock16FUl() {
	nofralloc
#include "_include/J3DGraphBase/J3DMatBlock/getTevKAlphaSel__13J3DTevBlock16FUl.s"
}
#pragma pop

/* 80321DE8-80321DF0 0008 .text      setTevStageNum__13J3DTevBlock16FUc                           Function */
// J3DTevBlock16::setTevStageNum(u8)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void setTevStageNum__13J3DTevBlock16FUc() {
	nofralloc
#include "_include/J3DGraphBase/J3DMatBlock/setTevStageNum__13J3DTevBlock16FUc.s"
}
#pragma pop

/* 80321DF0-80321DFC 000C .text      setTevStageNum__13J3DTevBlock16FPCUc                         Function */
// J3DTevBlock16::setTevStageNum(const u8*)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void setTevStageNum__13J3DTevBlock16FPCUc() {
	nofralloc
#include "_include/J3DGraphBase/J3DMatBlock/setTevStageNum__13J3DTevBlock16FPCUc.s"
}
#pragma pop

/* 80321DFC-80321E04 0008 .text      getTevStageNum__13J3DTevBlock16CFv                           FirstParamFunction */
// J3DTevBlock16::getTevStageNum(void) const
u8 getTevStageNum__13J3DTevBlock16CFv(u8* param0) {
	return *(u8*)&param0[88]; /* param0->field_0x58 */
}

/* 80321E04-80321E40 003C .text      setTevStage__13J3DTevBlock16FUl11J3DTevStage                 Function */
// J3DTevBlock16::setTevStage(u32, J3DTevStage)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void setTevStage__13J3DTevBlock16FUl11J3DTevStage() {
	nofralloc
#include "_include/J3DGraphBase/J3DMatBlock/setTevStage__13J3DTevBlock16FUl11J3DTevStage.s"
}
#pragma pop

/* 80321E40-80321E7C 003C .text      setTevStage__13J3DTevBlock16FUlPC11J3DTevStage               Function */
// J3DTevBlock16::setTevStage(u32, const J3DTevStage*)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void setTevStage__13J3DTevBlock16FUlPC11J3DTevStage() {
	nofralloc
#include "_include/J3DGraphBase/J3DMatBlock/setTevStage__13J3DTevBlock16FUlPC11J3DTevStage.s"
}
#pragma pop

/* 80321E7C-80321E90 0014 .text      getTevStage__13J3DTevBlock16FUl                              Function */
// J3DTevBlock16::getTevStage(u32)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void getTevStage__13J3DTevBlock16FUl() {
	nofralloc
#include "_include/J3DGraphBase/J3DMatBlock/getTevStage__13J3DTevBlock16FUl.s"
}
#pragma pop

/* 80321E90-80321EC8 0038 .text      setTevSwapModeInfo__13J3DTevBlock16FUl18J3DTevSwapModeInfo   Function */
// J3DTevBlock16::setTevSwapModeInfo(u32, J3DTevSwapModeInfo)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void setTevSwapModeInfo__13J3DTevBlock16FUl18J3DTevSwapModeInfo() {
	nofralloc
#include "_include/J3DGraphBase/J3DMatBlock/setTevSwapModeInfo__13J3DTevBlock16FUl18J3DTevSwapModeInfo.s"
}
#pragma pop

/* 80321EC8-80321F00 0038 .text      setTevSwapModeInfo__13J3DTevBlock16FUlPC18J3DTevSwapModeInfo Function */
// J3DTevBlock16::setTevSwapModeInfo(u32, const J3DTevSwapModeInfo*)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void setTevSwapModeInfo__13J3DTevBlock16FUlPC18J3DTevSwapModeInfo() {
	nofralloc
#include "_include/J3DGraphBase/J3DMatBlock/setTevSwapModeInfo__13J3DTevBlock16FUlPC18J3DTevSwapModeInfo.s"
}
#pragma pop

/* 80321F00-80321F10 0010 .text      setTevSwapModeTable__13J3DTevBlock16FUl19J3DTevSwapModeTable Function */
// J3DTevBlock16::setTevSwapModeTable(u32, J3DTevSwapModeTable)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void setTevSwapModeTable__13J3DTevBlock16FUl19J3DTevSwapModeTable() {
	nofralloc
#include "_include/J3DGraphBase/J3DMatBlock/setTevSwapModeTable__13J3DTevBlock16FUl19J3DTevSwapModeTable.s"
}
#pragma pop

/* 80321F10-80321F20 0010 .text      setTevSwapModeTable__13J3DTevBlock16FUlPC19J3DTevSwapModeTable Function */
// J3DTevBlock16::setTevSwapModeTable(u32, const J3DTevSwapModeTable*)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void setTevSwapModeTable__13J3DTevBlock16FUlPC19J3DTevSwapModeTable() {
	nofralloc
#include "_include/J3DGraphBase/J3DMatBlock/setTevSwapModeTable__13J3DTevBlock16FUlPC19J3DTevSwapModeTable.s"
}
#pragma pop

/* 80321F20-80321F30 0010 .text      getTevSwapModeTable__13J3DTevBlock16FUl                      Function */
// J3DTevBlock16::getTevSwapModeTable(u32)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void getTevSwapModeTable__13J3DTevBlock16FUl() {
	nofralloc
#include "_include/J3DGraphBase/J3DMatBlock/getTevSwapModeTable__13J3DTevBlock16FUl.s"
}
#pragma pop

/* 80321F30-80321F44 0014 .text      setIndTevStage__13J3DTevBlock16FUl14J3DIndTevStage           Function */
// J3DTevBlock16::setIndTevStage(u32, J3DIndTevStage)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void setIndTevStage__13J3DTevBlock16FUl14J3DIndTevStage() {
	nofralloc
#include "_include/J3DGraphBase/J3DMatBlock/setIndTevStage__13J3DTevBlock16FUl14J3DIndTevStage.s"
}
#pragma pop

/* 80321F44-80321F58 0014 .text      setIndTevStage__13J3DTevBlock16FUlPC14J3DIndTevStage         Function */
// J3DTevBlock16::setIndTevStage(u32, const J3DIndTevStage*)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void setIndTevStage__13J3DTevBlock16FUlPC14J3DIndTevStage() {
	nofralloc
#include "_include/J3DGraphBase/J3DMatBlock/setIndTevStage__13J3DTevBlock16FUlPC14J3DIndTevStage.s"
}
#pragma pop

/* 80321F58-80321F6C 0014 .text      getIndTevStage__13J3DTevBlock16FUl                           Function */
// J3DTevBlock16::getIndTevStage(u32)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void getIndTevStage__13J3DTevBlock16FUl() {
	nofralloc
#include "_include/J3DGraphBase/J3DMatBlock/getIndTevStage__13J3DTevBlock16FUl.s"
}
#pragma pop

/* 80321F6C-80321F74 0008 .text      getTexNoOffset__13J3DTevBlock16CFv                           FirstParamFunction */
// J3DTevBlock16::getTexNoOffset(void) const
u32 getTexNoOffset__13J3DTevBlock16CFv(u8* param0) {
	return *(u32*)&param0[4]; /* param0->field_0x4 */
}

/* 80321F74-80321F7C 0008 .text      getTevRegOffset__13J3DTevBlock16CFv                          FirstParamFunction */
// J3DTevBlock16::getTevRegOffset(void) const
u32 getTevRegOffset__13J3DTevBlock16CFv(u8* param0) {
	return *(u32*)&param0[368]; /* param0->field_0x170 */
}

/* 80321F7C-80321F84 0008 .text      setTevRegOffset__13J3DTevBlock16FUl                          Function */
// J3DTevBlock16::setTevRegOffset(u32)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void setTevRegOffset__13J3DTevBlock16FUl() {
	nofralloc
#include "_include/J3DGraphBase/J3DMatBlock/setTevRegOffset__13J3DTevBlock16FUl.s"
}
#pragma pop

/* 80321F84-80321FE0 005C .text      __dt__13J3DTevBlock16Fv                                      Function */
// J3DTevBlock16::~J3DTevBlock16(void)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void __dt__13J3DTevBlock16Fv() {
	nofralloc
#include "_include/J3DGraphBase/J3DMatBlock/__dt__13J3DTevBlock16Fv.s"
}
#pragma pop

/* 80321FE0-80321FE8 0008 .text      setTexNoOffset__11J3DTevBlockFUl                             Function */
// J3DTevBlock::setTexNoOffset(u32)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void setTexNoOffset__11J3DTevBlockFUl() {
	nofralloc
#include "_include/J3DGraphBase/J3DMatBlock/setTexNoOffset__11J3DTevBlockFUl.s"
}
#pragma pop

/* 80321FE8-80321FEC 0004 .text      ptrToIndex__12J3DTevBlock4Fv                                 ReturnFunction */
// J3DTevBlock4::ptrToIndex(void)
void ptrToIndex__12J3DTevBlock4Fv() {
	return;
}

/* 80321FEC-80322010 0024 .text      indexToPtr__12J3DTevBlock4Fv                                 Function */
// J3DTevBlock4::indexToPtr(void)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void indexToPtr__12J3DTevBlock4Fv() {
	nofralloc
#include "_include/J3DGraphBase/J3DMatBlock/indexToPtr__12J3DTevBlock4Fv.s"
}
#pragma pop

/* 80322010-8032201C 000C .text      getType__12J3DTevBlock4Fv                                    Function */
// J3DTevBlock4::getType(void)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void getType__12J3DTevBlock4Fv() {
	nofralloc
#include "_include/J3DGraphBase/J3DMatBlock/getType__12J3DTevBlock4Fv.s"
}
#pragma pop

/* 8032201C-8032202C 0010 .text      setTexNo__12J3DTevBlock4FUlUs                                Function */
// J3DTevBlock4::setTexNo(u32, u16)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void setTexNo__12J3DTevBlock4FUlUs() {
	nofralloc
#include "_include/J3DGraphBase/J3DMatBlock/setTexNo__12J3DTevBlock4FUlUs.s"
}
#pragma pop

/* 8032202C-80322040 0014 .text      setTexNo__12J3DTevBlock4FUlPCUs                              Function */
// J3DTevBlock4::setTexNo(u32, const u16*)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void setTexNo__12J3DTevBlock4FUlPCUs() {
	nofralloc
#include "_include/J3DGraphBase/J3DMatBlock/setTexNo__12J3DTevBlock4FUlPCUs.s"
}
#pragma pop

/* 80322040-80322050 0010 .text      getTexNo__12J3DTevBlock4CFUl                                 Function */
// J3DTevBlock4::getTexNo(u32) const
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void getTexNo__12J3DTevBlock4CFUl() {
	nofralloc
#include "_include/J3DGraphBase/J3DMatBlock/getTexNo__12J3DTevBlock4CFUl.s"
}
#pragma pop

/* 80322050-80322064 0014 .text      setTevOrder__12J3DTevBlock4FUl11J3DTevOrder                  Function */
// J3DTevBlock4::setTevOrder(u32, J3DTevOrder)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void setTevOrder__12J3DTevBlock4FUl11J3DTevOrder() {
	nofralloc
#include "_include/J3DGraphBase/J3DMatBlock/setTevOrder__12J3DTevBlock4FUl11J3DTevOrder.s"
}
#pragma pop

/* 80322064-80322078 0014 .text      setTevOrder__12J3DTevBlock4FUlPC11J3DTevOrder                Function */
// J3DTevBlock4::setTevOrder(u32, const J3DTevOrder*)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void setTevOrder__12J3DTevBlock4FUlPC11J3DTevOrder() {
	nofralloc
#include "_include/J3DGraphBase/J3DMatBlock/setTevOrder__12J3DTevBlock4FUlPC11J3DTevOrder.s"
}
#pragma pop

/* 80322078-8032208C 0014 .text      getTevOrder__12J3DTevBlock4FUl                               Function */
// J3DTevBlock4::getTevOrder(u32)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void getTevOrder__12J3DTevBlock4FUl() {
	nofralloc
#include "_include/J3DGraphBase/J3DMatBlock/getTevOrder__12J3DTevBlock4FUl.s"
}
#pragma pop

/* 8032208C-803220B8 002C .text      setTevColor__12J3DTevBlock4FUl13J3DGXColorS10                Function */
// J3DTevBlock4::setTevColor(u32, J3DGXColorS10)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void setTevColor__12J3DTevBlock4FUl13J3DGXColorS10() {
	nofralloc
#include "_include/J3DGraphBase/J3DMatBlock/setTevColor__12J3DTevBlock4FUl13J3DGXColorS10.s"
}
#pragma pop

/* 803220B8-803220E4 002C .text      setTevColor__12J3DTevBlock4FUlPC13J3DGXColorS10              Function */
// J3DTevBlock4::setTevColor(u32, const J3DGXColorS10*)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void setTevColor__12J3DTevBlock4FUlPC13J3DGXColorS10() {
	nofralloc
#include "_include/J3DGraphBase/J3DMatBlock/setTevColor__12J3DTevBlock4FUlPC13J3DGXColorS10.s"
}
#pragma pop

/* 803220E4-803220F8 0014 .text      getTevColor__12J3DTevBlock4FUl                               Function */
// J3DTevBlock4::getTevColor(u32)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void getTevColor__12J3DTevBlock4FUl() {
	nofralloc
#include "_include/J3DGraphBase/J3DMatBlock/getTevColor__12J3DTevBlock4FUl.s"
}
#pragma pop

/* 803220F8-80322124 002C .text      setTevKColor__12J3DTevBlock4FUl10J3DGXColor                  Function */
// J3DTevBlock4::setTevKColor(u32, J3DGXColor)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void setTevKColor__12J3DTevBlock4FUl10J3DGXColor() {
	nofralloc
#include "_include/J3DGraphBase/J3DMatBlock/setTevKColor__12J3DTevBlock4FUl10J3DGXColor.s"
}
#pragma pop

/* 80322124-80322150 002C .text      setTevKColor__12J3DTevBlock4FUlPC10J3DGXColor                Function */
// J3DTevBlock4::setTevKColor(u32, const J3DGXColor*)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void setTevKColor__12J3DTevBlock4FUlPC10J3DGXColor() {
	nofralloc
#include "_include/J3DGraphBase/J3DMatBlock/setTevKColor__12J3DTevBlock4FUlPC10J3DGXColor.s"
}
#pragma pop

/* 80322150-80322164 0014 .text      getTevKColor__12J3DTevBlock4FUl                              Function */
// J3DTevBlock4::getTevKColor(u32)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void getTevKColor__12J3DTevBlock4FUl() {
	nofralloc
#include "_include/J3DGraphBase/J3DMatBlock/getTevKColor__12J3DTevBlock4FUl.s"
}
#pragma pop

/* 80322164-80322170 000C .text      setTevKColorSel__12J3DTevBlock4FUlUc                         Function */
// J3DTevBlock4::setTevKColorSel(u32, u8)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void setTevKColorSel__12J3DTevBlock4FUlUc() {
	nofralloc
#include "_include/J3DGraphBase/J3DMatBlock/setTevKColorSel__12J3DTevBlock4FUlUc.s"
}
#pragma pop

/* 80322170-80322180 0010 .text      setTevKColorSel__12J3DTevBlock4FUlPCUc                       Function */
// J3DTevBlock4::setTevKColorSel(u32, const u8*)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void setTevKColorSel__12J3DTevBlock4FUlPCUc() {
	nofralloc
#include "_include/J3DGraphBase/J3DMatBlock/setTevKColorSel__12J3DTevBlock4FUlPCUc.s"
}
#pragma pop

/* 80322180-8032218C 000C .text      getTevKColorSel__12J3DTevBlock4FUl                           Function */
// J3DTevBlock4::getTevKColorSel(u32)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void getTevKColorSel__12J3DTevBlock4FUl() {
	nofralloc
#include "_include/J3DGraphBase/J3DMatBlock/getTevKColorSel__12J3DTevBlock4FUl.s"
}
#pragma pop

/* 8032218C-80322198 000C .text      setTevKAlphaSel__12J3DTevBlock4FUlUc                         Function */
// J3DTevBlock4::setTevKAlphaSel(u32, u8)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void setTevKAlphaSel__12J3DTevBlock4FUlUc() {
	nofralloc
#include "_include/J3DGraphBase/J3DMatBlock/setTevKAlphaSel__12J3DTevBlock4FUlUc.s"
}
#pragma pop

/* 80322198-803221A8 0010 .text      setTevKAlphaSel__12J3DTevBlock4FUlPCUc                       Function */
// J3DTevBlock4::setTevKAlphaSel(u32, const u8*)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void setTevKAlphaSel__12J3DTevBlock4FUlPCUc() {
	nofralloc
#include "_include/J3DGraphBase/J3DMatBlock/setTevKAlphaSel__12J3DTevBlock4FUlPCUc.s"
}
#pragma pop

/* 803221A8-803221B4 000C .text      getTevKAlphaSel__12J3DTevBlock4FUl                           Function */
// J3DTevBlock4::getTevKAlphaSel(u32)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void getTevKAlphaSel__12J3DTevBlock4FUl() {
	nofralloc
#include "_include/J3DGraphBase/J3DMatBlock/getTevKAlphaSel__12J3DTevBlock4FUl.s"
}
#pragma pop

/* 803221B4-803221BC 0008 .text      setTevStageNum__12J3DTevBlock4FUc                            Function */
// J3DTevBlock4::setTevStageNum(u8)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void setTevStageNum__12J3DTevBlock4FUc() {
	nofralloc
#include "_include/J3DGraphBase/J3DMatBlock/setTevStageNum__12J3DTevBlock4FUc.s"
}
#pragma pop

/* 803221BC-803221C8 000C .text      setTevStageNum__12J3DTevBlock4FPCUc                          Function */
// J3DTevBlock4::setTevStageNum(const u8*)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void setTevStageNum__12J3DTevBlock4FPCUc() {
	nofralloc
#include "_include/J3DGraphBase/J3DMatBlock/setTevStageNum__12J3DTevBlock4FPCUc.s"
}
#pragma pop

/* 803221C8-803221D0 0008 .text      getTevStageNum__12J3DTevBlock4CFv                            FirstParamFunction */
// J3DTevBlock4::getTevStageNum(void) const
u8 getTevStageNum__12J3DTevBlock4CFv(u8* param0) {
	return *(u8*)&param0[32]; /* param0->field_0x20 */
}

/* 803221D0-8032220C 003C .text      setTevStage__12J3DTevBlock4FUl11J3DTevStage                  Function */
// J3DTevBlock4::setTevStage(u32, J3DTevStage)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void setTevStage__12J3DTevBlock4FUl11J3DTevStage() {
	nofralloc
#include "_include/J3DGraphBase/J3DMatBlock/setTevStage__12J3DTevBlock4FUl11J3DTevStage.s"
}
#pragma pop

/* 8032220C-80322248 003C .text      setTevStage__12J3DTevBlock4FUlPC11J3DTevStage                Function */
// J3DTevBlock4::setTevStage(u32, const J3DTevStage*)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void setTevStage__12J3DTevBlock4FUlPC11J3DTevStage() {
	nofralloc
#include "_include/J3DGraphBase/J3DMatBlock/setTevStage__12J3DTevBlock4FUlPC11J3DTevStage.s"
}
#pragma pop

/* 80322248-8032225C 0014 .text      getTevStage__12J3DTevBlock4FUl                               Function */
// J3DTevBlock4::getTevStage(u32)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void getTevStage__12J3DTevBlock4FUl() {
	nofralloc
#include "_include/J3DGraphBase/J3DMatBlock/getTevStage__12J3DTevBlock4FUl.s"
}
#pragma pop

/* 8032225C-80322294 0038 .text      setTevSwapModeInfo__12J3DTevBlock4FUl18J3DTevSwapModeInfo    Function */
// J3DTevBlock4::setTevSwapModeInfo(u32, J3DTevSwapModeInfo)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void setTevSwapModeInfo__12J3DTevBlock4FUl18J3DTevSwapModeInfo() {
	nofralloc
#include "_include/J3DGraphBase/J3DMatBlock/setTevSwapModeInfo__12J3DTevBlock4FUl18J3DTevSwapModeInfo.s"
}
#pragma pop

/* 80322294-803222CC 0038 .text      setTevSwapModeInfo__12J3DTevBlock4FUlPC18J3DTevSwapModeInfo  Function */
// J3DTevBlock4::setTevSwapModeInfo(u32, const J3DTevSwapModeInfo*)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void setTevSwapModeInfo__12J3DTevBlock4FUlPC18J3DTevSwapModeInfo() {
	nofralloc
#include "_include/J3DGraphBase/J3DMatBlock/setTevSwapModeInfo__12J3DTevBlock4FUlPC18J3DTevSwapModeInfo.s"
}
#pragma pop

/* 803222CC-803222DC 0010 .text      setTevSwapModeTable__12J3DTevBlock4FUl19J3DTevSwapModeTable  Function */
// J3DTevBlock4::setTevSwapModeTable(u32, J3DTevSwapModeTable)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void setTevSwapModeTable__12J3DTevBlock4FUl19J3DTevSwapModeTable() {
	nofralloc
#include "_include/J3DGraphBase/J3DMatBlock/setTevSwapModeTable__12J3DTevBlock4FUl19J3DTevSwapModeTable.s"
}
#pragma pop

/* 803222DC-803222EC 0010 .text      setTevSwapModeTable__12J3DTevBlock4FUlPC19J3DTevSwapModeTable Function */
// J3DTevBlock4::setTevSwapModeTable(u32, const J3DTevSwapModeTable*)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void setTevSwapModeTable__12J3DTevBlock4FUlPC19J3DTevSwapModeTable() {
	nofralloc
#include "_include/J3DGraphBase/J3DMatBlock/setTevSwapModeTable__12J3DTevBlock4FUlPC19J3DTevSwapModeTable.s"
}
#pragma pop

/* 803222EC-803222FC 0010 .text      getTevSwapModeTable__12J3DTevBlock4FUl                       Function */
// J3DTevBlock4::getTevSwapModeTable(u32)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void getTevSwapModeTable__12J3DTevBlock4FUl() {
	nofralloc
#include "_include/J3DGraphBase/J3DMatBlock/getTevSwapModeTable__12J3DTevBlock4FUl.s"
}
#pragma pop

/* 803222FC-80322310 0014 .text      setIndTevStage__12J3DTevBlock4FUl14J3DIndTevStage            Function */
// J3DTevBlock4::setIndTevStage(u32, J3DIndTevStage)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void setIndTevStage__12J3DTevBlock4FUl14J3DIndTevStage() {
	nofralloc
#include "_include/J3DGraphBase/J3DMatBlock/setIndTevStage__12J3DTevBlock4FUl14J3DIndTevStage.s"
}
#pragma pop

/* 80322310-80322324 0014 .text      setIndTevStage__12J3DTevBlock4FUlPC14J3DIndTevStage          Function */
// J3DTevBlock4::setIndTevStage(u32, const J3DIndTevStage*)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void setIndTevStage__12J3DTevBlock4FUlPC14J3DIndTevStage() {
	nofralloc
#include "_include/J3DGraphBase/J3DMatBlock/setIndTevStage__12J3DTevBlock4FUlPC14J3DIndTevStage.s"
}
#pragma pop

/* 80322324-80322338 0014 .text      getIndTevStage__12J3DTevBlock4FUl                            Function */
// J3DTevBlock4::getIndTevStage(u32)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void getIndTevStage__12J3DTevBlock4FUl() {
	nofralloc
#include "_include/J3DGraphBase/J3DMatBlock/getIndTevStage__12J3DTevBlock4FUl.s"
}
#pragma pop

/* 80322338-80322340 0008 .text      getTexNoOffset__12J3DTevBlock4CFv                            FirstParamFunction */
// J3DTevBlock4::getTexNoOffset(void) const
u32 getTexNoOffset__12J3DTevBlock4CFv(u8* param0) {
	return *(u32*)&param0[4]; /* param0->field_0x4 */
}

/* 80322340-80322348 0008 .text      getTevRegOffset__12J3DTevBlock4CFv                           FirstParamFunction */
// J3DTevBlock4::getTevRegOffset(void) const
u32 getTevRegOffset__12J3DTevBlock4CFv(u8* param0) {
	return *(u32*)&param0[144]; /* param0->field_0x90 */
}

/* 80322348-80322350 0008 .text      setTevRegOffset__12J3DTevBlock4FUl                           Function */
// J3DTevBlock4::setTevRegOffset(u32)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void setTevRegOffset__12J3DTevBlock4FUl() {
	nofralloc
#include "_include/J3DGraphBase/J3DMatBlock/setTevRegOffset__12J3DTevBlock4FUl.s"
}
#pragma pop

/* 80322350-803223AC 005C .text      __dt__12J3DTevBlock4Fv                                       Function */
// J3DTevBlock4::~J3DTevBlock4(void)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void __dt__12J3DTevBlock4Fv() {
	nofralloc
#include "_include/J3DGraphBase/J3DMatBlock/__dt__12J3DTevBlock4Fv.s"
}
#pragma pop

/* 803223AC-803223B0 0004 .text      ptrToIndex__12J3DTevBlock2Fv                                 ReturnFunction */
// J3DTevBlock2::ptrToIndex(void)
void ptrToIndex__12J3DTevBlock2Fv() {
	return;
}

/* 803223B0-803223D4 0024 .text      indexToPtr__12J3DTevBlock2Fv                                 Function */
// J3DTevBlock2::indexToPtr(void)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void indexToPtr__12J3DTevBlock2Fv() {
	nofralloc
#include "_include/J3DGraphBase/J3DMatBlock/indexToPtr__12J3DTevBlock2Fv.s"
}
#pragma pop

/* 803223D4-803223E0 000C .text      getType__12J3DTevBlock2Fv                                    Function */
// J3DTevBlock2::getType(void)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void getType__12J3DTevBlock2Fv() {
	nofralloc
#include "_include/J3DGraphBase/J3DMatBlock/getType__12J3DTevBlock2Fv.s"
}
#pragma pop

/* 803223E0-803223F0 0010 .text      setTexNo__12J3DTevBlock2FUlUs                                Function */
// J3DTevBlock2::setTexNo(u32, u16)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void setTexNo__12J3DTevBlock2FUlUs() {
	nofralloc
#include "_include/J3DGraphBase/J3DMatBlock/setTexNo__12J3DTevBlock2FUlUs.s"
}
#pragma pop

/* 803223F0-80322404 0014 .text      setTexNo__12J3DTevBlock2FUlPCUs                              Function */
// J3DTevBlock2::setTexNo(u32, const u16*)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void setTexNo__12J3DTevBlock2FUlPCUs() {
	nofralloc
#include "_include/J3DGraphBase/J3DMatBlock/setTexNo__12J3DTevBlock2FUlPCUs.s"
}
#pragma pop

/* 80322404-80322414 0010 .text      getTexNo__12J3DTevBlock2CFUl                                 Function */
// J3DTevBlock2::getTexNo(u32) const
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void getTexNo__12J3DTevBlock2CFUl() {
	nofralloc
#include "_include/J3DGraphBase/J3DMatBlock/getTexNo__12J3DTevBlock2CFUl.s"
}
#pragma pop

/* 80322414-80322428 0014 .text      setTevOrder__12J3DTevBlock2FUl11J3DTevOrder                  Function */
// J3DTevBlock2::setTevOrder(u32, J3DTevOrder)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void setTevOrder__12J3DTevBlock2FUl11J3DTevOrder() {
	nofralloc
#include "_include/J3DGraphBase/J3DMatBlock/setTevOrder__12J3DTevBlock2FUl11J3DTevOrder.s"
}
#pragma pop

/* 80322428-8032243C 0014 .text      setTevOrder__12J3DTevBlock2FUlPC11J3DTevOrder                Function */
// J3DTevBlock2::setTevOrder(u32, const J3DTevOrder*)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void setTevOrder__12J3DTevBlock2FUlPC11J3DTevOrder() {
	nofralloc
#include "_include/J3DGraphBase/J3DMatBlock/setTevOrder__12J3DTevBlock2FUlPC11J3DTevOrder.s"
}
#pragma pop

/* 8032243C-80322450 0014 .text      getTevOrder__12J3DTevBlock2FUl                               Function */
// J3DTevBlock2::getTevOrder(u32)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void getTevOrder__12J3DTevBlock2FUl() {
	nofralloc
#include "_include/J3DGraphBase/J3DMatBlock/getTevOrder__12J3DTevBlock2FUl.s"
}
#pragma pop

/* 80322450-8032247C 002C .text      setTevColor__12J3DTevBlock2FUl13J3DGXColorS10                Function */
// J3DTevBlock2::setTevColor(u32, J3DGXColorS10)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void setTevColor__12J3DTevBlock2FUl13J3DGXColorS10() {
	nofralloc
#include "_include/J3DGraphBase/J3DMatBlock/setTevColor__12J3DTevBlock2FUl13J3DGXColorS10.s"
}
#pragma pop

/* 8032247C-803224A8 002C .text      setTevColor__12J3DTevBlock2FUlPC13J3DGXColorS10              Function */
// J3DTevBlock2::setTevColor(u32, const J3DGXColorS10*)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void setTevColor__12J3DTevBlock2FUlPC13J3DGXColorS10() {
	nofralloc
#include "_include/J3DGraphBase/J3DMatBlock/setTevColor__12J3DTevBlock2FUlPC13J3DGXColorS10.s"
}
#pragma pop

/* 803224A8-803224BC 0014 .text      getTevColor__12J3DTevBlock2FUl                               Function */
// J3DTevBlock2::getTevColor(u32)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void getTevColor__12J3DTevBlock2FUl() {
	nofralloc
#include "_include/J3DGraphBase/J3DMatBlock/getTevColor__12J3DTevBlock2FUl.s"
}
#pragma pop

/* 803224BC-803224E8 002C .text      setTevKColor__12J3DTevBlock2FUl10J3DGXColor                  Function */
// J3DTevBlock2::setTevKColor(u32, J3DGXColor)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void setTevKColor__12J3DTevBlock2FUl10J3DGXColor() {
	nofralloc
#include "_include/J3DGraphBase/J3DMatBlock/setTevKColor__12J3DTevBlock2FUl10J3DGXColor.s"
}
#pragma pop

/* 803224E8-80322514 002C .text      setTevKColor__12J3DTevBlock2FUlPC10J3DGXColor                Function */
// J3DTevBlock2::setTevKColor(u32, const J3DGXColor*)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void setTevKColor__12J3DTevBlock2FUlPC10J3DGXColor() {
	nofralloc
#include "_include/J3DGraphBase/J3DMatBlock/setTevKColor__12J3DTevBlock2FUlPC10J3DGXColor.s"
}
#pragma pop

/* 80322514-80322528 0014 .text      getTevKColor__12J3DTevBlock2FUl                              Function */
// J3DTevBlock2::getTevKColor(u32)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void getTevKColor__12J3DTevBlock2FUl() {
	nofralloc
#include "_include/J3DGraphBase/J3DMatBlock/getTevKColor__12J3DTevBlock2FUl.s"
}
#pragma pop

/* 80322528-80322534 000C .text      setTevKColorSel__12J3DTevBlock2FUlUc                         Function */
// J3DTevBlock2::setTevKColorSel(u32, u8)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void setTevKColorSel__12J3DTevBlock2FUlUc() {
	nofralloc
#include "_include/J3DGraphBase/J3DMatBlock/setTevKColorSel__12J3DTevBlock2FUlUc.s"
}
#pragma pop

/* 80322534-80322544 0010 .text      setTevKColorSel__12J3DTevBlock2FUlPCUc                       Function */
// J3DTevBlock2::setTevKColorSel(u32, const u8*)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void setTevKColorSel__12J3DTevBlock2FUlPCUc() {
	nofralloc
#include "_include/J3DGraphBase/J3DMatBlock/setTevKColorSel__12J3DTevBlock2FUlPCUc.s"
}
#pragma pop

/* 80322544-80322550 000C .text      getTevKColorSel__12J3DTevBlock2FUl                           Function */
// J3DTevBlock2::getTevKColorSel(u32)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void getTevKColorSel__12J3DTevBlock2FUl() {
	nofralloc
#include "_include/J3DGraphBase/J3DMatBlock/getTevKColorSel__12J3DTevBlock2FUl.s"
}
#pragma pop

/* 80322550-8032255C 000C .text      setTevKAlphaSel__12J3DTevBlock2FUlUc                         Function */
// J3DTevBlock2::setTevKAlphaSel(u32, u8)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void setTevKAlphaSel__12J3DTevBlock2FUlUc() {
	nofralloc
#include "_include/J3DGraphBase/J3DMatBlock/setTevKAlphaSel__12J3DTevBlock2FUlUc.s"
}
#pragma pop

/* 8032255C-8032256C 0010 .text      setTevKAlphaSel__12J3DTevBlock2FUlPCUc                       Function */
// J3DTevBlock2::setTevKAlphaSel(u32, const u8*)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void setTevKAlphaSel__12J3DTevBlock2FUlPCUc() {
	nofralloc
#include "_include/J3DGraphBase/J3DMatBlock/setTevKAlphaSel__12J3DTevBlock2FUlPCUc.s"
}
#pragma pop

/* 8032256C-80322578 000C .text      getTevKAlphaSel__12J3DTevBlock2FUl                           Function */
// J3DTevBlock2::getTevKAlphaSel(u32)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void getTevKAlphaSel__12J3DTevBlock2FUl() {
	nofralloc
#include "_include/J3DGraphBase/J3DMatBlock/getTevKAlphaSel__12J3DTevBlock2FUl.s"
}
#pragma pop

/* 80322578-80322580 0008 .text      setTevStageNum__12J3DTevBlock2FUc                            Function */
// J3DTevBlock2::setTevStageNum(u8)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void setTevStageNum__12J3DTevBlock2FUc() {
	nofralloc
#include "_include/J3DGraphBase/J3DMatBlock/setTevStageNum__12J3DTevBlock2FUc.s"
}
#pragma pop

/* 80322580-8032258C 000C .text      setTevStageNum__12J3DTevBlock2FPCUc                          Function */
// J3DTevBlock2::setTevStageNum(const u8*)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void setTevStageNum__12J3DTevBlock2FPCUc() {
	nofralloc
#include "_include/J3DGraphBase/J3DMatBlock/setTevStageNum__12J3DTevBlock2FPCUc.s"
}
#pragma pop

/* 8032258C-80322594 0008 .text      getTevStageNum__12J3DTevBlock2CFv                            FirstParamFunction */
// J3DTevBlock2::getTevStageNum(void) const
u8 getTevStageNum__12J3DTevBlock2CFv(u8* param0) {
	return *(u8*)&param0[52]; /* param0->field_0x34 */
}

/* 80322594-803225D0 003C .text      setTevStage__12J3DTevBlock2FUl11J3DTevStage                  Function */
// J3DTevBlock2::setTevStage(u32, J3DTevStage)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void setTevStage__12J3DTevBlock2FUl11J3DTevStage() {
	nofralloc
#include "_include/J3DGraphBase/J3DMatBlock/setTevStage__12J3DTevBlock2FUl11J3DTevStage.s"
}
#pragma pop

/* 803225D0-8032260C 003C .text      setTevStage__12J3DTevBlock2FUlPC11J3DTevStage                Function */
// J3DTevBlock2::setTevStage(u32, const J3DTevStage*)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void setTevStage__12J3DTevBlock2FUlPC11J3DTevStage() {
	nofralloc
#include "_include/J3DGraphBase/J3DMatBlock/setTevStage__12J3DTevBlock2FUlPC11J3DTevStage.s"
}
#pragma pop

/* 8032260C-80322620 0014 .text      getTevStage__12J3DTevBlock2FUl                               Function */
// J3DTevBlock2::getTevStage(u32)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void getTevStage__12J3DTevBlock2FUl() {
	nofralloc
#include "_include/J3DGraphBase/J3DMatBlock/getTevStage__12J3DTevBlock2FUl.s"
}
#pragma pop

/* 80322620-80322658 0038 .text      setTevSwapModeInfo__12J3DTevBlock2FUl18J3DTevSwapModeInfo    Function */
// J3DTevBlock2::setTevSwapModeInfo(u32, J3DTevSwapModeInfo)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void setTevSwapModeInfo__12J3DTevBlock2FUl18J3DTevSwapModeInfo() {
	nofralloc
#include "_include/J3DGraphBase/J3DMatBlock/setTevSwapModeInfo__12J3DTevBlock2FUl18J3DTevSwapModeInfo.s"
}
#pragma pop

/* 80322658-80322690 0038 .text      setTevSwapModeInfo__12J3DTevBlock2FUlPC18J3DTevSwapModeInfo  Function */
// J3DTevBlock2::setTevSwapModeInfo(u32, const J3DTevSwapModeInfo*)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void setTevSwapModeInfo__12J3DTevBlock2FUlPC18J3DTevSwapModeInfo() {
	nofralloc
#include "_include/J3DGraphBase/J3DMatBlock/setTevSwapModeInfo__12J3DTevBlock2FUlPC18J3DTevSwapModeInfo.s"
}
#pragma pop

/* 80322690-803226A0 0010 .text      setTevSwapModeTable__12J3DTevBlock2FUl19J3DTevSwapModeTable  Function */
// J3DTevBlock2::setTevSwapModeTable(u32, J3DTevSwapModeTable)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void setTevSwapModeTable__12J3DTevBlock2FUl19J3DTevSwapModeTable() {
	nofralloc
#include "_include/J3DGraphBase/J3DMatBlock/setTevSwapModeTable__12J3DTevBlock2FUl19J3DTevSwapModeTable.s"
}
#pragma pop

/* 803226A0-803226B0 0010 .text      setTevSwapModeTable__12J3DTevBlock2FUlPC19J3DTevSwapModeTable Function */
// J3DTevBlock2::setTevSwapModeTable(u32, const J3DTevSwapModeTable*)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void setTevSwapModeTable__12J3DTevBlock2FUlPC19J3DTevSwapModeTable() {
	nofralloc
#include "_include/J3DGraphBase/J3DMatBlock/setTevSwapModeTable__12J3DTevBlock2FUlPC19J3DTevSwapModeTable.s"
}
#pragma pop

/* 803226B0-803226C0 0010 .text      getTevSwapModeTable__12J3DTevBlock2FUl                       Function */
// J3DTevBlock2::getTevSwapModeTable(u32)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void getTevSwapModeTable__12J3DTevBlock2FUl() {
	nofralloc
#include "_include/J3DGraphBase/J3DMatBlock/getTevSwapModeTable__12J3DTevBlock2FUl.s"
}
#pragma pop

/* 803226C0-803226D4 0014 .text      setIndTevStage__12J3DTevBlock2FUl14J3DIndTevStage            Function */
// J3DTevBlock2::setIndTevStage(u32, J3DIndTevStage)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void setIndTevStage__12J3DTevBlock2FUl14J3DIndTevStage() {
	nofralloc
#include "_include/J3DGraphBase/J3DMatBlock/setIndTevStage__12J3DTevBlock2FUl14J3DIndTevStage.s"
}
#pragma pop

/* 803226D4-803226E8 0014 .text      setIndTevStage__12J3DTevBlock2FUlPC14J3DIndTevStage          Function */
// J3DTevBlock2::setIndTevStage(u32, const J3DIndTevStage*)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void setIndTevStage__12J3DTevBlock2FUlPC14J3DIndTevStage() {
	nofralloc
#include "_include/J3DGraphBase/J3DMatBlock/setIndTevStage__12J3DTevBlock2FUlPC14J3DIndTevStage.s"
}
#pragma pop

/* 803226E8-803226FC 0014 .text      getIndTevStage__12J3DTevBlock2FUl                            Function */
// J3DTevBlock2::getIndTevStage(u32)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void getIndTevStage__12J3DTevBlock2FUl() {
	nofralloc
#include "_include/J3DGraphBase/J3DMatBlock/getIndTevStage__12J3DTevBlock2FUl.s"
}
#pragma pop

/* 803226FC-80322704 0008 .text      getTexNoOffset__12J3DTevBlock2CFv                            FirstParamFunction */
// J3DTevBlock2::getTexNoOffset(void) const
u32 getTexNoOffset__12J3DTevBlock2CFv(u8* param0) {
	return *(u32*)&param0[4]; /* param0->field_0x4 */
}

/* 80322704-8032270C 0008 .text      getTevRegOffset__12J3DTevBlock2CFv                           FirstParamFunction */
// J3DTevBlock2::getTevRegOffset(void) const
u32 getTevRegOffset__12J3DTevBlock2CFv(u8* param0) {
	return *(u32*)&param0[104]; /* param0->field_0x68 */
}

/* 8032270C-80322714 0008 .text      setTevRegOffset__12J3DTevBlock2FUl                           Function */
// J3DTevBlock2::setTevRegOffset(u32)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void setTevRegOffset__12J3DTevBlock2FUl() {
	nofralloc
#include "_include/J3DGraphBase/J3DMatBlock/setTevRegOffset__12J3DTevBlock2FUl.s"
}
#pragma pop

/* 80322714-80322770 005C .text      __dt__12J3DTevBlock2Fv                                       Function */
// J3DTevBlock2::~J3DTevBlock2(void)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void __dt__12J3DTevBlock2Fv() {
	nofralloc
#include "_include/J3DGraphBase/J3DMatBlock/__dt__12J3DTevBlock2Fv.s"
}
#pragma pop

/* 80322770-80322774 0004 .text      ptrToIndex__12J3DTevBlock1Fv                                 ReturnFunction */
// J3DTevBlock1::ptrToIndex(void)
void ptrToIndex__12J3DTevBlock1Fv() {
	return;
}

/* 80322774-80322798 0024 .text      indexToPtr__12J3DTevBlock1Fv                                 Function */
// J3DTevBlock1::indexToPtr(void)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void indexToPtr__12J3DTevBlock1Fv() {
	nofralloc
#include "_include/J3DGraphBase/J3DMatBlock/indexToPtr__12J3DTevBlock1Fv.s"
}
#pragma pop

/* 80322798-803227A4 000C .text      getType__12J3DTevBlock1Fv                                    Function */
// J3DTevBlock1::getType(void)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void getType__12J3DTevBlock1Fv() {
	nofralloc
#include "_include/J3DGraphBase/J3DMatBlock/getType__12J3DTevBlock1Fv.s"
}
#pragma pop

/* 803227A4-803227B4 0010 .text      setTexNo__12J3DTevBlock1FUlUs                                Function */
// J3DTevBlock1::setTexNo(u32, u16)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void setTexNo__12J3DTevBlock1FUlUs() {
	nofralloc
#include "_include/J3DGraphBase/J3DMatBlock/setTexNo__12J3DTevBlock1FUlUs.s"
}
#pragma pop

/* 803227B4-803227C8 0014 .text      setTexNo__12J3DTevBlock1FUlPCUs                              Function */
// J3DTevBlock1::setTexNo(u32, const u16*)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void setTexNo__12J3DTevBlock1FUlPCUs() {
	nofralloc
#include "_include/J3DGraphBase/J3DMatBlock/setTexNo__12J3DTevBlock1FUlPCUs.s"
}
#pragma pop

/* 803227C8-803227D8 0010 .text      getTexNo__12J3DTevBlock1CFUl                                 Function */
// J3DTevBlock1::getTexNo(u32) const
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void getTexNo__12J3DTevBlock1CFUl() {
	nofralloc
#include "_include/J3DGraphBase/J3DMatBlock/getTexNo__12J3DTevBlock1CFUl.s"
}
#pragma pop

/* 803227D8-803227EC 0014 .text      setTevOrder__12J3DTevBlock1FUl11J3DTevOrder                  Function */
// J3DTevBlock1::setTevOrder(u32, J3DTevOrder)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void setTevOrder__12J3DTevBlock1FUl11J3DTevOrder() {
	nofralloc
#include "_include/J3DGraphBase/J3DMatBlock/setTevOrder__12J3DTevBlock1FUl11J3DTevOrder.s"
}
#pragma pop

/* 803227EC-80322800 0014 .text      setTevOrder__12J3DTevBlock1FUlPC11J3DTevOrder                Function */
// J3DTevBlock1::setTevOrder(u32, const J3DTevOrder*)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void setTevOrder__12J3DTevBlock1FUlPC11J3DTevOrder() {
	nofralloc
#include "_include/J3DGraphBase/J3DMatBlock/setTevOrder__12J3DTevBlock1FUlPC11J3DTevOrder.s"
}
#pragma pop

/* 80322800-80322814 0014 .text      getTevOrder__12J3DTevBlock1FUl                               Function */
// J3DTevBlock1::getTevOrder(u32)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void getTevOrder__12J3DTevBlock1FUl() {
	nofralloc
#include "_include/J3DGraphBase/J3DMatBlock/getTevOrder__12J3DTevBlock1FUl.s"
}
#pragma pop

/* 80322814-80322818 0004 .text      setTevStageNum__12J3DTevBlock1FUc                            ReturnFunction */
// J3DTevBlock1::setTevStageNum(u8)
void setTevStageNum__12J3DTevBlock1FUc() {
	return;
}

/* 80322818-8032281C 0004 .text      setTevStageNum__12J3DTevBlock1FPCUc                          ReturnFunction */
// J3DTevBlock1::setTevStageNum(const u8*)
void setTevStageNum__12J3DTevBlock1FPCUc() {
	return;
}

/* 8032281C-80322824 0008 .text      getTevStageNum__12J3DTevBlock1CFv                            ReturnIntegerFunction */
// J3DTevBlock1::getTevStageNum(void) const
int getTevStageNum__12J3DTevBlock1CFv() {
	return 1;
}

/* 80322824-80322860 003C .text      setTevStage__12J3DTevBlock1FUl11J3DTevStage                  Function */
// J3DTevBlock1::setTevStage(u32, J3DTevStage)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void setTevStage__12J3DTevBlock1FUl11J3DTevStage() {
	nofralloc
#include "_include/J3DGraphBase/J3DMatBlock/setTevStage__12J3DTevBlock1FUl11J3DTevStage.s"
}
#pragma pop

/* 80322860-8032289C 003C .text      setTevStage__12J3DTevBlock1FUlPC11J3DTevStage                Function */
// J3DTevBlock1::setTevStage(u32, const J3DTevStage*)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void setTevStage__12J3DTevBlock1FUlPC11J3DTevStage() {
	nofralloc
#include "_include/J3DGraphBase/J3DMatBlock/setTevStage__12J3DTevBlock1FUlPC11J3DTevStage.s"
}
#pragma pop

/* 8032289C-803228B0 0014 .text      getTevStage__12J3DTevBlock1FUl                               Function */
// J3DTevBlock1::getTevStage(u32)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void getTevStage__12J3DTevBlock1FUl() {
	nofralloc
#include "_include/J3DGraphBase/J3DMatBlock/getTevStage__12J3DTevBlock1FUl.s"
}
#pragma pop

/* 803228B0-803228C4 0014 .text      setIndTevStage__12J3DTevBlock1FUl14J3DIndTevStage            Function */
// J3DTevBlock1::setIndTevStage(u32, J3DIndTevStage)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void setIndTevStage__12J3DTevBlock1FUl14J3DIndTevStage() {
	nofralloc
#include "_include/J3DGraphBase/J3DMatBlock/setIndTevStage__12J3DTevBlock1FUl14J3DIndTevStage.s"
}
#pragma pop

/* 803228C4-803228D8 0014 .text      setIndTevStage__12J3DTevBlock1FUlPC14J3DIndTevStage          Function */
// J3DTevBlock1::setIndTevStage(u32, const J3DIndTevStage*)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void setIndTevStage__12J3DTevBlock1FUlPC14J3DIndTevStage() {
	nofralloc
#include "_include/J3DGraphBase/J3DMatBlock/setIndTevStage__12J3DTevBlock1FUlPC14J3DIndTevStage.s"
}
#pragma pop

/* 803228D8-803228EC 0014 .text      getIndTevStage__12J3DTevBlock1FUl                            Function */
// J3DTevBlock1::getIndTevStage(u32)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void getIndTevStage__12J3DTevBlock1FUl() {
	nofralloc
#include "_include/J3DGraphBase/J3DMatBlock/getIndTevStage__12J3DTevBlock1FUl.s"
}
#pragma pop

/* 803228EC-803228F4 0008 .text      getTexNoOffset__12J3DTevBlock1CFv                            FirstParamFunction */
// J3DTevBlock1::getTexNoOffset(void) const
u32 getTexNoOffset__12J3DTevBlock1CFv(u8* param0) {
	return *(u32*)&param0[4]; /* param0->field_0x4 */
}

/* 803228F4-80322950 005C .text      __dt__12J3DTevBlock1Fv                                       Function */
// J3DTevBlock1::~J3DTevBlock1(void)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void __dt__12J3DTevBlock1Fv() {
	nofralloc
#include "_include/J3DGraphBase/J3DMatBlock/__dt__12J3DTevBlock1Fv.s"
}
#pragma pop

/* 80322950-80322954 0004 .text      setTevKColorSel__11J3DTevBlockFUlPCUc                        ReturnFunction */
// J3DTevBlock::setTevKColorSel(u32, const u8*)
void setTevKColorSel__11J3DTevBlockFUlPCUc() {
	return;
}

/* 80322954-80322958 0004 .text      setTevKAlphaSel__11J3DTevBlockFUlPCUc                        ReturnFunction */
// J3DTevBlock::setTevKAlphaSel(u32, const u8*)
void setTevKAlphaSel__11J3DTevBlockFUlPCUc() {
	return;
}

/* 80322958-8032295C 0004 .text      setTevSwapModeInfo__11J3DTevBlockFUl18J3DTevSwapModeInfo     ReturnFunction */
// J3DTevBlock::setTevSwapModeInfo(u32, J3DTevSwapModeInfo)
void setTevSwapModeInfo__11J3DTevBlockFUl18J3DTevSwapModeInfo() {
	return;
}

/* 8032295C-80322960 0004 .text      setTevSwapModeInfo__11J3DTevBlockFUlPC18J3DTevSwapModeInfo   ReturnFunction */
// J3DTevBlock::setTevSwapModeInfo(u32, const J3DTevSwapModeInfo*)
void setTevSwapModeInfo__11J3DTevBlockFUlPC18J3DTevSwapModeInfo() {
	return;
}

/* 80322960-80322964 0004 .text      setTevSwapModeTable__11J3DTevBlockFUlPC19J3DTevSwapModeTable ReturnFunction */
// J3DTevBlock::setTevSwapModeTable(u32, const J3DTevSwapModeTable*)
void setTevSwapModeTable__11J3DTevBlockFUlPC19J3DTevSwapModeTable() {
	return;
}

/* 80322964-8032296C 0008 .text      getTevRegOffset__11J3DTevBlockCFv                            ReturnIntegerFunction */
// J3DTevBlock::getTevRegOffset(void) const
int getTevRegOffset__11J3DTevBlockCFv() {
	return 0;
}

/* 8032296C-80322970 0004 .text      setTevRegOffset__11J3DTevBlockFUl                            ReturnFunction */
// J3DTevBlock::setTevRegOffset(u32)
void setTevRegOffset__11J3DTevBlockFUl() {
	return;
}

/* 80322970-80322974 0004 .text      load__18J3DTevBlockPatchedFv                                 ReturnFunction */
// J3DTevBlockPatched::load(void)
void load__18J3DTevBlockPatchedFv() {
	return;
}

/* 80322974-80322998 0024 .text      indexToPtr__18J3DTevBlockPatchedFv                           Function */
// J3DTevBlockPatched::indexToPtr(void)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void indexToPtr__18J3DTevBlockPatchedFv() {
	nofralloc
#include "_include/J3DGraphBase/J3DMatBlock/indexToPtr__18J3DTevBlockPatchedFv.s"
}
#pragma pop

/* 80322998-803229A4 000C .text      getType__18J3DTevBlockPatchedFv                              Function */
// J3DTevBlockPatched::getType(void)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void getType__18J3DTevBlockPatchedFv() {
	nofralloc
#include "_include/J3DGraphBase/J3DMatBlock/getType__18J3DTevBlockPatchedFv.s"
}
#pragma pop

/* 803229A4-803229AC 0008 .text      setTevStageNum__18J3DTevBlockPatchedFUc                      Function */
// J3DTevBlockPatched::setTevStageNum(u8)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void setTevStageNum__18J3DTevBlockPatchedFUc() {
	nofralloc
#include "_include/J3DGraphBase/J3DMatBlock/setTevStageNum__18J3DTevBlockPatchedFUc.s"
}
#pragma pop

/* 803229AC-803229B8 000C .text      setTevStageNum__18J3DTevBlockPatchedFPCUc                    Function */
// J3DTevBlockPatched::setTevStageNum(const u8*)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void setTevStageNum__18J3DTevBlockPatchedFPCUc() {
	nofralloc
#include "_include/J3DGraphBase/J3DMatBlock/setTevStageNum__18J3DTevBlockPatchedFPCUc.s"
}
#pragma pop

/* 803229B8-803229C0 0008 .text      getTevStageNum__18J3DTevBlockPatchedCFv                      FirstParamFunction */
// J3DTevBlockPatched::getTevStageNum(void) const
u8 getTevStageNum__18J3DTevBlockPatchedCFv(u8* param0) {
	return *(u8*)&param0[208]; /* param0->field_0xd0 */
}

/* 803229C0-803229D0 0010 .text      setTexNo__18J3DTevBlockPatchedFUlUs                          Function */
// J3DTevBlockPatched::setTexNo(u32, u16)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void setTexNo__18J3DTevBlockPatchedFUlUs() {
	nofralloc
#include "_include/J3DGraphBase/J3DMatBlock/setTexNo__18J3DTevBlockPatchedFUlUs.s"
}
#pragma pop

/* 803229D0-803229E4 0014 .text      setTexNo__18J3DTevBlockPatchedFUlPCUs                        Function */
// J3DTevBlockPatched::setTexNo(u32, const u16*)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void setTexNo__18J3DTevBlockPatchedFUlPCUs() {
	nofralloc
#include "_include/J3DGraphBase/J3DMatBlock/setTexNo__18J3DTevBlockPatchedFUlPCUs.s"
}
#pragma pop

/* 803229E4-803229F4 0010 .text      getTexNo__18J3DTevBlockPatchedCFUl                           Function */
// J3DTevBlockPatched::getTexNo(u32) const
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void getTexNo__18J3DTevBlockPatchedCFUl() {
	nofralloc
#include "_include/J3DGraphBase/J3DMatBlock/getTexNo__18J3DTevBlockPatchedCFUl.s"
}
#pragma pop

/* 803229F4-80322A08 0014 .text      setTevOrder__18J3DTevBlockPatchedFUl11J3DTevOrder            Function */
// J3DTevBlockPatched::setTevOrder(u32, J3DTevOrder)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void setTevOrder__18J3DTevBlockPatchedFUl11J3DTevOrder() {
	nofralloc
#include "_include/J3DGraphBase/J3DMatBlock/setTevOrder__18J3DTevBlockPatchedFUl11J3DTevOrder.s"
}
#pragma pop

/* 80322A08-80322A1C 0014 .text      setTevOrder__18J3DTevBlockPatchedFUlPC11J3DTevOrder          Function */
// J3DTevBlockPatched::setTevOrder(u32, const J3DTevOrder*)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void setTevOrder__18J3DTevBlockPatchedFUlPC11J3DTevOrder() {
	nofralloc
#include "_include/J3DGraphBase/J3DMatBlock/setTevOrder__18J3DTevBlockPatchedFUlPC11J3DTevOrder.s"
}
#pragma pop

/* 80322A1C-80322A30 0014 .text      getTevOrder__18J3DTevBlockPatchedFUl                         Function */
// J3DTevBlockPatched::getTevOrder(u32)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void getTevOrder__18J3DTevBlockPatchedFUl() {
	nofralloc
#include "_include/J3DGraphBase/J3DMatBlock/getTevOrder__18J3DTevBlockPatchedFUl.s"
}
#pragma pop

/* 80322A30-80322A6C 003C .text      setTevStage__18J3DTevBlockPatchedFUl11J3DTevStage            Function */
// J3DTevBlockPatched::setTevStage(u32, J3DTevStage)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void setTevStage__18J3DTevBlockPatchedFUl11J3DTevStage() {
	nofralloc
#include "_include/J3DGraphBase/J3DMatBlock/setTevStage__18J3DTevBlockPatchedFUl11J3DTevStage.s"
}
#pragma pop

/* 80322A6C-80322AA8 003C .text      setTevStage__18J3DTevBlockPatchedFUlPC11J3DTevStage          Function */
// J3DTevBlockPatched::setTevStage(u32, const J3DTevStage*)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void setTevStage__18J3DTevBlockPatchedFUlPC11J3DTevStage() {
	nofralloc
#include "_include/J3DGraphBase/J3DMatBlock/setTevStage__18J3DTevBlockPatchedFUlPC11J3DTevStage.s"
}
#pragma pop

/* 80322AA8-80322ABC 0014 .text      getTevStage__18J3DTevBlockPatchedFUl                         Function */
// J3DTevBlockPatched::getTevStage(u32)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void getTevStage__18J3DTevBlockPatchedFUl() {
	nofralloc
#include "_include/J3DGraphBase/J3DMatBlock/getTevStage__18J3DTevBlockPatchedFUl.s"
}
#pragma pop

/* 80322ABC-80322AD0 0014 .text      setIndTevStage__18J3DTevBlockPatchedFUl14J3DIndTevStage      Function */
// J3DTevBlockPatched::setIndTevStage(u32, J3DIndTevStage)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void setIndTevStage__18J3DTevBlockPatchedFUl14J3DIndTevStage() {
	nofralloc
#include "_include/J3DGraphBase/J3DMatBlock/setIndTevStage__18J3DTevBlockPatchedFUl14J3DIndTevStage.s"
}
#pragma pop

/* 80322AD0-80322AE4 0014 .text      setIndTevStage__18J3DTevBlockPatchedFUlPC14J3DIndTevStage    Function */
// J3DTevBlockPatched::setIndTevStage(u32, const J3DIndTevStage*)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void setIndTevStage__18J3DTevBlockPatchedFUlPC14J3DIndTevStage() {
	nofralloc
#include "_include/J3DGraphBase/J3DMatBlock/setIndTevStage__18J3DTevBlockPatchedFUlPC14J3DIndTevStage.s"
}
#pragma pop

/* 80322AE4-80322AF8 0014 .text      getIndTevStage__18J3DTevBlockPatchedFUl                      Function */
// J3DTevBlockPatched::getIndTevStage(u32)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void getIndTevStage__18J3DTevBlockPatchedFUl() {
	nofralloc
#include "_include/J3DGraphBase/J3DMatBlock/getIndTevStage__18J3DTevBlockPatchedFUl.s"
}
#pragma pop

/* 80322AF8-80322B24 002C .text      setTevColor__18J3DTevBlockPatchedFUl13J3DGXColorS10          Function */
// J3DTevBlockPatched::setTevColor(u32, J3DGXColorS10)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void setTevColor__18J3DTevBlockPatchedFUl13J3DGXColorS10() {
	nofralloc
#include "_include/J3DGraphBase/J3DMatBlock/setTevColor__18J3DTevBlockPatchedFUl13J3DGXColorS10.s"
}
#pragma pop

/* 80322B24-80322B50 002C .text      setTevColor__18J3DTevBlockPatchedFUlPC13J3DGXColorS10        Function */
// J3DTevBlockPatched::setTevColor(u32, const J3DGXColorS10*)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void setTevColor__18J3DTevBlockPatchedFUlPC13J3DGXColorS10() {
	nofralloc
#include "_include/J3DGraphBase/J3DMatBlock/setTevColor__18J3DTevBlockPatchedFUlPC13J3DGXColorS10.s"
}
#pragma pop

/* 80322B50-80322B64 0014 .text      getTevColor__18J3DTevBlockPatchedFUl                         Function */
// J3DTevBlockPatched::getTevColor(u32)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void getTevColor__18J3DTevBlockPatchedFUl() {
	nofralloc
#include "_include/J3DGraphBase/J3DMatBlock/getTevColor__18J3DTevBlockPatchedFUl.s"
}
#pragma pop

/* 80322B64-80322B90 002C .text      setTevKColor__18J3DTevBlockPatchedFUl10J3DGXColor            Function */
// J3DTevBlockPatched::setTevKColor(u32, J3DGXColor)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void setTevKColor__18J3DTevBlockPatchedFUl10J3DGXColor() {
	nofralloc
#include "_include/J3DGraphBase/J3DMatBlock/setTevKColor__18J3DTevBlockPatchedFUl10J3DGXColor.s"
}
#pragma pop

/* 80322B90-80322BBC 002C .text      setTevKColor__18J3DTevBlockPatchedFUlPC10J3DGXColor          Function */
// J3DTevBlockPatched::setTevKColor(u32, const J3DGXColor*)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void setTevKColor__18J3DTevBlockPatchedFUlPC10J3DGXColor() {
	nofralloc
#include "_include/J3DGraphBase/J3DMatBlock/setTevKColor__18J3DTevBlockPatchedFUlPC10J3DGXColor.s"
}
#pragma pop

/* 80322BBC-80322BD0 0014 .text      getTevKColor__18J3DTevBlockPatchedFUl                        Function */
// J3DTevBlockPatched::getTevKColor(u32)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void getTevKColor__18J3DTevBlockPatchedFUl() {
	nofralloc
#include "_include/J3DGraphBase/J3DMatBlock/getTevKColor__18J3DTevBlockPatchedFUl.s"
}
#pragma pop

/* 80322BD0-80322BDC 000C .text      setTevKColorSel__18J3DTevBlockPatchedFUlUc                   Function */
// J3DTevBlockPatched::setTevKColorSel(u32, u8)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void setTevKColorSel__18J3DTevBlockPatchedFUlUc() {
	nofralloc
#include "_include/J3DGraphBase/J3DMatBlock/setTevKColorSel__18J3DTevBlockPatchedFUlUc.s"
}
#pragma pop

/* 80322BDC-80322BEC 0010 .text      setTevKColorSel__18J3DTevBlockPatchedFUlPCUc                 Function */
// J3DTevBlockPatched::setTevKColorSel(u32, const u8*)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void setTevKColorSel__18J3DTevBlockPatchedFUlPCUc() {
	nofralloc
#include "_include/J3DGraphBase/J3DMatBlock/setTevKColorSel__18J3DTevBlockPatchedFUlPCUc.s"
}
#pragma pop

/* 80322BEC-80322BF8 000C .text      getTevKColorSel__18J3DTevBlockPatchedFUl                     Function */
// J3DTevBlockPatched::getTevKColorSel(u32)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void getTevKColorSel__18J3DTevBlockPatchedFUl() {
	nofralloc
#include "_include/J3DGraphBase/J3DMatBlock/getTevKColorSel__18J3DTevBlockPatchedFUl.s"
}
#pragma pop

/* 80322BF8-80322C00 0008 .text      getTexNoOffset__18J3DTevBlockPatchedCFv                      FirstParamFunction */
// J3DTevBlockPatched::getTexNoOffset(void) const
u32 getTexNoOffset__18J3DTevBlockPatchedCFv(u8* param0) {
	return *(u32*)&param0[4]; /* param0->field_0x4 */
}

/* 80322C00-80322C08 0008 .text      getTevRegOffset__18J3DTevBlockPatchedCFv                     FirstParamFunction */
// J3DTevBlockPatched::getTevRegOffset(void) const
u32 getTevRegOffset__18J3DTevBlockPatchedCFv(u8* param0) {
	return *(u32*)&param0[212]; /* param0->field_0xd4 */
}

/* 80322C08-80322C10 0008 .text      setTevRegOffset__18J3DTevBlockPatchedFUl                     Function */
// J3DTevBlockPatched::setTevRegOffset(u32)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void setTevRegOffset__18J3DTevBlockPatchedFUl() {
	nofralloc
#include "_include/J3DGraphBase/J3DMatBlock/setTevRegOffset__18J3DTevBlockPatchedFUl.s"
}
#pragma pop

/* 80322C10-80322C6C 005C .text      __dt__18J3DTevBlockPatchedFv                                 Function */
// J3DTevBlockPatched::~J3DTevBlockPatched(void)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void __dt__18J3DTevBlockPatchedFv() {
	nofralloc
#include "_include/J3DGraphBase/J3DMatBlock/__dt__18J3DTevBlockPatchedFv.s"
}
#pragma pop

/* 80322C6C-80322C78 000C .text      getType__19J3DTexGenBlockBasicFv                             Function */
// J3DTexGenBlockBasic::getType(void)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void getType__19J3DTexGenBlockBasicFv() {
	nofralloc
#include "_include/J3DGraphBase/J3DMatBlock/getType__19J3DTexGenBlockBasicFv.s"
}
#pragma pop

/* 80322C78-80322C9C 0024 .text      setNBTScale__19J3DTexGenBlockBasicF11J3DNBTScale             Function */
// J3DTexGenBlockBasic::setNBTScale(J3DNBTScale)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void setNBTScale__19J3DTexGenBlockBasicF11J3DNBTScale() {
	nofralloc
#include "_include/J3DGraphBase/J3DMatBlock/setNBTScale__19J3DTexGenBlockBasicF11J3DNBTScale.s"
}
#pragma pop

/* 80322C9C-80322CC0 0024 .text      setNBTScale__19J3DTexGenBlockBasicFPC11J3DNBTScale           Function */
// J3DTexGenBlockBasic::setNBTScale(const J3DNBTScale*)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void setNBTScale__19J3DTexGenBlockBasicFPC11J3DNBTScale() {
	nofralloc
#include "_include/J3DGraphBase/J3DMatBlock/setNBTScale__19J3DTexGenBlockBasicFPC11J3DNBTScale.s"
}
#pragma pop

/* 80322CC0-80322CC8 0008 .text      getNBTScale__19J3DTexGenBlockBasicFv                         FirstParamFunction */
// J3DTexGenBlockBasic::getNBTScale(void)
u8* getNBTScale__19J3DTexGenBlockBasicFv(u8* param0) {
	return (u8*)&param0[92]; /* param0->field_0x5c */
}

/* 80322CC8-80322D34 006C .text      __dt__19J3DTexGenBlockBasicFv                                Function */
// J3DTexGenBlockBasic::~J3DTexGenBlockBasic(void)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void __dt__19J3DTexGenBlockBasicFv() {
	nofralloc
#include "_include/J3DGraphBase/J3DMatBlock/__dt__19J3DTexGenBlockBasicFv.s"
}
#pragma pop

/* 80322D34-80322D3C 0008 .text      setTexGenNum__21J3DTexGenBlockPatchedFUl                     Function */
// J3DTexGenBlockPatched::setTexGenNum(u32)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void setTexGenNum__21J3DTexGenBlockPatchedFUl() {
	nofralloc
#include "_include/J3DGraphBase/J3DMatBlock/setTexGenNum__21J3DTexGenBlockPatchedFUl.s"
}
#pragma pop

/* 80322D3C-80322D48 000C .text      setTexGenNum__21J3DTexGenBlockPatchedFPCUl                   Function */
// J3DTexGenBlockPatched::setTexGenNum(const u32*)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void setTexGenNum__21J3DTexGenBlockPatchedFPCUl() {
	nofralloc
#include "_include/J3DGraphBase/J3DMatBlock/setTexGenNum__21J3DTexGenBlockPatchedFPCUl.s"
}
#pragma pop

/* 80322D48-80322D50 0008 .text      getTexGenNum__21J3DTexGenBlockPatchedCFv                     FirstParamFunction */
// J3DTexGenBlockPatched::getTexGenNum(void) const
u32 getTexGenNum__21J3DTexGenBlockPatchedCFv(u8* param0) {
	return *(u32*)&param0[4]; /* param0->field_0x4 */
}

/* 80322D50-80322D64 0014 .text      setTexCoord__21J3DTexGenBlockPatchedFUlPC11J3DTexCoord       Function */
// J3DTexGenBlockPatched::setTexCoord(u32, const J3DTexCoord*)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void setTexCoord__21J3DTexGenBlockPatchedFUlPC11J3DTexCoord() {
	nofralloc
#include "_include/J3DGraphBase/J3DMatBlock/setTexCoord__21J3DTexGenBlockPatchedFUlPC11J3DTexCoord.s"
}
#pragma pop

/* 80322D64-80322D78 0014 .text      getTexCoord__21J3DTexGenBlockPatchedFUl                      Function */
// J3DTexGenBlockPatched::getTexCoord(u32)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void getTexCoord__21J3DTexGenBlockPatchedFUl() {
	nofralloc
#include "_include/J3DGraphBase/J3DMatBlock/getTexCoord__21J3DTexGenBlockPatchedFUl.s"
}
#pragma pop

/* 80322D78-80322D88 0010 .text      setTexMtx__21J3DTexGenBlockPatchedFUlP9J3DTexMtx             Function */
// J3DTexGenBlockPatched::setTexMtx(u32, J3DTexMtx*)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void setTexMtx__21J3DTexGenBlockPatchedFUlP9J3DTexMtx() {
	nofralloc
#include "_include/J3DGraphBase/J3DMatBlock/setTexMtx__21J3DTexGenBlockPatchedFUlP9J3DTexMtx.s"
}
#pragma pop

/* 80322D88-80322D98 0010 .text      getTexMtx__21J3DTexGenBlockPatchedFUl                        Function */
// J3DTexGenBlockPatched::getTexMtx(u32)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void getTexMtx__21J3DTexGenBlockPatchedFUl() {
	nofralloc
#include "_include/J3DGraphBase/J3DMatBlock/getTexMtx__21J3DTexGenBlockPatchedFUl.s"
}
#pragma pop

/* 80322D98-80322DA0 0008 .text      getTexMtxOffset__21J3DTexGenBlockPatchedCFv                  FirstParamFunction */
// J3DTexGenBlockPatched::getTexMtxOffset(void) const
u32 getTexMtxOffset__21J3DTexGenBlockPatchedCFv(u8* param0) {
	return *(u32*)&param0[88]; /* param0->field_0x58 */
}

/* 80322DA0-80322DA8 0008 .text      setTexMtxOffset__21J3DTexGenBlockPatchedFUl                  Function */
// J3DTexGenBlockPatched::setTexMtxOffset(u32)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void setTexMtxOffset__21J3DTexGenBlockPatchedFUl() {
	nofralloc
#include "_include/J3DGraphBase/J3DMatBlock/setTexMtxOffset__21J3DTexGenBlockPatchedFUl.s"
}
#pragma pop

/* 80322DA8-80322DB4 000C .text      getType__15J3DTexGenBlock4Fv                                 Function */
// J3DTexGenBlock4::getType(void)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void getType__15J3DTexGenBlock4Fv() {
	nofralloc
#include "_include/J3DGraphBase/J3DMatBlock/getType__15J3DTexGenBlock4Fv.s"
}
#pragma pop

/* 80322DB4-80322DD8 0024 .text      setNBTScale__15J3DTexGenBlock4F11J3DNBTScale                 Function */
// J3DTexGenBlock4::setNBTScale(J3DNBTScale)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void setNBTScale__15J3DTexGenBlock4F11J3DNBTScale() {
	nofralloc
#include "_include/J3DGraphBase/J3DMatBlock/setNBTScale__15J3DTexGenBlock4F11J3DNBTScale.s"
}
#pragma pop

/* 80322DD8-80322DFC 0024 .text      setNBTScale__15J3DTexGenBlock4FPC11J3DNBTScale               Function */
// J3DTexGenBlock4::setNBTScale(const J3DNBTScale*)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void setNBTScale__15J3DTexGenBlock4FPC11J3DNBTScale() {
	nofralloc
#include "_include/J3DGraphBase/J3DMatBlock/setNBTScale__15J3DTexGenBlock4FPC11J3DNBTScale.s"
}
#pragma pop

/* 80322DFC-80322E04 0008 .text      getNBTScale__15J3DTexGenBlock4Fv                             FirstParamFunction */
// J3DTexGenBlock4::getNBTScale(void)
u8* getNBTScale__15J3DTexGenBlock4Fv(u8* param0) {
	return (u8*)&param0[92]; /* param0->field_0x5c */
}

/* 80322E04-80322E70 006C .text      __dt__15J3DTexGenBlock4Fv                                    Function */
// J3DTexGenBlock4::~J3DTexGenBlock4(void)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void __dt__15J3DTexGenBlock4Fv() {
	nofralloc
#include "_include/J3DGraphBase/J3DMatBlock/__dt__15J3DTexGenBlock4Fv.s"
}
#pragma pop

/* 80322E70-80322E74 0004 .text      load__21J3DTexGenBlockPatchedFv                              ReturnFunction */
// J3DTexGenBlockPatched::load(void)
void load__21J3DTexGenBlockPatchedFv() {
	return;
}

/* 80322E74-80322E80 000C .text      getType__21J3DTexGenBlockPatchedFv                           Function */
// J3DTexGenBlockPatched::getType(void)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void getType__21J3DTexGenBlockPatchedFv() {
	nofralloc
#include "_include/J3DGraphBase/J3DMatBlock/getType__21J3DTexGenBlockPatchedFv.s"
}
#pragma pop

/* 80322E80-80322E8C 000C .text      getType__20J3DColorBlockLightOnFv                            Function */
// J3DColorBlockLightOn::getType(void)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void getType__20J3DColorBlockLightOnFv() {
	nofralloc
#include "_include/J3DGraphBase/J3DMatBlock/getType__20J3DColorBlockLightOnFv.s"
}
#pragma pop

/* 80322E8C-80322EB8 002C .text      setMatColor__20J3DColorBlockLightOnFUl10J3DGXColor           Function */
// J3DColorBlockLightOn::setMatColor(u32, J3DGXColor)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void setMatColor__20J3DColorBlockLightOnFUl10J3DGXColor() {
	nofralloc
#include "_include/J3DGraphBase/J3DMatBlock/setMatColor__20J3DColorBlockLightOnFUl10J3DGXColor.s"
}
#pragma pop

/* 80322EB8-80322EE4 002C .text      setMatColor__20J3DColorBlockLightOnFUlPC10J3DGXColor         Function */
// J3DColorBlockLightOn::setMatColor(u32, const J3DGXColor*)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void setMatColor__20J3DColorBlockLightOnFUlPC10J3DGXColor() {
	nofralloc
#include "_include/J3DGraphBase/J3DMatBlock/setMatColor__20J3DColorBlockLightOnFUlPC10J3DGXColor.s"
}
#pragma pop

/* 80322EE4-80322EF8 0014 .text      getMatColor__20J3DColorBlockLightOnFUl                       Function */
// J3DColorBlockLightOn::getMatColor(u32)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void getMatColor__20J3DColorBlockLightOnFUl() {
	nofralloc
#include "_include/J3DGraphBase/J3DMatBlock/getMatColor__20J3DColorBlockLightOnFUl.s"
}
#pragma pop

/* 80322EF8-80322F24 002C .text      setAmbColor__20J3DColorBlockLightOnFUl10J3DGXColor           Function */
// J3DColorBlockLightOn::setAmbColor(u32, J3DGXColor)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void setAmbColor__20J3DColorBlockLightOnFUl10J3DGXColor() {
	nofralloc
#include "_include/J3DGraphBase/J3DMatBlock/setAmbColor__20J3DColorBlockLightOnFUl10J3DGXColor.s"
}
#pragma pop

/* 80322F24-80322F50 002C .text      setAmbColor__20J3DColorBlockLightOnFUlPC10J3DGXColor         Function */
// J3DColorBlockLightOn::setAmbColor(u32, const J3DGXColor*)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void setAmbColor__20J3DColorBlockLightOnFUlPC10J3DGXColor() {
	nofralloc
#include "_include/J3DGraphBase/J3DMatBlock/setAmbColor__20J3DColorBlockLightOnFUlPC10J3DGXColor.s"
}
#pragma pop

/* 80322F50-80322F64 0014 .text      getAmbColor__20J3DColorBlockLightOnFUl                       Function */
// J3DColorBlockLightOn::getAmbColor(u32)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void getAmbColor__20J3DColorBlockLightOnFUl() {
	nofralloc
#include "_include/J3DGraphBase/J3DMatBlock/getAmbColor__20J3DColorBlockLightOnFUl.s"
}
#pragma pop

/* 80322F64-80322F70 000C .text      setColorChanNum__20J3DColorBlockLightOnFPCUc                 Function */
// J3DColorBlockLightOn::setColorChanNum(const u8*)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void setColorChanNum__20J3DColorBlockLightOnFPCUc() {
	nofralloc
#include "_include/J3DGraphBase/J3DMatBlock/setColorChanNum__20J3DColorBlockLightOnFPCUc.s"
}
#pragma pop

/* 80322F70-80322F78 0008 .text      setColorChanNum__20J3DColorBlockLightOnFUc                   Function */
// J3DColorBlockLightOn::setColorChanNum(u8)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void setColorChanNum__20J3DColorBlockLightOnFUc() {
	nofralloc
#include "_include/J3DGraphBase/J3DMatBlock/setColorChanNum__20J3DColorBlockLightOnFUc.s"
}
#pragma pop

/* 80322F78-80322F80 0008 .text      getColorChanNum__20J3DColorBlockLightOnCFv                   FirstParamFunction */
// J3DColorBlockLightOn::getColorChanNum(void) const
u8 getColorChanNum__20J3DColorBlockLightOnCFv(u8* param0) {
	return *(u8*)&param0[20]; /* param0->field_0x14 */
}

/* 80322F80-80322F94 0014 .text      setColorChan__20J3DColorBlockLightOnFUlPC12J3DColorChan      Function */
// J3DColorBlockLightOn::setColorChan(u32, const J3DColorChan*)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void setColorChan__20J3DColorBlockLightOnFUlPC12J3DColorChan() {
	nofralloc
#include "_include/J3DGraphBase/J3DMatBlock/setColorChan__20J3DColorBlockLightOnFUlPC12J3DColorChan.s"
}
#pragma pop

/* 80322F94-80322FA8 0014 .text      setColorChan__20J3DColorBlockLightOnFUlRC12J3DColorChan      Function */
// J3DColorBlockLightOn::setColorChan(u32, const J3DColorChan&)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void setColorChan__20J3DColorBlockLightOnFUlRC12J3DColorChan() {
	nofralloc
#include "_include/J3DGraphBase/J3DMatBlock/setColorChan__20J3DColorBlockLightOnFUlRC12J3DColorChan.s"
}
#pragma pop

/* 80322FA8-80322FBC 0014 .text      getColorChan__20J3DColorBlockLightOnFUl                      Function */
// J3DColorBlockLightOn::getColorChan(u32)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void getColorChan__20J3DColorBlockLightOnFUl() {
	nofralloc
#include "_include/J3DGraphBase/J3DMatBlock/getColorChan__20J3DColorBlockLightOnFUl.s"
}
#pragma pop

/* 80322FBC-80322FCC 0010 .text      setLight__20J3DColorBlockLightOnFUlP11J3DLightObj            Function */
// J3DColorBlockLightOn::setLight(u32, J3DLightObj*)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void setLight__20J3DColorBlockLightOnFUlP11J3DLightObj() {
	nofralloc
#include "_include/J3DGraphBase/J3DMatBlock/setLight__20J3DColorBlockLightOnFUlP11J3DLightObj.s"
}
#pragma pop

/* 80322FCC-80322FDC 0010 .text      getLight__20J3DColorBlockLightOnFUl                          Function */
// J3DColorBlockLightOn::getLight(u32)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void getLight__20J3DColorBlockLightOnFUl() {
	nofralloc
#include "_include/J3DGraphBase/J3DMatBlock/getLight__20J3DColorBlockLightOnFUl.s"
}
#pragma pop

/* 80322FDC-80322FE4 0008 .text      setCullMode__20J3DColorBlockLightOnFUc                       Function */
// J3DColorBlockLightOn::setCullMode(u8)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void setCullMode__20J3DColorBlockLightOnFUc() {
	nofralloc
#include "_include/J3DGraphBase/J3DMatBlock/setCullMode__20J3DColorBlockLightOnFUc.s"
}
#pragma pop

/* 80322FE4-80322FF0 000C .text      setCullMode__20J3DColorBlockLightOnFPCUc                     Function */
// J3DColorBlockLightOn::setCullMode(const u8*)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void setCullMode__20J3DColorBlockLightOnFPCUc() {
	nofralloc
#include "_include/J3DGraphBase/J3DMatBlock/setCullMode__20J3DColorBlockLightOnFPCUc.s"
}
#pragma pop

/* 80322FF0-80322FF8 0008 .text      getCullMode__20J3DColorBlockLightOnCFv                       FirstParamFunction */
// J3DColorBlockLightOn::getCullMode(void) const
u8 getCullMode__20J3DColorBlockLightOnCFv(u8* param0) {
	return *(u8*)&param0[64]; /* param0->field_0x40 */
}

/* 80322FF8-80323000 0008 .text      getMatColorOffset__20J3DColorBlockLightOnCFv                 FirstParamFunction */
// J3DColorBlockLightOn::getMatColorOffset(void) const
u32 getMatColorOffset__20J3DColorBlockLightOnCFv(u8* param0) {
	return *(u32*)&param0[68]; /* param0->field_0x44 */
}

/* 80323000-80323008 0008 .text      getColorChanOffset__20J3DColorBlockLightOnCFv                FirstParamFunction */
// J3DColorBlockLightOn::getColorChanOffset(void) const
u32 getColorChanOffset__20J3DColorBlockLightOnCFv(u8* param0) {
	return *(u32*)&param0[72]; /* param0->field_0x48 */
}

/* 80323008-80323010 0008 .text      setMatColorOffset__20J3DColorBlockLightOnFUl                 Function */
// J3DColorBlockLightOn::setMatColorOffset(u32)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void setMatColorOffset__20J3DColorBlockLightOnFUl() {
	nofralloc
#include "_include/J3DGraphBase/J3DMatBlock/setMatColorOffset__20J3DColorBlockLightOnFUl.s"
}
#pragma pop

/* 80323010-80323018 0008 .text      setColorChanOffset__20J3DColorBlockLightOnFUl                Function */
// J3DColorBlockLightOn::setColorChanOffset(u32)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void setColorChanOffset__20J3DColorBlockLightOnFUl() {
	nofralloc
#include "_include/J3DGraphBase/J3DMatBlock/setColorChanOffset__20J3DColorBlockLightOnFUl.s"
}
#pragma pop

/* 80323018-80323074 005C .text      __dt__20J3DColorBlockLightOnFv                               Function */
// J3DColorBlockLightOn::~J3DColorBlockLightOn(void)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void __dt__20J3DColorBlockLightOnFv() {
	nofralloc
#include "_include/J3DGraphBase/J3DMatBlock/__dt__20J3DColorBlockLightOnFv.s"
}
#pragma pop

/* 80323074-80323080 000C .text      getType__22J3DColorBlockAmbientOnFv                          Function */
// J3DColorBlockAmbientOn::getType(void)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void getType__22J3DColorBlockAmbientOnFv() {
	nofralloc
#include "_include/J3DGraphBase/J3DMatBlock/getType__22J3DColorBlockAmbientOnFv.s"
}
#pragma pop

/* 80323080-803230AC 002C .text      setAmbColor__22J3DColorBlockAmbientOnFUl10J3DGXColor         Function */
// J3DColorBlockAmbientOn::setAmbColor(u32, J3DGXColor)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void setAmbColor__22J3DColorBlockAmbientOnFUl10J3DGXColor() {
	nofralloc
#include "_include/J3DGraphBase/J3DMatBlock/setAmbColor__22J3DColorBlockAmbientOnFUl10J3DGXColor.s"
}
#pragma pop

/* 803230AC-803230D8 002C .text      setAmbColor__22J3DColorBlockAmbientOnFUlPC10J3DGXColor       Function */
// J3DColorBlockAmbientOn::setAmbColor(u32, const J3DGXColor*)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void setAmbColor__22J3DColorBlockAmbientOnFUlPC10J3DGXColor() {
	nofralloc
#include "_include/J3DGraphBase/J3DMatBlock/setAmbColor__22J3DColorBlockAmbientOnFUlPC10J3DGXColor.s"
}
#pragma pop

/* 803230D8-803230EC 0014 .text      getAmbColor__22J3DColorBlockAmbientOnFUl                     Function */
// J3DColorBlockAmbientOn::getAmbColor(u32)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void getAmbColor__22J3DColorBlockAmbientOnFUl() {
	nofralloc
#include "_include/J3DGraphBase/J3DMatBlock/getAmbColor__22J3DColorBlockAmbientOnFUl.s"
}
#pragma pop

/* 803230EC-80323158 006C .text      __dt__22J3DColorBlockAmbientOnFv                             Function */
// J3DColorBlockAmbientOn::~J3DColorBlockAmbientOn(void)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void __dt__22J3DColorBlockAmbientOnFv() {
	nofralloc
#include "_include/J3DGraphBase/J3DMatBlock/__dt__22J3DColorBlockAmbientOnFv.s"
}
#pragma pop

/* 80323158-80323184 002C .text      setMatColor__21J3DColorBlockLightOffFUl10J3DGXColor          Function */
// J3DColorBlockLightOff::setMatColor(u32, J3DGXColor)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void setMatColor__21J3DColorBlockLightOffFUl10J3DGXColor() {
	nofralloc
#include "_include/J3DGraphBase/J3DMatBlock/setMatColor__21J3DColorBlockLightOffFUl10J3DGXColor.s"
}
#pragma pop

/* 80323184-803231B0 002C .text      setMatColor__21J3DColorBlockLightOffFUlPC10J3DGXColor        Function */
// J3DColorBlockLightOff::setMatColor(u32, const J3DGXColor*)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void setMatColor__21J3DColorBlockLightOffFUlPC10J3DGXColor() {
	nofralloc
#include "_include/J3DGraphBase/J3DMatBlock/setMatColor__21J3DColorBlockLightOffFUlPC10J3DGXColor.s"
}
#pragma pop

/* 803231B0-803231C4 0014 .text      getMatColor__21J3DColorBlockLightOffFUl                      Function */
// J3DColorBlockLightOff::getMatColor(u32)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void getMatColor__21J3DColorBlockLightOffFUl() {
	nofralloc
#include "_include/J3DGraphBase/J3DMatBlock/getMatColor__21J3DColorBlockLightOffFUl.s"
}
#pragma pop

/* 803231C4-803231D0 000C .text      setColorChanNum__21J3DColorBlockLightOffFPCUc                Function */
// J3DColorBlockLightOff::setColorChanNum(const u8*)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void setColorChanNum__21J3DColorBlockLightOffFPCUc() {
	nofralloc
#include "_include/J3DGraphBase/J3DMatBlock/setColorChanNum__21J3DColorBlockLightOffFPCUc.s"
}
#pragma pop

/* 803231D0-803231D8 0008 .text      setColorChanNum__21J3DColorBlockLightOffFUc                  Function */
// J3DColorBlockLightOff::setColorChanNum(u8)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void setColorChanNum__21J3DColorBlockLightOffFUc() {
	nofralloc
#include "_include/J3DGraphBase/J3DMatBlock/setColorChanNum__21J3DColorBlockLightOffFUc.s"
}
#pragma pop

/* 803231D8-803231E0 0008 .text      getColorChanNum__21J3DColorBlockLightOffCFv                  FirstParamFunction */
// J3DColorBlockLightOff::getColorChanNum(void) const
u8 getColorChanNum__21J3DColorBlockLightOffCFv(u8* param0) {
	return *(u8*)&param0[12]; /* param0->field_0xc */
}

/* 803231E0-803231F4 0014 .text      setColorChan__21J3DColorBlockLightOffFUlPC12J3DColorChan     Function */
// J3DColorBlockLightOff::setColorChan(u32, const J3DColorChan*)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void setColorChan__21J3DColorBlockLightOffFUlPC12J3DColorChan() {
	nofralloc
#include "_include/J3DGraphBase/J3DMatBlock/setColorChan__21J3DColorBlockLightOffFUlPC12J3DColorChan.s"
}
#pragma pop

/* 803231F4-80323208 0014 .text      setColorChan__21J3DColorBlockLightOffFUlRC12J3DColorChan     Function */
// J3DColorBlockLightOff::setColorChan(u32, const J3DColorChan&)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void setColorChan__21J3DColorBlockLightOffFUlRC12J3DColorChan() {
	nofralloc
#include "_include/J3DGraphBase/J3DMatBlock/setColorChan__21J3DColorBlockLightOffFUlRC12J3DColorChan.s"
}
#pragma pop

/* 80323208-8032321C 0014 .text      getColorChan__21J3DColorBlockLightOffFUl                     Function */
// J3DColorBlockLightOff::getColorChan(u32)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void getColorChan__21J3DColorBlockLightOffFUl() {
	nofralloc
#include "_include/J3DGraphBase/J3DMatBlock/getColorChan__21J3DColorBlockLightOffFUl.s"
}
#pragma pop

/* 8032321C-80323224 0008 .text      setCullMode__21J3DColorBlockLightOffFUc                      Function */
// J3DColorBlockLightOff::setCullMode(u8)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void setCullMode__21J3DColorBlockLightOffFUc() {
	nofralloc
#include "_include/J3DGraphBase/J3DMatBlock/setCullMode__21J3DColorBlockLightOffFUc.s"
}
#pragma pop

/* 80323224-80323230 000C .text      setCullMode__21J3DColorBlockLightOffFPCUc                    Function */
// J3DColorBlockLightOff::setCullMode(const u8*)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void setCullMode__21J3DColorBlockLightOffFPCUc() {
	nofralloc
#include "_include/J3DGraphBase/J3DMatBlock/setCullMode__21J3DColorBlockLightOffFPCUc.s"
}
#pragma pop

/* 80323230-80323238 0008 .text      getCullMode__21J3DColorBlockLightOffCFv                      FirstParamFunction */
// J3DColorBlockLightOff::getCullMode(void) const
u8 getCullMode__21J3DColorBlockLightOffCFv(u8* param0) {
	return *(u8*)&param0[22]; /* param0->field_0x16 */
}

/* 80323238-80323240 0008 .text      getMatColorOffset__21J3DColorBlockLightOffCFv                FirstParamFunction */
// J3DColorBlockLightOff::getMatColorOffset(void) const
u32 getMatColorOffset__21J3DColorBlockLightOffCFv(u8* param0) {
	return *(u32*)&param0[24]; /* param0->field_0x18 */
}

/* 80323240-80323248 0008 .text      getColorChanOffset__21J3DColorBlockLightOffCFv               FirstParamFunction */
// J3DColorBlockLightOff::getColorChanOffset(void) const
u32 getColorChanOffset__21J3DColorBlockLightOffCFv(u8* param0) {
	return *(u32*)&param0[28]; /* param0->field_0x1c */
}

/* 80323248-80323250 0008 .text      setMatColorOffset__21J3DColorBlockLightOffFUl                Function */
// J3DColorBlockLightOff::setMatColorOffset(u32)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void setMatColorOffset__21J3DColorBlockLightOffFUl() {
	nofralloc
#include "_include/J3DGraphBase/J3DMatBlock/setMatColorOffset__21J3DColorBlockLightOffFUl.s"
}
#pragma pop

/* 80323250-80323258 0008 .text      setColorChanOffset__21J3DColorBlockLightOffFUl               Function */
// J3DColorBlockLightOff::setColorChanOffset(u32)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void setColorChanOffset__21J3DColorBlockLightOffFUl() {
	nofralloc
#include "_include/J3DGraphBase/J3DMatBlock/setColorChanOffset__21J3DColorBlockLightOffFUl.s"
}
#pragma pop

/* 80323258-80323264 000C .text      getType__13J3DPEBlockXluFv                                   Function */
// J3DPEBlockXlu::getType(void)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void getType__13J3DPEBlockXluFv() {
	nofralloc
#include "_include/J3DGraphBase/J3DMatBlock/getType__13J3DPEBlockXluFv.s"
}
#pragma pop

/* 80323264-803232C0 005C .text      __dt__13J3DPEBlockXluFv                                      Function */
// J3DPEBlockXlu::~J3DPEBlockXlu(void)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void __dt__13J3DPEBlockXluFv() {
	nofralloc
#include "_include/J3DGraphBase/J3DMatBlock/__dt__13J3DPEBlockXluFv.s"
}
#pragma pop

/* 803232C0-803232CC 000C .text      getType__17J3DPEBlockTexEdgeFv                               Function */
// J3DPEBlockTexEdge::getType(void)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void getType__17J3DPEBlockTexEdgeFv() {
	nofralloc
#include "_include/J3DGraphBase/J3DMatBlock/getType__17J3DPEBlockTexEdgeFv.s"
}
#pragma pop

/* 803232CC-80323328 005C .text      __dt__17J3DPEBlockTexEdgeFv                                  Function */
// J3DPEBlockTexEdge::~J3DPEBlockTexEdge(void)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void __dt__17J3DPEBlockTexEdgeFv() {
	nofralloc
#include "_include/J3DGraphBase/J3DMatBlock/__dt__17J3DPEBlockTexEdgeFv.s"
}
#pragma pop

/* 80323328-80323334 000C .text      getType__13J3DPEBlockOpaFv                                   Function */
// J3DPEBlockOpa::getType(void)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void getType__13J3DPEBlockOpaFv() {
	nofralloc
#include "_include/J3DGraphBase/J3DMatBlock/getType__13J3DPEBlockOpaFv.s"
}
#pragma pop

/* 80323334-80323390 005C .text      __dt__13J3DPEBlockOpaFv                                      Function */
// J3DPEBlockOpa::~J3DPEBlockOpa(void)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void __dt__13J3DPEBlockOpaFv() {
	nofralloc
#include "_include/J3DGraphBase/J3DMatBlock/__dt__13J3DPEBlockOpaFv.s"
}
#pragma pop

/* 80323390-8032339C 000C .text      getType__15J3DIndBlockFullFv                                 Function */
// J3DIndBlockFull::getType(void)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void getType__15J3DIndBlockFullFv() {
	nofralloc
#include "_include/J3DGraphBase/J3DMatBlock/getType__15J3DIndBlockFullFv.s"
}
#pragma pop

/* 8032339C-803233A4 0008 .text      setIndTexStageNum__15J3DIndBlockFullFUc                      Function */
// J3DIndBlockFull::setIndTexStageNum(u8)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void setIndTexStageNum__15J3DIndBlockFullFUc() {
	nofralloc
#include "_include/J3DGraphBase/J3DMatBlock/setIndTexStageNum__15J3DIndBlockFullFUc.s"
}
#pragma pop

/* 803233A4-803233AC 0008 .text      getIndTexStageNum__15J3DIndBlockFullCFv                      FirstParamFunction */
// J3DIndBlockFull::getIndTexStageNum(void) const
u8 getIndTexStageNum__15J3DIndBlockFullCFv(u8* param0) {
	return *(u8*)&param0[4]; /* param0->field_0x4 */
}

/* 803233AC-803233C0 0014 .text      setIndTexOrder__15J3DIndBlockFullFUl14J3DIndTexOrder         Function */
// J3DIndBlockFull::setIndTexOrder(u32, J3DIndTexOrder)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void setIndTexOrder__15J3DIndBlockFullFUl14J3DIndTexOrder() {
	nofralloc
#include "_include/J3DGraphBase/J3DMatBlock/setIndTexOrder__15J3DIndBlockFullFUl14J3DIndTexOrder.s"
}
#pragma pop

/* 803233C0-803233D4 0014 .text      setIndTexOrder__15J3DIndBlockFullFUlPC14J3DIndTexOrder       Function */
// J3DIndBlockFull::setIndTexOrder(u32, const J3DIndTexOrder*)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void setIndTexOrder__15J3DIndBlockFullFUlPC14J3DIndTexOrder() {
	nofralloc
#include "_include/J3DGraphBase/J3DMatBlock/setIndTexOrder__15J3DIndBlockFullFUlPC14J3DIndTexOrder.s"
}
#pragma pop

/* 803233D4-803233E8 0014 .text      getIndTexOrder__15J3DIndBlockFullFUl                         Function */
// J3DIndBlockFull::getIndTexOrder(u32)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void getIndTexOrder__15J3DIndBlockFullFUl() {
	nofralloc
#include "_include/J3DGraphBase/J3DMatBlock/getIndTexOrder__15J3DIndBlockFullFUl.s"
}
#pragma pop

/* 803233E8-8032341C 0034 .text      setIndTexMtx__15J3DIndBlockFullFUl12J3DIndTexMtx             Function */
// J3DIndBlockFull::setIndTexMtx(u32, J3DIndTexMtx)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void setIndTexMtx__15J3DIndBlockFullFUl12J3DIndTexMtx() {
	nofralloc
#include "_include/J3DGraphBase/J3DMatBlock/setIndTexMtx__15J3DIndBlockFullFUl12J3DIndTexMtx.s"
}
#pragma pop

/* 8032341C-80323450 0034 .text      setIndTexMtx__15J3DIndBlockFullFUlPC12J3DIndTexMtx           Function */
// J3DIndBlockFull::setIndTexMtx(u32, const J3DIndTexMtx*)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void setIndTexMtx__15J3DIndBlockFullFUlPC12J3DIndTexMtx() {
	nofralloc
#include "_include/J3DGraphBase/J3DMatBlock/setIndTexMtx__15J3DIndBlockFullFUlPC12J3DIndTexMtx.s"
}
#pragma pop

/* 80323450-80323464 0014 .text      getIndTexMtx__15J3DIndBlockFullFUl                           Function */
// J3DIndBlockFull::getIndTexMtx(u32)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void getIndTexMtx__15J3DIndBlockFullFUl() {
	nofralloc
#include "_include/J3DGraphBase/J3DMatBlock/getIndTexMtx__15J3DIndBlockFullFUl.s"
}
#pragma pop

/* 80323464-80323478 0014 .text      setIndTexCoordScale__15J3DIndBlockFullFUl19J3DIndTexCoordScale Function */
// J3DIndBlockFull::setIndTexCoordScale(u32, J3DIndTexCoordScale)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void setIndTexCoordScale__15J3DIndBlockFullFUl19J3DIndTexCoordScale() {
	nofralloc
#include "_include/J3DGraphBase/J3DMatBlock/setIndTexCoordScale__15J3DIndBlockFullFUl19J3DIndTexCoordScale.s"
}
#pragma pop

/* 80323478-8032348C 0014 .text      setIndTexCoordScale__15J3DIndBlockFullFUlPC19J3DIndTexCoordScale Function */
// J3DIndBlockFull::setIndTexCoordScale(u32, const J3DIndTexCoordScale*)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void setIndTexCoordScale__15J3DIndBlockFullFUlPC19J3DIndTexCoordScale() {
	nofralloc
#include "_include/J3DGraphBase/J3DMatBlock/setIndTexCoordScale__15J3DIndBlockFullFUlPC19J3DIndTexCoordScale.s"
}
#pragma pop

/* 8032348C-803234A0 0014 .text      getIndTexCoordScale__15J3DIndBlockFullFUl                    Function */
// J3DIndBlockFull::getIndTexCoordScale(u32)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void getIndTexCoordScale__15J3DIndBlockFullFUl() {
	nofralloc
#include "_include/J3DGraphBase/J3DMatBlock/getIndTexCoordScale__15J3DIndBlockFullFUl.s"
}
#pragma pop

/* 803234A0-8032353C 009C .text      __dt__15J3DIndBlockFullFv                                    Function */
// J3DIndBlockFull::~J3DIndBlockFull(void)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void __dt__15J3DIndBlockFullFv() {
	nofralloc
#include "_include/J3DGraphBase/J3DMatBlock/__dt__15J3DIndBlockFullFv.s"
}
#pragma pop

/* 8032353C-80323540 0004 .text      patchTexNo__11J3DTevBlockFv                                  ReturnFunction */
// J3DTevBlock::patchTexNo(void)
void patchTexNo__11J3DTevBlockFv() {
	return;
}

/* 80323540-80323544 0004 .text      patchTevReg__11J3DTevBlockFv                                 ReturnFunction */
// J3DTevBlock::patchTevReg(void)
void patchTevReg__11J3DTevBlockFv() {
	return;
}

/* 80323544-80323548 0004 .text      setTexNo__11J3DTevBlockFUlPCUs                               ReturnFunction */
// J3DTevBlock::setTexNo(u32, const u16*)
void setTexNo__11J3DTevBlockFUlPCUs() {
	return;
}

/* 80323548-8032354C 0004 .text      setTevOrder__11J3DTevBlockFUlPC11J3DTevOrder                 ReturnFunction */
// J3DTevBlock::setTevOrder(u32, const J3DTevOrder*)
void setTevOrder__11J3DTevBlockFUlPC11J3DTevOrder() {
	return;
}

/* 8032354C-80323550 0004 .text      setTevStageNum__11J3DTevBlockFPCUc                           ReturnFunction */
// J3DTevBlock::setTevStageNum(const u8*)
void setTevStageNum__11J3DTevBlockFPCUc() {
	return;
}

/* 80323550-80323554 0004 .text      setTevStage__11J3DTevBlockFUlPC11J3DTevStage                 ReturnFunction */
// J3DTevBlock::setTevStage(u32, const J3DTevStage*)
void setTevStage__11J3DTevBlockFUlPC11J3DTevStage() {
	return;
}

/* 80323554-80323558 0004 .text      setIndTevStage__11J3DTevBlockFUlPC14J3DIndTevStage           ReturnFunction */
// J3DTevBlock::setIndTevStage(u32, const J3DIndTevStage*)
void setIndTevStage__11J3DTevBlockFUlPC14J3DIndTevStage() {
	return;
}

/* 80323558-80323560 0008 .text      getTexNoOffset__11J3DTevBlockCFv                             ReturnIntegerFunction */
// J3DTevBlock::getTexNoOffset(void) const
int getTexNoOffset__11J3DTevBlockCFv() {
	return 0;
}

/* 80323560-8032356C 000C .text      getType__21J3DColorBlockLightOffFv                           Function */
// J3DColorBlockLightOff::getType(void)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void getType__21J3DColorBlockLightOffFv() {
	nofralloc
#include "_include/J3DGraphBase/J3DMatBlock/getType__21J3DColorBlockLightOffFv.s"
}
#pragma pop

/* 8032356C-80323590 0024 .text      __sinit_J3DMatBlock_cpp                                      SInitFunction */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void __sinit_J3DMatBlock_cpp() {
	nofralloc
#include "_include/J3DGraphBase/J3DMatBlock/__sinit_J3DMatBlock_cpp.s"
}
#pragma pop

}

