// 
// Generated By: dol2asm
// 

// 
// Compiler Options: -str pool,readonly,reuse
// 

#include "dolphin/types.h"

// 
// Additional Symbols:
// 

struct JKRHeap;

extern void* operator new(u32, JKRHeap*, int); /* __nw__FUlP7JKRHeapi */
extern void operator delete(void*); /* __dl__FPv */

extern "C" {
/* Function             */
SECTION_INIT extern void memset();
/* Function             */
extern void alloc__7JKRHeapFUliP7JKRHeap();
/* Function             */
extern void alloc__7JKRHeapFUli();
/* Function             */
extern void free__7JKRHeapFPvP7JKRHeap();
/* Function             */
extern void free__7JKRHeapFPv();
/* Function             */
extern void copyMemory__7JKRHeapFPvPvUl();
/* Function             */
extern void __nw__FUlP7JKRHeapi();
/* Function             */
extern void __dl__FPv();
/* Function             */
extern void mainRamToAram__7JKRAramFPUcUlUl15JKRExpandSwitchUlP7JKRHeapiPUl();
/* Function             */
extern void aramToMainRam__7JKRAramFUlPUcUl15JKRExpandSwitchUlP7JKRHeapiPUl();
/* Function             */
extern void alloc__11JKRAramHeapFUlQ211JKRAramHeap10EAllocMode();
/* Function             */
extern void unmount__13JKRFileLoaderFv();
/* Function             */
extern void becomeCurrent__10JKRArchiveFPCc();
/* Function             */
extern void getResource__10JKRArchiveFPCc();
/* Function             */
extern void getResource__10JKRArchiveFUlPCc();
/* Function             */
extern void readResource__10JKRArchiveFPvUlUlPCc();
/* Function             */
extern void readResource__10JKRArchiveFPvUlPCc();
/* Function             */
extern void detachResource__10JKRArchiveFPv();
/* Function             */
extern void getResSize__10JKRArchiveCFPCv();
/* Function             */
extern void countFile__10JKRArchiveCFPCc();
/* Function             */
extern void getFirstFile__10JKRArchiveCFPCc();
/* Function             */
extern void __ct__10JKRArchiveFlQ210JKRArchive10EMountMode();
/* Function             */
extern void __dt__10JKRArchiveFv();
/* Function             */
extern void findPtrResource__10JKRArchiveCFPCv();
/* Function             */
extern void setExpandSize__10JKRArchiveFPQ210JKRArchive12SDIFileEntryUl();
/* Function             */
extern void getExpandSize__10JKRArchiveCFPQ210JKRArchive12SDIFileEntry();
/* Function             */
extern void fetchResource_subroutine__13JKRMemArchiveFPUcUlPUcUli();
/* Function             */
extern void fetchResource_subroutine__14JKRAramArchiveFUlUlPUcUli();
/* Function             */
extern void fetchResource_subroutine__14JKRAramArchiveFUlUlP7JKRHeapiPPUc();
/* Function             */
extern void fetchResource_subroutine__13JKRDvdArchiveFlUlUlPUcUlii();
/* Function             */
extern void fetchResource_subroutine__13JKRDvdArchiveFlUlUlP7JKRHeapiiPPUc();
/* Function             */
extern void __ct__14JKRCompArchiveFlQ210JKRArchive15EMountDirection();
/* Function             */
extern void __dt__14JKRCompArchiveFv();
/* Function             */
extern void open__14JKRCompArchiveFl();
/* Function             */
extern void fetchResource__14JKRCompArchiveFPQ210JKRArchive12SDIFileEntryPUl();
/* Function             */
extern void fetchResource__14JKRCompArchiveFPvUlPQ210JKRArchive12SDIFileEntryPUl();
/* Function             */
extern void removeResourceAll__14JKRCompArchiveFv();
/* Function             */
extern void removeResource__14JKRCompArchiveFPv();
/* Function             */
extern void getExpandedResSize__14JKRCompArchiveCFPCv();
/* Function             */
extern void __ct__10JKRDvdFileFl();
/* Function             */
extern void loadToMainRAM__12JKRDvdRipperFlPUc15JKRExpandSwitchUlP7JKRHeapQ212JKRDvdRipper15EAllocDirectionUlPiPUl();
/* Function             */
extern void loadToAram__16JKRDvdAramRipperFlUl15JKRExpandSwitchUlUlPUl();
/* Function             */
extern void orderSync__9JKRDecompFPUcPUcUlUl();
/* Function             */
extern void prepend__10JSUPtrListFP10JSUPtrLink();
/* Function             */
extern void remove__10JSUPtrListFP10JSUPtrLink();
/* Function             */
extern void panic_f__12JUTExceptionFPCciPCce();
/* Function             */
extern void DCInvalidateRange();
/* Function             */
extern void _savegpr_25();
/* Function             */
extern void _savegpr_26();
/* Function             */
extern void _savegpr_28();
/* Function             */
extern void _savegpr_29();
/* Function             */
extern void _restgpr_25();
/* Function             */
extern void _restgpr_26();
/* Function             */
extern void _restgpr_28();
/* Function             */
extern void _restgpr_29();
/* Function             */
extern void abs();
/* StringBaseData       */
SECTION_RODATA extern const u8 JKRCompArchive__stringBase0[64];
/* VTableData           */
SECTION_DATA extern void* __vt__14JKRCompArchive[20];
/* ZeroInitializedData  */
SECTION_BSS extern u8 sVolumeList__13JKRFileLoader[12];
/* ZeroInitializedData  */
SECTION_SBSS extern u8 sSystemHeap__7JKRHeap[4];
/* ZeroInitializedData  */
SECTION_SBSS extern u8 sAramObject__7JKRAram[4];
}


/* ###################################################################################### */
/*                                        .rodata                                         */
/* ###################################################################################### */

extern "C" {
/* 8039D220-8039D260 0039 .rodata    @stringBase0                                                 StringBaseData */
#pragma push
#pragma force_active on
#pragma section ".dead"
SECTION_DEAD const char* const stringBase_8039D220 = "JKRCompArchive.cpp";
SECTION_DEAD const char* const stringBase_8039D233 = "%s";
SECTION_DEAD const char* const stringBase_8039D236 = "illegal archive.";
SECTION_DEAD const char* const stringBase_8039D247 = "illegal resource.";
/* @stringBase0 padding */
SECTION_DEAD const char* const pad_8039D259 = "\0\0\0\0\0\0";
#pragma pop
}


/* ###################################################################################### */
/*                                         .data                                          */
/* ###################################################################################### */

extern "C" {
/* 803CC3E8-803CC438 0050 .data      __vt__14JKRCompArchive                                       VTableData */
SECTION_DATA void* __vt__14JKRCompArchive[20] = {
	NULL, /* RTTI */
	NULL,
	(void*)__dt__14JKRCompArchiveFv,
	(void*)unmount__13JKRFileLoaderFv,
	(void*)becomeCurrent__10JKRArchiveFPCc,
	(void*)getResource__10JKRArchiveFPCc,
	(void*)getResource__10JKRArchiveFUlPCc,
	(void*)readResource__10JKRArchiveFPvUlPCc,
	(void*)readResource__10JKRArchiveFPvUlUlPCc,
	(void*)removeResourceAll__14JKRCompArchiveFv,
	(void*)removeResource__14JKRCompArchiveFPv,
	(void*)detachResource__10JKRArchiveFPv,
	(void*)getResSize__10JKRArchiveCFPCv,
	(void*)countFile__10JKRArchiveCFPCc,
	(void*)getFirstFile__10JKRArchiveCFPCc,
	(void*)getExpandedResSize__14JKRCompArchiveCFPCv,
	(void*)fetchResource__14JKRCompArchiveFPQ210JKRArchive12SDIFileEntryPUl,
	(void*)fetchResource__14JKRCompArchiveFPvUlPQ210JKRArchive12SDIFileEntryPUl,
	(void*)setExpandSize__10JKRArchiveFPQ210JKRArchive12SDIFileEntryUl,
	(void*)getExpandSize__10JKRArchiveCFPQ210JKRArchive12SDIFileEntry,
};
}


/* ###################################################################################### */
/*                                         .text                                          */
/* ###################################################################################### */

extern "C" {
/* 802D87D4-802D887C 00A8 .text      __ct__14JKRCompArchiveFlQ210JKRArchive15EMountDirection      Function */
// JKRCompArchive::JKRCompArchive(long, JKRArchive::EMountDirection)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void __ct__14JKRCompArchiveFlQ210JKRArchive15EMountDirection() {
	nofralloc
#include "_include/JKernel/JKRCompArchive/__ct__14JKRCompArchiveFlQ210JKRArchive15EMountDirection.s"
}
#pragma pop

/* 802D887C-802D89BC 0140 .text      __dt__14JKRCompArchiveFv                                     Function */
// JKRCompArchive::~JKRCompArchive(void)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void __dt__14JKRCompArchiveFv() {
	nofralloc
#include "_include/JKernel/JKRCompArchive/__dt__14JKRCompArchiveFv.s"
}
#pragma pop

/* 802D89BC-802D8F40 0584 .text      open__14JKRCompArchiveFl                                     Function */
// JKRCompArchive::open(long)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void open__14JKRCompArchiveFl() {
	nofralloc
#include "_include/JKernel/JKRCompArchive/open__14JKRCompArchiveFl.s"
}
#pragma pop

/* 802D8F40-802D90C0 0180 .text      fetchResource__14JKRCompArchiveFPQ210JKRArchive12SDIFileEntryPUl Function */
// JKRCompArchive::fetchResource(JKRArchive::SDIFileEntry, u32*)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void fetchResource__14JKRCompArchiveFPQ210JKRArchive12SDIFileEntryPUl() {
	nofralloc
#include "_include/JKernel/JKRCompArchive/fetchResource__14JKRCompArchiveFPQ210JKRArchive12SDIFileEntryPUl.s"
}
#pragma pop

/* 802D90C0-802D9260 01A0 .text      fetchResource__14JKRCompArchiveFPvUlPQ210JKRArchive12SDIFileEntryPUl Function */
// JKRCompArchive::fetchResource(void*, u32, JKRArchive::SDIFileEntry, u32*)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void fetchResource__14JKRCompArchiveFPvUlPQ210JKRArchive12SDIFileEntryPUl() {
	nofralloc
#include "_include/JKernel/JKRCompArchive/fetchResource__14JKRCompArchiveFPvUlPQ210JKRArchive12SDIFileEntryPUl.s"
}
#pragma pop

/* 802D9260-802D92F4 0094 .text      removeResourceAll__14JKRCompArchiveFv                        Function */
// JKRCompArchive::removeResourceAll(void)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void removeResourceAll__14JKRCompArchiveFv() {
	nofralloc
#include "_include/JKernel/JKRCompArchive/removeResourceAll__14JKRCompArchiveFv.s"
}
#pragma pop

/* 802D92F4-802D9360 006C .text      removeResource__14JKRCompArchiveFPv                          Function */
// JKRCompArchive::removeResource(void*)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void removeResource__14JKRCompArchiveFPv() {
	nofralloc
#include "_include/JKernel/JKRCompArchive/removeResource__14JKRCompArchiveFPv.s"
}
#pragma pop

/* 802D9360-802D9518 01B8 .text      getExpandedResSize__14JKRCompArchiveCFPCv                    Function */
// JKRCompArchive::getExpandedResSize(const void*) const
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void getExpandedResSize__14JKRCompArchiveCFPCv() {
	nofralloc
#include "_include/JKernel/JKRCompArchive/getExpandedResSize__14JKRCompArchiveCFPCv.s"
}
#pragma pop

}

