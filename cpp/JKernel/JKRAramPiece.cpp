// 
// Generated By: dol2asm
// 

// 
// Compiler Options: -str pool,readonly,reuse
// 

#include "dolphin/types.h"

// 
// Additional Symbols:
// 

struct JKRHeap;

extern void* operator new(u32, JKRHeap*, int); /* __nw__FUlP7JKRHeapi */
extern void operator delete(void*); /* __dl__FPv */

extern "C" {
/* Function             */
extern void OSReport();
/* Function             */
extern void free__7JKRHeapFPvP7JKRHeap();
/* Function             */
extern void __nw__FUlP7JKRHeapi();
/* Function             */
extern void __dl__FPv();
/* Function             */
extern void func_802D2DF0();
/* Function             */
extern void prepareCommand__12JKRAramPieceFiUlUlUlP12JKRAramBlockPFUl_v();
/* Function             */
extern void sendCommand__12JKRAramPieceFP12JKRAMCommand();
/* Function             */
extern void orderAsync__12JKRAramPieceFiUlUlUlP12JKRAramBlockPFUl_v();
/* Function             */
extern void sync__12JKRAramPieceFP12JKRAMCommandi();
/* Function             */
extern void orderSync__12JKRAramPieceFiUlUlUlP12JKRAramBlock();
/* Function             */
extern void startDMA__12JKRAramPieceFP12JKRAMCommand();
/* Function             */
extern void doneDMA__12JKRAramPieceFUl();
/* Function             */
extern void __ct__12JKRAMCommandFv();
/* Function             */
extern void __dt__12JKRAMCommandFv();
/* SInitFunction        */
extern void __sinit_JKRAramPiece_cpp();
/* Function             */
extern void sendCommand__9JKRDecompFP16JKRDecompCommand();
/* Function             */
extern void __ct__10JSUPtrLinkFPv();
/* Function             */
extern void __dt__10JSUPtrLinkFv();
/* Function             */
extern void initiate__10JSUPtrListFv();
/* Function             */
extern void append__10JSUPtrListFP10JSUPtrLink();
/* Function             */
extern void remove__10JSUPtrListFP10JSUPtrLink();
/* Function             */
extern void panic_f__12JUTExceptionFPCciPCce();
/* Function             */
extern void DCInvalidateRange();
/* Function             */
extern void DCStoreRange();
/* Function             */
extern void OSInitMessageQueue();
/* Function             */
extern void OSSendMessage();
/* Function             */
extern void OSReceiveMessage();
/* Function             */
extern void OSLockMutex();
/* Function             */
extern void OSUnlockMutex();
/* Function             */
extern void ARQPostRequest();
/* Function             */
extern void __register_global_object();
/* Function             */
extern void _savegpr_25();
/* Function             */
extern void _savegpr_26();
/* Function             */
extern void _savegpr_27();
/* Function             */
extern void _restgpr_25();
/* Function             */
extern void _restgpr_26();
/* Function             */
extern void _restgpr_27();
/* StringBaseData       */
SECTION_RODATA extern const u8 JKRAramPiece__stringBase0[104];
/* InitializedData      */
SECTION_DATA extern u8 sMessageQueue__7JKRAram[32];
/* ZeroInitializedData  */
SECTION_BSS extern u8 JKRAramPiece__LIT_492[12];
/* ZeroInitializedData  */
SECTION_BSS extern u8 sAramPieceCommandList__12JKRAramPiece[12];
/* ZeroInitializedData  */
SECTION_BSS extern u8 mMutex__12JKRAramPiece[24];
/* ZeroInitializedData  */
SECTION_SBSS extern u8 sSystemHeap__7JKRHeap[4];
}


/* ###################################################################################### */
/*                                        .rodata                                         */
/* ###################################################################################### */

extern "C" {
/* 8039D0B8-8039D120 0068 .rodata    @stringBase0                                                 StringBaseData */
#pragma push
#pragma force_active on
#pragma section ".dead"
SECTION_DEAD const char* const stringBase_8039D0B8 = "direction = %x\n";
SECTION_DEAD const char* const stringBase_8039D0C8 = "source = %x\n";
SECTION_DEAD const char* const stringBase_8039D0D5 = "destination = %x\n";
SECTION_DEAD const char* const stringBase_8039D0E7 = "length = %x\n";
SECTION_DEAD const char* const stringBase_8039D0F4 = "JKRAramPiece.cpp";
SECTION_DEAD const char* const stringBase_8039D105 = "%s";
SECTION_DEAD const char* const stringBase_8039D108 = "illegal address. abort.";
#pragma pop
}


/* ###################################################################################### */
/*                                          .bss                                          */
/* ###################################################################################### */

extern "C" {
/* 80434318-80434324 000C .bss       @492                                                         ZeroInitializedData */
SECTION_BSS u8 JKRAramPiece__LIT_492[12];
/* 80434324-80434330 000C .bss       sAramPieceCommandList__12JKRAramPiece                        ZeroInitializedData */
SECTION_BSS u8 sAramPieceCommandList__12JKRAramPiece[12];
/* 80434330-80434348 0018 .bss       mMutex__12JKRAramPiece                                       ZeroInitializedData */
SECTION_BSS u8 mMutex__12JKRAramPiece[24];
}


/* ###################################################################################### */
/*                                         .text                                          */
/* ###################################################################################### */

extern "C" {
/* 802D3574-802D35F4 0080 .text      prepareCommand__12JKRAramPieceFiUlUlUlP12JKRAramBlockPFUl_v  Function */
// JKRAramPiece::prepareCommand(int, u32, u32, u32, JKRAramBlock*, void (*)(u32))
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void prepareCommand__12JKRAramPieceFiUlUlUlP12JKRAramBlockPFUl_v() {
	nofralloc
#include "_include/JKernel/JKRAramPiece/prepareCommand__12JKRAramPieceFiUlUlUlP12JKRAramBlockPFUl_v.s"
}
#pragma pop

/* 802D35F4-802D3614 0020 .text      sendCommand__12JKRAramPieceFP12JKRAMCommand                  Function */
// JKRAramPiece::sendCommand(JKRAMCommand*)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void sendCommand__12JKRAramPieceFP12JKRAMCommand() {
	nofralloc
#include "_include/JKernel/JKRAramPiece/sendCommand__12JKRAramPieceFP12JKRAMCommand.s"
}
#pragma pop

/* 802D3614-802D3770 015C .text      orderAsync__12JKRAramPieceFiUlUlUlP12JKRAramBlockPFUl_v      Function */
// JKRAramPiece::orderAsync(int, u32, u32, u32, JKRAramBlock*, void (*)(u32))
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void orderAsync__12JKRAramPieceFiUlUlUlP12JKRAramBlockPFUl_v() {
	nofralloc
#include "_include/JKernel/JKRAramPiece/orderAsync__12JKRAramPieceFiUlUlUlP12JKRAramBlockPFUl_v.s"
}
#pragma pop

/* 802D3770-802D3838 00C8 .text      sync__12JKRAramPieceFP12JKRAMCommandi                        Function */
// JKRAramPiece::sync(JKRAMCommand*, int)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void sync__12JKRAramPieceFP12JKRAMCommandi() {
	nofralloc
#include "_include/JKernel/JKRAramPiece/sync__12JKRAramPieceFP12JKRAMCommandi.s"
}
#pragma pop

/* 802D3838-802D38CC 0094 .text      orderSync__12JKRAramPieceFiUlUlUlP12JKRAramBlock             Function */
// JKRAramPiece::orderSync(int, u32, u32, u32, JKRAramBlock*)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void orderSync__12JKRAramPieceFiUlUlUlP12JKRAramBlock() {
	nofralloc
#include "_include/JKernel/JKRAramPiece/orderSync__12JKRAramPieceFiUlUlUlP12JKRAramBlock.s"
}
#pragma pop

/* 802D38CC-802D3944 0078 .text      startDMA__12JKRAramPieceFP12JKRAMCommand                     Function */
// JKRAramPiece::startDMA(JKRAMCommand*)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void startDMA__12JKRAramPieceFP12JKRAMCommand() {
	nofralloc
#include "_include/JKernel/JKRAramPiece/startDMA__12JKRAramPieceFP12JKRAMCommand.s"
}
#pragma pop

/* 802D3944-802D39EC 00A8 .text      doneDMA__12JKRAramPieceFUl                                   Function */
// JKRAramPiece::doneDMA(u32)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void doneDMA__12JKRAramPieceFUl() {
	nofralloc
#include "_include/JKernel/JKRAramPiece/doneDMA__12JKRAramPieceFUl.s"
}
#pragma pop

/* 802D39EC-802D3A5C 0070 .text      __ct__12JKRAMCommandFv                                       Function */
// JKRAMCommand::JKRAMCommand(void)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void __ct__12JKRAMCommandFv() {
	nofralloc
#include "_include/JKernel/JKRAramPiece/__ct__12JKRAMCommandFv.s"
}
#pragma pop

/* 802D3A5C-802D3B04 00A8 .text      __dt__12JKRAMCommandFv                                       Function */
// JKRAMCommand::~JKRAMCommand(void)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void __dt__12JKRAMCommandFv() {
	nofralloc
#include "_include/JKernel/JKRAramPiece/__dt__12JKRAMCommandFv.s"
}
#pragma pop

/* 802D3B04-802D3B48 0044 .text      __sinit_JKRAramPiece_cpp                                     SInitFunction */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void __sinit_JKRAramPiece_cpp() {
	nofralloc
#include "_include/JKernel/JKRAramPiece/__sinit_JKRAramPiece_cpp.s"
}
#pragma pop

}

