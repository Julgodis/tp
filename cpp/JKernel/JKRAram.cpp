// 
// Generated By: dol2asm
// 

// 
// Compiler Options: -str pool,readonly,reuse
// 

#include "dolphin/types.h"

// 
// Additional Symbols:
// 

struct JKRHeap;

extern void* operator new(u32, JKRHeap*, int); /* __nw__FUlP7JKRHeapi */
extern void operator delete(void*); /* __dl__FPv */
extern void JKRDecompressFromAramToMainRam(u32, void*, u32, u32, u32, u32*); /* JKRDecompressFromAramToMainRam__FUlPvUlUlUlPUl */

extern "C" {
extern void memcpy();
extern void alloc__7JKRHeapFUliP7JKRHeap();
extern void alloc__7JKRHeapFUli();
extern void free__7JKRHeapFPvP7JKRHeap();
extern void __nw__FUlP7JKRHeapi();
extern void __dl__FPv();
extern void __ct__9JKRThreadFUlii();
extern void __dt__9JKRThreadFv();
extern void __ct__7JKRAramFUlUll();
extern void __dt__7JKRAramFv();
extern void run__7JKRAramFv();
extern void checkOkAddress__7JKRAramFPUcUlP12JKRAramBlockUl();
extern void changeGroupIdIfNeed__7JKRAramFPUci();
extern void JKRDecompressFromAramToMainRam__FUlPvUlUlUlPUl();
extern void JKRAram__decompSZS_subroutine__FPUcPUc();
extern void JKRAram__firstSrcData__Fv();
extern void JKRAram__nextSrcData__FPUc();
extern void func_802D2DF0();
extern void __ct__11JKRAramHeapFUlUl();
extern void alloc__11JKRAramHeapFUlQ211JKRAramHeap10EAllocMode();
extern void orderSync__12JKRAramPieceFiUlUlUlP12JKRAramBlock();
extern void startDMA__12JKRAramPieceFP12JKRAMCommand();
extern void create__13JKRAramStreamFl();
extern void create__9JKRDecompFl();
extern void orderSync__9JKRDecompFPUcPUcUlUl();
extern void checkCompressed__9JKRDecompFPUc();
extern void __dt__10JSUPtrListFv();
extern void initiate__10JSUPtrListFv();
extern void panic_f__12JUTExceptionFPCciPCce();
extern void DCStoreRangeNoSync();
extern void OSDisableInterrupts();
extern void OSRestoreInterrupts();
extern void OSInitMessageQueue();
extern void OSReceiveMessage();
extern void OSInitMutex();
extern void OSLockMutex();
extern void OSUnlockMutex();
extern void OSResumeThread();
extern void ARAlloc();
extern void ARInit();
extern u32 ARGetSize();
extern void ARQInit();
extern void __register_global_object();
extern void _savegpr_22();
extern void _savegpr_23();
extern void _savegpr_25();
extern void _savegpr_27();
extern void _savegpr_28();
extern void _savegpr_29();
extern void _restgpr_22();
extern void _restgpr_23();
extern void _restgpr_25();
extern void _restgpr_27();
extern void _restgpr_28();
extern void _restgpr_29();
SECTION_RODATA extern const u8 JKRAram__stringBase0[64];
SECTION_DATA extern u8 sMessageBuffer__7JKRAram[16];
SECTION_DATA extern u8 sMessageQueue__7JKRAram[32];
SECTION_DATA extern const void* __vt__7JKRAram[4];
SECTION_BSS extern u8 JKRAram__LIT_492[12];
SECTION_BSS extern u8 sAramCommandList__7JKRAram[12];
SECTION_BSS extern u8 JKRAram__decompMutex[24];
SECTION_SDATA extern u8 sSZSBufferSize__7JKRAram[8];
SECTION_SBSS extern u8 sSystemHeap__7JKRHeap[4];
SECTION_SBSS extern u8 sCurrentHeap__7JKRHeap[4];
SECTION_SBSS extern u8 sAramObject__7JKRAram[4];
SECTION_SBSS extern u8 JKRAram__szpBuf[4];
SECTION_SBSS extern u8 JKRAram__szpEnd[4];
SECTION_SBSS extern u8 JKRAram__refBuf[4];
SECTION_SBSS extern u8 JKRAram__refEnd[4];
SECTION_SBSS extern u8 JKRAram__refCurrent[4];
SECTION_SBSS extern u8 JKRAram__srcOffset[4];
SECTION_SBSS extern u8 JKRAram__transLeft[4];
SECTION_SBSS extern u8 JKRAram__srcLimit[4];
SECTION_SBSS extern u8 srcAddress[4];
SECTION_SBSS extern u8 JKRAram__fileOffset[4];
SECTION_SBSS extern u8 JKRAram__readCount[4];
SECTION_SBSS extern u8 JKRAram__maxDest[4];
SECTION_SBSS extern u8 data_804513FC[4];
SECTION_SBSS extern u8 JKRAram__tsPtr[4];
SECTION_SBSS extern u8 JKRAram__tsArea[4];
}


/* ###################################################################################### */
/*                                        .rodata                                         */
/* ###################################################################################### */

extern "C" {
/* 8039D078 003C .rodata    @stringBase0                                                 */
const char* const stringBase_8039D078 = "JKRAram.cpp";
const char* const stringBase_8039D084 = "%s";
const char* const stringBase_8039D087 = ":::address not 32Byte aligned.";
const char* const stringBase_8039D0A6 = "bad aramSync\n";
}


/* ###################################################################################### */
/*                                         .data                                          */
/* ###################################################################################### */

extern "C" {
/* 803CC128 0010 .data      sMessageBuffer__7JKRAram                                     */
SECTION_DATA u8 sMessageBuffer__7JKRAram[16] = {
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
};
/* 803CC138 0020 .data      sMessageQueue__7JKRAram                                      */
SECTION_DATA u8 sMessageQueue__7JKRAram[32] = {
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
};
/* 803CC158 0010 .data      __vt__7JKRAram                                               */
SECTION_DATA const  void* __vt__7JKRAram[4] = {
	NULL, /* RTTI */
	NULL,
	(void*)__dt__7JKRAramFv,
	(void*)run__7JKRAramFv,
};
}


/* ###################################################################################### */
/*                                         .sdata                                         */
/* ###################################################################################### */

extern "C" {
/* 804508B8 0004 .sdata     sSZSBufferSize__7JKRAram                                     */
SECTION_SDATA u8 sSZSBufferSize__7JKRAram[8] = {
	0x00, 0x00, 0x04, 0x00,
	/* padding */
	0x00, 0x00, 0x00, 0x00,
};
}


/* ###################################################################################### */
/*                                          .bss                                          */
/* ###################################################################################### */

extern "C" {
/* 804342D0 000C .bss       @492                                                         */
SECTION_BSS u8 JKRAram__LIT_492[12];
/* 804342DC 000C .bss       sAramCommandList__7JKRAram                                   */
SECTION_BSS u8 sAramCommandList__7JKRAram[12];
/* 804342E8 0018 .bss       decompMutex                                                  */
SECTION_BSS u8 JKRAram__decompMutex[24];
}


/* ###################################################################################### */
/*                                         .sbss                                          */
/* ###################################################################################### */

extern "C" {
/* 804513C8 0004 .sbss      sAramObject__7JKRAram                                        */
SECTION_SBSS u8 sAramObject__7JKRAram[4];
/* 804513CC 0004 .sbss      szpBuf                                                       */
SECTION_SBSS u8 JKRAram__szpBuf[4];
/* 804513D0 0004 .sbss      szpEnd                                                       */
SECTION_SBSS u8 JKRAram__szpEnd[4];
/* 804513D4 0004 .sbss      refBuf                                                       */
SECTION_SBSS u8 JKRAram__refBuf[4];
/* 804513D8 0004 .sbss      refEnd                                                       */
SECTION_SBSS u8 JKRAram__refEnd[4];
/* 804513DC 0004 .sbss      refCurrent                                                   */
SECTION_SBSS u8 JKRAram__refCurrent[4];
/* 804513E0 0004 .sbss      srcOffset                                                    */
SECTION_SBSS u8 JKRAram__srcOffset[4];
/* 804513E4 0004 .sbss      transLeft                                                    */
SECTION_SBSS u8 JKRAram__transLeft[4];
/* 804513E8 0004 .sbss      srcLimit                                                     */
SECTION_SBSS u8 JKRAram__srcLimit[4];
/* 804513EC 0004 .sbss      srcAddress                                                   */
SECTION_SBSS u8 srcAddress[4];
/* 804513F0 0004 .sbss      fileOffset                                                   */
SECTION_SBSS u8 JKRAram__fileOffset[4];
/* 804513F4 0004 .sbss      readCount                                                    */
SECTION_SBSS u8 JKRAram__readCount[4];
/* 804513F8 0004 .sbss      maxDest                                                      */
SECTION_SBSS u8 JKRAram__maxDest[4];
/* 804513FC 0004 .sbss      data_804513FC                                                */
SECTION_SBSS u8 data_804513FC[4];
/* 80451400 0004 .sbss      tsPtr                                                        */
SECTION_SBSS u8 JKRAram__tsPtr[4];
/* 80451404 0004 .sbss      tsArea                                                       */
SECTION_SBSS u8 JKRAram__tsArea[4];
}


/* ###################################################################################### */
/*                                         .text                                          */
/* ###################################################################################### */

extern "C" {
/* 802D1FA4 009C .text      create__7JKRAramFUlUllll                                     */
// JKRAram::create(u32, u32, s32, s32, s32)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void create__7JKRAramFUlUllll() {
	nofralloc
#include "_include/JKernel/JKRAram/create__7JKRAramFUlUllll.s"
}
#pragma pop

/* 802D2040 010C .text      __ct__7JKRAramFUlUll                                         */
// JKRAram::JKRAram(u32, u32, s32)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void __ct__7JKRAramFUlUll() {
	nofralloc
#include "_include/JKernel/JKRAram/__ct__7JKRAramFUlUll.s"
}
#pragma pop

/* 802D214C 0090 .text      __dt__7JKRAramFv                                             */
// JKRAram::~JKRAram(void)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void __dt__7JKRAramFv() {
	nofralloc
#include "_include/JKernel/JKRAram/__dt__7JKRAramFv.s"
}
#pragma pop

/* 802D21DC 006C .text      run__7JKRAramFv                                              */
// JKRAram::run(void)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void run__7JKRAramFv() {
	nofralloc
#include "_include/JKernel/JKRAram/run__7JKRAramFv.s"
}
#pragma pop

/* 802D2248 0094 .text      checkOkAddress__7JKRAramFPUcUlP12JKRAramBlockUl              */
// JKRAram::checkOkAddress(u8*, u32, JKRAramBlock*, u32)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void checkOkAddress__7JKRAramFPUcUlP12JKRAramBlockUl() {
	nofralloc
#include "_include/JKernel/JKRAram/checkOkAddress__7JKRAramFPUcUlP12JKRAramBlockUl.s"
}
#pragma pop

/* 802D22DC 0060 .text      changeGroupIdIfNeed__7JKRAramFPUci                           */
// JKRAram::changeGroupIdIfNeed(u8*, int)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void changeGroupIdIfNeed__7JKRAramFPUci() {
	nofralloc
#include "_include/JKernel/JKRAram/changeGroupIdIfNeed__7JKRAramFPUci.s"
}
#pragma pop

/* 802D233C 0278 .text      mainRamToAram__7JKRAramFPUcUlUl15JKRExpandSwitchUlP7JKRHeapiPUl */
// JKRAram::mainRamToAram(u8*, u32, u32, JKRExpandSwitch, u32, JKRHeap*, int, u32*)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void mainRamToAram__7JKRAramFPUcUlUl15JKRExpandSwitchUlP7JKRHeapiPUl() {
	nofralloc
#include "_include/JKernel/JKRAram/mainRamToAram__7JKRAramFPUcUlUl15JKRExpandSwitchUlP7JKRHeapiPUl.s"
}
#pragma pop

/* 802D25B4 027C .text      aramToMainRam__7JKRAramFUlPUcUl15JKRExpandSwitchUlP7JKRHeapiPUl */
// JKRAram::aramToMainRam(u32, u8*, u32, JKRExpandSwitch, u32, JKRHeap*, int, u32*)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void aramToMainRam__7JKRAramFUlPUcUl15JKRExpandSwitchUlP7JKRHeapiPUl() {
	nofralloc
#include "_include/JKernel/JKRAram/aramToMainRam__7JKRAramFUlPUcUl15JKRExpandSwitchUlP7JKRHeapiPUl.s"
}
#pragma pop

/* 802D2830 0170 .text      JKRDecompressFromAramToMainRam__FUlPvUlUlUlPUl               */
}

#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void JKRDecompressFromAramToMainRam(u32, void*, u32, u32, u32, u32*) {
	nofralloc
#include "_include/JKernel/JKRAram/JKRDecompressFromAramToMainRam__FUlPvUlUlUlPUl.s"
}
#pragma pop

extern "C" {
/* 802D29A0 02A0 .text      decompSZS_subroutine__FPUcPUc                                */
}

#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm static void decompSZS_subroutine(u8*, u8*) {
	nofralloc
#include "_include/JKernel/JKRAram/JKRAram__decompSZS_subroutine__FPUcPUc.s"
}
#pragma pop

extern "C" {
/* 802D2C40 00A4 .text      firstSrcData__Fv                                             */
}

#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm static void firstSrcData(void) {
	nofralloc
#include "_include/JKernel/JKRAram/JKRAram__firstSrcData__Fv.s"
}
#pragma pop

extern "C" {
/* 802D2CE4 00C8 .text      nextSrcData__FPUc                                            */
}

#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm static void nextSrcData(u8*) {
	nofralloc
#include "_include/JKernel/JKRAram/JKRAram__nextSrcData__FPUc.s"
}
#pragma pop

extern "C" {
/* 802D2DAC 0044 .text      __sinit_JKRAram_cpp                                          */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void __sinit_JKRAram_cpp() {
	nofralloc
#include "_include/JKernel/JKRAram/__sinit_JKRAram_cpp.s"
}
#pragma pop

/* 802D2DF0 0054 .text      __dt__23JSUList<12JKRAMCommand>Fv                            */
// JSUList<12JKRAMCommand>::~JSUList<12JKRAMCommand>(void)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void func_802D2DF0() {
	nofralloc
#include "_include/JKernel/JKRAram/func_802D2DF0.s"
}
#pragma pop

}

