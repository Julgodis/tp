// 
// Generated By: dol2asm
// 

#include "dolphin/types.h"

// 
// Additional Symbols:
// 

struct JKRHeap;

extern void* operator new(u32, JKRHeap*, int); /* __nw__FUlP7JKRHeapi */
extern void operator delete(void*); /* __dl__FPv */

extern "C" {
extern void findFromRoot__7JKRHeapFPv();
extern void __nw__FUlP7JKRHeapi();
extern void __dl__FPv();
extern void __ct__11JKRDisposerFv();
extern void __dt__11JKRDisposerFv();
extern void __dt__11JKRAramHeapFv();
extern void allocFromHead__11JKRAramHeapFUl();
extern void allocFromTail__11JKRAramHeapFUl();
extern void func_802D32B0();
extern void __ct__12JKRAramBlockFUlUlUlUcb();
extern void allocHead__12JKRAramBlockFUlUcP11JKRAramHeap();
extern void allocTail__12JKRAramBlockFUlUcP11JKRAramHeap();
extern void __dt__10JSUPtrListFv();
extern void initiate__10JSUPtrListFv();
extern void append__10JSUPtrListFP10JSUPtrLink();
extern void OSInitMutex();
extern void OSLockMutex();
extern void OSUnlockMutex();
extern void __register_global_object();
extern void _savegpr_29();
extern void _restgpr_29();
SECTION_DATA extern const void* __vt__11JKRAramHeap[4];
SECTION_BSS extern u8 JKRAramHeap__LIT_297[12];
SECTION_BSS extern u8 sAramList__11JKRAramHeap[12];
}


/* ###################################################################################### */
/*                                         .data                                          */
/* ###################################################################################### */

extern "C" {
/* 803CC168 000C .data      __vt__11JKRAramHeap                                          */
SECTION_DATA const  void* __vt__11JKRAramHeap[4] = {
	NULL, /* RTTI */
	NULL,
	(void*)__dt__11JKRAramHeapFv,
	/* padding */
	NULL,
};
}


/* ###################################################################################### */
/*                                          .bss                                          */
/* ###################################################################################### */

extern "C" {
/* 80434300 000C .bss       @297                                                         */
SECTION_BSS u8 JKRAramHeap__LIT_297[12];
/* 8043430C 000C .bss       sAramList__11JKRAramHeap                                     */
SECTION_BSS u8 sAramList__11JKRAramHeap[12];
}


/* ###################################################################################### */
/*                                         .text                                          */
/* ###################################################################################### */

extern "C" {
/* 802D2E44 00D0 .text      __ct__11JKRAramHeapFUlUl                                     */
// JKRAramHeap::JKRAramHeap(u32, u32)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void __ct__11JKRAramHeapFUlUl() {
	nofralloc
#include "_include/JKernel/JKRAramHeap/__ct__11JKRAramHeapFUlUl.s"
}
#pragma pop

/* 802D2F14 00A8 .text      __dt__11JKRAramHeapFv                                        */
// JKRAramHeap::~JKRAramHeap(void)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void __dt__11JKRAramHeapFv() {
	nofralloc
#include "_include/JKernel/JKRAramHeap/__dt__11JKRAramHeapFv.s"
}
#pragma pop

/* 802D2FBC 0078 .text      alloc__11JKRAramHeapFUlQ211JKRAramHeap10EAllocMode           */
// JKRAramHeap::alloc(u32, JKRAramHeap::EAllocMode)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void alloc__11JKRAramHeapFUlQ211JKRAramHeap10EAllocMode() {
	nofralloc
#include "_include/JKernel/JKRAramHeap/alloc__11JKRAramHeapFUlQ211JKRAramHeap10EAllocMode.s"
}
#pragma pop

/* 802D3034 0088 .text      allocFromHead__11JKRAramHeapFUl                              */
// JKRAramHeap::allocFromHead(u32)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void allocFromHead__11JKRAramHeapFUl() {
	nofralloc
#include "_include/JKernel/JKRAramHeap/allocFromHead__11JKRAramHeapFUl.s"
}
#pragma pop

/* 802D30BC 0078 .text      allocFromTail__11JKRAramHeapFUl                              */
// JKRAramHeap::allocFromTail(u32)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void allocFromTail__11JKRAramHeapFUl() {
	nofralloc
#include "_include/JKernel/JKRAramHeap/allocFromTail__11JKRAramHeapFUl.s"
}
#pragma pop

/* 802D3134 0078 .text      getFreeSize__11JKRAramHeapFv                                 */
// JKRAramHeap::getFreeSize(void)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void getFreeSize__11JKRAramHeapFv() {
	nofralloc
#include "_include/JKernel/JKRAramHeap/getFreeSize__11JKRAramHeapFv.s"
}
#pragma pop

/* 802D31AC 006C .text      getTotalFreeSize__11JKRAramHeapFv                            */
// JKRAramHeap::getTotalFreeSize(void)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void getTotalFreeSize__11JKRAramHeapFv() {
	nofralloc
#include "_include/JKernel/JKRAramHeap/getTotalFreeSize__11JKRAramHeapFv.s"
}
#pragma pop

/* 802D3218 0054 .text      dump__11JKRAramHeapFv                                        */
// JKRAramHeap::dump(void)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void dump__11JKRAramHeapFv() {
	nofralloc
#include "_include/JKernel/JKRAramHeap/dump__11JKRAramHeapFv.s"
}
#pragma pop

/* 802D326C 0044 .text      __sinit_JKRAramHeap_cpp                                      */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void __sinit_JKRAramHeap_cpp() {
	nofralloc
#include "_include/JKernel/JKRAramHeap/__sinit_JKRAramHeap_cpp.s"
}
#pragma pop

/* 802D32B0 0054 .text      __dt__23JSUList<12JKRAramBlock>Fv                            */
// JSUList<12JKRAramBlock>::~JSUList<12JKRAramBlock>(void)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void func_802D32B0() {
	nofralloc
#include "_include/JKernel/JKRAramHeap/func_802D32B0.s"
}
#pragma pop

}

