// 
// Generated By: dol2asm
// 

#include "dolphin/types.h"

// 
// Additional Symbols:
// 

extern void operator delete(void*); /* __dl__FPv */

extern "C" {
extern void __ct__7JKRHeapFPvUlP7JKRHeapb();
extern void __dt__7JKRHeapFv();
extern void alloc__7JKRHeapFUliP7JKRHeap();
extern void callAllDisposer__7JKRHeapFv();
extern void dispose__7JKRHeapFv();
extern void __dl__FPv();
extern void state_register__7JKRHeapCFPQ27JKRHeap6TStateUl();
extern void state_compare__7JKRHeapCFRCQ27JKRHeap6TStateRCQ27JKRHeap6TState();
extern void state_dump__7JKRHeapCFRCQ27JKRHeap6TState();
extern void __ct__13JKRAssertHeapFPvUlP7JKRHeapb();
extern void __dt__13JKRAssertHeapFv();
extern void do_destroy__13JKRAssertHeapFv();
extern void getHeapType__13JKRAssertHeapFv();
extern int check__13JKRAssertHeapFv();
extern int dump__13JKRAssertHeapFv();
extern int dump_sort__13JKRAssertHeapFv();
extern int do_changeGroupID__13JKRAssertHeapFUc();
extern int do_getCurrentGroupId__13JKRAssertHeapFv();
extern int do_alloc__13JKRAssertHeapFUli();
extern void do_free__13JKRAssertHeapFPv();
extern void do_freeAll__13JKRAssertHeapFv();
extern void do_freeTail__13JKRAssertHeapFv();
extern void do_fillFreeArea__13JKRAssertHeapFv();
extern int do_resize__13JKRAssertHeapFPvUl();
extern int do_getSize__13JKRAssertHeapFPv();
extern int do_getFreeSize__13JKRAssertHeapFv();
extern int do_getMaxFreeBlock__13JKRAssertHeapFv();
extern int do_getTotalFreeSize__13JKRAssertHeapFv();
SECTION_DATA extern const void* __vt__13JKRAssertHeap[24];
SECTION_SBSS extern u8 sRootHeap__7JKRHeap[4];
}


/* ###################################################################################### */
/*                                         .data                                          */
/* ###################################################################################### */

extern "C" {
/* 803CC090 0060 .data      __vt__13JKRAssertHeap                                        */
SECTION_DATA const  void* __vt__13JKRAssertHeap[24] = {
	NULL, /* RTTI */
	NULL,
	(void*)__dt__13JKRAssertHeapFv,
	(void*)callAllDisposer__7JKRHeapFv,
	(void*)getHeapType__13JKRAssertHeapFv,
	(void*)check__13JKRAssertHeapFv,
	(void*)dump_sort__13JKRAssertHeapFv,
	(void*)dump__13JKRAssertHeapFv,
	(void*)do_destroy__13JKRAssertHeapFv,
	(void*)do_alloc__13JKRAssertHeapFUli,
	(void*)do_free__13JKRAssertHeapFPv,
	(void*)do_freeAll__13JKRAssertHeapFv,
	(void*)do_freeTail__13JKRAssertHeapFv,
	(void*)do_fillFreeArea__13JKRAssertHeapFv,
	(void*)do_resize__13JKRAssertHeapFPvUl,
	(void*)do_getSize__13JKRAssertHeapFPv,
	(void*)do_getFreeSize__13JKRAssertHeapFv,
	(void*)do_getMaxFreeBlock__13JKRAssertHeapFv,
	(void*)do_getTotalFreeSize__13JKRAssertHeapFv,
	(void*)do_changeGroupID__13JKRAssertHeapFUc,
	(void*)do_getCurrentGroupId__13JKRAssertHeapFv,
	(void*)state_register__7JKRHeapCFPQ27JKRHeap6TStateUl,
	(void*)state_compare__7JKRHeapCFRCQ27JKRHeap6TStateRCQ27JKRHeap6TState,
	(void*)state_dump__7JKRHeapCFRCQ27JKRHeap6TState,
};
}


/* ###################################################################################### */
/*                                         .text                                          */
/* ###################################################################################### */

extern "C" {
/* 802D12C4 003C .text      __ct__13JKRAssertHeapFPvUlP7JKRHeapb                         */
// JKRAssertHeap::JKRAssertHeap(void*, u32, JKRHeap*, bool)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void __ct__13JKRAssertHeapFPvUlP7JKRHeapb() {
	nofralloc
#include "_include/JKernel/JKRAssertHeap/__ct__13JKRAssertHeapFPvUlP7JKRHeapb.s"
}
#pragma pop

/* 802D1300 0068 .text      __dt__13JKRAssertHeapFv                                      */
// JKRAssertHeap::~JKRAssertHeap(void)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void __dt__13JKRAssertHeapFv() {
	nofralloc
#include "_include/JKernel/JKRAssertHeap/__dt__13JKRAssertHeapFv.s"
}
#pragma pop

/* 802D1368 0070 .text      create__13JKRAssertHeapFP7JKRHeap                            */
// JKRAssertHeap::create(JKRHeap*)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void create__13JKRAssertHeapFP7JKRHeap() {
	nofralloc
#include "_include/JKernel/JKRAssertHeap/create__13JKRAssertHeapFP7JKRHeap.s"
}
#pragma pop

/* 802D13D8 0030 .text      do_destroy__13JKRAssertHeapFv                                */
// JKRAssertHeap::do_destroy(void)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void do_destroy__13JKRAssertHeapFv() {
	nofralloc
#include "_include/JKernel/JKRAssertHeap/do_destroy__13JKRAssertHeapFv.s"
}
#pragma pop

/* 802D1408 000C .text      getHeapType__13JKRAssertHeapFv                               */
// JKRAssertHeap::getHeapType(void)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void getHeapType__13JKRAssertHeapFv() {
	nofralloc
#include "_include/JKernel/JKRAssertHeap/getHeapType__13JKRAssertHeapFv.s"
}
#pragma pop

/* 802D1414 0008 .text      check__13JKRAssertHeapFv                                     */
// JKRAssertHeap::check(void)
int check__13JKRAssertHeapFv() {
	return 1;
}

/* 802D141C 0008 .text      dump__13JKRAssertHeapFv                                      */
// JKRAssertHeap::dump(void)
int dump__13JKRAssertHeapFv() {
	return 1;
}

/* 802D1424 0008 .text      dump_sort__13JKRAssertHeapFv                                 */
// JKRAssertHeap::dump_sort(void)
int dump_sort__13JKRAssertHeapFv() {
	return 1;
}

/* 802D142C 0008 .text      do_changeGroupID__13JKRAssertHeapFUc                         */
// JKRAssertHeap::do_changeGroupID(u8)
int do_changeGroupID__13JKRAssertHeapFUc() {
	return 0;
}

/* 802D1434 0008 .text      do_getCurrentGroupId__13JKRAssertHeapFv                      */
// JKRAssertHeap::do_getCurrentGroupId(void)
int do_getCurrentGroupId__13JKRAssertHeapFv() {
	return 0;
}

/* 802D143C 0008 .text      do_alloc__13JKRAssertHeapFUli                                */
// JKRAssertHeap::do_alloc(u32, int)
int do_alloc__13JKRAssertHeapFUli() {
	return 0;
}

/* 802D1444 0004 .text      do_free__13JKRAssertHeapFPv                                  */
// JKRAssertHeap::do_free(void*)
void do_free__13JKRAssertHeapFPv() {
	return;
}

/* 802D1448 0004 .text      do_freeAll__13JKRAssertHeapFv                                */
// JKRAssertHeap::do_freeAll(void)
void do_freeAll__13JKRAssertHeapFv() {
	return;
}

/* 802D144C 0004 .text      do_freeTail__13JKRAssertHeapFv                               */
// JKRAssertHeap::do_freeTail(void)
void do_freeTail__13JKRAssertHeapFv() {
	return;
}

/* 802D1450 0004 .text      do_fillFreeArea__13JKRAssertHeapFv                           */
// JKRAssertHeap::do_fillFreeArea(void)
void do_fillFreeArea__13JKRAssertHeapFv() {
	return;
}

/* 802D1454 0008 .text      do_resize__13JKRAssertHeapFPvUl                              */
// JKRAssertHeap::do_resize(void*, u32)
int do_resize__13JKRAssertHeapFPvUl() {
	return 0;
}

/* 802D145C 0008 .text      do_getSize__13JKRAssertHeapFPv                               */
// JKRAssertHeap::do_getSize(void*)
int do_getSize__13JKRAssertHeapFPv() {
	return 0;
}

/* 802D1464 0008 .text      do_getFreeSize__13JKRAssertHeapFv                            */
// JKRAssertHeap::do_getFreeSize(void)
int do_getFreeSize__13JKRAssertHeapFv() {
	return 0;
}

/* 802D146C 0008 .text      do_getMaxFreeBlock__13JKRAssertHeapFv                        */
// JKRAssertHeap::do_getMaxFreeBlock(void)
int do_getMaxFreeBlock__13JKRAssertHeapFv() {
	return 0;
}

/* 802D1474 0008 .text      do_getTotalFreeSize__13JKRAssertHeapFv                       */
// JKRAssertHeap::do_getTotalFreeSize(void)
int do_getTotalFreeSize__13JKRAssertHeapFv() {
	return 0;
}

}

