// 
// Generated By: dol2asm
// 

// 
// Compiler Options: -str pool,readonly,reuse
// 

#include "dolphin/types.h"

// 
// Additional Symbols:
// 

extern void operator delete(void*); /* __dl__FPv */

extern "C" {
/* Function             */
SECTION_INIT extern void memcpy();
/* Function             */
extern void free__7JKRHeapFPvP7JKRHeap();
/* Function             */
extern void findFromRoot__7JKRHeapFPv();
/* Function             */
extern void __dl__FPv();
/* Function             */
extern void unmount__13JKRFileLoaderFv();
/* Function             */
extern void becomeCurrent__10JKRArchiveFPCc();
/* Function             */
extern void getResource__10JKRArchiveFPCc();
/* Function             */
extern void getResource__10JKRArchiveFUlPCc();
/* Function             */
extern void readResource__10JKRArchiveFPvUlUlPCc();
/* Function             */
extern void readResource__10JKRArchiveFPvUlPCc();
/* Function             */
extern void detachResource__10JKRArchiveFPv();
/* Function             */
extern void getResSize__10JKRArchiveCFPCv();
/* Function             */
extern void countFile__10JKRArchiveCFPCc();
/* Function             */
extern void getFirstFile__10JKRArchiveCFPCc();
/* Function             */
extern void __ct__10JKRArchiveFlQ210JKRArchive10EMountMode();
/* Function             */
extern void __dt__10JKRArchiveFv();
/* Function             */
extern void findPtrResource__10JKRArchiveCFPCv();
/* Function             */
extern void setExpandSize__10JKRArchiveFPQ210JKRArchive12SDIFileEntryUl();
/* Function             */
extern void getExpandSize__10JKRArchiveCFPQ210JKRArchive12SDIFileEntry();
/* Function             */
extern void __ct__13JKRMemArchiveFlQ210JKRArchive15EMountDirection();
/* Function             */
extern void __ct__13JKRMemArchiveFPvUl15JKRMemBreakFlag();
/* Function             */
extern void __dt__13JKRMemArchiveFv();
/* Function             */
extern void open__13JKRMemArchiveFlQ210JKRArchive15EMountDirection();
/* Function             */
extern void open__13JKRMemArchiveFPvUl15JKRMemBreakFlag();
/* Function             */
extern void fetchResource__13JKRMemArchiveFPQ210JKRArchive12SDIFileEntryPUl();
/* Function             */
extern void fetchResource__13JKRMemArchiveFPvUlPQ210JKRArchive12SDIFileEntryPUl();
/* Function             */
extern void removeResourceAll__13JKRMemArchiveFv();
/* Function             */
extern void removeResource__13JKRMemArchiveFPv();
/* Function             */
extern void fetchResource_subroutine__13JKRMemArchiveFPUcUlPUcUli();
/* Function             */
extern void getExpandedResSize__13JKRMemArchiveCFPCv();
/* Function             */
extern void loadToMainRAM__12JKRDvdRipperFlPUc15JKRExpandSwitchUlP7JKRHeapQ212JKRDvdRipper15EAllocDirectionUlPiPUl();
/* Function             */
extern void orderSync__9JKRDecompFPUcPUcUlUl();
/* Function             */
extern void prepend__10JSUPtrListFP10JSUPtrLink();
/* Function             */
extern void remove__10JSUPtrListFP10JSUPtrLink();
/* Function             */
extern void panic_f__12JUTExceptionFPCciPCce();
/* Function             */
extern void DCInvalidateRange();
/* Function             */
extern void _savegpr_28();
/* Function             */
extern void _savegpr_29();
/* Function             */
extern void _restgpr_28();
/* Function             */
extern void _restgpr_29();
/* StringBaseData       */
SECTION_RODATA extern const u8 JKRMemArchive__stringBase0[40];
/* VTableData           */
SECTION_DATA extern void* __vt__13JKRMemArchive[20];
/* ZeroInitializedData  */
SECTION_BSS extern u8 sVolumeList__13JKRFileLoader[12];
}


/* ###################################################################################### */
/*                                        .rodata                                         */
/* ###################################################################################### */

extern "C" {
/* 8039D160-8039D188 0027 .rodata    @stringBase0                                                 StringBaseData */
#pragma push
#pragma force_active on
#pragma section ".dead"
SECTION_DEAD const char* const stringBase_8039D160 = "JKRMemArchive.cpp";
SECTION_DEAD const char* const stringBase_8039D172 = "%s";
SECTION_DEAD const char* const stringBase_8039D175 = "??? bad sequence\n";
/* @stringBase0 padding */
SECTION_DEAD const char* const pad_8039D187 = "";
#pragma pop
}


/* ###################################################################################### */
/*                                         .data                                          */
/* ###################################################################################### */

extern "C" {
/* 803CC2D8-803CC328 0050 .data      __vt__13JKRMemArchive                                        VTableData */
SECTION_DATA void* __vt__13JKRMemArchive[20] = {
	NULL, /* RTTI */
	NULL,
	(void*)__dt__13JKRMemArchiveFv,
	(void*)unmount__13JKRFileLoaderFv,
	(void*)becomeCurrent__10JKRArchiveFPCc,
	(void*)getResource__10JKRArchiveFPCc,
	(void*)getResource__10JKRArchiveFUlPCc,
	(void*)readResource__10JKRArchiveFPvUlPCc,
	(void*)readResource__10JKRArchiveFPvUlUlPCc,
	(void*)removeResourceAll__13JKRMemArchiveFv,
	(void*)removeResource__13JKRMemArchiveFPv,
	(void*)detachResource__10JKRArchiveFPv,
	(void*)getResSize__10JKRArchiveCFPCv,
	(void*)countFile__10JKRArchiveCFPCc,
	(void*)getFirstFile__10JKRArchiveCFPCc,
	(void*)getExpandedResSize__13JKRMemArchiveCFPCv,
	(void*)fetchResource__13JKRMemArchiveFPQ210JKRArchive12SDIFileEntryPUl,
	(void*)fetchResource__13JKRMemArchiveFPvUlPQ210JKRArchive12SDIFileEntryPUl,
	(void*)setExpandSize__10JKRArchiveFPQ210JKRArchive12SDIFileEntryUl,
	(void*)getExpandSize__10JKRArchiveCFPQ210JKRArchive12SDIFileEntry,
};
}


/* ###################################################################################### */
/*                                         .text                                          */
/* ###################################################################################### */

extern "C" {
/* 802D69B8-802D6A6C 00B4 .text      __ct__13JKRMemArchiveFlQ210JKRArchive15EMountDirection       Function */
// JKRMemArchive::JKRMemArchive(long, JKRArchive::EMountDirection)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void __ct__13JKRMemArchiveFlQ210JKRArchive15EMountDirection() {
	nofralloc
#include "_include/JKernel/JKRMemArchive/__ct__13JKRMemArchiveFlQ210JKRArchive15EMountDirection.s"
}
#pragma pop

/* 802D6A6C-802D6B24 00B8 .text      __ct__13JKRMemArchiveFPvUl15JKRMemBreakFlag                  Function */
// JKRMemArchive::JKRMemArchive(void*, u32, JKRMemBreakFlag)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void __ct__13JKRMemArchiveFPvUl15JKRMemBreakFlag() {
	nofralloc
#include "_include/JKernel/JKRMemArchive/__ct__13JKRMemArchiveFPvUl15JKRMemBreakFlag.s"
}
#pragma pop

/* 802D6B24-802D6BCC 00A8 .text      __dt__13JKRMemArchiveFv                                      Function */
// JKRMemArchive::~JKRMemArchive(void)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void __dt__13JKRMemArchiveFv() {
	nofralloc
#include "_include/JKernel/JKRMemArchive/__dt__13JKRMemArchiveFv.s"
}
#pragma pop

/* 802D6BCC-802D6D30 0164 .text      open__13JKRMemArchiveFlQ210JKRArchive15EMountDirection       Function */
// JKRMemArchive::open(long, JKRArchive::EMountDirection)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void open__13JKRMemArchiveFlQ210JKRArchive15EMountDirection() {
	nofralloc
#include "_include/JKernel/JKRMemArchive/open__13JKRMemArchiveFlQ210JKRArchive15EMountDirection.s"
}
#pragma pop

/* 802D6D30-802D6DDC 00AC .text      open__13JKRMemArchiveFPvUl15JKRMemBreakFlag                  Function */
// JKRMemArchive::open(void*, u32, JKRMemBreakFlag)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void open__13JKRMemArchiveFPvUl15JKRMemBreakFlag() {
	nofralloc
#include "_include/JKernel/JKRMemArchive/open__13JKRMemArchiveFPvUl15JKRMemBreakFlag.s"
}
#pragma pop

/* 802D6DDC-802D6E10 0034 .text      fetchResource__13JKRMemArchiveFPQ210JKRArchive12SDIFileEntryPUl Function */
// JKRMemArchive::fetchResource(JKRArchive::SDIFileEntry, u32*)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void fetchResource__13JKRMemArchiveFPQ210JKRArchive12SDIFileEntryPUl() {
	nofralloc
#include "_include/JKernel/JKRMemArchive/fetchResource__13JKRMemArchiveFPQ210JKRArchive12SDIFileEntryPUl.s"
}
#pragma pop

/* 802D6E10-802D6ED0 00C0 .text      fetchResource__13JKRMemArchiveFPvUlPQ210JKRArchive12SDIFileEntryPUl Function */
// JKRMemArchive::fetchResource(void*, u32, JKRArchive::SDIFileEntry, u32*)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void fetchResource__13JKRMemArchiveFPvUlPQ210JKRArchive12SDIFileEntryPUl() {
	nofralloc
#include "_include/JKernel/JKRMemArchive/fetchResource__13JKRMemArchiveFPvUlPQ210JKRArchive12SDIFileEntryPUl.s"
}
#pragma pop

/* 802D6ED0-802D6F20 0050 .text      removeResourceAll__13JKRMemArchiveFv                         Function */
// JKRMemArchive::removeResourceAll(void)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void removeResourceAll__13JKRMemArchiveFv() {
	nofralloc
#include "_include/JKernel/JKRMemArchive/removeResourceAll__13JKRMemArchiveFv.s"
}
#pragma pop

/* 802D6F20-802D6F5C 003C .text      removeResource__13JKRMemArchiveFPv                           Function */
// JKRMemArchive::removeResource(void*)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void removeResource__13JKRMemArchiveFPv() {
	nofralloc
#include "_include/JKernel/JKRMemArchive/removeResource__13JKRMemArchiveFPv.s"
}
#pragma pop

/* 802D6F5C-802D7030 00D4 .text      fetchResource_subroutine__13JKRMemArchiveFPUcUlPUcUli        Function */
// JKRMemArchive::fetchResource_subroutine(u8*, u32, u8*, u32, int)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void fetchResource_subroutine__13JKRMemArchiveFPUcUlPUcUli() {
	nofralloc
#include "_include/JKernel/JKRMemArchive/fetchResource_subroutine__13JKRMemArchiveFPUcUlPUcUli.s"
}
#pragma pop

/* 802D7030-802D70C0 0090 .text      getExpandedResSize__13JKRMemArchiveCFPCv                     Function */
// JKRMemArchive::getExpandedResSize(const void*) const
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void getExpandedResSize__13JKRMemArchiveCFPCv() {
	nofralloc
#include "_include/JKernel/JKRMemArchive/getExpandedResSize__13JKRMemArchiveCFPCv.s"
}
#pragma pop

}

