// 
// Generated By: dol2asm
// 

// 
// Compiler Options: -str pool,readonly,reuse
// 

#include "dolphin/types.h"

// 
// Additional Symbols:
// 

struct JKRHeap;

extern void* operator new(u32, JKRHeap*, int); /* __nw__FUlP7JKRHeapi */
extern void operator delete(void*); /* __dl__FPv */

extern "C" {
extern void memcpy();
extern void alloc__7JKRHeapFUliP7JKRHeap();
extern void alloc__7JKRHeapFUli();
extern void free__7JKRHeapFPvP7JKRHeap();
extern void free__7JKRHeapFPv();
extern void findFromRoot__7JKRHeapFPv();
extern void __nw__FUlP7JKRHeapi();
extern void __dl__FPv();
extern void __ct__13JKRFileLoaderFv();
extern void __dt__13JKRFileLoaderFv();
extern void unmount__13JKRFileLoaderFv();
extern void __ct__12JKRDvdFinderFPCc();
extern void __ct__12JKRFileCacheFPCcPCc();
extern void __dt__12JKRFileCacheFv();
extern void becomeCurrent__12JKRFileCacheFPCc();
extern void getResource__12JKRFileCacheFPCc();
extern void getResource__12JKRFileCacheFUlPCc();
extern void readResource__12JKRFileCacheFPvUlPCc();
extern void readResource__12JKRFileCacheFPvUlUlPCc();
extern void removeResourceAll__12JKRFileCacheFv();
extern void removeResource__12JKRFileCacheFPv();
extern void detachResource__12JKRFileCacheFPv();
extern void getResSize__12JKRFileCacheCFPCv();
extern void countFile__12JKRFileCacheCFPCc();
extern void getFirstFile__12JKRFileCacheCFPCc();
extern void findCacheBlock__12JKRFileCacheCFPCv();
extern void findCacheBlock__12JKRFileCacheCFUl();
extern void findFile__12JKRFileCacheCFPcPCc();
extern void getDvdPathName__12JKRFileCacheCFPCc();
extern void convStrLower__12JKRFileCacheCFPc();
extern void __ct__Q212JKRFileCache11CCacheBlockFUlUlPCv();
extern void getFsResource__12JKRFileCacheFPCc();
extern void getNameResource__12JKRFileCacheFUlPCc();
extern void readFsResource__12JKRFileCacheFPvUlPCc();
extern void readNameResource__12JKRFileCacheFPvUlUlPCc();
extern void read__7JKRFileFPvll();
extern void __ct__10JKRDvdFileFPCc();
extern void __dt__10JKRDvdFileFv();
extern void __ct__10JSUPtrLinkFPv();
extern void __dt__10JSUPtrLinkFv();
extern void __dt__10JSUPtrListFv();
extern void initiate__10JSUPtrListFv();
extern void append__10JSUPtrListFP10JSUPtrLink();
extern void prepend__10JSUPtrListFP10JSUPtrLink();
extern void remove__10JSUPtrListFP10JSUPtrLink();
extern void DVDChangeDir();
extern void DVDOpenDir();
extern void DVDReadDir();
extern int DVDCloseDir();
extern void _savegpr_26();
extern void _savegpr_27();
extern void _savegpr_28();
extern void _savegpr_29();
extern void _restgpr_26();
extern void _restgpr_27();
extern void _restgpr_28();
extern void _restgpr_29();
extern void tolower();
extern void strrchr();
extern void strcmp();
extern void strcat();
extern void strcpy();
extern void strlen();
SECTION_RODATA extern const u8 JKRFileCache__stringBase0[8];
SECTION_DATA extern const void* __vt__12JKRFileCache[20];
SECTION_BSS extern u8 sVolumeList__13JKRFileLoader[12];
SECTION_SBSS extern u8 sSystemHeap__7JKRHeap[4];
SECTION_SBSS extern u8 sCurrentVolume__13JKRFileLoader[4];
}


/* ###################################################################################### */
/*                                        .rodata                                         */
/* ###################################################################################### */

extern "C" {
/* 8039D158 0006 .rodata    @stringBase0                                                 */
const char* const stringBase_8039D158 = "/";
const char* const stringBase_8039D15A = "dvd";
}


/* ###################################################################################### */
/*                                         .data                                          */
/* ###################################################################################### */

extern "C" {
/* 803CC238 004C .data      __vt__12JKRFileCache                                         */
SECTION_DATA const  void* __vt__12JKRFileCache[20] = {
	NULL, /* RTTI */
	NULL,
	(void*)__dt__12JKRFileCacheFv,
	(void*)unmount__13JKRFileLoaderFv,
	(void*)becomeCurrent__12JKRFileCacheFPCc,
	(void*)getResource__12JKRFileCacheFPCc,
	(void*)getResource__12JKRFileCacheFUlPCc,
	(void*)readResource__12JKRFileCacheFPvUlPCc,
	(void*)readResource__12JKRFileCacheFPvUlUlPCc,
	(void*)removeResourceAll__12JKRFileCacheFv,
	(void*)removeResource__12JKRFileCacheFPv,
	(void*)detachResource__12JKRFileCacheFPv,
	(void*)getResSize__12JKRFileCacheCFPCv,
	(void*)countFile__12JKRFileCacheCFPCc,
	(void*)getFirstFile__12JKRFileCacheCFPCc,
	(void*)getFsResource__12JKRFileCacheFPCc,
	(void*)getNameResource__12JKRFileCacheFUlPCc,
	(void*)readFsResource__12JKRFileCacheFPvUlPCc,
	(void*)readNameResource__12JKRFileCacheFPvUlUlPCc,
	/* padding */
	NULL,
};
}


/* ###################################################################################### */
/*                                         .text                                          */
/* ###################################################################################### */

extern "C" {
/* 802D49B4 0100 .text      mount__12JKRFileCacheFPCcP7JKRHeapPCc                        */
// JKRFileCache::mount(const s8*, JKRHeap*, const s8*)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void mount__12JKRFileCacheFPCcP7JKRHeapPCc() {
	nofralloc
#include "_include/JKernel/JKRFileCache/mount__12JKRFileCacheFPCcP7JKRHeapPCc.s"
}
#pragma pop

/* 802D4AB4 01BC .text      __ct__12JKRFileCacheFPCcPCc                                  */
// JKRFileCache::JKRFileCache(const s8*, const s8*)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void __ct__12JKRFileCacheFPCcPCc() {
	nofralloc
#include "_include/JKernel/JKRFileCache/__ct__12JKRFileCacheFPCcPCc.s"
}
#pragma pop

/* 802D4C70 00D4 .text      __dt__12JKRFileCacheFv                                       */
// JKRFileCache::~JKRFileCache(void)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void __dt__12JKRFileCacheFv() {
	nofralloc
#include "_include/JKernel/JKRFileCache/__dt__12JKRFileCacheFv.s"
}
#pragma pop

/* 802D4D44 0094 .text      becomeCurrent__12JKRFileCacheFPCc                            */
// JKRFileCache::becomeCurrent(const s8*)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void becomeCurrent__12JKRFileCacheFPCc() {
	nofralloc
#include "_include/JKernel/JKRFileCache/becomeCurrent__12JKRFileCacheFPCc.s"
}
#pragma pop

/* 802D4DD8 0104 .text      getResource__12JKRFileCacheFPCc                              */
// JKRFileCache::getResource(const s8*)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void getResource__12JKRFileCacheFPCc() {
	nofralloc
#include "_include/JKernel/JKRFileCache/getResource__12JKRFileCacheFPCc.s"
}
#pragma pop

/* 802D4EDC 0088 .text      getResource__12JKRFileCacheFUlPCc                            */
// JKRFileCache::getResource(u32, const s8*)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void getResource__12JKRFileCacheFUlPCc() {
	nofralloc
#include "_include/JKernel/JKRFileCache/getResource__12JKRFileCacheFUlPCc.s"
}
#pragma pop

/* 802D4F64 00D8 .text      readResource__12JKRFileCacheFPvUlPCc                         */
// JKRFileCache::readResource(void*, u32, const s8*)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void readResource__12JKRFileCacheFPvUlPCc() {
	nofralloc
#include "_include/JKernel/JKRFileCache/readResource__12JKRFileCacheFPvUlPCc.s"
}
#pragma pop

/* 802D503C 0098 .text      readResource__12JKRFileCacheFPvUlUlPCc                       */
// JKRFileCache::readResource(void*, u32, u32, const s8*)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void readResource__12JKRFileCacheFPvUlUlPCc() {
	nofralloc
#include "_include/JKernel/JKRFileCache/readResource__12JKRFileCacheFPvUlUlPCc.s"
}
#pragma pop

/* 802D50D4 0090 .text      removeResourceAll__12JKRFileCacheFv                          */
// JKRFileCache::removeResourceAll(void)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void removeResourceAll__12JKRFileCacheFv() {
	nofralloc
#include "_include/JKernel/JKRFileCache/removeResourceAll__12JKRFileCacheFv.s"
}
#pragma pop

/* 802D5164 0094 .text      removeResource__12JKRFileCacheFPv                            */
// JKRFileCache::removeResource(void*)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void removeResource__12JKRFileCacheFPv() {
	nofralloc
#include "_include/JKernel/JKRFileCache/removeResource__12JKRFileCacheFPv.s"
}
#pragma pop

/* 802D51F8 0074 .text      detachResource__12JKRFileCacheFPv                            */
// JKRFileCache::detachResource(void*)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void detachResource__12JKRFileCacheFPv() {
	nofralloc
#include "_include/JKernel/JKRFileCache/detachResource__12JKRFileCacheFPv.s"
}
#pragma pop

/* 802D526C 0034 .text      getResSize__12JKRFileCacheCFPCv                              */
// JKRFileCache::getResSize(const void*) const
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void getResSize__12JKRFileCacheCFPCv() {
	nofralloc
#include "_include/JKernel/JKRFileCache/getResSize__12JKRFileCacheCFPCv.s"
}
#pragma pop

/* 802D52A0 007C .text      countFile__12JKRFileCacheCFPCc                               */
// JKRFileCache::countFile(const s8*) const
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void countFile__12JKRFileCacheCFPCc() {
	nofralloc
#include "_include/JKernel/JKRFileCache/countFile__12JKRFileCacheCFPCc.s"
}
#pragma pop

/* 802D531C 009C .text      getFirstFile__12JKRFileCacheCFPCc                            */
// JKRFileCache::getFirstFile(const s8*) const
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void getFirstFile__12JKRFileCacheCFPCc() {
	nofralloc
#include "_include/JKernel/JKRFileCache/getFirstFile__12JKRFileCacheCFPCc.s"
}
#pragma pop

/* 802D53B8 002C .text      findCacheBlock__12JKRFileCacheCFPCv                          */
// JKRFileCache::findCacheBlock(const void*) const
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void findCacheBlock__12JKRFileCacheCFPCv() {
	nofralloc
#include "_include/JKernel/JKRFileCache/findCacheBlock__12JKRFileCacheCFPCv.s"
}
#pragma pop

/* 802D53E4 002C .text      findCacheBlock__12JKRFileCacheCFUl                           */
// JKRFileCache::findCacheBlock(u32) const
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void findCacheBlock__12JKRFileCacheCFUl() {
	nofralloc
#include "_include/JKernel/JKRFileCache/findCacheBlock__12JKRFileCacheCFUl.s"
}
#pragma pop

/* 802D5410 010C .text      findFile__12JKRFileCacheCFPcPCc                              */
// JKRFileCache::findFile(s8*, const s8*) const
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void findFile__12JKRFileCacheCFPcPCc() {
	nofralloc
#include "_include/JKernel/JKRFileCache/findFile__12JKRFileCacheCFPcPCc.s"
}
#pragma pop

/* 802D551C 0108 .text      getDvdPathName__12JKRFileCacheCFPCc                          */
// JKRFileCache::getDvdPathName(const s8*) const
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void getDvdPathName__12JKRFileCacheCFPCc() {
	nofralloc
#include "_include/JKernel/JKRFileCache/getDvdPathName__12JKRFileCacheCFPCc.s"
}
#pragma pop

/* 802D5624 0048 .text      convStrLower__12JKRFileCacheCFPc                             */
// JKRFileCache::convStrLower(s8*) const
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void convStrLower__12JKRFileCacheCFPc() {
	nofralloc
#include "_include/JKernel/JKRFileCache/convStrLower__12JKRFileCacheCFPc.s"
}
#pragma pop

/* 802D566C 005C .text      __ct__Q212JKRFileCache11CCacheBlockFUlUlPCv                  */
// JKRFileCache::CCacheBlock::JKRFileCache::CCacheBlock(u32, u32, const void*)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void __ct__Q212JKRFileCache11CCacheBlockFUlUlPCv() {
	nofralloc
#include "_include/JKernel/JKRFileCache/__ct__Q212JKRFileCache11CCacheBlockFUlUlPCv.s"
}
#pragma pop

/* 802D56C8 002C .text      getFsResource__12JKRFileCacheFPCc                            */
// JKRFileCache::getFsResource(const s8*)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void getFsResource__12JKRFileCacheFPCc() {
	nofralloc
#include "_include/JKernel/JKRFileCache/getFsResource__12JKRFileCacheFPCc.s"
}
#pragma pop

/* 802D56F4 002C .text      getNameResource__12JKRFileCacheFUlPCc                        */
// JKRFileCache::getNameResource(u32, const s8*)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void getNameResource__12JKRFileCacheFUlPCc() {
	nofralloc
#include "_include/JKernel/JKRFileCache/getNameResource__12JKRFileCacheFUlPCc.s"
}
#pragma pop

/* 802D5720 002C .text      readFsResource__12JKRFileCacheFPvUlPCc                       */
// JKRFileCache::readFsResource(void*, u32, const s8*)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void readFsResource__12JKRFileCacheFPvUlPCc() {
	nofralloc
#include "_include/JKernel/JKRFileCache/readFsResource__12JKRFileCacheFPvUlPCc.s"
}
#pragma pop

/* 802D574C 002C .text      readNameResource__12JKRFileCacheFPvUlUlPCc                   */
// JKRFileCache::readNameResource(void*, u32, u32, const s8*)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void readNameResource__12JKRFileCacheFPvUlUlPCc() {
	nofralloc
#include "_include/JKernel/JKRFileCache/readNameResource__12JKRFileCacheFPvUlUlPCc.s"
}
#pragma pop

}

