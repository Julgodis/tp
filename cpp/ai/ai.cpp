// 
// Generated By: dol2asm
// 

#include "dolphin/types.h"

// 
// Additional Symbols:
// 

extern "C" {
/* Function             */
extern void OSRegisterVersion();
/* Function             */
extern void OSSetCurrentContext();
/* Function             */
extern void OSClearContext();
/* Function             */
extern void OSDisableInterrupts();
/* Function             */
extern void OSRestoreInterrupts();
/* Function             */
extern void __OSSetInterruptHandler();
/* Function             */
extern void __OSUnmaskInterrupts();
/* Function             */
extern void OSGetTime();
/* Function             */
extern void AIRegisterDMACallback();
/* Function             */
extern void AIInitDMA();
/* Function             */
extern void AIStartDMA();
/* Function             */
extern void AIStopDMA();
/* Function             */
extern void AISetStreamPlayState();
/* Function             */
extern void AIGetStreamPlayState();
/* Function             */
extern void AISetDSPSampleRate();
/* Function             */
extern void AIGetDSPSampleRate();
/* Function             */
extern void __AI_set_stream_sample_rate();
/* Function             */
extern void AIGetStreamSampleRate();
/* Function             */
extern void AISetStreamVolLeft();
/* Function             */
extern void AIGetStreamVolLeft();
/* Function             */
extern void AISetStreamVolRight();
/* Function             */
extern void AIGetStreamVolRight();
/* Function             */
extern void AIInit();
/* Function             */
extern void __AISHandler();
/* Function             */
extern void __AIDHandler();
/* Function             */
extern void __AICallbackStackSwitch();
/* Function             */
extern void __AI_SRC_INIT();
/* InitializedData      */
SECTION_DATA extern u8 ai__LIT_1[72];
/* SymbolReferenceArrayData */
SECTION_SDATA extern void* __AIVersion[2];
/* ZeroInitializedData  */
SECTION_SBSS extern u8 __AIS_Callback[4];
/* ZeroInitializedData  */
SECTION_SBSS extern u8 __AID_Callback[4];
/* ZeroInitializedData  */
SECTION_SBSS extern u8 __CallbackStack[4];
/* ZeroInitializedData  */
SECTION_SBSS extern u8 __OldStack[4];
/* ZeroInitializedData  */
SECTION_SBSS extern u8 __AI_init_flag[4];
/* ZeroInitializedData  */
SECTION_SBSS extern u8 __AID_Active[4];
/* ZeroInitializedData  */
SECTION_SBSS extern u8 bound_32KHz[4];
/* ZeroInitializedData  */
SECTION_SBSS extern u8 data_80451894[4];
/* ZeroInitializedData  */
SECTION_SBSS extern u8 bound_48KHz[4];
/* ZeroInitializedData  */
SECTION_SBSS extern u8 data_8045189C[4];
/* ZeroInitializedData  */
SECTION_SBSS extern u8 min_wait[4];
/* ZeroInitializedData  */
SECTION_SBSS extern u8 data_804518A4[4];
/* ZeroInitializedData  */
SECTION_SBSS extern u8 max_wait[4];
/* ZeroInitializedData  */
SECTION_SBSS extern u8 data_804518AC[4];
/* ZeroInitializedData  */
SECTION_SBSS extern u8 buffer[4];
/* ZeroInitializedData  */
SECTION_SBSS extern u8 data_804518B4[4];
}


/* ###################################################################################### */
/*                                         .data                                          */
/* ###################################################################################### */

extern "C" {
/* 803D1BA0-803D1BA0 0000 .data      ...data.0                                                    InitializedData */
/* 803D1BA0-803D1BE8 0044 .data      @1                                                           InitializedData */
SECTION_DATA u8 ai__LIT_1[72] = {
	0x3C, 0x3C, 0x20, 0x44, 0x6F, 0x6C, 0x70, 0x68, 0x69, 0x6E, 0x20, 0x53, 0x44, 0x4B, 0x20, 0x2D,
	0x20, 0x41, 0x49, 0x09, 0x72, 0x65, 0x6C, 0x65, 0x61, 0x73, 0x65, 0x20, 0x62, 0x75, 0x69, 0x6C,
	0x64, 0x3A, 0x20, 0x41, 0x70, 0x72, 0x20, 0x20, 0x35, 0x20, 0x32, 0x30, 0x30, 0x34, 0x20, 0x30,
	0x34, 0x3A, 0x31, 0x35, 0x3A, 0x30, 0x32, 0x20, 0x28, 0x30, 0x78, 0x32, 0x33, 0x30, 0x31, 0x29,
	0x20, 0x3E, 0x3E, 0x00,
	/* padding */
	0x00, 0x00, 0x00, 0x00,
};
}


/* ###################################################################################### */
/*                                         .sdata                                         */
/* ###################################################################################### */

extern "C" {
/* 80450A40-80450A48 0004 .sdata     __AIVersion                                                  SymbolReferenceArrayData */
SECTION_SDATA void* __AIVersion[2] = {
	(void*)&ai__LIT_1,
	/* padding */
	NULL,
};
}


/* ###################################################################################### */
/*                                         .sbss                                          */
/* ###################################################################################### */

extern "C" {
/* 80451878-8045187C 0004 .sbss      __AIS_Callback                                               ZeroInitializedData */
SECTION_SBSS u8 __AIS_Callback[4];
/* 8045187C-80451880 0004 .sbss      __AID_Callback                                               ZeroInitializedData */
SECTION_SBSS u8 __AID_Callback[4];
/* 80451880-80451884 0004 .sbss      __CallbackStack                                              ZeroInitializedData */
SECTION_SBSS u8 __CallbackStack[4];
/* 80451884-80451888 0004 .sbss      __OldStack                                                   ZeroInitializedData */
SECTION_SBSS u8 __OldStack[4];
/* 80451888-8045188C 0004 .sbss      __AI_init_flag                                               ZeroInitializedData */
SECTION_SBSS u8 __AI_init_flag[4];
/* 8045188C-80451890 0004 .sbss      __AID_Active                                                 ZeroInitializedData */
SECTION_SBSS u8 __AID_Active[4];
/* 80451890-80451894 0004 .sbss      bound_32KHz                                                  ZeroInitializedData */
SECTION_SBSS u8 bound_32KHz[4];
/* 80451894-80451898 0004 .sbss      data_80451894                                                ZeroInitializedData */
SECTION_SBSS u8 data_80451894[4];
/* 80451898-8045189C 0004 .sbss      bound_48KHz                                                  ZeroInitializedData */
SECTION_SBSS u8 bound_48KHz[4];
/* 8045189C-804518A0 0004 .sbss      data_8045189C                                                ZeroInitializedData */
SECTION_SBSS u8 data_8045189C[4];
/* 804518A0-804518A4 0004 .sbss      min_wait                                                     ZeroInitializedData */
SECTION_SBSS u8 min_wait[4];
/* 804518A4-804518A8 0004 .sbss      data_804518A4                                                ZeroInitializedData */
SECTION_SBSS u8 data_804518A4[4];
/* 804518A8-804518AC 0004 .sbss      max_wait                                                     ZeroInitializedData */
SECTION_SBSS u8 max_wait[4];
/* 804518AC-804518B0 0004 .sbss      data_804518AC                                                ZeroInitializedData */
SECTION_SBSS u8 data_804518AC[4];
/* 804518B0-804518B4 0004 .sbss      buffer                                                       ZeroInitializedData */
SECTION_SBSS u8 buffer[4];
/* 804518B4-804518B8 0004 .sbss      data_804518B4                                                ZeroInitializedData */
SECTION_SBSS u8 data_804518B4[4];
}


/* ###################################################################################### */
/*                                         .text                                          */
/* ###################################################################################### */

extern "C" {
/* 8034FC70-8034FCB4 0044 .text      AIRegisterDMACallback                                        Function */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void AIRegisterDMACallback() {
	nofralloc
#include "_include/ai/ai/AIRegisterDMACallback.s"
}
#pragma pop

/* 8034FCB4-8034FD3C 0088 .text      AIInitDMA                                                    Function */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void AIInitDMA() {
	nofralloc
#include "_include/ai/ai/AIInitDMA.s"
}
#pragma pop

/* 8034FD3C-8034FD54 0018 .text      AIStartDMA                                                   Function */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void AIStartDMA() {
	nofralloc
#include "_include/ai/ai/AIStartDMA.s"
}
#pragma pop

/* 8034FD54-8034FD6C 0018 .text      AIStopDMA                                                    Function */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void AIStopDMA() {
	nofralloc
#include "_include/ai/ai/AIStopDMA.s"
}
#pragma pop

/* 8034FD6C-8034FE44 00D8 .text      AISetStreamPlayState                                         Function */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void AISetStreamPlayState() {
	nofralloc
#include "_include/ai/ai/AISetStreamPlayState.s"
}
#pragma pop

/* 8034FE44-8034FE54 0010 .text      AIGetStreamPlayState                                         Function */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void AIGetStreamPlayState() {
	nofralloc
#include "_include/ai/ai/AIGetStreamPlayState.s"
}
#pragma pop

/* 8034FE54-8034FF34 00E0 .text      AISetDSPSampleRate                                           Function */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void AISetDSPSampleRate() {
	nofralloc
#include "_include/ai/ai/AISetDSPSampleRate.s"
}
#pragma pop

/* 8034FF34-8034FF48 0014 .text      AIGetDSPSampleRate                                           Function */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void AIGetDSPSampleRate() {
	nofralloc
#include "_include/ai/ai/AIGetDSPSampleRate.s"
}
#pragma pop

/* 8034FF48-8035001C 00D4 .text      __AI_set_stream_sample_rate                                  Function */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void __AI_set_stream_sample_rate() {
	nofralloc
#include "_include/ai/ai/__AI_set_stream_sample_rate.s"
}
#pragma pop

/* 8035001C-8035002C 0010 .text      AIGetStreamSampleRate                                        Function */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void AIGetStreamSampleRate() {
	nofralloc
#include "_include/ai/ai/AIGetStreamSampleRate.s"
}
#pragma pop

/* 8035002C-80350048 001C .text      AISetStreamVolLeft                                           Function */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void AISetStreamVolLeft() {
	nofralloc
#include "_include/ai/ai/AISetStreamVolLeft.s"
}
#pragma pop

/* 80350048-80350058 0010 .text      AIGetStreamVolLeft                                           Function */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void AIGetStreamVolLeft() {
	nofralloc
#include "_include/ai/ai/AIGetStreamVolLeft.s"
}
#pragma pop

/* 80350058-80350074 001C .text      AISetStreamVolRight                                          Function */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void AISetStreamVolRight() {
	nofralloc
#include "_include/ai/ai/AISetStreamVolRight.s"
}
#pragma pop

/* 80350074-80350084 0010 .text      AIGetStreamVolRight                                          Function */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void AIGetStreamVolRight() {
	nofralloc
#include "_include/ai/ai/AIGetStreamVolRight.s"
}
#pragma pop

/* 80350084-803501F0 016C .text      AIInit                                                       Function */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void AIInit() {
	nofralloc
#include "_include/ai/ai/AIInit.s"
}
#pragma pop

/* 803501F0-8035026C 007C .text      __AISHandler                                                 Function */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void __AISHandler() {
	nofralloc
#include "_include/ai/ai/__AISHandler.s"
}
#pragma pop

/* 8035026C-80350318 00AC .text      __AIDHandler                                                 Function */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void __AIDHandler() {
	nofralloc
#include "_include/ai/ai/__AIDHandler.s"
}
#pragma pop

/* 80350318-80350370 0058 .text      __AICallbackStackSwitch                                      Function */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void __AICallbackStackSwitch() {
	nofralloc
#include "_include/ai/ai/__AICallbackStackSwitch.s"
}
#pragma pop

/* 80350370-80350554 01E4 .text      __AI_SRC_INIT                                                Function */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void __AI_SRC_INIT() {
	nofralloc
#include "_include/ai/ai/__AI_SRC_INIT.s"
}
#pragma pop

}

