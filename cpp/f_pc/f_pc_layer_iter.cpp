// 
// Generated By: dol2asm
// 

#include "dolphin/types.h"

// 
// Additional Symbols:
// 

struct node_lists_tree_class;
struct layer_class;
struct method_filter;
struct node_class;
struct create_tag_class;
struct judge_filter;

extern void fpcLy_RootLayer(void); /* fpcLy_RootLayer__Fv */
extern void fpcLy_SetCurrentLayer(layer_class*); /* fpcLy_SetCurrentLayer__FP11layer_class */
extern void fpcLyIt_OnlyHere(layer_class*, int (*)(void*, void*), void*); /* fpcLyIt_OnlyHere__FP11layer_classPFPvPv_iPv */
extern void fpcLyIt_OnlyHereLY(layer_class*, int (*)(void*, void*), void*); /* fpcLyIt_OnlyHereLY__FP11layer_classPFPvPv_iPv */
extern void fpcLyIt_Judge(layer_class*, void* (*)(void*, void*), void*); /* fpcLyIt_Judge__FP11layer_classPFPvPv_PvPv */
extern void fpcLyIt_AllJudge(void* (*)(void*, void*), void*); /* fpcLyIt_AllJudge__FPFPvPv_PvPv */
extern void cTrIt_Method(node_lists_tree_class*, int (*)(node_class*, void*), void*); /* cTrIt_Method__FP21node_lists_tree_classPFP10node_classPv_iPv */
extern void cTrIt_Judge(node_lists_tree_class*, void* (*)(node_class*, void*), void*); /* cTrIt_Judge__FP21node_lists_tree_classPFP10node_classPv_PvPv */
extern void cTgIt_MethodCall(create_tag_class*, method_filter*); /* cTgIt_MethodCall__FP16create_tag_classP13method_filter */
extern void cTgIt_JudgeFilter(create_tag_class*, judge_filter*); /* cTgIt_JudgeFilter__FP16create_tag_classP12judge_filter */

extern "C" {
/* Function             */
extern void fpcLy_RootLayer__Fv();
/* Function             */
extern void fpcLy_SetCurrentLayer__FP11layer_class();
/* GlobalFunction       */
extern u32 fpcLy_CurrentLayer__Fv();
/* Function             */
extern void fpcLyIt_OnlyHere__FP11layer_classPFPvPv_iPv();
/* Function             */
extern void fpcLyIt_OnlyHereLY__FP11layer_classPFPvPv_iPv();
/* Function             */
extern void fpcLyIt_Judge__FP11layer_classPFPvPv_PvPv();
/* Function             */
extern void fpcLyIt_AllJudge__FPFPvPv_PvPv();
/* Function             */
extern void cTrIt_Method__FP21node_lists_tree_classPFP10node_classPv_iPv();
/* Function             */
extern void cTrIt_Judge__FP21node_lists_tree_classPFP10node_classPv_PvPv();
/* Function             */
extern void cTgIt_MethodCall__FP16create_tag_classP13method_filter();
/* Function             */
extern void cTgIt_JudgeFilter__FP16create_tag_classP12judge_filter();
/* Function             */
extern void _savegpr_28();
/* Function             */
extern void _restgpr_28();
}


/* ###################################################################################### */
/*                                         .text                                          */
/* ###################################################################################### */

extern "C" {
/* 80021B88-80021BC0 0038 .text      fpcLyIt_OnlyHere__FP11layer_classPFPvPv_iPv                  Function */
}

#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void fpcLyIt_OnlyHere(layer_class*, int (*)(void*, void*), void*) {
	nofralloc
#include "_include/f_pc/f_pc_layer_iter/fpcLyIt_OnlyHere__FP11layer_classPFPvPv_iPv.s"
}
#pragma pop

extern "C" {
/* 80021BC0-80021C28 0068 .text      fpcLyIt_OnlyHereLY__FP11layer_classPFPvPv_iPv                Function */
}

#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void fpcLyIt_OnlyHereLY(layer_class*, int (*)(void*, void*), void*) {
	nofralloc
#include "_include/f_pc/f_pc_layer_iter/fpcLyIt_OnlyHereLY__FP11layer_classPFPvPv_iPv.s"
}
#pragma pop

extern "C" {
/* 80021C28-80021C60 0038 .text      fpcLyIt_Judge__FP11layer_classPFPvPv_PvPv                    Function */
}

#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void fpcLyIt_Judge(layer_class*, void* (*)(void*, void*), void*) {
	nofralloc
#include "_include/f_pc/f_pc_layer_iter/fpcLyIt_Judge__FP11layer_classPFPvPv_PvPv.s"
}
#pragma pop

extern "C" {
/* 80021C60-80021CD4 0074 .text      fpcLyIt_AllJudge__FPFPvPv_PvPv                               Function */
}

#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void fpcLyIt_AllJudge(void* (*)(void*, void*), void*) {
	nofralloc
#include "_include/f_pc/f_pc_layer_iter/fpcLyIt_AllJudge__FPFPvPv_PvPv.s"
}
#pragma pop

extern "C" {
}

