// 
// Generated By: dol2asm
// 

#include "dolphin/types.h"

// 
// Additional Symbols:
// 

struct node_list_class;
struct base_process_class;
struct layer_class;

extern void fpcCtIt_JudgeInLayer(unsigned int, void* (*)(void*, void*), void*); /* fpcCtIt_JudgeInLayer__FUiPFPvPv_PvPv */
extern void fpcCt_IsCreatingByID(unsigned int); /* fpcCt_IsCreatingByID__FUi */
extern void fpcCt_Handler(void); /* fpcCt_Handler__Fv */
extern void fpcDt_Handler(void); /* fpcDt_Handler__Fv */
extern void fpcDt_Delete(void*); /* fpcDt_Delete__FPv */
extern void fpcEx_Execute(base_process_class*); /* fpcEx_Execute__FP18base_process_class */
extern void fpcEx_Handler(int (*)(void*, void*)); /* fpcEx_Handler__FPFPvPv_i */
extern void fpcLy_RootLayer(void); /* fpcLy_RootLayer__Fv */
extern void fpcLy_Layer(unsigned int); /* fpcLy_Layer__FUi */
extern void fpcLy_Create(layer_class*, void*, node_list_class*, int); /* fpcLy_Create__FP11layer_classPvP15node_list_classi */
extern void fpcLyIt_OnlyHere(layer_class*, int (*)(void*, void*), void*); /* fpcLyIt_OnlyHere__FP11layer_classPFPvPv_iPv */
extern void fpcLyIt_Judge(layer_class*, void* (*)(void*, void*), void*); /* fpcLyIt_Judge__FP11layer_classPFPvPv_PvPv */
extern void fpcLn_Create(void); /* fpcLn_Create__Fv */
extern void fpcM_Draw(void*); /* fpcM_Draw__FPv */
extern void fpcM_DrawIterater(int (*)(void*, void*)); /* fpcM_DrawIterater__FPFPvPv_i */
extern void fpcM_Execute(void*); /* fpcM_Execute__FPv */
extern void fpcPi_Handler(void); /* fpcPi_Handler__Fv */
extern void fpcPause_IsEnable(void*, u8); /* fpcPause_IsEnable__FPvUc */
extern void fpcPause_Enable(void*, u8); /* fpcPause_Enable__FPvUc */
extern void fpcPause_Disable(void*, u8); /* fpcPause_Disable__FPvUc */
extern void fpcDw_Execute(base_process_class*); /* fpcDw_Execute__FP18base_process_class */
extern void fpcDw_Handler(int (*)(int (*)(void*, void*)), int (*)(void*, void*)); /* fpcDw_Handler__FPFPFPvPv_i_iPFPvPv_i */
extern void fpcFCtRq_Request(layer_class*, s16, int (*)(void*, void*), void*, void*); /* fpcFCtRq_Request__FP11layer_classsPFPvPv_iPvPv */
extern void cAPIGph_Painter(void); /* cAPIGph_Painter__Fv */
extern void MtxInit(void); /* MtxInit__Fv */

extern "C" {
extern void fpcCtIt_JudgeInLayer__FUiPFPvPv_PvPv();
extern void fpcCt_IsCreatingByID__FUi();
extern void fpcCt_Handler__Fv();
extern void fpcDt_Handler__Fv();
extern void fpcDt_Delete__FPv();
extern void fpcEx_Execute__FP18base_process_class();
extern void fpcEx_Handler__FPFPvPv_i();
extern void fpcLy_RootLayer__Fv();
extern u32 fpcLy_CurrentLayer__Fv();
extern void fpcLy_Layer__FUi();
extern void fpcLy_Create__FP11layer_classPvP15node_list_classi();
extern void fpcLyIt_OnlyHere__FP11layer_classPFPvPv_iPv();
extern void fpcLyIt_Judge__FP11layer_classPFPvPv_PvPv();
extern void fpcLn_Create__Fv();
extern void fpcM_Draw__FPv();
extern void fpcM_DrawIterater__FPFPvPv_i();
extern void fpcM_Execute__FPv();
extern void fpcPi_Handler__Fv();
extern void fpcPause_IsEnable__FPvUc();
extern void fpcPause_Enable__FPvUc();
extern void fpcPause_Disable__FPvUc();
extern void fpcDw_Execute__FP18base_process_class();
extern void fpcDw_Handler__FPFPFPvPv_i_iPFPvPv_i();
extern void fpcFCtRq_Request__FP11layer_classsPFPvPv_iPvPv();
extern void drawSimpleModel__14dComIfG_play_cFv();
extern void stopTime__11dLib_time_cFv();
extern void startTime__11dLib_time_cFv();
extern void peekData__13dDlst_peekZ_cFv();
extern void execute__14dDvdErrorMsg_cFv();
extern void execute__19dShutdownErrorMsg_cFv();
extern void cAPIGph_Painter__Fv();
extern void MtxInit__Fv();
extern void pauseAllGameSound__10Z2SoundMgrFb();
extern void stopPatternedRumble__Q210JUTGamePad7CRumbleFs();
extern void _savegpr_28();
extern void _restgpr_28();
SECTION_BSS extern u8 m_gamePad__8mDoCPd_c[16];
SECTION_BSS extern u8 data_803F4DB0[44];
SECTION_BSS extern u8 data_803F4DDC[124];
SECTION_BSS extern u8 g_dComIfG_gameInfo[122384];
SECTION_SBSS extern u8 data_80450B60[4];
SECTION_SBSS extern u8 merged_80450D38[8];
SECTION_SBSS extern u8 data_80450EC4[4];
}


/* ###################################################################################### */
/*                                          .bss                                          */
/* ###################################################################################### */

extern "C" {
/* 803F4DB0 002C .bss       rootlayer$3716                                               */
SECTION_BSS u8 data_803F4DB0[44];
/* 803F4DDC 0078 .bss       queue$3717                                                   */
SECTION_BSS u8 data_803F4DDC[124];
}


/* ###################################################################################### */
/*                                         .text                                          */
/* ###################################################################################### */

extern "C" {
/* 800220A0 0020 .text      fpcM_Draw__FPv                                               */
}

#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void fpcM_Draw(void*) {
	nofralloc
#include "_include/f_pc/f_pc_manager/fpcM_Draw__FPv.s"
}
#pragma pop

extern "C" {
/* 800220C0 0038 .text      fpcM_DrawIterater__FPFPvPv_i                                 */
}

#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void fpcM_DrawIterater(int (*)(void*, void*)) {
	nofralloc
#include "_include/f_pc/f_pc_manager/fpcM_DrawIterater__FPFPvPv_i.s"
}
#pragma pop

extern "C" {
/* 800220F8 0020 .text      fpcM_Execute__FPv                                            */
}

#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void fpcM_Execute(void*) {
	nofralloc
#include "_include/f_pc/f_pc_manager/fpcM_Execute__FPv.s"
}
#pragma pop

extern "C" {
/* 80022118 0020 .text      fpcM_Delete__FPv                                             */
}

#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void fpcM_Delete(void*) {
	nofralloc
#include "_include/f_pc/f_pc_manager/fpcM_Delete__FPv.s"
}
#pragma pop

extern "C" {
/* 80022138 0020 .text      fpcM_IsCreating__FUi                                         */
}

#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void fpcM_IsCreating(unsigned int) {
	nofralloc
#include "_include/f_pc/f_pc_manager/fpcM_IsCreating__FUi.s"
}
#pragma pop

extern "C" {
/* 80022158 0160 .text      fpcM_Management__FPFv_vPFv_v                                 */
}

#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void fpcM_Management(void (*)(void), void (*)(void)) {
	nofralloc
#include "_include/f_pc/f_pc_manager/fpcM_Management__FPFv_vPFv_v.s"
}
#pragma pop

extern "C" {
/* 800222B8 003C .text      fpcM_Init__Fv                                                */
}

#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void fpcM_Init(void) {
	nofralloc
#include "_include/f_pc/f_pc_manager/fpcM_Init__Fv.s"
}
#pragma pop

extern "C" {
/* 800222F4 0054 .text      fpcM_FastCreate__FsPFPv_iPvPv                                */
}

#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void fpcM_FastCreate(s16, int (*)(void*), void*, void*) {
	nofralloc
#include "_include/f_pc/f_pc_manager/fpcM_FastCreate__FsPFPv_iPvPv.s"
}
#pragma pop

extern "C" {
/* 80022348 0024 .text      fpcM_IsPause__FPvUc                                          */
}

#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void fpcM_IsPause(void*, u8) {
	nofralloc
#include "_include/f_pc/f_pc_manager/fpcM_IsPause__FPvUc.s"
}
#pragma pop

extern "C" {
/* 8002236C 0024 .text      fpcM_PauseEnable__FPvUc                                      */
}

#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void fpcM_PauseEnable(void*, u8) {
	nofralloc
#include "_include/f_pc/f_pc_manager/fpcM_PauseEnable__FPvUc.s"
}
#pragma pop

extern "C" {
/* 80022390 0024 .text      fpcM_PauseDisable__FPvUc                                     */
}

#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void fpcM_PauseDisable(void*, u8) {
	nofralloc
#include "_include/f_pc/f_pc_manager/fpcM_PauseDisable__FPvUc.s"
}
#pragma pop

extern "C" {
/* 800223B4 0074 .text      fpcM_JudgeInLayer__FUiPFPvPv_PvPv                            */
}

#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void fpcM_JudgeInLayer(unsigned int, void* (*)(void*, void*), void*) {
	nofralloc
#include "_include/f_pc/f_pc_manager/fpcM_JudgeInLayer__FUiPFPvPv_PvPv.s"
}
#pragma pop

extern "C" {
}

