// 
// Generated By: dol2asm
// 

#include "dolphin/types.h"

// 
// Additional Symbols:
// 

extern "C" {
/* Function             */
extern void OSDisableInterrupts();
/* Function             */
extern void OSRestoreInterrupts();
/* Function             */
extern void OSInitMutex();
/* Function             */
extern void OSLockMutex();
/* Function             */
extern void OSUnlockMutex();
/* Function             */
extern void __OSUnlockAllMutex();
/* Function             */
extern void OSTryLockMutex();
/* Function             */
extern void OSInitCond();
/* Function             */
extern void OSWaitCond();
/* Function             */
extern void OSSignalCond();
/* Function             */
extern void __OSCheckMutex();
/* Function             */
extern void __OSCheckDeadLock();
/* Function             */
extern void __OSCheckMutexes();
/* Function             */
extern void OSInitThreadQueue();
/* Function             */
extern void OSGetCurrentThread();
/* Function             */
extern void OSDisableScheduler();
/* Function             */
extern void OSEnableScheduler();
/* Function             */
extern void __OSGetEffectivePriority();
/* Function             */
extern void __OSPromoteThread();
/* Function             */
extern void OSSleepThread();
/* Function             */
extern void OSWakeupThread();
}


/* ###################################################################################### */
/*                                         .text                                          */
/* ###################################################################################### */

extern "C" {
/* 8033F008-8033F040 0038 .text      OSInitMutex                                                  Function */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void OSInitMutex() {
	nofralloc
#include "_include/os/OSMutex/OSInitMutex.s"
}
#pragma pop

/* 8033F040-8033F11C 00DC .text      OSLockMutex                                                  Function */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void OSLockMutex() {
	nofralloc
#include "_include/os/OSMutex/OSLockMutex.s"
}
#pragma pop

/* 8033F11C-8033F1E4 00C8 .text      OSUnlockMutex                                                Function */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void OSUnlockMutex() {
	nofralloc
#include "_include/os/OSMutex/OSUnlockMutex.s"
}
#pragma pop

/* 8033F1E4-8033F254 0070 .text      __OSUnlockAllMutex                                           Function */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void __OSUnlockAllMutex() {
	nofralloc
#include "_include/os/OSMutex/__OSUnlockAllMutex.s"
}
#pragma pop

/* 8033F254-8033F310 00BC .text      OSTryLockMutex                                               Function */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void OSTryLockMutex() {
	nofralloc
#include "_include/os/OSMutex/OSTryLockMutex.s"
}
#pragma pop

/* 8033F310-8033F330 0020 .text      OSInitCond                                                   Function */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void OSInitCond() {
	nofralloc
#include "_include/os/OSMutex/OSInitCond.s"
}
#pragma pop

/* 8033F330-8033F404 00D4 .text      OSWaitCond                                                   Function */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void OSWaitCond() {
	nofralloc
#include "_include/os/OSMutex/OSWaitCond.s"
}
#pragma pop

/* 8033F404-8033F424 0020 .text      OSSignalCond                                                 Function */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void OSSignalCond() {
	nofralloc
#include "_include/os/OSMutex/OSSignalCond.s"
}
#pragma pop

/* 8033F424-8033F524 0100 .text      __OSCheckMutex                                               Function */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void __OSCheckMutex() {
	nofralloc
#include "_include/os/OSMutex/__OSCheckMutex.s"
}
#pragma pop

/* 8033F524-8033F55C 0038 .text      __OSCheckDeadLock                                            Function */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void __OSCheckDeadLock() {
	nofralloc
#include "_include/os/OSMutex/__OSCheckDeadLock.s"
}
#pragma pop

/* 8033F55C-8033F5D0 0074 .text      __OSCheckMutexes                                             Function */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void __OSCheckMutexes() {
	nofralloc
#include "_include/os/OSMutex/__OSCheckMutexes.s"
}
#pragma pop

}

