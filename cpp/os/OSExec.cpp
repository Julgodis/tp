// 
// Generated By: dol2asm
// 

#include "dolphin/types.h"

// 
// Additional Symbols:
// 

extern "C" {
extern void memset();
extern void memcpy();
extern void OSReport();
extern void OSSetArenaLo();
extern void OSAllocFromArenaLo();
extern void ICInvalidateRange();
extern void ICFlashInvalidate();
extern void PackArgs();
extern void Run();
extern void ReadDisc();
extern void OSExec__Callback();
extern void GetApploaderPosition();
extern void __OSBootDolSimple();
extern void OSDisableInterrupts();
extern void OSEnableInterrupts();
extern void __OSMaskInterrupts();
extern void __OSUnmaskInterrupts();
extern void OSGetSaveRegion();
extern void __OSDoHotReset();
extern void DVDInit();
extern void DVDReadAbsAsyncPrio();
extern void DVDCancelStreamAsync();
extern void DVDGetCommandBlockStatus();
extern void DVDSetAutoInvalidation();
extern void DVDResume();
extern void DVDGetCurrentDiskID();
extern void DVDCheckDisk();
extern void __DVDPrepareResetAsync();
extern void AISetStreamPlayState();
extern void AISetStreamVolLeft();
extern void AISetStreamVolRight();
extern void sprintf();
extern void strncmp();
extern void strcpy();
extern void strlen();
SECTION_DATA extern u8 OSExec__LIT_115[16];
SECTION_SDATA extern u8 OSExec__LIT_213[8];
SECTION_SBSS extern u8 __OSIsGcam[4];
SECTION_SBSS extern u8 Prepared[4];
SECTION_SBSS extern u8 data_8045165C[4];
}


/* ###################################################################################### */
/*                                         .data                                          */
/* ###################################################################################### */

extern "C" {
/* 803CFC38 000B .data      @115                                                         */
SECTION_DATA u8 OSExec__LIT_115[16] = {
	0x32, 0x30, 0x30, 0x34, 0x2F, 0x30, 0x32, 0x2F, 0x30, 0x31, 0x00,
	/* padding */
	0x00, 0x00, 0x00, 0x00, 0x00,
};
}


/* ###################################################################################### */
/*                                         .sdata                                         */
/* ###################################################################################### */

extern "C" {
/* 804509A8 0003 .sdata     @213                                                         */
SECTION_SDATA u8 OSExec__LIT_213[8] = {
	0x25, 0x64, 0x00,
	/* padding */
	0x00, 0x00, 0x00, 0x00, 0x00,
};
}


/* ###################################################################################### */
/*                                         .sbss                                          */
/* ###################################################################################### */

extern "C" {
/* 80451658 0004 .sbss      Prepared                                                     */
SECTION_SBSS u8 Prepared[4];
/* 8045165C 0004 .sbss      apploaderPosition$69                                         */
SECTION_SBSS u8 data_8045165C[4];
}


/* ###################################################################################### */
/*                                         .text                                          */
/* ###################################################################################### */

extern "C" {
/* 8033CA80 0188 .text      PackArgs                                                     */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void PackArgs() {
	nofralloc
#include "_include/os/OSExec/PackArgs.s"
}
#pragma pop

/* 8033CC08 003C .text      Run                                                          */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void Run() {
	nofralloc
#include "_include/os/OSExec/Run.s"
}
#pragma pop

/* 8033CC44 006C .text      ReadDisc                                                     */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void ReadDisc() {
	nofralloc
#include "_include/os/OSExec/ReadDisc.s"
}
#pragma pop

/* 8033CCB0 000C .text      Callback                                                     */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void OSExec__Callback() {
	nofralloc
#include "_include/os/OSExec/OSExec__Callback.s"
}
#pragma pop

/* 8033CCBC 0040 .text      __OSGetExecParams                                            */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void __OSGetExecParams() {
	nofralloc
#include "_include/os/OSExec/__OSGetExecParams.s"
}
#pragma pop

/* 8033CCFC 00C4 .text      GetApploaderPosition                                         */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void GetApploaderPosition() {
	nofralloc
#include "_include/os/OSExec/GetApploaderPosition.s"
}
#pragma pop

/* 8033CDC0 0484 .text      __OSBootDolSimple                                            */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void __OSBootDolSimple() {
	nofralloc
#include "_include/os/OSExec/__OSBootDolSimple.s"
}
#pragma pop

/* 8033D244 019C .text      __OSBootDol                                                  */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void __OSBootDol() {
	nofralloc
#include "_include/os/OSExec/__OSBootDol.s"
}
#pragma pop

}

