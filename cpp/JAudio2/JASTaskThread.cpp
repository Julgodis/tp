// 
// Generated By: dol2asm
// 

#include "dolphin/types.h"

// 
// Additional Symbols:
// 

struct JKRHeap;

extern void* operator new(u32, JKRHeap*, int); /* __nw__FUlP7JKRHeapi */
extern void operator delete(void*); /* __dl__FPv */

extern "C" {
/* Function             */
extern void bcopy__7JASCalcFPCvPvUl();
/* Function             */
extern void __ct__13JASTaskThreadFiiUl();
/* Function             */
extern void __dt__13JASTaskThreadFv();
/* Function             */
extern void allocCallStack__13JASTaskThreadFPFPv_vPCvUl();
/* Function             */
extern void allocCallStack__13JASTaskThreadFPFPv_vPv();
/* Function             */
extern void sendCmdMsg__13JASTaskThreadFPFPv_vPCvUl();
/* Function             */
extern void sendCmdMsg__13JASTaskThreadFPFPv_vPv();
/* Function             */
extern void run__13JASTaskThreadFv();
/* Function             */
extern void pause__13JASTaskThreadFb();
/* GlobalFunction       */
extern u32 getSystemHeap__9JASKernelFv();
/* GlobalFunction       */
extern u32 getCommandHeap__9JASKernelFv();
/* Function             */
extern void __nw__FUlP7JKRHeapi();
/* Function             */
extern void __dl__FPv();
/* Function             */
extern void __ct__9JKRThreadFP7JKRHeapUlii();
/* Function             */
extern void __dt__9JKRThreadFv();
/* Function             */
extern void OSDisableInterrupts();
/* Function             */
extern void OSRestoreInterrupts();
/* Function             */
extern void OSSendMessage();
/* Function             */
extern void OSReceiveMessage();
/* Function             */
extern void OSLockMutex();
/* Function             */
extern void OSUnlockMutex();
/* Function             */
extern void OSInitThreadQueue();
/* Function             */
extern void OSSleepThread();
/* Function             */
extern void OSWakeupThread();
/* Function             */
extern void _savegpr_26();
/* Function             */
extern void _savegpr_27();
/* Function             */
extern void _savegpr_28();
/* Function             */
extern void _restgpr_26();
/* Function             */
extern void _restgpr_27();
/* Function             */
extern void _restgpr_28();
/* VTableData           */
SECTION_DATA extern void* __vt__13JASTaskThread[4];
/* ZeroInitializedData  */
SECTION_SBSS extern u8 JASDram[4];
/* ZeroInitializedData  */
SECTION_SBSS extern u8 sSystemHeap__7JKRHeap[4];
}


/* ###################################################################################### */
/*                                         .data                                          */
/* ###################################################################################### */

extern "C" {
/* 803C5B58-803C5B68 0010 .data      __vt__13JASTaskThread                                        VTableData */
SECTION_DATA void* __vt__13JASTaskThread[4] = {
	NULL, /* RTTI */
	NULL,
	(void*)__dt__13JASTaskThreadFv,
	(void*)run__13JASTaskThreadFv,
};
}


/* ###################################################################################### */
/*                                         .text                                          */
/* ###################################################################################### */

extern "C" {
/* 8028F6C4-8028F724 0060 .text      __ct__13JASTaskThreadFiiUl                                   Function */
// JASTaskThread::JASTaskThread(int, int, u32)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void __ct__13JASTaskThreadFiiUl() {
	nofralloc
#include "_include/JAudio2/JASTaskThread/__ct__13JASTaskThreadFiiUl.s"
}
#pragma pop

/* 8028F724-8028F850 012C .text      __dt__13JASTaskThreadFv                                      Function */
// JASTaskThread::~JASTaskThread(void)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void __dt__13JASTaskThreadFv() {
	nofralloc
#include "_include/JAudio2/JASTaskThread/__dt__13JASTaskThreadFv.s"
}
#pragma pop

/* 8028F850-8028F9EC 019C .text      allocCallStack__13JASTaskThreadFPFPv_vPCvUl                  Function */
// JASTaskThread::allocCallStack(void (*)(void*), const void*, u32)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void allocCallStack__13JASTaskThreadFPFPv_vPCvUl() {
	nofralloc
#include "_include/JAudio2/JASTaskThread/allocCallStack__13JASTaskThreadFPFPv_vPCvUl.s"
}
#pragma pop

/* 8028F9EC-8028FB5C 0170 .text      allocCallStack__13JASTaskThreadFPFPv_vPv                     Function */
// JASTaskThread::allocCallStack(void (*)(void*), void*)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void allocCallStack__13JASTaskThreadFPFPv_vPv() {
	nofralloc
#include "_include/JAudio2/JASTaskThread/allocCallStack__13JASTaskThreadFPFPv_vPv.s"
}
#pragma pop

/* 8028FB5C-8028FC54 00F8 .text      sendCmdMsg__13JASTaskThreadFPFPv_vPCvUl                      Function */
// JASTaskThread::sendCmdMsg(void (*)(void*), const void*, u32)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void sendCmdMsg__13JASTaskThreadFPFPv_vPCvUl() {
	nofralloc
#include "_include/JAudio2/JASTaskThread/sendCmdMsg__13JASTaskThreadFPFPv_vPCvUl.s"
}
#pragma pop

/* 8028FC54-8028FD4C 00F8 .text      sendCmdMsg__13JASTaskThreadFPFPv_vPv                         Function */
// JASTaskThread::sendCmdMsg(void (*)(void*), void*)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void sendCmdMsg__13JASTaskThreadFPFPv_vPv() {
	nofralloc
#include "_include/JAudio2/JASTaskThread/sendCmdMsg__13JASTaskThreadFPFPv_vPv.s"
}
#pragma pop

/* 8028FD4C-8028FE88 013C .text      run__13JASTaskThreadFv                                       Function */
// JASTaskThread::run(void)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void run__13JASTaskThreadFv() {
	nofralloc
#include "_include/JAudio2/JASTaskThread/run__13JASTaskThreadFv.s"
}
#pragma pop

/* 8028FE88-8028FEFC 0074 .text      pause__13JASTaskThreadFb                                     Function */
// JASTaskThread::pause(bool)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void pause__13JASTaskThreadFb() {
	nofralloc
#include "_include/JAudio2/JASTaskThread/pause__13JASTaskThreadFb.s"
}
#pragma pop

}

