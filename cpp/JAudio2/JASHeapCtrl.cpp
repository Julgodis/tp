// 
// Generated By: dol2asm
// 

#include "dolphin/types.h"

// 
// Additional Symbols:
// 

struct JKRHeap;

extern void* operator new(u32, JKRHeap*, int); /* __nw__FUlP7JKRHeapi */
extern void* operator new[](u32, JKRHeap*, int); /* __nwa__FUlP7JKRHeapi */
extern void operator delete(void*); /* __dl__FPv */
extern void operator delete[](void*); /* __dla__FPv */

extern "C" {
extern void __ct__7JASHeapFP11JASDisposer();
extern void initRootHeap__7JASHeapFPvUl();
extern void free__7JASHeapFv();
extern void insertChild__7JASHeapFP7JASHeapP7JASHeapPvUlb();
extern void getTailHeap__7JASHeapFv();
extern void getTailOffset__7JASHeapFv();
extern void getCurOffset__7JASHeapFv();
extern u32 getSystemHeap__9JASKernelFv();
extern void __dt__7JASHeapFv();
extern void __nw__FUlP7JKRHeapi();
extern void __nwa__FUlP7JKRHeapi();
extern void __dl__FPv();
extern void __dla__FPv();
extern void create__10JKRExpHeapFUlP7JKRHeapb();
extern void __ct__10JSUPtrLinkFPv();
extern void __dt__10JSUPtrLinkFv();
extern void __dt__10JSUPtrListFv();
extern void initiate__10JSUPtrListFv();
extern void insert__10JSUPtrListFP10JSUPtrLinkP10JSUPtrLink();
extern void remove__10JSUPtrListFP10JSUPtrLink();
extern void OSInitMutex();
extern void OSLockMutex();
extern void OSUnlockMutex();
extern void __register_global_object();
extern void _savegpr_26();
extern void _savegpr_27();
extern void _savegpr_28();
extern void _savegpr_29();
extern void _restgpr_26();
extern void _restgpr_27();
extern void _restgpr_28();
extern void _restgpr_29();
SECTION_BSS extern u8 LIT_313[12];
SECTION_BSS extern u8 audioAramHeap__9JASKernel[68];
SECTION_SBSS extern u8 JASDram[4];
SECTION_SBSS extern u8 sAramBase__9JASKernel[4];
SECTION_SBSS extern u8 sSystemHeap__9JASKernel[4];
SECTION_SBSS extern u8 sCommandHeap__9JASKernel[4];
SECTION_SBSS extern u8 sSystemHeap__7JKRHeap[4];
}


/* ###################################################################################### */
/*                                          .bss                                          */
/* ###################################################################################### */

extern "C" {
/* 804315D0 000C .bss       @313                                                         */
SECTION_BSS u8 LIT_313[12];
/* 804315DC 0044 .bss       audioAramHeap__9JASKernel                                    */
SECTION_BSS u8 audioAramHeap__9JASKernel[68];
}


/* ###################################################################################### */
/*                                         .sbss                                          */
/* ###################################################################################### */

extern "C" {
/* 80451210 0004 .sbss      JASDram                                                      */
SECTION_SBSS u8 JASDram[4];
/* 80451214 0004 .sbss      sAramBase__9JASKernel                                        */
SECTION_SBSS u8 sAramBase__9JASKernel[4];
/* 80451218 0004 .sbss      sSystemHeap__9JASKernel                                      */
SECTION_SBSS u8 sSystemHeap__9JASKernel[4];
/* 8045121C 0004 .sbss      sCommandHeap__9JASKernel                                     */
SECTION_SBSS u8 sCommandHeap__9JASKernel[4];
}


/* ###################################################################################### */
/*                                         .text                                          */
/* ###################################################################################### */

extern "C" {
/* 80290140 006C .text      __ct__7JASHeapFP11JASDisposer                                */
// JASHeap::JASHeap(JASDisposer*)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void __ct__7JASHeapFP11JASDisposer() {
	nofralloc
#include "_include/JAudio2/JASHeapCtrl/__ct__7JASHeapFP11JASDisposer.s"
}
#pragma pop

/* 802901AC 0070 .text      initRootHeap__7JASHeapFPvUl                                  */
// JASHeap::initRootHeap(void*, u32)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void initRootHeap__7JASHeapFPvUl() {
	nofralloc
#include "_include/JAudio2/JASHeapCtrl/initRootHeap__7JASHeapFPvUl.s"
}
#pragma pop

/* 8029021C 01D8 .text      alloc__7JASHeapFP7JASHeapUl                                  */
// JASHeap::alloc(JASHeap*, u32)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void alloc__7JASHeapFP7JASHeapUl() {
	nofralloc
#include "_include/JAudio2/JASHeapCtrl/alloc__7JASHeapFP7JASHeapUl.s"
}
#pragma pop

/* 802903F4 00F0 .text      allocTail__7JASHeapFP7JASHeapUl                              */
// JASHeap::allocTail(JASHeap*, u32)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void allocTail__7JASHeapFP7JASHeapUl() {
	nofralloc
#include "_include/JAudio2/JASHeapCtrl/allocTail__7JASHeapFP7JASHeapUl.s"
}
#pragma pop

/* 802904E4 0124 .text      free__7JASHeapFv                                             */
// JASHeap::free(void)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void free__7JASHeapFv() {
	nofralloc
#include "_include/JAudio2/JASHeapCtrl/free__7JASHeapFv.s"
}
#pragma pop

/* 80290608 00E8 .text      insertChild__7JASHeapFP7JASHeapP7JASHeapPvUlb                */
// JASHeap::insertChild(JASHeap*, JASHeap*, void*, u32, bool)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void insertChild__7JASHeapFP7JASHeapP7JASHeapPvUlb() {
	nofralloc
#include "_include/JAudio2/JASHeapCtrl/insertChild__7JASHeapFP7JASHeapP7JASHeapPvUlb.s"
}
#pragma pop

/* 802906F0 008C .text      getTailHeap__7JASHeapFv                                      */
// JASHeap::getTailHeap(void)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void getTailHeap__7JASHeapFv() {
	nofralloc
#include "_include/JAudio2/JASHeapCtrl/getTailHeap__7JASHeapFv.s"
}
#pragma pop

/* 8029077C 0064 .text      getTailOffset__7JASHeapFv                                    */
// JASHeap::getTailOffset(void)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void getTailOffset__7JASHeapFv() {
	nofralloc
#include "_include/JAudio2/JASHeapCtrl/getTailOffset__7JASHeapFv.s"
}
#pragma pop

/* 802907E0 0068 .text      getCurOffset__7JASHeapFv                                     */
// JASHeap::getCurOffset(void)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void getCurOffset__7JASHeapFv() {
	nofralloc
#include "_include/JAudio2/JASHeapCtrl/getCurOffset__7JASHeapFv.s"
}
#pragma pop

/* 80290848 0018 .text      __ct__17JASGenericMemPoolFv                                  */
// JASGenericMemPool::JASGenericMemPool(void)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void __ct__17JASGenericMemPoolFv() {
	nofralloc
#include "_include/JAudio2/JASHeapCtrl/__ct__17JASGenericMemPoolFv.s"
}
#pragma pop

/* 80290860 0068 .text      __dt__17JASGenericMemPoolFv                                  */
// JASGenericMemPool::~JASGenericMemPool(void)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void __dt__17JASGenericMemPoolFv() {
	nofralloc
#include "_include/JAudio2/JASHeapCtrl/__dt__17JASGenericMemPoolFv.s"
}
#pragma pop

/* 802908C8 0080 .text      newMemPool__17JASGenericMemPoolFUli                          */
// JASGenericMemPool::newMemPool(u32, int)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void newMemPool__17JASGenericMemPoolFUli() {
	nofralloc
#include "_include/JAudio2/JASHeapCtrl/newMemPool__17JASGenericMemPoolFUli.s"
}
#pragma pop

/* 80290948 004C .text      alloc__17JASGenericMemPoolFUl                                */
// JASGenericMemPool::alloc(u32)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void alloc__17JASGenericMemPoolFUl() {
	nofralloc
#include "_include/JAudio2/JASHeapCtrl/alloc__17JASGenericMemPoolFUl.s"
}
#pragma pop

/* 80290994 0024 .text      free__17JASGenericMemPoolFPvUl                               */
// JASGenericMemPool::free(void*, u32)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void free__17JASGenericMemPoolFPvUl() {
	nofralloc
#include "_include/JAudio2/JASHeapCtrl/free__17JASGenericMemPoolFPvUl.s"
}
#pragma pop

/* 802909B8 0108 .text      setupRootHeap__9JASKernelFP12JKRSolidHeapUl                  */
// JASKernel::setupRootHeap(JKRSolidHeap*, u32)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void setupRootHeap__9JASKernelFP12JKRSolidHeapUl() {
	nofralloc
#include "_include/JAudio2/JASHeapCtrl/setupRootHeap__9JASKernelFP12JKRSolidHeapUl.s"
}
#pragma pop

/* 80290AC0 0008 .text      getSystemHeap__9JASKernelFv                                  */
// JASKernel::getSystemHeap(void)
u32 getSystemHeap__9JASKernelFv() {
	return *(u32*)&sSystemHeap__9JASKernel;
}

/* 80290AC8 0008 .text      getCommandHeap__9JASKernelFv                                 */
// JASKernel::getCommandHeap(void)
u32 getCommandHeap__9JASKernelFv() {
	return *(u32*)&sCommandHeap__9JASKernel;
}

/* 80290AD0 0038 .text      setupAramHeap__9JASKernelFUlUl                               */
// JASKernel::setupAramHeap(u32, u32)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void setupAramHeap__9JASKernelFUlUl() {
	nofralloc
#include "_include/JAudio2/JASHeapCtrl/setupAramHeap__9JASKernelFUlUl.s"
}
#pragma pop

/* 80290B08 000C .text      getAramHeap__9JASKernelFv                                    */
// JASKernel::getAramHeap(void)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void getAramHeap__9JASKernelFv() {
	nofralloc
#include "_include/JAudio2/JASHeapCtrl/getAramHeap__9JASKernelFv.s"
}
#pragma pop

/* 80290B14 0040 .text      __sinit_JASHeapCtrl_cpp                                      */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void __sinit_JASHeapCtrl_cpp() {
	nofralloc
#include "_include/JAudio2/JASHeapCtrl/__sinit_JASHeapCtrl_cpp.s"
}
#pragma pop

/* 80290B54 0078 .text      __dt__7JASHeapFv                                             */
// JASHeap::~JASHeap(void)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void __dt__7JASHeapFv() {
	nofralloc
#include "_include/JAudio2/JASHeapCtrl/__dt__7JASHeapFv.s"
}
#pragma pop

/* 80290BCC 0004 .text      onDispose__11JASDisposerFv                                   */
// JASDisposer::onDispose(void)
void onDispose__11JASDisposerFv() {
	return;
}

}

