// 
// Generated By: dol2asm
// 

#include "dolphin/types.h"

// 
// Additional Symbols:
// 

extern "C" {
extern void sendCmdMsg__13JASTaskThreadFPFPv_vPCvUl();
extern u32 getThreadPointer__6JASDvdFv();
extern void loadResourceCallback__15JASResArcLoaderFPv();
extern void readResource__10JKRArchiveFPvUlUs();
extern void findIdxResource__10JKRArchiveCFUl();
extern void findIdResource__10JKRArchiveCFUs();
extern void OSSendMessage();
extern void _savegpr_28();
extern void _restgpr_28();
}


/* ###################################################################################### */
/*                                         .text                                          */
/* ###################################################################################### */

extern "C" {
/* 80290BD0 0034 .text      getResSize__15JASResArcLoaderFPC10JKRArchiveUs               */
// JASResArcLoader::getResSize(const JKRArchive*, u16)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void getResSize__15JASResArcLoaderFPC10JKRArchiveUs() {
	nofralloc
#include "_include/JAudio2/JASResArcLoader/getResSize__15JASResArcLoaderFPC10JKRArchiveUs.s"
}
#pragma pop

/* 80290C04 0078 .text      getResMaxSize__15JASResArcLoaderFPC10JKRArchive              */
// JASResArcLoader::getResMaxSize(const JKRArchive*)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void getResMaxSize__15JASResArcLoaderFPC10JKRArchive() {
	nofralloc
#include "_include/JAudio2/JASResArcLoader/getResMaxSize__15JASResArcLoaderFPC10JKRArchive.s"
}
#pragma pop

/* 80290C7C 009C .text      loadResourceCallback__15JASResArcLoaderFPv                   */
// JASResArcLoader::loadResourceCallback(void*)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void loadResourceCallback__15JASResArcLoaderFPv() {
	nofralloc
#include "_include/JAudio2/JASResArcLoader/loadResourceCallback__15JASResArcLoaderFPv.s"
}
#pragma pop

/* 80290D18 005C .text      loadResourceAsync__15JASResArcLoaderFP10JKRArchiveUsPUcUlPFUlUl_vUl */
// JASResArcLoader::loadResourceAsync(JKRArchive*, u16, u8*, u32, void (*)(u32, u32), u32)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void loadResourceAsync__15JASResArcLoaderFP10JKRArchiveUsPUcUlPFUlUl_vUl() {
	nofralloc
#include "_include/JAudio2/JASResArcLoader/loadResourceAsync__15JASResArcLoaderFP10JKRArchiveUsPUcUlPFUlUl_vUl.s"
}
#pragma pop

}

