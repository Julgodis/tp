// 
// Generated By: dol2asm
// 

#include "dolphin/types.h"

// 
// Additional Symbols:
// 

extern "C" {
extern void free();
extern void __end_critical_region();
extern void __begin_critical_region();
extern void fflush();
extern void fclose();
SECTION_DATA extern u8 __files[320];
}


/* ###################################################################################### */
/*                                         .data                                          */
/* ###################################################################################### */

extern "C" {
/* 803D29B0 0140 .data      __files                                                      */
SECTION_DATA u8 __files[320] = {
	0x00, 0x00, 0x00, 0x00, 0x0A, 0x80, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x80, 0x44, 0xD7, 0x78,
	0x00, 0x00, 0x01, 0x00, 0x80, 0x44, 0xD7, 0x78, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x80, 0x37, 0x22, 0x58,
	0x80, 0x36, 0x91, 0xA4, 0x80, 0x36, 0x91, 0x9C, 0x00, 0x00, 0x00, 0x00, 0x80, 0x3D, 0x2A, 0x00,
	0x00, 0x00, 0x00, 0x01, 0x12, 0x80, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x80, 0x44, 0xD6, 0x78,
	0x00, 0x00, 0x01, 0x00, 0x80, 0x44, 0xD6, 0x78, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x80, 0x37, 0x22, 0x58,
	0x80, 0x36, 0x91, 0xA4, 0x80, 0x36, 0x91, 0x9C, 0x00, 0x00, 0x00, 0x00, 0x80, 0x3D, 0x2A, 0x50,
	0x00, 0x00, 0x00, 0x02, 0x10, 0x80, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x80, 0x44, 0xD5, 0x78,
	0x00, 0x00, 0x01, 0x00, 0x80, 0x44, 0xD5, 0x78, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x80, 0x37, 0x22, 0x58,
	0x80, 0x36, 0x91, 0xA4, 0x80, 0x36, 0x91, 0x9C, 0x00, 0x00, 0x00, 0x00, 0x80, 0x3D, 0x2A, 0xA0,
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
};
}


/* ###################################################################################### */
/*                                          .bss                                          */
/* ###################################################################################### */

extern "C" {
/* 8044D578 0100 .bss       stderr_buff                                                  */
SECTION_BSS u8 stderr_buff[256];
/* 8044D678 0100 .bss       stdout_buff                                                  */
SECTION_BSS u8 stdout_buff[256];
/* 8044D778 0100 .bss       stdin_buff                                                   */
SECTION_BSS u8 stdin_buff[256];
}


/* ###################################################################################### */
/*                                         .text                                          */
/* ###################################################################################### */

extern "C" {
/* 8036300C 0070 .text      __flush_all                                                  */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void __flush_all() {
	nofralloc
#include "_include/MSL_C.PPCEABI.bare.H/MSL_Common/Src/ansi_files/__flush_all.s"
}
#pragma pop

/* 8036307C 00A8 .text      __close_all                                                  */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void __close_all() {
	nofralloc
#include "_include/MSL_C.PPCEABI.bare.H/MSL_Common/Src/ansi_files/__close_all.s"
}
#pragma pop

}

