// 
// Generated By: dol2asm
// 

#include "dolphin/types.h"

// 
// Additional Symbols:
// 

struct JPAEmitterWorkData;

extern void JPAVolumePoint(JPAEmitterWorkData*); /* JPAVolumePoint__FP18JPAEmitterWorkData */
extern void JPAVolumeLine(JPAEmitterWorkData*); /* JPAVolumeLine__FP18JPAEmitterWorkData */
extern void JPAVolumeCircle(JPAEmitterWorkData*); /* JPAVolumeCircle__FP18JPAEmitterWorkData */
extern void JPAVolumeCube(JPAEmitterWorkData*); /* JPAVolumeCube__FP18JPAEmitterWorkData */
extern void JPAVolumeSphere(JPAEmitterWorkData*); /* JPAVolumeSphere__FP18JPAEmitterWorkData */
extern void JPAVolumeCylinder(JPAEmitterWorkData*); /* JPAVolumeCylinder__FP18JPAEmitterWorkData */
extern void JPAVolumeTorus(JPAEmitterWorkData*); /* JPAVolumeTorus__FP18JPAEmitterWorkData */

extern "C" {
/* Function             */
extern void JPAVolumePoint__FP18JPAEmitterWorkData();
/* Function             */
extern void JPAVolumeLine__FP18JPAEmitterWorkData();
/* Function             */
extern void JPAVolumeCircle__FP18JPAEmitterWorkData();
/* Function             */
extern void JPAVolumeCube__FP18JPAEmitterWorkData();
/* Function             */
extern void JPAVolumeSphere__FP18JPAEmitterWorkData();
/* Function             */
extern void JPAVolumeCylinder__FP18JPAEmitterWorkData();
/* Function             */
extern void JPAVolumeTorus__FP18JPAEmitterWorkData();
/* Function             */
extern void __ct__16JPADynamicsBlockFPCUc();
/* Function             */
extern void init__16JPADynamicsBlockFv();
/* Function             */
extern void create__16JPADynamicsBlockFP18JPAEmitterWorkData();
/* Function             */
extern void createParticle__14JPABaseEmitterFv();
/* SymbolReferenceArrayData */
SECTION_DATA extern void* LIT_2631[8];
/* ZeroInitializedData  */
SECTION_BSS extern u8 sincosTable___5JMath[65536];
/* InitializedData      */
SECTION_SDATA2 extern u8 LIT_2287[4];
/* Float32Data          */
SECTION_SDATA2 extern f32 JPADynamicsBlock__LIT_2288;
/* InitializedData      */
SECTION_SDATA2 extern u8 LIT_2289[8];
/* Float64Data          */
SECTION_SDATA2 extern f64 LIT_2321;
/* InitializedData      */
SECTION_SDATA2 extern u8 LIT_2501[8];
/* Float64Data          */
SECTION_SDATA2 extern f64 JPADynamicsBlock__LIT_2503;
}


/* ###################################################################################### */
/*                                         .data                                          */
/* ###################################################################################### */

extern "C" {
/* 803C4488-803C44A8 001C .data      @2631                                                        SymbolReferenceArrayData */
SECTION_DATA void* LIT_2631[8] = {
	(void*)(((u32*)init__16JPADynamicsBlockFv)+11),
	(void*)(((u32*)init__16JPADynamicsBlockFv)+15),
	(void*)(((u32*)init__16JPADynamicsBlockFv)+19),
	(void*)(((u32*)init__16JPADynamicsBlockFv)+23),
	(void*)(((u32*)init__16JPADynamicsBlockFv)+27),
	(void*)(((u32*)init__16JPADynamicsBlockFv)+31),
	(void*)(((u32*)init__16JPADynamicsBlockFv)+35),
	/* padding */
	NULL,
};
}


/* ###################################################################################### */
/*                                        .sdata2                                         */
/* ###################################################################################### */

extern "C" {
/* 80455310-80455314 0004 .sdata2    @2287                                                        InitializedData */
SECTION_SDATA2 u8 LIT_2287[4] = {
	0x00, 0x00, 0x00, 0x00,
};
/* 80455314-80455318 0004 .sdata2    @2288                                                        Float32Data */
// 0x3f800000
SECTION_SDATA2 f32 JPADynamicsBlock__LIT_2288 = 1.000000f;
/* 80455318-80455320 0004 .sdata2    @2289                                                        InitializedData */
SECTION_SDATA2 u8 LIT_2289[8] = {
	0x3F, 0x00, 0x00, 0x00,
	/* padding */
	0x00, 0x00, 0x00, 0x00,
};
/* 80455320-80455328 0008 .sdata2    @2321                                                        Float64Data */
// 0x4330000080000000 | compiler-generated value used in cast: (float)s32
SECTION_SDATA2 f64 LIT_2321 = 4503601774854144.000000;
/* 80455328-80455330 0004 .sdata2    @2501                                                        InitializedData */
SECTION_SDATA2 u8 LIT_2501[8] = {
	0x47, 0x00, 0x00, 0x00,
	/* padding */
	0x00, 0x00, 0x00, 0x00,
};
/* 80455330-80455338 0008 .sdata2    @2503                                                        Float64Data */
// 0x4330000000000000 | compiler-generated value used in cast: (float)u32
SECTION_SDATA2 f64 JPADynamicsBlock__LIT_2503 = 4503599627370496.000000;
}


/* ###################################################################################### */
/*                                         .text                                          */
/* ###################################################################################### */

extern "C" {
/* 8027B144-8027B220 00DC .text      JPAVolumePoint__FP18JPAEmitterWorkData                       Function */
}

#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void JPAVolumePoint(JPAEmitterWorkData*) {
	nofralloc
#include "_include/JParticle/JPADynamicsBlock/JPAVolumePoint__FP18JPAEmitterWorkData.s"
}
#pragma pop

extern "C" {
/* 8027B220-8027B33C 011C .text      JPAVolumeLine__FP18JPAEmitterWorkData                        Function */
}

#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void JPAVolumeLine(JPAEmitterWorkData*) {
	nofralloc
#include "_include/JParticle/JPADynamicsBlock/JPAVolumeLine__FP18JPAEmitterWorkData.s"
}
#pragma pop

extern "C" {
/* 8027B33C-8027B4E8 01AC .text      JPAVolumeCircle__FP18JPAEmitterWorkData                      Function */
}

#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void JPAVolumeCircle(JPAEmitterWorkData*) {
	nofralloc
#include "_include/JParticle/JPADynamicsBlock/JPAVolumeCircle__FP18JPAEmitterWorkData.s"
}
#pragma pop

extern "C" {
/* 8027B4E8-8027B5F0 0108 .text      JPAVolumeCube__FP18JPAEmitterWorkData                        Function */
}

#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void JPAVolumeCube(JPAEmitterWorkData*) {
	nofralloc
#include "_include/JParticle/JPADynamicsBlock/JPAVolumeCube__FP18JPAEmitterWorkData.s"
}
#pragma pop

extern "C" {
/* 8027B5F0-8027B87C 028C .text      JPAVolumeSphere__FP18JPAEmitterWorkData                      Function */
}

#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void JPAVolumeSphere(JPAEmitterWorkData*) {
	nofralloc
#include "_include/JParticle/JPADynamicsBlock/JPAVolumeSphere__FP18JPAEmitterWorkData.s"
}
#pragma pop

extern "C" {
/* 8027B87C-8027B9F8 017C .text      JPAVolumeCylinder__FP18JPAEmitterWorkData                    Function */
}

#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void JPAVolumeCylinder(JPAEmitterWorkData*) {
	nofralloc
#include "_include/JParticle/JPADynamicsBlock/JPAVolumeCylinder__FP18JPAEmitterWorkData.s"
}
#pragma pop

extern "C" {
/* 8027B9F8-8027BB18 0120 .text      JPAVolumeTorus__FP18JPAEmitterWorkData                       Function */
}

#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void JPAVolumeTorus(JPAEmitterWorkData*) {
	nofralloc
#include "_include/JParticle/JPADynamicsBlock/JPAVolumeTorus__FP18JPAEmitterWorkData.s"
}
#pragma pop

extern "C" {
/* 8027BB18-8027BB4C 0034 .text      __ct__16JPADynamicsBlockFPCUc                                Function */
// JPADynamicsBlock::JPADynamicsBlock(const u8*)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void __ct__16JPADynamicsBlockFPCUc() {
	nofralloc
#include "_include/JParticle/JPADynamicsBlock/__ct__16JPADynamicsBlockFPCUc.s"
}
#pragma pop

/* 8027BB4C-8027BBE8 009C .text      init__16JPADynamicsBlockFv                                   Function */
// JPADynamicsBlock::init(void)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void init__16JPADynamicsBlockFv() {
	nofralloc
#include "_include/JParticle/JPADynamicsBlock/init__16JPADynamicsBlockFv.s"
}
#pragma pop

/* 8027BBE8-8027BDEC 0204 .text      create__16JPADynamicsBlockFP18JPAEmitterWorkData             Function */
// JPADynamicsBlock::create(JPAEmitterWorkData*)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void create__16JPADynamicsBlockFP18JPAEmitterWorkData() {
	nofralloc
#include "_include/JParticle/JPADynamicsBlock/create__16JPADynamicsBlockFP18JPAEmitterWorkData.s"
}
#pragma pop

}

