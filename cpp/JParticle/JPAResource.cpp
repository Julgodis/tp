// 
// Generated By: dol2asm
// 

#include "dolphin/types.h"

// 
// Additional Symbols:
// 

struct JPABaseParticle;
struct JPAEmitterWorkData;

extern void JPASetPointSize(JPAEmitterWorkData*); /* JPASetPointSize__FP18JPAEmitterWorkData */
extern void JPASetLineWidth(JPAEmitterWorkData*); /* JPASetLineWidth__FP18JPAEmitterWorkData */
extern void JPASetPointSize(JPAEmitterWorkData*, JPABaseParticle*); /* JPASetPointSize__FP18JPAEmitterWorkDataP15JPABaseParticle */
extern void JPASetLineWidth(JPAEmitterWorkData*, JPABaseParticle*); /* JPASetLineWidth__FP18JPAEmitterWorkDataP15JPABaseParticle */
extern void JPARegistPrm(JPAEmitterWorkData*); /* JPARegistPrm__FP18JPAEmitterWorkData */
extern void JPARegistEnv(JPAEmitterWorkData*); /* JPARegistEnv__FP18JPAEmitterWorkData */
extern void JPARegistPrmEnv(JPAEmitterWorkData*); /* JPARegistPrmEnv__FP18JPAEmitterWorkData */
extern void JPARegistAlpha(JPAEmitterWorkData*, JPABaseParticle*); /* JPARegistAlpha__FP18JPAEmitterWorkDataP15JPABaseParticle */
extern void JPARegistPrmAlpha(JPAEmitterWorkData*, JPABaseParticle*); /* JPARegistPrmAlpha__FP18JPAEmitterWorkDataP15JPABaseParticle */
extern void JPARegistPrmAlphaEnv(JPAEmitterWorkData*, JPABaseParticle*); /* JPARegistPrmAlphaEnv__FP18JPAEmitterWorkDataP15JPABaseParticle */
extern void JPARegistAlphaEnv(JPAEmitterWorkData*, JPABaseParticle*); /* JPARegistAlphaEnv__FP18JPAEmitterWorkDataP15JPABaseParticle */
extern void JPARegistEnv(JPAEmitterWorkData*, JPABaseParticle*); /* JPARegistEnv__FP18JPAEmitterWorkDataP15JPABaseParticle */
extern void JPACalcClrIdxNormal(JPAEmitterWorkData*); /* JPACalcClrIdxNormal__FP18JPAEmitterWorkData */
extern void JPACalcClrIdxNormal(JPAEmitterWorkData*, JPABaseParticle*); /* JPACalcClrIdxNormal__FP18JPAEmitterWorkDataP15JPABaseParticle */
extern void JPACalcClrIdxRepeat(JPAEmitterWorkData*); /* JPACalcClrIdxRepeat__FP18JPAEmitterWorkData */
extern void JPACalcClrIdxRepeat(JPAEmitterWorkData*, JPABaseParticle*); /* JPACalcClrIdxRepeat__FP18JPAEmitterWorkDataP15JPABaseParticle */
extern void JPACalcClrIdxReverse(JPAEmitterWorkData*); /* JPACalcClrIdxReverse__FP18JPAEmitterWorkData */
extern void JPACalcClrIdxReverse(JPAEmitterWorkData*, JPABaseParticle*); /* JPACalcClrIdxReverse__FP18JPAEmitterWorkDataP15JPABaseParticle */
extern void JPACalcClrIdxMerge(JPAEmitterWorkData*); /* JPACalcClrIdxMerge__FP18JPAEmitterWorkData */
extern void JPACalcClrIdxMerge(JPAEmitterWorkData*, JPABaseParticle*); /* JPACalcClrIdxMerge__FP18JPAEmitterWorkDataP15JPABaseParticle */
extern void JPACalcClrIdxRandom(JPAEmitterWorkData*); /* JPACalcClrIdxRandom__FP18JPAEmitterWorkData */
extern void JPACalcClrIdxRandom(JPAEmitterWorkData*, JPABaseParticle*); /* JPACalcClrIdxRandom__FP18JPAEmitterWorkDataP15JPABaseParticle */
extern void JPACalcPrm(JPAEmitterWorkData*); /* JPACalcPrm__FP18JPAEmitterWorkData */
extern void JPACalcPrm(JPAEmitterWorkData*, JPABaseParticle*); /* JPACalcPrm__FP18JPAEmitterWorkDataP15JPABaseParticle */
extern void JPACalcEnv(JPAEmitterWorkData*); /* JPACalcEnv__FP18JPAEmitterWorkData */
extern void JPACalcEnv(JPAEmitterWorkData*, JPABaseParticle*); /* JPACalcEnv__FP18JPAEmitterWorkDataP15JPABaseParticle */
extern void JPACalcColorCopy(JPAEmitterWorkData*, JPABaseParticle*); /* JPACalcColorCopy__FP18JPAEmitterWorkDataP15JPABaseParticle */
extern void JPAGenTexCrdMtxIdt(JPAEmitterWorkData*); /* JPAGenTexCrdMtxIdt__FP18JPAEmitterWorkData */
extern void JPAGenTexCrdMtxAnm(JPAEmitterWorkData*); /* JPAGenTexCrdMtxAnm__FP18JPAEmitterWorkData */
extern void JPAGenTexCrdMtxPrj(JPAEmitterWorkData*); /* JPAGenTexCrdMtxPrj__FP18JPAEmitterWorkData */
extern void JPAGenCalcTexCrdMtxAnm(JPAEmitterWorkData*); /* JPAGenCalcTexCrdMtxAnm__FP18JPAEmitterWorkData */
extern void JPALoadCalcTexCrdMtxAnm(JPAEmitterWorkData*, JPABaseParticle*); /* JPALoadCalcTexCrdMtxAnm__FP18JPAEmitterWorkDataP15JPABaseParticle */
extern void JPALoadTex(JPAEmitterWorkData*); /* JPALoadTex__FP18JPAEmitterWorkData */
extern void JPALoadTexAnm(JPAEmitterWorkData*); /* JPALoadTexAnm__FP18JPAEmitterWorkData */
extern void JPALoadTexAnm(JPAEmitterWorkData*, JPABaseParticle*); /* JPALoadTexAnm__FP18JPAEmitterWorkDataP15JPABaseParticle */
extern void JPACalcTexIdxNormal(JPAEmitterWorkData*); /* JPACalcTexIdxNormal__FP18JPAEmitterWorkData */
extern void JPACalcTexIdxNormal(JPAEmitterWorkData*, JPABaseParticle*); /* JPACalcTexIdxNormal__FP18JPAEmitterWorkDataP15JPABaseParticle */
extern void JPACalcTexIdxRepeat(JPAEmitterWorkData*); /* JPACalcTexIdxRepeat__FP18JPAEmitterWorkData */
extern void JPACalcTexIdxRepeat(JPAEmitterWorkData*, JPABaseParticle*); /* JPACalcTexIdxRepeat__FP18JPAEmitterWorkDataP15JPABaseParticle */
extern void JPACalcTexIdxReverse(JPAEmitterWorkData*); /* JPACalcTexIdxReverse__FP18JPAEmitterWorkData */
extern void JPACalcTexIdxReverse(JPAEmitterWorkData*, JPABaseParticle*); /* JPACalcTexIdxReverse__FP18JPAEmitterWorkDataP15JPABaseParticle */
extern void JPACalcTexIdxMerge(JPAEmitterWorkData*); /* JPACalcTexIdxMerge__FP18JPAEmitterWorkData */
extern void JPACalcTexIdxMerge(JPAEmitterWorkData*, JPABaseParticle*); /* JPACalcTexIdxMerge__FP18JPAEmitterWorkDataP15JPABaseParticle */
extern void JPACalcTexIdxRandom(JPAEmitterWorkData*); /* JPACalcTexIdxRandom__FP18JPAEmitterWorkData */
extern void JPACalcTexIdxRandom(JPAEmitterWorkData*, JPABaseParticle*); /* JPACalcTexIdxRandom__FP18JPAEmitterWorkDataP15JPABaseParticle */
extern void JPALoadPosMtxCam(JPAEmitterWorkData*); /* JPALoadPosMtxCam__FP18JPAEmitterWorkData */
extern void JPADrawBillboard(JPAEmitterWorkData*, JPABaseParticle*); /* JPADrawBillboard__FP18JPAEmitterWorkDataP15JPABaseParticle */
extern void JPADrawRotBillboard(JPAEmitterWorkData*, JPABaseParticle*); /* JPADrawRotBillboard__FP18JPAEmitterWorkDataP15JPABaseParticle */
extern void JPADrawYBillboard(JPAEmitterWorkData*, JPABaseParticle*); /* JPADrawYBillboard__FP18JPAEmitterWorkDataP15JPABaseParticle */
extern void JPADrawRotYBillboard(JPAEmitterWorkData*, JPABaseParticle*); /* JPADrawRotYBillboard__FP18JPAEmitterWorkDataP15JPABaseParticle */
extern void JPADrawDirection(JPAEmitterWorkData*, JPABaseParticle*); /* JPADrawDirection__FP18JPAEmitterWorkDataP15JPABaseParticle */
extern void JPADrawRotDirection(JPAEmitterWorkData*, JPABaseParticle*); /* JPADrawRotDirection__FP18JPAEmitterWorkDataP15JPABaseParticle */
extern void JPADrawDBillboard(JPAEmitterWorkData*, JPABaseParticle*); /* JPADrawDBillboard__FP18JPAEmitterWorkDataP15JPABaseParticle */
extern void JPADrawRotation(JPAEmitterWorkData*, JPABaseParticle*); /* JPADrawRotation__FP18JPAEmitterWorkDataP15JPABaseParticle */
extern void JPADrawPoint(JPAEmitterWorkData*, JPABaseParticle*); /* JPADrawPoint__FP18JPAEmitterWorkDataP15JPABaseParticle */
extern void JPADrawLine(JPAEmitterWorkData*, JPABaseParticle*); /* JPADrawLine__FP18JPAEmitterWorkDataP15JPABaseParticle */
extern void JPADrawStripe(JPAEmitterWorkData*); /* JPADrawStripe__FP18JPAEmitterWorkData */
extern void JPADrawStripeX(JPAEmitterWorkData*); /* JPADrawStripeX__FP18JPAEmitterWorkData */
extern void JPADrawEmitterCallBackB(JPAEmitterWorkData*); /* JPADrawEmitterCallBackB__FP18JPAEmitterWorkData */
extern void JPADrawParticleCallBack(JPAEmitterWorkData*, JPABaseParticle*); /* JPADrawParticleCallBack__FP18JPAEmitterWorkDataP15JPABaseParticle */
extern void JPACalcScaleX(JPAEmitterWorkData*, JPABaseParticle*); /* JPACalcScaleX__FP18JPAEmitterWorkDataP15JPABaseParticle */
extern void JPACalcScaleY(JPAEmitterWorkData*, JPABaseParticle*); /* JPACalcScaleY__FP18JPAEmitterWorkDataP15JPABaseParticle */
extern void JPACalcScaleCopy(JPAEmitterWorkData*, JPABaseParticle*); /* JPACalcScaleCopy__FP18JPAEmitterWorkDataP15JPABaseParticle */
extern void JPACalcScaleAnmNormal(JPAEmitterWorkData*, JPABaseParticle*); /* JPACalcScaleAnmNormal__FP18JPAEmitterWorkDataP15JPABaseParticle */
extern void JPACalcScaleAnmRepeatX(JPAEmitterWorkData*, JPABaseParticle*); /* JPACalcScaleAnmRepeatX__FP18JPAEmitterWorkDataP15JPABaseParticle */
extern void JPACalcScaleAnmRepeatY(JPAEmitterWorkData*, JPABaseParticle*); /* JPACalcScaleAnmRepeatY__FP18JPAEmitterWorkDataP15JPABaseParticle */
extern void JPACalcScaleAnmReverseX(JPAEmitterWorkData*, JPABaseParticle*); /* JPACalcScaleAnmReverseX__FP18JPAEmitterWorkDataP15JPABaseParticle */
extern void JPACalcScaleAnmReverseY(JPAEmitterWorkData*, JPABaseParticle*); /* JPACalcScaleAnmReverseY__FP18JPAEmitterWorkDataP15JPABaseParticle */
extern void JPACalcAlphaAnm(JPAEmitterWorkData*, JPABaseParticle*); /* JPACalcAlphaAnm__FP18JPAEmitterWorkDataP15JPABaseParticle */
extern void JPACalcAlphaFlickAnm(JPAEmitterWorkData*, JPABaseParticle*); /* JPACalcAlphaFlickAnm__FP18JPAEmitterWorkDataP15JPABaseParticle */
extern void JPARegistChildPrmEnv(JPAEmitterWorkData*); /* JPARegistChildPrmEnv__FP18JPAEmitterWorkData */
extern void JPACalcChildAlphaOut(JPAEmitterWorkData*, JPABaseParticle*); /* JPACalcChildAlphaOut__FP18JPAEmitterWorkDataP15JPABaseParticle */
extern void JPACalcChildScaleOut(JPAEmitterWorkData*, JPABaseParticle*); /* JPACalcChildScaleOut__FP18JPAEmitterWorkDataP15JPABaseParticle */
extern void JPALoadExTex(JPAEmitterWorkData*); /* JPALoadExTex__FP18JPAEmitterWorkData */
extern void JPAGetXYZRotateMtx(s16, s16, s16, f32 (*)[4]); /* JPAGetXYZRotateMtx__FsssPA4_f */

extern "C" {
extern void drawP__11JPAResourceFP18JPAEmitterWorkData();
extern void drawC__11JPAResourceFP18JPAEmitterWorkData();
extern void setPTev__11JPAResourceFv();
extern void setCTev__11JPAResourceFP18JPAEmitterWorkData();
extern void calcKey__11JPAResourceFP18JPAEmitterWorkData();
extern void calcWorkData_c__11JPAResourceFP18JPAEmitterWorkData();
extern void calcWorkData_d__11JPAResourceFP18JPAEmitterWorkData();
extern void JPASetPointSize__FP18JPAEmitterWorkData();
extern void JPASetLineWidth__FP18JPAEmitterWorkData();
extern void JPASetPointSize__FP18JPAEmitterWorkDataP15JPABaseParticle();
extern void JPASetLineWidth__FP18JPAEmitterWorkDataP15JPABaseParticle();
extern void JPARegistPrm__FP18JPAEmitterWorkData();
extern void JPARegistEnv__FP18JPAEmitterWorkData();
extern void JPARegistPrmEnv__FP18JPAEmitterWorkData();
extern void JPARegistAlpha__FP18JPAEmitterWorkDataP15JPABaseParticle();
extern void JPARegistPrmAlpha__FP18JPAEmitterWorkDataP15JPABaseParticle();
extern void JPARegistPrmAlphaEnv__FP18JPAEmitterWorkDataP15JPABaseParticle();
extern void JPARegistAlphaEnv__FP18JPAEmitterWorkDataP15JPABaseParticle();
extern void JPARegistEnv__FP18JPAEmitterWorkDataP15JPABaseParticle();
extern void JPACalcClrIdxNormal__FP18JPAEmitterWorkData();
extern void JPACalcClrIdxNormal__FP18JPAEmitterWorkDataP15JPABaseParticle();
extern void JPACalcClrIdxRepeat__FP18JPAEmitterWorkData();
extern void JPACalcClrIdxRepeat__FP18JPAEmitterWorkDataP15JPABaseParticle();
extern void JPACalcClrIdxReverse__FP18JPAEmitterWorkData();
extern void JPACalcClrIdxReverse__FP18JPAEmitterWorkDataP15JPABaseParticle();
extern void JPACalcClrIdxMerge__FP18JPAEmitterWorkData();
extern void JPACalcClrIdxMerge__FP18JPAEmitterWorkDataP15JPABaseParticle();
extern void JPACalcClrIdxRandom__FP18JPAEmitterWorkData();
extern void JPACalcClrIdxRandom__FP18JPAEmitterWorkDataP15JPABaseParticle();
extern void JPACalcPrm__FP18JPAEmitterWorkData();
extern void JPACalcPrm__FP18JPAEmitterWorkDataP15JPABaseParticle();
extern void JPACalcEnv__FP18JPAEmitterWorkData();
extern void JPACalcEnv__FP18JPAEmitterWorkDataP15JPABaseParticle();
extern void JPACalcColorCopy__FP18JPAEmitterWorkDataP15JPABaseParticle();
extern void JPAGenTexCrdMtxIdt__FP18JPAEmitterWorkData();
extern void JPAGenTexCrdMtxAnm__FP18JPAEmitterWorkData();
extern void JPAGenTexCrdMtxPrj__FP18JPAEmitterWorkData();
extern void JPAGenCalcTexCrdMtxAnm__FP18JPAEmitterWorkData();
extern void JPALoadCalcTexCrdMtxAnm__FP18JPAEmitterWorkDataP15JPABaseParticle();
extern void JPALoadTex__FP18JPAEmitterWorkData();
extern void JPALoadTexAnm__FP18JPAEmitterWorkData();
extern void JPALoadTexAnm__FP18JPAEmitterWorkDataP15JPABaseParticle();
extern void JPACalcTexIdxNormal__FP18JPAEmitterWorkData();
extern void JPACalcTexIdxNormal__FP18JPAEmitterWorkDataP15JPABaseParticle();
extern void JPACalcTexIdxRepeat__FP18JPAEmitterWorkData();
extern void JPACalcTexIdxRepeat__FP18JPAEmitterWorkDataP15JPABaseParticle();
extern void JPACalcTexIdxReverse__FP18JPAEmitterWorkData();
extern void JPACalcTexIdxReverse__FP18JPAEmitterWorkDataP15JPABaseParticle();
extern void JPACalcTexIdxMerge__FP18JPAEmitterWorkData();
extern void JPACalcTexIdxMerge__FP18JPAEmitterWorkDataP15JPABaseParticle();
extern void JPACalcTexIdxRandom__FP18JPAEmitterWorkData();
extern void JPACalcTexIdxRandom__FP18JPAEmitterWorkDataP15JPABaseParticle();
extern void JPALoadPosMtxCam__FP18JPAEmitterWorkData();
extern void JPADrawBillboard__FP18JPAEmitterWorkDataP15JPABaseParticle();
extern void JPADrawRotBillboard__FP18JPAEmitterWorkDataP15JPABaseParticle();
extern void JPADrawYBillboard__FP18JPAEmitterWorkDataP15JPABaseParticle();
extern void JPADrawRotYBillboard__FP18JPAEmitterWorkDataP15JPABaseParticle();
extern void JPADrawDirection__FP18JPAEmitterWorkDataP15JPABaseParticle();
extern void JPADrawRotDirection__FP18JPAEmitterWorkDataP15JPABaseParticle();
extern void JPADrawDBillboard__FP18JPAEmitterWorkDataP15JPABaseParticle();
extern void JPADrawRotation__FP18JPAEmitterWorkDataP15JPABaseParticle();
extern void JPADrawPoint__FP18JPAEmitterWorkDataP15JPABaseParticle();
extern void JPADrawLine__FP18JPAEmitterWorkDataP15JPABaseParticle();
extern void JPADrawStripe__FP18JPAEmitterWorkData();
extern void JPADrawStripeX__FP18JPAEmitterWorkData();
extern void JPADrawEmitterCallBackB__FP18JPAEmitterWorkData();
extern void JPADrawParticleCallBack__FP18JPAEmitterWorkDataP15JPABaseParticle();
extern void setGX__12JPABaseShapeCFP18JPAEmitterWorkData();
extern void JPACalcScaleX__FP18JPAEmitterWorkDataP15JPABaseParticle();
extern void JPACalcScaleY__FP18JPAEmitterWorkDataP15JPABaseParticle();
extern void JPACalcScaleCopy__FP18JPAEmitterWorkDataP15JPABaseParticle();
extern void JPACalcScaleAnmNormal__FP18JPAEmitterWorkDataP15JPABaseParticle();
extern void JPACalcScaleAnmRepeatX__FP18JPAEmitterWorkDataP15JPABaseParticle();
extern void JPACalcScaleAnmRepeatY__FP18JPAEmitterWorkDataP15JPABaseParticle();
extern void JPACalcScaleAnmReverseX__FP18JPAEmitterWorkDataP15JPABaseParticle();
extern void JPACalcScaleAnmReverseY__FP18JPAEmitterWorkDataP15JPABaseParticle();
extern void JPACalcAlphaAnm__FP18JPAEmitterWorkDataP15JPABaseParticle();
extern void JPACalcAlphaFlickAnm__FP18JPAEmitterWorkDataP15JPABaseParticle();
extern void JPARegistChildPrmEnv__FP18JPAEmitterWorkData();
extern void JPACalcChildAlphaOut__FP18JPAEmitterWorkDataP15JPABaseParticle();
extern void JPACalcChildScaleOut__FP18JPAEmitterWorkDataP15JPABaseParticle();
extern void JPALoadExTex__FP18JPAEmitterWorkData();
extern void create__16JPADynamicsBlockFP18JPAEmitterWorkData();
extern void calc__11JPAKeyBlockFf();
extern void processTillStartFrame__14JPABaseEmitterFv();
extern void processTermination__14JPABaseEmitterFv();
extern void calc_p__15JPABaseParticleFP18JPAEmitterWorkData();
extern void calc_c__15JPABaseParticleFP18JPAEmitterWorkData();
extern void func_80280588();
extern void JPAGetXYZRotateMtx__FsssPA4_f();
extern void alloc__7JKRHeapFUliP7JKRHeap();
extern void load__10JUTTextureF11_GXTexMapID();
extern void PSMTXCopy();
extern void PSMTXConcat();
extern void PSMTXScale();
extern void PSMTXMultVec();
extern void PSMTXMultVecSR();
extern void GXSetArray();
extern void GXSetTexCoordGen2();
extern void GXSetNumTexGens();
extern void GXSetMisc();
extern void GXSetTevIndirect();
extern void GXSetIndTexMtx();
extern void GXSetIndTexCoordScale();
extern void GXSetIndTexOrder();
extern void GXSetNumIndStages();
extern void GXSetTevDirect();
extern void GXSetTevColorIn();
extern void GXSetTevAlphaIn();
extern void GXSetTevColorOp();
extern void GXSetTevAlphaOp();
extern void GXSetTevOrder();
extern void GXSetNumTevStages();
extern void GXSetClipMode();
extern void __save_gpr();
extern void _savegpr_25();
extern void _savegpr_27();
extern void _savegpr_28();
extern void __restore_gpr();
extern void _restgpr_25();
extern void _restgpr_27();
extern void _restgpr_28();
SECTION_DATA extern u8 jpa_pos[352];
SECTION_DATA extern u8 jpa_crd[32];
SECTION_DATA extern u8 LIT_2829[44];
SECTION_DATA extern u8 LIT_2828[44];
SECTION_DATA extern u8 LIT_3454[72];
SECTION_SDATA2 extern u8 LIT_3189[4];
SECTION_SDATA2 extern u8 LIT_3190[4];
SECTION_SDATA2 extern f32 LIT_3191;
SECTION_SDATA2 extern u8 LIT_3192[4];
SECTION_SDATA2 extern f64 LIT_3194;
}


/* ###################################################################################### */
/*                                         .data                                          */
/* ###################################################################################### */

extern "C" {
/* 803C40C0 0144 .data      jpa_pos                                                      */
SECTION_DATA u8 jpa_pos[352] = {
	0x00, 0x00, 0x00, 0x32, 0x00, 0x00, 0x32, 0xCE, 0x00, 0x00, 0xCE, 0x00, 0xE7, 0x00, 0x00, 0x19,
	0x00, 0x00, 0x19, 0xCE, 0x00, 0xE7, 0xCE, 0x00, 0xCE, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xCE,
	0x00, 0xCE, 0xCE, 0x00, 0x00, 0x19, 0x00, 0x32, 0x19, 0x00, 0x32, 0xE7, 0x00, 0x00, 0xE7, 0x00,
	0xE7, 0x19, 0x00, 0x19, 0x19, 0x00, 0x19, 0xE7, 0x00, 0xE7, 0xE7, 0x00, 0xCE, 0x19, 0x00, 0x00,
	0x19, 0x00, 0x00, 0xE7, 0x00, 0xCE, 0xE7, 0x00, 0x00, 0x32, 0x00, 0x32, 0x32, 0x00, 0x32, 0x00,
	0x00, 0x00, 0x00, 0x00, 0xE7, 0x32, 0x00, 0x19, 0x32, 0x00, 0x19, 0x00, 0x00, 0xE7, 0x00, 0x00,
	0xCE, 0x32, 0x00, 0x00, 0x32, 0x00, 0x00, 0x00, 0x00, 0xCE, 0x00, 0x00, 0x00, 0x00, 0x00, 0x32,
	0x00, 0x00, 0x32, 0x00, 0x32, 0x00, 0x00, 0x32, 0xE7, 0x00, 0x00, 0x19, 0x00, 0x00, 0x19, 0x00,
	0x32, 0xE7, 0x00, 0x32, 0xCE, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x32, 0xCE, 0x00, 0x32,
	0x00, 0x00, 0xE7, 0x32, 0x00, 0xE7, 0x32, 0x00, 0x19, 0x00, 0x00, 0x19, 0xE7, 0x00, 0xE7, 0x19,
	0x00, 0xE7, 0x19, 0x00, 0x19, 0xE7, 0x00, 0x19, 0xCE, 0x00, 0xE7, 0x00, 0x00, 0xE7, 0x00, 0x00,
	0x19, 0xCE, 0x00, 0x19, 0x00, 0x00, 0xCE, 0x32, 0x00, 0xCE, 0x32, 0x00, 0x00, 0x00, 0x00, 0x00,
	0xE7, 0x00, 0xCE, 0x19, 0x00, 0xCE, 0x19, 0x00, 0x00, 0xE7, 0x00, 0x00, 0xCE, 0x00, 0xCE, 0x00,
	0x00, 0xCE, 0x00, 0x00, 0x00, 0xCE, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x32, 0x00, 0xCE,
	0x32, 0x00, 0xCE, 0x00, 0x00, 0x00, 0xE7, 0x00, 0x00, 0x19, 0x00, 0xCE, 0x19, 0x00, 0xCE, 0xE7,
	0x00, 0x00, 0xCE, 0x00, 0x00, 0x00, 0x00, 0xCE, 0x00, 0x00, 0xCE, 0xCE, 0x00, 0x19, 0x00, 0x00,
	0x19, 0x32, 0x00, 0xE7, 0x32, 0x00, 0xE7, 0x00, 0x00, 0x19, 0xE7, 0x00, 0x19, 0x19, 0x00, 0xE7,
	0x19, 0x00, 0xE7, 0xE7, 0x00, 0x19, 0xCE, 0x00, 0x19, 0x00, 0x00, 0xE7, 0x00, 0x00, 0xE7, 0xCE,
	0x00, 0x32, 0x00, 0x00, 0x32, 0x32, 0x00, 0x00, 0x32, 0x00, 0x00, 0x00, 0x00, 0x32, 0xE7, 0x00,
	0x32, 0x19, 0x00, 0x00, 0x19, 0x00, 0x00, 0xE7, 0x00, 0x32, 0xCE, 0x00, 0x32, 0x00, 0x00, 0x00,
	0x00, 0x00, 0x00, 0xCE,
	/* padding */
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
};
/* 803C4220 0020 .data      jpa_crd                                                      */
SECTION_DATA u8 jpa_crd[32] = {
	0x00, 0x00, 0x01, 0x00, 0x01, 0x01, 0x00, 0x01, 0x00, 0x00, 0x02, 0x00, 0x02, 0x01, 0x00, 0x01,
	0x00, 0x00, 0x01, 0x00, 0x01, 0x02, 0x00, 0x02, 0x00, 0x00, 0x02, 0x00, 0x02, 0x02, 0x00, 0x02,
};
/* 803C4240 002C .data      @2829                                                        */
SECTION_DATA u8 LIT_2829[44] = {
	0x80, 0x27, 0x55, 0x08, 0x80, 0x27, 0x55, 0x1C, 0x80, 0x27, 0x54, 0x50, 0x80, 0x27, 0x54, 0xB0,
	0x80, 0x27, 0x54, 0xB0, 0x80, 0x27, 0x55, 0x2C, 0x80, 0x27, 0x55, 0x2C, 0x80, 0x27, 0x54, 0xF4,
	0x80, 0x27, 0x54, 0xF4, 0x80, 0x27, 0x54, 0xE0, 0x80, 0x27, 0x54, 0x80,
};
/* 803C426C 002C .data      @2828                                                        */
SECTION_DATA u8 LIT_2828[44] = {
	0x80, 0x27, 0x51, 0xAC, 0x80, 0x27, 0x51, 0xC0, 0x80, 0x27, 0x50, 0xF4, 0x80, 0x27, 0x51, 0x54,
	0x80, 0x27, 0x51, 0x54, 0x80, 0x27, 0x51, 0xD0, 0x80, 0x27, 0x51, 0xD0, 0x80, 0x27, 0x51, 0x98,
	0x80, 0x27, 0x51, 0x98, 0x80, 0x27, 0x51, 0x84, 0x80, 0x27, 0x51, 0x24,
};
/* 803C4298 002C .data      @3454                                                        */
SECTION_DATA u8 LIT_3454[72] = {
	0x80, 0x27, 0x67, 0x90, 0x80, 0x27, 0x67, 0x9C, 0x80, 0x27, 0x68, 0x10, 0x80, 0x27, 0x67, 0xB4,
	0x80, 0x27, 0x67, 0xC0, 0x80, 0x27, 0x68, 0x10, 0x80, 0x27, 0x67, 0xD8, 0x80, 0x27, 0x67, 0xE4,
	0x80, 0x27, 0x67, 0xF0, 0x80, 0x27, 0x67, 0xFC, 0x80, 0x27, 0x68, 0x08,
	/* padding */
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
};
}


/* ###################################################################################### */
/*                                        .sdata2                                         */
/* ###################################################################################### */

extern "C" {
/* 80455290 0004 .sdata2    @3189                                                        */
SECTION_SDATA2 u8 LIT_3189[4] = {
	0x3F, 0x82, 0x8F, 0x5C,
};
/* 80455294 0004 .sdata2    @3190                                                        */
SECTION_SDATA2 u8 LIT_3190[4] = {
	0x3E, 0xCC, 0xCC, 0xCD,
};
/* 80455298 0004 .sdata2    @3191                                                        */
// 0x3f800000
SECTION_SDATA2 f32 LIT_3191 = 1.000000f;
/* 8045529C 0004 .sdata2    @3192                                                        */
SECTION_SDATA2 u8 LIT_3192[4] = {
	0x00, 0x00, 0x00, 0x00,
};
/* 804552A0 0008 .sdata2    @3194                                                        */
// 0x4330000000000000 | compiler-generated value used in cast: (float)u32
SECTION_SDATA2 f64 LIT_3194 = 4503599627370496.000000;
}


/* ###################################################################################### */
/*                                         .text                                          */
/* ###################################################################################### */

extern "C" {
/* 80274010 0070 .text      __ct__11JPAResourceFv                                        */
// JPAResource::JPAResource(void)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void __ct__11JPAResourceFv() {
	nofralloc
#include "_include/JParticle/JPAResource/__ct__11JPAResourceFv.s"
}
#pragma pop

/* 80274080 1568 .text      init__11JPAResourceFP7JKRHeap                                */
// JPAResource::init(JKRHeap*)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void init__11JPAResourceFP7JKRHeap() {
	nofralloc
#include "_include/JParticle/JPAResource/init__11JPAResourceFP7JKRHeap.s"
}
#pragma pop

/* 802755E8 04AC .text      calc__11JPAResourceFP18JPAEmitterWorkDataP14JPABaseEmitter   */
// JPAResource::calc(JPAEmitterWorkData*, JPABaseEmitter*)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void calc__11JPAResourceFP18JPAEmitterWorkDataP14JPABaseEmitter() {
	nofralloc
#include "_include/JParticle/JPAResource/calc__11JPAResourceFP18JPAEmitterWorkDataP14JPABaseEmitter.s"
}
#pragma pop

/* 80275A94 00E0 .text      draw__11JPAResourceFP18JPAEmitterWorkDataP14JPABaseEmitter   */
// JPAResource::draw(JPAEmitterWorkData*, JPABaseEmitter*)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void draw__11JPAResourceFP18JPAEmitterWorkDataP14JPABaseEmitter() {
	nofralloc
#include "_include/JParticle/JPAResource/draw__11JPAResourceFP18JPAEmitterWorkDataP14JPABaseEmitter.s"
}
#pragma pop

/* 80275B74 033C .text      drawP__11JPAResourceFP18JPAEmitterWorkData                   */
// JPAResource::drawP(JPAEmitterWorkData*)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void drawP__11JPAResourceFP18JPAEmitterWorkData() {
	nofralloc
#include "_include/JParticle/JPAResource/drawP__11JPAResourceFP18JPAEmitterWorkData.s"
}
#pragma pop

/* 80275EB0 02F8 .text      drawC__11JPAResourceFP18JPAEmitterWorkData                   */
// JPAResource::drawC(JPAEmitterWorkData*)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void drawC__11JPAResourceFP18JPAEmitterWorkData() {
	nofralloc
#include "_include/JParticle/JPAResource/drawC__11JPAResourceFP18JPAEmitterWorkData.s"
}
#pragma pop

/* 802761A8 0284 .text      setPTev__11JPAResourceFv                                     */
// JPAResource::setPTev(void)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void setPTev__11JPAResourceFv() {
	nofralloc
#include "_include/JParticle/JPAResource/setPTev__11JPAResourceFv.s"
}
#pragma pop

/* 8027642C 0160 .text      setCTev__11JPAResourceFP18JPAEmitterWorkData                 */
// JPAResource::setCTev(JPAEmitterWorkData*)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void setCTev__11JPAResourceFP18JPAEmitterWorkData() {
	nofralloc
#include "_include/JParticle/JPAResource/setCTev__11JPAResourceFP18JPAEmitterWorkData.s"
}
#pragma pop

/* 8027658C 007C .text      calc_p__11JPAResourceFP18JPAEmitterWorkDataP15JPABaseParticle */
// JPAResource::calc_p(JPAEmitterWorkData*, JPABaseParticle*)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void calc_p__11JPAResourceFP18JPAEmitterWorkDataP15JPABaseParticle() {
	nofralloc
#include "_include/JParticle/JPAResource/calc_p__11JPAResourceFP18JPAEmitterWorkDataP15JPABaseParticle.s"
}
#pragma pop

/* 80276608 007C .text      calc_c__11JPAResourceFP18JPAEmitterWorkDataP15JPABaseParticle */
// JPAResource::calc_c(JPAEmitterWorkData*, JPABaseParticle*)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void calc_c__11JPAResourceFP18JPAEmitterWorkDataP15JPABaseParticle() {
	nofralloc
#include "_include/JParticle/JPAResource/calc_c__11JPAResourceFP18JPAEmitterWorkDataP15JPABaseParticle.s"
}
#pragma pop

/* 80276684 007C .text      calcField__11JPAResourceFP18JPAEmitterWorkDataP15JPABaseParticle */
// JPAResource::calcField(JPAEmitterWorkData*, JPABaseParticle*)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void calcField__11JPAResourceFP18JPAEmitterWorkDataP15JPABaseParticle() {
	nofralloc
#include "_include/JParticle/JPAResource/calcField__11JPAResourceFP18JPAEmitterWorkDataP15JPABaseParticle.s"
}
#pragma pop

/* 80276700 0140 .text      calcKey__11JPAResourceFP18JPAEmitterWorkData                 */
// JPAResource::calcKey(JPAEmitterWorkData*)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void calcKey__11JPAResourceFP18JPAEmitterWorkData() {
	nofralloc
#include "_include/JParticle/JPAResource/calcKey__11JPAResourceFP18JPAEmitterWorkData.s"
}
#pragma pop

/* 80276840 01CC .text      calcWorkData_c__11JPAResourceFP18JPAEmitterWorkData          */
// JPAResource::calcWorkData_c(JPAEmitterWorkData*)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void calcWorkData_c__11JPAResourceFP18JPAEmitterWorkData() {
	nofralloc
#include "_include/JParticle/JPAResource/calcWorkData_c__11JPAResourceFP18JPAEmitterWorkData.s"
}
#pragma pop

/* 80276A0C 0080 .text      calcWorkData_d__11JPAResourceFP18JPAEmitterWorkData          */
// JPAResource::calcWorkData_d(JPAEmitterWorkData*)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void calcWorkData_d__11JPAResourceFP18JPAEmitterWorkData() {
	nofralloc
#include "_include/JParticle/JPAResource/calcWorkData_d__11JPAResourceFP18JPAEmitterWorkData.s"
}
#pragma pop

/* 80276A8C 0004 .text      prepare__12JPAFieldBaseFP18JPAEmitterWorkDataP13JPAFieldBlock */
// JPAFieldBase::prepare(JPAEmitterWorkData*, JPAFieldBlock*)
void prepare__12JPAFieldBaseFP18JPAEmitterWorkDataP13JPAFieldBlock() {
	return;
}

}

