// 
// Generated By: dol2asm
// 

#include "dolphin/types.h"

// 
// Additional Symbols:
// 

struct JPAClrAnmKeyData;
struct JKRHeap;
struct _GXColor;
struct JPABaseParticle;
struct JPAEmitterWorkData;

extern void makeColorTable(_GXColor**, const JPAClrAnmKeyData*, u8, s16, JKRHeap*); /* makeColorTable__FPP8_GXColorPC16JPAClrAnmKeyDataUcsP7JKRHeap */

extern "C" {
extern u32 func_80279364(u8*);
extern u32 func_8027936C(u8*);
extern void makeColorTable__FPP8_GXColorPC16JPAClrAnmKeyDataUcsP7JKRHeap();
extern void func_8027EEB0();
extern void alloc__7JKRHeapFUliP7JKRHeap();
extern void load__10JUTTextureF11_GXTexMapID();
extern void PSMTXConcat();
extern void PSMTXMultVec();
extern void PSMTXMultVecSR();
extern void PSMTXMultVecArraySR();
extern void PSVECCrossProduct();
extern void GXSetVtxDesc();
extern void GXSetTexCoordGen2();
extern void GXBegin();
extern void GXSetLineWidth();
extern void GXSetPointSize();
extern void GXSetTevDirect();
extern void GXSetTevColorIn();
extern void GXSetTevAlphaIn();
extern void GXSetTevColor();
extern void GXSetAlphaCompare();
extern void GXSetBlendMode();
extern void GXSetZMode();
extern void GXSetZCompLoc();
extern void GXCallDisplayList();
extern void GXLoadPosMtxImm();
extern void GXLoadTexMtxImm();
extern void _savegpr_22();
extern void _savegpr_24();
extern void _savegpr_28();
extern void _savegpr_29();
extern void _restgpr_22();
extern void _restgpr_24();
extern void _restgpr_28();
extern void _restgpr_29();
SECTION_DATA extern u8 jpa_dl[32];
SECTION_DATA extern u8 p_prj[12];
SECTION_DATA extern u8 p_direction[20];
SECTION_BSS extern u8 sincosTable___5JMath[65536];
SECTION_SDATA extern u8 p_dl[8];
SECTION_SDATA extern u8 __float_epsilon[4];
SECTION_SDATA2 extern u8 JPABaseShape__LIT_2262[8];
SECTION_SDATA2 extern f64 LIT_2623;
SECTION_SDATA2 extern f32 LIT_2740;
SECTION_SDATA2 extern f32 LIT_2741;
SECTION_SDATA2 extern u8 LIT_2742[8];
SECTION_SDATA2 extern f64 JPABaseShape__LIT_2744;
SECTION_SDATA2 extern u8 LIT_3145[4];
SECTION_SDATA2 extern u8 LIT_3146[4];
SECTION_SDATA2 extern f32 LIT_3281;
SECTION_SDATA2 extern f32 LIT_3282;
}


/* ###################################################################################### */
/*                                         .data                                          */
/* ###################################################################################### */

extern "C" {
/* 803C42E0 0000 .data      ...data.0                                                    */
/* 803C42E0 0020 .data      jpa_dl                                                       */
SECTION_DATA u8 jpa_dl[32] = {
	0x80, 0x00, 0x04, 0x00, 0x00, 0x01, 0x01, 0x02, 0x02, 0x03, 0x03, 0x00, 0x00, 0x00, 0x00, 0x00,
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
};
/* 803C4300 0020 .data      jpa_dl_x                                                     */
SECTION_DATA u8 jpa_dl_x[32] = {
	0x80, 0x00, 0x08, 0x00, 0x00, 0x01, 0x01, 0x02, 0x02, 0x03, 0x03, 0x48, 0x00, 0x49, 0x01, 0x4A,
	0x02, 0x4B, 0x03, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
};
/* 803C4320 000C .data      p_prj                                                        */
SECTION_DATA u8 p_prj[12] = {
	0x80, 0x27, 0x7C, 0x8C, 0x80, 0x27, 0x7C, 0x90, 0x80, 0x27, 0x7C, 0xC8,
};
/* 803C432C 0014 .data      p_direction                                                  */
SECTION_DATA u8 p_direction[20] = {
	0x80, 0x27, 0x82, 0xB4, 0x80, 0x27, 0x82, 0xD0, 0x80, 0x27, 0x82, 0xEC, 0x80, 0x27, 0x83, 0x20,
	0x80, 0x27, 0x83, 0x3C,
};
/* 803C4340 0014 .data      p_rot                                                        */
SECTION_DATA u8 p_rot[20] = {
	0x80, 0x27, 0x83, 0xD4, 0x80, 0x27, 0x84, 0x14, 0x80, 0x27, 0x84, 0x54, 0x80, 0x27, 0x84, 0x94,
	0x80, 0x27, 0x83, 0xD4,
};
/* 803C4354 000C .data      p_plane                                                      */
SECTION_DATA u8 p_plane[12] = {
	0x80, 0x27, 0x84, 0xF0, 0x80, 0x27, 0x85, 0x3C, 0x80, 0x27, 0x85, 0x88,
};
/* 803C4360 000C .data      st_bm__12JPABaseShape                                        */
SECTION_DATA u8 st_bm__12JPABaseShape[12] = {
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x02,
};
/* 803C436C 0028 .data      st_bf__12JPABaseShape                                        */
SECTION_DATA u8 st_bf__12JPABaseShape[40] = {
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x02, 0x00, 0x00, 0x00, 0x03,
	0x00, 0x00, 0x00, 0x02, 0x00, 0x00, 0x00, 0x03, 0x00, 0x00, 0x00, 0x04, 0x00, 0x00, 0x00, 0x05,
	0x00, 0x00, 0x00, 0x06, 0x00, 0x00, 0x00, 0x07,
};
/* 803C4394 0040 .data      st_lo__12JPABaseShape                                        */
SECTION_DATA u8 st_lo__12JPABaseShape[64] = {
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x0F, 0x00, 0x00, 0x00, 0x03, 0x00, 0x00, 0x00, 0x0C,
	0x00, 0x00, 0x00, 0x05, 0x00, 0x00, 0x00, 0x0A, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x0E,
	0x00, 0x00, 0x00, 0x07, 0x00, 0x00, 0x00, 0x08, 0x00, 0x00, 0x00, 0x06, 0x00, 0x00, 0x00, 0x09,
	0x00, 0x00, 0x00, 0x02, 0x00, 0x00, 0x00, 0x04, 0x00, 0x00, 0x00, 0x0B, 0x00, 0x00, 0x00, 0x0D,
};
/* 803C43D4 0020 .data      st_c__12JPABaseShape                                         */
SECTION_DATA u8 st_c__12JPABaseShape[32] = {
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x03, 0x00, 0x00, 0x00, 0x02,
	0x00, 0x00, 0x00, 0x05, 0x00, 0x00, 0x00, 0x06, 0x00, 0x00, 0x00, 0x04, 0x00, 0x00, 0x00, 0x07,
};
/* 803C43F4 0010 .data      st_ao__12JPABaseShape                                        */
SECTION_DATA u8 st_ao__12JPABaseShape[16] = {
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x02, 0x00, 0x00, 0x00, 0x03,
};
/* 803C4404 0060 .data      st_ca__12JPABaseShape                                        */
SECTION_DATA u8 st_ca__12JPABaseShape[96] = {
	0x00, 0x00, 0x00, 0x0F, 0x00, 0x00, 0x00, 0x08, 0x00, 0x00, 0x00, 0x0C, 0x00, 0x00, 0x00, 0x0F,
	0x00, 0x00, 0x00, 0x0F, 0x00, 0x00, 0x00, 0x02, 0x00, 0x00, 0x00, 0x08, 0x00, 0x00, 0x00, 0x0F,
	0x00, 0x00, 0x00, 0x02, 0x00, 0x00, 0x00, 0x0C, 0x00, 0x00, 0x00, 0x08, 0x00, 0x00, 0x00, 0x0F,
	0x00, 0x00, 0x00, 0x04, 0x00, 0x00, 0x00, 0x02, 0x00, 0x00, 0x00, 0x08, 0x00, 0x00, 0x00, 0x0F,
	0x00, 0x00, 0x00, 0x0F, 0x00, 0x00, 0x00, 0x08, 0x00, 0x00, 0x00, 0x02, 0x00, 0x00, 0x00, 0x04,
	0x00, 0x00, 0x00, 0x0F, 0x00, 0x00, 0x00, 0x0F, 0x00, 0x00, 0x00, 0x0F, 0x00, 0x00, 0x00, 0x02,
};
/* 803C4464 0020 .data      st_aa__12JPABaseShape                                        */
SECTION_DATA u8 st_aa__12JPABaseShape[36] = {
	0x00, 0x00, 0x00, 0x07, 0x00, 0x00, 0x00, 0x04, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x07,
	0x00, 0x00, 0x00, 0x07, 0x00, 0x00, 0x00, 0x07, 0x00, 0x00, 0x00, 0x07, 0x00, 0x00, 0x00, 0x01,
	/* padding */
	0x00, 0x00, 0x00, 0x00,
};
}


/* ###################################################################################### */
/*                                         .sdata                                         */
/* ###################################################################################### */

extern "C" {
/* 804507A0 0008 .sdata     p_dl                                                         */
SECTION_SDATA u8 p_dl[8] = {
	0x80, 0x3C, 0x42, 0xE0, 0x80, 0x3C, 0x43, 0x00,
};
/* 804507A8 0004 .sdata     data_804507A8                                                */
SECTION_SDATA u8 data_804507A8[4] = {
	0x03, 0x00, 0x00, 0x00,
};
}


/* ###################################################################################### */
/*                                        .sdata2                                         */
/* ###################################################################################### */

extern "C" {
/* 804552A8 0004 .sdata2    @2262                                                        */
SECTION_SDATA2 u8 JPABaseShape__LIT_2262[8] = {
	0x41, 0xC8, 0x00, 0x00,
	/* padding */
	0x00, 0x00, 0x00, 0x00,
};
/* 804552B0 0008 .sdata2    @2623                                                        */
// 0x4330000080000000 | compiler-generated value used in cast: (float)s32
SECTION_SDATA2 f64 LIT_2623 = 4503601774854144.000000;
/* 804552B8 0004 .sdata2    @2740                                                        */
// 0x3f000000
SECTION_SDATA2 f32 LIT_2740 = 0.500000f;
/* 804552BC 0004 .sdata2    @2741                                                        */
// 0x3f800000
SECTION_SDATA2 f32 LIT_2741 = 1.000000f;
/* 804552C0 0004 .sdata2    @2742                                                        */
SECTION_SDATA2 u8 LIT_2742[8] = {
	0x00, 0x00, 0x00, 0x00,
	/* padding */
	0x00, 0x00, 0x00, 0x00,
};
/* 804552C8 0008 .sdata2    @2744                                                        */
// 0x4330000000000000 | compiler-generated value used in cast: (float)u32
SECTION_SDATA2 f64 JPABaseShape__LIT_2744 = 4503599627370496.000000;
/* 804552D0 0004 .sdata2    @3145                                                        */
SECTION_SDATA2 u8 LIT_3145[4] = {
	0x3E, 0xAA, 0xAA, 0x9F,
};
/* 804552D4 0004 .sdata2    @3146                                                        */
SECTION_SDATA2 u8 LIT_3146[4] = {
	0x3F, 0x13, 0xCD, 0x36,
};
/* 804552D8 0004 .sdata2    @3281                                                        */
// 0x42000000
SECTION_SDATA2 f32 LIT_3281 = 32.000000f;
/* 804552DC 0004 .sdata2    @3282                                                        */
// 0x40400000
SECTION_SDATA2 f32 LIT_3282 = 3.000000f;
}


/* ###################################################################################### */
/*                                         .text                                          */
/* ###################################################################################### */

extern "C" {
/* 80276A90 003C .text      JPASetPointSize__FP18JPAEmitterWorkData                      */
}

#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void JPASetPointSize(JPAEmitterWorkData*) {
	nofralloc
#include "_include/JParticle/JPABaseShape/JPASetPointSize__FP18JPAEmitterWorkData.s"
}
#pragma pop

extern "C" {
/* 80276ACC 003C .text      JPASetLineWidth__FP18JPAEmitterWorkData                      */
}

#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void JPASetLineWidth(JPAEmitterWorkData*) {
	nofralloc
#include "_include/JParticle/JPABaseShape/JPASetLineWidth__FP18JPAEmitterWorkData.s"
}
#pragma pop

extern "C" {
/* 80276B08 0044 .text      JPASetPointSize__FP18JPAEmitterWorkDataP15JPABaseParticle    */
}

#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void JPASetPointSize(JPAEmitterWorkData*, JPABaseParticle*) {
	nofralloc
#include "_include/JParticle/JPABaseShape/JPASetPointSize__FP18JPAEmitterWorkDataP15JPABaseParticle.s"
}
#pragma pop

extern "C" {
/* 80276B4C 0044 .text      JPASetLineWidth__FP18JPAEmitterWorkDataP15JPABaseParticle    */
}

#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void JPASetLineWidth(JPAEmitterWorkData*, JPABaseParticle*) {
	nofralloc
#include "_include/JParticle/JPABaseShape/JPASetLineWidth__FP18JPAEmitterWorkDataP15JPABaseParticle.s"
}
#pragma pop

extern "C" {
/* 80276B90 009C .text      JPARegistPrm__FP18JPAEmitterWorkData                         */
}

#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void JPARegistPrm(JPAEmitterWorkData*) {
	nofralloc
#include "_include/JParticle/JPABaseShape/JPARegistPrm__FP18JPAEmitterWorkData.s"
}
#pragma pop

extern "C" {
/* 80276C2C 0084 .text      JPARegistEnv__FP18JPAEmitterWorkData                         */
}

#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void JPARegistEnv(JPAEmitterWorkData*) {
	nofralloc
#include "_include/JParticle/JPABaseShape/JPARegistEnv__FP18JPAEmitterWorkData.s"
}
#pragma pop

extern "C" {
/* 80276CB0 0100 .text      JPARegistPrmEnv__FP18JPAEmitterWorkData                      */
}

#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void JPARegistPrmEnv(JPAEmitterWorkData*) {
	nofralloc
#include "_include/JParticle/JPABaseShape/JPARegistPrmEnv__FP18JPAEmitterWorkData.s"
}
#pragma pop

extern "C" {
/* 80276DB0 00B0 .text      JPARegistAlpha__FP18JPAEmitterWorkDataP15JPABaseParticle     */
}

#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void JPARegistAlpha(JPAEmitterWorkData*, JPABaseParticle*) {
	nofralloc
#include "_include/JParticle/JPABaseShape/JPARegistAlpha__FP18JPAEmitterWorkDataP15JPABaseParticle.s"
}
#pragma pop

extern "C" {
/* 80276E60 00B0 .text      JPARegistPrmAlpha__FP18JPAEmitterWorkDataP15JPABaseParticle  */
}

#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void JPARegistPrmAlpha(JPAEmitterWorkData*, JPABaseParticle*) {
	nofralloc
#include "_include/JParticle/JPABaseShape/JPARegistPrmAlpha__FP18JPAEmitterWorkDataP15JPABaseParticle.s"
}
#pragma pop

extern "C" {
/* 80276F10 0114 .text      JPARegistPrmAlphaEnv__FP18JPAEmitterWorkDataP15JPABaseParticle */
}

#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void JPARegistPrmAlphaEnv(JPAEmitterWorkData*, JPABaseParticle*) {
	nofralloc
#include "_include/JParticle/JPABaseShape/JPARegistPrmAlphaEnv__FP18JPAEmitterWorkDataP15JPABaseParticle.s"
}
#pragma pop

extern "C" {
/* 80277024 0114 .text      JPARegistAlphaEnv__FP18JPAEmitterWorkDataP15JPABaseParticle  */
}

#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void JPARegistAlphaEnv(JPAEmitterWorkData*, JPABaseParticle*) {
	nofralloc
#include "_include/JParticle/JPABaseShape/JPARegistAlphaEnv__FP18JPAEmitterWorkDataP15JPABaseParticle.s"
}
#pragma pop

extern "C" {
/* 80277138 0084 .text      JPARegistEnv__FP18JPAEmitterWorkDataP15JPABaseParticle       */
}

#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void JPARegistEnv(JPAEmitterWorkData*, JPABaseParticle*) {
	nofralloc
#include "_include/JParticle/JPABaseShape/JPARegistEnv__FP18JPAEmitterWorkDataP15JPABaseParticle.s"
}
#pragma pop

extern "C" {
/* 802771BC 002C .text      JPACalcClrIdxNormal__FP18JPAEmitterWorkData                  */
}

#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void JPACalcClrIdxNormal(JPAEmitterWorkData*) {
	nofralloc
#include "_include/JParticle/JPABaseShape/JPACalcClrIdxNormal__FP18JPAEmitterWorkData.s"
}
#pragma pop

extern "C" {
/* 802771E8 0028 .text      JPACalcClrIdxNormal__FP18JPAEmitterWorkDataP15JPABaseParticle */
}

#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void JPACalcClrIdxNormal(JPAEmitterWorkData*, JPABaseParticle*) {
	nofralloc
#include "_include/JParticle/JPABaseShape/JPACalcClrIdxNormal__FP18JPAEmitterWorkDataP15JPABaseParticle.s"
}
#pragma pop

extern "C" {
/* 80277210 0030 .text      JPACalcClrIdxRepeat__FP18JPAEmitterWorkData                  */
}

#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void JPACalcClrIdxRepeat(JPAEmitterWorkData*) {
	nofralloc
#include "_include/JParticle/JPABaseShape/JPACalcClrIdxRepeat__FP18JPAEmitterWorkData.s"
}
#pragma pop

extern "C" {
/* 80277240 003C .text      JPACalcClrIdxRepeat__FP18JPAEmitterWorkDataP15JPABaseParticle */
}

#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void JPACalcClrIdxRepeat(JPAEmitterWorkData*, JPABaseParticle*) {
	nofralloc
#include "_include/JParticle/JPABaseShape/JPACalcClrIdxRepeat__FP18JPAEmitterWorkDataP15JPABaseParticle.s"
}
#pragma pop

extern "C" {
/* 8027727C 0040 .text      JPACalcClrIdxReverse__FP18JPAEmitterWorkData                 */
}

#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void JPACalcClrIdxReverse(JPAEmitterWorkData*) {
	nofralloc
#include "_include/JParticle/JPABaseShape/JPACalcClrIdxReverse__FP18JPAEmitterWorkData.s"
}
#pragma pop

extern "C" {
/* 802772BC 004C .text      JPACalcClrIdxReverse__FP18JPAEmitterWorkDataP15JPABaseParticle */
}

#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void JPACalcClrIdxReverse(JPAEmitterWorkData*, JPABaseParticle*) {
	nofralloc
#include "_include/JParticle/JPABaseShape/JPACalcClrIdxReverse__FP18JPAEmitterWorkDataP15JPABaseParticle.s"
}
#pragma pop

extern "C" {
/* 80277308 000C .text      JPACalcClrIdxMerge__FP18JPAEmitterWorkData                   */
}

#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void JPACalcClrIdxMerge(JPAEmitterWorkData*) {
	nofralloc
#include "_include/JParticle/JPABaseShape/JPACalcClrIdxMerge__FP18JPAEmitterWorkData.s"
}
#pragma pop

extern "C" {
/* 80277314 0070 .text      JPACalcClrIdxMerge__FP18JPAEmitterWorkDataP15JPABaseParticle */
}

#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void JPACalcClrIdxMerge(JPAEmitterWorkData*, JPABaseParticle*) {
	nofralloc
#include "_include/JParticle/JPABaseShape/JPACalcClrIdxMerge__FP18JPAEmitterWorkDataP15JPABaseParticle.s"
}
#pragma pop

extern "C" {
/* 80277384 000C .text      JPACalcClrIdxRandom__FP18JPAEmitterWorkData                  */
}

#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void JPACalcClrIdxRandom(JPAEmitterWorkData*) {
	nofralloc
#include "_include/JParticle/JPABaseShape/JPACalcClrIdxRandom__FP18JPAEmitterWorkData.s"
}
#pragma pop

extern "C" {
/* 80277390 0034 .text      JPACalcClrIdxRandom__FP18JPAEmitterWorkDataP15JPABaseParticle */
}

#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void JPACalcClrIdxRandom(JPAEmitterWorkData*, JPABaseParticle*) {
	nofralloc
#include "_include/JParticle/JPABaseShape/JPACalcClrIdxRandom__FP18JPAEmitterWorkDataP15JPABaseParticle.s"
}
#pragma pop

extern "C" {
/* 802773C4 0040 .text      JPACalcPrm__FP18JPAEmitterWorkData                           */
}

#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void JPACalcPrm(JPAEmitterWorkData*) {
	nofralloc
#include "_include/JParticle/JPABaseShape/JPACalcPrm__FP18JPAEmitterWorkData.s"
}
#pragma pop

extern "C" {
/* 80277404 003C .text      JPACalcPrm__FP18JPAEmitterWorkDataP15JPABaseParticle         */
}

#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void JPACalcPrm(JPAEmitterWorkData*, JPABaseParticle*) {
	nofralloc
#include "_include/JParticle/JPABaseShape/JPACalcPrm__FP18JPAEmitterWorkDataP15JPABaseParticle.s"
}
#pragma pop

extern "C" {
/* 80277440 0040 .text      JPACalcEnv__FP18JPAEmitterWorkData                           */
}

#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void JPACalcEnv(JPAEmitterWorkData*) {
	nofralloc
#include "_include/JParticle/JPABaseShape/JPACalcEnv__FP18JPAEmitterWorkData.s"
}
#pragma pop

extern "C" {
/* 80277480 003C .text      JPACalcEnv__FP18JPAEmitterWorkDataP15JPABaseParticle         */
}

#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void JPACalcEnv(JPAEmitterWorkData*, JPABaseParticle*) {
	nofralloc
#include "_include/JParticle/JPABaseShape/JPACalcEnv__FP18JPAEmitterWorkDataP15JPABaseParticle.s"
}
#pragma pop

extern "C" {
/* 802774BC 0048 .text      JPACalcColorCopy__FP18JPAEmitterWorkDataP15JPABaseParticle   */
}

#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void JPACalcColorCopy(JPAEmitterWorkData*, JPABaseParticle*) {
	nofralloc
#include "_include/JParticle/JPABaseShape/JPACalcColorCopy__FP18JPAEmitterWorkDataP15JPABaseParticle.s"
}
#pragma pop

extern "C" {
/* 80277504 0038 .text      JPAGenTexCrdMtxIdt__FP18JPAEmitterWorkData                   */
}

#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void JPAGenTexCrdMtxIdt(JPAEmitterWorkData*) {
	nofralloc
#include "_include/JParticle/JPABaseShape/JPAGenTexCrdMtxIdt__FP18JPAEmitterWorkData.s"
}
#pragma pop

extern "C" {
/* 8027753C 0038 .text      JPAGenTexCrdMtxAnm__FP18JPAEmitterWorkData                   */
}

#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void JPAGenTexCrdMtxAnm(JPAEmitterWorkData*) {
	nofralloc
#include "_include/JParticle/JPABaseShape/JPAGenTexCrdMtxAnm__FP18JPAEmitterWorkData.s"
}
#pragma pop

extern "C" {
/* 80277574 0038 .text      JPAGenTexCrdMtxPrj__FP18JPAEmitterWorkData                   */
}

#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void JPAGenTexCrdMtxPrj(JPAEmitterWorkData*) {
	nofralloc
#include "_include/JParticle/JPABaseShape/JPAGenTexCrdMtxPrj__FP18JPAEmitterWorkData.s"
}
#pragma pop

extern "C" {
/* 802775AC 01AC .text      JPAGenCalcTexCrdMtxAnm__FP18JPAEmitterWorkData               */
}

#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void JPAGenCalcTexCrdMtxAnm(JPAEmitterWorkData*) {
	nofralloc
#include "_include/JParticle/JPABaseShape/JPAGenCalcTexCrdMtxAnm__FP18JPAEmitterWorkData.s"
}
#pragma pop

extern "C" {
/* 80277758 0194 .text      JPALoadCalcTexCrdMtxAnm__FP18JPAEmitterWorkDataP15JPABaseParticle */
}

#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void JPALoadCalcTexCrdMtxAnm(JPAEmitterWorkData*, JPABaseParticle*) {
	nofralloc
#include "_include/JParticle/JPABaseShape/JPALoadCalcTexCrdMtxAnm__FP18JPAEmitterWorkDataP15JPABaseParticle.s"
}
#pragma pop

extern "C" {
/* 802778EC 0054 .text      JPALoadTex__FP18JPAEmitterWorkData                           */
}

#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void JPALoadTex(JPAEmitterWorkData*) {
	nofralloc
#include "_include/JParticle/JPABaseShape/JPALoadTex__FP18JPAEmitterWorkData.s"
}
#pragma pop

extern "C" {
/* 80277940 0050 .text      JPALoadTexAnm__FP18JPAEmitterWorkData                        */
}

#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void JPALoadTexAnm(JPAEmitterWorkData*) {
	nofralloc
#include "_include/JParticle/JPABaseShape/JPALoadTexAnm__FP18JPAEmitterWorkData.s"
}
#pragma pop

extern "C" {
/* 80277990 004C .text      JPALoadTexAnm__FP18JPAEmitterWorkDataP15JPABaseParticle      */
}

#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void JPALoadTexAnm(JPAEmitterWorkData*, JPABaseParticle*) {
	nofralloc
#include "_include/JParticle/JPABaseShape/JPALoadTexAnm__FP18JPAEmitterWorkDataP15JPABaseParticle.s"
}
#pragma pop

extern "C" {
/* 802779DC 003C .text      JPACalcTexIdxNormal__FP18JPAEmitterWorkData                  */
}

#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void JPACalcTexIdxNormal(JPAEmitterWorkData*) {
	nofralloc
#include "_include/JParticle/JPABaseShape/JPACalcTexIdxNormal__FP18JPAEmitterWorkData.s"
}
#pragma pop

extern "C" {
/* 80277A18 0038 .text      JPACalcTexIdxNormal__FP18JPAEmitterWorkDataP15JPABaseParticle */
}

#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void JPACalcTexIdxNormal(JPAEmitterWorkData*, JPABaseParticle*) {
	nofralloc
#include "_include/JParticle/JPABaseShape/JPACalcTexIdxNormal__FP18JPAEmitterWorkDataP15JPABaseParticle.s"
}
#pragma pop

extern "C" {
/* 80277A50 0038 .text      JPACalcTexIdxRepeat__FP18JPAEmitterWorkData                  */
}

#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void JPACalcTexIdxRepeat(JPAEmitterWorkData*) {
	nofralloc
#include "_include/JParticle/JPABaseShape/JPACalcTexIdxRepeat__FP18JPAEmitterWorkData.s"
}
#pragma pop

extern "C" {
/* 80277A88 0044 .text      JPACalcTexIdxRepeat__FP18JPAEmitterWorkDataP15JPABaseParticle */
}

#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void JPACalcTexIdxRepeat(JPAEmitterWorkData*, JPABaseParticle*) {
	nofralloc
#include "_include/JParticle/JPABaseShape/JPACalcTexIdxRepeat__FP18JPAEmitterWorkDataP15JPABaseParticle.s"
}
#pragma pop

extern "C" {
/* 80277ACC 0050 .text      JPACalcTexIdxReverse__FP18JPAEmitterWorkData                 */
}

#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void JPACalcTexIdxReverse(JPAEmitterWorkData*) {
	nofralloc
#include "_include/JParticle/JPABaseShape/JPACalcTexIdxReverse__FP18JPAEmitterWorkData.s"
}
#pragma pop

extern "C" {
/* 80277B1C 005C .text      JPACalcTexIdxReverse__FP18JPAEmitterWorkDataP15JPABaseParticle */
}

#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void JPACalcTexIdxReverse(JPAEmitterWorkData*, JPABaseParticle*) {
	nofralloc
#include "_include/JParticle/JPABaseShape/JPACalcTexIdxReverse__FP18JPAEmitterWorkDataP15JPABaseParticle.s"
}
#pragma pop

extern "C" {
/* 80277B78 001C .text      JPACalcTexIdxMerge__FP18JPAEmitterWorkData                   */
}

#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void JPACalcTexIdxMerge(JPAEmitterWorkData*) {
	nofralloc
#include "_include/JParticle/JPABaseShape/JPACalcTexIdxMerge__FP18JPAEmitterWorkData.s"
}
#pragma pop

extern "C" {
/* 80277B94 0078 .text      JPACalcTexIdxMerge__FP18JPAEmitterWorkDataP15JPABaseParticle */
}

#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void JPACalcTexIdxMerge(JPAEmitterWorkData*, JPABaseParticle*) {
	nofralloc
#include "_include/JParticle/JPABaseShape/JPACalcTexIdxMerge__FP18JPAEmitterWorkDataP15JPABaseParticle.s"
}
#pragma pop

extern "C" {
/* 80277C0C 001C .text      JPACalcTexIdxRandom__FP18JPAEmitterWorkData                  */
}

#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void JPACalcTexIdxRandom(JPAEmitterWorkData*) {
	nofralloc
#include "_include/JParticle/JPABaseShape/JPACalcTexIdxRandom__FP18JPAEmitterWorkData.s"
}
#pragma pop

extern "C" {
/* 80277C28 003C .text      JPACalcTexIdxRandom__FP18JPAEmitterWorkDataP15JPABaseParticle */
}

#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void JPACalcTexIdxRandom(JPAEmitterWorkData*, JPABaseParticle*) {
	nofralloc
#include "_include/JParticle/JPABaseShape/JPACalcTexIdxRandom__FP18JPAEmitterWorkDataP15JPABaseParticle.s"
}
#pragma pop

extern "C" {
/* 80277C64 0028 .text      JPALoadPosMtxCam__FP18JPAEmitterWorkData                     */
}

#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void JPALoadPosMtxCam(JPAEmitterWorkData*) {
	nofralloc
#include "_include/JParticle/JPABaseShape/JPALoadPosMtxCam__FP18JPAEmitterWorkData.s"
}
#pragma pop

extern "C" {
/* 80277C8C 0004 .text      noLoadPrj__FPC18JPAEmitterWorkDataPA4_Cf                     */
// noLoadPrj(const JPAEmitterWorkData*, const f32 (*)[4])
void noLoadPrj__FPC18JPAEmitterWorkDataPA4_Cf() {
	return;
}

/* 80277C90 0038 .text      loadPrj__FPC18JPAEmitterWorkDataPA4_Cf                       */
}

#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void loadPrj(const JPAEmitterWorkData*, const f32 (*)[4]) {
	nofralloc
#include "_include/JParticle/JPABaseShape/loadPrj__FPC18JPAEmitterWorkDataPA4_Cf.s"
}
#pragma pop

extern "C" {
/* 80277CC8 01C0 .text      loadPrjAnm__FPC18JPAEmitterWorkDataPA4_Cf                    */
}

#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void loadPrjAnm(const JPAEmitterWorkData*, const f32 (*)[4]) {
	nofralloc
#include "_include/JParticle/JPABaseShape/loadPrjAnm__FPC18JPAEmitterWorkDataPA4_Cf.s"
}
#pragma pop

extern "C" {
/* 80277E88 00E8 .text      JPADrawBillboard__FP18JPAEmitterWorkDataP15JPABaseParticle   */
}

#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void JPADrawBillboard(JPAEmitterWorkData*, JPABaseParticle*) {
	nofralloc
#include "_include/JParticle/JPABaseShape/JPADrawBillboard__FP18JPAEmitterWorkDataP15JPABaseParticle.s"
}
#pragma pop

extern "C" {
/* 80277F70 0118 .text      JPADrawRotBillboard__FP18JPAEmitterWorkDataP15JPABaseParticle */
}

#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void JPADrawRotBillboard(JPAEmitterWorkData*, JPABaseParticle*) {
	nofralloc
#include "_include/JParticle/JPABaseShape/JPADrawRotBillboard__FP18JPAEmitterWorkDataP15JPABaseParticle.s"
}
#pragma pop

extern "C" {
/* 80278088 00FC .text      JPADrawYBillboard__FP18JPAEmitterWorkDataP15JPABaseParticle  */
}

#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void JPADrawYBillboard(JPAEmitterWorkData*, JPABaseParticle*) {
	nofralloc
#include "_include/JParticle/JPABaseShape/JPADrawYBillboard__FP18JPAEmitterWorkDataP15JPABaseParticle.s"
}
#pragma pop

extern "C" {
/* 80278184 0130 .text      JPADrawRotYBillboard__FP18JPAEmitterWorkDataP15JPABaseParticle */
}

#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void JPADrawRotYBillboard(JPAEmitterWorkData*, JPABaseParticle*) {
	nofralloc
#include "_include/JParticle/JPABaseShape/JPADrawRotYBillboard__FP18JPAEmitterWorkDataP15JPABaseParticle.s"
}
#pragma pop

extern "C" {
/* 802782B4 001C .text      dirTypeVel__FPC18JPAEmitterWorkDataPC15JPABaseParticlePQ29JGeometry8TVec3<f> */
// dirTypeVel(const JPAEmitterWorkData*, const JPABaseParticle*, JGeometry::TVec3<f>)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void func_802782B4() {
	nofralloc
#include "_include/JParticle/JPABaseShape/func_802782B4.s"
}
#pragma pop

/* 802782D0 001C .text      dirTypePos__FPC18JPAEmitterWorkDataPC15JPABaseParticlePQ29JGeometry8TVec3<f> */
// dirTypePos(const JPAEmitterWorkData*, const JPABaseParticle*, JGeometry::TVec3<f>)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void func_802782D0() {
	nofralloc
#include "_include/JParticle/JPABaseShape/func_802782D0.s"
}
#pragma pop

/* 802782EC 0034 .text      dirTypePosInv__FPC18JPAEmitterWorkDataPC15JPABaseParticlePQ29JGeometry8TVec3<f> */
// dirTypePosInv(const JPAEmitterWorkData*, const JPABaseParticle*, JGeometry::TVec3<f>)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void func_802782EC() {
	nofralloc
#include "_include/JParticle/JPABaseShape/func_802782EC.s"
}
#pragma pop

/* 80278320 001C .text      dirTypeEmtrDir__FPC18JPAEmitterWorkDataPC15JPABaseParticlePQ29JGeometry8TVec3<f> */
// dirTypeEmtrDir(const JPAEmitterWorkData*, const JPABaseParticle*, JGeometry::TVec3<f>)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void func_80278320() {
	nofralloc
#include "_include/JParticle/JPABaseShape/func_80278320.s"
}
#pragma pop

/* 8027833C 0098 .text      dirTypePrevPtcl__FPC18JPAEmitterWorkDataPC15JPABaseParticlePQ29JGeometry8TVec3<f> */
// dirTypePrevPtcl(const JPAEmitterWorkData*, const JPABaseParticle*, JGeometry::TVec3<f>)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void func_8027833C() {
	nofralloc
#include "_include/JParticle/JPABaseShape/func_8027833C.s"
}
#pragma pop

/* 802783D4 0040 .text      rotTypeY__FffRA3_A4_f                                        */
}

#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void rotTypeY(f32, f32, f32 (&)[3][4]) {
	nofralloc
#include "_include/JParticle/JPABaseShape/rotTypeY__FffRA3_A4_f.s"
}
#pragma pop

extern "C" {
/* 80278414 0040 .text      rotTypeX__FffRA3_A4_f                                        */
}

#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void rotTypeX(f32, f32, f32 (&)[3][4]) {
	nofralloc
#include "_include/JParticle/JPABaseShape/rotTypeX__FffRA3_A4_f.s"
}
#pragma pop

extern "C" {
/* 80278454 0040 .text      rotTypeZ__FffRA3_A4_f                                        */
}

#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void rotTypeZ(f32, f32, f32 (&)[3][4]) {
	nofralloc
#include "_include/JParticle/JPABaseShape/rotTypeZ__FffRA3_A4_f.s"
}
#pragma pop

extern "C" {
/* 80278494 005C .text      rotTypeXYZ__FffRA3_A4_f                                      */
}

#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void rotTypeXYZ(f32, f32, f32 (&)[3][4]) {
	nofralloc
#include "_include/JParticle/JPABaseShape/rotTypeXYZ__FffRA3_A4_f.s"
}
#pragma pop

extern "C" {
/* 802784F0 004C .text      basePlaneTypeXY__FPA4_fff                                    */
}

#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void basePlaneTypeXY(f32 (*)[4], f32, f32) {
	nofralloc
#include "_include/JParticle/JPABaseShape/basePlaneTypeXY__FPA4_fff.s"
}
#pragma pop

extern "C" {
/* 8027853C 004C .text      basePlaneTypeXZ__FPA4_fff                                    */
}

#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void basePlaneTypeXZ(f32 (*)[4], f32, f32) {
	nofralloc
#include "_include/JParticle/JPABaseShape/basePlaneTypeXZ__FPA4_fff.s"
}
#pragma pop

extern "C" {
/* 80278588 0070 .text      basePlaneTypeX__FPA4_fff                                     */
}

#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void basePlaneTypeX(f32 (*)[4], f32, f32) {
	nofralloc
#include "_include/JParticle/JPABaseShape/basePlaneTypeX__FPA4_fff.s"
}
#pragma pop

extern "C" {
/* 802785F8 039C .text      JPADrawDirection__FP18JPAEmitterWorkDataP15JPABaseParticle   */
}

#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void JPADrawDirection(JPAEmitterWorkData*, JPABaseParticle*) {
	nofralloc
#include "_include/JParticle/JPABaseShape/JPADrawDirection__FP18JPAEmitterWorkDataP15JPABaseParticle.s"
}
#pragma pop

extern "C" {
/* 80278994 0414 .text      JPADrawRotDirection__FP18JPAEmitterWorkDataP15JPABaseParticle */
}

#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void JPADrawRotDirection(JPAEmitterWorkData*, JPABaseParticle*) {
	nofralloc
#include "_include/JParticle/JPABaseShape/JPADrawRotDirection__FP18JPAEmitterWorkDataP15JPABaseParticle.s"
}
#pragma pop

extern "C" {
/* 80278DA8 0220 .text      JPADrawDBillboard__FP18JPAEmitterWorkDataP15JPABaseParticle  */
}

#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void JPADrawDBillboard(JPAEmitterWorkData*, JPABaseParticle*) {
	nofralloc
#include "_include/JParticle/JPABaseShape/JPADrawDBillboard__FP18JPAEmitterWorkDataP15JPABaseParticle.s"
}
#pragma pop

extern "C" {
/* 80278FC8 0148 .text      JPADrawRotation__FP18JPAEmitterWorkDataP15JPABaseParticle    */
}

#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void JPADrawRotation(JPAEmitterWorkData*, JPABaseParticle*) {
	nofralloc
#include "_include/JParticle/JPABaseShape/JPADrawRotation__FP18JPAEmitterWorkDataP15JPABaseParticle.s"
}
#pragma pop

extern "C" {
/* 80279110 00A0 .text      JPADrawPoint__FP18JPAEmitterWorkDataP15JPABaseParticle       */
}

#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void JPADrawPoint(JPAEmitterWorkData*, JPABaseParticle*) {
	nofralloc
#include "_include/JParticle/JPABaseShape/JPADrawPoint__FP18JPAEmitterWorkDataP15JPABaseParticle.s"
}
#pragma pop

extern "C" {
/* 802791B0 01B4 .text      JPADrawLine__FP18JPAEmitterWorkDataP15JPABaseParticle        */
}

#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void JPADrawLine(JPAEmitterWorkData*, JPABaseParticle*) {
	nofralloc
#include "_include/JParticle/JPABaseShape/JPADrawLine__FP18JPAEmitterWorkDataP15JPABaseParticle.s"
}
#pragma pop

extern "C" {
/* 80279364 0008 .text      getNext__FP26JPANode<15JPABaseParticle>                      */
// getNext(JPANode<15JPABaseParticle>*)
u32 func_80279364(u8* param0) {
	return *(u32*)&param0[4]; /* param0->field_0x4 */
}

/* 8027936C 0008 .text      getPrev__FP26JPANode<15JPABaseParticle>                      */
// getPrev(JPANode<15JPABaseParticle>*)
u32 func_8027936C(u8* param0) {
	return *(u32*)&param0[0]; /* param0->field_0x0 */
}

/* 80279374 05F8 .text      JPADrawStripe__FP18JPAEmitterWorkData                        */
}

#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void JPADrawStripe(JPAEmitterWorkData*) {
	nofralloc
#include "_include/JParticle/JPABaseShape/JPADrawStripe__FP18JPAEmitterWorkData.s"
}
#pragma pop

extern "C" {
/* 8027996C 0A6C .text      JPADrawStripeX__FP18JPAEmitterWorkData                       */
}

#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void JPADrawStripeX(JPAEmitterWorkData*) {
	nofralloc
#include "_include/JParticle/JPABaseShape/JPADrawStripeX__FP18JPAEmitterWorkData.s"
}
#pragma pop

extern "C" {
/* 8027A3D8 003C .text      JPADrawEmitterCallBackB__FP18JPAEmitterWorkData              */
}

#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void JPADrawEmitterCallBackB(JPAEmitterWorkData*) {
	nofralloc
#include "_include/JParticle/JPABaseShape/JPADrawEmitterCallBackB__FP18JPAEmitterWorkData.s"
}
#pragma pop

extern "C" {
/* 8027A414 0040 .text      JPADrawParticleCallBack__FP18JPAEmitterWorkDataP15JPABaseParticle */
}

#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void JPADrawParticleCallBack(JPAEmitterWorkData*, JPABaseParticle*) {
	nofralloc
#include "_include/JParticle/JPABaseShape/JPADrawParticleCallBack__FP18JPAEmitterWorkDataP15JPABaseParticle.s"
}
#pragma pop

extern "C" {
/* 8027A454 0288 .text      makeColorTable__FPP8_GXColorPC16JPAClrAnmKeyDataUcsP7JKRHeap */
}

#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void makeColorTable(_GXColor**, const JPAClrAnmKeyData*, u8, s16, JKRHeap*) {
	nofralloc
#include "_include/JParticle/JPABaseShape/makeColorTable__FPP8_GXColorPC16JPAClrAnmKeyDataUcsP7JKRHeap.s"
}
#pragma pop

extern "C" {
/* 8027A6DC 010C .text      __ct__12JPABaseShapeFPCUcP7JKRHeap                           */
// JPABaseShape::JPABaseShape(const u8*, JKRHeap*)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void __ct__12JPABaseShapeFPCUcP7JKRHeap() {
	nofralloc
#include "_include/JParticle/JPABaseShape/__ct__12JPABaseShapeFPCUcP7JKRHeap.s"
}
#pragma pop

/* 8027A7E8 0130 .text      setGX__12JPABaseShapeCFP18JPAEmitterWorkData                 */
// JPABaseShape::setGX(JPAEmitterWorkData*) const
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void setGX__12JPABaseShapeCFP18JPAEmitterWorkData() {
	nofralloc
#include "_include/JParticle/JPABaseShape/setGX__12JPABaseShapeCFP18JPAEmitterWorkData.s"
}
#pragma pop

}

