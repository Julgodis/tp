// 
// Generated By: dol2asm
// 

#include "dolphin/types.h"

// 
// Additional Symbols:
// 

struct JKRHeap;
struct JPABaseParticle;
struct JPAEmitterWorkData;
struct JPAClrAnmKeyData;
struct _GXColor;

extern void JPASetPointSize(JPAEmitterWorkData*); /* JPASetPointSize__FP18JPAEmitterWorkData */
extern void JPASetLineWidth(JPAEmitterWorkData*); /* JPASetLineWidth__FP18JPAEmitterWorkData */
extern void JPASetPointSize(JPAEmitterWorkData*, JPABaseParticle*); /* JPASetPointSize__FP18JPAEmitterWorkDataP15JPABaseParticle */
extern void JPASetLineWidth(JPAEmitterWorkData*, JPABaseParticle*); /* JPASetLineWidth__FP18JPAEmitterWorkDataP15JPABaseParticle */
extern void JPARegistPrm(JPAEmitterWorkData*); /* JPARegistPrm__FP18JPAEmitterWorkData */
extern void JPARegistEnv(JPAEmitterWorkData*); /* JPARegistEnv__FP18JPAEmitterWorkData */
extern void JPARegistPrmEnv(JPAEmitterWorkData*); /* JPARegistPrmEnv__FP18JPAEmitterWorkData */
extern void JPARegistAlpha(JPAEmitterWorkData*, JPABaseParticle*); /* JPARegistAlpha__FP18JPAEmitterWorkDataP15JPABaseParticle */
extern void JPARegistPrmAlpha(JPAEmitterWorkData*, JPABaseParticle*); /* JPARegistPrmAlpha__FP18JPAEmitterWorkDataP15JPABaseParticle */
extern void JPARegistPrmAlphaEnv(JPAEmitterWorkData*, JPABaseParticle*); /* JPARegistPrmAlphaEnv__FP18JPAEmitterWorkDataP15JPABaseParticle */
extern void JPARegistAlphaEnv(JPAEmitterWorkData*, JPABaseParticle*); /* JPARegistAlphaEnv__FP18JPAEmitterWorkDataP15JPABaseParticle */
extern void JPARegistEnv(JPAEmitterWorkData*, JPABaseParticle*); /* JPARegistEnv__FP18JPAEmitterWorkDataP15JPABaseParticle */
extern void JPACalcClrIdxNormal(JPAEmitterWorkData*); /* JPACalcClrIdxNormal__FP18JPAEmitterWorkData */
extern void JPACalcClrIdxNormal(JPAEmitterWorkData*, JPABaseParticle*); /* JPACalcClrIdxNormal__FP18JPAEmitterWorkDataP15JPABaseParticle */
extern void JPACalcClrIdxRepeat(JPAEmitterWorkData*); /* JPACalcClrIdxRepeat__FP18JPAEmitterWorkData */
extern void JPACalcClrIdxRepeat(JPAEmitterWorkData*, JPABaseParticle*); /* JPACalcClrIdxRepeat__FP18JPAEmitterWorkDataP15JPABaseParticle */
extern void JPACalcClrIdxReverse(JPAEmitterWorkData*); /* JPACalcClrIdxReverse__FP18JPAEmitterWorkData */
extern void JPACalcClrIdxReverse(JPAEmitterWorkData*, JPABaseParticle*); /* JPACalcClrIdxReverse__FP18JPAEmitterWorkDataP15JPABaseParticle */
extern void JPACalcClrIdxMerge(JPAEmitterWorkData*); /* JPACalcClrIdxMerge__FP18JPAEmitterWorkData */
extern void JPACalcClrIdxMerge(JPAEmitterWorkData*, JPABaseParticle*); /* JPACalcClrIdxMerge__FP18JPAEmitterWorkDataP15JPABaseParticle */
extern void JPACalcClrIdxRandom(JPAEmitterWorkData*); /* JPACalcClrIdxRandom__FP18JPAEmitterWorkData */
extern void JPACalcClrIdxRandom(JPAEmitterWorkData*, JPABaseParticle*); /* JPACalcClrIdxRandom__FP18JPAEmitterWorkDataP15JPABaseParticle */
extern void JPACalcPrm(JPAEmitterWorkData*); /* JPACalcPrm__FP18JPAEmitterWorkData */
extern void JPACalcPrm(JPAEmitterWorkData*, JPABaseParticle*); /* JPACalcPrm__FP18JPAEmitterWorkDataP15JPABaseParticle */
extern void JPACalcEnv(JPAEmitterWorkData*); /* JPACalcEnv__FP18JPAEmitterWorkData */
extern void JPACalcEnv(JPAEmitterWorkData*, JPABaseParticle*); /* JPACalcEnv__FP18JPAEmitterWorkDataP15JPABaseParticle */
extern void JPACalcColorCopy(JPAEmitterWorkData*, JPABaseParticle*); /* JPACalcColorCopy__FP18JPAEmitterWorkDataP15JPABaseParticle */
extern void JPAGenTexCrdMtxIdt(JPAEmitterWorkData*); /* JPAGenTexCrdMtxIdt__FP18JPAEmitterWorkData */
extern void JPAGenTexCrdMtxAnm(JPAEmitterWorkData*); /* JPAGenTexCrdMtxAnm__FP18JPAEmitterWorkData */
extern void JPAGenTexCrdMtxPrj(JPAEmitterWorkData*); /* JPAGenTexCrdMtxPrj__FP18JPAEmitterWorkData */
extern void JPAGenCalcTexCrdMtxAnm(JPAEmitterWorkData*); /* JPAGenCalcTexCrdMtxAnm__FP18JPAEmitterWorkData */
extern void JPALoadCalcTexCrdMtxAnm(JPAEmitterWorkData*, JPABaseParticle*); /* JPALoadCalcTexCrdMtxAnm__FP18JPAEmitterWorkDataP15JPABaseParticle */
extern void JPALoadTex(JPAEmitterWorkData*); /* JPALoadTex__FP18JPAEmitterWorkData */
extern void JPALoadTexAnm(JPAEmitterWorkData*); /* JPALoadTexAnm__FP18JPAEmitterWorkData */
extern void JPALoadTexAnm(JPAEmitterWorkData*, JPABaseParticle*); /* JPALoadTexAnm__FP18JPAEmitterWorkDataP15JPABaseParticle */
extern void JPACalcTexIdxNormal(JPAEmitterWorkData*); /* JPACalcTexIdxNormal__FP18JPAEmitterWorkData */
extern void JPACalcTexIdxNormal(JPAEmitterWorkData*, JPABaseParticle*); /* JPACalcTexIdxNormal__FP18JPAEmitterWorkDataP15JPABaseParticle */
extern void JPACalcTexIdxRepeat(JPAEmitterWorkData*); /* JPACalcTexIdxRepeat__FP18JPAEmitterWorkData */
extern void JPACalcTexIdxRepeat(JPAEmitterWorkData*, JPABaseParticle*); /* JPACalcTexIdxRepeat__FP18JPAEmitterWorkDataP15JPABaseParticle */
extern void JPACalcTexIdxReverse(JPAEmitterWorkData*); /* JPACalcTexIdxReverse__FP18JPAEmitterWorkData */
extern void JPACalcTexIdxReverse(JPAEmitterWorkData*, JPABaseParticle*); /* JPACalcTexIdxReverse__FP18JPAEmitterWorkDataP15JPABaseParticle */
extern void JPACalcTexIdxMerge(JPAEmitterWorkData*); /* JPACalcTexIdxMerge__FP18JPAEmitterWorkData */
extern void JPACalcTexIdxMerge(JPAEmitterWorkData*, JPABaseParticle*); /* JPACalcTexIdxMerge__FP18JPAEmitterWorkDataP15JPABaseParticle */
extern void JPACalcTexIdxRandom(JPAEmitterWorkData*); /* JPACalcTexIdxRandom__FP18JPAEmitterWorkData */
extern void JPACalcTexIdxRandom(JPAEmitterWorkData*, JPABaseParticle*); /* JPACalcTexIdxRandom__FP18JPAEmitterWorkDataP15JPABaseParticle */
extern void JPALoadPosMtxCam(JPAEmitterWorkData*); /* JPALoadPosMtxCam__FP18JPAEmitterWorkData */
extern void noLoadPrj(const JPAEmitterWorkData*, const f32 (*)[4]); /* noLoadPrj__FPC18JPAEmitterWorkDataPA4_Cf */
extern void loadPrj(const JPAEmitterWorkData*, const f32 (*)[4]); /* loadPrj__FPC18JPAEmitterWorkDataPA4_Cf */
extern void loadPrjAnm(const JPAEmitterWorkData*, const f32 (*)[4]); /* loadPrjAnm__FPC18JPAEmitterWorkDataPA4_Cf */
extern void JPADrawBillboard(JPAEmitterWorkData*, JPABaseParticle*); /* JPADrawBillboard__FP18JPAEmitterWorkDataP15JPABaseParticle */
extern void JPADrawRotBillboard(JPAEmitterWorkData*, JPABaseParticle*); /* JPADrawRotBillboard__FP18JPAEmitterWorkDataP15JPABaseParticle */
extern void JPADrawYBillboard(JPAEmitterWorkData*, JPABaseParticle*); /* JPADrawYBillboard__FP18JPAEmitterWorkDataP15JPABaseParticle */
extern void JPADrawRotYBillboard(JPAEmitterWorkData*, JPABaseParticle*); /* JPADrawRotYBillboard__FP18JPAEmitterWorkDataP15JPABaseParticle */
extern void rotTypeY(f32, f32, f32 (&)[3][4]); /* rotTypeY__FffRA3_A4_f */
extern void rotTypeX(f32, f32, f32 (&)[3][4]); /* rotTypeX__FffRA3_A4_f */
extern void rotTypeZ(f32, f32, f32 (&)[3][4]); /* rotTypeZ__FffRA3_A4_f */
extern void rotTypeXYZ(f32, f32, f32 (&)[3][4]); /* rotTypeXYZ__FffRA3_A4_f */
extern void basePlaneTypeXY(f32 (*)[4], f32, f32); /* basePlaneTypeXY__FPA4_fff */
extern void basePlaneTypeXZ(f32 (*)[4], f32, f32); /* basePlaneTypeXZ__FPA4_fff */
extern void basePlaneTypeX(f32 (*)[4], f32, f32); /* basePlaneTypeX__FPA4_fff */
extern void JPADrawDirection(JPAEmitterWorkData*, JPABaseParticle*); /* JPADrawDirection__FP18JPAEmitterWorkDataP15JPABaseParticle */
extern void JPADrawRotDirection(JPAEmitterWorkData*, JPABaseParticle*); /* JPADrawRotDirection__FP18JPAEmitterWorkDataP15JPABaseParticle */
extern void JPADrawDBillboard(JPAEmitterWorkData*, JPABaseParticle*); /* JPADrawDBillboard__FP18JPAEmitterWorkDataP15JPABaseParticle */
extern void JPADrawRotation(JPAEmitterWorkData*, JPABaseParticle*); /* JPADrawRotation__FP18JPAEmitterWorkDataP15JPABaseParticle */
extern void JPADrawPoint(JPAEmitterWorkData*, JPABaseParticle*); /* JPADrawPoint__FP18JPAEmitterWorkDataP15JPABaseParticle */
extern void JPADrawLine(JPAEmitterWorkData*, JPABaseParticle*); /* JPADrawLine__FP18JPAEmitterWorkDataP15JPABaseParticle */
extern void JPADrawStripe(JPAEmitterWorkData*); /* JPADrawStripe__FP18JPAEmitterWorkData */
extern void JPADrawStripeX(JPAEmitterWorkData*); /* JPADrawStripeX__FP18JPAEmitterWorkData */
extern void JPADrawEmitterCallBackB(JPAEmitterWorkData*); /* JPADrawEmitterCallBackB__FP18JPAEmitterWorkData */
extern void JPADrawParticleCallBack(JPAEmitterWorkData*, JPABaseParticle*); /* JPADrawParticleCallBack__FP18JPAEmitterWorkDataP15JPABaseParticle */
extern void makeColorTable(_GXColor**, const JPAClrAnmKeyData*, u8, short, JKRHeap*); /* makeColorTable__FPP8_GXColorPC16JPAClrAnmKeyDataUcsP7JKRHeap */

extern "C" {
/* Function             */
extern void JPASetPointSize__FP18JPAEmitterWorkData();
/* Function             */
extern void JPASetLineWidth__FP18JPAEmitterWorkData();
/* Function             */
extern void JPASetPointSize__FP18JPAEmitterWorkDataP15JPABaseParticle();
/* Function             */
extern void JPASetLineWidth__FP18JPAEmitterWorkDataP15JPABaseParticle();
/* Function             */
extern void JPARegistPrm__FP18JPAEmitterWorkData();
/* Function             */
extern void JPARegistEnv__FP18JPAEmitterWorkData();
/* Function             */
extern void JPARegistPrmEnv__FP18JPAEmitterWorkData();
/* Function             */
extern void JPARegistAlpha__FP18JPAEmitterWorkDataP15JPABaseParticle();
/* Function             */
extern void JPARegistPrmAlpha__FP18JPAEmitterWorkDataP15JPABaseParticle();
/* Function             */
extern void JPARegistPrmAlphaEnv__FP18JPAEmitterWorkDataP15JPABaseParticle();
/* Function             */
extern void JPARegistAlphaEnv__FP18JPAEmitterWorkDataP15JPABaseParticle();
/* Function             */
extern void JPARegistEnv__FP18JPAEmitterWorkDataP15JPABaseParticle();
/* Function             */
extern void JPACalcClrIdxNormal__FP18JPAEmitterWorkData();
/* Function             */
extern void JPACalcClrIdxNormal__FP18JPAEmitterWorkDataP15JPABaseParticle();
/* Function             */
extern void JPACalcClrIdxRepeat__FP18JPAEmitterWorkData();
/* Function             */
extern void JPACalcClrIdxRepeat__FP18JPAEmitterWorkDataP15JPABaseParticle();
/* Function             */
extern void JPACalcClrIdxReverse__FP18JPAEmitterWorkData();
/* Function             */
extern void JPACalcClrIdxReverse__FP18JPAEmitterWorkDataP15JPABaseParticle();
/* Function             */
extern void JPACalcClrIdxMerge__FP18JPAEmitterWorkData();
/* Function             */
extern void JPACalcClrIdxMerge__FP18JPAEmitterWorkDataP15JPABaseParticle();
/* Function             */
extern void JPACalcClrIdxRandom__FP18JPAEmitterWorkData();
/* Function             */
extern void JPACalcClrIdxRandom__FP18JPAEmitterWorkDataP15JPABaseParticle();
/* Function             */
extern void JPACalcPrm__FP18JPAEmitterWorkData();
/* Function             */
extern void JPACalcPrm__FP18JPAEmitterWorkDataP15JPABaseParticle();
/* Function             */
extern void JPACalcEnv__FP18JPAEmitterWorkData();
/* Function             */
extern void JPACalcEnv__FP18JPAEmitterWorkDataP15JPABaseParticle();
/* Function             */
extern void JPACalcColorCopy__FP18JPAEmitterWorkDataP15JPABaseParticle();
/* Function             */
extern void JPAGenTexCrdMtxIdt__FP18JPAEmitterWorkData();
/* Function             */
extern void JPAGenTexCrdMtxAnm__FP18JPAEmitterWorkData();
/* Function             */
extern void JPAGenTexCrdMtxPrj__FP18JPAEmitterWorkData();
/* Function             */
extern void JPAGenCalcTexCrdMtxAnm__FP18JPAEmitterWorkData();
/* Function             */
extern void JPALoadCalcTexCrdMtxAnm__FP18JPAEmitterWorkDataP15JPABaseParticle();
/* Function             */
extern void JPALoadTex__FP18JPAEmitterWorkData();
/* Function             */
extern void JPALoadTexAnm__FP18JPAEmitterWorkData();
/* Function             */
extern void JPALoadTexAnm__FP18JPAEmitterWorkDataP15JPABaseParticle();
/* Function             */
extern void JPACalcTexIdxNormal__FP18JPAEmitterWorkData();
/* Function             */
extern void JPACalcTexIdxNormal__FP18JPAEmitterWorkDataP15JPABaseParticle();
/* Function             */
extern void JPACalcTexIdxRepeat__FP18JPAEmitterWorkData();
/* Function             */
extern void JPACalcTexIdxRepeat__FP18JPAEmitterWorkDataP15JPABaseParticle();
/* Function             */
extern void JPACalcTexIdxReverse__FP18JPAEmitterWorkData();
/* Function             */
extern void JPACalcTexIdxReverse__FP18JPAEmitterWorkDataP15JPABaseParticle();
/* Function             */
extern void JPACalcTexIdxMerge__FP18JPAEmitterWorkData();
/* Function             */
extern void JPACalcTexIdxMerge__FP18JPAEmitterWorkDataP15JPABaseParticle();
/* Function             */
extern void JPACalcTexIdxRandom__FP18JPAEmitterWorkData();
/* Function             */
extern void JPACalcTexIdxRandom__FP18JPAEmitterWorkDataP15JPABaseParticle();
/* Function             */
extern void JPALoadPosMtxCam__FP18JPAEmitterWorkData();
/* ReturnFunction       */
extern void noLoadPrj__FPC18JPAEmitterWorkDataPA4_Cf();
/* Function             */
extern void loadPrj__FPC18JPAEmitterWorkDataPA4_Cf();
/* Function             */
extern void loadPrjAnm__FPC18JPAEmitterWorkDataPA4_Cf();
/* Function             */
extern void JPADrawBillboard__FP18JPAEmitterWorkDataP15JPABaseParticle();
/* Function             */
extern void JPADrawRotBillboard__FP18JPAEmitterWorkDataP15JPABaseParticle();
/* Function             */
extern void JPADrawYBillboard__FP18JPAEmitterWorkDataP15JPABaseParticle();
/* Function             */
extern void JPADrawRotYBillboard__FP18JPAEmitterWorkDataP15JPABaseParticle();
/* Function             */
extern void func_802782B4();
/* Function             */
extern void func_802782D0();
/* Function             */
extern void func_802782EC();
/* Function             */
extern void func_80278320();
/* Function             */
extern void func_8027833C();
/* Function             */
extern void rotTypeY__FffRA3_A4_f();
/* Function             */
extern void rotTypeX__FffRA3_A4_f();
/* Function             */
extern void rotTypeZ__FffRA3_A4_f();
/* Function             */
extern void rotTypeXYZ__FffRA3_A4_f();
/* Function             */
extern void basePlaneTypeXY__FPA4_fff();
/* Function             */
extern void basePlaneTypeXZ__FPA4_fff();
/* Function             */
extern void basePlaneTypeX__FPA4_fff();
/* Function             */
extern void JPADrawDirection__FP18JPAEmitterWorkDataP15JPABaseParticle();
/* Function             */
extern void JPADrawRotDirection__FP18JPAEmitterWorkDataP15JPABaseParticle();
/* Function             */
extern void JPADrawDBillboard__FP18JPAEmitterWorkDataP15JPABaseParticle();
/* Function             */
extern void JPADrawRotation__FP18JPAEmitterWorkDataP15JPABaseParticle();
/* Function             */
extern void JPADrawPoint__FP18JPAEmitterWorkDataP15JPABaseParticle();
/* Function             */
extern void JPADrawLine__FP18JPAEmitterWorkDataP15JPABaseParticle();
/* FirstParamFunction   */
extern u32 func_80279364(u8*);
/* FirstParamFunction   */
extern u32 func_8027936C(u8*);
/* Function             */
extern void JPADrawStripe__FP18JPAEmitterWorkData();
/* Function             */
extern void JPADrawStripeX__FP18JPAEmitterWorkData();
/* Function             */
extern void JPADrawEmitterCallBackB__FP18JPAEmitterWorkData();
/* Function             */
extern void JPADrawParticleCallBack__FP18JPAEmitterWorkDataP15JPABaseParticle();
/* Function             */
extern void makeColorTable__FPP8_GXColorPC16JPAClrAnmKeyDataUcsP7JKRHeap();
/* Function             */
extern void __ct__12JPABaseShapeFPCUcP7JKRHeap();
/* Function             */
extern void setGX__12JPABaseShapeCFP18JPAEmitterWorkData();
/* Function             */
extern void func_8027EEB0();
/* Function             */
extern void alloc__7JKRHeapFUliP7JKRHeap();
/* Function             */
extern void load__10JUTTextureF11_GXTexMapID();
/* Function             */
extern void PSMTXConcat();
/* Function             */
extern void PSMTXMultVec();
/* Function             */
extern void PSMTXMultVecSR();
/* Function             */
extern void PSMTXMultVecArraySR();
/* Function             */
extern void PSVECCrossProduct();
/* Function             */
extern void GXSetVtxDesc();
/* Function             */
extern void GXSetTexCoordGen2();
/* Function             */
extern void GXBegin();
/* Function             */
extern void GXSetLineWidth();
/* Function             */
extern void GXSetPointSize();
/* Function             */
extern void GXSetTevDirect();
/* Function             */
extern void GXSetTevColorIn();
/* Function             */
extern void GXSetTevAlphaIn();
/* Function             */
extern void GXSetTevColor();
/* Function             */
extern void GXSetAlphaCompare();
/* Function             */
extern void GXSetBlendMode();
/* Function             */
extern void GXSetZMode();
/* Function             */
extern void GXSetZCompLoc();
/* Function             */
extern void GXCallDisplayList();
/* Function             */
extern void GXLoadPosMtxImm();
/* Function             */
extern void GXLoadTexMtxImm();
/* Function             */
extern void _savegpr_22();
/* Function             */
extern void _savegpr_24();
/* Function             */
extern void _savegpr_28();
/* Function             */
extern void _savegpr_29();
/* Function             */
extern void _restgpr_22();
/* Function             */
extern void _restgpr_24();
/* Function             */
extern void _restgpr_28();
/* Function             */
extern void _restgpr_29();
/* InitializedData      */
SECTION_DATA extern u8 jpa_dl[32];
/* InitializedData      */
SECTION_DATA extern u8 jpa_dl_x[32];
/* SymbolReferenceArrayData */
SECTION_DATA extern void* p_prj[3];
/* SymbolReferenceArrayData */
SECTION_DATA extern void* p_direction[5];
/* SymbolReferenceArrayData */
SECTION_DATA extern void* p_rot[5];
/* SymbolReferenceArrayData */
SECTION_DATA extern void* p_plane[3];
/* InitializedData      */
SECTION_DATA extern u8 st_bm__12JPABaseShape[12];
/* InitializedData      */
SECTION_DATA extern u8 st_bf__12JPABaseShape[40];
/* InitializedData      */
SECTION_DATA extern u8 st_lo__12JPABaseShape[64];
/* InitializedData      */
SECTION_DATA extern u8 st_c__12JPABaseShape[32];
/* InitializedData      */
SECTION_DATA extern u8 st_ao__12JPABaseShape[16];
/* InitializedData      */
SECTION_DATA extern u8 st_ca__12JPABaseShape[96];
/* InitializedData      */
SECTION_DATA extern u8 st_aa__12JPABaseShape[36];
/* ZeroInitializedData  */
SECTION_BSS extern u8 sincosTable___5JMath[65536];
/* SymbolReferenceArrayData */
SECTION_SDATA extern void* p_dl[2];
/* InitializedData      */
SECTION_SDATA extern u8 __float_epsilon[4];
/* InitializedData      */
SECTION_SDATA2 extern u8 JPABaseShape__LIT_2262[8];
/* Float64Data          */
SECTION_SDATA2 extern f64 LIT_2623;
/* Float32Data          */
SECTION_SDATA2 extern f32 LIT_2740;
/* Float32Data          */
SECTION_SDATA2 extern f32 LIT_2741;
/* InitializedData      */
SECTION_SDATA2 extern u8 LIT_2742[8];
/* Float64Data          */
SECTION_SDATA2 extern f64 JPABaseShape__LIT_2744;
/* InitializedData      */
SECTION_SDATA2 extern u8 LIT_3145[4];
/* InitializedData      */
SECTION_SDATA2 extern u8 LIT_3146[4];
/* Float32Data          */
SECTION_SDATA2 extern f32 LIT_3281;
/* Float32Data          */
SECTION_SDATA2 extern f32 LIT_3282;
}


/* ###################################################################################### */
/*                                         .data                                          */
/* ###################################################################################### */

extern "C" {
/* 803C42E0-803C42E0 0000 .data      ...data.0                                                    InitializedData */
/* 803C42E0-803C4300 0020 .data      jpa_dl                                                       InitializedData */
SECTION_DATA u8 jpa_dl[32] = {
	0x80, 0x00, 0x04, 0x00, 0x00, 0x01, 0x01, 0x02, 0x02, 0x03, 0x03, 0x00, 0x00, 0x00, 0x00, 0x00,
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
};
/* 803C4300-803C4320 0020 .data      jpa_dl_x                                                     InitializedData */
SECTION_DATA u8 jpa_dl_x[32] = {
	0x80, 0x00, 0x08, 0x00, 0x00, 0x01, 0x01, 0x02, 0x02, 0x03, 0x03, 0x48, 0x00, 0x49, 0x01, 0x4A,
	0x02, 0x4B, 0x03, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
};
/* 803C4320-803C432C 000C .data      p_prj                                                        SymbolReferenceArrayData */
SECTION_DATA void* p_prj[3] = {
	(void*)noLoadPrj,
	(void*)loadPrj,
	(void*)loadPrjAnm,
};
/* 803C432C-803C4340 0014 .data      p_direction                                                  SymbolReferenceArrayData */
SECTION_DATA void* p_direction[5] = {
	(void*)func_802782B4,
	(void*)func_802782D0,
	(void*)func_802782EC,
	(void*)func_80278320,
	(void*)func_8027833C,
};
/* 803C4340-803C4354 0014 .data      p_rot                                                        SymbolReferenceArrayData */
SECTION_DATA void* p_rot[5] = {
	(void*)rotTypeY,
	(void*)rotTypeX,
	(void*)rotTypeZ,
	(void*)rotTypeXYZ,
	(void*)rotTypeY,
};
/* 803C4354-803C4360 000C .data      p_plane                                                      SymbolReferenceArrayData */
SECTION_DATA void* p_plane[3] = {
	(void*)basePlaneTypeXY,
	(void*)basePlaneTypeXZ,
	(void*)basePlaneTypeX,
};
/* 803C4360-803C436C 000C .data      st_bm__12JPABaseShape                                        InitializedData */
SECTION_DATA u8 st_bm__12JPABaseShape[12] = {
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x02,
};
/* 803C436C-803C4394 0028 .data      st_bf__12JPABaseShape                                        InitializedData */
SECTION_DATA u8 st_bf__12JPABaseShape[40] = {
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x02, 0x00, 0x00, 0x00, 0x03,
	0x00, 0x00, 0x00, 0x02, 0x00, 0x00, 0x00, 0x03, 0x00, 0x00, 0x00, 0x04, 0x00, 0x00, 0x00, 0x05,
	0x00, 0x00, 0x00, 0x06, 0x00, 0x00, 0x00, 0x07,
};
/* 803C4394-803C43D4 0040 .data      st_lo__12JPABaseShape                                        InitializedData */
SECTION_DATA u8 st_lo__12JPABaseShape[64] = {
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x0F, 0x00, 0x00, 0x00, 0x03, 0x00, 0x00, 0x00, 0x0C,
	0x00, 0x00, 0x00, 0x05, 0x00, 0x00, 0x00, 0x0A, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x0E,
	0x00, 0x00, 0x00, 0x07, 0x00, 0x00, 0x00, 0x08, 0x00, 0x00, 0x00, 0x06, 0x00, 0x00, 0x00, 0x09,
	0x00, 0x00, 0x00, 0x02, 0x00, 0x00, 0x00, 0x04, 0x00, 0x00, 0x00, 0x0B, 0x00, 0x00, 0x00, 0x0D,
};
/* 803C43D4-803C43F4 0020 .data      st_c__12JPABaseShape                                         InitializedData */
SECTION_DATA u8 st_c__12JPABaseShape[32] = {
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x03, 0x00, 0x00, 0x00, 0x02,
	0x00, 0x00, 0x00, 0x05, 0x00, 0x00, 0x00, 0x06, 0x00, 0x00, 0x00, 0x04, 0x00, 0x00, 0x00, 0x07,
};
/* 803C43F4-803C4404 0010 .data      st_ao__12JPABaseShape                                        InitializedData */
SECTION_DATA u8 st_ao__12JPABaseShape[16] = {
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x02, 0x00, 0x00, 0x00, 0x03,
};
/* 803C4404-803C4464 0060 .data      st_ca__12JPABaseShape                                        InitializedData */
SECTION_DATA u8 st_ca__12JPABaseShape[96] = {
	0x00, 0x00, 0x00, 0x0F, 0x00, 0x00, 0x00, 0x08, 0x00, 0x00, 0x00, 0x0C, 0x00, 0x00, 0x00, 0x0F,
	0x00, 0x00, 0x00, 0x0F, 0x00, 0x00, 0x00, 0x02, 0x00, 0x00, 0x00, 0x08, 0x00, 0x00, 0x00, 0x0F,
	0x00, 0x00, 0x00, 0x02, 0x00, 0x00, 0x00, 0x0C, 0x00, 0x00, 0x00, 0x08, 0x00, 0x00, 0x00, 0x0F,
	0x00, 0x00, 0x00, 0x04, 0x00, 0x00, 0x00, 0x02, 0x00, 0x00, 0x00, 0x08, 0x00, 0x00, 0x00, 0x0F,
	0x00, 0x00, 0x00, 0x0F, 0x00, 0x00, 0x00, 0x08, 0x00, 0x00, 0x00, 0x02, 0x00, 0x00, 0x00, 0x04,
	0x00, 0x00, 0x00, 0x0F, 0x00, 0x00, 0x00, 0x0F, 0x00, 0x00, 0x00, 0x0F, 0x00, 0x00, 0x00, 0x02,
};
/* 803C4464-803C4488 0020 .data      st_aa__12JPABaseShape                                        InitializedData */
SECTION_DATA u8 st_aa__12JPABaseShape[36] = {
	0x00, 0x00, 0x00, 0x07, 0x00, 0x00, 0x00, 0x04, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x07,
	0x00, 0x00, 0x00, 0x07, 0x00, 0x00, 0x00, 0x07, 0x00, 0x00, 0x00, 0x07, 0x00, 0x00, 0x00, 0x01,
	/* padding */
	0x00, 0x00, 0x00, 0x00,
};
}


/* ###################################################################################### */
/*                                         .sdata                                         */
/* ###################################################################################### */

extern "C" {
/* 804507A0-804507A8 0008 .sdata     p_dl                                                         SymbolReferenceArrayData */
SECTION_SDATA void* p_dl[2] = {
	(void*)&jpa_dl,
	(void*)&jpa_dl_x,
};
}


/* ###################################################################################### */
/*                                        .sdata2                                         */
/* ###################################################################################### */

extern "C" {
/* 804552A8-804552B0 0004 .sdata2    @2262                                                        InitializedData */
SECTION_SDATA2 u8 JPABaseShape__LIT_2262[8] = {
	0x41, 0xC8, 0x00, 0x00,
	/* padding */
	0x00, 0x00, 0x00, 0x00,
};
/* 804552B0-804552B8 0008 .sdata2    @2623                                                        Float64Data */
// 0x4330000080000000 | compiler-generated value used in cast: (float)s32
SECTION_SDATA2 f64 LIT_2623 = 4503601774854144.000000;
/* 804552B8-804552BC 0004 .sdata2    @2740                                                        Float32Data */
// 0x3f000000
SECTION_SDATA2 f32 LIT_2740 = 0.500000f;
/* 804552BC-804552C0 0004 .sdata2    @2741                                                        Float32Data */
// 0x3f800000
SECTION_SDATA2 f32 LIT_2741 = 1.000000f;
/* 804552C0-804552C8 0004 .sdata2    @2742                                                        InitializedData */
SECTION_SDATA2 u8 LIT_2742[8] = {
	0x00, 0x00, 0x00, 0x00,
	/* padding */
	0x00, 0x00, 0x00, 0x00,
};
/* 804552C8-804552D0 0008 .sdata2    @2744                                                        Float64Data */
// 0x4330000000000000 | compiler-generated value used in cast: (float)u32
SECTION_SDATA2 f64 JPABaseShape__LIT_2744 = 4503599627370496.000000;
/* 804552D0-804552D4 0004 .sdata2    @3145                                                        InitializedData */
SECTION_SDATA2 u8 LIT_3145[4] = {
	0x3E, 0xAA, 0xAA, 0x9F,
};
/* 804552D4-804552D8 0004 .sdata2    @3146                                                        InitializedData */
SECTION_SDATA2 u8 LIT_3146[4] = {
	0x3F, 0x13, 0xCD, 0x36,
};
/* 804552D8-804552DC 0004 .sdata2    @3281                                                        Float32Data */
// 0x42000000
SECTION_SDATA2 f32 LIT_3281 = 32.000000f;
/* 804552DC-804552E0 0004 .sdata2    @3282                                                        Float32Data */
// 0x40400000
SECTION_SDATA2 f32 LIT_3282 = 3.000000f;
}


/* ###################################################################################### */
/*                                         .text                                          */
/* ###################################################################################### */

extern "C" {
/* 80276A90-80276ACC 003C .text      JPASetPointSize__FP18JPAEmitterWorkData                      Function */
}

#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void JPASetPointSize(JPAEmitterWorkData*) {
	nofralloc
#include "_include/JParticle/JPABaseShape/JPASetPointSize__FP18JPAEmitterWorkData.s"
}
#pragma pop

extern "C" {
/* 80276ACC-80276B08 003C .text      JPASetLineWidth__FP18JPAEmitterWorkData                      Function */
}

#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void JPASetLineWidth(JPAEmitterWorkData*) {
	nofralloc
#include "_include/JParticle/JPABaseShape/JPASetLineWidth__FP18JPAEmitterWorkData.s"
}
#pragma pop

extern "C" {
/* 80276B08-80276B4C 0044 .text      JPASetPointSize__FP18JPAEmitterWorkDataP15JPABaseParticle    Function */
}

#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void JPASetPointSize(JPAEmitterWorkData*, JPABaseParticle*) {
	nofralloc
#include "_include/JParticle/JPABaseShape/JPASetPointSize__FP18JPAEmitterWorkDataP15JPABaseParticle.s"
}
#pragma pop

extern "C" {
/* 80276B4C-80276B90 0044 .text      JPASetLineWidth__FP18JPAEmitterWorkDataP15JPABaseParticle    Function */
}

#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void JPASetLineWidth(JPAEmitterWorkData*, JPABaseParticle*) {
	nofralloc
#include "_include/JParticle/JPABaseShape/JPASetLineWidth__FP18JPAEmitterWorkDataP15JPABaseParticle.s"
}
#pragma pop

extern "C" {
/* 80276B90-80276C2C 009C .text      JPARegistPrm__FP18JPAEmitterWorkData                         Function */
}

#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void JPARegistPrm(JPAEmitterWorkData*) {
	nofralloc
#include "_include/JParticle/JPABaseShape/JPARegistPrm__FP18JPAEmitterWorkData.s"
}
#pragma pop

extern "C" {
/* 80276C2C-80276CB0 0084 .text      JPARegistEnv__FP18JPAEmitterWorkData                         Function */
}

#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void JPARegistEnv(JPAEmitterWorkData*) {
	nofralloc
#include "_include/JParticle/JPABaseShape/JPARegistEnv__FP18JPAEmitterWorkData.s"
}
#pragma pop

extern "C" {
/* 80276CB0-80276DB0 0100 .text      JPARegistPrmEnv__FP18JPAEmitterWorkData                      Function */
}

#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void JPARegistPrmEnv(JPAEmitterWorkData*) {
	nofralloc
#include "_include/JParticle/JPABaseShape/JPARegistPrmEnv__FP18JPAEmitterWorkData.s"
}
#pragma pop

extern "C" {
/* 80276DB0-80276E60 00B0 .text      JPARegistAlpha__FP18JPAEmitterWorkDataP15JPABaseParticle     Function */
}

#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void JPARegistAlpha(JPAEmitterWorkData*, JPABaseParticle*) {
	nofralloc
#include "_include/JParticle/JPABaseShape/JPARegistAlpha__FP18JPAEmitterWorkDataP15JPABaseParticle.s"
}
#pragma pop

extern "C" {
/* 80276E60-80276F10 00B0 .text      JPARegistPrmAlpha__FP18JPAEmitterWorkDataP15JPABaseParticle  Function */
}

#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void JPARegistPrmAlpha(JPAEmitterWorkData*, JPABaseParticle*) {
	nofralloc
#include "_include/JParticle/JPABaseShape/JPARegistPrmAlpha__FP18JPAEmitterWorkDataP15JPABaseParticle.s"
}
#pragma pop

extern "C" {
/* 80276F10-80277024 0114 .text      JPARegistPrmAlphaEnv__FP18JPAEmitterWorkDataP15JPABaseParticle Function */
}

#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void JPARegistPrmAlphaEnv(JPAEmitterWorkData*, JPABaseParticle*) {
	nofralloc
#include "_include/JParticle/JPABaseShape/JPARegistPrmAlphaEnv__FP18JPAEmitterWorkDataP15JPABaseParticle.s"
}
#pragma pop

extern "C" {
/* 80277024-80277138 0114 .text      JPARegistAlphaEnv__FP18JPAEmitterWorkDataP15JPABaseParticle  Function */
}

#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void JPARegistAlphaEnv(JPAEmitterWorkData*, JPABaseParticle*) {
	nofralloc
#include "_include/JParticle/JPABaseShape/JPARegistAlphaEnv__FP18JPAEmitterWorkDataP15JPABaseParticle.s"
}
#pragma pop

extern "C" {
/* 80277138-802771BC 0084 .text      JPARegistEnv__FP18JPAEmitterWorkDataP15JPABaseParticle       Function */
}

#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void JPARegistEnv(JPAEmitterWorkData*, JPABaseParticle*) {
	nofralloc
#include "_include/JParticle/JPABaseShape/JPARegistEnv__FP18JPAEmitterWorkDataP15JPABaseParticle.s"
}
#pragma pop

extern "C" {
/* 802771BC-802771E8 002C .text      JPACalcClrIdxNormal__FP18JPAEmitterWorkData                  Function */
}

#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void JPACalcClrIdxNormal(JPAEmitterWorkData*) {
	nofralloc
#include "_include/JParticle/JPABaseShape/JPACalcClrIdxNormal__FP18JPAEmitterWorkData.s"
}
#pragma pop

extern "C" {
/* 802771E8-80277210 0028 .text      JPACalcClrIdxNormal__FP18JPAEmitterWorkDataP15JPABaseParticle Function */
}

#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void JPACalcClrIdxNormal(JPAEmitterWorkData*, JPABaseParticle*) {
	nofralloc
#include "_include/JParticle/JPABaseShape/JPACalcClrIdxNormal__FP18JPAEmitterWorkDataP15JPABaseParticle.s"
}
#pragma pop

extern "C" {
/* 80277210-80277240 0030 .text      JPACalcClrIdxRepeat__FP18JPAEmitterWorkData                  Function */
}

#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void JPACalcClrIdxRepeat(JPAEmitterWorkData*) {
	nofralloc
#include "_include/JParticle/JPABaseShape/JPACalcClrIdxRepeat__FP18JPAEmitterWorkData.s"
}
#pragma pop

extern "C" {
/* 80277240-8027727C 003C .text      JPACalcClrIdxRepeat__FP18JPAEmitterWorkDataP15JPABaseParticle Function */
}

#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void JPACalcClrIdxRepeat(JPAEmitterWorkData*, JPABaseParticle*) {
	nofralloc
#include "_include/JParticle/JPABaseShape/JPACalcClrIdxRepeat__FP18JPAEmitterWorkDataP15JPABaseParticle.s"
}
#pragma pop

extern "C" {
/* 8027727C-802772BC 0040 .text      JPACalcClrIdxReverse__FP18JPAEmitterWorkData                 Function */
}

#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void JPACalcClrIdxReverse(JPAEmitterWorkData*) {
	nofralloc
#include "_include/JParticle/JPABaseShape/JPACalcClrIdxReverse__FP18JPAEmitterWorkData.s"
}
#pragma pop

extern "C" {
/* 802772BC-80277308 004C .text      JPACalcClrIdxReverse__FP18JPAEmitterWorkDataP15JPABaseParticle Function */
}

#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void JPACalcClrIdxReverse(JPAEmitterWorkData*, JPABaseParticle*) {
	nofralloc
#include "_include/JParticle/JPABaseShape/JPACalcClrIdxReverse__FP18JPAEmitterWorkDataP15JPABaseParticle.s"
}
#pragma pop

extern "C" {
/* 80277308-80277314 000C .text      JPACalcClrIdxMerge__FP18JPAEmitterWorkData                   Function */
}

#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void JPACalcClrIdxMerge(JPAEmitterWorkData*) {
	nofralloc
#include "_include/JParticle/JPABaseShape/JPACalcClrIdxMerge__FP18JPAEmitterWorkData.s"
}
#pragma pop

extern "C" {
/* 80277314-80277384 0070 .text      JPACalcClrIdxMerge__FP18JPAEmitterWorkDataP15JPABaseParticle Function */
}

#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void JPACalcClrIdxMerge(JPAEmitterWorkData*, JPABaseParticle*) {
	nofralloc
#include "_include/JParticle/JPABaseShape/JPACalcClrIdxMerge__FP18JPAEmitterWorkDataP15JPABaseParticle.s"
}
#pragma pop

extern "C" {
/* 80277384-80277390 000C .text      JPACalcClrIdxRandom__FP18JPAEmitterWorkData                  Function */
}

#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void JPACalcClrIdxRandom(JPAEmitterWorkData*) {
	nofralloc
#include "_include/JParticle/JPABaseShape/JPACalcClrIdxRandom__FP18JPAEmitterWorkData.s"
}
#pragma pop

extern "C" {
/* 80277390-802773C4 0034 .text      JPACalcClrIdxRandom__FP18JPAEmitterWorkDataP15JPABaseParticle Function */
}

#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void JPACalcClrIdxRandom(JPAEmitterWorkData*, JPABaseParticle*) {
	nofralloc
#include "_include/JParticle/JPABaseShape/JPACalcClrIdxRandom__FP18JPAEmitterWorkDataP15JPABaseParticle.s"
}
#pragma pop

extern "C" {
/* 802773C4-80277404 0040 .text      JPACalcPrm__FP18JPAEmitterWorkData                           Function */
}

#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void JPACalcPrm(JPAEmitterWorkData*) {
	nofralloc
#include "_include/JParticle/JPABaseShape/JPACalcPrm__FP18JPAEmitterWorkData.s"
}
#pragma pop

extern "C" {
/* 80277404-80277440 003C .text      JPACalcPrm__FP18JPAEmitterWorkDataP15JPABaseParticle         Function */
}

#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void JPACalcPrm(JPAEmitterWorkData*, JPABaseParticle*) {
	nofralloc
#include "_include/JParticle/JPABaseShape/JPACalcPrm__FP18JPAEmitterWorkDataP15JPABaseParticle.s"
}
#pragma pop

extern "C" {
/* 80277440-80277480 0040 .text      JPACalcEnv__FP18JPAEmitterWorkData                           Function */
}

#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void JPACalcEnv(JPAEmitterWorkData*) {
	nofralloc
#include "_include/JParticle/JPABaseShape/JPACalcEnv__FP18JPAEmitterWorkData.s"
}
#pragma pop

extern "C" {
/* 80277480-802774BC 003C .text      JPACalcEnv__FP18JPAEmitterWorkDataP15JPABaseParticle         Function */
}

#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void JPACalcEnv(JPAEmitterWorkData*, JPABaseParticle*) {
	nofralloc
#include "_include/JParticle/JPABaseShape/JPACalcEnv__FP18JPAEmitterWorkDataP15JPABaseParticle.s"
}
#pragma pop

extern "C" {
/* 802774BC-80277504 0048 .text      JPACalcColorCopy__FP18JPAEmitterWorkDataP15JPABaseParticle   Function */
}

#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void JPACalcColorCopy(JPAEmitterWorkData*, JPABaseParticle*) {
	nofralloc
#include "_include/JParticle/JPABaseShape/JPACalcColorCopy__FP18JPAEmitterWorkDataP15JPABaseParticle.s"
}
#pragma pop

extern "C" {
/* 80277504-8027753C 0038 .text      JPAGenTexCrdMtxIdt__FP18JPAEmitterWorkData                   Function */
}

#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void JPAGenTexCrdMtxIdt(JPAEmitterWorkData*) {
	nofralloc
#include "_include/JParticle/JPABaseShape/JPAGenTexCrdMtxIdt__FP18JPAEmitterWorkData.s"
}
#pragma pop

extern "C" {
/* 8027753C-80277574 0038 .text      JPAGenTexCrdMtxAnm__FP18JPAEmitterWorkData                   Function */
}

#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void JPAGenTexCrdMtxAnm(JPAEmitterWorkData*) {
	nofralloc
#include "_include/JParticle/JPABaseShape/JPAGenTexCrdMtxAnm__FP18JPAEmitterWorkData.s"
}
#pragma pop

extern "C" {
/* 80277574-802775AC 0038 .text      JPAGenTexCrdMtxPrj__FP18JPAEmitterWorkData                   Function */
}

#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void JPAGenTexCrdMtxPrj(JPAEmitterWorkData*) {
	nofralloc
#include "_include/JParticle/JPABaseShape/JPAGenTexCrdMtxPrj__FP18JPAEmitterWorkData.s"
}
#pragma pop

extern "C" {
/* 802775AC-80277758 01AC .text      JPAGenCalcTexCrdMtxAnm__FP18JPAEmitterWorkData               Function */
}

#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void JPAGenCalcTexCrdMtxAnm(JPAEmitterWorkData*) {
	nofralloc
#include "_include/JParticle/JPABaseShape/JPAGenCalcTexCrdMtxAnm__FP18JPAEmitterWorkData.s"
}
#pragma pop

extern "C" {
/* 80277758-802778EC 0194 .text      JPALoadCalcTexCrdMtxAnm__FP18JPAEmitterWorkDataP15JPABaseParticle Function */
}

#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void JPALoadCalcTexCrdMtxAnm(JPAEmitterWorkData*, JPABaseParticle*) {
	nofralloc
#include "_include/JParticle/JPABaseShape/JPALoadCalcTexCrdMtxAnm__FP18JPAEmitterWorkDataP15JPABaseParticle.s"
}
#pragma pop

extern "C" {
/* 802778EC-80277940 0054 .text      JPALoadTex__FP18JPAEmitterWorkData                           Function */
}

#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void JPALoadTex(JPAEmitterWorkData*) {
	nofralloc
#include "_include/JParticle/JPABaseShape/JPALoadTex__FP18JPAEmitterWorkData.s"
}
#pragma pop

extern "C" {
/* 80277940-80277990 0050 .text      JPALoadTexAnm__FP18JPAEmitterWorkData                        Function */
}

#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void JPALoadTexAnm(JPAEmitterWorkData*) {
	nofralloc
#include "_include/JParticle/JPABaseShape/JPALoadTexAnm__FP18JPAEmitterWorkData.s"
}
#pragma pop

extern "C" {
/* 80277990-802779DC 004C .text      JPALoadTexAnm__FP18JPAEmitterWorkDataP15JPABaseParticle      Function */
}

#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void JPALoadTexAnm(JPAEmitterWorkData*, JPABaseParticle*) {
	nofralloc
#include "_include/JParticle/JPABaseShape/JPALoadTexAnm__FP18JPAEmitterWorkDataP15JPABaseParticle.s"
}
#pragma pop

extern "C" {
/* 802779DC-80277A18 003C .text      JPACalcTexIdxNormal__FP18JPAEmitterWorkData                  Function */
}

#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void JPACalcTexIdxNormal(JPAEmitterWorkData*) {
	nofralloc
#include "_include/JParticle/JPABaseShape/JPACalcTexIdxNormal__FP18JPAEmitterWorkData.s"
}
#pragma pop

extern "C" {
/* 80277A18-80277A50 0038 .text      JPACalcTexIdxNormal__FP18JPAEmitterWorkDataP15JPABaseParticle Function */
}

#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void JPACalcTexIdxNormal(JPAEmitterWorkData*, JPABaseParticle*) {
	nofralloc
#include "_include/JParticle/JPABaseShape/JPACalcTexIdxNormal__FP18JPAEmitterWorkDataP15JPABaseParticle.s"
}
#pragma pop

extern "C" {
/* 80277A50-80277A88 0038 .text      JPACalcTexIdxRepeat__FP18JPAEmitterWorkData                  Function */
}

#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void JPACalcTexIdxRepeat(JPAEmitterWorkData*) {
	nofralloc
#include "_include/JParticle/JPABaseShape/JPACalcTexIdxRepeat__FP18JPAEmitterWorkData.s"
}
#pragma pop

extern "C" {
/* 80277A88-80277ACC 0044 .text      JPACalcTexIdxRepeat__FP18JPAEmitterWorkDataP15JPABaseParticle Function */
}

#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void JPACalcTexIdxRepeat(JPAEmitterWorkData*, JPABaseParticle*) {
	nofralloc
#include "_include/JParticle/JPABaseShape/JPACalcTexIdxRepeat__FP18JPAEmitterWorkDataP15JPABaseParticle.s"
}
#pragma pop

extern "C" {
/* 80277ACC-80277B1C 0050 .text      JPACalcTexIdxReverse__FP18JPAEmitterWorkData                 Function */
}

#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void JPACalcTexIdxReverse(JPAEmitterWorkData*) {
	nofralloc
#include "_include/JParticle/JPABaseShape/JPACalcTexIdxReverse__FP18JPAEmitterWorkData.s"
}
#pragma pop

extern "C" {
/* 80277B1C-80277B78 005C .text      JPACalcTexIdxReverse__FP18JPAEmitterWorkDataP15JPABaseParticle Function */
}

#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void JPACalcTexIdxReverse(JPAEmitterWorkData*, JPABaseParticle*) {
	nofralloc
#include "_include/JParticle/JPABaseShape/JPACalcTexIdxReverse__FP18JPAEmitterWorkDataP15JPABaseParticle.s"
}
#pragma pop

extern "C" {
/* 80277B78-80277B94 001C .text      JPACalcTexIdxMerge__FP18JPAEmitterWorkData                   Function */
}

#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void JPACalcTexIdxMerge(JPAEmitterWorkData*) {
	nofralloc
#include "_include/JParticle/JPABaseShape/JPACalcTexIdxMerge__FP18JPAEmitterWorkData.s"
}
#pragma pop

extern "C" {
/* 80277B94-80277C0C 0078 .text      JPACalcTexIdxMerge__FP18JPAEmitterWorkDataP15JPABaseParticle Function */
}

#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void JPACalcTexIdxMerge(JPAEmitterWorkData*, JPABaseParticle*) {
	nofralloc
#include "_include/JParticle/JPABaseShape/JPACalcTexIdxMerge__FP18JPAEmitterWorkDataP15JPABaseParticle.s"
}
#pragma pop

extern "C" {
/* 80277C0C-80277C28 001C .text      JPACalcTexIdxRandom__FP18JPAEmitterWorkData                  Function */
}

#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void JPACalcTexIdxRandom(JPAEmitterWorkData*) {
	nofralloc
#include "_include/JParticle/JPABaseShape/JPACalcTexIdxRandom__FP18JPAEmitterWorkData.s"
}
#pragma pop

extern "C" {
/* 80277C28-80277C64 003C .text      JPACalcTexIdxRandom__FP18JPAEmitterWorkDataP15JPABaseParticle Function */
}

#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void JPACalcTexIdxRandom(JPAEmitterWorkData*, JPABaseParticle*) {
	nofralloc
#include "_include/JParticle/JPABaseShape/JPACalcTexIdxRandom__FP18JPAEmitterWorkDataP15JPABaseParticle.s"
}
#pragma pop

extern "C" {
/* 80277C64-80277C8C 0028 .text      JPALoadPosMtxCam__FP18JPAEmitterWorkData                     Function */
}

#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void JPALoadPosMtxCam(JPAEmitterWorkData*) {
	nofralloc
#include "_include/JParticle/JPABaseShape/JPALoadPosMtxCam__FP18JPAEmitterWorkData.s"
}
#pragma pop

extern "C" {
/* 80277C8C-80277C90 0004 .text      noLoadPrj__FPC18JPAEmitterWorkDataPA4_Cf                     ReturnFunction */
}

void noLoadPrj__FPC18JPAEmitterWorkDataPA4_Cf() {
	return;
}

extern "C" {
/* 80277C90-80277CC8 0038 .text      loadPrj__FPC18JPAEmitterWorkDataPA4_Cf                       Function */
}

#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void loadPrj(const JPAEmitterWorkData*, const f32 (*)[4]) {
	nofralloc
#include "_include/JParticle/JPABaseShape/loadPrj__FPC18JPAEmitterWorkDataPA4_Cf.s"
}
#pragma pop

extern "C" {
/* 80277CC8-80277E88 01C0 .text      loadPrjAnm__FPC18JPAEmitterWorkDataPA4_Cf                    Function */
}

#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void loadPrjAnm(const JPAEmitterWorkData*, const f32 (*)[4]) {
	nofralloc
#include "_include/JParticle/JPABaseShape/loadPrjAnm__FPC18JPAEmitterWorkDataPA4_Cf.s"
}
#pragma pop

extern "C" {
/* 80277E88-80277F70 00E8 .text      JPADrawBillboard__FP18JPAEmitterWorkDataP15JPABaseParticle   Function */
}

#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void JPADrawBillboard(JPAEmitterWorkData*, JPABaseParticle*) {
	nofralloc
#include "_include/JParticle/JPABaseShape/JPADrawBillboard__FP18JPAEmitterWorkDataP15JPABaseParticle.s"
}
#pragma pop

extern "C" {
/* 80277F70-80278088 0118 .text      JPADrawRotBillboard__FP18JPAEmitterWorkDataP15JPABaseParticle Function */
}

#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void JPADrawRotBillboard(JPAEmitterWorkData*, JPABaseParticle*) {
	nofralloc
#include "_include/JParticle/JPABaseShape/JPADrawRotBillboard__FP18JPAEmitterWorkDataP15JPABaseParticle.s"
}
#pragma pop

extern "C" {
/* 80278088-80278184 00FC .text      JPADrawYBillboard__FP18JPAEmitterWorkDataP15JPABaseParticle  Function */
}

#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void JPADrawYBillboard(JPAEmitterWorkData*, JPABaseParticle*) {
	nofralloc
#include "_include/JParticle/JPABaseShape/JPADrawYBillboard__FP18JPAEmitterWorkDataP15JPABaseParticle.s"
}
#pragma pop

extern "C" {
/* 80278184-802782B4 0130 .text      JPADrawRotYBillboard__FP18JPAEmitterWorkDataP15JPABaseParticle Function */
}

#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void JPADrawRotYBillboard(JPAEmitterWorkData*, JPABaseParticle*) {
	nofralloc
#include "_include/JParticle/JPABaseShape/JPADrawRotYBillboard__FP18JPAEmitterWorkDataP15JPABaseParticle.s"
}
#pragma pop

extern "C" {
/* 802782B4-802782D0 001C .text      dirTypeVel__FPC18JPAEmitterWorkDataPC15JPABaseParticlePQ29JGeometry8TVec3<f> Function */
// dirTypeVel(const JPAEmitterWorkData*, const JPABaseParticle*, JGeometry::TVec3<f>)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void func_802782B4() {
	nofralloc
#include "_include/JParticle/JPABaseShape/func_802782B4.s"
}
#pragma pop

/* 802782D0-802782EC 001C .text      dirTypePos__FPC18JPAEmitterWorkDataPC15JPABaseParticlePQ29JGeometry8TVec3<f> Function */
// dirTypePos(const JPAEmitterWorkData*, const JPABaseParticle*, JGeometry::TVec3<f>)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void func_802782D0() {
	nofralloc
#include "_include/JParticle/JPABaseShape/func_802782D0.s"
}
#pragma pop

/* 802782EC-80278320 0034 .text      dirTypePosInv__FPC18JPAEmitterWorkDataPC15JPABaseParticlePQ29JGeometry8TVec3<f> Function */
// dirTypePosInv(const JPAEmitterWorkData*, const JPABaseParticle*, JGeometry::TVec3<f>)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void func_802782EC() {
	nofralloc
#include "_include/JParticle/JPABaseShape/func_802782EC.s"
}
#pragma pop

/* 80278320-8027833C 001C .text      dirTypeEmtrDir__FPC18JPAEmitterWorkDataPC15JPABaseParticlePQ29JGeometry8TVec3<f> Function */
// dirTypeEmtrDir(const JPAEmitterWorkData*, const JPABaseParticle*, JGeometry::TVec3<f>)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void func_80278320() {
	nofralloc
#include "_include/JParticle/JPABaseShape/func_80278320.s"
}
#pragma pop

/* 8027833C-802783D4 0098 .text      dirTypePrevPtcl__FPC18JPAEmitterWorkDataPC15JPABaseParticlePQ29JGeometry8TVec3<f> Function */
// dirTypePrevPtcl(const JPAEmitterWorkData*, const JPABaseParticle*, JGeometry::TVec3<f>)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void func_8027833C() {
	nofralloc
#include "_include/JParticle/JPABaseShape/func_8027833C.s"
}
#pragma pop

/* 802783D4-80278414 0040 .text      rotTypeY__FffRA3_A4_f                                        Function */
}

#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void rotTypeY(f32, f32, f32 (&)[3][4]) {
	nofralloc
#include "_include/JParticle/JPABaseShape/rotTypeY__FffRA3_A4_f.s"
}
#pragma pop

extern "C" {
/* 80278414-80278454 0040 .text      rotTypeX__FffRA3_A4_f                                        Function */
}

#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void rotTypeX(f32, f32, f32 (&)[3][4]) {
	nofralloc
#include "_include/JParticle/JPABaseShape/rotTypeX__FffRA3_A4_f.s"
}
#pragma pop

extern "C" {
/* 80278454-80278494 0040 .text      rotTypeZ__FffRA3_A4_f                                        Function */
}

#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void rotTypeZ(f32, f32, f32 (&)[3][4]) {
	nofralloc
#include "_include/JParticle/JPABaseShape/rotTypeZ__FffRA3_A4_f.s"
}
#pragma pop

extern "C" {
/* 80278494-802784F0 005C .text      rotTypeXYZ__FffRA3_A4_f                                      Function */
}

#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void rotTypeXYZ(f32, f32, f32 (&)[3][4]) {
	nofralloc
#include "_include/JParticle/JPABaseShape/rotTypeXYZ__FffRA3_A4_f.s"
}
#pragma pop

extern "C" {
/* 802784F0-8027853C 004C .text      basePlaneTypeXY__FPA4_fff                                    Function */
}

#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void basePlaneTypeXY(f32 (*)[4], f32, f32) {
	nofralloc
#include "_include/JParticle/JPABaseShape/basePlaneTypeXY__FPA4_fff.s"
}
#pragma pop

extern "C" {
/* 8027853C-80278588 004C .text      basePlaneTypeXZ__FPA4_fff                                    Function */
}

#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void basePlaneTypeXZ(f32 (*)[4], f32, f32) {
	nofralloc
#include "_include/JParticle/JPABaseShape/basePlaneTypeXZ__FPA4_fff.s"
}
#pragma pop

extern "C" {
/* 80278588-802785F8 0070 .text      basePlaneTypeX__FPA4_fff                                     Function */
}

#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void basePlaneTypeX(f32 (*)[4], f32, f32) {
	nofralloc
#include "_include/JParticle/JPABaseShape/basePlaneTypeX__FPA4_fff.s"
}
#pragma pop

extern "C" {
/* 802785F8-80278994 039C .text      JPADrawDirection__FP18JPAEmitterWorkDataP15JPABaseParticle   Function */
}

#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void JPADrawDirection(JPAEmitterWorkData*, JPABaseParticle*) {
	nofralloc
#include "_include/JParticle/JPABaseShape/JPADrawDirection__FP18JPAEmitterWorkDataP15JPABaseParticle.s"
}
#pragma pop

extern "C" {
/* 80278994-80278DA8 0414 .text      JPADrawRotDirection__FP18JPAEmitterWorkDataP15JPABaseParticle Function */
}

#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void JPADrawRotDirection(JPAEmitterWorkData*, JPABaseParticle*) {
	nofralloc
#include "_include/JParticle/JPABaseShape/JPADrawRotDirection__FP18JPAEmitterWorkDataP15JPABaseParticle.s"
}
#pragma pop

extern "C" {
/* 80278DA8-80278FC8 0220 .text      JPADrawDBillboard__FP18JPAEmitterWorkDataP15JPABaseParticle  Function */
}

#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void JPADrawDBillboard(JPAEmitterWorkData*, JPABaseParticle*) {
	nofralloc
#include "_include/JParticle/JPABaseShape/JPADrawDBillboard__FP18JPAEmitterWorkDataP15JPABaseParticle.s"
}
#pragma pop

extern "C" {
/* 80278FC8-80279110 0148 .text      JPADrawRotation__FP18JPAEmitterWorkDataP15JPABaseParticle    Function */
}

#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void JPADrawRotation(JPAEmitterWorkData*, JPABaseParticle*) {
	nofralloc
#include "_include/JParticle/JPABaseShape/JPADrawRotation__FP18JPAEmitterWorkDataP15JPABaseParticle.s"
}
#pragma pop

extern "C" {
/* 80279110-802791B0 00A0 .text      JPADrawPoint__FP18JPAEmitterWorkDataP15JPABaseParticle       Function */
}

#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void JPADrawPoint(JPAEmitterWorkData*, JPABaseParticle*) {
	nofralloc
#include "_include/JParticle/JPABaseShape/JPADrawPoint__FP18JPAEmitterWorkDataP15JPABaseParticle.s"
}
#pragma pop

extern "C" {
/* 802791B0-80279364 01B4 .text      JPADrawLine__FP18JPAEmitterWorkDataP15JPABaseParticle        Function */
}

#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void JPADrawLine(JPAEmitterWorkData*, JPABaseParticle*) {
	nofralloc
#include "_include/JParticle/JPABaseShape/JPADrawLine__FP18JPAEmitterWorkDataP15JPABaseParticle.s"
}
#pragma pop

extern "C" {
/* 80279364-8027936C 0008 .text      getNext__FP26JPANode<15JPABaseParticle>                      FirstParamFunction */
// getNext(JPANode<15JPABaseParticle>*)
u32 func_80279364(u8* param0) {
	return *(u32*)&param0[4]; /* param0->field_0x4 */
}

/* 8027936C-80279374 0008 .text      getPrev__FP26JPANode<15JPABaseParticle>                      FirstParamFunction */
// getPrev(JPANode<15JPABaseParticle>*)
u32 func_8027936C(u8* param0) {
	return *(u32*)&param0[0]; /* param0->field_0x0 */
}

/* 80279374-8027996C 05F8 .text      JPADrawStripe__FP18JPAEmitterWorkData                        Function */
}

#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void JPADrawStripe(JPAEmitterWorkData*) {
	nofralloc
#include "_include/JParticle/JPABaseShape/JPADrawStripe__FP18JPAEmitterWorkData.s"
}
#pragma pop

extern "C" {
/* 8027996C-8027A3D8 0A6C .text      JPADrawStripeX__FP18JPAEmitterWorkData                       Function */
}

#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void JPADrawStripeX(JPAEmitterWorkData*) {
	nofralloc
#include "_include/JParticle/JPABaseShape/JPADrawStripeX__FP18JPAEmitterWorkData.s"
}
#pragma pop

extern "C" {
/* 8027A3D8-8027A414 003C .text      JPADrawEmitterCallBackB__FP18JPAEmitterWorkData              Function */
}

#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void JPADrawEmitterCallBackB(JPAEmitterWorkData*) {
	nofralloc
#include "_include/JParticle/JPABaseShape/JPADrawEmitterCallBackB__FP18JPAEmitterWorkData.s"
}
#pragma pop

extern "C" {
/* 8027A414-8027A454 0040 .text      JPADrawParticleCallBack__FP18JPAEmitterWorkDataP15JPABaseParticle Function */
}

#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void JPADrawParticleCallBack(JPAEmitterWorkData*, JPABaseParticle*) {
	nofralloc
#include "_include/JParticle/JPABaseShape/JPADrawParticleCallBack__FP18JPAEmitterWorkDataP15JPABaseParticle.s"
}
#pragma pop

extern "C" {
/* 8027A454-8027A6DC 0288 .text      makeColorTable__FPP8_GXColorPC16JPAClrAnmKeyDataUcsP7JKRHeap Function */
}

#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void makeColorTable(_GXColor**, const JPAClrAnmKeyData*, u8, short, JKRHeap*) {
	nofralloc
#include "_include/JParticle/JPABaseShape/makeColorTable__FPP8_GXColorPC16JPAClrAnmKeyDataUcsP7JKRHeap.s"
}
#pragma pop

extern "C" {
/* 8027A6DC-8027A7E8 010C .text      __ct__12JPABaseShapeFPCUcP7JKRHeap                           Function */
// JPABaseShape::JPABaseShape(const u8*, JKRHeap*)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void __ct__12JPABaseShapeFPCUcP7JKRHeap() {
	nofralloc
#include "_include/JParticle/JPABaseShape/__ct__12JPABaseShapeFPCUcP7JKRHeap.s"
}
#pragma pop

/* 8027A7E8-8027A918 0130 .text      setGX__12JPABaseShapeCFP18JPAEmitterWorkData                 Function */
// JPABaseShape::setGX(JPAEmitterWorkData*) const
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void setGX__12JPABaseShapeCFP18JPAEmitterWorkData() {
	nofralloc
#include "_include/JParticle/JPABaseShape/setGX__12JPABaseShapeCFP18JPAEmitterWorkData.s"
}
#pragma pop

}

