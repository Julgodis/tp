// 
// Generated By: dol2asm
// 

#include "dolphin/types.h"

// 
// Additional Symbols:
// 

struct Vec;

extern void JPAGetYZRotateMtx(short, short, f32 (*)[4]); /* JPAGetYZRotateMtx__FssPA4_f */
extern void operator delete(void*); /* __dl__FPv */
extern void JMAVECScaleAdd(const Vec*, const Vec*, Vec*, f32); /* JMAVECScaleAdd__FPC3VecPC3VecP3Vecf */

extern "C" {
/* Function             */
extern void calc_p__11JPAResourceFP18JPAEmitterWorkDataP15JPABaseParticle();
/* Function             */
extern void calc_c__11JPAResourceFP18JPAEmitterWorkDataP15JPABaseParticle();
/* Function             */
extern void calcField__11JPAResourceFP18JPAEmitterWorkDataP15JPABaseParticle();
/* Function             */
extern void createChild__14JPABaseEmitterFP15JPABaseParticle();
/* Function             */
extern void __dt__19JPAParticleCallBackFv();
/* Function             */
extern void init_p__15JPABaseParticleFP18JPAEmitterWorkData();
/* Function             */
extern void init_c__15JPABaseParticleFP18JPAEmitterWorkDataP15JPABaseParticle();
/* Function             */
extern void calc_p__15JPABaseParticleFP18JPAEmitterWorkData();
/* Function             */
extern void calc_c__15JPABaseParticleFP18JPAEmitterWorkData();
/* Function             */
extern void canCreateChild__15JPABaseParticleFP18JPAEmitterWorkData();
/* Function             */
extern void getWidth__15JPABaseParticleCFPC14JPABaseEmitter();
/* Function             */
extern void getHeight__15JPABaseParticleCFPC14JPABaseEmitter();
/* Function             */
extern void JPAGetYZRotateMtx__FssPA4_f();
/* Function             */
extern void __dl__FPv();
/* Function             */
extern void JMAVECScaleAdd__FPC3VecPC3VecP3Vecf();
/* Function             */
extern void PSMTXConcat();
/* Function             */
extern void PSMTXMultVecSR();
/* Function             */
extern void _savegpr_26();
/* Function             */
extern void _savegpr_29();
/* Function             */
extern void _restgpr_26();
/* Function             */
extern void _restgpr_29();
/* VTableData           */
SECTION_DATA extern void* __vt__19JPAParticleCallBack[5];
/* InitializedData      */
SECTION_SDATA extern u8 __float_epsilon[4];
/* Float32Data          */
SECTION_SDATA2 extern f32 LIT_2565;
/* InitializedData      */
SECTION_SDATA2 extern u8 LIT_2566[4];
/* Float32Data          */
SECTION_SDATA2 extern f32 LIT_2567;
/* Float32Data          */
SECTION_SDATA2 extern f32 LIT_2568;
/* Float32Data          */
SECTION_SDATA2 extern f32 LIT_2569;
/* Float32Data          */
SECTION_SDATA2 extern f32 LIT_2570;
/* Float64Data          */
SECTION_SDATA2 extern f64 LIT_2572;
/* Float64Data          */
SECTION_SDATA2 extern f64 LIT_2574;
/* InitializedData      */
SECTION_SDATA2 extern u8 LIT_3010[8];
}


/* ###################################################################################### */
/*                                        .sdata2                                         */
/* ###################################################################################### */

extern "C" {
/* 80455388-8045538C 0004 .sdata2    @2565                                                        Float32Data */
// 0x3f800000
SECTION_SDATA2 f32 LIT_2565 = 1.000000f;
/* 8045538C-80455390 0004 .sdata2    @2566                                                        InitializedData */
SECTION_SDATA2 u8 LIT_2566[4] = {
	0x00, 0x00, 0x00, 0x00,
};
/* 80455390-80455394 0004 .sdata2    @2567                                                        Float32Data */
// 0x42000000
SECTION_SDATA2 f32 LIT_2567 = 32.000000f;
/* 80455394-80455398 0004 .sdata2    @2568                                                        Float32Data */
// 0x3f000000
SECTION_SDATA2 f32 LIT_2568 = 0.500000f;
/* 80455398-8045539C 0004 .sdata2    @2569                                                        Float32Data */
// 0x40400000
SECTION_SDATA2 f32 LIT_2569 = 3.000000f;
/* 8045539C-804553A0 0004 .sdata2    @2570                                                        Float32Data */
// 0x47000000
SECTION_SDATA2 f32 LIT_2570 = 32768.000000f;
/* 804553A0-804553A8 0008 .sdata2    @2572                                                        Float64Data */
// 0x4330000080000000 | compiler-generated value used in cast: (float)s32
SECTION_SDATA2 f64 LIT_2572 = 4503601774854144.000000;
/* 804553A8-804553B0 0008 .sdata2    @2574                                                        Float64Data */
// 0x4330000000000000 | compiler-generated value used in cast: (float)u32
SECTION_SDATA2 f64 LIT_2574 = 4503599627370496.000000;
/* 804553B0-804553B8 0004 .sdata2    @3010                                                        InitializedData */
SECTION_SDATA2 u8 LIT_3010[8] = {
	0x40, 0x00, 0x00, 0x00,
	/* padding */
	0x00, 0x00, 0x00, 0x00,
};
}


/* ###################################################################################### */
/*                                         .text                                          */
/* ###################################################################################### */

extern "C" {
/* 8027EFA4-8027EFEC 0048 .text      __dt__19JPAParticleCallBackFv                                Function */
// JPAParticleCallBack::~JPAParticleCallBack(void)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void __dt__19JPAParticleCallBackFv() {
	nofralloc
#include "_include/JParticle/JPAParticle/__dt__19JPAParticleCallBackFv.s"
}
#pragma pop

/* 8027EFEC-8027F8C8 08DC .text      init_p__15JPABaseParticleFP18JPAEmitterWorkData              Function */
// JPABaseParticle::init_p(JPAEmitterWorkData*)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void init_p__15JPABaseParticleFP18JPAEmitterWorkData() {
	nofralloc
#include "_include/JParticle/JPAParticle/init_p__15JPABaseParticleFP18JPAEmitterWorkData.s"
}
#pragma pop

/* 8027F8C8-8027FFD0 0708 .text      init_c__15JPABaseParticleFP18JPAEmitterWorkDataP15JPABaseParticle Function */
// JPABaseParticle::init_c(JPAEmitterWorkData*, JPABaseParticle*)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void init_c__15JPABaseParticleFP18JPAEmitterWorkDataP15JPABaseParticle() {
	nofralloc
#include "_include/JParticle/JPAParticle/init_c__15JPABaseParticleFP18JPAEmitterWorkDataP15JPABaseParticle.s"
}
#pragma pop

/* 8027FFD0-80280260 0290 .text      calc_p__15JPABaseParticleFP18JPAEmitterWorkData              Function */
// JPABaseParticle::calc_p(JPAEmitterWorkData*)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void calc_p__15JPABaseParticleFP18JPAEmitterWorkData() {
	nofralloc
#include "_include/JParticle/JPAParticle/calc_p__15JPABaseParticleFP18JPAEmitterWorkData.s"
}
#pragma pop

/* 80280260-802804C8 0268 .text      calc_c__15JPABaseParticleFP18JPAEmitterWorkData              Function */
// JPABaseParticle::calc_c(JPAEmitterWorkData*)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void calc_c__15JPABaseParticleFP18JPAEmitterWorkData() {
	nofralloc
#include "_include/JParticle/JPAParticle/calc_c__15JPABaseParticleFP18JPAEmitterWorkData.s"
}
#pragma pop

/* 802804C8-80280548 0080 .text      canCreateChild__15JPABaseParticleFP18JPAEmitterWorkData      Function */
// JPABaseParticle::canCreateChild(JPAEmitterWorkData*)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void canCreateChild__15JPABaseParticleFP18JPAEmitterWorkData() {
	nofralloc
#include "_include/JParticle/JPAParticle/canCreateChild__15JPABaseParticleFP18JPAEmitterWorkData.s"
}
#pragma pop

/* 80280548-80280568 0020 .text      getWidth__15JPABaseParticleCFPC14JPABaseEmitter              Function */
// JPABaseParticle::getWidth(const JPABaseEmitter*) const
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void getWidth__15JPABaseParticleCFPC14JPABaseEmitter() {
	nofralloc
#include "_include/JParticle/JPAParticle/getWidth__15JPABaseParticleCFPC14JPABaseEmitter.s"
}
#pragma pop

/* 80280568-80280588 0020 .text      getHeight__15JPABaseParticleCFPC14JPABaseEmitter             Function */
// JPABaseParticle::getHeight(const JPABaseEmitter*) const
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void getHeight__15JPABaseParticleCFPC14JPABaseEmitter() {
	nofralloc
#include "_include/JParticle/JPAParticle/getHeight__15JPABaseParticleCFPC14JPABaseEmitter.s"
}
#pragma pop

}

