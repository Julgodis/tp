// 
// Generated By: dol2asm
// 

#include "dolphin/types.h"

// 
// Additional Symbols:
// 

extern "C" {
extern void getResource__18JPAResourceManagerCFUs();
extern void __ct__17JPAResourceLoaderFPCUcP18JPAResourceManager();
extern void storeTIMG__10JUTTextureFPC7ResTIMGUc();
extern void _savegpr_26();
extern void _restgpr_26();
extern void strcmp();
}


/* ###################################################################################### */
/*                                         .text                                          */
/* ###################################################################################### */

extern "C" {
/* 80273E10 0058 .text      __ct__18JPAResourceManagerFPCvP7JKRHeap                      */
// JPAResourceManager::JPAResourceManager(const void*, JKRHeap*)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void __ct__18JPAResourceManagerFPCvP7JKRHeap() {
	nofralloc
#include "_include/JParticle/JPAResourceManager/__ct__18JPAResourceManagerFPCvP7JKRHeap.s"
}
#pragma pop

/* 80273E68 0040 .text      getResource__18JPAResourceManagerCFUs                        */
// JPAResourceManager::getResource(u16) const
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void getResource__18JPAResourceManagerCFUs() {
	nofralloc
#include "_include/JParticle/JPAResourceManager/getResource__18JPAResourceManagerCFUs.s"
}
#pragma pop

/* 80273EA8 0044 .text      checkUserIndexDuplication__18JPAResourceManagerCFUs          */
// JPAResourceManager::checkUserIndexDuplication(u16) const
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void checkUserIndexDuplication__18JPAResourceManagerCFUs() {
	nofralloc
#include "_include/JParticle/JPAResourceManager/checkUserIndexDuplication__18JPAResourceManagerCFUs.s"
}
#pragma pop

/* 80273EEC 00A0 .text      swapTexture__18JPAResourceManagerFPC7ResTIMGPCc              */
// JPAResourceManager::swapTexture(const ResTIMG*, const s8*)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void swapTexture__18JPAResourceManagerFPC7ResTIMGPCc() {
	nofralloc
#include "_include/JParticle/JPAResourceManager/swapTexture__18JPAResourceManagerFPC7ResTIMGPCc.s"
}
#pragma pop

/* 80273F8C 0020 .text      registRes__18JPAResourceManagerFP11JPAResource               */
// JPAResourceManager::registRes(JPAResource*)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void registRes__18JPAResourceManagerFP11JPAResource() {
	nofralloc
#include "_include/JParticle/JPAResourceManager/registRes__18JPAResourceManagerFP11JPAResource.s"
}
#pragma pop

/* 80273FAC 0020 .text      registTex__18JPAResourceManagerFP10JPATexture                */
// JPAResourceManager::registTex(JPATexture*)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void registTex__18JPAResourceManagerFP10JPATexture() {
	nofralloc
#include "_include/JParticle/JPAResourceManager/registTex__18JPAResourceManagerFP10JPATexture.s"
}
#pragma pop

/* 80273FCC 0044 .text      getResUserWork__18JPAResourceManagerCFUs                     */
// JPAResourceManager::getResUserWork(u16) const
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void getResUserWork__18JPAResourceManagerCFUs() {
	nofralloc
#include "_include/JParticle/JPAResourceManager/getResUserWork__18JPAResourceManagerCFUs.s"
}
#pragma pop

}

