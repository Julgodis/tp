// 
// Generated By: dol2asm
// 

#include "dolphin/types.h"

// 
// Additional Symbols:
// 

extern void operator delete(void*); /* __dl__FPv */

extern "C" {
extern void init_p__15JPABaseParticleFP18JPAEmitterWorkData();
extern void init_c__15JPABaseParticleFP18JPAEmitterWorkDataP15JPABaseParticle();
extern void __dl__FPv();
extern void load__10JUTTextureF11_GXTexMapID();
extern void PSMTXIdentity();
extern void PSMTXConcat();
extern void PSMTXScale();
extern void PSMTXMultVec();
SECTION_DATA extern const void* __vt__18JPAEmitterCallBack[7];
SECTION_SDATA extern u8 __float_epsilon[4];
SECTION_SDATA2 extern f32 JPAEmitter__LIT_2440;
SECTION_SDATA2 extern u8 JPAEmitter__LIT_2441[4];
SECTION_SDATA2 extern f32 LIT_2442;
SECTION_SDATA2 extern f32 LIT_2443;
SECTION_SDATA2 extern u8 LIT_2444[8];
}


/* ###################################################################################### */
/*                                        .sdata2                                         */
/* ###################################################################################### */

extern "C" {
/* 80455370 0004 .sdata2    @2440                                                        */
// 0x42000000
SECTION_SDATA2 f32 JPAEmitter__LIT_2440 = 32.000000f;
/* 80455374 0004 .sdata2    @2441                                                        */
SECTION_SDATA2 u8 JPAEmitter__LIT_2441[4] = {
	0x00, 0x00, 0x00, 0x00,
};
/* 80455378 0004 .sdata2    @2442                                                        */
// 0x3f000000
SECTION_SDATA2 f32 LIT_2442 = 0.500000f;
/* 8045537C 0004 .sdata2    @2443                                                        */
// 0x40400000
SECTION_SDATA2 f32 LIT_2443 = 3.000000f;
/* 80455380 0004 .sdata2    @2444                                                        */
SECTION_SDATA2 u8 LIT_2444[8] = {
	0x3F, 0x80, 0x00, 0x00,
	/* padding */
	0x00, 0x00, 0x00, 0x00,
};
}


/* ###################################################################################### */
/*                                         .text                                          */
/* ###################################################################################### */

extern "C" {
/* 8027E6A4 0048 .text      __dt__18JPAEmitterCallBackFv                                 */
// JPAEmitterCallBack::~JPAEmitterCallBack(void)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void __dt__18JPAEmitterCallBackFv() {
	nofralloc
#include "_include/JParticle/JPAEmitter/__dt__18JPAEmitterCallBackFv.s"
}
#pragma pop

/* 8027E6EC 0354 .text      init__14JPABaseEmitterFP17JPAEmitterManagerP11JPAResource    */
// JPABaseEmitter::init(JPAEmitterManager*, JPAResource*)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void init__14JPABaseEmitterFP17JPAEmitterManagerP11JPAResource() {
	nofralloc
#include "_include/JParticle/JPAEmitter/init__14JPABaseEmitterFP17JPAEmitterManagerP11JPAResource.s"
}
#pragma pop

/* 8027EA40 0120 .text      createParticle__14JPABaseEmitterFv                           */
// JPABaseEmitter::createParticle(void)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void createParticle__14JPABaseEmitterFv() {
	nofralloc
#include "_include/JParticle/JPAEmitter/createParticle__14JPABaseEmitterFv.s"
}
#pragma pop

/* 8027EB60 0100 .text      createChild__14JPABaseEmitterFP15JPABaseParticle             */
// JPABaseEmitter::createChild(JPABaseParticle*)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void createChild__14JPABaseEmitterFP15JPABaseParticle() {
	nofralloc
#include "_include/JParticle/JPAEmitter/createChild__14JPABaseEmitterFP15JPABaseParticle.s"
}
#pragma pop

/* 8027EC60 0174 .text      deleteAllParticle__14JPABaseEmitterFv                        */
// JPABaseEmitter::deleteAllParticle(void)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void deleteAllParticle__14JPABaseEmitterFv() {
	nofralloc
#include "_include/JParticle/JPAEmitter/deleteAllParticle__14JPABaseEmitterFv.s"
}
#pragma pop

/* 8027EDD4 0040 .text      processTillStartFrame__14JPABaseEmitterFv                    */
// JPABaseEmitter::processTillStartFrame(void)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void processTillStartFrame__14JPABaseEmitterFv() {
	nofralloc
#include "_include/JParticle/JPAEmitter/processTillStartFrame__14JPABaseEmitterFv.s"
}
#pragma pop

/* 8027EE14 009C .text      processTermination__14JPABaseEmitterFv                       */
// JPABaseEmitter::processTermination(void)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void processTermination__14JPABaseEmitterFv() {
	nofralloc
#include "_include/JParticle/JPAEmitter/processTermination__14JPABaseEmitterFv.s"
}
#pragma pop

/* 8027EEB0 0080 .text      calcEmitterGlobalPosition__14JPABaseEmitterCFPQ29JGeometry8TVec3<f> */
// JPABaseEmitter::calcEmitterGlobalPosition(JGeometry::TVec3<f>) const
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void func_8027EEB0() {
	nofralloc
#include "_include/JParticle/JPAEmitter/func_8027EEB0.s"
}
#pragma pop

/* 8027EF30 0010 .text      getCurrentCreateNumber__14JPABaseEmitterCFv                  */
// JPABaseEmitter::getCurrentCreateNumber(void) const
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void getCurrentCreateNumber__14JPABaseEmitterCFv() {
	nofralloc
#include "_include/JParticle/JPAEmitter/getCurrentCreateNumber__14JPABaseEmitterCFv.s"
}
#pragma pop

/* 8027EF40 0010 .text      getDrawCount__14JPABaseEmitterCFv                            */
// JPABaseEmitter::getDrawCount(void) const
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void getDrawCount__14JPABaseEmitterCFv() {
	nofralloc
#include "_include/JParticle/JPAEmitter/getDrawCount__14JPABaseEmitterCFv.s"
}
#pragma pop

/* 8027EF50 0054 .text      loadTexture__14JPABaseEmitterFUc11_GXTexMapID                */
// JPABaseEmitter::loadTexture(u8, _GXTexMapID)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void loadTexture__14JPABaseEmitterFUc11_GXTexMapID() {
	nofralloc
#include "_include/JParticle/JPAEmitter/loadTexture__14JPABaseEmitterFUc11_GXTexMapID.s"
}
#pragma pop

}

