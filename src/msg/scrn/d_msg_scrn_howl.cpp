// 
// Generated By: dol2asm
// Translation Unit: msg/scrn/d_msg_scrn_howl
// 

#include "dol2asm.h"
#include "dolphin/types.h"
#include "msg/scrn/d_msg_scrn_howl.h"

// 
// Types:
// 

struct dMsgScrnHowl_c {
	/* 8024096C */ dMsgScrnHowl_c();
	/* 80241784 */ ~dMsgScrnHowl_c();
	/* 80241A70 */ void exec();
	/* 80241C30 */ void drawSelf();
	/* 80241D58 */ void guide_on_init();
	/* 80241D5C */ void guide_on_proc();
	/* 80241DFC */ void guide_off_init();
	/* 80241E00 */ void guide_off_proc();
	/* 80241E7C */ void guide_stop_init();
	/* 80241E80 */ void guide_stop_proc();
	/* 80241F28 */ void guide_demo_play_init();
	/* 80241F34 */ void guide_demo_play_proc();
	/* 8024202C */ void guide_off_test_init();
	/* 80242030 */ void guide_off_test_proc();
	/* 80242034 */ void fukiScale(f32);
	/* 80242038 */ void fukiTrans(f32, f32);
	/* 8024205C */ void fukiAlpha(f32);
	/* 80242080 */ void isKeyCheck();
	/* 802420D4 */ void resetLine();
	/* 80242198 */ void drawWave();
	/* 802427A8 */ void drawGuide();
	/* 80242FE4 */ void drawGuide2();
	/* 802435BC */ void drawEffect();
	/* 80243838 */ void calcMain();
	/* 8024389C */ void calcWave();
	/* 80243A50 */ void calcGuide();
	/* 80243BE0 */ void moveLineV(bool);
	/* 80243DCC */ void moveBaseLength(bool);
	/* 80243EEC */ void getOnLineNum(int);
	/* 80243F58 */ void addCount(s16);
	/* 80243F7C */ void addCountGuide(s16);
	/* 80243F94 */ void getNowPlotPitch(f32);
	/* 80244108 */ void getPlotPitch(f32);
	/* 8024414C */ void calcPitchLevel();
	/* 802441FC */ void initGuideData();
	/* 80244304 */ void getGuideDataSize();
	/* 8024438C */ void getGuideDataType(int);
};

struct dMsgScrnBase_c {
	/* 80238C40 */ void setSelectRubyString(char*, char*, char*);
	/* 80238C44 */ void setSelectString(char*, char*, char*);
	/* 80238C48 */ bool selectAnimeMove(u8, u8, bool);
	/* 80238C50 */ void selectAnimeInit(u8, u8, f32, u8);
	/* 80238C54 */ void arwAnimeMove();
	/* 80238C58 */ void arwAnimeInit();
	/* 80238C5C */ void fukiPosCalc(u8);
	/* 80238C60 */ bool isSelect();
	/* 80238C68 */ bool selectAnimeEnd();
	/* 80238C70 */ void dotAnimeMove();
	/* 80238C74 */ void dotAnimeInit();
	/* 8023C0DC */ dMsgScrnBase_c();
	/* 8023C124 */ ~dMsgScrnBase_c();
	/* 8023C16C */ void init();
	/* 8023C234 */ void multiDraw();
	/* 8023C274 */ void draw();
	/* 8023C4F4 */ void fontAlpha(f32);
};

struct JMSMesgEntry_c {
};

struct dMeter2Info_c {
	/* 8021C544 */ void getStringKanji(u32, char*, JMSMesgEntry_c*);
};

struct JUtility {
	struct TColor {
	};

};

struct dMeter2Draw_c {
	/* 802140DC */ void drawPikari(f32, f32, f32*, f32, JUtility::TColor, JUtility::TColor, JUtility::TColor, JUtility::TColor, f32, u8);
};

struct Z2WolfHowlMgr {
	/* 802CACCC */ void getNowInputValue();
	/* 802CB320 */ void getCorrectLine(u8);
	/* 802CB370 */ void getCorrectLineNum();
	/* 802CB650 */ void getOnLineNum();
	/* 802CBA88 */ void startGuideMelody(bool);
};

struct ResTIMG {
};

struct JKRExpHeap {
};

struct JKRArchive {
};

struct JGeometry {
	template <typename A1>
	struct TBox2 { };
	/* TBox2<f32> */
	struct TBox2__template0 {
	};

};

struct J2DTextBox {
	/* 80300658 */ void getStringPtr() const;
	/* 8030074C */ void setString(s16, char const*, ...);
};

struct J2DScreen {
	/* 802F8498 */ J2DScreen();
	/* 802F8648 */ void setPriority(char const*, u32, JKRArchive*);
};

struct J2DPicture {
	/* 802FC708 */ J2DPicture(ResTIMG const*);
};

struct J2DPane {
	/* 802F7100 */ void getBounds();
};

struct J2DGrafContext {
	/* 802E90C0 */ void scissor(JGeometry::TBox2<f32> const&);
};

struct CPaneMgrAlpha {
	/* 802557D0 */ void setAlphaRate(f32);
	/* 80255828 */ void getAlphaRate();
};

struct CPaneMgr {
	/* 80253984 */ CPaneMgr(J2DScreen*, u64, u8, JKRExpHeap*);
	/* 80253930 */ CPaneMgr();
	/* 80253A18 */ ~CPaneMgr();
	/* 802542E8 */ void getGlobalPosX();
	/* 80254364 */ void getGlobalPosY();
	/* 802545B0 */ void paneTrans(f32, f32);
	/* 80254C90 */ void getGlobalVtx(J2DPane*, f32 (* )[3][4], u8, bool, s16);
	/* 80254EBC */ void getGlobalVtxCenter(J2DPane*, bool, s16);
};

// 
// Forward References:
// 


extern "C" void __ct__14dMsgScrnHowl_cFv(); // 1
extern "C" void __dt__14dMsgScrnHowl_cFv(); // 1
extern "C" void exec__14dMsgScrnHowl_cFv(); // 1
extern "C" void drawSelf__14dMsgScrnHowl_cFv(); // 1
extern "C" void guide_on_init__14dMsgScrnHowl_cFv(); // 1
extern "C" void guide_on_proc__14dMsgScrnHowl_cFv(); // 1
extern "C" void guide_off_init__14dMsgScrnHowl_cFv(); // 1
extern "C" void guide_off_proc__14dMsgScrnHowl_cFv(); // 1
extern "C" void guide_stop_init__14dMsgScrnHowl_cFv(); // 1
extern "C" void guide_stop_proc__14dMsgScrnHowl_cFv(); // 1
extern "C" void guide_demo_play_init__14dMsgScrnHowl_cFv(); // 1
extern "C" void guide_demo_play_proc__14dMsgScrnHowl_cFv(); // 1
extern "C" void guide_off_test_init__14dMsgScrnHowl_cFv(); // 1
extern "C" void guide_off_test_proc__14dMsgScrnHowl_cFv(); // 1
extern "C" void fukiScale__14dMsgScrnHowl_cFf(); // 1
extern "C" void fukiTrans__14dMsgScrnHowl_cFff(); // 1
extern "C" void fukiAlpha__14dMsgScrnHowl_cFf(); // 1
extern "C" void isKeyCheck__14dMsgScrnHowl_cFv(); // 1
extern "C" void resetLine__14dMsgScrnHowl_cFv(); // 1
extern "C" void drawWave__14dMsgScrnHowl_cFv(); // 1
extern "C" void drawGuide__14dMsgScrnHowl_cFv(); // 1
extern "C" void drawGuide2__14dMsgScrnHowl_cFv(); // 1
extern "C" void drawEffect__14dMsgScrnHowl_cFv(); // 1
extern "C" void calcMain__14dMsgScrnHowl_cFv(); // 1
extern "C" void calcWave__14dMsgScrnHowl_cFv(); // 1
extern "C" void calcGuide__14dMsgScrnHowl_cFv(); // 1
extern "C" void moveLineV__14dMsgScrnHowl_cFb(); // 1
extern "C" void moveBaseLength__14dMsgScrnHowl_cFb(); // 1
extern "C" void getOnLineNum__14dMsgScrnHowl_cFi(); // 1
extern "C" void addCount__14dMsgScrnHowl_cFs(); // 1
extern "C" void addCountGuide__14dMsgScrnHowl_cFs(); // 1
extern "C" void getNowPlotPitch__14dMsgScrnHowl_cFf(); // 1
extern "C" void getPlotPitch__14dMsgScrnHowl_cFf(); // 1
extern "C" void calcPitchLevel__14dMsgScrnHowl_cFv(); // 1
extern "C" void initGuideData__14dMsgScrnHowl_cFv(); // 1
extern "C" void getGuideDataSize__14dMsgScrnHowl_cFv(); // 1
extern "C" void getGuideDataType__14dMsgScrnHowl_cFi(); // 1
extern "C" void __sinit_d_msg_scrn_howl_cpp(); // 1
extern "C" extern char const* const msg_scrn_d_msg_scrn_howl__stringBase0;
extern "C" extern u8 data_803C1120[56];
extern "C" extern u8 data_803C1158[56];

// 
// External References:
// 

void mDoExt_getMesgFont(); // 2
void dPaneClass_showNullPane(J2DScreen*); // 2
void cLib_addCalc2(f32*, f32, f32, f32); // 2
void* operator new(u32); // 2
void operator delete(void*); // 2

extern "C" void mDoExt_getMesgFont__Fv(); // 1
extern "C" void drawPikari__13dMeter2Draw_cFffPffQ28JUtility6TColorQ28JUtility6TColorQ28JUtility6TColorQ28JUtility6TColorfUc(); // 1
extern "C" void getStringKanji__13dMeter2Info_cFUlPcP14JMSMesgEntry_c(); // 1
extern "C" void setSelectRubyString__14dMsgScrnBase_cFPcPcPc(); // 1
extern "C" void setSelectString__14dMsgScrnBase_cFPcPcPc(); // 1
extern "C" bool selectAnimeMove__14dMsgScrnBase_cFUcUcb(); // 1
extern "C" void selectAnimeInit__14dMsgScrnBase_cFUcUcfUc(); // 1
extern "C" void arwAnimeMove__14dMsgScrnBase_cFv(); // 1
extern "C" void arwAnimeInit__14dMsgScrnBase_cFv(); // 1
extern "C" void fukiPosCalc__14dMsgScrnBase_cFUc(); // 1
extern "C" bool isSelect__14dMsgScrnBase_cFv(); // 1
extern "C" bool selectAnimeEnd__14dMsgScrnBase_cFv(); // 1
extern "C" void dotAnimeMove__14dMsgScrnBase_cFv(); // 1
extern "C" void dotAnimeInit__14dMsgScrnBase_cFv(); // 1
extern "C" void __ct__14dMsgScrnBase_cFv(); // 1
extern "C" void __dt__14dMsgScrnBase_cFv(); // 1
extern "C" void init__14dMsgScrnBase_cFv(); // 1
extern "C" void multiDraw__14dMsgScrnBase_cFv(); // 1
extern "C" void draw__14dMsgScrnBase_cFv(); // 1
extern "C" void fontAlpha__14dMsgScrnBase_cFf(); // 1
extern "C" void __ct__8CPaneMgrFv(); // 1
extern "C" void __ct__8CPaneMgrFP9J2DScreenUxUcP10JKRExpHeap(); // 1
extern "C" void __dt__8CPaneMgrFv(); // 1
extern "C" void getGlobalPosX__8CPaneMgrFv(); // 1
extern "C" void getGlobalPosY__8CPaneMgrFv(); // 1
extern "C" void paneTrans__8CPaneMgrFff(); // 1
extern "C" void getGlobalVtx__8CPaneMgrFP7J2DPanePA3_A4_fUcbs(); // 1
extern "C" void getGlobalVtxCenter__8CPaneMgrFP7J2DPanebs(); // 1
extern "C" void dPaneClass_showNullPane__FP9J2DScreen(); // 1
extern "C" void setAlphaRate__13CPaneMgrAlphaFf(); // 1
extern "C" void getAlphaRate__13CPaneMgrAlphaFv(); // 1
extern "C" void cLib_addCalc2__FPffff(); // 1
extern "C" void getNowInputValue__13Z2WolfHowlMgrFv(); // 1
extern "C" void getCorrectLine__13Z2WolfHowlMgrFUc(); // 1
extern "C" void getCorrectLineNum__13Z2WolfHowlMgrFv(); // 1
extern "C" void getOnLineNum__13Z2WolfHowlMgrFv(); // 1
extern "C" void startGuideMelody__13Z2WolfHowlMgrFb(); // 1
extern "C" void* __nw__FUl(); // 1
extern "C" void __dl__FPv(); // 1
extern "C" void func_802E90C0(); // 1
extern "C" void getBounds__7J2DPaneFv(); // 1
extern "C" void __ct__9J2DScreenFv(); // 1
extern "C" void setPriority__9J2DScreenFPCcUlP10JKRArchive(); // 1
extern "C" void __ct__10J2DPictureFPC7ResTIMG(); // 1
extern "C" void getStringPtr__10J2DTextBoxCFv(); // 1
extern "C" void setString__10J2DTextBoxFsPCce(); // 1
extern "C" void GXGetScissor(); // 1
extern "C" void __ptmf_scall(); // 1
extern "C" void _savegpr_21(); // 1
extern "C" void _savegpr_23(); // 1
extern "C" void _savegpr_24(); // 1
extern "C" void _savegpr_26(); // 1
extern "C" void _savegpr_27(); // 1
extern "C" void _savegpr_28(); // 1
extern "C" void _savegpr_29(); // 1
extern "C" void _restgpr_21(); // 1
extern "C" void _restgpr_23(); // 1
extern "C" void _restgpr_24(); // 1
extern "C" void _restgpr_26(); // 1
extern "C" void _restgpr_27(); // 1
extern "C" void _restgpr_28(); // 1
extern "C" void _restgpr_29(); // 1
extern "C" extern u8 m_cpadInfo__8mDoCPd_c[256];
extern "C" extern u8 g_dComIfG_gameInfo[122384];
extern "C" extern u8 g_meter2_info[248];
extern "C" extern u8 g_MsgObject_HIO_c[1040];

// 
// Declarations:
// 

/* ############################################################################################## */
/* 80399A20-80399A80 005C+04 s=1 e=0 z=0  None .rodata    @stringBase0                                                 */
#pragma push
#pragma force_active on
#pragma section ".dead"
SECTION_DEAD char const* const stringBase_80399A20 = "zelda_wolf_howl.blo";
SECTION_DEAD char const* const stringBase_80399A34 = "";
SECTION_DEAD char const* const stringBase_80399A35 = "tt_ginnouroko_s3tc.bti";
SECTION_DEAD char const* const stringBase_80399A4C = "tt_black_32.bti";
SECTION_DEAD char const* const stringBase_80399A5C = "tt_iastarRR.bti";
SECTION_DEAD char const* const stringBase_80399A6C = "tt_block8x8.bti";
/* @stringBase0 padding */
SECTION_DEAD static char const* const pad_80399A7C = "\0\0\0";
#pragma pop

/* 803C0FD0-803C0FDC 000C+00 s=2 e=0 z=0  None .data      cNullVec__6Z2Calc                                            */
SECTION_DATA static u8 cNullVec__6Z2Calc[12] = {
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
};

/* 803C0FDC-803C0FE8 000C+00 s=1 e=0 z=0  None .data      @4173                                                        */
SECTION_DATA static void* lit_4173[3] = {
	(void*)NULL,
	(void*)0xFFFFFFFF,
	(void*)guide_on_init__14dMsgScrnHowl_cFv,
};

/* 803C0FE8-803C0FF4 000C+00 s=1 e=0 z=0  None .data      @4174                                                        */
SECTION_DATA static void* lit_4174[3] = {
	(void*)NULL,
	(void*)0xFFFFFFFF,
	(void*)guide_off_init__14dMsgScrnHowl_cFv,
};

/* 803C0FF4-803C1000 000C+00 s=1 e=0 z=0  None .data      @4175                                                        */
SECTION_DATA static void* lit_4175[3] = {
	(void*)NULL,
	(void*)0xFFFFFFFF,
	(void*)guide_stop_init__14dMsgScrnHowl_cFv,
};

/* 803C1000-803C100C 000C+00 s=1 e=0 z=0  None .data      @4176                                                        */
SECTION_DATA static void* lit_4176[3] = {
	(void*)NULL,
	(void*)0xFFFFFFFF,
	(void*)guide_demo_play_init__14dMsgScrnHowl_cFv,
};

/* 803C100C-803C1018 000C+00 s=1 e=0 z=0  None .data      @4177                                                        */
SECTION_DATA static void* lit_4177[3] = {
	(void*)NULL,
	(void*)0xFFFFFFFF,
	(void*)guide_off_test_init__14dMsgScrnHowl_cFv,
};

/* 803C1018-803C1054 003C+00 s=3 e=0 z=0  None .data      init_proc                                                    */
SECTION_DATA static u8 init_proc[60] = {
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
};

/* 803C1054-803C1060 000C+00 s=1 e=0 z=0  None .data      @4178                                                        */
SECTION_DATA static void* lit_4178[3] = {
	(void*)NULL,
	(void*)0xFFFFFFFF,
	(void*)guide_on_proc__14dMsgScrnHowl_cFv,
};

/* 803C1060-803C106C 000C+00 s=1 e=0 z=0  None .data      @4179                                                        */
SECTION_DATA static void* lit_4179[3] = {
	(void*)NULL,
	(void*)0xFFFFFFFF,
	(void*)guide_off_proc__14dMsgScrnHowl_cFv,
};

/* 803C106C-803C1078 000C+00 s=1 e=0 z=0  None .data      @4180                                                        */
SECTION_DATA static void* lit_4180[3] = {
	(void*)NULL,
	(void*)0xFFFFFFFF,
	(void*)guide_stop_proc__14dMsgScrnHowl_cFv,
};

/* 803C1078-803C1084 000C+00 s=1 e=0 z=0  None .data      @4181                                                        */
SECTION_DATA static void* lit_4181[3] = {
	(void*)NULL,
	(void*)0xFFFFFFFF,
	(void*)guide_demo_play_proc__14dMsgScrnHowl_cFv,
};

/* 803C1084-803C1090 000C+00 s=1 e=0 z=0  None .data      @4182                                                        */
SECTION_DATA static void* lit_4182[3] = {
	(void*)NULL,
	(void*)0xFFFFFFFF,
	(void*)guide_off_test_proc__14dMsgScrnHowl_cFv,
};

/* 803C1090-803C10D0 003C+04 s=2 e=0 z=0  None .data      process                                                      */
SECTION_DATA static u8 process[60 + 4 /* padding */] = {
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
	/* padding */
	0x00, 0x00, 0x00, 0x00,
};

/* 803C10D0-803C10E8 0018+00 s=1 e=0 z=0  None .data      ylinen_tag$4210                                              */
SECTION_DATA static u8 ylinen_tag[24] = {
	0x79, 0x6C, 0x69, 0x6E, 0x65, 0x6E, 0x30, 0x30, 0x79, 0x6C, 0x69, 0x6E, 0x65, 0x6E, 0x30, 0x32,
	0x79, 0x6C, 0x69, 0x6E, 0x65, 0x6E, 0x30, 0x34,
};

/* 803C10E8-803C1120 0038+00 s=1 e=0 z=0  None .data      tlinen_tag$4211                                              */
SECTION_DATA static u8 tlinen_tag[56] = {
	0x74, 0x6C, 0x69, 0x6E, 0x65, 0x6E, 0x30, 0x30, 0x74, 0x6C, 0x69, 0x6E, 0x65, 0x6E, 0x30, 0x31,
	0x74, 0x6C, 0x69, 0x6E, 0x65, 0x6E, 0x30, 0x32, 0x74, 0x6C, 0x69, 0x6E, 0x65, 0x6E, 0x30, 0x33,
	0x74, 0x6C, 0x69, 0x6E, 0x65, 0x6E, 0x30, 0x34, 0x74, 0x6C, 0x69, 0x6E, 0x65, 0x6E, 0x30, 0x35,
	0x74, 0x6C, 0x69, 0x6E, 0x65, 0x6E, 0x30, 0x36,
};

/* 803C1120-803C1158 0038+00 s=0 e=0 z=0  None .data      tline_tag$4212                                               */
SECTION_DATA u8 data_803C1120[56] = {
	0x00, 0x74, 0x6C, 0x69, 0x6E, 0x65, 0x30, 0x30, 0x00, 0x74, 0x6C, 0x69, 0x6E, 0x65, 0x30, 0x31,
	0x00, 0x74, 0x6C, 0x69, 0x6E, 0x65, 0x30, 0x32, 0x00, 0x74, 0x6C, 0x69, 0x6E, 0x65, 0x30, 0x33,
	0x74, 0x6C, 0x69, 0x6E, 0x65, 0x6E, 0x30, 0x34, 0x00, 0x74, 0x6C, 0x69, 0x6E, 0x65, 0x30, 0x35,
	0x00, 0x74, 0x6C, 0x69, 0x6E, 0x65, 0x30, 0x36,
};

/* 803C1158-803C1190 0038+00 s=0 e=0 z=0  None .data      tlines_tag$4213                                              */
SECTION_DATA u8 data_803C1158[56] = {
	0x74, 0x6C, 0x69, 0x6E, 0x65, 0x73, 0x30, 0x30, 0x74, 0x6C, 0x69, 0x6E, 0x65, 0x73, 0x30, 0x31,
	0x74, 0x6C, 0x69, 0x6E, 0x65, 0x73, 0x30, 0x32, 0x74, 0x6C, 0x69, 0x6E, 0x65, 0x73, 0x30, 0x33,
	0x74, 0x6C, 0x69, 0x6E, 0x65, 0x73, 0x30, 0x34, 0x74, 0x6C, 0x69, 0x6E, 0x65, 0x73, 0x30, 0x35,
	0x74, 0x6C, 0x69, 0x6E, 0x65, 0x73, 0x30, 0x36,
};

/* 803C1190-803C11E8 0058+00 s=2 e=0 z=0  None .data      __vt__14dMsgScrnHowl_c                                       */
SECTION_DATA static void* __vt__14dMsgScrnHowl_c[22] = {
	(void*)NULL,
	(void*)NULL,
	(void*)draw__14dMsgScrnBase_cFv,
	(void*)__dt__14dMsgScrnHowl_cFv,
	(void*)exec__14dMsgScrnHowl_cFv,
	(void*)multiDraw__14dMsgScrnBase_cFv,
	(void*)drawSelf__14dMsgScrnHowl_cFv,
	(void*)setSelectString__14dMsgScrnBase_cFPcPcPc,
	(void*)setSelectRubyString__14dMsgScrnBase_cFPcPcPc,
	(void*)arwAnimeInit__14dMsgScrnBase_cFv,
	(void*)arwAnimeMove__14dMsgScrnBase_cFv,
	(void*)dotAnimeInit__14dMsgScrnBase_cFv,
	(void*)dotAnimeMove__14dMsgScrnBase_cFv,
	(void*)isSelect__14dMsgScrnBase_cFv,
	(void*)selectAnimeInit__14dMsgScrnBase_cFUcUcfUc,
	(void*)selectAnimeMove__14dMsgScrnBase_cFUcUcb,
	(void*)selectAnimeEnd__14dMsgScrnBase_cFv,
	(void*)fukiScale__14dMsgScrnHowl_cFf,
	(void*)fukiTrans__14dMsgScrnHowl_cFff,
	(void*)fukiAlpha__14dMsgScrnHowl_cFf,
	(void*)fontAlpha__14dMsgScrnBase_cFf,
	(void*)fukiPosCalc__14dMsgScrnBase_cFUc,
};

/* 80454C50-80454C54 0004+00 s=14 e=0 z=0  None .sdata2    @4427                                                        */
SECTION_SDATA2 static u8 lit_4427[4] = {
	0x00, 0x00, 0x00, 0x00,
};

/* 80454C54-80454C58 0004+00 s=1 e=0 z=0  None .sdata2    @4428                                                        */
SECTION_SDATA2 static u32 lit_4428 = 0x43AF0000;

/* 80454C58-80454C5C 0004+00 s=2 e=0 z=0  None .sdata2    @4429                                                        */
SECTION_SDATA2 static u32 lit_4429 = 0x437F0000;

/* 80454C5C-80454C60 0004+00 s=2 e=0 z=0  None .sdata2    @4430                                                        */
SECTION_SDATA2 static u32 lit_4430 = 0x40400000;

/* 80454C60-80454C68 0004+04 s=8 e=0 z=0  None .sdata2    @4431                                                        */
SECTION_SDATA2 static f32 lit_4431[1 + 1 /* padding */] = {
	1.0f,
	/* padding */
	0.0f,
};

/* 80454C68-80454C70 0008+00 s=4 e=0 z=0  None .sdata2    @4434                                                        */
SECTION_SDATA2 static u8 lit_4434[8] = {
	0x43, 0x30, 0x00, 0x00, 0x80, 0x00, 0x00, 0x00,
};

/* 8024096C-80241784 0E18+00 s=0 e=1 z=0  None .text      __ct__14dMsgScrnHowl_cFv                                     */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm dMsgScrnHowl_c::dMsgScrnHowl_c() {
	nofralloc
#include "asm/msg/scrn/d_msg_scrn_howl/__ct__14dMsgScrnHowl_cFv.s"
}
#pragma pop


/* 80241784-80241A70 02EC+00 s=1 e=0 z=0  None .text      __dt__14dMsgScrnHowl_cFv                                     */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm dMsgScrnHowl_c::~dMsgScrnHowl_c() {
	nofralloc
#include "asm/msg/scrn/d_msg_scrn_howl/__dt__14dMsgScrnHowl_cFv.s"
}
#pragma pop


/* ############################################################################################## */
/* 80454C70-80454C74 0004+00 s=7 e=0 z=0  None .sdata2    @4561                                                        */
SECTION_SDATA2 static u32 lit_4561 = 0x3F000000;

/* 80454C74-80454C78 0004+00 s=2 e=0 z=0  None .sdata2    @4562                                                        */
SECTION_SDATA2 static u32 lit_4562 = 0x3E4CCCCD;

/* 80454C78-80454C80 0004+04 s=2 e=0 z=0  None .sdata2    @4563                                                        */
SECTION_SDATA2 static f32 lit_4563[1 + 1 /* padding */] = {
	1.0f / 10.0f,
	/* padding */
	0.0f,
};

/* 80241A70-80241C30 01C0+00 s=1 e=0 z=0  None .text      exec__14dMsgScrnHowl_cFv                                     */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void dMsgScrnHowl_c::exec() {
	nofralloc
#include "asm/msg/scrn/d_msg_scrn_howl/exec__14dMsgScrnHowl_cFv.s"
}
#pragma pop


/* ############################################################################################## */
/* 80454C80-80454C88 0008+00 s=6 e=0 z=0  None .sdata2    @4587                                                        */
SECTION_SDATA2 static u8 lit_4587[8] = {
	0x43, 0x30, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
};

/* 80241C30-80241D58 0128+00 s=1 e=0 z=0  None .text      drawSelf__14dMsgScrnHowl_cFv                                 */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void dMsgScrnHowl_c::drawSelf() {
	nofralloc
#include "asm/msg/scrn/d_msg_scrn_howl/drawSelf__14dMsgScrnHowl_cFv.s"
}
#pragma pop


/* 80241D58-80241D5C 0004+00 s=1 e=0 z=0  None .text      guide_on_init__14dMsgScrnHowl_cFv                            */
void dMsgScrnHowl_c::guide_on_init() {
	/* empty function */
}


/* 80241D5C-80241DFC 00A0+00 s=1 e=0 z=0  None .text      guide_on_proc__14dMsgScrnHowl_cFv                            */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void dMsgScrnHowl_c::guide_on_proc() {
	nofralloc
#include "asm/msg/scrn/d_msg_scrn_howl/guide_on_proc__14dMsgScrnHowl_cFv.s"
}
#pragma pop


/* 80241DFC-80241E00 0004+00 s=1 e=0 z=0  None .text      guide_off_init__14dMsgScrnHowl_cFv                           */
void dMsgScrnHowl_c::guide_off_init() {
	/* empty function */
}


/* 80241E00-80241E7C 007C+00 s=1 e=0 z=0  None .text      guide_off_proc__14dMsgScrnHowl_cFv                           */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void dMsgScrnHowl_c::guide_off_proc() {
	nofralloc
#include "asm/msg/scrn/d_msg_scrn_howl/guide_off_proc__14dMsgScrnHowl_cFv.s"
}
#pragma pop


/* 80241E7C-80241E80 0004+00 s=1 e=0 z=0  None .text      guide_stop_init__14dMsgScrnHowl_cFv                          */
void dMsgScrnHowl_c::guide_stop_init() {
	/* empty function */
}


/* 80241E80-80241F28 00A8+00 s=1 e=0 z=0  None .text      guide_stop_proc__14dMsgScrnHowl_cFv                          */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void dMsgScrnHowl_c::guide_stop_proc() {
	nofralloc
#include "asm/msg/scrn/d_msg_scrn_howl/guide_stop_proc__14dMsgScrnHowl_cFv.s"
}
#pragma pop


/* 80241F28-80241F34 000C+00 s=1 e=0 z=0  None .text      guide_demo_play_init__14dMsgScrnHowl_cFv                     */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void dMsgScrnHowl_c::guide_demo_play_init() {
	nofralloc
#include "asm/msg/scrn/d_msg_scrn_howl/guide_demo_play_init__14dMsgScrnHowl_cFv.s"
}
#pragma pop


/* 80241F34-8024202C 00F8+00 s=1 e=0 z=0  None .text      guide_demo_play_proc__14dMsgScrnHowl_cFv                     */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void dMsgScrnHowl_c::guide_demo_play_proc() {
	nofralloc
#include "asm/msg/scrn/d_msg_scrn_howl/guide_demo_play_proc__14dMsgScrnHowl_cFv.s"
}
#pragma pop


/* 8024202C-80242030 0004+00 s=1 e=0 z=0  None .text      guide_off_test_init__14dMsgScrnHowl_cFv                      */
void dMsgScrnHowl_c::guide_off_test_init() {
	/* empty function */
}


/* 80242030-80242034 0004+00 s=1 e=0 z=0  None .text      guide_off_test_proc__14dMsgScrnHowl_cFv                      */
void dMsgScrnHowl_c::guide_off_test_proc() {
	/* empty function */
}


/* 80242034-80242038 0004+00 s=1 e=0 z=0  None .text      fukiScale__14dMsgScrnHowl_cFf                                */
void dMsgScrnHowl_c::fukiScale(f32 param_0) {
	/* empty function */
}


/* 80242038-8024205C 0024+00 s=1 e=0 z=0  None .text      fukiTrans__14dMsgScrnHowl_cFff                               */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void dMsgScrnHowl_c::fukiTrans(f32 param_0, f32 param_1) {
	nofralloc
#include "asm/msg/scrn/d_msg_scrn_howl/fukiTrans__14dMsgScrnHowl_cFff.s"
}
#pragma pop


/* 8024205C-80242080 0024+00 s=1 e=0 z=0  None .text      fukiAlpha__14dMsgScrnHowl_cFf                                */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void dMsgScrnHowl_c::fukiAlpha(f32 param_0) {
	nofralloc
#include "asm/msg/scrn/d_msg_scrn_howl/fukiAlpha__14dMsgScrnHowl_cFf.s"
}
#pragma pop


/* 80242080-802420D4 0054+00 s=0 e=1 z=0  None .text      isKeyCheck__14dMsgScrnHowl_cFv                               */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void dMsgScrnHowl_c::isKeyCheck() {
	nofralloc
#include "asm/msg/scrn/d_msg_scrn_howl/isKeyCheck__14dMsgScrnHowl_cFv.s"
}
#pragma pop


/* 802420D4-80242198 00C4+00 s=5 e=0 z=0  None .text      resetLine__14dMsgScrnHowl_cFv                                */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void dMsgScrnHowl_c::resetLine() {
	nofralloc
#include "asm/msg/scrn/d_msg_scrn_howl/resetLine__14dMsgScrnHowl_cFv.s"
}
#pragma pop


/* ############################################################################################## */
/* 80454C88-80454C8C 0004+00 s=2 e=0 z=0  None .sdata2    @4824                                                        */
SECTION_SDATA2 static u32 lit_4824 = 0x41F00000;

/* 80454C8C-80454C90 0004+00 s=1 e=0 z=0  None .sdata2    @4825                                                        */
SECTION_SDATA2 static u32 lit_4825 = 0x41800000;

/* 80454C90-80454C94 0004+00 s=1 e=0 z=0  None .sdata2    @4826                                                        */
SECTION_SDATA2 static u32 lit_4826 = 0x42000000;

/* 80454C94-80454C98 0004+00 s=4 e=0 z=0  None .sdata2    @4827                                                        */
SECTION_SDATA2 static u32 lit_4827 = 0x40000000;

/* 80454C98-80454C9C 0004+00 s=1 e=0 z=0  None .sdata2    @4828                                                        */
SECTION_SDATA2 static u32 lit_4828 = 0x40A00000;

/* 80454C9C-80454CA0 0004+00 s=1 e=0 z=0  None .sdata2    @4829                                                        */
SECTION_SDATA2 static u32 lit_4829 = 0x41700000;

/* 80242198-802427A8 0610+00 s=1 e=0 z=0  None .text      drawWave__14dMsgScrnHowl_cFv                                 */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void dMsgScrnHowl_c::drawWave() {
	nofralloc
#include "asm/msg/scrn/d_msg_scrn_howl/drawWave__14dMsgScrnHowl_cFv.s"
}
#pragma pop


/* 802427A8-80242FE4 083C+00 s=1 e=0 z=0  None .text      drawGuide__14dMsgScrnHowl_cFv                                */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void dMsgScrnHowl_c::drawGuide() {
	nofralloc
#include "asm/msg/scrn/d_msg_scrn_howl/drawGuide__14dMsgScrnHowl_cFv.s"
}
#pragma pop


/* ############################################################################################## */
/* 80454CA0-80454CA4 0004+00 s=1 e=0 z=0  None .sdata2    @5203                                                        */
SECTION_SDATA2 static u32 lit_5203 = 0x41900000;

/* 80242FE4-802435BC 05D8+00 s=1 e=0 z=0  None .text      drawGuide2__14dMsgScrnHowl_cFv                               */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void dMsgScrnHowl_c::drawGuide2() {
	nofralloc
#include "asm/msg/scrn/d_msg_scrn_howl/drawGuide2__14dMsgScrnHowl_cFv.s"
}
#pragma pop


/* ############################################################################################## */
/* 80454CA4-80454CA8 0004+00 s=1 e=0 z=0  None .sdata2    @5233                                                        */
SECTION_SDATA2 static u32 lit_5233 = 0x41400000;

/* 80454CA8-80454CAC 0004+00 s=1 e=0 z=0  None .sdata2    @5234                                                        */
SECTION_SDATA2 static u32 lit_5234 = 0x42480000;

/* 802435BC-80243838 027C+00 s=1 e=0 z=0  None .text      drawEffect__14dMsgScrnHowl_cFv                               */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void dMsgScrnHowl_c::drawEffect() {
	nofralloc
#include "asm/msg/scrn/d_msg_scrn_howl/drawEffect__14dMsgScrnHowl_cFv.s"
}
#pragma pop


/* 80243838-8024389C 0064+00 s=3 e=0 z=0  None .text      calcMain__14dMsgScrnHowl_cFv                                 */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void dMsgScrnHowl_c::calcMain() {
	nofralloc
#include "asm/msg/scrn/d_msg_scrn_howl/calcMain__14dMsgScrnHowl_cFv.s"
}
#pragma pop


/* 8024389C-80243A50 01B4+00 s=1 e=0 z=0  None .text      calcWave__14dMsgScrnHowl_cFv                                 */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void dMsgScrnHowl_c::calcWave() {
	nofralloc
#include "asm/msg/scrn/d_msg_scrn_howl/calcWave__14dMsgScrnHowl_cFv.s"
}
#pragma pop


/* 80243A50-80243BE0 0190+00 s=1 e=0 z=0  None .text      calcGuide__14dMsgScrnHowl_cFv                                */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void dMsgScrnHowl_c::calcGuide() {
	nofralloc
#include "asm/msg/scrn/d_msg_scrn_howl/calcGuide__14dMsgScrnHowl_cFv.s"
}
#pragma pop


/* 80243BE0-80243DCC 01EC+00 s=2 e=0 z=0  None .text      moveLineV__14dMsgScrnHowl_cFb                                */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void dMsgScrnHowl_c::moveLineV(bool param_0) {
	nofralloc
#include "asm/msg/scrn/d_msg_scrn_howl/moveLineV__14dMsgScrnHowl_cFb.s"
}
#pragma pop


/* 80243DCC-80243EEC 0120+00 s=2 e=0 z=0  None .text      moveBaseLength__14dMsgScrnHowl_cFb                           */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void dMsgScrnHowl_c::moveBaseLength(bool param_0) {
	nofralloc
#include "asm/msg/scrn/d_msg_scrn_howl/moveBaseLength__14dMsgScrnHowl_cFb.s"
}
#pragma pop


/* 80243EEC-80243F58 006C+00 s=2 e=0 z=0  None .text      getOnLineNum__14dMsgScrnHowl_cFi                             */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void dMsgScrnHowl_c::getOnLineNum(int param_0) {
	nofralloc
#include "asm/msg/scrn/d_msg_scrn_howl/getOnLineNum__14dMsgScrnHowl_cFi.s"
}
#pragma pop


/* 80243F58-80243F7C 0024+00 s=2 e=0 z=0  None .text      addCount__14dMsgScrnHowl_cFs                                 */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void dMsgScrnHowl_c::addCount(s16 param_0) {
	nofralloc
#include "asm/msg/scrn/d_msg_scrn_howl/addCount__14dMsgScrnHowl_cFs.s"
}
#pragma pop


/* 80243F7C-80243F94 0018+00 s=2 e=0 z=0  None .text      addCountGuide__14dMsgScrnHowl_cFs                            */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void dMsgScrnHowl_c::addCountGuide(s16 param_0) {
	nofralloc
#include "asm/msg/scrn/d_msg_scrn_howl/addCountGuide__14dMsgScrnHowl_cFs.s"
}
#pragma pop


/* ############################################################################################## */
/* 80454CAC-80454CB0 0004+00 s=1 e=0 z=0  None .sdata2    @5508                                                        */
SECTION_SDATA2 static u32 lit_5508 = 0xBF800000;

/* 80243F94-80244108 0174+00 s=2 e=0 z=0  None .text      getNowPlotPitch__14dMsgScrnHowl_cFf                          */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void dMsgScrnHowl_c::getNowPlotPitch(f32 param_0) {
	nofralloc
#include "asm/msg/scrn/d_msg_scrn_howl/getNowPlotPitch__14dMsgScrnHowl_cFf.s"
}
#pragma pop


/* 80244108-8024414C 0044+00 s=2 e=0 z=0  None .text      getPlotPitch__14dMsgScrnHowl_cFf                             */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void dMsgScrnHowl_c::getPlotPitch(f32 param_0) {
	nofralloc
#include "asm/msg/scrn/d_msg_scrn_howl/getPlotPitch__14dMsgScrnHowl_cFf.s"
}
#pragma pop


/* 8024414C-802441FC 00B0+00 s=2 e=0 z=0  None .text      calcPitchLevel__14dMsgScrnHowl_cFv                           */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void dMsgScrnHowl_c::calcPitchLevel() {
	nofralloc
#include "asm/msg/scrn/d_msg_scrn_howl/calcPitchLevel__14dMsgScrnHowl_cFv.s"
}
#pragma pop


/* 802441FC-80244304 0108+00 s=1 e=0 z=0  None .text      initGuideData__14dMsgScrnHowl_cFv                            */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void dMsgScrnHowl_c::initGuideData() {
	nofralloc
#include "asm/msg/scrn/d_msg_scrn_howl/initGuideData__14dMsgScrnHowl_cFv.s"
}
#pragma pop


/* 80244304-8024438C 0088+00 s=2 e=0 z=0  None .text      getGuideDataSize__14dMsgScrnHowl_cFv                         */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void dMsgScrnHowl_c::getGuideDataSize() {
	nofralloc
#include "asm/msg/scrn/d_msg_scrn_howl/getGuideDataSize__14dMsgScrnHowl_cFv.s"
}
#pragma pop


/* 8024438C-80244454 00C8+00 s=2 e=0 z=0  None .text      getGuideDataType__14dMsgScrnHowl_cFi                         */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void dMsgScrnHowl_c::getGuideDataType(int param_0) {
	nofralloc
#include "asm/msg/scrn/d_msg_scrn_howl/getGuideDataType__14dMsgScrnHowl_cFi.s"
}
#pragma pop


/* 80244454-80244558 0104+00 s=0 e=1 z=0  None .text      __sinit_d_msg_scrn_howl_cpp                                  */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
extern "C" asm void __sinit_d_msg_scrn_howl_cpp() {
	nofralloc
#include "asm/msg/scrn/d_msg_scrn_howl/__sinit_d_msg_scrn_howl_cpp.s"
}
#pragma pop


