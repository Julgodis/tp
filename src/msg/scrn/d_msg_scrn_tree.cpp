// 
// Generated By: dol2asm
// Translation Unit: msg/scrn/d_msg_scrn_tree
// 

#include "dolphin/types.h"

// 
// Forward References:
// 

extern "C" extern void __ct__14dMsgScrnTree_cFP7JUTFontP10JKRExpHeap();
extern "C" extern void __dt__14dMsgScrnTree_cFv();
extern "C" extern void exec__14dMsgScrnTree_cFv();
extern "C" extern void draw__14dMsgScrnTree_cFv();
extern "C" extern void fukiAlpha__14dMsgScrnTree_cFf();
extern "C" extern void fukiScale__14dMsgScrnTree_cFf();
extern "C" extern void fukiTrans__14dMsgScrnTree_cFff();
SECTION_RODATA extern const u8 data_80399C18[24];
SECTION_RODATA extern const u8 msg_scrn_d_msg_scrn_tree__stringBase0[104];
SECTION_DATA extern void*const __vt__14dMsgScrnTree_c[22];
SECTION_SDATA2 extern u8 msg_scrn_d_msg_scrn_tree__lit_3949[4];
SECTION_SDATA2 extern f32 msg_scrn_d_msg_scrn_tree__lit_3950;
SECTION_SDATA2 extern f32 lit_3951;
SECTION_SDATA2 extern f64 msg_scrn_d_msg_scrn_tree__lit_4053;

// 
// External References:
// 

extern "C" extern void mDoExt_getMesgFont__Fv();
extern "C" extern void dComIfGp_getSubHeap2D__Fi();
extern "C" extern void setSelectRubyString__14dMsgScrnBase_cFPcPcPc();
extern "C" extern void setSelectString__14dMsgScrnBase_cFPcPcPc();
extern "C" extern void selectAnimeMove__14dMsgScrnBase_cFUcUcb();
extern "C" extern void selectAnimeInit__14dMsgScrnBase_cFUcUcfUc();
extern "C" extern void arwAnimeMove__14dMsgScrnBase_cFv();
extern "C" extern void arwAnimeInit__14dMsgScrnBase_cFv();
extern "C" extern void fukiPosCalc__14dMsgScrnBase_cFUc();
extern "C" extern void isSelect__14dMsgScrnBase_cFv();
extern "C" extern void selectAnimeEnd__14dMsgScrnBase_cFv();
extern "C" extern void dotAnimeMove__14dMsgScrnBase_cFv();
extern "C" extern void dotAnimeInit__14dMsgScrnBase_cFv();
extern "C" extern void __ct__14dMsgScrnBase_cFv();
extern "C" extern void __dt__14dMsgScrnBase_cFv();
extern "C" extern void init__14dMsgScrnBase_cFv();
extern "C" extern void multiDraw__14dMsgScrnBase_cFv();
extern "C" extern void drawSelf__14dMsgScrnBase_cFv();
extern "C" extern void fontAlpha__14dMsgScrnBase_cFf();
extern "C" extern void isTalkNow__14dMsgScrnBase_cFv();
extern "C" extern void __ct__8CPaneMgrFP9J2DScreenUxUcP10JKRExpHeap();
extern "C" extern void getGlobalPosX__8CPaneMgrFv();
extern "C" extern void getGlobalPosY__8CPaneMgrFv();
extern "C" extern void dPaneClass_showNullPane__FP9J2DScreen();
extern "C" extern void setAlphaRate__13CPaneMgrAlphaFf();
extern "C" extern void getTotalFreeSize__7JKRHeapFv();
extern "C" extern void __nw__FUl();
extern "C" extern void __dl__FPv();
extern "C" extern void getGlbResource__13JKRFileLoaderFPCcP13JKRFileLoader();
extern "C" extern void animationTransform__7J2DPaneFv();
extern "C" extern void __ct__9J2DScreenFv();
extern "C" extern void setPriority__9J2DScreenFPCcUlP10JKRArchive();
extern "C" extern void draw__9J2DScreenFffPC14J2DGrafContext();
extern "C" extern void animation__9J2DScreenFv();
extern "C" extern void setString__10J2DTextBoxFsPCce();
extern "C" extern void load__20J2DAnmLoaderDataBaseFPCv();
extern "C" extern void _savegpr_27();
extern "C" extern void _savegpr_28();
extern "C" extern void _restgpr_27();
extern "C" extern void _restgpr_28();
SECTION_BSS extern u8 g_dComIfG_gameInfo[122384];
SECTION_BSS extern u8 g_MsgObject_HIO_c[1040];

// 
// Declarations:
// 

/* ############################################################################################## */
/* 80399C18-80399C30 0018+00 .rodata    t_tag$3763                                                   */
SECTION_RODATA const u8 data_80399C18[24] = {
	0x6D, 0x67, 0x5F, 0x65, 0x34, 0x6C, 0x69, 0x6E, 0x00, 0x00, 0x00, 0x00, 0x66, 0x34, 0x5F, 0x77,
	0x00, 0x00, 0x00, 0x00, 0x74, 0x34, 0x5F, 0x73,
};

/* 80399C30-80399C98 0064+04 .rodata    @stringBase0                                                 */
#pragma push
#pragma force_active on
#pragma section ".dead"
SECTION_DEAD char* const stringBase_80399C30 = "zelda_kanban_wood_a.blo";
SECTION_DEAD char* const stringBase_80399C48 = "zelda_kanban_wood_a.bck";
SECTION_DEAD char* const stringBase_80399C60 = "zelda_kanban_wood_a.btk";
SECTION_DEAD char* const stringBase_80399C78 = "zelda_kanban_wood_a_02.btk";
SECTION_DEAD char* const stringBase_80399C93 = "";
/* @stringBase0 padding */
SECTION_DEAD char* const pad_80399C94 = "\0\0\0";
#pragma pop

/* 803C1420-803C1478 0058+00 .data      __vt__14dMsgScrnTree_c                                       */
void* const __vt__14dMsgScrnTree_c[22] = {
	NULL, /* RTTI */
	NULL,
	(void*)draw__14dMsgScrnTree_cFv,
	(void*)__dt__14dMsgScrnTree_cFv,
	(void*)exec__14dMsgScrnTree_cFv,
	(void*)multiDraw__14dMsgScrnBase_cFv,
	(void*)drawSelf__14dMsgScrnBase_cFv,
	(void*)setSelectString__14dMsgScrnBase_cFPcPcPc,
	(void*)setSelectRubyString__14dMsgScrnBase_cFPcPcPc,
	(void*)arwAnimeInit__14dMsgScrnBase_cFv,
	(void*)arwAnimeMove__14dMsgScrnBase_cFv,
	(void*)dotAnimeInit__14dMsgScrnBase_cFv,
	(void*)dotAnimeMove__14dMsgScrnBase_cFv,
	(void*)isSelect__14dMsgScrnBase_cFv,
	(void*)selectAnimeInit__14dMsgScrnBase_cFUcUcfUc,
	(void*)selectAnimeMove__14dMsgScrnBase_cFUcUcb,
	(void*)selectAnimeEnd__14dMsgScrnBase_cFv,
	(void*)fukiScale__14dMsgScrnTree_cFf,
	(void*)fukiTrans__14dMsgScrnTree_cFff,
	(void*)fukiAlpha__14dMsgScrnTree_cFf,
	(void*)fontAlpha__14dMsgScrnBase_cFf,
	(void*)fukiPosCalc__14dMsgScrnBase_cFUc,
};

/* 80454D58-80454D5C 0004+00 .sdata2    @3949                                                        */
u8 msg_scrn_d_msg_scrn_tree__lit_3949[4] = {
	0x00, 0x00, 0x00, 0x00,
};

/* 80454D5C-80454D60 0004+00 .sdata2    @3950                                                        */
f32 msg_scrn_d_msg_scrn_tree__lit_3950 = 1.0f;

/* 80454D60-80454D68 0004+04 .sdata2    @3951                                                        */
f32 lit_3951 = 6.0f / 5.0f;
/* padding 4 bytes */

/* 80248954-80248F14 05C0+00 .text      __ct__14dMsgScrnTree_cFP7JUTFontP10JKRExpHeap                */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
ASM_FUNCTION(__ct__14dMsgScrnTree_cFP7JUTFontP10JKRExpHeap) {
	nofralloc
#include "asm/msg/scrn/d_msg_scrn_tree/__ct__14dMsgScrnTree_cFP7JUTFontP10JKRExpHeap.s"
}
#pragma pop


/* 80248F14-80249118 0204+00 .text      __dt__14dMsgScrnTree_cFv                                     */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
ASM_FUNCTION(__dt__14dMsgScrnTree_cFv) {
	nofralloc
#include "asm/msg/scrn/d_msg_scrn_tree/__dt__14dMsgScrnTree_cFv.s"
}
#pragma pop


/* ############################################################################################## */
/* 80454D68-80454D70 0008+00 .sdata2    @4053                                                        */
f64 msg_scrn_d_msg_scrn_tree__lit_4053 = 4503601774854144.0 /* cast s32 to float */;

/* 80249118-80249270 0158+00 .text      exec__14dMsgScrnTree_cFv                                     */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
ASM_FUNCTION(exec__14dMsgScrnTree_cFv) {
	nofralloc
#include "asm/msg/scrn/d_msg_scrn_tree/exec__14dMsgScrnTree_cFv.s"
}
#pragma pop


/* 80249270-802492F8 0088+00 .text      draw__14dMsgScrnTree_cFv                                     */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
ASM_FUNCTION(draw__14dMsgScrnTree_cFv) {
	nofralloc
#include "asm/msg/scrn/d_msg_scrn_tree/draw__14dMsgScrnTree_cFv.s"
}
#pragma pop


/* 802492F8-802493AC 00B4+00 .text      fukiAlpha__14dMsgScrnTree_cFf                                */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
ASM_FUNCTION(fukiAlpha__14dMsgScrnTree_cFf) {
	nofralloc
#include "asm/msg/scrn/d_msg_scrn_tree/fukiAlpha__14dMsgScrnTree_cFf.s"
}
#pragma pop


/* 802493AC-802493B0 0004+00 .text      fukiScale__14dMsgScrnTree_cFf                                */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
ASM_FUNCTION(fukiScale__14dMsgScrnTree_cFf) {
	nofralloc
#include "asm/msg/scrn/d_msg_scrn_tree/fukiScale__14dMsgScrnTree_cFf.s"
}
#pragma pop


/* 802493B0-802493B4 0004+00 .text      fukiTrans__14dMsgScrnTree_cFff                               */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
ASM_FUNCTION(fukiTrans__14dMsgScrnTree_cFff) {
	nofralloc
#include "asm/msg/scrn/d_msg_scrn_tree/fukiTrans__14dMsgScrnTree_cFff.s"
}
#pragma pop


/* ############################################################################################## */
