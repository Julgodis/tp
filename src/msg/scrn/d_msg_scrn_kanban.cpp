// 
// Generated By: dol2asm
// Translation Unit: msg/scrn/d_msg_scrn_kanban
// 

#include "dol2asm.h"
#include "dolphin/types.h"
#include "msg/scrn/d_msg_scrn_kanban.h"

// 
// Types:
// 

struct JKRExpHeap {
};

struct dMsgScrnKanban_c {
	/* 80244E38 */ dMsgScrnKanban_c(JKRExpHeap*);
	/* 8024534C */ ~dMsgScrnKanban_c();
	/* 80245528 */ void exec();
	/* 80245618 */ void draw();
	/* 802456A0 */ void fukiAlpha(f32);
	/* 80245754 */ void fukiScale(f32);
	/* 80245758 */ void fukiTrans(f32, f32);
};

struct dMsgScrnBase_c {
	/* 80238C40 */ void setSelectRubyString(char*, char*, char*);
	/* 80238C44 */ void setSelectString(char*, char*, char*);
	/* 80238C48 */ bool selectAnimeMove(u8, u8, bool);
	/* 80238C50 */ void selectAnimeInit(u8, u8, f32, u8);
	/* 80238C54 */ void arwAnimeMove();
	/* 80238C58 */ void arwAnimeInit();
	/* 80238C5C */ void fukiPosCalc(u8);
	/* 80238C60 */ bool isSelect();
	/* 80238C68 */ bool selectAnimeEnd();
	/* 80238C70 */ void dotAnimeMove();
	/* 80238C74 */ void dotAnimeInit();
	/* 8023C0DC */ dMsgScrnBase_c();
	/* 8023C124 */ ~dMsgScrnBase_c();
	/* 8023C16C */ void init();
	/* 8023C234 */ void multiDraw();
	/* 8023C300 */ void drawSelf();
	/* 8023C4F4 */ void fontAlpha(f32);
	/* 8023C574 */ void isTalkNow();
};

struct JKRHeap {
	/* 802CE784 */ void getTotalFreeSize();
};

struct JKRFileLoader {
	/* 802D4270 */ void getGlbResource(char const*, JKRFileLoader*);
};

struct JKRArchive {
};

struct J2DGrafContext {
};

struct J2DScreen {
	/* 802F8498 */ J2DScreen();
	/* 802F8648 */ void setPriority(char const*, u32, JKRArchive*);
	/* 802F8ED4 */ void draw(f32, f32, J2DGrafContext const*);
	/* 802F9690 */ void animation();
};

struct J2DPane {
	/* 802F7FCC */ void animationTransform();
};

struct J2DAnmLoaderDataBase {
	/* 80308A6C */ void load(void const*);
};

struct CPaneMgrAlpha {
	/* 802557D0 */ void setAlphaRate(f32);
};

struct CPaneMgr {
	/* 80253984 */ CPaneMgr(J2DScreen*, u64, u8, JKRExpHeap*);
	/* 802542E8 */ void getGlobalPosX();
	/* 80254364 */ void getGlobalPosY();
};

// 
// Forward References:
// 


extern "C" void __ct__16dMsgScrnKanban_cFP10JKRExpHeap(); // 1
extern "C" void __dt__16dMsgScrnKanban_cFv(); // 1
extern "C" void exec__16dMsgScrnKanban_cFv(); // 1
extern "C" void draw__16dMsgScrnKanban_cFv(); // 1
extern "C" void fukiAlpha__16dMsgScrnKanban_cFf(); // 1
extern "C" void fukiScale__16dMsgScrnKanban_cFf(); // 1
extern "C" void fukiTrans__16dMsgScrnKanban_cFff(); // 1
extern "C" extern char const* const msg_scrn_d_msg_scrn_kanban__stringBase0;

// 
// External References:
// 

void mDoExt_getMesgFont(); // 2
void dComIfGp_getSubHeap2D(int); // 2
void dPaneClass_showNullPane(J2DScreen*); // 2
void* operator new(u32); // 2
void operator delete(void*); // 2

extern "C" void mDoExt_getMesgFont__Fv(); // 1
extern "C" void dComIfGp_getSubHeap2D__Fi(); // 1
extern "C" void setSelectRubyString__14dMsgScrnBase_cFPcPcPc(); // 1
extern "C" void setSelectString__14dMsgScrnBase_cFPcPcPc(); // 1
extern "C" bool selectAnimeMove__14dMsgScrnBase_cFUcUcb(); // 1
extern "C" void selectAnimeInit__14dMsgScrnBase_cFUcUcfUc(); // 1
extern "C" void arwAnimeMove__14dMsgScrnBase_cFv(); // 1
extern "C" void arwAnimeInit__14dMsgScrnBase_cFv(); // 1
extern "C" void fukiPosCalc__14dMsgScrnBase_cFUc(); // 1
extern "C" bool isSelect__14dMsgScrnBase_cFv(); // 1
extern "C" bool selectAnimeEnd__14dMsgScrnBase_cFv(); // 1
extern "C" void dotAnimeMove__14dMsgScrnBase_cFv(); // 1
extern "C" void dotAnimeInit__14dMsgScrnBase_cFv(); // 1
extern "C" void __ct__14dMsgScrnBase_cFv(); // 1
extern "C" void __dt__14dMsgScrnBase_cFv(); // 1
extern "C" void init__14dMsgScrnBase_cFv(); // 1
extern "C" void multiDraw__14dMsgScrnBase_cFv(); // 1
extern "C" void drawSelf__14dMsgScrnBase_cFv(); // 1
extern "C" void fontAlpha__14dMsgScrnBase_cFf(); // 1
extern "C" void isTalkNow__14dMsgScrnBase_cFv(); // 1
extern "C" void __ct__8CPaneMgrFP9J2DScreenUxUcP10JKRExpHeap(); // 1
extern "C" void getGlobalPosX__8CPaneMgrFv(); // 1
extern "C" void getGlobalPosY__8CPaneMgrFv(); // 1
extern "C" void dPaneClass_showNullPane__FP9J2DScreen(); // 1
extern "C" void setAlphaRate__13CPaneMgrAlphaFf(); // 1
extern "C" void getTotalFreeSize__7JKRHeapFv(); // 1
extern "C" void* __nw__FUl(); // 1
extern "C" void __dl__FPv(); // 1
extern "C" void getGlbResource__13JKRFileLoaderFPCcP13JKRFileLoader(); // 1
extern "C" void animationTransform__7J2DPaneFv(); // 1
extern "C" void __ct__9J2DScreenFv(); // 1
extern "C" void setPriority__9J2DScreenFPCcUlP10JKRArchive(); // 1
extern "C" void draw__9J2DScreenFffPC14J2DGrafContext(); // 1
extern "C" void animation__9J2DScreenFv(); // 1
extern "C" void load__20J2DAnmLoaderDataBaseFPCv(); // 1
extern "C" void _savegpr_27(); // 1
extern "C" void _savegpr_28(); // 1
extern "C" void _restgpr_27(); // 1
extern "C" void _restgpr_28(); // 1
extern "C" extern u8 g_dComIfG_gameInfo[122384];
extern "C" extern u8 g_MsgObject_HIO_c[1040];

// 
// Declarations:
// 

/* ############################################################################################## */
/* 80399AA0-80399AB8 0018+00 s=1 e=0 z=0  None .rodata    t_tag$3768                                                   */
SECTION_RODATA static u8 const data_80399AA0[24] = {
	0x6D, 0x67, 0x5F, 0x65, 0x34, 0x6C, 0x69, 0x6E, 0x00, 0x00, 0x00, 0x00, 0x66, 0x34, 0x5F, 0x77,
	0x00, 0x00, 0x00, 0x00, 0x74, 0x34, 0x5F, 0x73,
};

/* 80399AB8-80399B08 004B+05 s=1 e=0 z=0  None .rodata    @stringBase0                                                 */
#pragma push
#pragma force_active on
#pragma section ".dead"
SECTION_DEAD char const* const stringBase_80399AB8 = "zelda_kanban_stone_a.blo";
SECTION_DEAD char const* const stringBase_80399AD1 = "zelda_kanban_stone_a.bck";
SECTION_DEAD char const* const stringBase_80399AEA = "zelda_kanban_stone_a.btk";
/* @stringBase0 padding */
SECTION_DEAD static char const* const pad_80399B03 = "\0\0\0\0";
#pragma pop

/* 803C1240-803C1298 0058+00 s=2 e=0 z=0  None .data      __vt__16dMsgScrnKanban_c                                     */
SECTION_DATA static void* __vt__16dMsgScrnKanban_c[22] = {
	(void*)NULL,
	(void*)NULL,
	(void*)draw__16dMsgScrnKanban_cFv,
	(void*)__dt__16dMsgScrnKanban_cFv,
	(void*)exec__16dMsgScrnKanban_cFv,
	(void*)multiDraw__14dMsgScrnBase_cFv,
	(void*)drawSelf__14dMsgScrnBase_cFv,
	(void*)setSelectString__14dMsgScrnBase_cFPcPcPc,
	(void*)setSelectRubyString__14dMsgScrnBase_cFPcPcPc,
	(void*)arwAnimeInit__14dMsgScrnBase_cFv,
	(void*)arwAnimeMove__14dMsgScrnBase_cFv,
	(void*)dotAnimeInit__14dMsgScrnBase_cFv,
	(void*)dotAnimeMove__14dMsgScrnBase_cFv,
	(void*)isSelect__14dMsgScrnBase_cFv,
	(void*)selectAnimeInit__14dMsgScrnBase_cFUcUcfUc,
	(void*)selectAnimeMove__14dMsgScrnBase_cFUcUcb,
	(void*)selectAnimeEnd__14dMsgScrnBase_cFv,
	(void*)fukiScale__16dMsgScrnKanban_cFf,
	(void*)fukiTrans__16dMsgScrnKanban_cFff,
	(void*)fukiAlpha__16dMsgScrnKanban_cFf,
	(void*)fontAlpha__14dMsgScrnBase_cFf,
	(void*)fukiPosCalc__14dMsgScrnBase_cFUc,
};

/* 80454CC0-80454CC4 0004+00 s=2 e=0 z=0  None .sdata2    @3944                                                        */
SECTION_SDATA2 static u8 lit_3944[4] = {
	0x00, 0x00, 0x00, 0x00,
};

/* 80454CC4-80454CC8 0004+00 s=3 e=0 z=0  None .sdata2    @3945                                                        */
SECTION_SDATA2 static u32 lit_3945 = 0x3F800000;

/* 80454CC8-80454CD0 0004+04 s=1 e=0 z=0  None .sdata2    @3946                                                        */
SECTION_SDATA2 static f32 lit_3946[1 + 1 /* padding */] = {
	6.0f / 5.0f,
	/* padding */
	0.0f,
};

/* 80244E38-8024534C 0514+00 s=0 e=1 z=0  None .text      __ct__16dMsgScrnKanban_cFP10JKRExpHeap                       */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm dMsgScrnKanban_c::dMsgScrnKanban_c(JKRExpHeap* param_0) {
	nofralloc
#include "asm/msg/scrn/d_msg_scrn_kanban/__ct__16dMsgScrnKanban_cFP10JKRExpHeap.s"
}
#pragma pop


/* 8024534C-80245528 01DC+00 s=1 e=0 z=0  None .text      __dt__16dMsgScrnKanban_cFv                                   */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm dMsgScrnKanban_c::~dMsgScrnKanban_c() {
	nofralloc
#include "asm/msg/scrn/d_msg_scrn_kanban/__dt__16dMsgScrnKanban_cFv.s"
}
#pragma pop


/* ############################################################################################## */
/* 80454CD0-80454CD8 0008+00 s=1 e=0 z=0  None .sdata2    @4033                                                        */
SECTION_SDATA2 static u8 lit_4033[8] = {
	0x43, 0x30, 0x00, 0x00, 0x80, 0x00, 0x00, 0x00,
};

/* 80245528-80245618 00F0+00 s=1 e=0 z=0  None .text      exec__16dMsgScrnKanban_cFv                                   */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void dMsgScrnKanban_c::exec() {
	nofralloc
#include "asm/msg/scrn/d_msg_scrn_kanban/exec__16dMsgScrnKanban_cFv.s"
}
#pragma pop


/* 80245618-802456A0 0088+00 s=1 e=0 z=0  None .text      draw__16dMsgScrnKanban_cFv                                   */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void dMsgScrnKanban_c::draw() {
	nofralloc
#include "asm/msg/scrn/d_msg_scrn_kanban/draw__16dMsgScrnKanban_cFv.s"
}
#pragma pop


/* 802456A0-80245754 00B4+00 s=1 e=0 z=0  None .text      fukiAlpha__16dMsgScrnKanban_cFf                              */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void dMsgScrnKanban_c::fukiAlpha(f32 param_0) {
	nofralloc
#include "asm/msg/scrn/d_msg_scrn_kanban/fukiAlpha__16dMsgScrnKanban_cFf.s"
}
#pragma pop


/* 80245754-80245758 0004+00 s=1 e=0 z=0  None .text      fukiScale__16dMsgScrnKanban_cFf                              */
void dMsgScrnKanban_c::fukiScale(f32 param_0) {
	/* empty function */
}


/* 80245758-8024575C 0004+00 s=1 e=0 z=0  None .text      fukiTrans__16dMsgScrnKanban_cFff                             */
void dMsgScrnKanban_c::fukiTrans(f32 param_0, f32 param_1) {
	/* empty function */
}


