// 
// Generated By: dol2asm
// Translation Unit: d/d_resorce
// 

#include "dolphin/types.h"

// 
// Forward References:
// 

extern "C" extern void __ct__11dRes_info_cFv();
extern "C" extern void __dt__11dRes_info_cFv();
extern "C" extern void set__11dRes_info_cFPCcPCcUcP7JKRHeap();
extern "C" extern void setAlpha__FP16J3DMaterialTable();
extern "C" extern void setIndirectTex__FP12J3DModelData();
extern "C" extern void setAlpha__FP12J3DModelData();
extern "C" extern void addWarpMaterial__FP12J3DModelData();
extern "C" extern void __ct__11J3DTevStageFRC15J3DTevStageInfo();
extern "C" extern void setTexMtx__14J3DTexGenBlockFUlP9J3DTexMtx();
extern "C" extern void onWarpMaterial__11dRes_info_cFP12J3DModelData();
extern "C" extern void offWarpMaterial__11dRes_info_cFP12J3DModelData();
extern "C" extern void setWarpSRT__11dRes_info_cFP12J3DModelDataRC4cXyzff();
extern "C" extern void loaderBasicBmd__11dRes_info_cFUlPv();
extern "C" extern void __dt__15J3DTevKColorAnmFv();
extern "C" extern void __ct__15J3DTevKColorAnmFv();
extern "C" extern void __dt__14J3DTevColorAnmFv();
extern "C" extern void __ct__14J3DTevColorAnmFv();
extern "C" extern void __dt__11J3DTexNoAnmFv();
extern "C" extern void __ct__11J3DTexNoAnmFv();
extern "C" extern void __dt__12J3DTexMtxAnmFv();
extern "C" extern void __ct__12J3DTexMtxAnmFv();
extern "C" extern void __dt__14J3DMatColorAnmFv();
extern "C" extern void __ct__14J3DMatColorAnmFv();
extern "C" extern void loadResource__11dRes_info_cFv();
extern "C" extern void __dt__18J3DAnmTransformKeyFv();
extern "C" extern void __dt__15J3DAnmTransformFv();
extern "C" extern void deleteArchiveRes__11dRes_info_cFv();
extern "C" extern void getArcHeader__FP10JKRArchive();
extern "C" extern void setRes__11dRes_info_cFP10JKRArchiveP7JKRHeap();
extern "C" extern void setRes__11dRes_info_cFv();
extern "C" extern void myGetMemBlockSize__FPv();
extern "C" extern void myGetMemBlockSize0__FPv();
extern "C" extern void dump_long__11dRes_info_cFP11dRes_info_ci();
extern "C" extern void dump__11dRes_info_cFP11dRes_info_ci();
extern "C" extern void __dt__14dRes_control_cFv();
extern "C" extern void setRes__14dRes_control_cFPCcP11dRes_info_ciPCcUcP7JKRHeap();
extern "C" extern void syncRes__14dRes_control_cFPCcP11dRes_info_ci();
extern "C" extern void deleteRes__14dRes_control_cFPCcP11dRes_info_ci();
extern "C" extern void getResInfo__14dRes_control_cFPCcP11dRes_info_ci();
extern "C" extern void newResInfo__14dRes_control_cFP11dRes_info_ci();
extern "C" extern void getResInfoLoaded__14dRes_control_cFPCcP11dRes_info_ci();
extern "C" extern void getRes__14dRes_control_cFPCclP11dRes_info_ci();
extern "C" extern void getRes__14dRes_control_cFPCcPCcP11dRes_info_ci();
extern "C" extern void getIDRes__14dRes_control_cFPCcUsP11dRes_info_ci();
extern "C" extern void syncAllRes__14dRes_control_cFP11dRes_info_ci();
extern "C" extern void setObjectRes__14dRes_control_cFPCcPvUlP7JKRHeap();
extern "C" extern void setStageRes__14dRes_control_cFPCcP7JKRHeap();
extern "C" extern void dump__14dRes_control_cFv();
extern "C" extern void getObjectResName2Index__14dRes_control_cFPCcPCc();
extern "C" extern void __dt__10J3DAnmBaseFv();
extern "C" extern void getKind__15J3DAnmTransformCFv();
extern "C" extern void __dt__18mDoExt_transAnmBasFv();
extern "C" extern void getKind__18J3DAnmTransformKeyCFv();
extern "C" extern void getTransform__18J3DAnmTransformKeyCFUsP16J3DTransformInfo();
extern "C" extern void calc__11J3DTexNoAnmCFPUs();
SECTION_RODATA extern const u8 l_texMtxInfo[100];
SECTION_RODATA extern const u8 data_803798A4[20];
SECTION_RODATA extern const u8 d_d_resorce__stringBase0[888];
SECTION_DATA extern void*lit_4017[8];
SECTION_DATA extern void*const __vt__10J3DAnmBase[4];
SECTION_DATA extern void*const __vt__15J3DAnmTransform[5];
SECTION_DATA extern void*const __vt__18mDoExt_transAnmBas[5];
SECTION_DATA extern void*const __vt__18J3DAnmTransformKey[5];
SECTION_DATA extern void*const __vt__11J3DTexNoAnm[3];
SECTION_SDATA extern u8 data_80450628[4];
SECTION_SDATA extern u8 data_8045062C[4];
SECTION_SDATA2 extern u8 data_80451DF0[8];
SECTION_SDATA2 extern f64 d_d_resorce__lit_4277;
SECTION_SDATA2 extern f32 d_d_resorce__lit_4333;

// 
// External References:
// 

extern "C" extern void OSReport_Error();
extern "C" extern void OSReport_Warning();
extern "C" extern void mDoMtx_YrotM__FPA4_fs();
extern "C" extern void setTevStageInfo__11J3DTevStageFRC15J3DTevStageInfo();
extern "C" extern void mDoExt_getGameHeap__Fv();
extern "C" extern void mDoExt_createSolidHeapToCurrent__FUlP7JKRHeapUl();
extern "C" extern void mDoExt_createSolidHeapFromGameToCurrent__FUlUl();
extern "C" extern void mDoExt_adjustSolidHeap__FP12JKRSolidHeap();
extern "C" extern void mDoExt_destroySolidHeap__FP12JKRSolidHeap();
extern "C" extern void mDoExt_restoreCurrentHeap__Fv();
extern "C" extern void mDoExt_resIDToIndex__FP10JKRArchiveUs();
extern "C" extern void create__24mDoDvdThd_mountArchive_cFPCcUcP7JKRHeap();
extern "C" extern void ConvDzb__4cBgSFPv();
extern "C" extern void initKCollision__8dBgWKColFPv();
extern "C" extern void getSize__7JKRHeapFPvP7JKRHeap();
extern "C" extern void findFromRoot__7JKRHeapFPv();
extern "C" extern void __nw__FUl();
extern "C" extern void __nwa__FUl();
extern "C" extern void __dl__FPv();
extern "C" extern void getIdxResource__10JKRArchiveFUl();
extern "C" extern void getFileAttribute__10JKRArchiveCFUl();
extern "C" extern void findIdxResource__10JKRArchiveCFUl();
extern "C" extern void findNameResource__10JKRArchiveCFPCc();
extern "C" extern void __ct__13JKRMemArchiveFPvUl15JKRMemBreakFlag();
extern "C" extern void getName__10JUTNameTabCFUs();
extern "C" extern void JUTReportConsole_f();
extern "C" extern void addResTIMG__10J3DTextureFUsPC7ResTIMG();
extern "C" extern void addTexMtxIndexInDL__8J3DShapeF7_GXAttrUl();
extern "C" extern void addTexMtxIndexInVcd__8J3DShapeF7_GXAttr();
extern "C" extern void __as__13J3DTexMtxInfoFRC13J3DTexMtxInfo();
extern "C" extern void newSharedDisplayList__12J3DModelDataFUl();
extern "C" extern void makeSharedDL__12J3DModelDataFv();
extern "C" extern void simpleCalcMaterial__12J3DModelDataFUsPA4_f();
extern "C" extern void __ct__15J3DAnmTransformFsPfPsPf();
extern "C" extern void calcTransform__18J3DAnmTransformKeyCFfUsP16J3DTransformInfo();
extern "C" extern void getTexNo__16J3DAnmTexPatternCFUsPUs();
extern "C" extern void initialize__14J3DMaterialAnmFv();
extern "C" extern void load__24J3DClusterLoaderDataBaseFPCv();
extern "C" extern void load__22J3DModelLoaderDataBaseFPCvUl();
extern "C" extern void load__20J3DAnmLoaderDataBaseFPCv24J3DAnmLoaderDataBaseFlag();
extern "C" extern void setResource__20J3DAnmLoaderDataBaseFP10J3DAnmBasePCv();
extern "C" extern void DCStoreRangeNoSync();
extern "C" extern void OSLockMutex();
extern "C" extern void OSUnlockMutex();
extern "C" extern void PSMTXConcat();
extern "C" extern void PSMTXTrans();
extern "C" extern void __destroy_arr();
extern "C" extern void __construct_array();
extern "C" extern void _savegpr_20();
extern "C" extern void _savegpr_24();
extern "C" extern void _savegpr_25();
extern "C" extern void _savegpr_26();
extern "C" extern void _savegpr_27();
extern "C" extern void _savegpr_28();
extern "C" extern void _savegpr_29();
extern "C" extern void _restgpr_20();
extern "C" extern void _restgpr_24();
extern "C" extern void _restgpr_25();
extern "C" extern void _restgpr_26();
extern "C" extern void _restgpr_27();
extern "C" extern void _restgpr_28();
extern "C" extern void _restgpr_29();
extern "C" extern void memcmp();
extern "C" extern void snprintf();
extern "C" extern void strncpy();
extern "C" extern void strlen();
extern "C" extern void stricmp();
SECTION_RODATA extern const u8 j3dDefaultMtx[48];
SECTION_DATA extern void*const __vt__14J3DMaterialAnm[4];
SECTION_BSS extern u8 now__14mDoMtx_stack_c[48];
SECTION_BSS extern u8 g_dComIfG_gameInfo[122384];
SECTION_BSS extern u8 g_env_light[4880];
SECTION_SBSS extern u8 mFrameBufferTimg__13mDoGph_gInf_c[4];
SECTION_SBSS extern u8 mZbufferTimg__13mDoGph_gInf_c[4];
SECTION_SBSS extern u8 sCurrentHeap__7JKRHeap[4];
SECTION_SDATA2 extern u8 j3dDefaultTevSwapMode[4];

// 
// Declarations:
// 

/* 8003A260-8003A280 0020+00 .text      __ct__11dRes_info_cFv                                        */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
ASM_FUNCTION(__ct__11dRes_info_cFv) {
	nofralloc
#include "asm/d/d_resorce/__ct__11dRes_info_cFv.s"
}
#pragma pop


/* 8003A280-8003A348 00C8+00 .text      __dt__11dRes_info_cFv                                        */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
ASM_FUNCTION(__dt__11dRes_info_cFv) {
	nofralloc
#include "asm/d/d_resorce/__dt__11dRes_info_cFv.s"
}
#pragma pop


/* ############################################################################################## */
/* 80379840-803798A4 0064+00 .rodata    l_texMtxInfo                                                 */
SECTION_RODATA const u8 l_texMtxInfo[100] = {
	0x00, 0x08, 0x00, 0x00, 0x3F, 0x00, 0x00, 0x00, 0x3F, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
	0x3D, 0xCC, 0xCC, 0xCD, 0x3D, 0xCC, 0xCC, 0xCD, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
	0x00, 0x00, 0x00, 0x00, 0x3F, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
	0x3F, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x3F, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
	0x3F, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
	0x3F, 0x80, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
	0x3F, 0x80, 0x00, 0x00,
};

/* 803798A4-803798B8 0014+00 .rodata    l_tevStageInfo$3774                                          */
SECTION_RODATA const u8 data_803798A4[20] = {
	0x05, 0x0F, 0x08, 0x00, 0x0F, 0x00, 0x00, 0x00, 0x01, 0x00, 0x07, 0x04, 0x00, 0x07, 0x00, 0x00,
	0x00, 0x01, 0x00, 0x00,
};

/* 803798B8-80379C30 0373+05 .rodata    @stringBase0                                                 */
SECTION_RODATA const u8 d_d_resorce__stringBase0[888] = {
	0x25, 0x73, 0x25, 0x73, 0x2E, 0x61, 0x72, 0x63, 0x00, 0x66, 0x62, 0x74, 0x65, 0x78, 0x5F, 0x64,
	0x75, 0x6D, 0x6D, 0x79, 0x00, 0x64, 0x75, 0x6D, 0x6D, 0x79, 0x00, 0x5A, 0x62, 0x75, 0x66, 0x66,
	0x65, 0x72, 0x00, 0x41, 0x6C, 0x77, 0x61, 0x79, 0x73, 0x00, 0x3C, 0x25, 0x73, 0x2E, 0x61, 0x72,
	0x63, 0x3E, 0x20, 0x73, 0x65, 0x74, 0x52, 0x65, 0x73, 0x3A, 0x20, 0x72, 0x65, 0x73, 0x20, 0x70,
	0x6F, 0x69, 0x6E, 0x74, 0x65, 0x72, 0x20, 0x62, 0x75, 0x66, 0x66, 0x65, 0x72, 0x20, 0x6E, 0x6F,
	0x74, 0x68, 0x69, 0x6E, 0x67, 0x20, 0x21, 0x21, 0x0A, 0x00, 0x3C, 0x25, 0x73, 0x3E, 0x20, 0x72,
	0x65, 0x73, 0x20, 0x3D, 0x3D, 0x20, 0x4E, 0x55, 0x4C, 0x4C, 0x20, 0x21, 0x21, 0x0A, 0x00, 0x3C,
	0x25, 0x73, 0x2E, 0x61, 0x72, 0x63, 0x3E, 0x20, 0x73, 0x65, 0x74, 0x52, 0x65, 0x73, 0x3A, 0x20,
	0x61, 0x72, 0x63, 0x68, 0x69, 0x76, 0x65, 0x20, 0x6D, 0x6F, 0x75, 0x6E, 0x74, 0x20, 0x65, 0x72,
	0x72, 0x6F, 0x72, 0x20, 0x21, 0x21, 0x0A, 0x00, 0x3C, 0x25, 0x73, 0x2E, 0x61, 0x72, 0x63, 0x3E,
	0x20, 0x6D, 0x44, 0x4D, 0x43, 0x6F, 0x6D, 0x6D, 0x61, 0x6E, 0x64, 0x73, 0x65, 0x74, 0x52, 0x65,
	0x73, 0x3A, 0x20, 0x63, 0x61, 0x6E, 0x27, 0x74, 0x20, 0x61, 0x6C, 0x6C, 0x6F, 0x63, 0x20, 0x6D,
	0x65, 0x6D, 0x6F, 0x72, 0x79, 0x0A, 0x00, 0x25, 0x35, 0x2E, 0x31, 0x66, 0x20, 0x25, 0x35, 0x78,
	0x20, 0x25, 0x35, 0x2E, 0x31, 0x66, 0x20, 0x25, 0x35, 0x78, 0x20, 0x25, 0x33, 0x64, 0x20, 0x25,
	0x73, 0x0A, 0x00, 0x64, 0x52, 0x65, 0x73, 0x5F, 0x69, 0x6E, 0x66, 0x6F, 0x5F, 0x63, 0x3A, 0x3A,
	0x64, 0x75, 0x6D, 0x70, 0x5F, 0x6C, 0x6F, 0x6E, 0x67, 0x20, 0x25, 0x30, 0x38, 0x78, 0x20, 0x25,
	0x64, 0x0A, 0x00, 0x4E, 0x6F, 0x20, 0x43, 0x6F, 0x6D, 0x6D, 0x61, 0x6E, 0x64, 0x20, 0x41, 0x72,
	0x63, 0x68, 0x69, 0x76, 0x65, 0x20, 0x20, 0x41, 0x72, 0x63, 0x48, 0x65, 0x61, 0x64, 0x65, 0x72,
	0x28, 0x73, 0x69, 0x7A, 0x65, 0x29, 0x20, 0x53, 0x6F, 0x6C, 0x69, 0x64, 0x48, 0x65, 0x61, 0x70,
	0x28, 0x73, 0x69, 0x7A, 0x65, 0x29, 0x20, 0x52, 0x65, 0x73, 0x6F, 0x75, 0x72, 0x63, 0x65, 0x20,
	0x43, 0x6E, 0x74, 0x20, 0x41, 0x72, 0x63, 0x68, 0x69, 0x76, 0x65, 0x4E, 0x61, 0x6D, 0x65, 0x0A,
	0x00, 0x25, 0x32, 0x64, 0x20, 0x25, 0x30, 0x38, 0x78, 0x20, 0x25, 0x30, 0x38, 0x78, 0x20, 0x25,
	0x30, 0x38, 0x78, 0x28, 0x25, 0x36, 0x78, 0x29, 0x20, 0x25, 0x30, 0x38, 0x78, 0x28, 0x25, 0x35,
	0x78, 0x29, 0x20, 0x25, 0x30, 0x38, 0x78, 0x20, 0x25, 0x33, 0x64, 0x20, 0x25, 0x73, 0x0A, 0x00,
	0x64, 0x52, 0x65, 0x73, 0x5F, 0x69, 0x6E, 0x66, 0x6F, 0x5F, 0x63, 0x3A, 0x3A, 0x64, 0x75, 0x6D,
	0x70, 0x20, 0x25, 0x30, 0x38, 0x78, 0x20, 0x25, 0x64, 0x0A, 0x00, 0x4E, 0x6F, 0x20, 0x41, 0x72,
	0x63, 0x68, 0x69, 0x76, 0x65, 0x53, 0x69, 0x7A, 0x65, 0x28, 0x4B, 0x42, 0x29, 0x20, 0x53, 0x6F,
	0x6C, 0x69, 0x64, 0x48, 0x65, 0x61, 0x70, 0x53, 0x69, 0x7A, 0x65, 0x28, 0x4B, 0x42, 0x29, 0x20,
	0x43, 0x6E, 0x74, 0x20, 0x41, 0x72, 0x63, 0x68, 0x69, 0x76, 0x65, 0x4E, 0x61, 0x6D, 0x65, 0x0A,
	0x00, 0x25, 0x32, 0x64, 0x20, 0x25, 0x36, 0x2E, 0x31, 0x66, 0x20, 0x25, 0x36, 0x78, 0x20, 0x25,
	0x36, 0x2E, 0x31, 0x66, 0x20, 0x25, 0x36, 0x78, 0x20, 0x25, 0x33, 0x64, 0x20, 0x25, 0x73, 0x0A,
	0x00, 0x2D, 0x2D, 0x2D, 0x2D, 0x2D, 0x2D, 0x2D, 0x2D, 0x2D, 0x2D, 0x2D, 0x2D, 0x2D, 0x2D, 0x2D,
	0x2D, 0x2D, 0x2D, 0x2D, 0x2D, 0x2D, 0x2D, 0x2D, 0x2D, 0x2D, 0x2D, 0x2D, 0x2D, 0x2D, 0x2D, 0x2D,
	0x2D, 0x2D, 0x2D, 0x2D, 0x2D, 0x2D, 0x2D, 0x2D, 0x2D, 0x2D, 0x2D, 0x2D, 0x2D, 0x2D, 0x2D, 0x0A,
	0x20, 0x20, 0x20, 0x25, 0x36, 0x2E, 0x31, 0x66, 0x20, 0x25, 0x36, 0x78, 0x20, 0x25, 0x36, 0x2E,
	0x31, 0x66, 0x20, 0x25, 0x36, 0x78, 0x20, 0x20, 0x20, 0x54, 0x6F, 0x74, 0x61, 0x6C, 0x0A, 0x0A,
	0x00, 0x3C, 0x25, 0x73, 0x2E, 0x61, 0x72, 0x63, 0x3E, 0x20, 0x64, 0x52, 0x65, 0x73, 0x5F, 0x63,
	0x6F, 0x6E, 0x74, 0x72, 0x6F, 0x6C, 0x5F, 0x63, 0x3A, 0x3A, 0x73, 0x65, 0x74, 0x52, 0x65, 0x73,
	0x3A, 0x20, 0x8B, 0xF3, 0x82, 0xAB, 0x83, 0x8A, 0x83, 0x5C, 0x81, 0x5B, 0x83, 0x58, 0x8F, 0xEE,
	0x95, 0xF1, 0x83, 0x7C, 0x83, 0x43, 0x83, 0x93, 0x83, 0x5E, 0x82, 0xAA, 0x82, 0xA0, 0x82, 0xE8,
	0x82, 0xDC, 0x82, 0xB9, 0x82, 0xF1, 0x0A, 0x00, 0x3C, 0x25, 0x73, 0x2E, 0x61, 0x72, 0x63, 0x3E,
	0x20, 0x64, 0x52, 0x65, 0x73, 0x5F, 0x63, 0x6F, 0x6E, 0x74, 0x72, 0x6F, 0x6C, 0x5F, 0x63, 0x3A,
	0x3A, 0x73, 0x65, 0x74, 0x52, 0x65, 0x73, 0x3A, 0x20, 0x72, 0x65, 0x73, 0x20, 0x69, 0x6E, 0x66,
	0x6F, 0x20, 0x73, 0x65, 0x74, 0x20, 0x65, 0x72, 0x72, 0x6F, 0x72, 0x20, 0x21, 0x21, 0x0A, 0x00,
	0x3C, 0x25, 0x73, 0x2E, 0x61, 0x72, 0x63, 0x3E, 0x20, 0x67, 0x65, 0x74, 0x52, 0x65, 0x73, 0x3A,
	0x20, 0x72, 0x65, 0x73, 0x20, 0x64, 0x75, 0x72, 0x69, 0x6E, 0x67, 0x20, 0x72, 0x65, 0x61, 0x64,
	0x69, 0x6E, 0x67, 0x20, 0x21, 0x21, 0x0A, 0x00, 0x3C, 0x25, 0x73, 0x2E, 0x61, 0x72, 0x63, 0x3E,
	0x20, 0x67, 0x65, 0x74, 0x52, 0x65, 0x73, 0x3A, 0x20, 0x72, 0x65, 0x73, 0x20, 0x69, 0x6E, 0x64,
	0x65, 0x78, 0x20, 0x6F, 0x76, 0x65, 0x72, 0x20, 0x21, 0x21, 0x20, 0x69, 0x6E, 0x64, 0x65, 0x78,
	0x3D, 0x25, 0x64, 0x20, 0x63, 0x6F, 0x75, 0x6E, 0x74, 0x3D, 0x25, 0x64, 0x0A, 0x00, 0x00, 0x2F,
	0x72, 0x65, 0x73, 0x2F, 0x53, 0x74, 0x61, 0x67, 0x65, 0x2F, 0x25, 0x73, 0x2F, 0x00, 0x0A, 0x64,
	0x52, 0x65, 0x73, 0x5F, 0x63, 0x6F, 0x6E, 0x74, 0x72, 0x6F, 0x6C, 0x5F, 0x63, 0x3A, 0x3A, 0x64,
	0x75, 0x6D, 0x70, 0x20, 0x6D, 0x4F, 0x62, 0x6A, 0x65, 0x63, 0x74, 0x49, 0x6E, 0x66, 0x6F, 0x0A,
	0x00, 0x0A, 0x64, 0x52, 0x65, 0x73, 0x5F, 0x63, 0x6F, 0x6E, 0x74, 0x72, 0x6F, 0x6C, 0x5F, 0x63,
	0x3A, 0x3A, 0x64, 0x75, 0x6D, 0x70, 0x20, 0x6D, 0x53, 0x74, 0x61, 0x67, 0x65, 0x49, 0x6E, 0x66,
	0x6F, 0x0A, 0x00,
	/* padding */
	0x00, 0x00, 0x00, 0x00, 0x00,
};

/* 8003A348-8003A3F0 00A8+00 .text      set__11dRes_info_cFPCcPCcUcP7JKRHeap                         */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
ASM_FUNCTION(set__11dRes_info_cFPCcPCcUcP7JKRHeap) {
	nofralloc
#include "asm/d/d_resorce/set__11dRes_info_cFPCcPCcUcP7JKRHeap.s"
}
#pragma pop


/* 8003A3F0-8003A490 00A0+00 .text      setAlpha__FP16J3DMaterialTable                               */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
ASM_FUNCTION(setAlpha__FP16J3DMaterialTable) {
	nofralloc
#include "asm/d/d_resorce/setAlpha__FP16J3DMaterialTable.s"
}
#pragma pop


/* 8003A490-8003A81C 038C+00 .text      setIndirectTex__FP12J3DModelData                             */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
ASM_FUNCTION(setIndirectTex__FP12J3DModelData) {
	nofralloc
#include "asm/d/d_resorce/setIndirectTex__FP12J3DModelData.s"
}
#pragma pop


/* 8003A81C-8003A840 0024+00 .text      setAlpha__FP12J3DModelData                                   */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
ASM_FUNCTION(setAlpha__FP12J3DModelData) {
	nofralloc
#include "asm/d/d_resorce/setAlpha__FP12J3DModelData.s"
}
#pragma pop


/* ############################################################################################## */
/* 80450628-8045062C 0004+00 .sdata     l_texCoordInfo$3772                                          */
u8 data_80450628[4] = {
	0x00, 0x00, 0x27, 0x00,
};

/* 8045062C-80450630 0004+00 .sdata     l_tevOrderInfo$3773                                          */
u8 data_8045062C[4] = {
	0x00, 0x03, 0xFF, 0x00,
};

/* 80451DF0-80451DF8 0008+00 .sdata2    l_alphaCompInfo$3775                                         */
u8 data_80451DF0[8] = {
	0x04, 0x80, 0x00, 0x03, 0xFF, 0x00, 0x00, 0x00,
};

/* 8003A840-8003AACC 028C+00 .text      addWarpMaterial__FP12J3DModelData                            */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
ASM_FUNCTION(addWarpMaterial__FP12J3DModelData) {
	nofralloc
#include "asm/d/d_resorce/addWarpMaterial__FP12J3DModelData.s"
}
#pragma pop


/* 8003AACC-8003AB2C 0060+00 .text      __ct__11J3DTevStageFRC15J3DTevStageInfo                      */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
ASM_FUNCTION(__ct__11J3DTevStageFRC15J3DTevStageInfo) {
	nofralloc
#include "asm/d/d_resorce/__ct__11J3DTevStageFRC15J3DTevStageInfo.s"
}
#pragma pop


/* 8003AB2C-8003AB30 0004+00 .text      setTexMtx__14J3DTexGenBlockFUlP9J3DTexMtx                    */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
ASM_FUNCTION(setTexMtx__14J3DTexGenBlockFUlP9J3DTexMtx) {
	nofralloc
#include "asm/d/d_resorce/setTexMtx__14J3DTexGenBlockFUlP9J3DTexMtx.s"
}
#pragma pop


/* 8003AB30-8003AC1C 00EC+00 .text      onWarpMaterial__11dRes_info_cFP12J3DModelData                */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
ASM_FUNCTION(onWarpMaterial__11dRes_info_cFP12J3DModelData) {
	nofralloc
#include "asm/d/d_resorce/onWarpMaterial__11dRes_info_cFP12J3DModelData.s"
}
#pragma pop


/* 8003AC1C-8003AD08 00EC+00 .text      offWarpMaterial__11dRes_info_cFP12J3DModelData               */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
ASM_FUNCTION(offWarpMaterial__11dRes_info_cFP12J3DModelData) {
	nofralloc
#include "asm/d/d_resorce/offWarpMaterial__11dRes_info_cFP12J3DModelData.s"
}
#pragma pop


/* 8003AD08-8003AE14 010C+00 .text      setWarpSRT__11dRes_info_cFP12J3DModelDataRC4cXyzff           */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
ASM_FUNCTION(setWarpSRT__11dRes_info_cFP12J3DModelDataRC4cXyzff) {
	nofralloc
#include "asm/d/d_resorce/setWarpSRT__11dRes_info_cFP12J3DModelDataRC4cXyzff.s"
}
#pragma pop


/* ############################################################################################## */
/* 803A7C18-803A7C38 0020+00 .data      @4017                                                        */
void* lit_4017[8] = {
	(void*)(((char*)loaderBasicBmd__11dRes_info_cFUlPv)+0x180),
	(void*)(((char*)loaderBasicBmd__11dRes_info_cFUlPv)+0x130),
	(void*)(((char*)loaderBasicBmd__11dRes_info_cFUlPv)+0x13C),
	(void*)(((char*)loaderBasicBmd__11dRes_info_cFUlPv)+0x148),
	(void*)(((char*)loaderBasicBmd__11dRes_info_cFUlPv)+0x154),
	(void*)(((char*)loaderBasicBmd__11dRes_info_cFUlPv)+0x160),
	(void*)(((char*)loaderBasicBmd__11dRes_info_cFUlPv)+0x16C),
	(void*)(((char*)loaderBasicBmd__11dRes_info_cFUlPv)+0x178),
};

/* 8003AE14-8003B150 033C+00 .text      loaderBasicBmd__11dRes_info_cFUlPv                           */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
ASM_FUNCTION(loaderBasicBmd__11dRes_info_cFUlPv) {
	nofralloc
#include "asm/d/d_resorce/loaderBasicBmd__11dRes_info_cFUlPv.s"
}
#pragma pop


/* 8003B150-8003B18C 003C+00 .text      __dt__15J3DTevKColorAnmFv                                    */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
ASM_FUNCTION(__dt__15J3DTevKColorAnmFv) {
	nofralloc
#include "asm/d/d_resorce/__dt__15J3DTevKColorAnmFv.s"
}
#pragma pop


/* 8003B18C-8003B1A4 0018+00 .text      __ct__15J3DTevKColorAnmFv                                    */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
ASM_FUNCTION(__ct__15J3DTevKColorAnmFv) {
	nofralloc
#include "asm/d/d_resorce/__ct__15J3DTevKColorAnmFv.s"
}
#pragma pop


/* 8003B1A4-8003B1E0 003C+00 .text      __dt__14J3DTevColorAnmFv                                     */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
ASM_FUNCTION(__dt__14J3DTevColorAnmFv) {
	nofralloc
#include "asm/d/d_resorce/__dt__14J3DTevColorAnmFv.s"
}
#pragma pop


/* 8003B1E0-8003B1F8 0018+00 .text      __ct__14J3DTevColorAnmFv                                     */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
ASM_FUNCTION(__ct__14J3DTevColorAnmFv) {
	nofralloc
#include "asm/d/d_resorce/__ct__14J3DTevColorAnmFv.s"
}
#pragma pop


/* ############################################################################################## */
/* 803A7C38-803A7C48 0010+00 .data      __vt__10J3DAnmBase                                           */
void* const __vt__10J3DAnmBase[4] = {
	NULL, /* RTTI */
	NULL,
	(void*)__dt__10J3DAnmBaseFv,
	NULL,
};

/* 803A7C48-803A7C5C 0014+00 .data      __vt__15J3DAnmTransform                                      */
void* const __vt__15J3DAnmTransform[5] = {
	NULL, /* RTTI */
	NULL,
	(void*)__dt__15J3DAnmTransformFv,
	(void*)getKind__15J3DAnmTransformCFv,
	NULL,
};

/* 803A7C5C-803A7C70 0014+00 .data      __vt__18mDoExt_transAnmBas                                   */
void* const __vt__18mDoExt_transAnmBas[5] = {
	NULL, /* RTTI */
	NULL,
	(void*)__dt__18mDoExt_transAnmBasFv,
	(void*)getKind__18J3DAnmTransformKeyCFv,
	(void*)getTransform__18J3DAnmTransformKeyCFUsP16J3DTransformInfo,
};

/* 803A7C70-803A7C84 0014+00 .data      __vt__18J3DAnmTransformKey                                   */
void* const __vt__18J3DAnmTransformKey[5] = {
	NULL, /* RTTI */
	NULL,
	(void*)__dt__18J3DAnmTransformKeyFv,
	(void*)getKind__18J3DAnmTransformKeyCFv,
	(void*)getTransform__18J3DAnmTransformKeyCFUsP16J3DTransformInfo,
};

/* 803A7C84-803A7C90 000C+00 .data      __vt__11J3DTexNoAnm                                          */
void* const __vt__11J3DTexNoAnm[3] = {
	NULL, /* RTTI */
	NULL,
	(void*)calc__11J3DTexNoAnmCFPUs,
};

/* 8003B1F8-8003B240 0048+00 .text      __dt__11J3DTexNoAnmFv                                        */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
ASM_FUNCTION(__dt__11J3DTexNoAnmFv) {
	nofralloc
#include "asm/d/d_resorce/__dt__11J3DTexNoAnmFv.s"
}
#pragma pop


/* 8003B240-8003B264 0024+00 .text      __ct__11J3DTexNoAnmFv                                        */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
ASM_FUNCTION(__ct__11J3DTexNoAnmFv) {
	nofralloc
#include "asm/d/d_resorce/__ct__11J3DTexNoAnmFv.s"
}
#pragma pop


/* 8003B264-8003B2A0 003C+00 .text      __dt__12J3DTexMtxAnmFv                                       */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
ASM_FUNCTION(__dt__12J3DTexMtxAnmFv) {
	nofralloc
#include "asm/d/d_resorce/__dt__12J3DTexMtxAnmFv.s"
}
#pragma pop


/* 8003B2A0-8003B2B8 0018+00 .text      __ct__12J3DTexMtxAnmFv                                       */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
ASM_FUNCTION(__ct__12J3DTexMtxAnmFv) {
	nofralloc
#include "asm/d/d_resorce/__ct__12J3DTexMtxAnmFv.s"
}
#pragma pop


/* 8003B2B8-8003B2F4 003C+00 .text      __dt__14J3DMatColorAnmFv                                     */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
ASM_FUNCTION(__dt__14J3DMatColorAnmFv) {
	nofralloc
#include "asm/d/d_resorce/__dt__14J3DMatColorAnmFv.s"
}
#pragma pop


/* 8003B2F4-8003B30C 0018+00 .text      __ct__14J3DMatColorAnmFv                                     */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
ASM_FUNCTION(__ct__14J3DMatColorAnmFv) {
	nofralloc
#include "asm/d/d_resorce/__ct__14J3DMatColorAnmFv.s"
}
#pragma pop


/* 8003B30C-8003B8D0 05C4+00 .text      loadResource__11dRes_info_cFv                                */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
ASM_FUNCTION(loadResource__11dRes_info_cFv) {
	nofralloc
#include "asm/d/d_resorce/loadResource__11dRes_info_cFv.s"
}
#pragma pop


/* 8003B8D0-8003B93C 006C+00 .text      __dt__18J3DAnmTransformKeyFv                                 */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
ASM_FUNCTION(__dt__18J3DAnmTransformKeyFv) {
	nofralloc
#include "asm/d/d_resorce/__dt__18J3DAnmTransformKeyFv.s"
}
#pragma pop


/* 8003B93C-8003B998 005C+00 .text      __dt__15J3DAnmTransformFv                                    */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
ASM_FUNCTION(__dt__15J3DAnmTransformFv) {
	nofralloc
#include "asm/d/d_resorce/__dt__15J3DAnmTransformFv.s"
}
#pragma pop


/* 8003B998-8003BA9C 0104+00 .text      deleteArchiveRes__11dRes_info_cFv                            */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
ASM_FUNCTION(deleteArchiveRes__11dRes_info_cFv) {
	nofralloc
#include "asm/d/d_resorce/deleteArchiveRes__11dRes_info_cFv.s"
}
#pragma pop


/* 8003BA9C-8003BAC4 0028+00 .text      getArcHeader__FP10JKRArchive                                 */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
ASM_FUNCTION(getArcHeader__FP10JKRArchive) {
	nofralloc
#include "asm/d/d_resorce/getArcHeader__FP10JKRArchive.s"
}
#pragma pop


/* 8003BAC4-8003BAF8 0034+00 .text      setRes__11dRes_info_cFP10JKRArchiveP7JKRHeap                 */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
ASM_FUNCTION(setRes__11dRes_info_cFP10JKRArchiveP7JKRHeap) {
	nofralloc
#include "asm/d/d_resorce/setRes__11dRes_info_cFP10JKRArchiveP7JKRHeap.s"
}
#pragma pop


/* 8003BAF8-8003BC98 01A0+00 .text      setRes__11dRes_info_cFv                                      */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
ASM_FUNCTION(setRes__11dRes_info_cFv) {
	nofralloc
#include "asm/d/d_resorce/setRes__11dRes_info_cFv.s"
}
#pragma pop


/* 8003BC98-8003BD00 0068+00 .text      myGetMemBlockSize__FPv                                       */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
ASM_FUNCTION(myGetMemBlockSize__FPv) {
	nofralloc
#include "asm/d/d_resorce/myGetMemBlockSize__FPv.s"
}
#pragma pop


/* 8003BD00-8003BD2C 002C+00 .text      myGetMemBlockSize0__FPv                                      */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
ASM_FUNCTION(myGetMemBlockSize0__FPv) {
	nofralloc
#include "asm/d/d_resorce/myGetMemBlockSize0__FPv.s"
}
#pragma pop


/* 8003BD2C-8003BE38 010C+00 .text      dump_long__11dRes_info_cFP11dRes_info_ci                     */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
ASM_FUNCTION(dump_long__11dRes_info_cFP11dRes_info_ci) {
	nofralloc
#include "asm/d/d_resorce/dump_long__11dRes_info_cFP11dRes_info_ci.s"
}
#pragma pop


/* ############################################################################################## */
/* 80451DF8-80451E00 0008+00 .sdata2    @4277                                                        */
f64 d_d_resorce__lit_4277 = 4503601774854144.0 /* cast s32 to float */;

/* 80451E00-80451E08 0004+04 .sdata2    @4333                                                        */
f32 d_d_resorce__lit_4333 = 0.0009765625f;
/* padding 4 bytes */

/* 8003BE38-8003BFB0 0178+00 .text      dump__11dRes_info_cFP11dRes_info_ci                          */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
ASM_FUNCTION(dump__11dRes_info_cFP11dRes_info_ci) {
	nofralloc
#include "asm/d/d_resorce/dump__11dRes_info_cFP11dRes_info_ci.s"
}
#pragma pop


/* 8003BFB0-8003C078 00C8+00 .text      __dt__14dRes_control_cFv                                     */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
ASM_FUNCTION(__dt__14dRes_control_cFv) {
	nofralloc
#include "asm/d/d_resorce/__dt__14dRes_control_cFv.s"
}
#pragma pop


/* 8003C078-8003C160 00E8+00 .text      setRes__14dRes_control_cFPCcP11dRes_info_ciPCcUcP7JKRHeap    */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
ASM_FUNCTION(setRes__14dRes_control_cFPCcP11dRes_info_ciPCcUcP7JKRHeap) {
	nofralloc
#include "asm/d/d_resorce/setRes__14dRes_control_cFPCcP11dRes_info_ciPCcUcP7JKRHeap.s"
}
#pragma pop


/* 8003C160-8003C194 0034+00 .text      syncRes__14dRes_control_cFPCcP11dRes_info_ci                 */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
ASM_FUNCTION(syncRes__14dRes_control_cFPCcP11dRes_info_ci) {
	nofralloc
#include "asm/d/d_resorce/syncRes__14dRes_control_cFPCcP11dRes_info_ci.s"
}
#pragma pop


/* 8003C194-8003C1E4 0050+00 .text      deleteRes__14dRes_control_cFPCcP11dRes_info_ci               */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
ASM_FUNCTION(deleteRes__14dRes_control_cFPCcP11dRes_info_ci) {
	nofralloc
#include "asm/d/d_resorce/deleteRes__14dRes_control_cFPCcP11dRes_info_ci.s"
}
#pragma pop


/* 8003C1E4-8003C260 007C+00 .text      getResInfo__14dRes_control_cFPCcP11dRes_info_ci              */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
ASM_FUNCTION(getResInfo__14dRes_control_cFPCcP11dRes_info_ci) {
	nofralloc
#include "asm/d/d_resorce/getResInfo__14dRes_control_cFPCcP11dRes_info_ci.s"
}
#pragma pop


/* 8003C260-8003C288 0028+00 .text      newResInfo__14dRes_control_cFP11dRes_info_ci                 */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
ASM_FUNCTION(newResInfo__14dRes_control_cFP11dRes_info_ci) {
	nofralloc
#include "asm/d/d_resorce/newResInfo__14dRes_control_cFP11dRes_info_ci.s"
}
#pragma pop


/* 8003C288-8003C2EC 0064+00 .text      getResInfoLoaded__14dRes_control_cFPCcP11dRes_info_ci        */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
ASM_FUNCTION(getResInfoLoaded__14dRes_control_cFPCcP11dRes_info_ci) {
	nofralloc
#include "asm/d/d_resorce/getResInfoLoaded__14dRes_control_cFPCcP11dRes_info_ci.s"
}
#pragma pop


/* 8003C2EC-8003C37C 0090+00 .text      getRes__14dRes_control_cFPCclP11dRes_info_ci                 */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
ASM_FUNCTION(getRes__14dRes_control_cFPCclP11dRes_info_ci) {
	nofralloc
#include "asm/d/d_resorce/getRes__14dRes_control_cFPCclP11dRes_info_ci.s"
}
#pragma pop


/* 8003C37C-8003C400 0084+00 .text      getRes__14dRes_control_cFPCcPCcP11dRes_info_ci               */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
ASM_FUNCTION(getRes__14dRes_control_cFPCcPCcP11dRes_info_ci) {
	nofralloc
#include "asm/d/d_resorce/getRes__14dRes_control_cFPCcPCcP11dRes_info_ci.s"
}
#pragma pop


/* 8003C400-8003C470 0070+00 .text      getIDRes__14dRes_control_cFPCcUsP11dRes_info_ci              */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
ASM_FUNCTION(getIDRes__14dRes_control_cFPCcUsP11dRes_info_ci) {
	nofralloc
#include "asm/d/d_resorce/getIDRes__14dRes_control_cFPCcUsP11dRes_info_ci.s"
}
#pragma pop


/* 8003C470-8003C4E4 0074+00 .text      syncAllRes__14dRes_control_cFP11dRes_info_ci                 */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
ASM_FUNCTION(syncAllRes__14dRes_control_cFP11dRes_info_ci) {
	nofralloc
#include "asm/d/d_resorce/syncAllRes__14dRes_control_cFP11dRes_info_ci.s"
}
#pragma pop


/* 8003C4E4-8003C5BC 00D8+00 .text      setObjectRes__14dRes_control_cFPCcPvUlP7JKRHeap              */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
ASM_FUNCTION(setObjectRes__14dRes_control_cFPCcPvUlP7JKRHeap) {
	nofralloc
#include "asm/d/d_resorce/setObjectRes__14dRes_control_cFPCcPvUlP7JKRHeap.s"
}
#pragma pop


/* 8003C5BC-8003C638 007C+00 .text      setStageRes__14dRes_control_cFPCcP7JKRHeap                   */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
ASM_FUNCTION(setStageRes__14dRes_control_cFPCcP7JKRHeap) {
	nofralloc
#include "asm/d/d_resorce/setStageRes__14dRes_control_cFPCcP7JKRHeap.s"
}
#pragma pop


/* 8003C638-8003C6B8 0080+00 .text      dump__14dRes_control_cFv                                     */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
ASM_FUNCTION(dump__14dRes_control_cFv) {
	nofralloc
#include "asm/d/d_resorce/dump__14dRes_control_cFv.s"
}
#pragma pop


/* 8003C6B8-8003C734 007C+00 .text      getObjectResName2Index__14dRes_control_cFPCcPCc              */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
ASM_FUNCTION(getObjectResName2Index__14dRes_control_cFPCcPCc) {
	nofralloc
#include "asm/d/d_resorce/getObjectResName2Index__14dRes_control_cFPCcPCc.s"
}
#pragma pop


/* 8003C734-8003C77C 0048+00 .text      __dt__10J3DAnmBaseFv                                         */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
ASM_FUNCTION(__dt__10J3DAnmBaseFv) {
	nofralloc
#include "asm/d/d_resorce/__dt__10J3DAnmBaseFv.s"
}
#pragma pop


/* 8003C77C-8003C784 0008+00 .text      getKind__15J3DAnmTransformCFv                                */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
ASM_FUNCTION(getKind__15J3DAnmTransformCFv) {
	nofralloc
#include "asm/d/d_resorce/getKind__15J3DAnmTransformCFv.s"
}
#pragma pop


/* 8003C784-8003C800 007C+00 .text      __dt__18mDoExt_transAnmBasFv                                 */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
ASM_FUNCTION(__dt__18mDoExt_transAnmBasFv) {
	nofralloc
#include "asm/d/d_resorce/__dt__18mDoExt_transAnmBasFv.s"
}
#pragma pop


/* 8003C800-8003C808 0008+00 .text      getKind__18J3DAnmTransformKeyCFv                             */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
ASM_FUNCTION(getKind__18J3DAnmTransformKeyCFv) {
	nofralloc
#include "asm/d/d_resorce/getKind__18J3DAnmTransformKeyCFv.s"
}
#pragma pop


/* 8003C808-8003C82C 0024+00 .text      getTransform__18J3DAnmTransformKeyCFUsP16J3DTransformInfo    */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
ASM_FUNCTION(getTransform__18J3DAnmTransformKeyCFUsP16J3DTransformInfo) {
	nofralloc
#include "asm/d/d_resorce/getTransform__18J3DAnmTransformKeyCFUsP16J3DTransformInfo.s"
}
#pragma pop


/* 8003C82C-8003C85C 0030+00 .text      calc__11J3DTexNoAnmCFPUs                                     */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
ASM_FUNCTION(calc__11J3DTexNoAnmCFPUs) {
	nofralloc
#include "asm/d/d_resorce/calc__11J3DTexNoAnmCFPUs.s"
}
#pragma pop


/* ############################################################################################## */
