//
// Generated By: dol2asm
// Translation Unit: d/a/d_a_itembase
//

#include "d/a/d_a_itembase.h"
#include "dol2asm.h"
#include "dolphin/types.h"

//
// Types:
//

struct daItemBase_c {
    /* 80144724 */ void DeleteBase(char const*);
    /* 8014474C */ bool clothCreate();
    /* 80144754 */ bool __CreateHeap();
    /* 8014475C */ void CreateItemHeap(char const*, s16, s16, s16, s16, s16, s16, s16);
    /* 80144B94 */ void DrawBase();
    /* 80144C30 */ void RotateYBase();
    /* 80144C7C */ void setListStart();
    /* 80144CA0 */ void setListEnd();
    /* 80144CC4 */ void settingBeforeDraw();
    /* 80144D18 */ void setTevStr();
    /* 80144D70 */ void setShadow();
    /* 80144EDC */ void animEntry();
    /* 8014503C */ void animPlay(f32, f32, f32, f32, f32, f32);
    /* 80145144 */ void chkFlag(int);
    /* 80145164 */ void getTevFrm();
    /* 80145180 */ void getBtpFrm();
    /* 8014519C */ void getShadowSize();
    /* 801451B4 */ void getCollisionH();
    /* 801451D0 */ void getCollisionR();
    /* 8015B0B8 */ void getData();
};

struct mDoExt_baseAnm {
    /* 8000D428 */ void play();
};

struct J3DMaterialTable {};

struct J3DAnmColor {};

struct mDoExt_bpkAnm {
    /* 8000D47C */ void init(J3DMaterialTable*, J3DAnmColor*, int, int, f32, s16, s16);
    /* 8000D518 */ void entry(J3DMaterialTable*, f32);
};

struct J3DAnmTexPattern {};

struct mDoExt_btpAnm {
    /* 8000D54C */ void init(J3DMaterialTable*, J3DAnmTexPattern*, int, int, f32, s16, s16);
    /* 8000D5E8 */ void entry(J3DMaterialTable*, s16);
};

struct J3DAnmTextureSRTKey {};

struct mDoExt_btkAnm {
    /* 8000D63C */ void init(J3DMaterialTable*, J3DAnmTextureSRTKey*, int, int, f32, s16, s16);
    /* 8000D6D8 */ void entry(J3DMaterialTable*, f32);
};

struct J3DAnmTevRegKey {};

struct mDoExt_brkAnm {
    /* 8000D70C */ void init(J3DMaterialTable*, J3DAnmTevRegKey*, int, int, f32, s16, s16);
    /* 8000D7A8 */ void entry(J3DMaterialTable*, f32);
};

struct J3DAnmTransform {};

struct J3DModelData {};

struct mDoExt_bckAnm {
    /* 8000D7DC */ void init(J3DAnmTransform*, int, int, f32, s16, s16, bool);
    /* 8000D9CC */ void entry(J3DModelData*, f32);
};

struct J3DModel {};

struct fopAc_ac_c {};

struct request_of_phase_process_class {};

struct cXyz {};

struct cBgS_PolyInfo {};

struct _GXTexObj {};

struct dKy_tevstr_c {};

struct dRes_info_c {};

struct dRes_control_c {
    /* 8003C2EC */ void getRes(char const*, s32, dRes_info_c*, int);
};

struct dScnKy_env_light_c {
    /* 801A37C4 */ void settingTevStruct(int, cXyz*, dKy_tevstr_c*);
    /* 801A4DA0 */ void setLightTevColorType_MAJI(J3DModelData*, dKy_tevstr_c*);
};

struct J3DFrameCtrl {
    /* 803283FC */ void init(s16);
};

//
// Forward References:
//

extern "C" void DeleteBase__12daItemBase_cFPCc();             // 1
extern "C" bool clothCreate__12daItemBase_cFv();              // 1
extern "C" bool __CreateHeap__12daItemBase_cFv();             // 1
extern "C" void CreateItemHeap__12daItemBase_cFPCcsssssss();  // 1
extern "C" void DrawBase__12daItemBase_cFv();                 // 1
extern "C" void RotateYBase__12daItemBase_cFv();              // 1
extern "C" void setListStart__12daItemBase_cFv();             // 1
extern "C" void setListEnd__12daItemBase_cFv();               // 1
extern "C" void settingBeforeDraw__12daItemBase_cFv();        // 1
extern "C" void setTevStr__12daItemBase_cFv();                // 1
extern "C" void setShadow__12daItemBase_cFv();                // 1
extern "C" void animEntry__12daItemBase_cFv();                // 1
extern "C" void animPlay__12daItemBase_cFffffff();            // 1
extern "C" void chkFlag__12daItemBase_cFi();                  // 1
extern "C" void getTevFrm__12daItemBase_cFv();                // 1
extern "C" void getBtpFrm__12daItemBase_cFv();                // 1
extern "C" void getShadowSize__12daItemBase_cFv();            // 1
extern "C" void getCollisionH__12daItemBase_cFv();            // 1
extern "C" void getCollisionR__12daItemBase_cFv();            // 1
extern "C" extern void* __vt__12daItemBase_c[17 + 1 /* padding */];

//
// External References:
//

void mDoExt_modelUpdateDL(J3DModel*);                                                  // 2
void mDoExt_J3DModel__create(J3DModelData*, u32, u32);                                 // 2
void fopAcM_setEffectMtx(fopAc_ac_c const*, J3DModelData const*);                      // 2
void dComIfG_resDelete(request_of_phase_process_class*, char const*);                  // 2
void dComIfGd_setSimpleShadow(cXyz*, f32, f32, cBgS_PolyInfo&, s16, f32, _GXTexObj*);  // 2
void dComIfGd_setShadow(u32, s8, J3DModel*, cXyz*, f32, f32, f32, f32, cBgS_PolyInfo&,
                        dKy_tevstr_c*, s16, f32, _GXTexObj*);  // 2
void* operator new(u32);                                       // 2

extern "C" void play__14mDoExt_baseAnmFv();                                              // 1
extern "C" void init__13mDoExt_bpkAnmFP16J3DMaterialTableP11J3DAnmColoriifss();          // 1
extern "C" void entry__13mDoExt_bpkAnmFP16J3DMaterialTablef();                           // 1
extern "C" void init__13mDoExt_btpAnmFP16J3DMaterialTableP16J3DAnmTexPatterniifss();     // 1
extern "C" void entry__13mDoExt_btpAnmFP16J3DMaterialTables();                           // 1
extern "C" void init__13mDoExt_btkAnmFP16J3DMaterialTableP19J3DAnmTextureSRTKeyiifss();  // 1
extern "C" void entry__13mDoExt_btkAnmFP16J3DMaterialTablef();                           // 1
extern "C" void init__13mDoExt_brkAnmFP16J3DMaterialTableP15J3DAnmTevRegKeyiifss();      // 1
extern "C" void entry__13mDoExt_brkAnmFP16J3DMaterialTablef();                           // 1
extern "C" void init__13mDoExt_bckAnmFP15J3DAnmTransformiifssb();                        // 1
extern "C" void entry__13mDoExt_bckAnmFP12J3DModelDataf();                               // 1
extern "C" void mDoExt_modelUpdateDL__FP8J3DModel();                                     // 1
extern "C" void mDoExt_J3DModel__create__FP12J3DModelDataUlUl();                         // 1
extern "C" void fopAcM_setEffectMtx__FPC10fopAc_ac_cPC12J3DModelData();                  // 1
extern "C" void dComIfG_resDelete__FP30request_of_phase_process_classPCc();              // 1
extern "C" void dComIfGd_setSimpleShadow__FP4cXyzffR13cBgS_PolyInfosfP9_GXTexObj();      // 1
extern "C" void
dComIfGd_setShadow__FUlScP8J3DModelP4cXyzffffR13cBgS_PolyInfoP12dKy_tevstr_csfP9_GXTexObj();  // 1
extern "C" void getRes__14dRes_control_cFPCclP11dRes_info_ci();                               // 1
extern "C" void getData__12daItemBase_cFv();                                                  // 1
extern "C" void settingTevStruct__18dScnKy_env_light_cFiP4cXyzP12dKy_tevstr_c();              // 1
extern "C" void
setLightTevColorType_MAJI__18dScnKy_env_light_cFP12J3DModelDataP12dKy_tevstr_c();  // 1
extern "C" void* __nw__FUl();                                                      // 1
extern "C" void init__12J3DFrameCtrlFs();                                          // 1
extern "C" void _savefpr_27();                                                     // 1
extern "C" void _restfpr_27();                                                     // 1
extern "C" void _savegpr_21();                                                     // 1
extern "C" void _restgpr_21();                                                     // 1
extern "C" extern void* __vt__12J3DFrameCtrl[3];
extern "C" extern void* item_resource__10dItem_data[1530];
extern "C" extern u8 item_info__10dItem_data[1020 + 4 /* padding */];
extern "C" extern u8 g_dComIfG_gameInfo[122384];
extern "C" extern u8 mSimpleTexObj__21dDlst_shadowControl_c[32];
extern "C" extern u8 g_env_light[4880];
extern "C" extern u8 j3dSys[284];

//
// Declarations:
//

/* 80144724-8014474C 0028+00 s=0 e=1 z=8  None .text      DeleteBase__12daItemBase_cFPCc */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void daItemBase_c::DeleteBase(char const* param_0) {
    nofralloc
#include "asm/d/a/d_a_itembase/DeleteBase__12daItemBase_cFPCc.s"
}
#pragma pop

/* 8014474C-80144754 0008+00 s=1 e=1 z=9  None .text      clothCreate__12daItemBase_cFv */
bool daItemBase_c::clothCreate() {
    return true;
}

/* 80144754-8014475C 0008+00 s=1 e=1 z=3  None .text      __CreateHeap__12daItemBase_cFv */
bool daItemBase_c::__CreateHeap() {
    return true;
}

/* ############################################################################################## */
/* 804533A8-804533AC 0004+00 s=2 e=0 z=0  None .sdata2    @3881 */
SECTION_SDATA2 static f32 lit_3881 = 1.0f;

/* 8014475C-80144B94 0438+00 s=0 e=3 z=0  None .text      CreateItemHeap__12daItemBase_cFPCcsssssss
 */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void daItemBase_c::CreateItemHeap(char const* param_0, s16 param_1, s16 param_2, s16 param_3,
                                      s16 param_4, s16 param_5, s16 param_6, s16 param_7) {
    nofralloc
#include "asm/d/a/d_a_itembase/CreateItemHeap__12daItemBase_cFPCcsssssss.s"
}
#pragma pop

/* 80144B94-80144C30 009C+00 s=1 e=1 z=9  None .text      DrawBase__12daItemBase_cFv */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void daItemBase_c::DrawBase() {
    nofralloc
#include "asm/d/a/d_a_itembase/DrawBase__12daItemBase_cFv.s"
}
#pragma pop

/* 80144C30-80144C7C 004C+00 s=1 e=1 z=9  None .text      RotateYBase__12daItemBase_cFv */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void daItemBase_c::RotateYBase() {
    nofralloc
#include "asm/d/a/d_a_itembase/RotateYBase__12daItemBase_cFv.s"
}
#pragma pop

/* 80144C7C-80144CA0 0024+00 s=1 e=1 z=5  None .text      setListStart__12daItemBase_cFv */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void daItemBase_c::setListStart() {
    nofralloc
#include "asm/d/a/d_a_itembase/setListStart__12daItemBase_cFv.s"
}
#pragma pop

/* 80144CA0-80144CC4 0024+00 s=1 e=0 z=0  None .text      setListEnd__12daItemBase_cFv */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void daItemBase_c::setListEnd() {
    nofralloc
#include "asm/d/a/d_a_itembase/setListEnd__12daItemBase_cFv.s"
}
#pragma pop

/* 80144CC4-80144D18 0054+00 s=1 e=1 z=9  None .text      settingBeforeDraw__12daItemBase_cFv */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void daItemBase_c::settingBeforeDraw() {
    nofralloc
#include "asm/d/a/d_a_itembase/settingBeforeDraw__12daItemBase_cFv.s"
}
#pragma pop

/* 80144D18-80144D70 0058+00 s=1 e=0 z=8  None .text      setTevStr__12daItemBase_cFv */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void daItemBase_c::setTevStr() {
    nofralloc
#include "asm/d/a/d_a_itembase/setTevStr__12daItemBase_cFv.s"
}
#pragma pop

/* ############################################################################################## */
/* 804533AC-804533B0 0004+00 s=1 e=0 z=0  None .sdata2    @3952 */
SECTION_SDATA2 static u8 lit_3952[4] = {
    0x00,
    0x00,
    0x00,
    0x00,
};

/* 804533B0-804533B8 0004+04 s=1 e=0 z=0  None .sdata2    @3953 */
SECTION_SDATA2 static f32 lit_3953[1 + 1 /* padding */] = {
    150.0f,
    /* padding */
    0.0f,
};

/* 804533B8-804533C0 0008+00 s=1 e=0 z=0  None .sdata2    @3955 */
SECTION_SDATA2 static f64 lit_3955 = 4503599627370496.0 /* cast u32 to float */;

/* 80144D70-80144EDC 016C+00 s=1 e=1 z=9  None .text      setShadow__12daItemBase_cFv */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void daItemBase_c::setShadow() {
    nofralloc
#include "asm/d/a/d_a_itembase/setShadow__12daItemBase_cFv.s"
}
#pragma pop

/* ############################################################################################## */
/* 804533C0-804533C8 0008+00 s=1 e=0 z=0  None .sdata2    @4041 */
SECTION_SDATA2 static f64 lit_4041 = 4503601774854144.0 /* cast s32 to float */;

/* 80144EDC-8014503C 0160+00 s=1 e=1 z=9  None .text      animEntry__12daItemBase_cFv */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void daItemBase_c::animEntry() {
    nofralloc
#include "asm/d/a/d_a_itembase/animEntry__12daItemBase_cFv.s"
}
#pragma pop

/* 8014503C-80145144 0108+00 s=0 e=2 z=4  None .text      animPlay__12daItemBase_cFffffff */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void daItemBase_c::animPlay(f32 param_0, f32 param_1, f32 param_2, f32 param_3, f32 param_4,
                                f32 param_5) {
    nofralloc
#include "asm/d/a/d_a_itembase/animPlay__12daItemBase_cFffffff.s"
}
#pragma pop

/* 80145144-80145164 0020+00 s=1 e=1 z=8  None .text      chkFlag__12daItemBase_cFi */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void daItemBase_c::chkFlag(int param_0) {
    nofralloc
#include "asm/d/a/d_a_itembase/chkFlag__12daItemBase_cFi.s"
}
#pragma pop

/* 80145164-80145180 001C+00 s=1 e=1 z=8  None .text      getTevFrm__12daItemBase_cFv */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void daItemBase_c::getTevFrm() {
    nofralloc
#include "asm/d/a/d_a_itembase/getTevFrm__12daItemBase_cFv.s"
}
#pragma pop

/* 80145180-8014519C 001C+00 s=1 e=1 z=8  None .text      getBtpFrm__12daItemBase_cFv */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void daItemBase_c::getBtpFrm() {
    nofralloc
#include "asm/d/a/d_a_itembase/getBtpFrm__12daItemBase_cFv.s"
}
#pragma pop

/* 8014519C-801451B4 0018+00 s=1 e=1 z=8  None .text      getShadowSize__12daItemBase_cFv */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void daItemBase_c::getShadowSize() {
    nofralloc
#include "asm/d/a/d_a_itembase/getShadowSize__12daItemBase_cFv.s"
}
#pragma pop

/* 801451B4-801451D0 001C+00 s=1 e=1 z=8  None .text      getCollisionH__12daItemBase_cFv */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void daItemBase_c::getCollisionH() {
    nofralloc
#include "asm/d/a/d_a_itembase/getCollisionH__12daItemBase_cFv.s"
}
#pragma pop

/* 801451D0-801451EC 001C+00 s=1 e=1 z=8  None .text      getCollisionR__12daItemBase_cFv */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void daItemBase_c::getCollisionR() {
    nofralloc
#include "asm/d/a/d_a_itembase/getCollisionR__12daItemBase_cFv.s"
}
#pragma pop

/* ############################################################################################## */
/* 803B3610-803B3658 0044+04 s=0 e=1 z=9  None .data      __vt__12daItemBase_c */
SECTION_DATA void* __vt__12daItemBase_c[17 + 1 /* padding */] = {
    /* 0    */ (void*)NULL /* RTTI */,
    /* 1    */ (void*)NULL,
    /* 2    */ (void*)DrawBase__12daItemBase_cFv,
    /* 3    */ (void*)setListStart__12daItemBase_cFv,
    /* 4    */ (void*)settingBeforeDraw__12daItemBase_cFv,
    /* 5    */ (void*)setTevStr__12daItemBase_cFv,
    /* 6    */ (void*)setShadow__12daItemBase_cFv,
    /* 7    */ (void*)animEntry__12daItemBase_cFv,
    /* 8    */ (void*)RotateYBase__12daItemBase_cFv,
    /* 9    */ (void*)clothCreate__12daItemBase_cFv,
    /* 10   */ (void*)__CreateHeap__12daItemBase_cFv,
    /* 11   */ (void*)chkFlag__12daItemBase_cFi,
    /* 12   */ (void*)getTevFrm__12daItemBase_cFv,
    /* 13   */ (void*)getBtpFrm__12daItemBase_cFv,
    /* 14   */ (void*)getShadowSize__12daItemBase_cFv,
    /* 15   */ (void*)getCollisionH__12daItemBase_cFv,
    /* 16   */ (void*)getCollisionR__12daItemBase_cFv,
    /* padding */
    NULL,
};
