// 
// Generated By: dol2asm
// Translation Unit: d/s/d_s_logo
// 

#include "dolphin/types.h"

// 
// Forward References:
// 

extern "C" extern void __ct__10dLog_HIO_cFv();
extern "C" extern void preLoad_dyl_create__10dScnLogo_cFv();
extern "C" extern void preLoad_dyl_remove__10dScnLogo_cFv();
extern "C" extern void preLoad_dyl__10dScnLogo_cFv();
extern "C" extern void checkProgSelect__10dScnLogo_cFv();
extern "C" extern void draw__10dScnLogo_cFv();
extern "C" extern void progInDraw__10dScnLogo_cFv();
extern "C" extern void progSelDraw__10dScnLogo_cFv();
extern "C" extern void progOutDraw__10dScnLogo_cFv();
extern "C" extern void progSetDraw__10dScnLogo_cFv();
extern "C" extern void progSet2Draw__10dScnLogo_cFv();
extern "C" extern void progChangeDraw__10dScnLogo_cFv();
extern "C" extern void warningInDraw__10dScnLogo_cFv();
extern "C" extern void warningDispDraw__10dScnLogo_cFv();
extern "C" extern void warningOutDraw__10dScnLogo_cFv();
extern "C" extern void nintendoInDraw__10dScnLogo_cFv();
extern "C" extern void nintendoOutDraw__10dScnLogo_cFv();
extern "C" extern void dolbyInDraw__10dScnLogo_cFv();
extern "C" extern void dolbyOutDraw__10dScnLogo_cFv();
extern "C" extern void dolbyOutDraw2__10dScnLogo_cFv();
extern "C" extern void dvdWaitDraw__10dScnLogo_cFv();
extern "C" extern void nextSceneChange__10dScnLogo_cFv();
extern "C" extern void __dt__10dScnLogo_cFv();
extern "C" extern void phase_0__FP10dScnLogo_c();
extern "C" extern void phase_1__FP10dScnLogo_c();
extern "C" extern void phase_2__FP10dScnLogo_c();
extern "C" extern void resLoad__FP30request_of_phase_process_classP10dScnLogo_c();
extern "C" extern void create__10dScnLogo_cFv();
extern "C" extern void logoInitGC__10dScnLogo_cFv();
extern "C" extern void dvdDataLoad__10dScnLogo_cFv();
extern "C" extern void dScnLogo_Create__FP11scene_class();
extern "C" extern void dScnLogo_Execute__FP10dScnLogo_c();
extern "C" extern void dScnLogo_Draw__FP10dScnLogo_c();
extern "C" extern void dScnLogo_Delete__FP10dScnLogo_c();
extern "C" extern void dScnLogo_IsDelete__FP10dScnLogo_c();
extern "C" extern void setProgressiveMode__10dScnLogo_cFUc();
extern "C" extern void getProgressiveMode__10dScnLogo_cFv();
extern "C" extern void isProgressiveMode__10dScnLogo_cFv();
extern "C" extern void setRenderMode__10dScnLogo_cFv();
extern "C" extern void __dt__10dLog_HIO_cFv();
extern "C" extern void func_802585A4();
extern "C" extern void __sinit_d_s_logo_cpp();
SECTION_RODATA extern const u8 l_preLoad_dylKeyTbl[28];
SECTION_RODATA extern const u8 d_s_d_s_logo__stringBase0[684];
SECTION_DATA extern u8 d_s_d_s_logo__cNullVec__6Z2Calc[12];
SECTION_DATA extern void*lit_3737[3];
SECTION_DATA extern void*d_s_d_s_logo__lit_3738[3];
SECTION_DATA extern void*d_s_d_s_logo__lit_3739[3];
SECTION_DATA extern void*d_s_d_s_logo__lit_3740[3];
SECTION_DATA extern void*d_s_d_s_logo__lit_3741[3];
SECTION_DATA extern void*d_s_d_s_logo__lit_3742[3];
SECTION_DATA extern void*d_s_d_s_logo__lit_3743[3];
SECTION_DATA extern void*lit_3744[3];
SECTION_DATA extern void*d_s_d_s_logo__lit_3745[3];
SECTION_DATA extern void*d_s_d_s_logo__lit_3746[3];
SECTION_DATA extern void*d_s_d_s_logo__lit_3747[3];
SECTION_DATA extern void*d_s_d_s_logo__lit_3748[3];
SECTION_DATA extern void*d_s_d_s_logo__lit_3749[3];
SECTION_DATA extern void*d_s_d_s_logo__lit_3750[3];
SECTION_DATA extern void*d_s_d_s_logo__lit_3751[3];
SECTION_DATA extern void*d_s_d_s_logo__lit_3752[3];
SECTION_DATA extern u8 l_execFunc[192];
SECTION_DATA extern void*data_803C2FC4[3];
SECTION_DATA extern void*l_dScnLogo_Method[5];
SECTION_DATA extern void*g_profile_LOGO_SCENE[10];
SECTION_DATA extern void*const __vt__10dLog_HIO_c[3];
SECTION_BSS extern u8 d_s_d_s_logo__lit_3702[12 + 4 /* padding */];
SECTION_SBSS extern u8 g_LogHIO[8];
SECTION_SDATA2 extern f32 lit_3933;
SECTION_SDATA2 extern f32 lit_3934;
SECTION_SDATA2 extern f32 d_s_d_s_logo__lit_3935;
SECTION_SDATA2 extern f32 d_s_d_s_logo__lit_3936;
SECTION_SDATA2 extern f32 d_s_d_s_logo__lit_3937;
SECTION_SDATA2 extern f32 lit_3938;
SECTION_SDATA2 extern f64 d_s_d_s_logo__lit_3940;

// 
// External References:
// 

SECTION_INIT extern void memset();
extern "C" extern void mDoExt_getGameHeap__Fv();
extern "C" extern void mDoExt_getJ2dHeap__Fv();
extern "C" extern void mDoExt_setCurrentHeap__FP7JKRHeap();
extern "C" extern void mDoExt_getMesgFont__Fv();
extern "C" extern void mDoExt_getRubyFont__Fv();
extern "C" extern void mDoExt_getSubFont__Fv();
extern "C" extern void mDoExt_setAraCacheSize__FUl();
extern "C" extern void mDoRst_reset__FiUli();
extern "C" extern void mDoRst_resetCallBack__FiPv();
extern "C" extern void create__25mDoDvdThd_mountXArchive_cFPCcUcQ210JKRArchive10EMountModeP7JKRHeap();
extern "C" extern void create__21mDoDvdThd_toMainRam_cFPCcUcP7JKRHeap();
extern "C" extern void cDyl_InitAsyncIsDone__Fv();
extern "C" extern void Link__7cDylPhsFP30request_of_phase_process_classs();
extern "C" extern void fopScnM_ChangeReq__FP11scene_classssUs();
extern "C" extern void createParticle__14dComIfG_play_cFv();
extern "C" extern void dComIfG_changeOpeningScene__FP11scene_classs();
extern "C" extern void dComLbG_PhaseHandler__FP30request_of_phase_process_classPPFPv_iPv();
extern "C" extern void setRes__14dRes_control_cFPCcP11dRes_info_ciPCcUcP7JKRHeap();
extern "C" extern void deleteRes__14dRes_control_cFPCcP11dRes_info_ci();
extern "C" extern void getRes__14dRes_control_cFPCclP11dRes_info_ci();
extern "C" extern void syncAllRes__14dRes_control_cFP11dRes_info_ci();
extern "C" extern void createWork__8dMpath_cFv();
extern "C" extern void createCommon__13dPa_control_cFPCv();
extern "C" extern void __ct__10dDlst_2D_cFP7ResTIMGssssUc();
extern "C" extern void setSimpleTex__21dDlst_shadowControl_cFPC7ResTIMG();
extern "C" extern void set__12dDlst_list_cFRPP12dDlst_base_cRPP12dDlst_base_cP12dDlst_base_c();
extern "C" extern void createWork__7dTres_cFv();
extern "C" extern void waitBlanking__10JFWDisplayFi();
extern "C" extern void seStart__7Z2SeMgrF10JAISoundIDPC3VecUlScffffUc();
extern "C" extern void loadStaticWaves__10Z2SceneMgrFv();
extern "C" extern void checkFirstWaves__10Z2SceneMgrFv();
extern "C" extern void resetProcess__10Z2AudioMgrFUlb();
extern "C" extern void becomeCurrentHeap__7JKRHeapFv();
extern "C" extern void destroy__7JKRHeapFv();
extern "C" extern void alloc__7JKRHeapFUli();
extern "C" extern void free__7JKRHeapFPvP7JKRHeap();
extern "C" extern void __nw__FUl();
extern "C" extern void __nwa__FUl();
extern "C" extern void __dl__FPv();
extern "C" extern void __dla__FPv();
extern "C" extern void create__10JKRExpHeapFUlP7JKRHeapb();
extern "C" extern void create__10JKRExpHeapFPvUlP7JKRHeapb();
extern "C" extern void getTotalFreeSize__11JKRAramHeapFv();
extern "C" extern void __dt__10J2DPictureFv();
extern "C" extern void OSGetProgressiveMode();
extern "C" extern void OSSetProgressiveMode();
extern "C" extern void VIGetDTVStatus();
extern "C" extern void __register_global_object();
extern "C" extern void __ptmf_scall();
extern "C" extern void _savegpr_26();
extern "C" extern void _savegpr_27();
extern "C" extern void _savegpr_28();
extern "C" extern void _savegpr_29();
extern "C" extern void _restgpr_26();
extern "C" extern void _restgpr_27();
extern "C" extern void _restgpr_28();
extern "C" extern void _restgpr_29();
SECTION_DATA extern u8 g_ntscZeldaProg[60];
SECTION_DATA extern void*g_fopScn_Method[6];
SECTION_DATA extern void*g_fpcNd_Method[6];
SECTION_DATA extern void*const __vt__10dDlst_2D_c[3];
SECTION_BSS extern u8 m_cpadInfo__8mDoCPd_c[256];
SECTION_BSS extern u8 g_dComIfG_gameInfo[122384];
SECTION_SDATA extern void*mRenderModeObj__15mDoMch_render_c[2];
SECTION_SDATA extern u32 g_blackColor;
SECTION_SBSS extern u8 struct_80450BB8[4];
SECTION_SBSS extern u8 mFader__13mDoGph_gInf_c[4];
SECTION_SBSS extern u8 archiveHeap[4];
SECTION_SBSS extern u8 mResetData__6mDoRst[4 + 4 /* padding */];
SECTION_SBSS extern u8 mData__12dEnemyItem_c[4 + 4 /* padding */];
SECTION_SBSS extern u8 sManager__10JFWDisplay[4];
SECTION_SBSS extern u8 mAudioMgrPtr__10Z2AudioMgr[4 + 4 /* padding */];
SECTION_SBSS extern u8 sAramObject__7JKRAram[4];
SECTION_SBSS extern u8 sCallback__Q210JUTGamePad13C3ButtonReset[4];
SECTION_SBSS extern u8 sCallbackArg__Q210JUTGamePad13C3ButtonReset[4 + 4 /* padding */];
SECTION_SBSS extern u8 struct_80451500[4];

// 
// Declarations:
// 

/* ############################################################################################## */
/* 803C2E38-803C2E44 000C+00 .data      cNullVec__6Z2Calc                                            */
u8 d_s_d_s_logo__cNullVec__6Z2Calc[12] = {
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
};

/* 803C2E44-803C2E50 000C+00 .data      @3737                                                        */
void* lit_3737[3] = {
	NULL,
	(void*)0xFFFFFFFF,
	(void*)warningInDraw__10dScnLogo_cFv,
};

/* 803C2E50-803C2E5C 000C+00 .data      @3738                                                        */
void* d_s_d_s_logo__lit_3738[3] = {
	NULL,
	(void*)0xFFFFFFFF,
	(void*)warningDispDraw__10dScnLogo_cFv,
};

/* 803C2E5C-803C2E68 000C+00 .data      @3739                                                        */
void* d_s_d_s_logo__lit_3739[3] = {
	NULL,
	(void*)0xFFFFFFFF,
	(void*)warningOutDraw__10dScnLogo_cFv,
};

/* 803C2E68-803C2E74 000C+00 .data      @3740                                                        */
void* d_s_d_s_logo__lit_3740[3] = {
	NULL,
	(void*)0xFFFFFFFF,
	(void*)nintendoInDraw__10dScnLogo_cFv,
};

/* 803C2E74-803C2E80 000C+00 .data      @3741                                                        */
void* d_s_d_s_logo__lit_3741[3] = {
	NULL,
	(void*)0xFFFFFFFF,
	(void*)nintendoOutDraw__10dScnLogo_cFv,
};

/* 803C2E80-803C2E8C 000C+00 .data      @3742                                                        */
void* d_s_d_s_logo__lit_3742[3] = {
	NULL,
	(void*)0xFFFFFFFF,
	(void*)dolbyInDraw__10dScnLogo_cFv,
};

/* 803C2E8C-803C2E98 000C+00 .data      @3743                                                        */
void* d_s_d_s_logo__lit_3743[3] = {
	NULL,
	(void*)0xFFFFFFFF,
	(void*)dolbyOutDraw__10dScnLogo_cFv,
};

/* 803C2E98-803C2EA4 000C+00 .data      @3744                                                        */
void* lit_3744[3] = {
	NULL,
	(void*)0xFFFFFFFF,
	(void*)dolbyOutDraw2__10dScnLogo_cFv,
};

/* 803C2EA4-803C2EB0 000C+00 .data      @3745                                                        */
void* d_s_d_s_logo__lit_3745[3] = {
	NULL,
	(void*)0xFFFFFFFF,
	(void*)progInDraw__10dScnLogo_cFv,
};

/* 803C2EB0-803C2EBC 000C+00 .data      @3746                                                        */
void* d_s_d_s_logo__lit_3746[3] = {
	NULL,
	(void*)0xFFFFFFFF,
	(void*)progSelDraw__10dScnLogo_cFv,
};

/* 803C2EBC-803C2EC8 000C+00 .data      @3747                                                        */
void* d_s_d_s_logo__lit_3747[3] = {
	NULL,
	(void*)0xFFFFFFFF,
	(void*)progOutDraw__10dScnLogo_cFv,
};

/* 803C2EC8-803C2ED4 000C+00 .data      @3748                                                        */
void* d_s_d_s_logo__lit_3748[3] = {
	NULL,
	(void*)0xFFFFFFFF,
	(void*)progSetDraw__10dScnLogo_cFv,
};

/* 803C2ED4-803C2EE0 000C+00 .data      @3749                                                        */
void* d_s_d_s_logo__lit_3749[3] = {
	NULL,
	(void*)0xFFFFFFFF,
	(void*)progSet2Draw__10dScnLogo_cFv,
};

/* 803C2EE0-803C2EEC 000C+00 .data      @3750                                                        */
void* d_s_d_s_logo__lit_3750[3] = {
	NULL,
	(void*)0xFFFFFFFF,
	(void*)progChangeDraw__10dScnLogo_cFv,
};

/* 803C2EEC-803C2EF8 000C+00 .data      @3751                                                        */
void* d_s_d_s_logo__lit_3751[3] = {
	NULL,
	(void*)0xFFFFFFFF,
	(void*)dvdWaitDraw__10dScnLogo_cFv,
};

/* 803C2EF8-803C2F04 000C+00 .data      @3752                                                        */
void* d_s_d_s_logo__lit_3752[3] = {
	NULL,
	(void*)0xFFFFFFFF,
	(void*)nextSceneChange__10dScnLogo_cFv,
};

/* 803C2F04-803C2FC4 00C0+00 .data      l_execFunc                                                   */
u8 l_execFunc[192] = {
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
};

/* 803C2FC4-803C2FD0 000C+00 .data      l_method$4611                                                */
void* data_803C2FC4[3] = {
	(void*)phase_0__FP10dScnLogo_c,
	(void*)phase_1__FP10dScnLogo_c,
	(void*)phase_2__FP10dScnLogo_c,
};

/* 803C2FD0-803C2FE4 0014+00 .data      l_dScnLogo_Method                                            */
void* l_dScnLogo_Method[5] = {
	(void*)dScnLogo_Create__FP11scene_class,
	(void*)dScnLogo_Delete__FP10dScnLogo_c,
	(void*)dScnLogo_Execute__FP10dScnLogo_c,
	(void*)dScnLogo_IsDelete__FP10dScnLogo_c,
	(void*)dScnLogo_Draw__FP10dScnLogo_c,
};

/* 803C2FE4-803C300C 0028+00 .data      g_profile_LOGO_SCENE                                         */
void* g_profile_LOGO_SCENE[10] = {
	NULL,
	(void*)0x0001FFFD,
	(void*)0x00090000,
	(void*)&g_fpcNd_Method,
	(void*)0x000002A8,
	NULL,
	NULL,
	(void*)&g_fopScn_Method,
	(void*)&l_dScnLogo_Method,
	NULL,
};

/* 803C300C-803C3018 000C+00 .data      __vt__10dLog_HIO_c                                           */
void* const __vt__10dLog_HIO_c[3] = {
	NULL, /* RTTI */
	NULL,
	(void*)__dt__10dLog_HIO_cFv,
};

/* 802560A4-802560B4 0010+00 .text      __ct__10dLog_HIO_cFv                                         */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
ASM_FUNCTION(__ct__10dLog_HIO_cFv) {
	nofralloc
#include "asm/d/s/d_s_logo/__ct__10dLog_HIO_cFv.s"
}
#pragma pop


/* 802560B4-802560F8 0044+00 .text      preLoad_dyl_create__10dScnLogo_cFv                           */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
ASM_FUNCTION(preLoad_dyl_create__10dScnLogo_cFv) {
	nofralloc
#include "asm/d/s/d_s_logo/preLoad_dyl_create__10dScnLogo_cFv.s"
}
#pragma pop


/* 802560F8-8025611C 0024+00 .text      preLoad_dyl_remove__10dScnLogo_cFv                           */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
ASM_FUNCTION(preLoad_dyl_remove__10dScnLogo_cFv) {
	nofralloc
#include "asm/d/s/d_s_logo/preLoad_dyl_remove__10dScnLogo_cFv.s"
}
#pragma pop


/* ############################################################################################## */
/* 80399FE0-80399FFC 001C+00 .rodata    l_preLoad_dylKeyTbl                                          */
SECTION_RODATA const u8 l_preLoad_dylKeyTbl[28] = {
	0x02, 0xDC, 0x02, 0xCE, 0x02, 0x21, 0x00, 0xF2, 0x02, 0x1B, 0x02, 0xF4, 0x01, 0x39, 0x01, 0x5A,
	0x02, 0xE4, 0x00, 0xFE, 0x03, 0x08, 0x03, 0x0F, 0x00, 0xFF, 0x01, 0x3F,
};

/* 8025611C-80256198 007C+00 .text      preLoad_dyl__10dScnLogo_cFv                                  */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
ASM_FUNCTION(preLoad_dyl__10dScnLogo_cFv) {
	nofralloc
#include "asm/d/s/d_s_logo/preLoad_dyl__10dScnLogo_cFv.s"
}
#pragma pop


/* 80256198-80256210 0078+00 .text      checkProgSelect__10dScnLogo_cFv                              */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
ASM_FUNCTION(checkProgSelect__10dScnLogo_cFv) {
	nofralloc
#include "asm/d/s/d_s_logo/checkProgSelect__10dScnLogo_cFv.s"
}
#pragma pop


/* 80256210-80256264 0054+00 .text      draw__10dScnLogo_cFv                                         */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
ASM_FUNCTION(draw__10dScnLogo_cFv) {
	nofralloc
#include "asm/d/s/d_s_logo/draw__10dScnLogo_cFv.s"
}
#pragma pop


/* 80256264-8025631C 00B8+00 .text      progInDraw__10dScnLogo_cFv                                   */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
ASM_FUNCTION(progInDraw__10dScnLogo_cFv) {
	nofralloc
#include "asm/d/s/d_s_logo/progInDraw__10dScnLogo_cFv.s"
}
#pragma pop


/* ############################################################################################## */
/* 80454ED8-80454EDC 0004+00 .sdata2    @3933                                                        */
f32 lit_3933 = 0.5f;

/* 80454EDC-80454EE0 0004+00 .sdata2    @3934                                                        */
f32 lit_3934 = 1.0f;

/* 80454EE0-80454EE4 0004+00 .sdata2    @3935                                                        */
f32 d_s_d_s_logo__lit_3935 = -1.0f;

/* 80454EE4-80454EE8 0004+00 .sdata2    @3936                                                        */
f32 d_s_d_s_logo__lit_3936 = -0.5f;

/* 80454EE8-80454EEC 0004+00 .sdata2    @3937                                                        */
f32 d_s_d_s_logo__lit_3937 = 255.0f;

/* 80454EEC-80454EF0 0004+00 .sdata2    @3938                                                        */
f32 lit_3938 = 200.0f;

/* 80454EF0-80454EF8 0008+00 .sdata2    @3940                                                        */
f64 d_s_d_s_logo__lit_3940 = 4503599627370496.0 /* cast u32 to float */;

/* 8025631C-802568E0 05C4+00 .text      progSelDraw__10dScnLogo_cFv                                  */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
ASM_FUNCTION(progSelDraw__10dScnLogo_cFv) {
	nofralloc
#include "asm/d/s/d_s_logo/progSelDraw__10dScnLogo_cFv.s"
}
#pragma pop


/* 802568E0-80256A3C 015C+00 .text      progOutDraw__10dScnLogo_cFv                                  */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
ASM_FUNCTION(progOutDraw__10dScnLogo_cFv) {
	nofralloc
#include "asm/d/s/d_s_logo/progOutDraw__10dScnLogo_cFv.s"
}
#pragma pop


/* 80256A3C-80256AC0 0084+00 .text      progSetDraw__10dScnLogo_cFv                                  */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
ASM_FUNCTION(progSetDraw__10dScnLogo_cFv) {
	nofralloc
#include "asm/d/s/d_s_logo/progSetDraw__10dScnLogo_cFv.s"
}
#pragma pop


/* 80256AC0-80256B3C 007C+00 .text      progSet2Draw__10dScnLogo_cFv                                 */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
ASM_FUNCTION(progSet2Draw__10dScnLogo_cFv) {
	nofralloc
#include "asm/d/s/d_s_logo/progSet2Draw__10dScnLogo_cFv.s"
}
#pragma pop


/* 80256B3C-80256BF4 00B8+00 .text      progChangeDraw__10dScnLogo_cFv                               */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
ASM_FUNCTION(progChangeDraw__10dScnLogo_cFv) {
	nofralloc
#include "asm/d/s/d_s_logo/progChangeDraw__10dScnLogo_cFv.s"
}
#pragma pop


/* 80256BF4-80256C68 0074+00 .text      warningInDraw__10dScnLogo_cFv                                */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
ASM_FUNCTION(warningInDraw__10dScnLogo_cFv) {
	nofralloc
#include "asm/d/s/d_s_logo/warningInDraw__10dScnLogo_cFv.s"
}
#pragma pop


/* 80256C68-80256DC4 015C+00 .text      warningDispDraw__10dScnLogo_cFv                              */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
ASM_FUNCTION(warningDispDraw__10dScnLogo_cFv) {
	nofralloc
#include "asm/d/s/d_s_logo/warningDispDraw__10dScnLogo_cFv.s"
}
#pragma pop


/* 80256DC4-80256E48 0084+00 .text      warningOutDraw__10dScnLogo_cFv                               */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
ASM_FUNCTION(warningOutDraw__10dScnLogo_cFv) {
	nofralloc
#include "asm/d/s/d_s_logo/warningOutDraw__10dScnLogo_cFv.s"
}
#pragma pop


/* 80256E48-80256ECC 0084+00 .text      nintendoInDraw__10dScnLogo_cFv                               */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
ASM_FUNCTION(nintendoInDraw__10dScnLogo_cFv) {
	nofralloc
#include "asm/d/s/d_s_logo/nintendoInDraw__10dScnLogo_cFv.s"
}
#pragma pop


/* 80256ECC-80256F50 0084+00 .text      nintendoOutDraw__10dScnLogo_cFv                              */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
ASM_FUNCTION(nintendoOutDraw__10dScnLogo_cFv) {
	nofralloc
#include "asm/d/s/d_s_logo/nintendoOutDraw__10dScnLogo_cFv.s"
}
#pragma pop


/* 80256F50-80256FD4 0084+00 .text      dolbyInDraw__10dScnLogo_cFv                                  */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
ASM_FUNCTION(dolbyInDraw__10dScnLogo_cFv) {
	nofralloc
#include "asm/d/s/d_s_logo/dolbyInDraw__10dScnLogo_cFv.s"
}
#pragma pop


/* 80256FD4-80257058 0084+00 .text      dolbyOutDraw__10dScnLogo_cFv                                 */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
ASM_FUNCTION(dolbyOutDraw__10dScnLogo_cFv) {
	nofralloc
#include "asm/d/s/d_s_logo/dolbyOutDraw__10dScnLogo_cFv.s"
}
#pragma pop


/* 80257058-80257070 0018+00 .text      dolbyOutDraw2__10dScnLogo_cFv                                */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
ASM_FUNCTION(dolbyOutDraw2__10dScnLogo_cFv) {
	nofralloc
#include "asm/d/s/d_s_logo/dolbyOutDraw2__10dScnLogo_cFv.s"
}
#pragma pop


/* 80257070-80257284 0214+00 .text      dvdWaitDraw__10dScnLogo_cFv                                  */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
ASM_FUNCTION(dvdWaitDraw__10dScnLogo_cFv) {
	nofralloc
#include "asm/d/s/d_s_logo/dvdWaitDraw__10dScnLogo_cFv.s"
}
#pragma pop


/* 80257284-802572B8 0034+00 .text      nextSceneChange__10dScnLogo_cFv                              */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
ASM_FUNCTION(nextSceneChange__10dScnLogo_cFv) {
	nofralloc
#include "asm/d/s/d_s_logo/nextSceneChange__10dScnLogo_cFv.s"
}
#pragma pop


/* ############################################################################################## */
/* 80399FFC-8039A2A8 02AA+02 .rodata    @stringBase0                                                 */
SECTION_RODATA const u8 d_s_d_s_logo__stringBase0[684] = {
	0x4C, 0x6F, 0x67, 0x6F, 0x55, 0x73, 0x00, 0x41, 0x6C, 0x77, 0x61, 0x79, 0x73, 0x00, 0x2F, 0x72,
	0x65, 0x73, 0x2F, 0x4F, 0x62, 0x6A, 0x65, 0x63, 0x74, 0x2F, 0x00, 0x41, 0x6C, 0x69, 0x6E, 0x6B,
	0x00, 0x2F, 0x72, 0x65, 0x73, 0x2F, 0x46, 0x69, 0x65, 0x6C, 0x64, 0x4D, 0x61, 0x70, 0x2F, 0x46,
	0x69, 0x65, 0x6C, 0x64, 0x30, 0x2E, 0x61, 0x72, 0x63, 0x00, 0x2F, 0x72, 0x65, 0x73, 0x2F, 0x4F,
	0x62, 0x6A, 0x65, 0x63, 0x74, 0x2F, 0x41, 0x6C, 0x41, 0x6E, 0x6D, 0x2E, 0x61, 0x72, 0x63, 0x00,
	0x2F, 0x72, 0x65, 0x73, 0x2F, 0x4C, 0x61, 0x79, 0x6F, 0x75, 0x74, 0x2F, 0x66, 0x6D, 0x61, 0x70,
	0x72, 0x65, 0x73, 0x2E, 0x61, 0x72, 0x63, 0x00, 0x2F, 0x72, 0x65, 0x73, 0x2F, 0x4C, 0x61, 0x79,
	0x6F, 0x75, 0x74, 0x2F, 0x64, 0x6D, 0x61, 0x70, 0x72, 0x65, 0x73, 0x2E, 0x61, 0x72, 0x63, 0x00,
	0x2F, 0x72, 0x65, 0x73, 0x2F, 0x4C, 0x61, 0x79, 0x6F, 0x75, 0x74, 0x2F, 0x63, 0x6C, 0x63, 0x74,
	0x72, 0x65, 0x73, 0x2E, 0x61, 0x72, 0x63, 0x00, 0x2F, 0x72, 0x65, 0x73, 0x2F, 0x4C, 0x61, 0x79,
	0x6F, 0x75, 0x74, 0x2F, 0x69, 0x74, 0x65, 0x6D, 0x69, 0x63, 0x6F, 0x6E, 0x2E, 0x61, 0x72, 0x63,
	0x00, 0x2F, 0x72, 0x65, 0x73, 0x2F, 0x4C, 0x61, 0x79, 0x6F, 0x75, 0x74, 0x2F, 0x72, 0x69, 0x6E,
	0x67, 0x72, 0x65, 0x73, 0x2E, 0x61, 0x72, 0x63, 0x00, 0x2F, 0x72, 0x65, 0x73, 0x2F, 0x4C, 0x61,
	0x79, 0x6F, 0x75, 0x74, 0x2F, 0x70, 0x6C, 0x61, 0x79, 0x65, 0x72, 0x4E, 0x61, 0x6D, 0x65, 0x2E,
	0x61, 0x72, 0x63, 0x00, 0x2F, 0x72, 0x65, 0x73, 0x2F, 0x4C, 0x61, 0x79, 0x6F, 0x75, 0x74, 0x2F,
	0x69, 0x74, 0x6D, 0x49, 0x6E, 0x66, 0x52, 0x65, 0x73, 0x2E, 0x61, 0x72, 0x63, 0x00, 0x2F, 0x72,
	0x65, 0x73, 0x2F, 0x4C, 0x61, 0x79, 0x6F, 0x75, 0x74, 0x2F, 0x62, 0x75, 0x74, 0x74, 0x6F, 0x6E,
	0x2E, 0x61, 0x72, 0x63, 0x00, 0x2F, 0x72, 0x65, 0x73, 0x2F, 0x43, 0x61, 0x72, 0x64, 0x49, 0x63,
	0x6F, 0x6E, 0x2F, 0x63, 0x61, 0x72, 0x64, 0x69, 0x63, 0x6F, 0x6E, 0x2E, 0x61, 0x72, 0x63, 0x00,
	0x2F, 0x72, 0x65, 0x73, 0x2F, 0x4D, 0x73, 0x67, 0x75, 0x73, 0x2F, 0x62, 0x6D, 0x67, 0x72, 0x65,
	0x73, 0x2E, 0x61, 0x72, 0x63, 0x00, 0x2F, 0x72, 0x65, 0x73, 0x2F, 0x4C, 0x61, 0x79, 0x6F, 0x75,
	0x74, 0x2F, 0x6D, 0x73, 0x67, 0x63, 0x6F, 0x6D, 0x2E, 0x61, 0x72, 0x63, 0x00, 0x2F, 0x72, 0x65,
	0x73, 0x2F, 0x4C, 0x61, 0x79, 0x6F, 0x75, 0x74, 0x2F, 0x6D, 0x73, 0x67, 0x72, 0x65, 0x73, 0x30,
	0x30, 0x2E, 0x61, 0x72, 0x63, 0x00, 0x2F, 0x72, 0x65, 0x73, 0x2F, 0x4C, 0x61, 0x79, 0x6F, 0x75,
	0x74, 0x2F, 0x6D, 0x73, 0x67, 0x72, 0x65, 0x73, 0x30, 0x31, 0x2E, 0x61, 0x72, 0x63, 0x00, 0x2F,
	0x72, 0x65, 0x73, 0x2F, 0x4C, 0x61, 0x79, 0x6F, 0x75, 0x74, 0x2F, 0x6D, 0x73, 0x67, 0x72, 0x65,
	0x73, 0x30, 0x32, 0x2E, 0x61, 0x72, 0x63, 0x00, 0x2F, 0x72, 0x65, 0x73, 0x2F, 0x4C, 0x61, 0x79,
	0x6F, 0x75, 0x74, 0x2F, 0x6D, 0x73, 0x67, 0x72, 0x65, 0x73, 0x30, 0x33, 0x2E, 0x61, 0x72, 0x63,
	0x00, 0x2F, 0x72, 0x65, 0x73, 0x2F, 0x4C, 0x61, 0x79, 0x6F, 0x75, 0x74, 0x2F, 0x6D, 0x73, 0x67,
	0x72, 0x65, 0x73, 0x30, 0x34, 0x46, 0x2E, 0x61, 0x72, 0x63, 0x00, 0x2F, 0x72, 0x65, 0x73, 0x2F,
	0x4C, 0x61, 0x79, 0x6F, 0x75, 0x74, 0x2F, 0x6D, 0x73, 0x67, 0x72, 0x65, 0x73, 0x30, 0x35, 0x2E,
	0x61, 0x72, 0x63, 0x00, 0x2F, 0x72, 0x65, 0x73, 0x2F, 0x4C, 0x61, 0x79, 0x6F, 0x75, 0x74, 0x2F,
	0x6D, 0x73, 0x67, 0x72, 0x65, 0x73, 0x30, 0x36, 0x2E, 0x61, 0x72, 0x63, 0x00, 0x2F, 0x72, 0x65,
	0x73, 0x2F, 0x4C, 0x61, 0x79, 0x6F, 0x75, 0x74, 0x2F, 0x6D, 0x61, 0x69, 0x6E, 0x32, 0x44, 0x2E,
	0x61, 0x72, 0x63, 0x00, 0x2F, 0x72, 0x65, 0x73, 0x2F, 0x46, 0x6F, 0x6E, 0x74, 0x75, 0x73, 0x2F,
	0x66, 0x6F, 0x6E, 0x74, 0x72, 0x65, 0x73, 0x2E, 0x61, 0x72, 0x63, 0x00, 0x2F, 0x72, 0x65, 0x73,
	0x2F, 0x46, 0x6F, 0x6E, 0x74, 0x75, 0x73, 0x2F, 0x72, 0x75, 0x62, 0x79, 0x72, 0x65, 0x73, 0x2E,
	0x61, 0x72, 0x63, 0x00, 0x2F, 0x72, 0x65, 0x73, 0x2F, 0x50, 0x61, 0x72, 0x74, 0x69, 0x63, 0x6C,
	0x65, 0x2F, 0x63, 0x6F, 0x6D, 0x6D, 0x6F, 0x6E, 0x2E, 0x6A, 0x70, 0x63, 0x00, 0x2F, 0x72, 0x65,
	0x73, 0x2F, 0x49, 0x74, 0x65, 0x6D, 0x54, 0x61, 0x62, 0x6C, 0x65, 0x2F, 0x69, 0x74, 0x65, 0x6D,
	0x5F, 0x74, 0x61, 0x62, 0x6C, 0x65, 0x2E, 0x62, 0x69, 0x6E, 0x00, 0x2F, 0x72, 0x65, 0x73, 0x2F,
	0x49, 0x74, 0x65, 0x6D, 0x54, 0x61, 0x62, 0x6C, 0x65, 0x2F, 0x65, 0x6E, 0x65, 0x6D, 0x79, 0x5F,
	0x74, 0x61, 0x62, 0x6C, 0x65, 0x2E, 0x62, 0x69, 0x6E, 0x00,
	/* padding */
	0x00, 0x00,
};

/* 802572B8-80257910 0658+00 .text      __dt__10dScnLogo_cFv                                         */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
ASM_FUNCTION(__dt__10dScnLogo_cFv) {
	nofralloc
#include "asm/d/s/d_s_logo/__dt__10dScnLogo_cFv.s"
}
#pragma pop


/* 80257910-802579BC 00AC+00 .text      phase_0__FP10dScnLogo_c                                      */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
ASM_FUNCTION(phase_0__FP10dScnLogo_c) {
	nofralloc
#include "asm/d/s/d_s_logo/phase_0__FP10dScnLogo_c.s"
}
#pragma pop


/* 802579BC-80257A70 00B4+00 .text      phase_1__FP10dScnLogo_c                                      */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
ASM_FUNCTION(phase_1__FP10dScnLogo_c) {
	nofralloc
#include "asm/d/s/d_s_logo/phase_1__FP10dScnLogo_c.s"
}
#pragma pop


/* 80257A70-80257AB4 0044+00 .text      phase_2__FP10dScnLogo_c                                      */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
ASM_FUNCTION(phase_2__FP10dScnLogo_c) {
	nofralloc
#include "asm/d/s/d_s_logo/phase_2__FP10dScnLogo_c.s"
}
#pragma pop


/* 80257AB4-80257AE0 002C+00 .text      resLoad__FP30request_of_phase_process_classP10dScnLogo_c     */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
ASM_FUNCTION(resLoad__FP30request_of_phase_process_classP10dScnLogo_c) {
	nofralloc
#include "asm/d/s/d_s_logo/resLoad__FP30request_of_phase_process_classP10dScnLogo_c.s"
}
#pragma pop


/* 80257AE0-80257C64 0184+00 .text      create__10dScnLogo_cFv                                       */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
ASM_FUNCTION(create__10dScnLogo_cFv) {
	nofralloc
#include "asm/d/s/d_s_logo/create__10dScnLogo_cFv.s"
}
#pragma pop


/* 80257C64-80257FEC 0388+00 .text      logoInitGC__10dScnLogo_cFv                                   */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
ASM_FUNCTION(logoInitGC__10dScnLogo_cFv) {
	nofralloc
#include "asm/d/s/d_s_logo/logoInitGC__10dScnLogo_cFv.s"
}
#pragma pop


/* 80257FEC-80258420 0434+00 .text      dvdDataLoad__10dScnLogo_cFv                                  */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
ASM_FUNCTION(dvdDataLoad__10dScnLogo_cFv) {
	nofralloc
#include "asm/d/s/d_s_logo/dvdDataLoad__10dScnLogo_cFv.s"
}
#pragma pop


/* 80258420-80258444 0024+00 .text      dScnLogo_Create__FP11scene_class                             */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
ASM_FUNCTION(dScnLogo_Create__FP11scene_class) {
	nofralloc
#include "asm/d/s/d_s_logo/dScnLogo_Create__FP11scene_class.s"
}
#pragma pop


/* 80258444-80258484 0040+00 .text      dScnLogo_Execute__FP10dScnLogo_c                             */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
ASM_FUNCTION(dScnLogo_Execute__FP10dScnLogo_c) {
	nofralloc
#include "asm/d/s/d_s_logo/dScnLogo_Execute__FP10dScnLogo_c.s"
}
#pragma pop


/* 80258484-802584A8 0024+00 .text      dScnLogo_Draw__FP10dScnLogo_c                                */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
ASM_FUNCTION(dScnLogo_Draw__FP10dScnLogo_c) {
	nofralloc
#include "asm/d/s/d_s_logo/dScnLogo_Draw__FP10dScnLogo_c.s"
}
#pragma pop


/* 802584A8-802584D0 0028+00 .text      dScnLogo_Delete__FP10dScnLogo_c                              */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
ASM_FUNCTION(dScnLogo_Delete__FP10dScnLogo_c) {
	nofralloc
#include "asm/d/s/d_s_logo/dScnLogo_Delete__FP10dScnLogo_c.s"
}
#pragma pop


/* 802584D0-802584D8 0008+00 .text      dScnLogo_IsDelete__FP10dScnLogo_c                            */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
ASM_FUNCTION(dScnLogo_IsDelete__FP10dScnLogo_c) {
	nofralloc
#include "asm/d/s/d_s_logo/dScnLogo_IsDelete__FP10dScnLogo_c.s"
}
#pragma pop


/* 802584D8-802584FC 0024+00 .text      setProgressiveMode__10dScnLogo_cFUc                          */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
ASM_FUNCTION(setProgressiveMode__10dScnLogo_cFUc) {
	nofralloc
#include "asm/d/s/d_s_logo/setProgressiveMode__10dScnLogo_cFUc.s"
}
#pragma pop


/* 802584FC-80258520 0024+00 .text      getProgressiveMode__10dScnLogo_cFv                           */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
ASM_FUNCTION(getProgressiveMode__10dScnLogo_cFv) {
	nofralloc
#include "asm/d/s/d_s_logo/getProgressiveMode__10dScnLogo_cFv.s"
}
#pragma pop


/* 80258520-8025854C 002C+00 .text      isProgressiveMode__10dScnLogo_cFv                            */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
ASM_FUNCTION(isProgressiveMode__10dScnLogo_cFv) {
	nofralloc
#include "asm/d/s/d_s_logo/isProgressiveMode__10dScnLogo_cFv.s"
}
#pragma pop


/* 8025854C-8025855C 0010+00 .text      setRenderMode__10dScnLogo_cFv                                */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
ASM_FUNCTION(setRenderMode__10dScnLogo_cFv) {
	nofralloc
#include "asm/d/s/d_s_logo/setRenderMode__10dScnLogo_cFv.s"
}
#pragma pop


/* 8025855C-802585A4 0048+00 .text      __dt__10dLog_HIO_cFv                                         */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
ASM_FUNCTION(__dt__10dLog_HIO_cFv) {
	nofralloc
#include "asm/d/s/d_s_logo/__dt__10dLog_HIO_cFv.s"
}
#pragma pop


/* 802585A4-802585C0 001C+00 .text      cLib_calcTimer<Us>__FPUs                                     */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
ASM_FUNCTION(func_802585A4) {
	nofralloc
#include "asm/d/s/d_s_logo/func_802585A4.s"
}
#pragma pop


/* ############################################################################################## */
/* 80430758-80430768 000C+04 .bss       @3702                                                        */
u8 d_s_d_s_logo__lit_3702[12 + 4 /* padding */];

/* 804510E8-804510F0 0008+00 .sbss      g_LogHIO                                                     */
u8 g_LogHIO[8];

/* 802585C0-8025878C 01CC+00 .text      __sinit_d_s_logo_cpp                                         */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
ASM_FUNCTION(__sinit_d_s_logo_cpp) {
	nofralloc
#include "asm/d/s/d_s_logo/__sinit_d_s_logo_cpp.s"
}
#pragma pop


/* ############################################################################################## */
