// 
// Generated By: dol2asm
// Translation Unit: d/kankyo/d_kankyo_data
// 

#include "dolphin/types.h"

// 
// Forward References:
// 

extern "C" extern void dKyd_dmpalet_getp__Fv();
extern "C" extern void dKyd_dmpselect_getp__Fv();
extern "C" extern void dKyd_dmenvr_getp__Fv();
extern "C" extern void dKyd_dmvrbox_getp__Fv();
extern "C" extern void dKyd_schejule_getp__Fv();
extern "C" extern void dKyd_schejule_boss_getp__Fv();
extern "C" extern void dKyd_xfog_table_set__FUc();
extern "C" extern void dKyd_maple_col_getp__Fv();
extern "C" extern void dKyd_darkworld_tbl_getp__Fv();
extern "C" extern void dKyd_light_size_tbl_getp__Fv();
extern "C" extern void dKyd_light_tw_size_tbl_getp__Fv();
extern "C" extern void dKyd_BloomInf_tbl_getp__Fi();
SECTION_RODATA extern const u8 d_kankyo_d_kankyo_data__stringBase0[424];
SECTION_DATA extern u8 l_kydata_BloomInf_tbl[768];
SECTION_DATA extern void*l_darkworld_tbl[68];
SECTION_DATA extern u8 l_light_size_tbl[288];
SECTION_DATA extern u8 l_light_size_tbl_tw[72];
SECTION_DATA extern u8 l_maple_col[36];
SECTION_DATA extern u8 l_time_attribute[132];
SECTION_DATA extern u8 l_time_attribute_boss[132];
SECTION_DATA extern u8 l_field_data[832];
SECTION_DATA extern u8 l_pselect_default[24];
SECTION_DATA extern u8 l_envr_default[130 + 2 /* padding */];
SECTION_DATA extern u8 l_vr_box_data[378 + 2 /* padding */];
SECTION_DATA extern u8 S_xfog_table_data[40 + 4 /* padding */];

// 
// External References:
// 

SECTION_BSS extern u8 g_env_light[4880];

// 
// Declarations:
// 

/* ############################################################################################## */
/* 803A8E98-803A9198 0300+00 .data      l_kydata_BloomInf_tbl                                        */
u8 l_kydata_BloomInf_tbl[768] = {
	0x01, 0xFF, 0x40, 0x80, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0x00, 0x00, 0x28, 0x46, 0x87,
	0xCF, 0xB1, 0x38, 0xD2, 0xFF, 0xFF, 0xFF, 0x60, 0x00, 0x2D, 0x46, 0x73, 0xCF, 0xB1, 0x38, 0xD2,
	0xFF, 0xFF, 0xFF, 0x60, 0x00, 0x00, 0x40, 0x30, 0x60, 0xBA, 0xEC, 0xFF, 0xFF, 0xFF, 0xFF, 0x00,
	0x01, 0x40, 0x50, 0x40, 0x86, 0x83, 0x96, 0xFF, 0xFF, 0xFF, 0xFF, 0x00, 0x01, 0x64, 0x50, 0x50,
	0xFF, 0xD7, 0x96, 0xFF, 0xFF, 0xFF, 0xFF, 0x00, 0x01, 0xA0, 0x30, 0xC8, 0x81, 0x77, 0x6F, 0xFF,
	0xFF, 0xFF, 0xFF, 0x00, 0x01, 0x64, 0x40, 0x60, 0xFF, 0x60, 0x00, 0xFF, 0xFF, 0xFF, 0xFF, 0x00,
	0x01, 0x60, 0x5E, 0x60, 0x69, 0x86, 0xA5, 0xFF, 0xFF, 0xFF, 0xFF, 0x00, 0x01, 0x40, 0x60, 0x6E,
	0x58, 0xA5, 0x8C, 0xFF, 0xFF, 0xFF, 0xFF, 0x00, 0x00, 0x23, 0x2F, 0x9B, 0x7D, 0x6E, 0x50, 0xFF,
	0xFF, 0xFF, 0xFF, 0x00, 0x01, 0x30, 0x40, 0x80, 0x3C, 0xB7, 0xA0, 0xFF, 0xFF, 0xFF, 0xFF, 0x00,
	0x01, 0x38, 0x5F, 0x82, 0x7D, 0x87, 0x93, 0xFF, 0xFF, 0xFF, 0xFF, 0x00, 0x01, 0x73, 0x6C, 0xFF,
	0xED, 0xFF, 0xCA, 0xFF, 0xFF, 0xFF, 0xFF, 0x00, 0x01, 0x31, 0x30, 0xC8, 0x97, 0xAB, 0xA0, 0xFF,
	0xFF, 0xFF, 0xFF, 0x00, 0x00, 0x28, 0x46, 0x78, 0x42, 0x2E, 0x30, 0xFF, 0x80, 0xFF, 0xFF, 0x54,
	0x00, 0x28, 0x46, 0x87, 0x96, 0xB4, 0x64, 0xD2, 0xFF, 0xFF, 0xFF, 0x54, 0x01, 0x28, 0x46, 0x73,
	0x78, 0x96, 0xA0, 0x0D, 0x00, 0x00, 0x00, 0x00, 0x01, 0x00, 0x7D, 0xFF, 0xFF, 0xFF, 0xFF, 0xEF,
	0xFF, 0xFF, 0xFF, 0xFF, 0x00, 0x62, 0x69, 0x80, 0xB2, 0x5F, 0x00, 0xFF, 0xE4, 0xFF, 0xFF, 0x90,
	0x01, 0x30, 0x40, 0x59, 0xFF, 0xEF, 0x86, 0xCE, 0xFF, 0xD5, 0x8C, 0xC8, 0x01, 0x6E, 0x46, 0x9A,
	0xFF, 0xD7, 0x06, 0xE0, 0xFF, 0xDC, 0xA7, 0x49, 0x01, 0x40, 0x60, 0x40, 0x6E, 0x80, 0x80, 0xFF,
	0xFF, 0xFF, 0xFF, 0x00, 0x00, 0x80, 0x40, 0x80, 0xFF, 0xFF, 0xFF, 0xF3, 0xFF, 0xFF, 0xFF, 0x00,
	0x00, 0x80, 0x40, 0x80, 0xFF, 0xFF, 0xFF, 0xF3, 0xFF, 0xFF, 0xFF, 0x00, 0x01, 0x8C, 0x2D, 0xA0,
	0x63, 0x55, 0x49, 0xFF, 0xFF, 0xFF, 0xFF, 0x00, 0x01, 0x5F, 0x59, 0x5A, 0x96, 0x91, 0x84, 0xFF,
	0xFF, 0xFF, 0xFF, 0x00, 0x00, 0x52, 0x64, 0x3C, 0xFF, 0xC2, 0x70, 0xBA, 0xFF, 0xFF, 0xFF, 0x00,
	0x00, 0x8C, 0x2D, 0xA0, 0x63, 0x55, 0x49, 0xFF, 0xFF, 0xFF, 0xFF, 0x00, 0x01, 0x46, 0x5A, 0x41,
	0x3C, 0x50, 0x46, 0xFF, 0xFA, 0xFF, 0x9B, 0x78, 0x01, 0x2E, 0x60, 0x7D, 0x64, 0x96, 0x80, 0xFF,
	0xFF, 0xFF, 0xFF, 0x00, 0x00, 0x00, 0x83, 0xFF, 0x72, 0xD1, 0xFF, 0xFF, 0xFF, 0xE2, 0xFE, 0x7D,
	0x00, 0x5F, 0x14, 0xB4, 0x50, 0x96, 0xFA, 0xFF, 0xFF, 0xFF, 0xFF, 0x64, 0x00, 0x28, 0x46, 0x87,
	0x82, 0xC8, 0xFA, 0xD2, 0xFF, 0xFF, 0xFF, 0x32, 0x00, 0x20, 0x10, 0x50, 0x64, 0x64, 0x32, 0xFF,
	0x96, 0xFF, 0xFF, 0x82, 0x00, 0x00, 0x00, 0x30, 0x00, 0xBA, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0x00,
	0x01, 0x40, 0x50, 0x40, 0x86, 0x83, 0x96, 0xFF, 0xFF, 0xFF, 0xFF, 0x00, 0x01, 0x64, 0x50, 0x50,
	0xFF, 0xD7, 0x96, 0xFF, 0xFF, 0xFF, 0xFF, 0x00, 0x01, 0xA0, 0x30, 0xC8, 0x81, 0x77, 0x6F, 0xFF,
	0xFF, 0xFF, 0xFF, 0x00, 0x01, 0x64, 0x40, 0x60, 0xFF, 0x60, 0x00, 0xFF, 0xFF, 0xFF, 0xFF, 0x00,
	0x01, 0x30, 0x30, 0x60, 0x6F, 0x69, 0x52, 0xFF, 0xC0, 0xB9, 0xA1, 0x80, 0x01, 0x2D, 0x60, 0x87,
	0xFF, 0xE0, 0x46, 0xFF, 0xFF, 0x85, 0x79, 0x60, 0x00, 0x00, 0x88, 0x6A, 0x85, 0x3E, 0x1F, 0xFF,
	0xFF, 0xFF, 0xFF, 0x11, 0x00, 0x2E, 0x41, 0x64, 0xF9, 0xE7, 0x7C, 0xD0, 0xFF, 0xDA, 0x9A, 0xBB,
	0x00, 0x00, 0xFF, 0xFF, 0xBE, 0xB9, 0xB4, 0xE6, 0xFF, 0xFF, 0xFF, 0x00, 0x00, 0x2D, 0x46, 0x50,
	0xCF, 0xB1, 0x38, 0xD2, 0xFF, 0xFF, 0xFF, 0x60, 0x00, 0xA0, 0x14, 0x32, 0xE6, 0xFF, 0x96, 0xF3,
	0xE6, 0xFF, 0x96, 0x6E, 0x00, 0x52, 0x64, 0x3C, 0xFF, 0xC2, 0x70, 0xBA, 0xFF, 0xFF, 0xFF, 0x00,
	0x00, 0x80, 0x40, 0x80, 0xFF, 0xFF, 0xFF, 0xF1, 0xFF, 0xFF, 0xFF, 0x00, 0x01, 0x80, 0x40, 0x80,
	0xFF, 0xFF, 0xFF, 0xF0, 0xFF, 0xFF, 0xFF, 0x00, 0x00, 0x00, 0x7D, 0xFF, 0xFF, 0xFF, 0xFF, 0xEF,
	0xFF, 0xFF, 0xFF, 0xFF, 0x00, 0x62, 0x69, 0x80, 0xB2, 0x5F, 0x00, 0xFF, 0xE4, 0xFF, 0xFF, 0x90,
	0x01, 0x30, 0x40, 0x59, 0xFF, 0xEF, 0x86, 0xCE, 0xFF, 0xD5, 0x8C, 0xC8, 0x01, 0x6E, 0x46, 0x9A,
	0xFF, 0xD7, 0x06, 0xE0, 0xFF, 0xDC, 0xA7, 0x49, 0x00, 0x80, 0x40, 0x80, 0xFF, 0xFF, 0xFF, 0xF3,
	0xFF, 0xFF, 0xFF, 0x00, 0x00, 0x80, 0x40, 0x80, 0xFF, 0xFF, 0xFF, 0xF3, 0xFF, 0xFF, 0xFF, 0x00,
	0x00, 0x80, 0x40, 0x80, 0xFF, 0xFF, 0xFF, 0xF3, 0xFF, 0xFF, 0xFF, 0x00, 0x00, 0x80, 0x40, 0x80,
	0xFF, 0xFF, 0xFF, 0xF3, 0xFF, 0xFF, 0xFF, 0x00, 0x00, 0x80, 0x40, 0x80, 0xFF, 0xFF, 0xFF, 0xF3,
	0xFF, 0xFF, 0xFF, 0x00, 0x00, 0x80, 0x40, 0x80, 0xFF, 0xFF, 0xFF, 0xF3, 0xFF, 0xFF, 0xFF, 0x00,
	0x00, 0x80, 0x40, 0x80, 0xFF, 0xFF, 0xFF, 0xF3, 0xFF, 0xFF, 0xFF, 0x00, 0x00, 0x80, 0x40, 0x80,
	0xFF, 0xFF, 0xFF, 0xF3, 0xFF, 0xFF, 0xFF, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
};

/* 803A9198-803A92A8 0110+00 .data      l_darkworld_tbl                                              */
void* l_darkworld_tbl[68] = {
	(void*)&d_kankyo_d_kankyo_data__stringBase0,
	(void*)0x06000000,
	(void*)0x8037A1C7,
	(void*)0x05000000,
	(void*)0x8037A1CE,
	(void*)0x05000000,
	(void*)0x8037A1D6,
	(void*)0x05000000,
	(void*)0x8037A1DE,
	(void*)0x05000000,
	(void*)0x8037A1E5,
	(void*)0x05000000,
	(void*)0x8037A1ED,
	(void*)0x05000000,
	(void*)0x8037A1ED,
	(void*)0x05000000,
	(void*)0x8037A1ED,
	(void*)0x05000000,
	(void*)0x8037A1F4,
	(void*)0x05000000,
	(void*)0x8037A1FC,
	NULL,
	(void*)0x8037A204,
	(void*)0x05000000,
	(void*)0x8037A20B,
	(void*)0x02000000,
	(void*)0x8037A213,
	NULL,
	(void*)0x8037A21B,
	NULL,
	(void*)0x8037A223,
	(void*)0x05000000,
	(void*)0x8037A22A,
	(void*)0x01000000,
	(void*)0x8037A232,
	(void*)0x01000000,
	(void*)0x8037A23A,
	(void*)0x01000000,
	(void*)0x8037A242,
	(void*)0x01000000,
	(void*)0x8037A24A,
	(void*)0x02000000,
	(void*)0x8037A252,
	(void*)0x02000000,
	(void*)0x8037A25A,
	(void*)0x02000000,
	(void*)0x8037A262,
	(void*)0x02000000,
	(void*)0x8037A26A,
	(void*)0x02000000,
	(void*)0x8037A272,
	(void*)0x01000000,
	(void*)0x8037A27A,
	(void*)0x02000000,
	(void*)0x8037A282,
	(void*)0x01000000,
	(void*)0x8037A28A,
	(void*)0x02000000,
	(void*)0x8037A292,
	(void*)0x06000000,
	(void*)0x8037A299,
	(void*)0x06000000,
	(void*)0x8037A2A1,
	(void*)0x06000000,
	(void*)0x8037A2A9,
	(void*)0x06000000,
	(void*)0x8037A2B1,
	NULL,
};

/* 803A92A8-803A93C8 0120+00 .data      l_light_size_tbl                                             */
u8 l_light_size_tbl[288] = {
	0x80, 0x37, 0xA2, 0xB8, 0x00, 0x00, 0x00, 0x00, 0x80, 0x37, 0xA2, 0x1B, 0x00, 0x00, 0x00, 0x00,
	0x80, 0x37, 0xA2, 0x2A, 0x02, 0x00, 0x00, 0x00, 0x80, 0x37, 0xA2, 0x32, 0x02, 0x00, 0x00, 0x00,
	0x80, 0x37, 0xA2, 0x3A, 0x00, 0x00, 0x00, 0x00, 0x80, 0x37, 0xA2, 0x82, 0x00, 0x00, 0x00, 0x00,
	0x80, 0x37, 0xA2, 0xBF, 0x00, 0x00, 0x00, 0x00, 0x80, 0x37, 0xA2, 0xC7, 0x02, 0x00, 0x00, 0x00,
	0x80, 0x37, 0xA2, 0x5A, 0x02, 0x00, 0x00, 0x00, 0x80, 0x37, 0xA2, 0x72, 0x03, 0x00, 0x00, 0x00,
	0x80, 0x37, 0xA2, 0xCF, 0x03, 0x00, 0x00, 0x00, 0x80, 0x37, 0xA2, 0x6A, 0x03, 0x00, 0x00, 0x00,
	0x80, 0x37, 0xA2, 0xD7, 0x03, 0x00, 0x00, 0x00, 0x80, 0x37, 0xA2, 0x8A, 0x00, 0x00, 0x00, 0x00,
	0x80, 0x37, 0xA2, 0xDF, 0x00, 0x00, 0x00, 0x00, 0x80, 0x37, 0xA2, 0xE7, 0x00, 0x00, 0x00, 0x00,
	0x80, 0x37, 0xA2, 0xEF, 0x02, 0x00, 0x00, 0x00, 0x80, 0x37, 0xA2, 0xF7, 0x03, 0x00, 0x00, 0x00,
	0x80, 0x37, 0xA2, 0xFF, 0x02, 0x00, 0x00, 0x00, 0x80, 0x37, 0xA3, 0x07, 0x00, 0x00, 0x00, 0x00,
	0x80, 0x37, 0xA3, 0x0F, 0x02, 0x00, 0x00, 0x00, 0x80, 0x37, 0xA3, 0x17, 0x02, 0x00, 0x00, 0x00,
	0x80, 0x37, 0xA3, 0x1F, 0x02, 0x00, 0x00, 0x00, 0x80, 0x37, 0xA3, 0x27, 0x02, 0x00, 0x00, 0x00,
	0x80, 0x37, 0xA2, 0x92, 0x02, 0x00, 0x00, 0x00, 0x80, 0x37, 0xA2, 0xA9, 0x02, 0x00, 0x00, 0x00,
	0x80, 0x37, 0xA2, 0x99, 0x02, 0x00, 0x00, 0x00, 0x80, 0x37, 0xA2, 0xA1, 0x02, 0x00, 0x00, 0x00,
	0x80, 0x37, 0xA3, 0x2F, 0x02, 0x00, 0x00, 0x00, 0x80, 0x37, 0xA3, 0x37, 0x02, 0x00, 0x00, 0x00,
	0x80, 0x37, 0xA3, 0x3E, 0x03, 0x00, 0x00, 0x00, 0x80, 0x37, 0xA3, 0x46, 0x03, 0x00, 0x00, 0x00,
	0x80, 0x37, 0xA3, 0x4E, 0x02, 0x00, 0x00, 0x00, 0x80, 0x37, 0xA3, 0x56, 0x00, 0x00, 0x00, 0x00,
	0x80, 0x37, 0xA3, 0x5D, 0x00, 0x00, 0x00, 0x00, 0x80, 0x37, 0xA2, 0xB1, 0x00, 0x00, 0x00, 0x00,
};

/* 803A93C8-803A9410 0048+00 .data      l_light_size_tbl_tw                                          */
u8 l_light_size_tbl_tw[72] = {
	0x80, 0x37, 0xA2, 0x2A, 0x02, 0x00, 0x00, 0x00, 0x80, 0x37, 0xA2, 0x32, 0x02, 0x00, 0x00, 0x00,
	0x80, 0x37, 0xA2, 0x82, 0x02, 0x00, 0x00, 0x00, 0x80, 0x37, 0xA2, 0x52, 0x00, 0x00, 0x00, 0x00,
	0x80, 0x37, 0xA2, 0x7A, 0x02, 0x00, 0x00, 0x00, 0x80, 0x37, 0xA2, 0x5A, 0x02, 0x00, 0x00, 0x00,
	0x80, 0x37, 0xA2, 0x72, 0x03, 0x00, 0x00, 0x00, 0x80, 0x37, 0xA2, 0xCF, 0x03, 0x00, 0x00, 0x00,
	0x80, 0x37, 0xA2, 0x6A, 0x03, 0x00, 0x00, 0x00,
};

/* 803A9410-803A9434 0024+00 .data      l_maple_col                                                  */
u8 l_maple_col[36] = {
	0x56, 0x4B, 0x39, 0x37, 0x28, 0x1E, 0x6E, 0x32, 0x0F, 0x64, 0x64, 0x80, 0x52, 0x41, 0x66, 0x19,
	0x0F, 0x00, 0x46, 0x00, 0x0F, 0x64, 0x64, 0x80, 0x65, 0x5E, 0x69, 0x0E, 0x23, 0x0B, 0x28, 0x14,
	0x05, 0x5A, 0x5A, 0x6E,
};

/* 803A9434-803A94B8 0084+00 .data      l_time_attribute                                             */
u8 l_time_attribute[132] = {
	0x00, 0x00, 0x00, 0x00, 0x42, 0x96, 0x00, 0x00, 0x05, 0x05, 0x00, 0x00, 0x42, 0x96, 0x00, 0x00,
	0x42, 0xB4, 0x00, 0x00, 0x05, 0x00, 0x00, 0x00, 0x42, 0xB4, 0x00, 0x00, 0x42, 0xD2, 0x00, 0x00,
	0x00, 0x01, 0x00, 0x00, 0x42, 0xD2, 0x00, 0x00, 0x42, 0xD2, 0x00, 0x00, 0x01, 0x01, 0x00, 0x00,
	0x42, 0xD2, 0x00, 0x00, 0x43, 0x07, 0x00, 0x00, 0x01, 0x02, 0x00, 0x00, 0x43, 0x07, 0x00, 0x00,
	0x43, 0x70, 0x00, 0x00, 0x02, 0x02, 0x00, 0x00, 0x43, 0x70, 0x00, 0x00, 0x43, 0x7F, 0x00, 0x00,
	0x02, 0x03, 0x00, 0x00, 0x43, 0x7F, 0x00, 0x00, 0x43, 0x87, 0x00, 0x00, 0x03, 0x03, 0x00, 0x00,
	0x43, 0x87, 0x00, 0x00, 0x43, 0x8E, 0x80, 0x00, 0x03, 0x04, 0x00, 0x00, 0x43, 0x8E, 0x80, 0x00,
	0x43, 0x96, 0x00, 0x00, 0x04, 0x05, 0x00, 0x00, 0x43, 0x96, 0x00, 0x00, 0x43, 0xB4, 0x00, 0x00,
	0x05, 0x05, 0x00, 0x00,
};

/* 803A94B8-803A953C 0084+00 .data      l_time_attribute_boss                                        */
u8 l_time_attribute_boss[132] = {
	0x00, 0x00, 0x00, 0x00, 0x42, 0x34, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x42, 0x34, 0x00, 0x00,
	0x42, 0xB4, 0x00, 0x00, 0x01, 0x02, 0x00, 0x00, 0x42, 0xB4, 0x00, 0x00, 0x43, 0x34, 0x00, 0x00,
	0x02, 0x03, 0x00, 0x00, 0x43, 0x34, 0x00, 0x00, 0x43, 0x61, 0x00, 0x00, 0x03, 0x04, 0x00, 0x00,
	0x43, 0x61, 0x00, 0x00, 0x43, 0x87, 0x00, 0x00, 0x04, 0x05, 0x00, 0x00, 0x43, 0x87, 0x00, 0x00,
	0x43, 0xB4, 0x00, 0x00, 0x05, 0x00, 0x00, 0x00, 0x43, 0xB4, 0x00, 0x00, 0x43, 0xB4, 0x00, 0x00,
	0x05, 0x05, 0x00, 0x00, 0x43, 0xB4, 0x00, 0x00, 0x43, 0xB4, 0x00, 0x00, 0x05, 0x05, 0x00, 0x00,
	0x43, 0xB4, 0x00, 0x00, 0x43, 0xB4, 0x00, 0x00, 0x05, 0x05, 0x00, 0x00, 0x43, 0xB4, 0x00, 0x00,
	0x43, 0xB4, 0x00, 0x00, 0x05, 0x05, 0x00, 0x00, 0x43, 0xB4, 0x00, 0x00, 0x43, 0xB4, 0x00, 0x00,
	0x05, 0x05, 0x00, 0x00,
};

/* 803A953C-803A987C 0340+00 .data      l_field_data                                                 */
u8 l_field_data[832] = {
	0x40, 0x40, 0x40, 0x40, 0x40, 0x40, 0x40, 0x40, 0x40, 0x40, 0x40, 0x40, 0x40, 0x40, 0x40, 0x40,
	0x40, 0x40, 0x40, 0x40, 0x40, 0x40, 0x40, 0x40, 0x40, 0x40, 0x40, 0x40, 0x40, 0x40, 0x40, 0x40,
	0x40, 0x40, 0x40, 0x40, 0xC5, 0x9C, 0x40, 0x00, 0x46, 0xEA, 0x60, 0x00, 0x00, 0x00, 0x00, 0x00,
	0x00, 0x00, 0x00, 0x00, 0x40, 0x40, 0x40, 0x40, 0x40, 0x40, 0x40, 0x40, 0x40, 0x40, 0x40, 0x40,
	0x40, 0x40, 0x40, 0x40, 0x40, 0x40, 0x40, 0x40, 0x40, 0x40, 0x40, 0x40, 0x40, 0x40, 0x40, 0x40,
	0x40, 0x40, 0x40, 0x40, 0x40, 0x40, 0x40, 0x40, 0xC5, 0x9C, 0x40, 0x00, 0x46, 0xEA, 0x60, 0x00,
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x40, 0x40, 0x40, 0x40, 0x40, 0x40, 0x40, 0x40,
	0x40, 0x40, 0x40, 0x40, 0x40, 0x40, 0x40, 0x40, 0x40, 0x40, 0x40, 0x40, 0x40, 0x40, 0x40, 0x40,
	0x40, 0x40, 0x40, 0x40, 0x40, 0x40, 0x40, 0x40, 0x40, 0x40, 0x40, 0x40, 0xC5, 0x9C, 0x40, 0x00,
	0x46, 0xEA, 0x60, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x40, 0x40, 0x40, 0x40,
	0x40, 0x40, 0x40, 0x40, 0x40, 0x40, 0x40, 0x40, 0x40, 0x40, 0x40, 0x40, 0x40, 0x40, 0x40, 0x40,
	0x40, 0x40, 0x40, 0x40, 0x40, 0x40, 0x40, 0x40, 0x40, 0x40, 0x40, 0x40, 0x40, 0x40, 0x40, 0x40,
	0xC5, 0x9C, 0x40, 0x00, 0x46, 0xEA, 0x60, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
	0x40, 0x40, 0x40, 0x40, 0x40, 0x40, 0x40, 0x40, 0x40, 0x40, 0x40, 0x40, 0x40, 0x40, 0x40, 0x40,
	0x40, 0x40, 0x40, 0x40, 0x40, 0x40, 0x40, 0x40, 0x40, 0x40, 0x40, 0x40, 0x40, 0x40, 0x40, 0x40,
	0x40, 0x40, 0x40, 0x40, 0xC5, 0x9C, 0x40, 0x00, 0x46, 0xEA, 0x60, 0x00, 0x00, 0x00, 0x00, 0x00,
	0x00, 0x00, 0x00, 0x00, 0x40, 0x40, 0x40, 0x40, 0x40, 0x40, 0x40, 0x40, 0x40, 0x40, 0x40, 0x40,
	0x40, 0x40, 0x40, 0x40, 0x40, 0x40, 0x40, 0x40, 0x40, 0x40, 0x40, 0x40, 0x40, 0x40, 0x40, 0x40,
	0x40, 0x40, 0x40, 0x40, 0x40, 0x40, 0x40, 0x40, 0xC5, 0x9C, 0x40, 0x00, 0x46, 0xEA, 0x60, 0x00,
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x40, 0x40, 0x40, 0x40, 0x40, 0x40, 0x40, 0x40,
	0x40, 0x40, 0x40, 0x40, 0x40, 0x40, 0x40, 0x40, 0x40, 0x40, 0x40, 0x40, 0x40, 0x40, 0x40, 0x40,
	0x40, 0x40, 0x40, 0x40, 0x40, 0x40, 0x40, 0x40, 0x40, 0x40, 0x40, 0x40, 0xC5, 0x9C, 0x40, 0x00,
	0x46, 0xEA, 0x60, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x40, 0x40, 0x40, 0x40,
	0x40, 0x40, 0x40, 0x40, 0x40, 0x40, 0x40, 0x40, 0x40, 0x40, 0x40, 0x40, 0x40, 0x40, 0x40, 0x40,
	0x40, 0x40, 0x40, 0x40, 0x40, 0x40, 0x40, 0x40, 0x40, 0x40, 0x40, 0x40, 0x40, 0x40, 0x40, 0x40,
	0xC5, 0x9C, 0x40, 0x00, 0x46, 0xEA, 0x60, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
	0x40, 0x40, 0x40, 0x40, 0x40, 0x40, 0x40, 0x40, 0x40, 0x40, 0x40, 0x40, 0x40, 0x40, 0x40, 0x40,
	0x40, 0x40, 0x40, 0x40, 0x40, 0x40, 0x40, 0x40, 0x40, 0x40, 0x40, 0x40, 0x40, 0x40, 0x40, 0x40,
	0x40, 0x40, 0x40, 0x40, 0xC5, 0x9C, 0x40, 0x00, 0x46, 0xEA, 0x60, 0x00, 0x00, 0x00, 0x00, 0x00,
	0x00, 0x00, 0x00, 0x00, 0x40, 0x40, 0x40, 0x40, 0x40, 0x40, 0x40, 0x40, 0x40, 0x40, 0x40, 0x40,
	0x40, 0x40, 0x40, 0x40, 0x40, 0x40, 0x40, 0x40, 0x40, 0x40, 0x40, 0x40, 0x40, 0x40, 0x40, 0x40,
	0x40, 0x40, 0x40, 0x40, 0x40, 0x40, 0x40, 0x40, 0xC5, 0x9C, 0x40, 0x00, 0x46, 0xEA, 0x60, 0x00,
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x40, 0x40, 0x40, 0x40, 0x40, 0x40, 0x40, 0x40,
	0x40, 0x40, 0x40, 0x40, 0x40, 0x40, 0x40, 0x40, 0x40, 0x40, 0x40, 0x40, 0x40, 0x40, 0x40, 0x40,
	0x40, 0x40, 0x40, 0x40, 0x40, 0x40, 0x40, 0x40, 0x40, 0x40, 0x40, 0x40, 0xC5, 0x9C, 0x40, 0x00,
	0x46, 0xEA, 0x60, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x40, 0x40, 0x40, 0x40,
	0x40, 0x40, 0x40, 0x40, 0x40, 0x40, 0x40, 0x40, 0x40, 0x40, 0x40, 0x40, 0x40, 0x40, 0x40, 0x40,
	0x40, 0x40, 0x40, 0x40, 0x40, 0x40, 0x40, 0x40, 0x40, 0x40, 0x40, 0x40, 0x40, 0x40, 0x40, 0x40,
	0xC5, 0x9C, 0x40, 0x00, 0x46, 0xEA, 0x60, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
	0x40, 0x40, 0x40, 0x40, 0x40, 0x40, 0x40, 0x40, 0x40, 0x40, 0x40, 0x40, 0x40, 0x40, 0x40, 0x40,
	0x40, 0x40, 0x40, 0x40, 0x40, 0x40, 0x40, 0x40, 0x40, 0x40, 0x40, 0x40, 0x40, 0x40, 0x40, 0x40,
	0x40, 0x40, 0x40, 0x40, 0xC5, 0x9C, 0x40, 0x00, 0x46, 0xEA, 0x60, 0x00, 0x00, 0x00, 0x00, 0x00,
	0x00, 0x00, 0x00, 0x00, 0x40, 0x40, 0x40, 0x40, 0x40, 0x40, 0x40, 0x40, 0x40, 0x40, 0x40, 0x40,
	0x40, 0x40, 0x40, 0x40, 0x40, 0x40, 0x40, 0x40, 0x40, 0x40, 0x40, 0x40, 0x40, 0x40, 0x40, 0x40,
	0x40, 0x40, 0x40, 0x40, 0x40, 0x40, 0x40, 0x40, 0xC5, 0x9C, 0x40, 0x00, 0x46, 0xEA, 0x60, 0x00,
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x40, 0x40, 0x40, 0x40, 0x40, 0x40, 0x40, 0x40,
	0x40, 0x40, 0x40, 0x40, 0x40, 0x40, 0x40, 0x40, 0x40, 0x40, 0x40, 0x40, 0x40, 0x40, 0x40, 0x40,
	0x40, 0x40, 0x40, 0x40, 0x40, 0x40, 0x40, 0x40, 0x40, 0x40, 0x40, 0x40, 0xC5, 0x9C, 0x40, 0x00,
	0x46, 0xEA, 0x60, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x40, 0x40, 0x40, 0x40,
	0x40, 0x40, 0x40, 0x40, 0x40, 0x40, 0x40, 0x40, 0x40, 0x40, 0x40, 0x40, 0x40, 0x40, 0x40, 0x40,
	0x40, 0x40, 0x40, 0x40, 0x40, 0x40, 0x40, 0x40, 0x40, 0x40, 0x40, 0x40, 0x40, 0x40, 0x40, 0x40,
	0xC5, 0x9C, 0x40, 0x00, 0x46, 0xEA, 0x60, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
};

/* 800569DC-800569E8 000C+00 .text      dKyd_dmpalet_getp__Fv                                        */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
ASM_FUNCTION(dKyd_dmpalet_getp__Fv) {
	nofralloc
#include "asm/d/kankyo/d_kankyo_data/dKyd_dmpalet_getp__Fv.s"
}
#pragma pop


/* ############################################################################################## */
/* 803A987C-803A9894 0018+00 .data      l_pselect_default                                            */
u8 l_pselect_default[24] = {
	0x00, 0x00, 0x01, 0x02, 0x02, 0x03, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x04, 0x04, 0x05, 0x06,
	0x06, 0x07, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
};

/* 800569E8-800569F4 000C+00 .text      dKyd_dmpselect_getp__Fv                                      */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
ASM_FUNCTION(dKyd_dmpselect_getp__Fv) {
	nofralloc
#include "asm/d/kankyo/d_kankyo_data/dKyd_dmpselect_getp__Fv.s"
}
#pragma pop


/* ############################################################################################## */
/* 803A9894-803A9918 0082+02 .data      l_envr_default                                               */
u8 l_envr_default[132] = {
	0x00, 0x01, 0x02, 0x03, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
	0x00, 0x04, 0x05, 0x06, 0x07, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
	0x00, 0x00,
	/* padding */
	0x00, 0x00,
};

/* 800569F4-80056A00 000C+00 .text      dKyd_dmenvr_getp__Fv                                         */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
ASM_FUNCTION(dKyd_dmenvr_getp__Fv) {
	nofralloc
#include "asm/d/kankyo/d_kankyo_data/dKyd_dmenvr_getp__Fv.s"
}
#pragma pop


/* ############################################################################################## */
/* 803A9918-803A9A94 017A+02 .data      l_vr_box_data                                                */
u8 l_vr_box_data[380] = {
	0x2F, 0x1A, 0x07, 0x44, 0x1E, 0x10, 0xF5, 0xA5, 0x6C, 0x9A, 0x5C, 0x3B, 0xFF, 0x44, 0x1E, 0x10,
	0xA3, 0xFF, 0x5B, 0x49, 0x72, 0x39, 0x5B, 0xA7, 0xFF, 0xF7, 0xF7, 0x83, 0x7E, 0x7D, 0x1D, 0x1E,
	0x20, 0x00, 0xFF, 0xF7, 0xF7, 0xFF, 0xE5, 0xF5, 0xFF, 0xFF, 0x45, 0x90, 0xFF, 0xFF, 0xFF, 0xFF,
	0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xC6, 0x00, 0x4E, 0xC3, 0xFF, 0xFF,
	0xAD, 0x85, 0xEE, 0x70, 0x27, 0x33, 0x2E, 0x28, 0x9A, 0x5C, 0x3B, 0xFF, 0xE1, 0x2E, 0x27, 0x86,
	0xFF, 0x66, 0x43, 0xFF, 0x18, 0x1A, 0x1B, 0x3C, 0x30, 0x28, 0x4B, 0x3C, 0x2A, 0x8A, 0x5E, 0x43,
	0xFF, 0x35, 0x1A, 0x10, 0x00, 0xB2, 0x6F, 0x63, 0x2B, 0x00, 0x00, 0x18, 0x31, 0x18, 0x2F, 0x00,
	0x0A, 0x88, 0x50, 0x50, 0x50, 0x1E, 0x00, 0x00, 0x00, 0x00, 0x61, 0x72, 0x9D, 0x78, 0x2F, 0x1A,
	0x07, 0x44, 0x1E, 0x10, 0xF5, 0xA5, 0x6C, 0x9A, 0x5C, 0x3B, 0xFF, 0x44, 0x1E, 0x10, 0xA3, 0xFF,
	0x5B, 0x49, 0x72, 0x39, 0x5B, 0xA7, 0xFF, 0xF7, 0xF7, 0x83, 0x7E, 0x7D, 0x1D, 0x1E, 0x20, 0x00,
	0xFF, 0xF7, 0xF7, 0xFF, 0xE5, 0xF5, 0xFF, 0xFF, 0x45, 0x90, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF,
	0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xC6, 0x00, 0x4E, 0xC3, 0xFF, 0xFF, 0xAD, 0x85,
	0xEE, 0x70, 0x27, 0x33, 0x2E, 0x28, 0x9A, 0x5C, 0x3B, 0xFF, 0xE1, 0x2E, 0x27, 0x86, 0xFF, 0x66,
	0x43, 0xFF, 0x18, 0x1A, 0x1B, 0x3C, 0x30, 0x28, 0x4B, 0x3C, 0x2A, 0x8A, 0x5E, 0x43, 0xFF, 0x35,
	0x1A, 0x10, 0x00, 0xB2, 0x6F, 0x63, 0x2B, 0x00, 0x00, 0x18, 0x31, 0x18, 0x2F, 0x00, 0x0A, 0x88,
	0x50, 0x50, 0x50, 0x1E, 0x00, 0x00, 0x00, 0x00, 0x61, 0x72, 0x9D, 0x78, 0x2F, 0x1A, 0x07, 0x44,
	0x1E, 0x10, 0xF5, 0xA5, 0x6C, 0x9A, 0x5C, 0x3B, 0xFF, 0x44, 0x1E, 0x10, 0xA3, 0xFF, 0x5B, 0x49,
	0x72, 0x39, 0x5B, 0xA7, 0xFF, 0xF7, 0xF7, 0x83, 0x7E, 0x7D, 0x1D, 0x1E, 0x20, 0x00, 0xFF, 0xF7,
	0xF7, 0xFF, 0xE5, 0xF5, 0xFF, 0xFF, 0x45, 0x90, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF,
	0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xC6, 0x00, 0x4E, 0xC3, 0xFF, 0xFF, 0xAD, 0x85, 0xEE, 0x70,
	0x27, 0x33, 0x2E, 0x28, 0x9A, 0x5C, 0x3B, 0xFF, 0xE1, 0x2E, 0x27, 0x86, 0xFF, 0x66, 0x43, 0xFF,
	0x18, 0x1A, 0x1B, 0x3C, 0x30, 0x28, 0x4B, 0x3C, 0x2A, 0x8A, 0x5E, 0x43, 0xFF, 0x35, 0x1A, 0x10,
	0x00, 0xB2, 0x6F, 0x63, 0x2B, 0x00, 0x00, 0x18, 0x31, 0x18, 0x2F, 0x00, 0x0A, 0x88, 0x50, 0x50,
	0x50, 0x1E, 0x00, 0x00, 0x00, 0x00, 0x61, 0x72, 0x9D, 0x78,
	/* padding */
	0x00, 0x00,
};

/* 80056A00-80056A0C 000C+00 .text      dKyd_dmvrbox_getp__Fv                                        */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
ASM_FUNCTION(dKyd_dmvrbox_getp__Fv) {
	nofralloc
#include "asm/d/kankyo/d_kankyo_data/dKyd_dmvrbox_getp__Fv.s"
}
#pragma pop


/* 80056A0C-80056A18 000C+00 .text      dKyd_schejule_getp__Fv                                       */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
ASM_FUNCTION(dKyd_schejule_getp__Fv) {
	nofralloc
#include "asm/d/kankyo/d_kankyo_data/dKyd_schejule_getp__Fv.s"
}
#pragma pop


/* 80056A18-80056A24 000C+00 .text      dKyd_schejule_boss_getp__Fv                                  */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
ASM_FUNCTION(dKyd_schejule_boss_getp__Fv) {
	nofralloc
#include "asm/d/kankyo/d_kankyo_data/dKyd_schejule_boss_getp__Fv.s"
}
#pragma pop


/* ############################################################################################## */
/* 803A9A94-803A9AC0 0028+04 .data      S_xfog_table_data                                            */
u8 S_xfog_table_data[44] = {
	0x01, 0x04, 0x01, 0x04, 0x01, 0x0E, 0x01, 0x18, 0x01, 0x22, 0x01, 0x2C, 0x01, 0x36, 0x01, 0x40,
	0x01, 0x4A, 0x01, 0x54, 0x00, 0xFA, 0x01, 0x04, 0x01, 0x18, 0x01, 0x40, 0x01, 0x5E, 0x01, 0x90,
	0x01, 0xE0, 0x02, 0x26, 0x02, 0x58, 0x03, 0x20,
	/* padding */
	0x00, 0x00, 0x00, 0x00,
};

/* 80056A24-80056A64 0040+00 .text      dKyd_xfog_table_set__FUc                                     */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
ASM_FUNCTION(dKyd_xfog_table_set__FUc) {
	nofralloc
#include "asm/d/kankyo/d_kankyo_data/dKyd_xfog_table_set__FUc.s"
}
#pragma pop


/* 80056A64-80056A70 000C+00 .text      dKyd_maple_col_getp__Fv                                      */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
ASM_FUNCTION(dKyd_maple_col_getp__Fv) {
	nofralloc
#include "asm/d/kankyo/d_kankyo_data/dKyd_maple_col_getp__Fv.s"
}
#pragma pop


/* 80056A70-80056A7C 000C+00 .text      dKyd_darkworld_tbl_getp__Fv                                  */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
ASM_FUNCTION(dKyd_darkworld_tbl_getp__Fv) {
	nofralloc
#include "asm/d/kankyo/d_kankyo_data/dKyd_darkworld_tbl_getp__Fv.s"
}
#pragma pop


/* 80056A7C-80056A88 000C+00 .text      dKyd_light_size_tbl_getp__Fv                                 */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
ASM_FUNCTION(dKyd_light_size_tbl_getp__Fv) {
	nofralloc
#include "asm/d/kankyo/d_kankyo_data/dKyd_light_size_tbl_getp__Fv.s"
}
#pragma pop


/* 80056A88-80056A94 000C+00 .text      dKyd_light_tw_size_tbl_getp__Fv                              */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
ASM_FUNCTION(dKyd_light_tw_size_tbl_getp__Fv) {
	nofralloc
#include "asm/d/kankyo/d_kankyo_data/dKyd_light_tw_size_tbl_getp__Fv.s"
}
#pragma pop


/* 80056A94-80056AA8 0014+00 .text      dKyd_BloomInf_tbl_getp__Fi                                   */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
ASM_FUNCTION(dKyd_BloomInf_tbl_getp__Fi) {
	nofralloc
#include "asm/d/kankyo/d_kankyo_data/dKyd_BloomInf_tbl_getp__Fi.s"
}
#pragma pop


/* ############################################################################################## */
/* 8037A1C0-8037A368 01A4+04 .rodata    @stringBase0                                                 */
#pragma push
#pragma force_active on
#pragma section ".dead"
SECTION_DEAD char* const stringBase_8037A1C0 = "R_SP30";
SECTION_DEAD char* const stringBase_8037A1C7 = "T_SP05";
SECTION_DEAD char* const stringBase_8037A1CE = "T_SP05A";
SECTION_DEAD char* const stringBase_8037A1D6 = "T_WARP2";
SECTION_DEAD char* const stringBase_8037A1DE = "T_IMAI";
SECTION_DEAD char* const stringBase_8037A1E5 = "T_IMAI0";
SECTION_DEAD char* const stringBase_8037A1ED = "T_TOMI";
SECTION_DEAD char* const stringBase_8037A1F4 = "T_SASA1";
SECTION_DEAD char* const stringBase_8037A1FC = "F_SP105";
SECTION_DEAD char* const stringBase_8037A204 = "F_SP05";
SECTION_DEAD char* const stringBase_8037A20B = "R_SP107";
SECTION_DEAD char* const stringBase_8037A213 = "F_SP108";
SECTION_DEAD char* const stringBase_8037A21B = "R_SP108";
SECTION_DEAD char* const stringBase_8037A223 = "TEST11";
SECTION_DEAD char* const stringBase_8037A22A = "F_SP109";
SECTION_DEAD char* const stringBase_8037A232 = "F_SP110";
SECTION_DEAD char* const stringBase_8037A23A = "R_SP109";
SECTION_DEAD char* const stringBase_8037A242 = "F_SP111";
SECTION_DEAD char* const stringBase_8037A24A = "F_SP112";
SECTION_DEAD char* const stringBase_8037A252 = "F_SP113";
SECTION_DEAD char* const stringBase_8037A25A = "F_SP115";
SECTION_DEAD char* const stringBase_8037A262 = "F_SP116";
SECTION_DEAD char* const stringBase_8037A26A = "F_SP122";
SECTION_DEAD char* const stringBase_8037A272 = "F_SP121";
SECTION_DEAD char* const stringBase_8037A27A = "F_SP126";
SECTION_DEAD char* const stringBase_8037A282 = "R_SP209";
SECTION_DEAD char* const stringBase_8037A28A = "R_SP116";
SECTION_DEAD char* const stringBase_8037A292 = "D_MN08";
SECTION_DEAD char* const stringBase_8037A299 = "D_MN08B";
SECTION_DEAD char* const stringBase_8037A2A1 = "D_MN08C";
SECTION_DEAD char* const stringBase_8037A2A9 = "D_MN08A";
SECTION_DEAD char* const stringBase_8037A2B1 = "D_SB10";
SECTION_DEAD char* const stringBase_8037A2B8 = "R_SP01";
SECTION_DEAD char* const stringBase_8037A2BF = "R_SP128";
SECTION_DEAD char* const stringBase_8037A2C7 = "F_SP114";
SECTION_DEAD char* const stringBase_8037A2CF = "F_SP102";
SECTION_DEAD char* const stringBase_8037A2D7 = "F_SP123";
SECTION_DEAD char* const stringBase_8037A2DF = "R_SP160";
SECTION_DEAD char* const stringBase_8037A2E7 = "R_SP161";
SECTION_DEAD char* const stringBase_8037A2EF = "F_SP118";
SECTION_DEAD char* const stringBase_8037A2F7 = "F_SP124";
SECTION_DEAD char* const stringBase_8037A2FF = "F_SP125";
SECTION_DEAD char* const stringBase_8037A307 = "R_SP127";
SECTION_DEAD char* const stringBase_8037A30F = "D_MN01A";
SECTION_DEAD char* const stringBase_8037A317 = "D_MN10A";
SECTION_DEAD char* const stringBase_8037A31F = "D_MN06A";
SECTION_DEAD char* const stringBase_8037A327 = "D_MN07A";
SECTION_DEAD char* const stringBase_8037A32F = "D_MN08D";
SECTION_DEAD char* const stringBase_8037A337 = "D_MN09";
SECTION_DEAD char* const stringBase_8037A33E = "D_MN09B";
SECTION_DEAD char* const stringBase_8037A346 = "D_MN09C";
SECTION_DEAD char* const stringBase_8037A34E = "R_SP300";
SECTION_DEAD char* const stringBase_8037A356 = "D_SB02";
SECTION_DEAD char* const stringBase_8037A35D = "D_SB03";
/* @stringBase0 padding */
SECTION_DEAD char* const pad_8037A364 = "\0\0\0";
#pragma pop

