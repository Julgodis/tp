// 
// Generated By: dol2asm
// 

// 
// Compiler Options: -str pool,readonly,reuse
// 

#include "dolphin/types.h"

// 
// Additional Symbols:
// 

struct cBgD_Vtx_t;
struct dDlst_shadowPoly_c;
struct cBgS_ShdwDraw;
struct dKy_tevstr_c;
struct cXyz;
struct _GXTexObj;
struct cM3dGPla;
struct _GXTlutObj;
struct ResTIMG;
struct Vec;

extern void mDoMtx_YrotM(f32 (*)[4], short); /* mDoMtx_YrotM__FPA4_fs */
extern void mDoMtx_lookAt(f32 (*)[4], const Vec*, const Vec*, short); /* mDoMtx_lookAt__FPA4_fPC3VecPC3Vecs */
extern void mDoLib_setResTimgObj(const ResTIMG*, _GXTexObj*, u32, _GXTlutObj*); /* mDoLib_setResTimgObj__FPC7ResTIMGP9_GXTexObjUlP10_GXTlutObj */
extern void J3DDrawBuffer__create(u32); /* J3DDrawBuffer__create__FUl */
extern void psdRealCallBack(cBgS_ShdwDraw*, cBgD_Vtx_t*, int, int, int, cM3dGPla*); /* psdRealCallBack__FP13cBgS_ShdwDrawP10cBgD_Vtx_tiiiP8cM3dGPla */
extern void realPolygonCheck(cXyz*, f32, f32, cXyz*, dDlst_shadowPoly_c*); /* realPolygonCheck__FP4cXyzffP4cXyzP18dDlst_shadowPoly_c */
extern void setkankyoShadow(dKy_tevstr_c*, f32*); /* setkankyoShadow__FP12dKy_tevstr_cPf */
extern void dKy_plight_near_pos(void); /* dKy_plight_near_pos__Fv */
extern void dKy_GxFog_set(void); /* dKy_GxFog_set__Fv */
extern void cLib_chaseUC(u8*, u8, u8); /* cLib_chaseUC__FPUcUcUc */
extern void* operator new(u32); /* __nw__FUl */
extern void* operator new[](u32, int); /* __nwa__FUli */
extern void operator delete(void*); /* __dl__FPv */

extern "C" {
extern "C" extern void __dt__4cXyzFv();
extern void mDoMtx_YrotM__FPA4_fs();
extern void mDoMtx_lookAt__FPA4_fPC3VecPC3Vecs();
extern "C" extern void scaleM__14mDoMtx_stack_cFfff();
extern "C" extern void __ct__4cXyzFv();
extern "C" extern void __dt__26mDoExt_3DlineMatSortPacketFv();
extern void mDoLib_setResTimgObj__FPC7ResTIMGP9_GXTexObjUlP10_GXTlutObj();
extern "C" extern void setViewPort__14dDlst_window_cFffffff();
extern "C" extern void setScissor__14dDlst_window_cFffff();
extern "C" extern void draw__13dDlst_2DTri_cFv();
extern "C" extern void draw__14dDlst_2DQuad_cFv();
extern "C" extern void draw__15dDlst_2DPoint_cFv();
extern "C" extern void draw__11dDlst_2DT_cFv();
extern "C" extern void draw__12dDlst_2DT2_cFv();
extern "C" extern void __ct__12dDlst_2DT2_cFv();
extern "C" extern void init__12dDlst_2DT2_cFP7ResTIMGffffUcUcUcff();
extern "C" extern void draw__11dDlst_2DM_cFv();
extern "C" extern void draw__11dDlst_2Dm_cFv();
extern "C" extern void draw__12dDlst_2DMt_cFv();
extern "C" extern void getTexture__10J2DPictureCFUc();
extern "C" extern void __ct__10dDlst_2D_cFP7ResTIMGssssUc();
extern "C" extern void draw__10dDlst_2D_cFv();
extern "C" extern void draw__11dDlst_blo_cFv();
extern "C" extern void clearAnmTransform__9J2DScreenFv();
extern "C" extern void calcMtx__7J2DPaneFv();
extern "C" extern void makeMatrix__7J2DPaneFff();
extern "C" extern  int getTypeID__7J2DPaneCFv();
extern "C" extern void setWhite__10J2DPictureFQ28JUtility6TColor();
extern "C" extern void setBlack__10J2DPictureFQ28JUtility6TColor();
extern "C" extern void __dt__10J2DAnmBaseFv();
extern "C" extern void init__8cM_rnd_cFiii();
extern "C" extern void get__8cM_rnd_cFv();
extern "C" extern void getF__8cM_rnd_cFf();
extern "C" extern void getFX__8cM_rnd_cFf();
extern "C" extern void getValue__8cM_rnd_cFff();
extern "C" extern void draw__18dDlst_effectLine_cFv();
extern "C" extern void update__18dDlst_effectLine_cFR4cXyzR8_GXColorUsUsUsUsffff();
extern "C" extern void set__18dDlst_shadowPoly_cFP10cBgD_Vtx_tUsUsUsP8cM3dGPla();
extern "C" extern void draw__18dDlst_shadowPoly_cFv();
extern void J3DDrawBuffer__create__FUl();
extern "C" extern void reset__18dDlst_shadowReal_cFv();
extern "C" extern void imageDraw__18dDlst_shadowReal_cFPA4_f();
extern "C" extern void draw__18dDlst_shadowReal_cFv();
extern void psdRealCallBack__FP13cBgS_ShdwDrawP10cBgD_Vtx_tiiiP8cM3dGPla();
extern void realPolygonCheck__FP4cXyzffP4cXyzP18dDlst_shadowPoly_c();
extern "C" extern void __dt__14ShdwDrawPoly_cFv();
extern void setkankyoShadow__FP12dKy_tevstr_cPf();
extern "C" extern void setShadowRealMtx__18dDlst_shadowReal_cFP4cXyzP4cXyzfffP12dKy_tevstr_c();
extern "C" extern void set__18dDlst_shadowReal_cFUlP8J3DModelP4cXyzffP12dKy_tevstr_cff();
extern "C" extern void add__18dDlst_shadowReal_cFP8J3DModel();
extern "C" extern void draw__20dDlst_shadowSimple_cFv();
extern "C" extern void set__20dDlst_shadowSimple_cFP4cXyzffP4cXyzsfP9_GXTexObj();
extern "C" extern void init__21dDlst_shadowControl_cFv();
extern "C" extern void reset__21dDlst_shadowControl_cFv();
extern "C" extern void imageDraw__21dDlst_shadowControl_cFPA4_f();
extern "C" extern void draw__21dDlst_shadowControl_cFPA4_f();
extern "C" extern void setReal__21dDlst_shadowControl_cFUlScP8J3DModelP4cXyzffP12dKy_tevstr_c();
extern "C" extern void addReal__21dDlst_shadowControl_cFUlP8J3DModel();
extern "C" extern void setSimple__21dDlst_shadowControl_cFP4cXyzffP4cXyzsfP9_GXTexObj();
extern "C" extern void setSimpleTex__21dDlst_shadowControl_cFPC7ResTIMG();
extern "C" extern void newData__13dDlst_peekZ_cFssPUl();
extern "C" extern void peekData__13dDlst_peekZ_cFv();
extern "C" extern void __ct__12dDlst_list_cFv();
extern "C" extern void __ct__26mDoExt_3DlineMatSortPacketFv();
extern "C" extern void __dt__18dDlst_shadowReal_cFv();
extern "C" extern void __dt__17dDlst_shadowTri_cFv();
extern "C" extern void __ct__18dDlst_shadowReal_cFv();
extern "C" extern void __ct__17dDlst_shadowTri_cFv();
extern "C" extern void __ct__20dDlst_shadowSimple_cFv();
extern "C" extern void init__12dDlst_list_cFv();
extern "C" extern void __dt__12dDlst_list_cFv();
extern "C" extern void reset__12dDlst_list_cFv();
extern "C" extern void entryZSortXluDrawList__12dDlst_list_cFP13J3DDrawBufferP9J3DPacketR4cXyz();
extern "C" extern void drawOpaDrawList__12dDlst_list_cFP13J3DDrawBuffer();
extern "C" extern void drawXluDrawList__12dDlst_list_cFP13J3DDrawBuffer();
extern "C" extern void drawOpaListItem3d__12dDlst_list_cFv();
extern "C" extern void drawXluListItem3d__12dDlst_list_cFv();
extern "C" extern void set__12dDlst_list_cFRPP12dDlst_base_cRPP12dDlst_base_cP12dDlst_base_c();
extern "C" extern void draw__12dDlst_list_cFPP12dDlst_base_cPP12dDlst_base_c();
extern "C" extern void wipeIn__12dDlst_list_cFfR8_GXColor();
extern "C" extern void wipeIn__12dDlst_list_cFf();
extern "C" extern void calcWipe__12dDlst_list_cFv();
extern "C" extern u8* getTri__22dDlst_shadowRealPoly_cFv(u8*);
extern "C" extern  int getTriMax__22dDlst_shadowRealPoly_cFv();
extern "C" extern void searchUpdateMaterialID__10J2DAnmBaseFP9J2DScreen();
extern "C" extern void __sinit_d_drawlist_cpp();
extern "C" extern void ShdwDraw__4cBgSFP13cBgS_ShdwDraw();
extern void dKy_plight_near_pos__Fv();
extern void dKy_GxFog_set__Fv();
extern "C" extern void __mi__4cXyzCFRC3Vec();
extern "C" extern void normalize__4cXyzFv();
extern "C" extern void isZero__4cXyzCFv();
extern "C" extern void __ct__13cBgS_ShdwDrawFv();
extern "C" extern void __dt__13cBgS_ShdwDrawFv();
extern "C" extern void Set__13cBgS_ShdwDrawFR4cXyzR4cXyz();
extern "C" extern void SetCallback__13cBgS_ShdwDrawFPFP13cBgS_ShdwDrawP10cBgD_Vtx_tiiiP8cM3dGPla_i();
extern void cLib_chaseUC__FPUcUcUc();
extern "C" extern void calcViewFrustum__11J3DUClipperFv();
extern "C" extern void clip__11J3DUClipperCFPA4_CfP3VecP3Vec();
extern void __nw__FUl();
extern void __nwa__FUli();
extern void __dl__FPv();
extern "C" extern void getGlbResource__10JKRArchiveFUlPCcP10JKRArchive();
extern "C" extern void clearAnmTransform__7J2DPaneFv();
extern "C" extern void draw__9J2DScreenFffPC14J2DGrafContext();
extern "C" extern void __ct__10J2DPictureFv();
extern "C" extern void reinitGX__6J3DSysFv();
extern "C" extern void drawFast__14J3DShapePacketFv();
extern "C" extern void loadPreDrawSetting__8J3DShapeCFv();
extern "C" extern void initialize__13J3DDrawBufferFv();
extern "C" extern void allocBuffer__13J3DDrawBufferFUl();
extern "C" extern void __dt__13J3DDrawBufferFv();
extern "C" extern void frameInit__13J3DDrawBufferFv();
extern "C" extern void entryImm__13J3DDrawBufferFP9J3DPacketUs();
extern "C" extern void draw__13J3DDrawBufferCFv();
extern "C" extern void PSMTXConcat();
extern "C" extern void PSMTXTrans();
extern "C" extern void C_MTXLightOrtho();
extern "C" extern void PSMTXMultVec();
extern "C" extern void C_MTXOrtho();
extern "C" extern void PSVECAdd();
extern "C" extern void PSVECScale();
extern "C" extern void PSVECSquareMag();
extern "C" extern void PSVECDotProduct();
extern "C" extern void GXSetVtxDesc();
extern "C" extern void GXClearVtxDesc();
extern "C" extern void GXSetVtxAttrFmt();
extern "C" extern void GXSetArray();
extern "C" extern void GXSetTexCoordGen2();
extern "C" extern void GXSetNumTexGens();
extern "C" extern void GXPixModeSync();
extern "C" extern void GXPeekZ();
extern "C" extern void GXBegin();
extern "C" extern void GXSetLineWidth();
extern "C" extern void GXSetPointSize();
extern "C" extern void GXSetCullMode();
extern "C" extern void GXSetTexCopySrc();
extern "C" extern void GXSetTexCopyDst();
extern "C" extern void GXCopyTex();
extern "C" extern void GXSetChanMatColor();
extern "C" extern void GXSetNumChans();
extern "C" extern void GXSetChanCtrl();
extern "C" extern void GXGetTexBufferSize();
extern "C" extern void GXInitTexObj();
extern "C" extern void GXInitTexObjLOD();
extern "C" extern void GXGetTexObjWidth();
extern "C" extern void GXGetTexObjHeight();
extern "C" extern void GXGetTexObjWrapS();
extern "C" extern void GXGetTexObjWrapT();
extern "C" extern u32 GXGetTexObjTlut(u8*);
extern "C" extern void GXLoadTexObj();
extern "C" extern void GXLoadTlut();
extern "C" extern void GXSetNumIndStages();
extern "C" extern void GXSetTevOp();
extern "C" extern void GXSetTevColorIn();
extern "C" extern void GXSetTevAlphaIn();
extern "C" extern void GXSetTevColorOp();
extern "C" extern void GXSetTevAlphaOp();
extern "C" extern void GXSetTevColor();
extern "C" extern void GXSetTevSwapModeTable();
extern "C" extern void GXSetAlphaCompare();
extern "C" extern void GXSetTevOrder();
extern "C" extern void GXSetNumTevStages();
extern "C" extern void GXSetFog();
extern "C" extern void GXSetBlendMode();
extern "C" extern void GXSetColorUpdate();
extern "C" extern void GXSetAlphaUpdate();
extern "C" extern void GXSetZMode();
extern "C" extern void GXSetZCompLoc();
extern "C" extern void GXSetDither();
extern "C" extern void GXCallDisplayList();
extern "C" extern void GXSetProjection();
extern "C" extern void GXLoadPosMtxImm();
extern "C" extern void GXSetCurrentMtx();
extern "C" extern void GXLoadTexMtxImm();
extern "C" extern void GXSetViewport();
extern "C" extern void GXSetScissor();
extern "C" extern void GXSetClipMode();
extern "C" extern void __destroy_arr();
extern "C" extern void __construct_array();
extern "C" extern void _savefpr_26();
extern "C" extern void _restfpr_26();
extern "C" extern void _savegpr_22();
extern "C" extern void _savegpr_23();
extern "C" extern void _savegpr_24();
extern "C" extern void _savegpr_25();
extern "C" extern void _savegpr_26();
extern "C" extern void _savegpr_27();
extern "C" extern void _savegpr_28();
extern "C" extern void _savegpr_29();
extern "C" extern void _restgpr_22();
extern "C" extern void _restgpr_23();
extern "C" extern void _restgpr_24();
extern "C" extern void _restgpr_25();
extern "C" extern void _restgpr_26();
extern "C" extern void _restgpr_27();
extern "C" extern void _restgpr_28();
extern "C" extern void _restgpr_29();
extern "C" extern void fmod();
SECTION_RODATA extern const u8 data_8037A178[44];
SECTION_RODATA extern const u8 data_8037A1A4[12];
SECTION_RODATA extern const u8 d_d_drawlist__stringBase0[16];
SECTION_DATA extern u8 g_mDoMtx_identity[72];
SECTION_DATA extern void* __vt__26mDoExt_3DlineMatSortPacket[5];
SECTION_DATA extern void* __vt__12dDlst_base_c[3];
SECTION_DATA extern u8 d_d_drawlist__cNullVec__6Z2Calc[32];
SECTION_DATA extern u8 l_frontZMat[64];
SECTION_DATA extern u8 l_frontNoZSubMat[44];
SECTION_DATA extern u8 l_shadowVolPos[116];
SECTION_DATA extern u8 l_shadowVolDL[64];
SECTION_DATA extern u8 l_shadowProjMat[96];
SECTION_DATA extern u8 l_shadowVolMat[96];
SECTION_DATA extern u8 l_clearMat[96];
SECTION_DATA extern u8 l_frontMat[96];
SECTION_DATA extern u8 l_backSubMat[60];
SECTION_DATA extern u8 l_simpleShadowPos[196];
SECTION_DATA extern u8 l_shadowVolumeDL[96];
SECTION_DATA extern u8 l_shadowSealTexDL[96];
SECTION_DATA extern u8 l_shadowSealTex2DL[96];
SECTION_DATA extern u8 l_shadowSealDL[128];
SECTION_DATA extern u8 data_803A8D00[124];
SECTION_DATA extern u8 data_803A8D7C[16];
SECTION_DATA extern u8 data_803A8D8C[16];
SECTION_DATA extern u8 data_803A8D9C[48];
SECTION_DATA extern void* __vt__18dDlst_shadowPoly_c[4];
SECTION_DATA extern void* __vt__22dDlst_shadowRealPoly_c[4];
SECTION_DATA extern void* __vt__14ShdwDrawPoly_c[3];
SECTION_DATA extern void* __vt__18dDlst_effectLine_c[3];
SECTION_DATA extern void* __vt__10J2DAnmBase[4];
SECTION_DATA extern void* __vt__11dDlst_blo_c[3];
SECTION_DATA extern void* __vt__10dDlst_2D_c[3];
SECTION_DATA extern void* __vt__12dDlst_2DMt_c[3];
SECTION_DATA extern void* __vt__11dDlst_2Dm_c[3];
SECTION_DATA extern void* __vt__11dDlst_2DM_c[6];
SECTION_DATA extern void* __vt__12dDlst_2DT2_c[3];
SECTION_DATA extern void* __vt__11dDlst_2DT_c[3];
SECTION_DATA extern void* __vt__15dDlst_2DPoint_c[3];
SECTION_DATA extern void* __vt__14dDlst_2DQuad_c[3];
SECTION_DATA extern void* __vt__13dDlst_2DTri_c[3];
SECTION_DATA extern void* __vt__9J3DPacket[5];
SECTION_BSS extern u8 now__14mDoMtx_stack_c[48];
SECTION_BSS extern u8 mClipper__14mDoLib_clipper[92];
SECTION_BSS extern u8 g_dComIfG_gameInfo[122384];
SECTION_BSS extern u8 mSimpleTexObj__21dDlst_shadowControl_c[32];
SECTION_BSS extern u8 mWipeDlst__12dDlst_list_c[72];
SECTION_BSS extern u8 g_env_light[4880];
SECTION_BSS extern u8 g_envHIO[68];
SECTION_BSS extern u8 j3dSys[284];
SECTION_BSS extern u8 sincosTable___5JMath[65536];
SECTION_SDATA extern u8 g_clearColor[4];
SECTION_SDATA extern u8 g_whiteColor[4];
SECTION_SDATA extern u8 data_80450648[4];
SECTION_SDATA extern u8 data_8045064C[4];
SECTION_SDATA extern u8 data_80450650[4];
SECTION_SDATA extern u8 data_80450654[4];
SECTION_SDATA extern u8 data_80450658[4];
SECTION_SDATA extern u8 mWipeColor__12dDlst_list_c[4];
SECTION_SDATA extern u8 __float_nan[4];
SECTION_SDATA extern u8 __float_max[4];
SECTION_SBSS extern u8 mSystemFar__14mDoLib_clipper[4];
SECTION_SBSS extern u8 mFovyRate__14mDoLib_clipper[4];
SECTION_SBSS extern u8 data_80450ED0[4];
SECTION_SBSS extern u8 mWipeRate__12dDlst_list_c[4];
SECTION_SBSS extern u8 mWipeSpeed__12dDlst_list_c[4 + 4 /* padding */];
SECTION_SBSS extern u8 data_80450EE0[8];
SECTION_SBSS extern u8 G_CM3D_F_ABS_MIN[4 + 4 /* padding */];
SECTION_SBSS extern u8 sOldVcdVatCmd__8J3DShape[4];
SECTION_SDATA2 extern f32 d_d_drawlist__LIT_4072;
SECTION_SDATA2 extern f32 d_d_drawlist__LIT_4073;
SECTION_SDATA2 extern u8 d_d_drawlist__LIT_4074[8];
SECTION_SDATA2 extern f64 d_d_drawlist__LIT_4076;
SECTION_SDATA2 extern f64 d_d_drawlist__LIT_4079;
SECTION_SDATA2 extern f32 d_d_drawlist__LIT_4270;
SECTION_SDATA2 extern u8 d_d_drawlist__LIT_4284[4];
SECTION_SDATA2 extern f32 d_d_drawlist__LIT_4360;
SECTION_SDATA2 extern f32 d_d_drawlist__LIT_4791;
SECTION_SDATA2 extern f32 d_d_drawlist__LIT_4792;
SECTION_SDATA2 extern f32 d_d_drawlist__LIT_4793;
SECTION_SDATA2 extern f64 d_d_drawlist__LIT_4794;
SECTION_SDATA2 extern f32 d_d_drawlist__LIT_4806;
SECTION_SDATA2 extern f32 d_d_drawlist__LIT_4876;
SECTION_SDATA2 extern u8 d_d_drawlist__LIT_5061[4];
SECTION_SDATA2 extern f32 d_d_drawlist__LIT_5062;
SECTION_SDATA2 extern u8 d_d_drawlist__LIT_5127[4];
SECTION_SDATA2 extern f32 d_d_drawlist__LIT_5128;
SECTION_SDATA2 extern u8 d_d_drawlist__LIT_5129[4];
SECTION_SDATA2 extern f32 d_d_drawlist__LIT_5130;
SECTION_SDATA2 extern f32 d_d_drawlist__LIT_5155;
SECTION_SDATA2 extern u8 d_d_drawlist__LIT_5156[4];
SECTION_SDATA2 extern f32 d_d_drawlist__LIT_5267;
SECTION_SDATA2 extern u8 d_d_drawlist__LIT_5268[4];
SECTION_SDATA2 extern u8 d_d_drawlist__LIT_5269[8];
SECTION_SDATA2 extern f64 LIT_5270;
SECTION_SDATA2 extern f64 d_d_drawlist__LIT_5271;
SECTION_SDATA2 extern u8 LIT_5272[8];
SECTION_SDATA2 extern u8 LIT_5273[4];
SECTION_SDATA2 extern f32 LIT_5274;
SECTION_SDATA2 extern f32 LIT_5275;
SECTION_SDATA2 extern f32 d_d_drawlist__LIT_5375;
SECTION_SDATA2 extern u8 d_d_drawlist__LIT_5376[4];
SECTION_SDATA2 extern u8 LIT_5377[4];
SECTION_SDATA2 extern f32 LIT_5378;
SECTION_SDATA2 extern u8 d_d_drawlist__LIT_5433[4];
SECTION_SDATA2 extern u8 LIT_5551[4];
SECTION_SDATA2 extern f32 LIT_5552;
SECTION_SDATA2 extern u8 LIT_5553[4];
SECTION_SDATA2 extern u8 data_804520C4[8];
SECTION_SDATA2 extern f32 d_d_drawlist__LIT_5747;
SECTION_SDATA2 extern f32 d_d_drawlist__LIT_5809;
SECTION_SDATA2 extern f32 d_d_drawlist__LIT_5810;
SECTION_SDATA2 extern u8 d_d_drawlist__LIT_5811[4];
SECTION_SDATA2 extern u8 LIT_5838[4];
SECTION_SBSS2 extern u8 d_d_drawlist__LIT_4275[4 + 4 /* padding */];
}


/* ###################################################################################### */
/*                                        .rodata                                         */
/* ###################################################################################### */

extern "C" {
/* 8037A1B0-8037A1C0 000C .rodata    @stringBase0                                                 */
#pragma push
#pragma force_active on
#pragma section ".dead"
SECTION_DEAD const char* const stringBase_8037A1B0 = "wipe_00.bti";
/* @stringBase0 padding */
SECTION_DEAD const char* const pad_8037A1BC = "\0\0\0";
#pragma pop
/* 8037A178-8037A1A4 002A .rodata    l_drawlistSize$5656                                          */
SECTION_RODATA const u8 data_8037A178[44] = {
	0x00, 0x01, 0x00, 0x01, 0x00, 0x01, 0x00, 0x80, 0x00, 0x01, 0x00, 0x01, 0x00, 0x01, 0x00, 0x80,
	0x01, 0x00, 0x00, 0x01, 0x01, 0x00, 0x00, 0x01, 0x00, 0x20, 0x00, 0x10, 0x00, 0x10, 0x00, 0x20,
	0x00, 0x20, 0x01, 0x00, 0x00, 0x01, 0x00, 0x04, 0x00, 0x04,
	/* padding */
	0x00, 0x00,
};
/* 8037A1A4-8037A1B0 0009 .rodata    l_nonSortId$5662                                             */
SECTION_RODATA const u8 data_8037A1A4[12] = {
	0x00, 0x01, 0x02, 0x04, 0x05, 0x06, 0x09, 0x12, 0x0D,
	/* padding */
	0x00, 0x00, 0x00,
};
}


/* ###################################################################################### */
/*                                         .data                                          */
/* ###################################################################################### */

extern "C" {
/* 803A87A0-803A87A0 0000 .data      ...data.0                                                    */
/* 803A87A0-803A87C0 000C .data      cNullVec__6Z2Calc                                            */
SECTION_DATA u8 d_d_drawlist__cNullVec__6Z2Calc[32] = {
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
	/* padding */
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
	0x00, 0x00, 0x00, 0x00,
};
/* 803A87C0-803A8800 003C .data      l_frontZMat                                                  */
SECTION_DATA u8 l_frontZMat[64] = {
	0x61, 0x40, 0x00, 0x00, 0x07, 0x10, 0x00, 0x00, 0x10, 0x3F, 0x00, 0x00, 0x00, 0x00, 0x10, 0x00,
	0x00, 0x10, 0x09, 0x00, 0x00, 0x00, 0x01, 0x61, 0x00, 0x00, 0x40, 0x10, 0x00, 0x00, 0x00, 0x00,
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
	/* padding */
	0x00, 0x00, 0x00, 0x00,
};
/* 803A8800-803A882C 002A .data      l_frontNoZSubMat                                             */
SECTION_DATA u8 l_frontNoZSubMat[44] = {
	0x61, 0x40, 0x00, 0x00, 0x06, 0x61, 0x41, 0x00, 0x09, 0x35, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
	/* padding */
	0x00, 0x00,
};
/* 803A882C-803A88A0 0060 .data      l_shadowVolPos                                               */
SECTION_DATA u8 l_shadowVolPos[116] = {
	0xBF, 0x80, 0x00, 0x00, 0xBF, 0x80, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xBF, 0x80, 0x00, 0x00,
	0xBF, 0x80, 0x00, 0x00, 0xC3, 0x96, 0x00, 0x00, 0xBF, 0x80, 0x00, 0x00, 0x3F, 0x80, 0x00, 0x00,
	0x00, 0x00, 0x00, 0x00, 0xBF, 0x80, 0x00, 0x00, 0x3F, 0x80, 0x00, 0x00, 0xC3, 0x96, 0x00, 0x00,
	0x3F, 0x80, 0x00, 0x00, 0xBF, 0x80, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x3F, 0x80, 0x00, 0x00,
	0xBF, 0x80, 0x00, 0x00, 0xC3, 0x96, 0x00, 0x00, 0x3F, 0x80, 0x00, 0x00, 0x3F, 0x80, 0x00, 0x00,
	0x00, 0x00, 0x00, 0x00, 0x3F, 0x80, 0x00, 0x00, 0x3F, 0x80, 0x00, 0x00, 0xC3, 0x96, 0x00, 0x00,
	/* padding */
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
	0x00, 0x00, 0x00, 0x00,
};
/* 803A88A0-803A88E0 003B .data      l_shadowVolDL                                                */
SECTION_DATA u8 l_shadowVolDL[64] = {
	0x80, 0x00, 0x18, 0x06, 0x02, 0x03, 0x07, 0x00, 0x04, 0x05, 0x01, 0x06, 0x04, 0x00, 0x02, 0x07,
	0x05, 0x04, 0x06, 0x03, 0x01, 0x05, 0x07, 0x02, 0x00, 0x01, 0x03, 0x00, 0x00, 0x00, 0x00, 0x00,
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
	/* padding */
	0x00, 0x00, 0x00, 0x00, 0x00,
};
/* 803A88E0-803A8940 005A .data      l_shadowProjMat                                              */
SECTION_DATA u8 l_shadowProjMat[96] = {
	0x61, 0x28, 0x38, 0x03, 0xC0, 0x61, 0xC0, 0x08, 0xFF, 0xFF, 0x61, 0xC1, 0x08, 0xE6, 0x70, 0x61,
	0x43, 0x00, 0x00, 0x01, 0x61, 0x40, 0x00, 0x00, 0x07, 0x61, 0x41, 0x00, 0x04, 0xAD, 0x61, 0xF3,
	0x64, 0x00, 0x00, 0x10, 0x00, 0x00, 0x10, 0x3F, 0x00, 0x00, 0x00, 0x01, 0x10, 0x00, 0x00, 0x10,
	0x09, 0x00, 0x00, 0x00, 0x00, 0x61, 0x00, 0x00, 0x40, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
	/* padding */
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
};
/* 803A8940-803A89A0 005A .data      l_shadowVolMat                                               */
SECTION_DATA u8 l_shadowVolMat[96] = {
	0x61, 0x28, 0x38, 0x00, 0x00, 0x61, 0xC0, 0x08, 0xFF, 0xFC, 0x61, 0xC1, 0x08, 0xFF, 0x90, 0x61,
	0x43, 0x00, 0x00, 0x41, 0x61, 0x40, 0x00, 0x00, 0x0D, 0x61, 0x41, 0x00, 0x01, 0x35, 0x61, 0xF3,
	0x7F, 0x00, 0x00, 0x10, 0x00, 0x00, 0x10, 0x3F, 0x00, 0x00, 0x00, 0x00, 0x10, 0x00, 0x00, 0x10,
	0x09, 0x00, 0x00, 0x00, 0x01, 0x61, 0x00, 0x00, 0x80, 0x10, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
	/* padding */
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
};
/* 803A89A0-803A8A00 0055 .data      l_clearMat                                                   */
SECTION_DATA u8 l_clearMat[96] = {
	0x61, 0x28, 0x38, 0x00, 0x00, 0x61, 0xC0, 0x08, 0xFF, 0xFF, 0x61, 0xC1, 0x08, 0xFF, 0xA0, 0x61,
	0x40, 0x00, 0x00, 0x06, 0x61, 0x41, 0x00, 0x00, 0x14, 0x61, 0xF3, 0x7F, 0x00, 0x00, 0x10, 0x00,
	0x00, 0x10, 0x3F, 0x00, 0x00, 0x00, 0x00, 0x10, 0x00, 0x00, 0x10, 0x09, 0x00, 0x00, 0x00, 0x01,
	0x61, 0x00, 0x00, 0x00, 0x10, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
	0x00, 0x00, 0x00, 0x00, 0x00,
	/* padding */
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
};
/* 803A8A00-803A8A60 0055 .data      l_frontMat                                                   */
SECTION_DATA u8 l_frontMat[96] = {
	0x61, 0x28, 0x38, 0x00, 0x00, 0x61, 0xC0, 0x08, 0xFF, 0xFF, 0x61, 0xC1, 0x08, 0xFF, 0x90, 0x61,
	0x43, 0x00, 0x00, 0x41, 0x61, 0x40, 0x00, 0x00, 0x07, 0x61, 0x41, 0x00, 0x01, 0x15, 0x10, 0x00,
	0x00, 0x10, 0x3F, 0x00, 0x00, 0x00, 0x00, 0x10, 0x00, 0x00, 0x10, 0x09, 0x00, 0x00, 0x00, 0x01,
	0x61, 0x00, 0x00, 0x40, 0x10, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
	0x00, 0x00, 0x00, 0x00, 0x00,
	/* padding */
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
};
/* 803A8A60-803A8A9C 003C .data      l_backSubMat                                                 */
SECTION_DATA u8 l_backSubMat[60] = {
	0x61, 0x41, 0x00, 0x09, 0x35, 0x10, 0x00, 0x00, 0x10, 0x3F, 0x00, 0x00, 0x00, 0x00, 0x10, 0x00,
	0x00, 0x10, 0x09, 0x00, 0x00, 0x00, 0x01, 0x61, 0x00, 0x00, 0x80, 0x10, 0x00, 0x00, 0x00, 0x00,
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
};
/* 803A8A9C-803A8B60 00A8 .data      l_simpleShadowPos                                            */
SECTION_DATA u8 l_simpleShadowPos[196] = {
	0x00, 0x00, 0x00, 0x00, 0xBF, 0x80, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x3F, 0x80, 0x00, 0x00, 0xBF, 0x80, 0x00, 0x00,
	0xBF, 0x80, 0x00, 0x00, 0x3F, 0x80, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xBF, 0x80, 0x00, 0x00,
	0xBF, 0x80, 0x00, 0x00, 0xBF, 0x80, 0x00, 0x00, 0xBF, 0x80, 0x00, 0x00, 0xBF, 0x80, 0x00, 0x00,
	0x00, 0x00, 0x00, 0x00, 0xBF, 0x80, 0x00, 0x00, 0xBF, 0x80, 0x00, 0x00, 0xBF, 0x80, 0x00, 0x00,
	0x3F, 0x80, 0x00, 0x00, 0xBF, 0x80, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x3F, 0x80, 0x00, 0x00,
	0x3F, 0x80, 0x00, 0x00, 0xBF, 0x80, 0x00, 0x00, 0x3F, 0x80, 0x00, 0x00, 0x3F, 0x80, 0x00, 0x00,
	0x00, 0x00, 0x00, 0x00, 0x3F, 0x80, 0x00, 0x00, 0xBF, 0x80, 0x00, 0x00, 0x3F, 0x80, 0x00, 0x00,
	0xBF, 0x80, 0x00, 0x00, 0x3F, 0x80, 0x00, 0x00, 0x3F, 0x80, 0x00, 0x00, 0xBF, 0x80, 0x00, 0x00,
	0x3F, 0x80, 0x00, 0x00, 0x3F, 0x80, 0x00, 0x00, 0x3F, 0x80, 0x00, 0x00, 0xBF, 0x80, 0x00, 0x00,
	0x3F, 0x80, 0x00, 0x00, 0x3F, 0x80, 0x00, 0x00,
	/* padding */
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
};
/* 803A8B60-803A8BC0 0058 .data      l_shadowVolumeDL                                             */
SECTION_DATA u8 l_shadowVolumeDL[96] = {
	0x98, 0x00, 0x05, 0x03, 0x09, 0x01, 0x07, 0x05, 0x98, 0x00, 0x05, 0x04, 0x06, 0x00, 0x08, 0x02,
	0x98, 0x00, 0x04, 0x04, 0x05, 0x06, 0x07, 0x98, 0x00, 0x04, 0x02, 0x03, 0x04, 0x05, 0x98, 0x00,
	0x04, 0x08, 0x09, 0x02, 0x03, 0x98, 0x00, 0x04, 0x06, 0x07, 0x08, 0x09, 0x98, 0x00, 0x03, 0x01,
	0x05, 0x03, 0x98, 0x00, 0x03, 0x00, 0x02, 0x04, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
	/* padding */
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
};
/* 803A8BC0-803A8C20 0055 .data      l_shadowSealTexDL                                            */
SECTION_DATA u8 l_shadowSealTexDL[96] = {
	0x61, 0x28, 0x38, 0x03, 0xC0, 0x61, 0x40, 0x00, 0x00, 0x06, 0x61, 0x41, 0x00, 0x06, 0x15, 0x10,
	0x00, 0x00, 0x10, 0x3F, 0x00, 0x00, 0x00, 0x01, 0x10, 0x00, 0x00, 0x10, 0x09, 0x00, 0x00, 0x00,
	0x00, 0x61, 0x00, 0x00, 0x40, 0x01, 0x80, 0x00, 0x04, 0x0A, 0x00, 0x00, 0x0B, 0x01, 0x00, 0x0C,
	0x01, 0x01, 0x0D, 0x00, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
	0x00, 0x00, 0x00, 0x00, 0x00,
	/* padding */
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
};
/* 803A8C20-803A8C80 0055 .data      l_shadowSealTex2DL                                           */
SECTION_DATA u8 l_shadowSealTex2DL[96] = {
	0x61, 0x28, 0x38, 0x03, 0xC0, 0x61, 0x40, 0x00, 0x00, 0x06, 0x61, 0x41, 0x00, 0x06, 0x15, 0x10,
	0x00, 0x00, 0x10, 0x3F, 0x00, 0x00, 0x00, 0x01, 0x10, 0x00, 0x00, 0x10, 0x09, 0x00, 0x00, 0x00,
	0x00, 0x61, 0x00, 0x00, 0x40, 0x01, 0x80, 0x00, 0x04, 0x0A, 0x00, 0x00, 0x0B, 0x02, 0x00, 0x0C,
	0x02, 0x01, 0x0D, 0x00, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
	0x00, 0x00, 0x00, 0x00, 0x00,
	/* padding */
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
};
/* 803A8C80-803A8D00 0069 .data      l_shadowSealDL                                               */
SECTION_DATA u8 l_shadowSealDL[128] = {
	0x10, 0x00, 0x00, 0x10, 0x0E, 0x00, 0x00, 0x05, 0x00, 0x10, 0x00, 0x00, 0x10, 0x10, 0x00, 0x00,
	0x05, 0x00, 0x61, 0x28, 0x38, 0x00, 0x00, 0x61, 0xC0, 0x08, 0xFF, 0xFF, 0x61, 0xC1, 0x08, 0xFF,
	0xB0, 0x61, 0x40, 0x00, 0x00, 0x06, 0x61, 0x41, 0x00, 0x06, 0xED, 0x10, 0x00, 0x00, 0x10, 0x3F,
	0x00, 0x00, 0x00, 0x00, 0x10, 0x00, 0x00, 0x10, 0x09, 0x00, 0x00, 0x00, 0x01, 0x61, 0x00, 0x00,
	0x40, 0x10, 0x80, 0x00, 0x04, 0x0A, 0x0B, 0x0C, 0x0D, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
	/* padding */
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
};
/* 803A8D00-803A8D7C 007B .data      l_matDL$5404                                                 */
SECTION_DATA u8 data_803A8D00[124] = {
	0x10, 0x00, 0x00, 0x10, 0x0E, 0x00, 0x00, 0x04, 0x00, 0x10, 0x00, 0x00, 0x10, 0x10, 0x00, 0x00,
	0x04, 0x00, 0x61, 0x28, 0x38, 0x00, 0x00, 0x61, 0xC0, 0x08, 0xFF, 0xF2, 0x61, 0xC1, 0x08, 0xFF,
	0x90, 0x61, 0x43, 0x00, 0x00, 0x41, 0x61, 0xF3, 0x7F, 0x00, 0x00, 0x10, 0x00, 0x00, 0x10, 0x3F,
	0x00, 0x00, 0x00, 0x00, 0x10, 0x00, 0x00, 0x10, 0x09, 0x00, 0x00, 0x00, 0x01, 0x61, 0x00, 0x00,
	0x40, 0x10, 0x61, 0xEE, 0x00, 0x00, 0x00, 0x61, 0xEF, 0x00, 0x00, 0x00, 0x61, 0xF0, 0x00, 0x00,
	0x00, 0x61, 0xF1, 0x00, 0x00, 0x00, 0x61, 0xF2, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
	/* padding */
	0x00,
};
/* 803A8D7C-803A8D8C 0010 .data      l_imageDrawColor$5405                                        */
SECTION_DATA u8 data_803A8D7C[16] = {
	0xFF, 0x00, 0x00, 0x00, 0x00, 0xFF, 0x00, 0x00, 0x00, 0x00, 0xFF, 0x00, 0x00, 0x00, 0x00, 0xFF,
};
/* 803A8D8C-803A8D9C 0010 .data      l_tevColorChan$5438                                          */
SECTION_DATA u8 data_803A8D8C[16] = {
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x02, 0x00, 0x00, 0x00, 0x03,
};
/* 803A8D9C-803A8DCC 0030 .data      mtx_adj$5842                                                 */
SECTION_DATA u8 data_803A8D9C[48] = {
	0x3F, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x3F, 0x00, 0x00, 0x00,
	0x00, 0x00, 0x00, 0x00, 0xBF, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x3F, 0x00, 0x00, 0x00,
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x3F, 0x80, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
};
/* 803A8DCC-803A8DDC 0010 .data      __vt__18dDlst_shadowPoly_c                                   */
SECTION_DATA void* __vt__18dDlst_shadowPoly_c[4] = {
	NULL, /* RTTI */
	NULL,
	NULL,
	NULL,
};
/* 803A8DDC-803A8DEC 0010 .data      __vt__22dDlst_shadowRealPoly_c                               */
SECTION_DATA void* __vt__22dDlst_shadowRealPoly_c[4] = {
	NULL, /* RTTI */
	NULL,
	(void*)getTri__22dDlst_shadowRealPoly_cFv,
	(void*)getTriMax__22dDlst_shadowRealPoly_cFv,
};
/* 803A8DEC-803A8DF8 000C .data      __vt__14ShdwDrawPoly_c                                       */
SECTION_DATA void* __vt__14ShdwDrawPoly_c[3] = {
	NULL, /* RTTI */
	NULL,
	(void*)__dt__14ShdwDrawPoly_cFv,
};
/* 803A8DF8-803A8E04 000C .data      __vt__18dDlst_effectLine_c                                   */
SECTION_DATA void* __vt__18dDlst_effectLine_c[3] = {
	NULL, /* RTTI */
	NULL,
	(void*)draw__18dDlst_effectLine_cFv,
};
/* 803A8E04-803A8E14 0010 .data      __vt__10J2DAnmBase                                           */
SECTION_DATA void* __vt__10J2DAnmBase[4] = {
	NULL, /* RTTI */
	NULL,
	(void*)__dt__10J2DAnmBaseFv,
	(void*)searchUpdateMaterialID__10J2DAnmBaseFP9J2DScreen,
};
/* 803A8E14-803A8E20 000C .data      __vt__11dDlst_blo_c                                          */
SECTION_DATA void* __vt__11dDlst_blo_c[3] = {
	NULL, /* RTTI */
	NULL,
	(void*)draw__11dDlst_blo_cFv,
};
/* 803A8E20-803A8E2C 000C .data      __vt__10dDlst_2D_c                                           */
SECTION_DATA void* __vt__10dDlst_2D_c[3] = {
	NULL, /* RTTI */
	NULL,
	(void*)draw__10dDlst_2D_cFv,
};
/* 803A8E2C-803A8E38 000C .data      __vt__12dDlst_2DMt_c                                         */
SECTION_DATA void* __vt__12dDlst_2DMt_c[3] = {
	NULL, /* RTTI */
	NULL,
	(void*)draw__12dDlst_2DMt_cFv,
};
/* 803A8E38-803A8E44 000C .data      __vt__11dDlst_2Dm_c                                          */
SECTION_DATA void* __vt__11dDlst_2Dm_c[3] = {
	NULL, /* RTTI */
	NULL,
	(void*)draw__11dDlst_2Dm_cFv,
};
/* 803A8E44-803A8E5C 000C .data      __vt__11dDlst_2DM_c                                          */
SECTION_DATA void* __vt__11dDlst_2DM_c[6] = {
	NULL, /* RTTI */
	NULL,
	(void*)draw__11dDlst_2DM_cFv,
	/* padding */
	NULL,
	NULL,
	NULL,
};
/* 803A8E5C-803A8E68 000C .data      __vt__12dDlst_2DT2_c                                         */
SECTION_DATA void* __vt__12dDlst_2DT2_c[3] = {
	NULL, /* RTTI */
	NULL,
	(void*)draw__12dDlst_2DT2_cFv,
};
/* 803A8E68-803A8E74 000C .data      __vt__11dDlst_2DT_c                                          */
SECTION_DATA void* __vt__11dDlst_2DT_c[3] = {
	NULL, /* RTTI */
	NULL,
	(void*)draw__11dDlst_2DT_cFv,
};
/* 803A8E74-803A8E80 000C .data      __vt__15dDlst_2DPoint_c                                      */
SECTION_DATA void* __vt__15dDlst_2DPoint_c[3] = {
	NULL, /* RTTI */
	NULL,
	(void*)draw__15dDlst_2DPoint_cFv,
};
/* 803A8E80-803A8E8C 000C .data      __vt__14dDlst_2DQuad_c                                       */
SECTION_DATA void* __vt__14dDlst_2DQuad_c[3] = {
	NULL, /* RTTI */
	NULL,
	(void*)draw__14dDlst_2DQuad_cFv,
};
/* 803A8E8C-803A8E98 000C .data      __vt__13dDlst_2DTri_c                                        */
SECTION_DATA void* __vt__13dDlst_2DTri_c[3] = {
	NULL, /* RTTI */
	NULL,
	(void*)draw__13dDlst_2DTri_cFv,
};
}


/* ###################################################################################### */
/*                                         .sdata                                         */
/* ###################################################################################### */

extern "C" {
/* 80450648-8045064C 0004 .sdata     l_color$4033                                                 */
SECTION_SDATA u8 data_80450648[4] = {
	0xFF, 0xFF, 0xFF, 0xE0,
};
/* 8045064C-80450650 0004 .sdata     l_color$5004                                                 */
SECTION_SDATA u8 data_8045064C[4] = {
	0x00, 0x00, 0x00, 0x40,
};
/* 80450650-80450654 0004 .sdata     l_color$5326                                                 */
SECTION_SDATA u8 data_80450650[4] = {
	0x00, 0x00, 0x00, 0x40,
};
/* 80450654-80450658 0004 .sdata     l_realImageSize$5383                                         */
SECTION_SDATA u8 data_80450654[4] = {
	0x00, 0xC0, 0x00, 0x40,
};
/* 80450658-8045065C 0004 .sdata     clearColor$5435                                              */
SECTION_SDATA u8 data_80450658[4] = {
	0x00, 0x00, 0x00, 0x40,
};
/* 8045065C-80450660 0004 .sdata     mWipeColor__12dDlst_list_c                                   */
SECTION_SDATA u8 mWipeColor__12dDlst_list_c[4] = {
	0x00, 0x00, 0x00, 0x00,
};
}


/* ###################################################################################### */
/*                                        .sdata2                                         */
/* ###################################################################################### */

extern "C" {
/* 80452008-8045200C 0004 .sdata2    @4072                                                        */
// 0x3f000000
SECTION_SDATA2 f32 d_d_drawlist__LIT_4072 = 0.500000f;
/* 8045200C-80452010 0004 .sdata2    @4073                                                        */
// 0x47000000
SECTION_SDATA2 f32 d_d_drawlist__LIT_4073 = 32768.000000f;
/* 80452010-80452018 0004 .sdata2    @4074                                                        */
SECTION_SDATA2 u8 d_d_drawlist__LIT_4074[8] = {
	0x00, 0x00, 0x00, 0x00,
	/* padding */
	0x00, 0x00, 0x00, 0x00,
};
/* 80452018-80452020 0008 .sdata2    @4076                                                        */
// 0x4330000000000000 | compiler-generated value used in cast: (float)u32
SECTION_SDATA2 f64 d_d_drawlist__LIT_4076 = 4503599627370496.000000;
/* 80452020-80452028 0008 .sdata2    @4079                                                        */
// 0x4330000080000000 | compiler-generated value used in cast: (float)s32
SECTION_SDATA2 f64 d_d_drawlist__LIT_4079 = 4503601774854144.000000;
/* 80452028-8045202C 0004 .sdata2    @4270                                                        */
// 0x3f800000
SECTION_SDATA2 f32 d_d_drawlist__LIT_4270 = 1.000000f;
/* 8045202C-80452030 0004 .sdata2    @4284                                                        */
SECTION_SDATA2 u8 d_d_drawlist__LIT_4284[4] = {
	0x00, 0x00, 0x00, 0xFF,
};
/* 80452030-80452034 0004 .sdata2    @4360                                                        */
// 0x43800000
SECTION_SDATA2 f32 d_d_drawlist__LIT_4360 = 256.000000f;
/* 80452034-80452038 0004 .sdata2    @4791                                                        */
// 0x46ece600
SECTION_SDATA2 f32 d_d_drawlist__LIT_4791 = 30323.000000f;
/* 80452038-8045203C 0004 .sdata2    @4792                                                        */
// 0x46ec7a00
SECTION_SDATA2 f32 d_d_drawlist__LIT_4792 = 30269.000000f;
/* 8045203C-80452040 0004 .sdata2    @4793                                                        */
// 0x46ecc600
SECTION_SDATA2 f32 d_d_drawlist__LIT_4793 = 30307.000000f;
/* 80452040-80452048 0008 .sdata2    @4794                                                        */
// 0x3ff0000000000000
SECTION_SDATA2 f64 d_d_drawlist__LIT_4794 = 1.000000;
/* 80452048-8045204C 0004 .sdata2    @4806                                                        */
// 0x40000000
SECTION_SDATA2 f32 d_d_drawlist__LIT_4806 = 2.000000f;
/* 8045204C-80452050 0004 .sdata2    @4876                                                        */
// 0x46fffe00
SECTION_SDATA2 f32 d_d_drawlist__LIT_4876 = 32767.000000f;
/* 80452050-80452054 0004 .sdata2    @5061                                                        */
SECTION_SDATA2 u8 d_d_drawlist__LIT_5061[4] = {
	0xBE, 0x4C, 0xCC, 0xCD,
};
/* 80452054-80452058 0004 .sdata2    @5062                                                        */
// 0xc2b40000
SECTION_SDATA2 f32 d_d_drawlist__LIT_5062 = -90.000000f;
/* 80452058-8045205C 0004 .sdata2    @5127                                                        */
SECTION_SDATA2 u8 d_d_drawlist__LIT_5127[4] = {
	0x3B, 0x03, 0x12, 0x6F,
};
/* 8045205C-80452060 0004 .sdata2    @5128                                                        */
// 0x42f00000
SECTION_SDATA2 f32 d_d_drawlist__LIT_5128 = 120.000000f;
/* 80452060-80452064 0004 .sdata2    @5129                                                        */
SECTION_SDATA2 u8 d_d_drawlist__LIT_5129[4] = {
	0x3E, 0x19, 0x99, 0x9A,
};
/* 80452064-80452068 0004 .sdata2    @5130                                                        */
// 0x461c4000
SECTION_SDATA2 f32 d_d_drawlist__LIT_5130 = 10000.000000f;
/* 80452068-8045206C 0004 .sdata2    @5155                                                        */
// 0x41700000
SECTION_SDATA2 f32 d_d_drawlist__LIT_5155 = 15.000000f;
/* 8045206C-80452070 0004 .sdata2    @5156                                                        */
SECTION_SDATA2 u8 d_d_drawlist__LIT_5156[4] = {
	0x3F, 0x26, 0x66, 0x66,
};
/* 80452070-80452074 0004 .sdata2    @5267                                                        */
// 0x42480000
SECTION_SDATA2 f32 d_d_drawlist__LIT_5267 = 50.000000f;
/* 80452074-80452078 0004 .sdata2    @5268                                                        */
SECTION_SDATA2 u8 d_d_drawlist__LIT_5268[4] = {
	0x3F, 0x4C, 0xCC, 0xCD,
};
/* 80452078-80452080 0004 .sdata2    @5269                                                        */
SECTION_SDATA2 u8 d_d_drawlist__LIT_5269[8] = {
	0x43, 0x7F, 0x00, 0x00,
	/* padding */
	0x00, 0x00, 0x00, 0x00,
};
/* 80452080-80452088 0008 .sdata2    @5270                                                        */
// 0x3fe0000000000000
SECTION_SDATA2 f64 LIT_5270 = 0.500000;
/* 80452088-80452090 0008 .sdata2    @5271                                                        */
// 0x4008000000000000
SECTION_SDATA2 f64 d_d_drawlist__LIT_5271 = 3.000000;
/* 80452090-80452098 0008 .sdata2    @5272                                                        */
SECTION_SDATA2 u8 LIT_5272[8] = {
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
};
/* 80452098-8045209C 0004 .sdata2    @5273                                                        */
SECTION_SDATA2 u8 LIT_5273[4] = {
	0x3E, 0xCC, 0xCC, 0xCD,
};
/* 8045209C-804520A0 0004 .sdata2    @5274                                                        */
// 0xbf800000
SECTION_SDATA2 f32 LIT_5274 = -1.000000f;
/* 804520A0-804520A4 0004 .sdata2    @5275                                                        */
// 0xbf000000
SECTION_SDATA2 f32 LIT_5275 = -0.500000f;
/* 804520A4-804520A8 0004 .sdata2    @5375                                                        */
// 0xc37f0000
SECTION_SDATA2 f32 d_d_drawlist__LIT_5375 = -255.000000f;
/* 804520A8-804520AC 0004 .sdata2    @5376                                                        */
SECTION_SDATA2 u8 d_d_drawlist__LIT_5376[4] = {
	0x3A, 0x37, 0x80, 0x34,
};
/* 804520AC-804520B0 0004 .sdata2    @5377                                                        */
SECTION_SDATA2 u8 LIT_5377[4] = {
	0x3F, 0xB3, 0x33, 0x33,
};
/* 804520B0-804520B4 0004 .sdata2    @5378                                                        */
// 0x41800000
SECTION_SDATA2 f32 LIT_5378 = 16.000000f;
/* 804520B4-804520B8 0004 .sdata2    @5433                                                        */
SECTION_SDATA2 u8 d_d_drawlist__LIT_5433[4] = {
	0x00, 0x00, 0x00, 0x20,
};
/* 804520B8-804520BC 0004 .sdata2    @5551                                                        */
SECTION_SDATA2 u8 LIT_5551[4] = {
	0x3B, 0x44, 0x9B, 0xA6,
};
/* 804520BC-804520C0 0004 .sdata2    @5552                                                        */
// 0xc47a0000
SECTION_SDATA2 f32 LIT_5552 = -1000.000000f;
/* 804520C0-804520C4 0004 .sdata2    @5553                                                        */
SECTION_SDATA2 u8 LIT_5553[4] = {
	0x3A, 0x83, 0x12, 0x6F,
};
/* 804520C4-804520CC 0006 .sdata2    l_zSortId$5668                                               */
SECTION_SDATA2 u8 data_804520C4[8] = {
	0x08, 0x0A, 0x0C, 0x0E, 0x10, 0x11,
	/* padding */
	0x00, 0x00,
};
/* 804520CC-804520D0 0004 .sdata2    @5747                                                        */
// 0x461c3c00
SECTION_SDATA2 f32 d_d_drawlist__LIT_5747 = 9999.000000f;
/* 804520D0-804520D4 0004 .sdata2    @5809                                                        */
// 0x44180000
SECTION_SDATA2 f32 d_d_drawlist__LIT_5809 = 608.000000f;
/* 804520D4-804520D8 0004 .sdata2    @5810                                                        */
// 0x43e00000
SECTION_SDATA2 f32 d_d_drawlist__LIT_5810 = 448.000000f;
/* 804520D8-804520DC 0004 .sdata2    @5811                                                        */
SECTION_SDATA2 u8 d_d_drawlist__LIT_5811[4] = {
	0x40, 0x1B, 0xE7, 0x6D,
};
/* 804520DC-804520E0 0004 .sdata2    @5838                                                        */
SECTION_SDATA2 u8 LIT_5838[4] = {
	0x3F, 0x9B, 0xE7, 0x6D,
};
}


/* ###################################################################################### */
/*                                          .bss                                          */
/* ###################################################################################### */

extern "C" {
/* 804248D0-804248F0 0020 .bss       mSimpleTexObj__21dDlst_shadowControl_c                       */
SECTION_BSS u8 mSimpleTexObj__21dDlst_shadowControl_c[32];
/* 804248F0-80424938 0048 .bss       mWipeDlst__12dDlst_list_c                                    */
SECTION_BSS u8 mWipeDlst__12dDlst_list_c[72];
}


/* ###################################################################################### */
/*                                         .sbss                                          */
/* ###################################################################################### */

extern "C" {
/* 80450ED0-80450ED4 0004 .sbss      data_80450ED0                                                */
SECTION_SBSS u8 data_80450ED0[4];
/* 80450ED4-80450ED8 0004 .sbss      mWipeRate__12dDlst_list_c                                    */
SECTION_SBSS u8 mWipeRate__12dDlst_list_c[4];
/* 80450ED8-80450EE0 0004 .sbss      mWipeSpeed__12dDlst_list_c                                   */
SECTION_SBSS u8 mWipeSpeed__12dDlst_list_c[4 + 4 /* padding */];
/* 80450EE0-80450EE8 0008 .sbss      data_80450EE0                                                */
SECTION_SBSS u8 data_80450EE0[8];
}


/* ###################################################################################### */
/*                                         .sbss2                                         */
/* ###################################################################################### */

extern "C" {
/* 80456B68-80456B70 0004 .sbss2     @4275                                                        */
SECTION_SBSS2 u8 d_d_drawlist__LIT_4275[4 + 4 /* padding */];
}


/* ###################################################################################### */
/*                                         .text                                          */
/* ###################################################################################### */

/* 80051AC0-80051ADC 001C .text      setViewPort__14dDlst_window_cFffffff                         */
// dDlst_window_c::setViewPort(f32, f32, f32, f32, f32, f32)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
extern "C" asm void setViewPort__14dDlst_window_cFffffff() {
	nofralloc
#include "asm/d/d_drawlist/setViewPort__14dDlst_window_cFffffff.s"
}
#pragma pop

/* 80051ADC-80051AF0 0014 .text      setScissor__14dDlst_window_cFffff                            */
// dDlst_window_c::setScissor(f32, f32, f32, f32)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
extern "C" asm void setScissor__14dDlst_window_cFffff() {
	nofralloc
#include "asm/d/d_drawlist/setScissor__14dDlst_window_cFffff.s"
}
#pragma pop

/* 80051AF0-80051CF0 0200 .text      draw__13dDlst_2DTri_cFv                                      */
// dDlst_2DTri_c::draw(void)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
extern "C" asm void draw__13dDlst_2DTri_cFv() {
	nofralloc
#include "asm/d/d_drawlist/draw__13dDlst_2DTri_cFv.s"
}
#pragma pop

/* 80051CF0-80051E5C 016C .text      draw__14dDlst_2DQuad_cFv                                     */
// dDlst_2DQuad_c::draw(void)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
extern "C" asm void draw__14dDlst_2DQuad_cFv() {
	nofralloc
#include "asm/d/d_drawlist/draw__14dDlst_2DQuad_cFv.s"
}
#pragma pop

/* 80051E5C-80051F98 013C .text      draw__15dDlst_2DPoint_cFv                                    */
// dDlst_2DPoint_c::draw(void)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
extern "C" asm void draw__15dDlst_2DPoint_cFv() {
	nofralloc
#include "asm/d/d_drawlist/draw__15dDlst_2DPoint_cFv.s"
}
#pragma pop

/* 80051F98-80052354 03BC .text      draw__11dDlst_2DT_cFv                                        */
// dDlst_2DT_c::draw(void)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
extern "C" asm void draw__11dDlst_2DT_cFv() {
	nofralloc
#include "asm/d/d_drawlist/draw__11dDlst_2DT_cFv.s"
}
#pragma pop

/* 80052354-80052B00 07AC .text      draw__12dDlst_2DT2_cFv                                       */
// dDlst_2DT2_c::draw(void)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
extern "C" asm void draw__12dDlst_2DT2_cFv() {
	nofralloc
#include "asm/d/d_drawlist/draw__12dDlst_2DT2_cFv.s"
}
#pragma pop

/* 80052B00-80052B4C 004C .text      __ct__12dDlst_2DT2_cFv                                       */
// dDlst_2DT2_c::dDlst_2DT2_c(void)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
extern "C" asm void __ct__12dDlst_2DT2_cFv() {
	nofralloc
#include "asm/d/d_drawlist/__ct__12dDlst_2DT2_cFv.s"
}
#pragma pop

/* 80052B4C-80052C58 010C .text      init__12dDlst_2DT2_cFP7ResTIMGffffUcUcUcff                   */
// dDlst_2DT2_c::init(ResTIMG*, f32, f32, f32, f32, u8, u8, u8, f32, f32)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
extern "C" asm void init__12dDlst_2DT2_cFP7ResTIMGffffUcUcUcff() {
	nofralloc
#include "asm/d/d_drawlist/init__12dDlst_2DT2_cFP7ResTIMGffffUcUcUcff.s"
}
#pragma pop

/* 80052C58-8005312C 04D4 .text      draw__11dDlst_2DM_cFv                                        */
// dDlst_2DM_c::draw(void)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
extern "C" asm void draw__11dDlst_2DM_cFv() {
	nofralloc
#include "asm/d/d_drawlist/draw__11dDlst_2DM_cFv.s"
}
#pragma pop

/* 8005312C-8005364C 0520 .text      draw__11dDlst_2Dm_cFv                                        */
// dDlst_2Dm_c::draw(void)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
extern "C" asm void draw__11dDlst_2Dm_cFv() {
	nofralloc
#include "asm/d/d_drawlist/func_8005312C.s"
}
#pragma pop

/* 8005364C-800539DC 0390 .text      draw__12dDlst_2DMt_cFv                                       */
// dDlst_2DMt_c::draw(void)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
extern "C" asm void draw__12dDlst_2DMt_cFv() {
	nofralloc
#include "asm/d/d_drawlist/draw__12dDlst_2DMt_cFv.s"
}
#pragma pop

/* 800539DC-80053A00 0024 .text      getTexture__10J2DPictureCFUc                                 */
// J2DPicture::getTexture(u8) const
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
extern "C" asm void getTexture__10J2DPictureCFUc() {
	nofralloc
#include "asm/d/d_drawlist/getTexture__10J2DPictureCFUc.s"
}
#pragma pop

/* 80053A00-80053A9C 009C .text      __ct__10dDlst_2D_cFP7ResTIMGssssUc                           */
// dDlst_2D_c::dDlst_2D_c(ResTIMG*, short, short, short, short, u8)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
extern "C" asm void __ct__10dDlst_2D_cFP7ResTIMGssssUc() {
	nofralloc
#include "asm/d/d_drawlist/__ct__10dDlst_2D_cFP7ResTIMGssssUc.s"
}
#pragma pop

/* 80053A9C-80053B64 00C8 .text      draw__10dDlst_2D_cFv                                         */
// dDlst_2D_c::draw(void)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
extern "C" asm void draw__10dDlst_2D_cFv() {
	nofralloc
#include "asm/d/d_drawlist/draw__10dDlst_2D_cFv.s"
}
#pragma pop

/* 80053B64-80053BA0 003C .text      draw__11dDlst_blo_cFv                                        */
// dDlst_blo_c::draw(void)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
extern "C" asm void draw__11dDlst_blo_cFv() {
	nofralloc
#include "asm/d/d_drawlist/draw__11dDlst_blo_cFv.s"
}
#pragma pop

/* 80053BA0-80053BC0 0020 .text      clearAnmTransform__9J2DScreenFv                              */
// J2DScreen::clearAnmTransform(void)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
extern "C" asm void clearAnmTransform__9J2DScreenFv() {
	nofralloc
#include "asm/d/d_drawlist/clearAnmTransform__9J2DScreenFv.s"
}
#pragma pop

/* 80053BC0-80053C00 0040 .text      calcMtx__7J2DPaneFv                                          */
// J2DPane::calcMtx(void)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
extern "C" asm void calcMtx__7J2DPaneFv() {
	nofralloc
#include "asm/d/d_drawlist/calcMtx__7J2DPaneFv.s"
}
#pragma pop

/* 80053C00-80053C3C 003C .text      makeMatrix__7J2DPaneFff                                      */
// J2DPane::makeMatrix(f32, f32)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
extern "C" asm void makeMatrix__7J2DPaneFff() {
	nofralloc
#include "asm/d/d_drawlist/makeMatrix__7J2DPaneFff.s"
}
#pragma pop

/* 80053C3C-80053C44 0008 .text      getTypeID__7J2DPaneCFv                                       */
// J2DPane::getTypeID(void) const
extern "C" int getTypeID__7J2DPaneCFv() {
	return 16;
}

/* 80053C44-80053C6C 0028 .text      setWhite__10J2DPictureFQ28JUtility6TColor                    */
// J2DPicture::setWhite(JUtility::TColor)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
extern "C" asm void setWhite__10J2DPictureFQ28JUtility6TColor() {
	nofralloc
#include "asm/d/d_drawlist/setWhite__10J2DPictureFQ28JUtility6TColor.s"
}
#pragma pop

/* 80053C6C-80053C94 0028 .text      setBlack__10J2DPictureFQ28JUtility6TColor                    */
// J2DPicture::setBlack(JUtility::TColor)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
extern "C" asm void setBlack__10J2DPictureFQ28JUtility6TColor() {
	nofralloc
#include "asm/d/d_drawlist/setBlack__10J2DPictureFQ28JUtility6TColor.s"
}
#pragma pop

/* 80053C94-80053CDC 0048 .text      __dt__10J2DAnmBaseFv                                         */
// J2DAnmBase::~J2DAnmBase(void)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
extern "C" asm void __dt__10J2DAnmBaseFv() {
	nofralloc
#include "asm/d/d_drawlist/__dt__10J2DAnmBaseFv.s"
}
#pragma pop

/* 80053CDC-80053CEC 0010 .text      init__8cM_rnd_cFiii                                          */
// cM_rnd_c::init(int, int, int)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
extern "C" asm void init__8cM_rnd_cFiii() {
	nofralloc
#include "asm/d/d_drawlist/init__8cM_rnd_cFiii.s"
}
#pragma pop

/* 80053CEC-80053DE0 00F4 .text      get__8cM_rnd_cFv                                             */
// cM_rnd_c::get(void)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
extern "C" asm void get__8cM_rnd_cFv() {
	nofralloc
#include "asm/d/d_drawlist/get__8cM_rnd_cFv.s"
}
#pragma pop

/* 80053DE0-80053E18 0038 .text      getF__8cM_rnd_cFf                                            */
// cM_rnd_c::getF(f32)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
extern "C" asm void getF__8cM_rnd_cFf() {
	nofralloc
#include "asm/d/d_drawlist/getF__8cM_rnd_cFf.s"
}
#pragma pop

/* 80053E18-80053E60 0048 .text      getFX__8cM_rnd_cFf                                           */
// cM_rnd_c::getFX(f32)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
extern "C" asm void getFX__8cM_rnd_cFf() {
	nofralloc
#include "asm/d/d_drawlist/getFX__8cM_rnd_cFf.s"
}
#pragma pop

/* 80053E60-80053E9C 003C .text      getValue__8cM_rnd_cFff                                       */
// cM_rnd_c::getValue(f32, f32)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
extern "C" asm void getValue__8cM_rnd_cFff() {
	nofralloc
#include "asm/d/d_drawlist/getValue__8cM_rnd_cFff.s"
}
#pragma pop

/* 80053E9C-800541F4 0358 .text      draw__18dDlst_effectLine_cFv                                 */
// dDlst_effectLine_c::draw(void)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
extern "C" asm void draw__18dDlst_effectLine_cFv() {
	nofralloc
#include "asm/d/d_drawlist/draw__18dDlst_effectLine_cFv.s"
}
#pragma pop

/* 800541F4-80054288 0094 .text      update__18dDlst_effectLine_cFR4cXyzR8_GXColorUsUsUsUsffff    */
// dDlst_effectLine_c::update(cXyz&, _GXColor&, u16, u16, u16, u16, f32, f32, f32, f32)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
extern "C" asm void update__18dDlst_effectLine_cFR4cXyzR8_GXColorUsUsUsUsffff() {
	nofralloc
#include "asm/d/d_drawlist/update__18dDlst_effectLine_cFR4cXyzR8_GXColorUsUsUsUsffff.s"
}
#pragma pop

/* 80054288-800543B4 012C .text      set__18dDlst_shadowPoly_cFP10cBgD_Vtx_tUsUsUsP8cM3dGPla      */
// dDlst_shadowPoly_c::set(cBgD_Vtx_t*, u16, u16, u16, cM3dGPla*)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
extern "C" asm void set__18dDlst_shadowPoly_cFP10cBgD_Vtx_tUsUsUsP8cM3dGPla() {
	nofralloc
#include "asm/d/d_drawlist/set__18dDlst_shadowPoly_cFP10cBgD_Vtx_tUsUsUsP8cM3dGPla.s"
}
#pragma pop

/* 800543B4-80054478 00C4 .text      draw__18dDlst_shadowPoly_cFv                                 */
// dDlst_shadowPoly_c::draw(void)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
extern "C" asm void draw__18dDlst_shadowPoly_cFv() {
	nofralloc
#include "asm/d/d_drawlist/draw__18dDlst_shadowPoly_cFv.s"
}
#pragma pop

/* 80054478-800544F0 0078 .text      J3DDrawBuffer__create__FUl                                   */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void J3DDrawBuffer__create(u32) {
	nofralloc
#include "asm/d/d_drawlist/J3DDrawBuffer__create__FUl.s"
}
#pragma pop

/* 800544F0-80054500 0010 .text      reset__18dDlst_shadowReal_cFv                                */
// dDlst_shadowReal_c::reset(void)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
extern "C" asm void reset__18dDlst_shadowReal_cFv() {
	nofralloc
#include "asm/d/d_drawlist/reset__18dDlst_shadowReal_cFv.s"
}
#pragma pop

/* 80054500-800545D4 00D4 .text      imageDraw__18dDlst_shadowReal_cFPA4_f                        */
// dDlst_shadowReal_c::imageDraw(f32 (*)[4])
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
extern "C" asm void imageDraw__18dDlst_shadowReal_cFPA4_f() {
	nofralloc
#include "asm/d/d_drawlist/imageDraw__18dDlst_shadowReal_cFPA4_f.s"
}
#pragma pop

/* 800545D4-80054688 00B4 .text      draw__18dDlst_shadowReal_cFv                                 */
// dDlst_shadowReal_c::draw(void)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
extern "C" asm void draw__18dDlst_shadowReal_cFv() {
	nofralloc
#include "asm/d/d_drawlist/draw__18dDlst_shadowReal_cFv.s"
}
#pragma pop

/* 80054688-80054854 01CC .text      psdRealCallBack__FP13cBgS_ShdwDrawP10cBgD_Vtx_tiiiP8cM3dGPla */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void psdRealCallBack(cBgS_ShdwDraw*, cBgD_Vtx_t*, int, int, int, cM3dGPla*) {
	nofralloc
#include "asm/d/d_drawlist/psdRealCallBack__FP13cBgS_ShdwDrawP10cBgD_Vtx_tiiiP8cM3dGPla.s"
}
#pragma pop

/* 80054854-80054A6C 0218 .text      realPolygonCheck__FP4cXyzffP4cXyzP18dDlst_shadowPoly_c       */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void realPolygonCheck(cXyz*, f32, f32, cXyz*, dDlst_shadowPoly_c*) {
	nofralloc
#include "asm/d/d_drawlist/realPolygonCheck__FP4cXyzffP4cXyzP18dDlst_shadowPoly_c.s"
}
#pragma pop

/* 80054A6C-80054ACC 0060 .text      __dt__14ShdwDrawPoly_cFv                                     */
// ShdwDrawPoly_c::~ShdwDrawPoly_c(void)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
extern "C" asm void __dt__14ShdwDrawPoly_cFv() {
	nofralloc
#include "asm/d/d_drawlist/__dt__14ShdwDrawPoly_cFv.s"
}
#pragma pop

/* 80054ACC-80054BD0 0104 .text      setkankyoShadow__FP12dKy_tevstr_cPf                          */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void setkankyoShadow(dKy_tevstr_c*, f32*) {
	nofralloc
#include "asm/d/d_drawlist/setkankyoShadow__FP12dKy_tevstr_cPf.s"
}
#pragma pop

/* 80054BD0-80055028 0458 .text      setShadowRealMtx__18dDlst_shadowReal_cFP4cXyzP4cXyzfffP12dKy_tevstr_c */
// dDlst_shadowReal_c::setShadowRealMtx(cXyz*, cXyz*, f32, f32, f32, dKy_tevstr_c*)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
extern "C" asm void setShadowRealMtx__18dDlst_shadowReal_cFP4cXyzP4cXyzfffP12dKy_tevstr_c() {
	nofralloc
#include "asm/d/d_drawlist/setShadowRealMtx__18dDlst_shadowReal_cFP4cXyzP4cXyzfffP12dKy_tevstr_c.s"
}
#pragma pop

/* 80055028-800551D4 01AC .text      set__18dDlst_shadowReal_cFUlP8J3DModelP4cXyzffP12dKy_tevstr_cff */
// dDlst_shadowReal_c::set(u32, J3DModel*, cXyz*, f32, f32, dKy_tevstr_c*, f32, f32)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
extern "C" asm void set__18dDlst_shadowReal_cFUlP8J3DModelP4cXyzffP12dKy_tevstr_cff() {
	nofralloc
#include "asm/d/d_drawlist/set__18dDlst_shadowReal_cFUlP8J3DModelP4cXyzffP12dKy_tevstr_cff.s"
}
#pragma pop

/* 800551D4-8005520C 0038 .text      add__18dDlst_shadowReal_cFP8J3DModel                         */
// dDlst_shadowReal_c::add(J3DModel*)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
extern "C" asm void add__18dDlst_shadowReal_cFP8J3DModel() {
	nofralloc
#include "asm/d/d_drawlist/add__18dDlst_shadowReal_cFP8J3DModel.s"
}
#pragma pop

/* 8005520C-800553EC 01E0 .text      draw__20dDlst_shadowSimple_cFv                               */
// dDlst_shadowSimple_c::draw(void)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
extern "C" asm void draw__20dDlst_shadowSimple_cFv() {
	nofralloc
#include "asm/d/d_drawlist/draw__20dDlst_shadowSimple_cFv.s"
}
#pragma pop

/* 800553EC-80055684 0298 .text      set__20dDlst_shadowSimple_cFP4cXyzffP4cXyzsfP9_GXTexObj      */
// dDlst_shadowSimple_c::set(cXyz*, f32, f32, cXyz*, short, f32, _GXTexObj*)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
extern "C" asm void set__20dDlst_shadowSimple_cFP4cXyzffP4cXyzsfP9_GXTexObj() {
	nofralloc
#include "asm/d/d_drawlist/set__20dDlst_shadowSimple_cFP4cXyzffP4cXyzsfP9_GXTexObj.s"
}
#pragma pop

/* 80055684-80055768 00E4 .text      init__21dDlst_shadowControl_cFv                              */
// dDlst_shadowControl_c::init(void)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
extern "C" asm void init__21dDlst_shadowControl_cFv() {
	nofralloc
#include "asm/d/d_drawlist/init__21dDlst_shadowControl_cFv.s"
}
#pragma pop

/* 80055768-800557C8 0060 .text      reset__21dDlst_shadowControl_cFv                             */
// dDlst_shadowControl_c::reset(void)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
extern "C" asm void reset__21dDlst_shadowControl_cFv() {
	nofralloc
#include "asm/d/d_drawlist/reset__21dDlst_shadowControl_cFv.s"
}
#pragma pop

/* 800557C8-80055A14 024C .text      imageDraw__21dDlst_shadowControl_cFPA4_f                     */
// dDlst_shadowControl_c::imageDraw(f32 (*)[4])
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
extern "C" asm void imageDraw__21dDlst_shadowControl_cFPA4_f() {
	nofralloc
#include "asm/d/d_drawlist/imageDraw__21dDlst_shadowControl_cFPA4_f.s"
}
#pragma pop

/* 80055A14-80055C74 0260 .text      draw__21dDlst_shadowControl_cFPA4_f                          */
// dDlst_shadowControl_c::draw(f32 (*)[4])
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
extern "C" asm void draw__21dDlst_shadowControl_cFPA4_f() {
	nofralloc
#include "asm/d/d_drawlist/draw__21dDlst_shadowControl_cFPA4_f.s"
}
#pragma pop

/* 80055C74-80055F1C 02A8 .text      setReal__21dDlst_shadowControl_cFUlScP8J3DModelP4cXyzffP12dKy_tevstr_c */
// dDlst_shadowControl_c::setReal(u32, s8, J3DModel*, cXyz*, f32, f32, dKy_tevstr_c*)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
extern "C" asm void setReal__21dDlst_shadowControl_cFUlScP8J3DModelP4cXyzffP12dKy_tevstr_c() {
	nofralloc
#include "asm/d/d_drawlist/setReal__21dDlst_shadowControl_cFUlScP8J3DModelP4cXyzffP12dKy_tevstr_c.s"
}
#pragma pop

/* 80055F1C-80055F84 0068 .text      addReal__21dDlst_shadowControl_cFUlP8J3DModel                */
// dDlst_shadowControl_c::addReal(u32, J3DModel*)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
extern "C" asm void addReal__21dDlst_shadowControl_cFUlP8J3DModel() {
	nofralloc
#include "asm/d/d_drawlist/addReal__21dDlst_shadowControl_cFUlP8J3DModel.s"
}
#pragma pop

/* 80055F84-80055FE8 0064 .text      setSimple__21dDlst_shadowControl_cFP4cXyzffP4cXyzsfP9_GXTexObj */
// dDlst_shadowControl_c::setSimple(cXyz*, f32, f32, cXyz*, short, f32, _GXTexObj*)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
extern "C" asm void setSimple__21dDlst_shadowControl_cFP4cXyzffP4cXyzsfP9_GXTexObj() {
	nofralloc
#include "asm/d/d_drawlist/setSimple__21dDlst_shadowControl_cFP4cXyzffP4cXyzsfP9_GXTexObj.s"
}
#pragma pop

/* 80055FE8-80056018 0030 .text      setSimpleTex__21dDlst_shadowControl_cFPC7ResTIMG             */
// dDlst_shadowControl_c::setSimpleTex(const ResTIMG*)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
extern "C" asm void setSimpleTex__21dDlst_shadowControl_cFPC7ResTIMG() {
	nofralloc
#include "asm/d/d_drawlist/setSimpleTex__21dDlst_shadowControl_cFPC7ResTIMG.s"
}
#pragma pop

/* 80056018-80056080 0068 .text      newData__13dDlst_peekZ_cFssPUl                               */
// dDlst_peekZ_c::newData(short, short, u32*)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
extern "C" asm void newData__13dDlst_peekZ_cFssPUl() {
	nofralloc
#include "asm/d/d_drawlist/newData__13dDlst_peekZ_cFssPUl.s"
}
#pragma pop

/* 80056080-800560F0 0070 .text      peekData__13dDlst_peekZ_cFv                                  */
// dDlst_peekZ_c::peekData(void)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
extern "C" asm void peekData__13dDlst_peekZ_cFv() {
	nofralloc
#include "asm/d/d_drawlist/peekData__13dDlst_peekZ_cFv.s"
}
#pragma pop

/* 800560F0-800561C8 00D8 .text      __ct__12dDlst_list_cFv                                       */
// dDlst_list_c::dDlst_list_c(void)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
extern "C" asm void __ct__12dDlst_list_cFv() {
	nofralloc
#include "asm/d/d_drawlist/__ct__12dDlst_list_cFv.s"
}
#pragma pop

/* 800561C8-800561F8 0030 .text      __ct__26mDoExt_3DlineMatSortPacketFv                         */
// mDoExt_3DlineMatSortPacket::mDoExt_3DlineMatSortPacket(void)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
extern "C" asm void __ct__26mDoExt_3DlineMatSortPacketFv() {
	nofralloc
#include "asm/d/d_drawlist/__ct__26mDoExt_3DlineMatSortPacketFv.s"
}
#pragma pop

/* 800561F8-80056270 0078 .text      __dt__18dDlst_shadowReal_cFv                                 */
// dDlst_shadowReal_c::~dDlst_shadowReal_c(void)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
extern "C" asm void __dt__18dDlst_shadowReal_cFv() {
	nofralloc
#include "asm/d/d_drawlist/__dt__18dDlst_shadowReal_cFv.s"
}
#pragma pop

/* 80056270-800562D0 0060 .text      __dt__17dDlst_shadowTri_cFv                                  */
// dDlst_shadowTri_c::~dDlst_shadowTri_c(void)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
extern "C" asm void __dt__17dDlst_shadowTri_cFv() {
	nofralloc
#include "asm/d/d_drawlist/__dt__17dDlst_shadowTri_cFv.s"
}
#pragma pop

/* 800562D0-80056344 0074 .text      __ct__18dDlst_shadowReal_cFv                                 */
// dDlst_shadowReal_c::dDlst_shadowReal_c(void)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
extern "C" asm void __ct__18dDlst_shadowReal_cFv() {
	nofralloc
#include "asm/d/d_drawlist/__ct__18dDlst_shadowReal_cFv.s"
}
#pragma pop

/* 80056344-8005638C 0048 .text      __ct__17dDlst_shadowTri_cFv                                  */
// dDlst_shadowTri_c::dDlst_shadowTri_c(void)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
extern "C" asm void __ct__17dDlst_shadowTri_cFv() {
	nofralloc
#include "asm/d/d_drawlist/__ct__17dDlst_shadowTri_cFv.s"
}
#pragma pop

/* 8005638C-80056390 0004 .text      __ct__20dDlst_shadowSimple_cFv                               */
// dDlst_shadowSimple_c::dDlst_shadowSimple_c(void)
extern "C" void __ct__20dDlst_shadowSimple_cFv() {
	return;
}

/* 80056390-8005648C 00FC .text      init__12dDlst_list_cFv                                       */
// dDlst_list_c::init(void)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
extern "C" asm void init__12dDlst_list_cFv() {
	nofralloc
#include "asm/d/d_drawlist/init__12dDlst_list_cFv.s"
}
#pragma pop

/* 8005648C-80056538 00AC .text      __dt__12dDlst_list_cFv                                       */
// dDlst_list_c::~dDlst_list_c(void)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
extern "C" asm void __dt__12dDlst_list_cFv() {
	nofralloc
#include "asm/d/d_drawlist/__dt__12dDlst_list_cFv.s"
}
#pragma pop

/* 80056538-800565EC 00B4 .text      reset__12dDlst_list_cFv                                      */
// dDlst_list_c::reset(void)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
extern "C" asm void reset__12dDlst_list_cFv() {
	nofralloc
#include "asm/d/d_drawlist/reset__12dDlst_list_cFv.s"
}
#pragma pop

/* 800565EC-800566D4 00E8 .text      entryZSortXluDrawList__12dDlst_list_cFP13J3DDrawBufferP9J3DPacketR4cXyz */
// dDlst_list_c::entryZSortXluDrawList(J3DDrawBuffer*, J3DPacket*, cXyz&)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
extern "C" asm void entryZSortXluDrawList__12dDlst_list_cFP13J3DDrawBufferP9J3DPacketR4cXyz() {
	nofralloc
#include "asm/d/d_drawlist/entryZSortXluDrawList__12dDlst_list_cFP13J3DDrawBufferP9J3DPacketR4cXyz.s"
}
#pragma pop

/* 800566D4-80056710 003C .text      drawOpaDrawList__12dDlst_list_cFP13J3DDrawBuffer             */
// dDlst_list_c::drawOpaDrawList(J3DDrawBuffer*)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
extern "C" asm void drawOpaDrawList__12dDlst_list_cFP13J3DDrawBuffer() {
	nofralloc
#include "asm/d/d_drawlist/drawOpaDrawList__12dDlst_list_cFP13J3DDrawBuffer.s"
}
#pragma pop

/* 80056710-8005674C 003C .text      drawXluDrawList__12dDlst_list_cFP13J3DDrawBuffer             */
// dDlst_list_c::drawXluDrawList(J3DDrawBuffer*)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
extern "C" asm void drawXluDrawList__12dDlst_list_cFP13J3DDrawBuffer() {
	nofralloc
#include "asm/d/d_drawlist/drawXluDrawList__12dDlst_list_cFP13J3DDrawBuffer.s"
}
#pragma pop

/* 8005674C-80056770 0024 .text      drawOpaListItem3d__12dDlst_list_cFv                          */
// dDlst_list_c::drawOpaListItem3d(void)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
extern "C" asm void drawOpaListItem3d__12dDlst_list_cFv() {
	nofralloc
#include "asm/d/d_drawlist/drawOpaListItem3d__12dDlst_list_cFv.s"
}
#pragma pop

/* 80056770-80056794 0024 .text      drawXluListItem3d__12dDlst_list_cFv                          */
// dDlst_list_c::drawXluListItem3d(void)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
extern "C" asm void drawXluListItem3d__12dDlst_list_cFv() {
	nofralloc
#include "asm/d/d_drawlist/drawXluListItem3d__12dDlst_list_cFv.s"
}
#pragma pop

/* 80056794-800567C4 0030 .text      set__12dDlst_list_cFRPP12dDlst_base_cRPP12dDlst_base_cP12dDlst_base_c */
// dDlst_list_c::set(dDlst_base_c**&, dDlst_base_c**&, dDlst_base_c*)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
extern "C" asm void set__12dDlst_list_cFRPP12dDlst_base_cRPP12dDlst_base_cP12dDlst_base_c() {
	nofralloc
#include "asm/d/d_drawlist/set__12dDlst_list_cFRPP12dDlst_base_cRPP12dDlst_base_cP12dDlst_base_c.s"
}
#pragma pop

/* 800567C4-8005681C 0058 .text      draw__12dDlst_list_cFPP12dDlst_base_cPP12dDlst_base_c        */
// dDlst_list_c::draw(dDlst_base_c**, dDlst_base_c**)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
extern "C" asm void draw__12dDlst_list_cFPP12dDlst_base_cPP12dDlst_base_c() {
	nofralloc
#include "asm/d/d_drawlist/draw__12dDlst_list_cFPP12dDlst_base_cPP12dDlst_base_c.s"
}
#pragma pop

/* 8005681C-800568D8 00BC .text      wipeIn__12dDlst_list_cFfR8_GXColor                           */
// dDlst_list_c::wipeIn(f32, _GXColor&)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
extern "C" asm void wipeIn__12dDlst_list_cFfR8_GXColor() {
	nofralloc
#include "asm/d/d_drawlist/wipeIn__12dDlst_list_cFfR8_GXColor.s"
}
#pragma pop

/* 800568D8-80056900 0028 .text      wipeIn__12dDlst_list_cFf                                     */
// dDlst_list_c::wipeIn(f32)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
extern "C" asm void wipeIn__12dDlst_list_cFf() {
	nofralloc
#include "asm/d/d_drawlist/wipeIn__12dDlst_list_cFf.s"
}
#pragma pop

/* 80056900-800569A0 00A0 .text      calcWipe__12dDlst_list_cFv                                   */
// dDlst_list_c::calcWipe(void)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
extern "C" asm void calcWipe__12dDlst_list_cFv() {
	nofralloc
#include "asm/d/d_drawlist/calcWipe__12dDlst_list_cFv.s"
}
#pragma pop

/* 800569A0-800569A8 0008 .text      getTri__22dDlst_shadowRealPoly_cFv                           */
// dDlst_shadowRealPoly_c::getTri(void)
extern "C" u8* getTri__22dDlst_shadowRealPoly_cFv(u8* param0) {
	return (u8*)&param0[8]; /* param0->field_0x8 */
}

/* 800569A8-800569B0 0008 .text      getTriMax__22dDlst_shadowRealPoly_cFv                        */
// dDlst_shadowRealPoly_c::getTriMax(void)
extern "C" int getTriMax__22dDlst_shadowRealPoly_cFv() {
	return 256;
}

/* 800569B0-800569B4 0004 .text      searchUpdateMaterialID__10J2DAnmBaseFP9J2DScreen             */
// J2DAnmBase::searchUpdateMaterialID(J2DScreen*)
extern "C" void searchUpdateMaterialID__10J2DAnmBaseFP9J2DScreen() {
	return;
}

/* 800569B4-800569DC 0028 .text      __sinit_d_drawlist_cpp                                       */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
extern "C" asm void __sinit_d_drawlist_cpp() {
	nofralloc
#include "asm/d/d_drawlist/__sinit_d_drawlist_cpp.s"
}
#pragma pop


