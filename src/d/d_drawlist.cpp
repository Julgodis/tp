// 
// Generated By: dol2asm
// Translation Unit: d/d_drawlist
// 

#include "dol2asm.h"
#include "dolphin/types.h"
#include "d/d_drawlist.h"

// 
// Types:
// 

struct mDoMtx_stack_c {
	/* 8000CE38 */ void scaleM(f32, f32, f32);
};

struct mDoExt_3DlineMatSortPacket {
	/* 80014E20 */ ~mDoExt_3DlineMatSortPacket();
	/* 800561C8 */ mDoExt_3DlineMatSortPacket();
};

struct dKy_tevstr_c {
};

struct dDlst_window_c {
	/* 80051AC0 */ void setViewPort(f32, f32, f32, f32, f32, f32);
	/* 80051ADC */ void setScissor(f32, f32, f32, f32);
};

struct dDlst_shadowTri_c {
	/* 80056270 */ ~dDlst_shadowTri_c();
	/* 80056344 */ dDlst_shadowTri_c();
};

struct _GXTexObj {
};

struct Vec {
};

struct cXyz {
	/* 80009184 */ ~cXyz();
	/* 800125DC */ cXyz();
	/* 80266B34 */ void operator-(Vec const&) const;
	/* 80266EF4 */ void normalize();
	/* 802670AC */ void isZero() const;
};

struct dDlst_shadowSimple_c {
	/* 8005520C */ void draw();
	/* 800553EC */ void set(cXyz*, f32, f32, cXyz*, s16, f32, _GXTexObj*);
	/* 8005638C */ dDlst_shadowSimple_c();
};

struct J3DModel {
};

struct dDlst_shadowReal_c {
	/* 800544F0 */ void reset();
	/* 80054500 */ void imageDraw(f32 (* )[4]);
	/* 800545D4 */ void draw();
	/* 80054BD0 */ void setShadowRealMtx(cXyz*, cXyz*, f32, f32, f32, dKy_tevstr_c*);
	/* 80055028 */ void set(u32, J3DModel*, cXyz*, f32, f32, dKy_tevstr_c*, f32, f32);
	/* 800551D4 */ void add(J3DModel*);
	/* 800561F8 */ ~dDlst_shadowReal_c();
	/* 800562D0 */ dDlst_shadowReal_c();
};

struct dDlst_shadowRealPoly_c {
	/* 800569A0 */ void getTri();
	/* 800569A8 */ s32 getTriMax();
};

struct cBgD_Vtx_t {
};

struct cM3dGPla {
};

struct dDlst_shadowPoly_c {
	/* 80054288 */ void set(cBgD_Vtx_t*, u16, u16, u16, cM3dGPla*);
	/* 800543B4 */ void draw();
};

struct ResTIMG {
};

struct dDlst_shadowControl_c {
	/* 80055684 */ void init();
	/* 80055768 */ void reset();
	/* 800557C8 */ void imageDraw(f32 (* )[4]);
	/* 80055A14 */ void draw(f32 (* )[4]);
	/* 80055C74 */ void setReal(u32, s8, J3DModel*, cXyz*, f32, f32, dKy_tevstr_c*);
	/* 80055F1C */ void addReal(u32, J3DModel*);
	/* 80055F84 */ void setSimple(cXyz*, f32, f32, cXyz*, s16, f32, _GXTexObj*);
	/* 80055FE8 */ void setSimpleTex(ResTIMG const*);
};

struct dDlst_peekZ_c {
	/* 80056018 */ void newData(s16, s16, u32*);
	/* 80056080 */ void peekData();
};

struct J3DPacket {
};

struct J3DDrawBuffer {
	/* 80324F08 */ void initialize();
	/* 80324F70 */ void allocBuffer(u32);
	/* 80325008 */ ~J3DDrawBuffer();
	/* 80325068 */ void frameInit();
	/* 8032548C */ void entryImm(J3DPacket*, u16);
	/* 803254AC */ void draw() const;
};

struct _GXColor {
};

struct dDlst_base_c {
};

struct dDlst_list_c {
	/* 800560F0 */ dDlst_list_c();
	/* 80056390 */ void init();
	/* 8005648C */ ~dDlst_list_c();
	/* 80056538 */ void reset();
	/* 800565EC */ void entryZSortXluDrawList(J3DDrawBuffer*, J3DPacket*, cXyz&);
	/* 800566D4 */ void drawOpaDrawList(J3DDrawBuffer*);
	/* 80056710 */ void drawXluDrawList(J3DDrawBuffer*);
	/* 8005674C */ void drawOpaListItem3d();
	/* 80056770 */ void drawXluListItem3d();
	/* 80056794 */ void set(dDlst_base_c**&, dDlst_base_c**&, dDlst_base_c*);
	/* 800567C4 */ void draw(dDlst_base_c**, dDlst_base_c**);
	/* 8005681C */ void wipeIn(f32, _GXColor&);
	/* 800568D8 */ void wipeIn(f32);
	/* 80056900 */ void calcWipe();
};

struct dDlst_effectLine_c {
	/* 80053E9C */ void draw();
	/* 800541F4 */ void update(cXyz&, _GXColor&, u16, u16, u16, u16, f32, f32, f32, f32);
};

struct dDlst_blo_c {
	/* 80053B64 */ void draw();
};

struct dDlst_2Dm_c {
	/* 8005312C */ void draw();
};

struct dDlst_2D_c {
	/* 80053A00 */ dDlst_2D_c(ResTIMG*, s16, s16, s16, s16, u8);
	/* 80053A9C */ void draw();
};

struct dDlst_2DTri_c {
	/* 80051AF0 */ void draw();
};

struct dDlst_2DT_c {
	/* 80051F98 */ void draw();
};

struct dDlst_2DT2_c {
	/* 80052354 */ void draw();
	/* 80052B00 */ dDlst_2DT2_c();
	/* 80052B4C */ void init(ResTIMG*, f32, f32, f32, f32, u8, u8, u8, f32, f32);
};

struct dDlst_2DQuad_c {
	/* 80051CF0 */ void draw();
};

struct dDlst_2DPoint_c {
	/* 80051E5C */ void draw();
};

struct dDlst_2DMt_c {
	/* 8005364C */ void draw();
};

struct dDlst_2DM_c {
	/* 80052C58 */ void draw();
};

struct cM_rnd_c {
	/* 80053CDC */ void init(int, int, int);
	/* 80053CEC */ void get();
	/* 80053DE0 */ void getF(f32);
	/* 80053E18 */ void getFX(f32);
	/* 80053E60 */ void getValue(f32, f32);
};

struct cBgS_ShdwDraw {
	/* 80267F88 */ cBgS_ShdwDraw();
	/* 80267FD0 */ ~cBgS_ShdwDraw();
	/* 80268048 */ void Set(cXyz&, cXyz&);
	/* 8026806C */ void SetCallback(int (*)(cBgS_ShdwDraw*, cBgD_Vtx_t*, int, int, int, cM3dGPla*));
};

struct cBgS {
	/* 80074840 */ void ShdwDraw(cBgS_ShdwDraw*);
};

struct _GXTlutObj {
};

struct ShdwDrawPoly_c {
	/* 80054A6C */ ~ShdwDrawPoly_c();
};

struct JUtility {
	struct TColor {
	};

};

struct JKRArchive {
	/* 802D5B38 */ void getGlbResource(u32, char const*, JKRArchive*);
};

struct J3DUClipper {
	/* 8027378C */ void calcViewFrustum();
	/* 80273A44 */ void clip(f32 const (* )[4], Vec*, Vec*) const;
};

struct J3DSys {
	/* 8031073C */ void reinitGX();
};

struct J3DShapePacket {
	/* 80312FBC */ void drawFast();
};

struct J3DShape {
	/* 80315300 */ void loadPreDrawSetting() const;
};

struct J2DGrafContext {
};

struct J2DScreen {
	/* 80053BA0 */ void clearAnmTransform();
	/* 802F8ED4 */ void draw(f32, f32, J2DGrafContext const*);
};

struct J2DPicture {
	/* 800539DC */ void getTexture(u8) const;
	/* 80053C44 */ void setWhite(JUtility::TColor);
	/* 80053C6C */ void setBlack(JUtility::TColor);
	/* 802FC050 */ J2DPicture();
};

struct J2DPane {
	/* 80053BC0 */ void calcMtx();
	/* 80053C00 */ void makeMatrix(f32, f32);
	/* 80053C3C */ s32 getTypeID() const;
	/* 802F8004 */ void clearAnmTransform();
};

struct J2DAnmBase {
	/* 80053C94 */ ~J2DAnmBase();
	/* 800569B0 */ void searchUpdateMaterialID(J2DScreen*);
};

// 
// Forward References:
// 

static void J3DDrawBuffer__create(u32);
static void psdRealCallBack(cBgS_ShdwDraw*, cBgD_Vtx_t*, int, int, int, cM3dGPla*);
static void realPolygonCheck(cXyz*, f32, f32, cXyz*, dDlst_shadowPoly_c*);
static void setkankyoShadow(dKy_tevstr_c*, f32*);
extern "C" extern char const* const d_d_drawlist__stringBase0;
extern "C" extern u8 l_frontZMat[60 + 4 /* padding */];
extern "C" extern u8 l_frontNoZSubMat[42 + 2 /* padding */];
extern "C" extern u8 l_shadowVolDL[59 + 5 /* padding */];
extern "C" extern u8 l_shadowVolMat[90 + 6 /* padding */];
extern "C" extern u8 data_803A8D9C[48];
extern "C" extern void* __vt__18dDlst_effectLine_c[3];
extern "C" extern void* __vt__10J2DAnmBase[4];
extern "C" extern void* __vt__11dDlst_blo_c[3];
extern "C" extern void* __vt__10dDlst_2D_c[3];
extern "C" extern void* __vt__12dDlst_2DMt_c[3];
extern "C" extern void* __vt__11dDlst_2Dm_c[3];
extern "C" extern void* __vt__11dDlst_2DM_c[3 + 3 /* padding */];
extern "C" extern void* __vt__11dDlst_2DT_c[3];
extern "C" extern void* __vt__15dDlst_2DPoint_c[3];
extern "C" extern void* __vt__14dDlst_2DQuad_c[3];
extern "C" extern void* __vt__13dDlst_2DTri_c[3];
extern "C" extern u8 mSimpleTexObj__21dDlst_shadowControl_c[32];
extern "C" extern u8 data_80450ED0[4];
extern "C" extern f32 mWipeRate__12dDlst_list_c;
extern "C" extern u8 data_80450EE0[8];

extern "C" void setViewPort__14dDlst_window_cFffffff();
extern "C" void setScissor__14dDlst_window_cFffff();
extern "C" void draw__13dDlst_2DTri_cFv();
extern "C" void draw__14dDlst_2DQuad_cFv();
extern "C" void draw__15dDlst_2DPoint_cFv();
extern "C" void draw__11dDlst_2DT_cFv();
extern "C" void draw__12dDlst_2DT2_cFv();
extern "C" void __ct__12dDlst_2DT2_cFv();
extern "C" void init__12dDlst_2DT2_cFP7ResTIMGffffUcUcUcff();
extern "C" void draw__11dDlst_2DM_cFv();
extern "C" void draw__11dDlst_2Dm_cFv();
extern "C" void draw__12dDlst_2DMt_cFv();
extern "C" void getTexture__10J2DPictureCFUc();
extern "C" void __ct__10dDlst_2D_cFP7ResTIMGssssUc();
extern "C" void draw__10dDlst_2D_cFv();
extern "C" void draw__11dDlst_blo_cFv();
extern "C" void clearAnmTransform__9J2DScreenFv();
extern "C" void calcMtx__7J2DPaneFv();
extern "C" void makeMatrix__7J2DPaneFff();
extern "C" s32 getTypeID__7J2DPaneCFv();
extern "C" void setWhite__10J2DPictureFQ28JUtility6TColor();
extern "C" void setBlack__10J2DPictureFQ28JUtility6TColor();
extern "C" void __dt__10J2DAnmBaseFv();
extern "C" void init__8cM_rnd_cFiii();
extern "C" void get__8cM_rnd_cFv();
extern "C" void getF__8cM_rnd_cFf();
extern "C" void getFX__8cM_rnd_cFf();
extern "C" void getValue__8cM_rnd_cFff();
extern "C" void draw__18dDlst_effectLine_cFv();
extern "C" void update__18dDlst_effectLine_cFR4cXyzR8_GXColorUsUsUsUsffff();
extern "C" void set__18dDlst_shadowPoly_cFP10cBgD_Vtx_tUsUsUsP8cM3dGPla();
extern "C" void draw__18dDlst_shadowPoly_cFv();
extern "C" static void J3DDrawBuffer__create__FUl();
extern "C" void reset__18dDlst_shadowReal_cFv();
extern "C" void imageDraw__18dDlst_shadowReal_cFPA4_f();
extern "C" void draw__18dDlst_shadowReal_cFv();
extern "C" static void psdRealCallBack__FP13cBgS_ShdwDrawP10cBgD_Vtx_tiiiP8cM3dGPla();
extern "C" static void realPolygonCheck__FP4cXyzffP4cXyzP18dDlst_shadowPoly_c();
extern "C" void __dt__14ShdwDrawPoly_cFv();
extern "C" static void setkankyoShadow__FP12dKy_tevstr_cPf();
extern "C" void setShadowRealMtx__18dDlst_shadowReal_cFP4cXyzP4cXyzfffP12dKy_tevstr_c();
extern "C" void set__18dDlst_shadowReal_cFUlP8J3DModelP4cXyzffP12dKy_tevstr_cff();
extern "C" void add__18dDlst_shadowReal_cFP8J3DModel();
extern "C" void draw__20dDlst_shadowSimple_cFv();
extern "C" void set__20dDlst_shadowSimple_cFP4cXyzffP4cXyzsfP9_GXTexObj();
extern "C" void init__21dDlst_shadowControl_cFv();
extern "C" void reset__21dDlst_shadowControl_cFv();
extern "C" void imageDraw__21dDlst_shadowControl_cFPA4_f();
extern "C" void draw__21dDlst_shadowControl_cFPA4_f();
extern "C" void setReal__21dDlst_shadowControl_cFUlScP8J3DModelP4cXyzffP12dKy_tevstr_c();
extern "C" void addReal__21dDlst_shadowControl_cFUlP8J3DModel();
extern "C" void setSimple__21dDlst_shadowControl_cFP4cXyzffP4cXyzsfP9_GXTexObj();
extern "C" void setSimpleTex__21dDlst_shadowControl_cFPC7ResTIMG();
extern "C" void newData__13dDlst_peekZ_cFssPUl();
extern "C" void peekData__13dDlst_peekZ_cFv();
extern "C" void __ct__12dDlst_list_cFv();
extern "C" void __ct__26mDoExt_3DlineMatSortPacketFv();
extern "C" void __dt__18dDlst_shadowReal_cFv();
extern "C" void __dt__17dDlst_shadowTri_cFv();
extern "C" void __ct__18dDlst_shadowReal_cFv();
extern "C" void __ct__17dDlst_shadowTri_cFv();
extern "C" void __ct__20dDlst_shadowSimple_cFv();
extern "C" void init__12dDlst_list_cFv();
extern "C" void __dt__12dDlst_list_cFv();
extern "C" void reset__12dDlst_list_cFv();
extern "C" void entryZSortXluDrawList__12dDlst_list_cFP13J3DDrawBufferP9J3DPacketR4cXyz();
extern "C" void drawOpaDrawList__12dDlst_list_cFP13J3DDrawBuffer();
extern "C" void drawXluDrawList__12dDlst_list_cFP13J3DDrawBuffer();
extern "C" void drawOpaListItem3d__12dDlst_list_cFv();
extern "C" void drawXluListItem3d__12dDlst_list_cFv();
extern "C" void set__12dDlst_list_cFRPP12dDlst_base_cRPP12dDlst_base_cP12dDlst_base_c();
extern "C" void draw__12dDlst_list_cFPP12dDlst_base_cPP12dDlst_base_c();
extern "C" void wipeIn__12dDlst_list_cFfR8_GXColor();
extern "C" void wipeIn__12dDlst_list_cFf();
extern "C" void calcWipe__12dDlst_list_cFv();
extern "C" void getTri__22dDlst_shadowRealPoly_cFv();
extern "C" s32 getTriMax__22dDlst_shadowRealPoly_cFv();
extern "C" void searchUpdateMaterialID__10J2DAnmBaseFP9J2DScreen();
extern "C" void __sinit_d_drawlist_cpp();
extern "C" extern char const* const d_d_drawlist__stringBase0;
extern "C" extern u8 l_frontZMat[60 + 4 /* padding */];
extern "C" extern u8 l_frontNoZSubMat[42 + 2 /* padding */];
extern "C" extern u8 l_shadowVolDL[59 + 5 /* padding */];
extern "C" extern u8 l_shadowVolMat[90 + 6 /* padding */];
extern "C" extern u8 data_803A8D9C[48];
extern "C" extern void* __vt__18dDlst_effectLine_c[3];
extern "C" extern void* __vt__10J2DAnmBase[4];
extern "C" extern void* __vt__11dDlst_blo_c[3];
extern "C" extern void* __vt__10dDlst_2D_c[3];
extern "C" extern void* __vt__12dDlst_2DMt_c[3];
extern "C" extern void* __vt__11dDlst_2Dm_c[3];
extern "C" extern void* __vt__11dDlst_2DM_c[3 + 3 /* padding */];
extern "C" extern void* __vt__11dDlst_2DT_c[3];
extern "C" extern void* __vt__15dDlst_2DPoint_c[3];
extern "C" extern void* __vt__14dDlst_2DQuad_c[3];
extern "C" extern void* __vt__13dDlst_2DTri_c[3];
extern "C" extern u8 mSimpleTexObj__21dDlst_shadowControl_c[32];
extern "C" extern u8 data_80450ED0[4];
extern "C" extern f32 mWipeRate__12dDlst_list_c;
extern "C" extern u8 data_80450EE0[8];

// 
// External References:
// 

void mDoMtx_YrotM(f32 (* )[4], s16);
void mDoMtx_lookAt(f32 (* )[4], Vec const*, Vec const*, s16);
void mDoLib_setResTimgObj(ResTIMG const*, _GXTexObj*, u32, _GXTlutObj*);
void dKy_plight_near_pos();
void dKy_GxFog_set();
void cLib_chaseUC(u8*, u8, u8);
void* operator new(u32);
void* operator new[](u32, int);
void operator delete(void*);
extern "C" extern u8 g_mDoMtx_identity[48 + 24 /* padding */];
extern "C" extern void* __vt__26mDoExt_3DlineMatSortPacket[5];
extern "C" extern void* __vt__12dDlst_base_c[3];
extern "C" extern void* __vt__9J3DPacket[5];
extern "C" extern u8 now__14mDoMtx_stack_c[48];
extern "C" extern u8 mClipper__14mDoLib_clipper[92];
extern "C" extern u8 g_dComIfG_gameInfo[122384];
extern "C" extern u8 g_env_light[4880];
extern "C" extern u8 g_envHIO[68];
extern "C" extern u8 j3dSys[284];
extern "C" extern u8 sincosTable___5JMath[65536];
extern "C" extern u8 mBackColor__13mDoGph_gInf_c[4];
extern "C" extern u8 g_clearColor[4];
extern "C" extern u32 g_blackColor;
extern "C" extern u32 g_whiteColor;
extern "C" extern u32 __float_nan;
extern "C" extern u32 __float_max;
extern "C" extern f32 mSystemFar__14mDoLib_clipper;
extern "C" extern f32 mFovyRate__14mDoLib_clipper;
extern "C" extern f32 G_CM3D_F_ABS_MIN[1 + 1 /* padding */];
extern "C" extern u8 sOldVcdVatCmd__8J3DShape[4];

extern "C" void __dt__4cXyzFv();
extern "C" void mDoMtx_YrotM__FPA4_fs();
extern "C" void mDoMtx_lookAt__FPA4_fPC3VecPC3Vecs();
extern "C" void scaleM__14mDoMtx_stack_cFfff();
extern "C" void __ct__4cXyzFv();
extern "C" void __dt__26mDoExt_3DlineMatSortPacketFv();
extern "C" void mDoLib_setResTimgObj__FPC7ResTIMGP9_GXTexObjUlP10_GXTlutObj();
extern "C" void ShdwDraw__4cBgSFP13cBgS_ShdwDraw();
extern "C" void dKy_plight_near_pos__Fv();
extern "C" void dKy_GxFog_set__Fv();
extern "C" void __mi__4cXyzCFRC3Vec();
extern "C" void normalize__4cXyzFv();
extern "C" void isZero__4cXyzCFv();
extern "C" void __ct__13cBgS_ShdwDrawFv();
extern "C" void __dt__13cBgS_ShdwDrawFv();
extern "C" void Set__13cBgS_ShdwDrawFR4cXyzR4cXyz();
extern "C" void SetCallback__13cBgS_ShdwDrawFPFP13cBgS_ShdwDrawP10cBgD_Vtx_tiiiP8cM3dGPla_i();
extern "C" void cLib_chaseUC__FPUcUcUc();
extern "C" void calcViewFrustum__11J3DUClipperFv();
extern "C" void clip__11J3DUClipperCFPA4_CfP3VecP3Vec();
extern "C" void* __nw__FUl();
extern "C" void* __nwa__FUli();
extern "C" void __dl__FPv();
extern "C" void getGlbResource__10JKRArchiveFUlPCcP10JKRArchive();
extern "C" void clearAnmTransform__7J2DPaneFv();
extern "C" void draw__9J2DScreenFffPC14J2DGrafContext();
extern "C" void __ct__10J2DPictureFv();
extern "C" void reinitGX__6J3DSysFv();
extern "C" void drawFast__14J3DShapePacketFv();
extern "C" void loadPreDrawSetting__8J3DShapeCFv();
extern "C" void initialize__13J3DDrawBufferFv();
extern "C" void allocBuffer__13J3DDrawBufferFUl();
extern "C" void __dt__13J3DDrawBufferFv();
extern "C" void frameInit__13J3DDrawBufferFv();
extern "C" void entryImm__13J3DDrawBufferFP9J3DPacketUs();
extern "C" void draw__13J3DDrawBufferCFv();
extern "C" void PSMTXConcat();
extern "C" void PSMTXTrans();
extern "C" void C_MTXLightOrtho();
extern "C" void PSMTXMultVec();
extern "C" void C_MTXOrtho();
extern "C" void PSVECAdd();
extern "C" void PSVECScale();
extern "C" void PSVECSquareMag();
extern "C" void PSVECDotProduct();
extern "C" void GXSetVtxDesc();
extern "C" void GXClearVtxDesc();
extern "C" void GXSetVtxAttrFmt();
extern "C" void GXSetArray();
extern "C" void GXSetTexCoordGen2();
extern "C" void GXSetNumTexGens();
extern "C" void GXPixModeSync();
extern "C" void GXPeekZ();
extern "C" void GXBegin();
extern "C" void GXSetLineWidth();
extern "C" void GXSetPointSize();
extern "C" void GXSetCullMode();
extern "C" void GXSetTexCopySrc();
extern "C" void GXSetTexCopyDst();
extern "C" void GXCopyTex();
extern "C" void GXSetChanMatColor();
extern "C" void GXSetNumChans();
extern "C" void GXSetChanCtrl();
extern "C" void GXGetTexBufferSize();
extern "C" void GXInitTexObj();
extern "C" void GXInitTexObjLOD();
extern "C" void GXGetTexObjWidth();
extern "C" void GXGetTexObjHeight();
extern "C" void GXGetTexObjWrapS();
extern "C" void GXGetTexObjWrapT();
extern "C" void GXGetTexObjTlut();
extern "C" void GXLoadTexObj();
extern "C" void GXLoadTlut();
extern "C" void GXSetNumIndStages();
extern "C" void GXSetTevOp();
extern "C" void GXSetTevColorIn();
extern "C" void GXSetTevAlphaIn();
extern "C" void GXSetTevColorOp();
extern "C" void GXSetTevAlphaOp();
extern "C" void GXSetTevColor();
extern "C" void GXSetTevSwapModeTable();
extern "C" void GXSetAlphaCompare();
extern "C" void GXSetTevOrder();
extern "C" void GXSetNumTevStages();
extern "C" void GXSetFog();
extern "C" void GXSetBlendMode();
extern "C" void GXSetColorUpdate();
extern "C" void GXSetAlphaUpdate();
extern "C" void GXSetZMode();
extern "C" void GXSetZCompLoc();
extern "C" void GXSetDither();
extern "C" void GXCallDisplayList();
extern "C" void GXSetProjection();
extern "C" void GXLoadPosMtxImm();
extern "C" void GXSetCurrentMtx();
extern "C" void GXLoadTexMtxImm();
extern "C" void GXSetViewport();
extern "C" void GXSetScissor();
extern "C" void GXSetClipMode();
extern "C" void __destroy_arr();
extern "C" void __construct_array();
extern "C" void _savefpr_26();
extern "C" void _restfpr_26();
extern "C" void _savegpr_22();
extern "C" void _savegpr_23();
extern "C" void _savegpr_24();
extern "C" void _savegpr_25();
extern "C" void _savegpr_26();
extern "C" void _savegpr_27();
extern "C" void _savegpr_28();
extern "C" void _savegpr_29();
extern "C" void _restgpr_22();
extern "C" void _restgpr_23();
extern "C" void _restgpr_24();
extern "C" void _restgpr_25();
extern "C" void _restgpr_26();
extern "C" void _restgpr_27();
extern "C" void _restgpr_28();
extern "C" void _restgpr_29();
extern "C" void fmod();
extern "C" extern u8 g_mDoMtx_identity[48 + 24 /* padding */];
extern "C" extern void* __vt__26mDoExt_3DlineMatSortPacket[5];
extern "C" extern void* __vt__12dDlst_base_c[3];
extern "C" extern void* __vt__9J3DPacket[5];
extern "C" extern u8 now__14mDoMtx_stack_c[48];
extern "C" extern u8 mClipper__14mDoLib_clipper[92];
extern "C" extern u8 g_dComIfG_gameInfo[122384];
extern "C" extern u8 g_env_light[4880];
extern "C" extern u8 g_envHIO[68];
extern "C" extern u8 j3dSys[284];
extern "C" extern u8 sincosTable___5JMath[65536];
extern "C" extern u8 mBackColor__13mDoGph_gInf_c[4];
extern "C" extern u8 g_clearColor[4];
extern "C" extern u32 g_blackColor;
extern "C" extern u32 g_whiteColor;
extern "C" extern u32 __float_nan;
extern "C" extern u32 __float_max;
extern "C" extern f32 mSystemFar__14mDoLib_clipper;
extern "C" extern f32 mFovyRate__14mDoLib_clipper;
extern "C" extern f32 G_CM3D_F_ABS_MIN[1 + 1 /* padding */];
extern "C" extern u8 sOldVcdVatCmd__8J3DShape[4];

// 
// Declarations:
// 

/* 80051AC0-80051ADC 001C+00 s=0 e=3 z=0  None .text      setViewPort__14dDlst_window_cFffffff                         */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void dDlst_window_c::setViewPort(f32 param_0, f32 param_1, f32 param_2, f32 param_3, f32 param_4, f32 param_5) {
	nofralloc
#include "asm/d/d_drawlist/setViewPort__14dDlst_window_cFffffff.s"
}
#pragma pop


/* 80051ADC-80051AF0 0014+00 s=0 e=4 z=0  None .text      setScissor__14dDlst_window_cFffff                            */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void dDlst_window_c::setScissor(f32 param_0, f32 param_1, f32 param_2, f32 param_3) {
	nofralloc
#include "asm/d/d_drawlist/setScissor__14dDlst_window_cFffff.s"
}
#pragma pop


/* 80051AF0-80051CF0 0200+00 s=1 e=0 z=0  None .text      draw__13dDlst_2DTri_cFv                                      */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void dDlst_2DTri_c::draw() {
	nofralloc
#include "asm/d/d_drawlist/draw__13dDlst_2DTri_cFv.s"
}
#pragma pop


/* 80051CF0-80051E5C 016C+00 s=1 e=0 z=0  None .text      draw__14dDlst_2DQuad_cFv                                     */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void dDlst_2DQuad_c::draw() {
	nofralloc
#include "asm/d/d_drawlist/draw__14dDlst_2DQuad_cFv.s"
}
#pragma pop


/* 80051E5C-80051F98 013C+00 s=1 e=0 z=0  None .text      draw__15dDlst_2DPoint_cFv                                    */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void dDlst_2DPoint_c::draw() {
	nofralloc
#include "asm/d/d_drawlist/draw__15dDlst_2DPoint_cFv.s"
}
#pragma pop


/* ############################################################################################## */
/* 80450648-8045064C 0004+00 s=1 e=0 z=0  None .sdata     l_color$4033                                                 */
SECTION_SDATA static u8 l_color_4033[4] = {
	0xFF, 0xFF, 0xFF, 0xE0,
};

/* 80452008-8045200C 0004+00 s=4 e=0 z=0  None .sdata2    @4072                                                        */
SECTION_SDATA2 static u32 lit_4072 = 0x3F000000;

/* 8045200C-80452010 0004+00 s=1 e=0 z=0  None .sdata2    @4073                                                        */
SECTION_SDATA2 static u32 lit_4073 = 0x47000000;

/* 80452010-80452018 0004+04 s=10 e=0 z=0  None .sdata2    @4074                                                        */
SECTION_SDATA2 static u8 lit_4074[4 + 4 /* padding */] = {
	0x00, 0x00, 0x00, 0x00,
	/* padding */
	0x00, 0x00, 0x00, 0x00,
};

/* 80452018-80452020 0008+00 s=8 e=0 z=0  None .sdata2    @4076                                                        */
SECTION_SDATA2 static u8 lit_4076[8] = {
	0x43, 0x30, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
};

/* 80452020-80452028 0008+00 s=5 e=0 z=0  None .sdata2    @4079                                                        */
SECTION_SDATA2 static u8 lit_4079[8] = {
	0x43, 0x30, 0x00, 0x00, 0x80, 0x00, 0x00, 0x00,
};

/* 80051F98-80052354 03BC+00 s=1 e=0 z=0  None .text      draw__11dDlst_2DT_cFv                                        */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void dDlst_2DT_c::draw() {
	nofralloc
#include "asm/d/d_drawlist/draw__11dDlst_2DT_cFv.s"
}
#pragma pop


/* ############################################################################################## */
/* 80452028-8045202C 0004+00 s=10 e=0 z=0  None .sdata2    @4270                                                        */
SECTION_SDATA2 static u32 lit_4270 = 0x3F800000;

/* 80052354-80052B00 07AC+00 s=1 e=0 z=0  None .text      draw__12dDlst_2DT2_cFv                                       */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void dDlst_2DT2_c::draw() {
	nofralloc
#include "asm/d/d_drawlist/draw__12dDlst_2DT2_cFv.s"
}
#pragma pop


/* ############################################################################################## */
/* 803A87A0-803A87C0 000C+14 s=2 e=0 z=0  None .data      cNullVec__6Z2Calc                                            */
SECTION_DATA static u8 cNullVec__6Z2Calc[12 + 20 /* padding */] = {
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
	/* padding */
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
	0x00, 0x00, 0x00, 0x00,
};

/* 803A87C0-803A8800 003C+04 s=0 e=0 z=0  None .data      l_frontZMat                                                  */
SECTION_DATA u8 l_frontZMat[60 + 4 /* padding */] = {
	0x61, 0x40, 0x00, 0x00, 0x07, 0x10, 0x00, 0x00, 0x10, 0x3F, 0x00, 0x00, 0x00, 0x00, 0x10, 0x00,
	0x00, 0x10, 0x09, 0x00, 0x00, 0x00, 0x01, 0x61, 0x00, 0x00, 0x40, 0x10, 0x00, 0x00, 0x00, 0x00,
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
	/* padding */
	0x00, 0x00, 0x00, 0x00,
};

/* 803A8800-803A882C 002A+02 s=0 e=0 z=0  None .data      l_frontNoZSubMat                                             */
SECTION_DATA u8 l_frontNoZSubMat[42 + 2 /* padding */] = {
	0x61, 0x40, 0x00, 0x00, 0x06, 0x61, 0x41, 0x00, 0x09, 0x35, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
	/* padding */
	0x00, 0x00,
};

/* 803A882C-803A88A0 0060+14 s=1 e=0 z=0  None .data      l_shadowVolPos                                               */
SECTION_DATA static u8 l_shadowVolPos[96 + 20 /* padding */] = {
	0xBF, 0x80, 0x00, 0x00, 0xBF, 0x80, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xBF, 0x80, 0x00, 0x00,
	0xBF, 0x80, 0x00, 0x00, 0xC3, 0x96, 0x00, 0x00, 0xBF, 0x80, 0x00, 0x00, 0x3F, 0x80, 0x00, 0x00,
	0x00, 0x00, 0x00, 0x00, 0xBF, 0x80, 0x00, 0x00, 0x3F, 0x80, 0x00, 0x00, 0xC3, 0x96, 0x00, 0x00,
	0x3F, 0x80, 0x00, 0x00, 0xBF, 0x80, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x3F, 0x80, 0x00, 0x00,
	0xBF, 0x80, 0x00, 0x00, 0xC3, 0x96, 0x00, 0x00, 0x3F, 0x80, 0x00, 0x00, 0x3F, 0x80, 0x00, 0x00,
	0x00, 0x00, 0x00, 0x00, 0x3F, 0x80, 0x00, 0x00, 0x3F, 0x80, 0x00, 0x00, 0xC3, 0x96, 0x00, 0x00,
	/* padding */
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
	0x00, 0x00, 0x00, 0x00,
};

/* 803A88A0-803A88E0 003B+05 s=0 e=0 z=0  None .data      l_shadowVolDL                                                */
SECTION_DATA u8 l_shadowVolDL[59 + 5 /* padding */] = {
	0x80, 0x00, 0x18, 0x06, 0x02, 0x03, 0x07, 0x00, 0x04, 0x05, 0x01, 0x06, 0x04, 0x00, 0x02, 0x07,
	0x05, 0x04, 0x06, 0x03, 0x01, 0x05, 0x07, 0x02, 0x00, 0x01, 0x03, 0x00, 0x00, 0x00, 0x00, 0x00,
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
	/* padding */
	0x00, 0x00, 0x00, 0x00, 0x00,
};

/* 803A88E0-803A8940 005A+06 s=1 e=0 z=0  None .data      l_shadowProjMat                                              */
SECTION_DATA static u8 l_shadowProjMat[90 + 6 /* padding */] = {
	0x61, 0x28, 0x38, 0x03, 0xC0, 0x61, 0xC0, 0x08, 0xFF, 0xFF, 0x61, 0xC1, 0x08, 0xE6, 0x70, 0x61,
	0x43, 0x00, 0x00, 0x01, 0x61, 0x40, 0x00, 0x00, 0x07, 0x61, 0x41, 0x00, 0x04, 0xAD, 0x61, 0xF3,
	0x64, 0x00, 0x00, 0x10, 0x00, 0x00, 0x10, 0x3F, 0x00, 0x00, 0x00, 0x01, 0x10, 0x00, 0x00, 0x10,
	0x09, 0x00, 0x00, 0x00, 0x00, 0x61, 0x00, 0x00, 0x40, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
	/* padding */
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
};

/* 803A8940-803A89A0 005A+06 s=0 e=0 z=0  None .data      l_shadowVolMat                                               */
SECTION_DATA u8 l_shadowVolMat[90 + 6 /* padding */] = {
	0x61, 0x28, 0x38, 0x00, 0x00, 0x61, 0xC0, 0x08, 0xFF, 0xFC, 0x61, 0xC1, 0x08, 0xFF, 0x90, 0x61,
	0x43, 0x00, 0x00, 0x41, 0x61, 0x40, 0x00, 0x00, 0x0D, 0x61, 0x41, 0x00, 0x01, 0x35, 0x61, 0xF3,
	0x7F, 0x00, 0x00, 0x10, 0x00, 0x00, 0x10, 0x3F, 0x00, 0x00, 0x00, 0x00, 0x10, 0x00, 0x00, 0x10,
	0x09, 0x00, 0x00, 0x00, 0x01, 0x61, 0x00, 0x00, 0x80, 0x10, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
	/* padding */
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
};

/* 803A89A0-803A8A00 0055+0B s=1 e=0 z=0  None .data      l_clearMat                                                   */
SECTION_DATA static u8 l_clearMat[85 + 11 /* padding */] = {
	0x61, 0x28, 0x38, 0x00, 0x00, 0x61, 0xC0, 0x08, 0xFF, 0xFF, 0x61, 0xC1, 0x08, 0xFF, 0xA0, 0x61,
	0x40, 0x00, 0x00, 0x06, 0x61, 0x41, 0x00, 0x00, 0x14, 0x61, 0xF3, 0x7F, 0x00, 0x00, 0x10, 0x00,
	0x00, 0x10, 0x3F, 0x00, 0x00, 0x00, 0x00, 0x10, 0x00, 0x00, 0x10, 0x09, 0x00, 0x00, 0x00, 0x01,
	0x61, 0x00, 0x00, 0x00, 0x10, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
	0x00, 0x00, 0x00, 0x00, 0x00,
	/* padding */
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
};

/* 803A8A00-803A8A60 0055+0B s=1 e=0 z=0  None .data      l_frontMat                                                   */
SECTION_DATA static u8 l_frontMat[85 + 11 /* padding */] = {
	0x61, 0x28, 0x38, 0x00, 0x00, 0x61, 0xC0, 0x08, 0xFF, 0xFF, 0x61, 0xC1, 0x08, 0xFF, 0x90, 0x61,
	0x43, 0x00, 0x00, 0x41, 0x61, 0x40, 0x00, 0x00, 0x07, 0x61, 0x41, 0x00, 0x01, 0x15, 0x10, 0x00,
	0x00, 0x10, 0x3F, 0x00, 0x00, 0x00, 0x00, 0x10, 0x00, 0x00, 0x10, 0x09, 0x00, 0x00, 0x00, 0x01,
	0x61, 0x00, 0x00, 0x40, 0x10, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
	0x00, 0x00, 0x00, 0x00, 0x00,
	/* padding */
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
};

/* 803A8A60-803A8A9C 003C+00 s=1 e=0 z=0  None .data      l_backSubMat                                                 */
SECTION_DATA static u8 l_backSubMat[60] = {
	0x61, 0x41, 0x00, 0x09, 0x35, 0x10, 0x00, 0x00, 0x10, 0x3F, 0x00, 0x00, 0x00, 0x00, 0x10, 0x00,
	0x00, 0x10, 0x09, 0x00, 0x00, 0x00, 0x01, 0x61, 0x00, 0x00, 0x80, 0x10, 0x00, 0x00, 0x00, 0x00,
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
};

/* 803A8A9C-803A8B60 00A8+1C s=1 e=0 z=0  None .data      l_simpleShadowPos                                            */
SECTION_DATA static u8 l_simpleShadowPos[168 + 28 /* padding */] = {
	0x00, 0x00, 0x00, 0x00, 0xBF, 0x80, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x3F, 0x80, 0x00, 0x00, 0xBF, 0x80, 0x00, 0x00,
	0xBF, 0x80, 0x00, 0x00, 0x3F, 0x80, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xBF, 0x80, 0x00, 0x00,
	0xBF, 0x80, 0x00, 0x00, 0xBF, 0x80, 0x00, 0x00, 0xBF, 0x80, 0x00, 0x00, 0xBF, 0x80, 0x00, 0x00,
	0x00, 0x00, 0x00, 0x00, 0xBF, 0x80, 0x00, 0x00, 0xBF, 0x80, 0x00, 0x00, 0xBF, 0x80, 0x00, 0x00,
	0x3F, 0x80, 0x00, 0x00, 0xBF, 0x80, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x3F, 0x80, 0x00, 0x00,
	0x3F, 0x80, 0x00, 0x00, 0xBF, 0x80, 0x00, 0x00, 0x3F, 0x80, 0x00, 0x00, 0x3F, 0x80, 0x00, 0x00,
	0x00, 0x00, 0x00, 0x00, 0x3F, 0x80, 0x00, 0x00, 0xBF, 0x80, 0x00, 0x00, 0x3F, 0x80, 0x00, 0x00,
	0xBF, 0x80, 0x00, 0x00, 0x3F, 0x80, 0x00, 0x00, 0x3F, 0x80, 0x00, 0x00, 0xBF, 0x80, 0x00, 0x00,
	0x3F, 0x80, 0x00, 0x00, 0x3F, 0x80, 0x00, 0x00, 0x3F, 0x80, 0x00, 0x00, 0xBF, 0x80, 0x00, 0x00,
	0x3F, 0x80, 0x00, 0x00, 0x3F, 0x80, 0x00, 0x00,
	/* padding */
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
};

/* 803A8B60-803A8BC0 0058+08 s=1 e=0 z=0  None .data      l_shadowVolumeDL                                             */
SECTION_DATA static u8 l_shadowVolumeDL[88 + 8 /* padding */] = {
	0x98, 0x00, 0x05, 0x03, 0x09, 0x01, 0x07, 0x05, 0x98, 0x00, 0x05, 0x04, 0x06, 0x00, 0x08, 0x02,
	0x98, 0x00, 0x04, 0x04, 0x05, 0x06, 0x07, 0x98, 0x00, 0x04, 0x02, 0x03, 0x04, 0x05, 0x98, 0x00,
	0x04, 0x08, 0x09, 0x02, 0x03, 0x98, 0x00, 0x04, 0x06, 0x07, 0x08, 0x09, 0x98, 0x00, 0x03, 0x01,
	0x05, 0x03, 0x98, 0x00, 0x03, 0x00, 0x02, 0x04, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
	/* padding */
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
};

/* 803A8BC0-803A8C20 0055+0B s=1 e=0 z=0  None .data      l_shadowSealTexDL                                            */
SECTION_DATA static u8 l_shadowSealTexDL[85 + 11 /* padding */] = {
	0x61, 0x28, 0x38, 0x03, 0xC0, 0x61, 0x40, 0x00, 0x00, 0x06, 0x61, 0x41, 0x00, 0x06, 0x15, 0x10,
	0x00, 0x00, 0x10, 0x3F, 0x00, 0x00, 0x00, 0x01, 0x10, 0x00, 0x00, 0x10, 0x09, 0x00, 0x00, 0x00,
	0x00, 0x61, 0x00, 0x00, 0x40, 0x01, 0x80, 0x00, 0x04, 0x0A, 0x00, 0x00, 0x0B, 0x01, 0x00, 0x0C,
	0x01, 0x01, 0x0D, 0x00, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
	0x00, 0x00, 0x00, 0x00, 0x00,
	/* padding */
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
};

/* 803A8C20-803A8C80 0055+0B s=1 e=0 z=0  None .data      l_shadowSealTex2DL                                           */
SECTION_DATA static u8 l_shadowSealTex2DL[85 + 11 /* padding */] = {
	0x61, 0x28, 0x38, 0x03, 0xC0, 0x61, 0x40, 0x00, 0x00, 0x06, 0x61, 0x41, 0x00, 0x06, 0x15, 0x10,
	0x00, 0x00, 0x10, 0x3F, 0x00, 0x00, 0x00, 0x01, 0x10, 0x00, 0x00, 0x10, 0x09, 0x00, 0x00, 0x00,
	0x00, 0x61, 0x00, 0x00, 0x40, 0x01, 0x80, 0x00, 0x04, 0x0A, 0x00, 0x00, 0x0B, 0x02, 0x00, 0x0C,
	0x02, 0x01, 0x0D, 0x00, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
	0x00, 0x00, 0x00, 0x00, 0x00,
	/* padding */
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
};

/* 803A8C80-803A8D00 0069+17 s=1 e=0 z=0  None .data      l_shadowSealDL                                               */
SECTION_DATA static u8 l_shadowSealDL[105 + 23 /* padding */] = {
	0x10, 0x00, 0x00, 0x10, 0x0E, 0x00, 0x00, 0x05, 0x00, 0x10, 0x00, 0x00, 0x10, 0x10, 0x00, 0x00,
	0x05, 0x00, 0x61, 0x28, 0x38, 0x00, 0x00, 0x61, 0xC0, 0x08, 0xFF, 0xFF, 0x61, 0xC1, 0x08, 0xFF,
	0xB0, 0x61, 0x40, 0x00, 0x00, 0x06, 0x61, 0x41, 0x00, 0x06, 0xED, 0x10, 0x00, 0x00, 0x10, 0x3F,
	0x00, 0x00, 0x00, 0x00, 0x10, 0x00, 0x00, 0x10, 0x09, 0x00, 0x00, 0x00, 0x01, 0x61, 0x00, 0x00,
	0x40, 0x10, 0x80, 0x00, 0x04, 0x0A, 0x0B, 0x0C, 0x0D, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
	/* padding */
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
};

/* 803A8D00-803A8D7C 007B+01 s=1 e=0 z=0  None .data      l_matDL$5404                                                 */
SECTION_DATA static u8 l_matDL[123 + 1 /* padding */] = {
	0x10, 0x00, 0x00, 0x10, 0x0E, 0x00, 0x00, 0x04, 0x00, 0x10, 0x00, 0x00, 0x10, 0x10, 0x00, 0x00,
	0x04, 0x00, 0x61, 0x28, 0x38, 0x00, 0x00, 0x61, 0xC0, 0x08, 0xFF, 0xF2, 0x61, 0xC1, 0x08, 0xFF,
	0x90, 0x61, 0x43, 0x00, 0x00, 0x41, 0x61, 0xF3, 0x7F, 0x00, 0x00, 0x10, 0x00, 0x00, 0x10, 0x3F,
	0x00, 0x00, 0x00, 0x00, 0x10, 0x00, 0x00, 0x10, 0x09, 0x00, 0x00, 0x00, 0x01, 0x61, 0x00, 0x00,
	0x40, 0x10, 0x61, 0xEE, 0x00, 0x00, 0x00, 0x61, 0xEF, 0x00, 0x00, 0x00, 0x61, 0xF0, 0x00, 0x00,
	0x00, 0x61, 0xF1, 0x00, 0x00, 0x00, 0x61, 0xF2, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
	/* padding */
	0x00,
};

/* 803A8D7C-803A8D8C 0010+00 s=1 e=0 z=0  None .data      l_imageDrawColor$5405                                        */
SECTION_DATA static u8 l_imageDrawColor[16] = {
	0xFF, 0x00, 0x00, 0x00, 0x00, 0xFF, 0x00, 0x00, 0x00, 0x00, 0xFF, 0x00, 0x00, 0x00, 0x00, 0xFF,
};

/* 803A8D8C-803A8D9C 0010+00 s=1 e=0 z=0  None .data      l_tevColorChan$5438                                          */
SECTION_DATA static u8 l_tevColorChan[16] = {
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x02, 0x00, 0x00, 0x00, 0x03,
};

/* 803A8D9C-803A8DCC 0030+00 s=0 e=0 z=0  None .data      mtx_adj$5842                                                 */
SECTION_DATA u8 data_803A8D9C[48] = {
	0x3F, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x3F, 0x00, 0x00, 0x00,
	0x00, 0x00, 0x00, 0x00, 0xBF, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x3F, 0x00, 0x00, 0x00,
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x3F, 0x80, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
};

/* 803A8DCC-803A8DDC 0010+00 s=1 e=0 z=0  None .data      __vt__18dDlst_shadowPoly_c                                   */
SECTION_DATA static void* __vt__18dDlst_shadowPoly_c[4] = {
	(void*)NULL /* RTTI */,
	(void*)NULL,
	(void*)NULL,
	(void*)NULL,
};

/* 803A8DDC-803A8DEC 0010+00 s=2 e=0 z=0  None .data      __vt__22dDlst_shadowRealPoly_c                               */
SECTION_DATA static void* __vt__22dDlst_shadowRealPoly_c[4] = {
	(void*)NULL,
	(void*)NULL,
	(void*)getTri__22dDlst_shadowRealPoly_cFv,
	(void*)getTriMax__22dDlst_shadowRealPoly_cFv,
};

/* 803A8DEC-803A8DF8 000C+00 s=2 e=0 z=0  None .data      __vt__14ShdwDrawPoly_c                                       */
SECTION_DATA static void* __vt__14ShdwDrawPoly_c[3] = {
	(void*)NULL,
	(void*)NULL,
	(void*)__dt__14ShdwDrawPoly_cFv,
};

/* 803A8DF8-803A8E04 000C+00 s=0 e=2 z=0  None .data      __vt__18dDlst_effectLine_c                                   */
SECTION_DATA void* __vt__18dDlst_effectLine_c[3] = {
	(void*)NULL,
	(void*)NULL,
	(void*)draw__18dDlst_effectLine_cFv,
};

/* 803A8E04-803A8E14 0010+00 s=1 e=14 z=0  None .data      __vt__10J2DAnmBase                                           */
SECTION_DATA void* __vt__10J2DAnmBase[4] = {
	(void*)NULL,
	(void*)NULL,
	(void*)__dt__10J2DAnmBaseFv,
	(void*)searchUpdateMaterialID__10J2DAnmBaseFP9J2DScreen,
};

/* 803A8E14-803A8E20 000C+00 s=0 e=0 z=0  None .data      __vt__11dDlst_blo_c                                          */
SECTION_DATA void* __vt__11dDlst_blo_c[3] = {
	(void*)NULL,
	(void*)NULL,
	(void*)draw__11dDlst_blo_cFv,
};

/* 803A8E20-803A8E2C 000C+00 s=1 e=1 z=0  None .data      __vt__10dDlst_2D_c                                           */
SECTION_DATA void* __vt__10dDlst_2D_c[3] = {
	(void*)NULL,
	(void*)NULL,
	(void*)draw__10dDlst_2D_cFv,
};

/* 803A8E2C-803A8E38 000C+00 s=0 e=0 z=0  None .data      __vt__12dDlst_2DMt_c                                         */
SECTION_DATA void* __vt__12dDlst_2DMt_c[3] = {
	(void*)NULL,
	(void*)NULL,
	(void*)draw__12dDlst_2DMt_cFv,
};

/* 803A8E38-803A8E44 000C+00 s=0 e=0 z=0  None .data      __vt__11dDlst_2Dm_c                                          */
SECTION_DATA void* __vt__11dDlst_2Dm_c[3] = {
	(void*)NULL,
	(void*)NULL,
	(void*)draw__11dDlst_2Dm_cFv,
};

/* 803A8E44-803A8E5C 000C+0C s=0 e=0 z=0  None .data      __vt__11dDlst_2DM_c                                          */
SECTION_DATA void* __vt__11dDlst_2DM_c[3 + 3 /* padding */] = {
	(void*)NULL,
	(void*)NULL,
	(void*)draw__11dDlst_2DM_cFv,
	/* padding */
	NULL,
	NULL,
	NULL,
};

/* 803A8E5C-803A8E68 000C+00 s=1 e=0 z=0  None .data      __vt__12dDlst_2DT2_c                                         */
SECTION_DATA static void* __vt__12dDlst_2DT2_c[3] = {
	(void*)NULL,
	(void*)NULL,
	(void*)draw__12dDlst_2DT2_cFv,
};

/* 80456B68-80456B70 0004+04 s=1 e=0 z=0  None .sbss2     @4275                                                        */
SECTION_SBSS2 static u8 lit_4275[4 + 4 /* padding */];

/* 80052B00-80052B4C 004C+00 s=1 e=0 z=0  None .text      __ct__12dDlst_2DT2_cFv                                       */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm dDlst_2DT2_c::dDlst_2DT2_c() {
	nofralloc
#include "asm/d/d_drawlist/__ct__12dDlst_2DT2_cFv.s"
}
#pragma pop


/* ############################################################################################## */
/* 8045202C-80452030 0004+00 s=1 e=0 z=0  None .sdata2    @4284                                                        */
SECTION_SDATA2 static u32 lit_4284 = 0x000000FF;

/* 80052B4C-80052C58 010C+00 s=1 e=0 z=0  None .text      init__12dDlst_2DT2_cFP7ResTIMGffffUcUcUcff                   */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void dDlst_2DT2_c::init(ResTIMG* param_0, f32 param_1, f32 param_2, f32 param_3, f32 param_4, u8 param_5, u8 param_6, u8 param_7, f32 param_8, f32 param_9) {
	nofralloc
#include "asm/d/d_drawlist/init__12dDlst_2DT2_cFP7ResTIMGffffUcUcUcff.s"
}
#pragma pop


/* ############################################################################################## */
/* 80452030-80452034 0004+00 s=2 e=0 z=0  None .sdata2    @4360                                                        */
SECTION_SDATA2 static u32 lit_4360 = 0x43800000;

/* 80052C58-8005312C 04D4+00 s=1 e=0 z=0  None .text      draw__11dDlst_2DM_cFv                                        */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void dDlst_2DM_c::draw() {
	nofralloc
#include "asm/d/d_drawlist/draw__11dDlst_2DM_cFv.s"
}
#pragma pop


/* 8005312C-8005364C 0520+00 s=1 e=0 z=0  None .text      draw__11dDlst_2Dm_cFv                                        */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void dDlst_2Dm_c::draw() {
	nofralloc
#include "asm/d/d_drawlist/func_8005312C.s"
}
#pragma pop


/* 8005364C-800539DC 0390+00 s=1 e=0 z=0  None .text      draw__12dDlst_2DMt_cFv                                       */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void dDlst_2DMt_c::draw() {
	nofralloc
#include "asm/d/d_drawlist/draw__12dDlst_2DMt_cFv.s"
}
#pragma pop


/* 800539DC-80053A00 0024+00 s=0 e=1 z=0  None .text      getTexture__10J2DPictureCFUc                                 */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void J2DPicture::getTexture(u8 param_0) const {
	nofralloc
#include "asm/d/d_drawlist/getTexture__10J2DPictureCFUc.s"
}
#pragma pop


/* 80053A00-80053A9C 009C+00 s=0 e=1 z=0  None .text      __ct__10dDlst_2D_cFP7ResTIMGssssUc                           */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm dDlst_2D_c::dDlst_2D_c(ResTIMG* param_0, s16 param_1, s16 param_2, s16 param_3, s16 param_4, u8 param_5) {
	nofralloc
#include "asm/d/d_drawlist/__ct__10dDlst_2D_cFP7ResTIMGssssUc.s"
}
#pragma pop


/* 80053A9C-80053B64 00C8+00 s=1 e=0 z=0  None .text      draw__10dDlst_2D_cFv                                         */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void dDlst_2D_c::draw() {
	nofralloc
#include "asm/d/d_drawlist/draw__10dDlst_2D_cFv.s"
}
#pragma pop


/* 80053B64-80053BA0 003C+00 s=1 e=0 z=0  None .text      draw__11dDlst_blo_cFv                                        */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void dDlst_blo_c::draw() {
	nofralloc
#include "asm/d/d_drawlist/draw__11dDlst_blo_cFv.s"
}
#pragma pop


/* 80053BA0-80053BC0 0020+00 s=0 e=1 z=0  None .text      clearAnmTransform__9J2DScreenFv                              */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void J2DScreen::clearAnmTransform() {
	nofralloc
#include "asm/d/d_drawlist/clearAnmTransform__9J2DScreenFv.s"
}
#pragma pop


/* 80053BC0-80053C00 0040+00 s=0 e=7 z=0  None .text      calcMtx__7J2DPaneFv                                          */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void J2DPane::calcMtx() {
	nofralloc
#include "asm/d/d_drawlist/calcMtx__7J2DPaneFv.s"
}
#pragma pop


/* 80053C00-80053C3C 003C+00 s=0 e=8 z=0  None .text      makeMatrix__7J2DPaneFff                                      */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void J2DPane::makeMatrix(f32 param_0, f32 param_1) {
	nofralloc
#include "asm/d/d_drawlist/makeMatrix__7J2DPaneFff.s"
}
#pragma pop


/* 80053C3C-80053C44 0008+00 s=0 e=1 z=0  None .text      getTypeID__7J2DPaneCFv                                       */
s32 J2DPane::getTypeID() const {
	return 16;
}


/* 80053C44-80053C6C 0028+00 s=0 e=1 z=0  None .text      setWhite__10J2DPictureFQ28JUtility6TColor                    */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void J2DPicture::setWhite(JUtility::TColor param_0) {
	nofralloc
#include "asm/d/d_drawlist/setWhite__10J2DPictureFQ28JUtility6TColor.s"
}
#pragma pop


/* 80053C6C-80053C94 0028+00 s=0 e=1 z=0  None .text      setBlack__10J2DPictureFQ28JUtility6TColor                    */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void J2DPicture::setBlack(JUtility::TColor param_0) {
	nofralloc
#include "asm/d/d_drawlist/setBlack__10J2DPictureFQ28JUtility6TColor.s"
}
#pragma pop


/* 80053C94-80053CDC 0048+00 s=1 e=0 z=0  None .text      __dt__10J2DAnmBaseFv                                         */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm J2DAnmBase::~J2DAnmBase() {
	nofralloc
#include "asm/d/d_drawlist/__dt__10J2DAnmBaseFv.s"
}
#pragma pop


/* 80053CDC-80053CEC 0010+00 s=0 e=2 z=0  None .text      init__8cM_rnd_cFiii                                          */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void cM_rnd_c::init(int param_0, int param_1, int param_2) {
	nofralloc
#include "asm/d/d_drawlist/init__8cM_rnd_cFiii.s"
}
#pragma pop


/* ############################################################################################## */
/* 80452034-80452038 0004+00 s=1 e=0 z=0  None .sdata2    @4791                                                        */
SECTION_SDATA2 static u32 lit_4791 = 0x46ECE600;

/* 80452038-8045203C 0004+00 s=1 e=0 z=0  None .sdata2    @4792                                                        */
SECTION_SDATA2 static u32 lit_4792 = 0x46EC7A00;

/* 8045203C-80452040 0004+00 s=1 e=0 z=0  None .sdata2    @4793                                                        */
SECTION_SDATA2 static u32 lit_4793 = 0x46ECC600;

/* 80452040-80452048 0008+00 s=1 e=0 z=0  None .sdata2    @4794                                                        */
SECTION_SDATA2 static u8 lit_4794[8] = {
	0x3F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
};

/* 80053CEC-80053DE0 00F4+00 s=2 e=0 z=0  None .text      get__8cM_rnd_cFv                                             */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void cM_rnd_c::get() {
	nofralloc
#include "asm/d/d_drawlist/get__8cM_rnd_cFv.s"
}
#pragma pop


/* 80053DE0-80053E18 0038+00 s=1 e=0 z=0  None .text      getF__8cM_rnd_cFf                                            */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void cM_rnd_c::getF(f32 param_0) {
	nofralloc
#include "asm/d/d_drawlist/getF__8cM_rnd_cFf.s"
}
#pragma pop


/* ############################################################################################## */
/* 80452048-8045204C 0004+00 s=5 e=0 z=0  None .sdata2    @4806                                                        */
SECTION_SDATA2 static u32 lit_4806 = 0x40000000;

/* 80053E18-80053E60 0048+00 s=1 e=0 z=0  None .text      getFX__8cM_rnd_cFf                                           */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void cM_rnd_c::getFX(f32 param_0) {
	nofralloc
#include "asm/d/d_drawlist/getFX__8cM_rnd_cFf.s"
}
#pragma pop


/* 80053E60-80053E9C 003C+00 s=1 e=0 z=0  None .text      getValue__8cM_rnd_cFff                                       */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void cM_rnd_c::getValue(f32 param_0, f32 param_1) {
	nofralloc
#include "asm/d/d_drawlist/getValue__8cM_rnd_cFff.s"
}
#pragma pop


/* ############################################################################################## */
/* 8045204C-80452050 0004+00 s=1 e=0 z=0  None .sdata2    @4876                                                        */
SECTION_SDATA2 static u32 lit_4876 = 0x46FFFE00;

/* 80053E9C-800541F4 0358+00 s=1 e=0 z=0  None .text      draw__18dDlst_effectLine_cFv                                 */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void dDlst_effectLine_c::draw() {
	nofralloc
#include "asm/d/d_drawlist/draw__18dDlst_effectLine_cFv.s"
}
#pragma pop


/* 800541F4-80054288 0094+00 s=0 e=1 z=0  None .text      update__18dDlst_effectLine_cFR4cXyzR8_GXColorUsUsUsUsffff    */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void dDlst_effectLine_c::update(cXyz& param_0, _GXColor& param_1, u16 param_2, u16 param_3, u16 param_4, u16 param_5, f32 param_6, f32 param_7, f32 param_8, f32 param_9) {
	nofralloc
#include "asm/d/d_drawlist/update__18dDlst_effectLine_cFR4cXyzR8_GXColorUsUsUsUsffff.s"
}
#pragma pop


/* 80054288-800543B4 012C+00 s=1 e=0 z=0  None .text      set__18dDlst_shadowPoly_cFP10cBgD_Vtx_tUsUsUsP8cM3dGPla      */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void dDlst_shadowPoly_c::set(cBgD_Vtx_t* param_0, u16 param_1, u16 param_2, u16 param_3, cM3dGPla* param_4) {
	nofralloc
#include "asm/d/d_drawlist/set__18dDlst_shadowPoly_cFP10cBgD_Vtx_tUsUsUsP8cM3dGPla.s"
}
#pragma pop


/* 800543B4-80054478 00C4+00 s=1 e=0 z=0  None .text      draw__18dDlst_shadowPoly_cFv                                 */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void dDlst_shadowPoly_c::draw() {
	nofralloc
#include "asm/d/d_drawlist/draw__18dDlst_shadowPoly_cFv.s"
}
#pragma pop


/* 80054478-800544F0 0078+00 s=1 e=0 z=0  None .text      J3DDrawBuffer__create__FUl                                   */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm static void J3DDrawBuffer__create(u32 param_0) {
	nofralloc
#include "asm/d/d_drawlist/J3DDrawBuffer__create__FUl.s"
}
#pragma pop


/* 800544F0-80054500 0010+00 s=2 e=0 z=0  None .text      reset__18dDlst_shadowReal_cFv                                */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void dDlst_shadowReal_c::reset() {
	nofralloc
#include "asm/d/d_drawlist/reset__18dDlst_shadowReal_cFv.s"
}
#pragma pop


/* 80054500-800545D4 00D4+00 s=1 e=0 z=0  None .text      imageDraw__18dDlst_shadowReal_cFPA4_f                        */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void dDlst_shadowReal_c::imageDraw(f32 (* param_0)[4]) {
	nofralloc
#include "asm/d/d_drawlist/imageDraw__18dDlst_shadowReal_cFPA4_f.s"
}
#pragma pop


/* ############################################################################################## */
/* 8045064C-80450650 0004+00 s=1 e=0 z=0  None .sdata     l_color$5004                                                 */
SECTION_SDATA static u8 l_color_5004[4] = {
	0x00, 0x00, 0x00, 0x40,
};

/* 800545D4-80054688 00B4+00 s=1 e=0 z=0  None .text      draw__18dDlst_shadowReal_cFv                                 */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void dDlst_shadowReal_c::draw() {
	nofralloc
#include "asm/d/d_drawlist/draw__18dDlst_shadowReal_cFv.s"
}
#pragma pop


/* ############################################################################################## */
/* 80452050-80452054 0004+00 s=1 e=0 z=0  None .sdata2    @5061                                                        */
SECTION_SDATA2 static u32 lit_5061 = 0xBE4CCCCD;

/* 80452054-80452058 0004+00 s=1 e=0 z=0  None .sdata2    @5062                                                        */
SECTION_SDATA2 static u32 lit_5062 = 0xC2B40000;

/* 80054688-80054854 01CC+00 s=1 e=0 z=0  None .text      psdRealCallBack__FP13cBgS_ShdwDrawP10cBgD_Vtx_tiiiP8cM3dGPla */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm static void psdRealCallBack(cBgS_ShdwDraw* param_0, cBgD_Vtx_t* param_1, int param_2, int param_3, int param_4, cM3dGPla* param_5) {
	nofralloc
#include "asm/d/d_drawlist/psdRealCallBack__FP13cBgS_ShdwDrawP10cBgD_Vtx_tiiiP8cM3dGPla.s"
}
#pragma pop


/* ############################################################################################## */
/* 80452058-8045205C 0004+00 s=1 e=0 z=0  None .sdata2    @5127                                                        */
SECTION_SDATA2 static u32 lit_5127 = 0x3B03126F;

/* 8045205C-80452060 0004+00 s=1 e=0 z=0  None .sdata2    @5128                                                        */
SECTION_SDATA2 static u32 lit_5128 = 0x42F00000;

/* 80452060-80452064 0004+00 s=1 e=0 z=0  None .sdata2    @5129                                                        */
SECTION_SDATA2 static u32 lit_5129 = 0x3E19999A;

/* 80452064-80452068 0004+00 s=3 e=0 z=0  None .sdata2    @5130                                                        */
SECTION_SDATA2 static u32 lit_5130 = 0x461C4000;

/* 80054854-80054A6C 0218+00 s=1 e=0 z=0  None .text      realPolygonCheck__FP4cXyzffP4cXyzP18dDlst_shadowPoly_c       */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm static void realPolygonCheck(cXyz* param_0, f32 param_1, f32 param_2, cXyz* param_3, dDlst_shadowPoly_c* param_4) {
	nofralloc
#include "asm/d/d_drawlist/realPolygonCheck__FP4cXyzffP4cXyzP18dDlst_shadowPoly_c.s"
}
#pragma pop


/* 80054A6C-80054ACC 0060+00 s=1 e=0 z=0  None .text      __dt__14ShdwDrawPoly_cFv                                     */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm ShdwDrawPoly_c::~ShdwDrawPoly_c() {
	nofralloc
#include "asm/d/d_drawlist/__dt__14ShdwDrawPoly_cFv.s"
}
#pragma pop


/* ############################################################################################## */
/* 80452068-8045206C 0004+00 s=1 e=0 z=0  None .sdata2    @5155                                                        */
SECTION_SDATA2 static u32 lit_5155 = 0x41700000;

/* 8045206C-80452070 0004+00 s=1 e=0 z=0  None .sdata2    @5156                                                        */
SECTION_SDATA2 static u32 lit_5156 = 0x3F266666;

/* 80054ACC-80054BD0 0104+00 s=2 e=0 z=0  None .text      setkankyoShadow__FP12dKy_tevstr_cPf                          */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm static void setkankyoShadow(dKy_tevstr_c* param_0, f32* param_1) {
	nofralloc
#include "asm/d/d_drawlist/setkankyoShadow__FP12dKy_tevstr_cPf.s"
}
#pragma pop


/* ############################################################################################## */
/* 80452070-80452074 0004+00 s=1 e=0 z=0  None .sdata2    @5267                                                        */
SECTION_SDATA2 static u32 lit_5267 = 0x42480000;

/* 80452074-80452078 0004+00 s=1 e=0 z=0  None .sdata2    @5268                                                        */
SECTION_SDATA2 static u32 lit_5268 = 0x3F4CCCCD;

/* 80452078-80452080 0004+04 s=1 e=0 z=0  None .sdata2    @5269                                                        */
SECTION_SDATA2 static f32 lit_5269[1 + 1 /* padding */] = {
	255.0f,
	/* padding */
	0.0f,
};

/* 80452080-80452088 0008+00 s=1 e=0 z=0  None .sdata2    @5270                                                        */
SECTION_SDATA2 static u8 lit_5270[8] = {
	0x3F, 0xE0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
};

/* 80452088-80452090 0008+00 s=1 e=0 z=0  None .sdata2    @5271                                                        */
SECTION_SDATA2 static u8 lit_5271[8] = {
	0x40, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
};

/* 80452090-80452098 0008+00 s=1 e=0 z=0  None .sdata2    @5272                                                        */
SECTION_SDATA2 static u8 lit_5272[8] = {
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
};

/* 80452098-8045209C 0004+00 s=1 e=0 z=0  None .sdata2    @5273                                                        */
SECTION_SDATA2 static u32 lit_5273 = 0x3ECCCCCD;

/* 8045209C-804520A0 0004+00 s=1 e=0 z=0  None .sdata2    @5274                                                        */
SECTION_SDATA2 static u32 lit_5274 = 0xBF800000;

/* 804520A0-804520A4 0004+00 s=1 e=0 z=0  None .sdata2    @5275                                                        */
SECTION_SDATA2 static u32 lit_5275 = 0xBF000000;

/* 80054BD0-80055028 0458+00 s=1 e=0 z=0  None .text      setShadowRealMtx__18dDlst_shadowReal_cFP4cXyzP4cXyzfffP12dKy_tevstr_c */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void dDlst_shadowReal_c::setShadowRealMtx(cXyz* param_0, cXyz* param_1, f32 param_2, f32 param_3, f32 param_4, dKy_tevstr_c* param_5) {
	nofralloc
#include "asm/d/d_drawlist/setShadowRealMtx__18dDlst_shadowReal_cFP4cXyzP4cXyzfffP12dKy_tevstr_c.s"
}
#pragma pop


/* 80055028-800551D4 01AC+00 s=1 e=0 z=0  None .text      set__18dDlst_shadowReal_cFUlP8J3DModelP4cXyzffP12dKy_tevstr_cff */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void dDlst_shadowReal_c::set(u32 param_0, J3DModel* param_1, cXyz* param_2, f32 param_3, f32 param_4, dKy_tevstr_c* param_5, f32 param_6, f32 param_7) {
	nofralloc
#include "asm/d/d_drawlist/set__18dDlst_shadowReal_cFUlP8J3DModelP4cXyzffP12dKy_tevstr_cff.s"
}
#pragma pop


/* 800551D4-8005520C 0038+00 s=1 e=0 z=0  None .text      add__18dDlst_shadowReal_cFP8J3DModel                         */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void dDlst_shadowReal_c::add(J3DModel* param_0) {
	nofralloc
#include "asm/d/d_drawlist/add__18dDlst_shadowReal_cFP8J3DModel.s"
}
#pragma pop


/* ############################################################################################## */
/* 80450650-80450654 0004+00 s=1 e=0 z=0  None .sdata     l_color$5326                                                 */
SECTION_SDATA static u8 l_color_5326[4] = {
	0x00, 0x00, 0x00, 0x40,
};

/* 8005520C-800553EC 01E0+00 s=1 e=0 z=0  None .text      draw__20dDlst_shadowSimple_cFv                               */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void dDlst_shadowSimple_c::draw() {
	nofralloc
#include "asm/d/d_drawlist/draw__20dDlst_shadowSimple_cFv.s"
}
#pragma pop


/* ############################################################################################## */
/* 804520A4-804520A8 0004+00 s=1 e=0 z=0  None .sdata2    @5375                                                        */
SECTION_SDATA2 static u32 lit_5375 = 0xC37F0000;

/* 804520A8-804520AC 0004+00 s=1 e=0 z=0  None .sdata2    @5376                                                        */
SECTION_SDATA2 static u32 lit_5376 = 0x3A378034;

/* 804520AC-804520B0 0004+00 s=1 e=0 z=0  None .sdata2    @5377                                                        */
SECTION_SDATA2 static u32 lit_5377 = 0x3FB33333;

/* 804520B0-804520B4 0004+00 s=1 e=0 z=0  None .sdata2    @5378                                                        */
SECTION_SDATA2 static u32 lit_5378 = 0x41800000;

/* 800553EC-80055684 0298+00 s=1 e=0 z=0  None .text      set__20dDlst_shadowSimple_cFP4cXyzffP4cXyzsfP9_GXTexObj      */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void dDlst_shadowSimple_c::set(cXyz* param_0, f32 param_1, f32 param_2, cXyz* param_3, s16 param_4, f32 param_5, _GXTexObj* param_6) {
	nofralloc
#include "asm/d/d_drawlist/set__20dDlst_shadowSimple_cFP4cXyzffP4cXyzsfP9_GXTexObj.s"
}
#pragma pop


/* ############################################################################################## */
/* 80450654-80450658 0004+00 s=1 e=0 z=0  None .sdata     l_realImageSize$5383                                         */
SECTION_SDATA static u8 l_realImageSize[4] = {
	0x00, 0xC0, 0x00, 0x40,
};

/* 80055684-80055768 00E4+00 s=1 e=0 z=0  None .text      init__21dDlst_shadowControl_cFv                              */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void dDlst_shadowControl_c::init() {
	nofralloc
#include "asm/d/d_drawlist/init__21dDlst_shadowControl_cFv.s"
}
#pragma pop


/* 80055768-800557C8 0060+00 s=1 e=0 z=0  None .text      reset__21dDlst_shadowControl_cFv                             */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void dDlst_shadowControl_c::reset() {
	nofralloc
#include "asm/d/d_drawlist/reset__21dDlst_shadowControl_cFv.s"
}
#pragma pop


/* 800557C8-80055A14 024C+00 s=0 e=1 z=0  None .text      imageDraw__21dDlst_shadowControl_cFPA4_f                     */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void dDlst_shadowControl_c::imageDraw(f32 (* param_0)[4]) {
	nofralloc
#include "asm/d/d_drawlist/imageDraw__21dDlst_shadowControl_cFPA4_f.s"
}
#pragma pop


/* ############################################################################################## */
/* 80450658-8045065C 0004+00 s=1 e=0 z=0  None .sdata     clearColor$5435                                              */
SECTION_SDATA static u8 clearColor[4] = {
	0x00, 0x00, 0x00, 0x40,
};

/* 804520B4-804520B8 0004+00 s=1 e=0 z=0  None .sdata2    @5433                                                        */
SECTION_SDATA2 static u32 lit_5433 = 0x00000020;

/* 80055A14-80055C74 0260+00 s=0 e=1 z=0  None .text      draw__21dDlst_shadowControl_cFPA4_f                          */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void dDlst_shadowControl_c::draw(f32 (* param_0)[4]) {
	nofralloc
#include "asm/d/d_drawlist/draw__21dDlst_shadowControl_cFPA4_f.s"
}
#pragma pop


/* ############################################################################################## */
/* 804520B8-804520BC 0004+00 s=1 e=0 z=0  None .sdata2    @5551                                                        */
SECTION_SDATA2 static u32 lit_5551 = 0x3B449BA6;

/* 804520BC-804520C0 0004+00 s=1 e=0 z=0  None .sdata2    @5552                                                        */
SECTION_SDATA2 static u32 lit_5552 = 0xC47A0000;

/* 804520C0-804520C4 0004+00 s=1 e=0 z=0  None .sdata2    @5553                                                        */
SECTION_SDATA2 static u32 lit_5553 = 0x3A83126F;

/* 80055C74-80055F1C 02A8+00 s=0 e=1 z=1  None .text      setReal__21dDlst_shadowControl_cFUlScP8J3DModelP4cXyzffP12dKy_tevstr_c */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void dDlst_shadowControl_c::setReal(u32 param_0, s8 param_1, J3DModel* param_2, cXyz* param_3, f32 param_4, f32 param_5, dKy_tevstr_c* param_6) {
	nofralloc
#include "asm/d/d_drawlist/setReal__21dDlst_shadowControl_cFUlScP8J3DModelP4cXyzffP12dKy_tevstr_c.s"
}
#pragma pop


/* 80055F1C-80055F84 0068+00 s=0 e=1 z=45  None .text      addReal__21dDlst_shadowControl_cFUlP8J3DModel                */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void dDlst_shadowControl_c::addReal(u32 param_0, J3DModel* param_1) {
	nofralloc
#include "asm/d/d_drawlist/addReal__21dDlst_shadowControl_cFUlP8J3DModel.s"
}
#pragma pop


/* 80055F84-80055FE8 0064+00 s=0 e=1 z=10  None .text      setSimple__21dDlst_shadowControl_cFP4cXyzffP4cXyzsfP9_GXTexObj */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void dDlst_shadowControl_c::setSimple(cXyz* param_0, f32 param_1, f32 param_2, cXyz* param_3, s16 param_4, f32 param_5, _GXTexObj* param_6) {
	nofralloc
#include "asm/d/d_drawlist/setSimple__21dDlst_shadowControl_cFP4cXyzffP4cXyzsfP9_GXTexObj.s"
}
#pragma pop


/* ############################################################################################## */
/* 804248D0-804248F0 0020+00 s=1 e=6 z=173  None .bss       mSimpleTexObj__21dDlst_shadowControl_c                       */
u8 mSimpleTexObj__21dDlst_shadowControl_c[32];

/* 80055FE8-80056018 0030+00 s=0 e=1 z=0  None .text      setSimpleTex__21dDlst_shadowControl_cFPC7ResTIMG             */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void dDlst_shadowControl_c::setSimpleTex(ResTIMG const* param_0) {
	nofralloc
#include "asm/d/d_drawlist/setSimpleTex__21dDlst_shadowControl_cFPC7ResTIMG.s"
}
#pragma pop


/* 80056018-80056080 0068+00 s=0 e=3 z=9  None .text      newData__13dDlst_peekZ_cFssPUl                               */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void dDlst_peekZ_c::newData(s16 param_0, s16 param_1, u32* param_2) {
	nofralloc
#include "asm/d/d_drawlist/newData__13dDlst_peekZ_cFssPUl.s"
}
#pragma pop


/* 80056080-800560F0 0070+00 s=0 e=1 z=0  None .text      peekData__13dDlst_peekZ_cFv                                  */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void dDlst_peekZ_c::peekData() {
	nofralloc
#include "asm/d/d_drawlist/peekData__13dDlst_peekZ_cFv.s"
}
#pragma pop


/* 800560F0-800561C8 00D8+00 s=0 e=1 z=0  None .text      __ct__12dDlst_list_cFv                                       */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm dDlst_list_c::dDlst_list_c() {
	nofralloc
#include "asm/d/d_drawlist/__ct__12dDlst_list_cFv.s"
}
#pragma pop


/* 800561C8-800561F8 0030+00 s=1 e=0 z=0  None .text      __ct__26mDoExt_3DlineMatSortPacketFv                         */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm mDoExt_3DlineMatSortPacket::mDoExt_3DlineMatSortPacket() {
	nofralloc
#include "asm/d/d_drawlist/__ct__26mDoExt_3DlineMatSortPacketFv.s"
}
#pragma pop


/* 800561F8-80056270 0078+00 s=2 e=0 z=0  None .text      __dt__18dDlst_shadowReal_cFv                                 */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm dDlst_shadowReal_c::~dDlst_shadowReal_c() {
	nofralloc
#include "asm/d/d_drawlist/__dt__18dDlst_shadowReal_cFv.s"
}
#pragma pop


/* 80056270-800562D0 0060+00 s=2 e=0 z=0  None .text      __dt__17dDlst_shadowTri_cFv                                  */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm dDlst_shadowTri_c::~dDlst_shadowTri_c() {
	nofralloc
#include "asm/d/d_drawlist/__dt__17dDlst_shadowTri_cFv.s"
}
#pragma pop


/* 800562D0-80056344 0074+00 s=1 e=0 z=0  None .text      __ct__18dDlst_shadowReal_cFv                                 */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm dDlst_shadowReal_c::dDlst_shadowReal_c() {
	nofralloc
#include "asm/d/d_drawlist/__ct__18dDlst_shadowReal_cFv.s"
}
#pragma pop


/* 80056344-8005638C 0048+00 s=1 e=0 z=0  None .text      __ct__17dDlst_shadowTri_cFv                                  */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm dDlst_shadowTri_c::dDlst_shadowTri_c() {
	nofralloc
#include "asm/d/d_drawlist/__ct__17dDlst_shadowTri_cFv.s"
}
#pragma pop


/* 8005638C-80056390 0004+00 s=1 e=0 z=0  None .text      __ct__20dDlst_shadowSimple_cFv                               */
dDlst_shadowSimple_c::dDlst_shadowSimple_c() {
	/* empty function */
}


/* ############################################################################################## */
/* 8037A178-8037A1A4 002A+02 s=1 e=0 z=0  None .rodata    l_drawlistSize$5656                                          */
SECTION_RODATA static u8 const l_drawlistSize[42 + 2 /* padding */] = {
	0x00, 0x01, 0x00, 0x01, 0x00, 0x01, 0x00, 0x80, 0x00, 0x01, 0x00, 0x01, 0x00, 0x01, 0x00, 0x80,
	0x01, 0x00, 0x00, 0x01, 0x01, 0x00, 0x00, 0x01, 0x00, 0x20, 0x00, 0x10, 0x00, 0x10, 0x00, 0x20,
	0x00, 0x20, 0x01, 0x00, 0x00, 0x01, 0x00, 0x04, 0x00, 0x04,
	/* padding */
	0x00, 0x00,
};

/* 8037A1A4-8037A1B0 0009+03 s=1 e=0 z=0  None .rodata    l_nonSortId$5662                                             */
SECTION_RODATA static u8 const l_nonSortId[9 + 3 /* padding */] = {
	0x00, 0x01, 0x02, 0x04, 0x05, 0x06, 0x09, 0x12, 0x0D,
	/* padding */
	0x00, 0x00, 0x00,
};

/* 804520C4-804520CC 0006+02 s=1 e=0 z=0  None .sdata2    l_zSortId$5668                                               */
SECTION_SDATA2 static u8 l_zSortId[6 + 2 /* padding */] = {
	0x08, 0x0A, 0x0C, 0x0E, 0x10, 0x11,
	/* padding */
	0x00, 0x00,
};

/* 80056390-8005648C 00FC+00 s=0 e=1 z=0  None .text      init__12dDlst_list_cFv                                       */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void dDlst_list_c::init() {
	nofralloc
#include "asm/d/d_drawlist/init__12dDlst_list_cFv.s"
}
#pragma pop


/* 8005648C-80056538 00AC+00 s=0 e=1 z=0  None .text      __dt__12dDlst_list_cFv                                       */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm dDlst_list_c::~dDlst_list_c() {
	nofralloc
#include "asm/d/d_drawlist/__dt__12dDlst_list_cFv.s"
}
#pragma pop


/* 80056538-800565EC 00B4+00 s=0 e=1 z=0  None .text      reset__12dDlst_list_cFv                                      */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void dDlst_list_c::reset() {
	nofralloc
#include "asm/d/d_drawlist/reset__12dDlst_list_cFv.s"
}
#pragma pop


/* ############################################################################################## */
/* 804520CC-804520D0 0004+00 s=1 e=0 z=0  None .sdata2    @5747                                                        */
SECTION_SDATA2 static u32 lit_5747 = 0x461C3C00;

/* 800565EC-800566D4 00E8+00 s=0 e=2 z=0  None .text      entryZSortXluDrawList__12dDlst_list_cFP13J3DDrawBufferP9J3DPacketR4cXyz */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void dDlst_list_c::entryZSortXluDrawList(J3DDrawBuffer* param_0, J3DPacket* param_1, cXyz& param_2) {
	nofralloc
#include "asm/d/d_drawlist/entryZSortXluDrawList__12dDlst_list_cFP13J3DDrawBufferP9J3DPacketR4cXyz.s"
}
#pragma pop


/* 800566D4-80056710 003C+00 s=1 e=1 z=0  None .text      drawOpaDrawList__12dDlst_list_cFP13J3DDrawBuffer             */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void dDlst_list_c::drawOpaDrawList(J3DDrawBuffer* param_0) {
	nofralloc
#include "asm/d/d_drawlist/drawOpaDrawList__12dDlst_list_cFP13J3DDrawBuffer.s"
}
#pragma pop


/* 80056710-8005674C 003C+00 s=1 e=1 z=0  None .text      drawXluDrawList__12dDlst_list_cFP13J3DDrawBuffer             */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void dDlst_list_c::drawXluDrawList(J3DDrawBuffer* param_0) {
	nofralloc
#include "asm/d/d_drawlist/drawXluDrawList__12dDlst_list_cFP13J3DDrawBuffer.s"
}
#pragma pop


/* 8005674C-80056770 0024+00 s=0 e=1 z=0  None .text      drawOpaListItem3d__12dDlst_list_cFv                          */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void dDlst_list_c::drawOpaListItem3d() {
	nofralloc
#include "asm/d/d_drawlist/drawOpaListItem3d__12dDlst_list_cFv.s"
}
#pragma pop


/* 80056770-80056794 0024+00 s=0 e=1 z=0  None .text      drawXluListItem3d__12dDlst_list_cFv                          */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void dDlst_list_c::drawXluListItem3d() {
	nofralloc
#include "asm/d/d_drawlist/drawXluListItem3d__12dDlst_list_cFv.s"
}
#pragma pop


/* 80056794-800567C4 0030+00 s=2 e=35 z=6  None .text      set__12dDlst_list_cFRPP12dDlst_base_cRPP12dDlst_base_cP12dDlst_base_c */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void dDlst_list_c::set(dDlst_base_c**& param_0, dDlst_base_c**& param_1, dDlst_base_c* param_2) {
	nofralloc
#include "asm/d/d_drawlist/set__12dDlst_list_cFRPP12dDlst_base_cRPP12dDlst_base_cP12dDlst_base_c.s"
}
#pragma pop


/* 800567C4-8005681C 0058+00 s=0 e=1 z=0  None .text      draw__12dDlst_list_cFPP12dDlst_base_cPP12dDlst_base_c        */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void dDlst_list_c::draw(dDlst_base_c** param_0, dDlst_base_c** param_1) {
	nofralloc
#include "asm/d/d_drawlist/draw__12dDlst_list_cFPP12dDlst_base_cPP12dDlst_base_c.s"
}
#pragma pop


/* ############################################################################################## */
/* 8037A1B0-8037A1C0 000C+04 s=1 e=0 z=0  None .rodata    @stringBase0                                                 */
#pragma push
#pragma force_active on
#pragma section ".dead"
SECTION_DEAD char const* const stringBase_8037A1B0 = "wipe_00.bti";
/* @stringBase0 padding */
SECTION_DEAD static char const* const pad_8037A1BC = "\0\0\0";
#pragma pop

/* 804248F0-80424938 0048+00 s=3 e=0 z=0  None .bss       mWipeDlst__12dDlst_list_c                                    */
static u8 mWipeDlst__12dDlst_list_c[72];

/* 8045065C-80450660 0004+00 s=1 e=0 z=0  None .sdata     mWipeColor__12dDlst_list_c                                   */
SECTION_SDATA static u8 mWipeColor__12dDlst_list_c[4] = {
	0x00, 0x00, 0x00, 0x00,
};

/* 80450ED0-80450ED4 0004+00 s=2 e=1 z=0  None .sbss      None                                                         */
u8 data_80450ED0[4];

/* 80450ED4-80450ED8 0004+00 s=2 e=1 z=0  None .sbss      mWipeRate__12dDlst_list_c                                    */
f32 mWipeRate__12dDlst_list_c;

/* 80450ED8-80450EE0 0004+04 s=2 e=0 z=0  None .sbss      mWipeSpeed__12dDlst_list_c                                   */
static f32 mWipeSpeed__12dDlst_list_c[1 + 1 /* padding */];

/* 804520D0-804520D4 0004+00 s=1 e=0 z=0  None .sdata2    @5809                                                        */
SECTION_SDATA2 static u32 lit_5809 = 0x44180000;

/* 804520D4-804520D8 0004+00 s=1 e=0 z=0  None .sdata2    @5810                                                        */
SECTION_SDATA2 static u32 lit_5810 = 0x43E00000;

/* 804520D8-804520DC 0004+00 s=1 e=0 z=0  None .sdata2    @5811                                                        */
SECTION_SDATA2 static u32 lit_5811 = 0x401BE76D;

/* 8005681C-800568D8 00BC+00 s=1 e=0 z=0  None .text      wipeIn__12dDlst_list_cFfR8_GXColor                           */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void dDlst_list_c::wipeIn(f32 param_0, _GXColor& param_1) {
	nofralloc
#include "asm/d/d_drawlist/wipeIn__12dDlst_list_cFfR8_GXColor.s"
}
#pragma pop


/* 800568D8-80056900 0028+00 s=0 e=1 z=0  None .text      wipeIn__12dDlst_list_cFf                                     */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void dDlst_list_c::wipeIn(f32 param_0) {
	nofralloc
#include "asm/d/d_drawlist/wipeIn__12dDlst_list_cFf.s"
}
#pragma pop


/* ############################################################################################## */
/* 804520DC-804520E0 0004+00 s=1 e=0 z=0  None .sdata2    @5838                                                        */
SECTION_SDATA2 static u32 lit_5838 = 0x3F9BE76D;

/* 80056900-800569A0 00A0+00 s=0 e=1 z=0  None .text      calcWipe__12dDlst_list_cFv                                   */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void dDlst_list_c::calcWipe() {
	nofralloc
#include "asm/d/d_drawlist/calcWipe__12dDlst_list_cFv.s"
}
#pragma pop


/* 800569A0-800569A8 0008+00 s=1 e=0 z=0  None .text      getTri__22dDlst_shadowRealPoly_cFv                           */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void dDlst_shadowRealPoly_c::getTri() {
	nofralloc
#include "asm/d/d_drawlist/getTri__22dDlst_shadowRealPoly_cFv.s"
}
#pragma pop


/* 800569A8-800569B0 0008+00 s=1 e=0 z=0  None .text      getTriMax__22dDlst_shadowRealPoly_cFv                        */
s32 dDlst_shadowRealPoly_c::getTriMax() {
	return 256;
}


/* 800569B0-800569B4 0004+00 s=1 e=7 z=0  None .text      searchUpdateMaterialID__10J2DAnmBaseFP9J2DScreen             */
void J2DAnmBase::searchUpdateMaterialID(J2DScreen* param_0) {
	/* empty function */
}


/* 800569B4-800569DC 0028+00 s=0 e=1 z=0  None .text      __sinit_d_drawlist_cpp                                       */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
extern "C" asm void __sinit_d_drawlist_cpp() {
	nofralloc
#include "asm/d/d_drawlist/__sinit_d_drawlist_cpp.s"
}
#pragma pop


/* ############################################################################################## */
/* 803A8E68-803A8E74 000C+00 s=0 e=0 z=0  None .data      __vt__11dDlst_2DT_c                                          */
SECTION_DATA void* __vt__11dDlst_2DT_c[3] = {
	(void*)NULL,
	(void*)NULL,
	(void*)draw__11dDlst_2DT_cFv,
};

/* 803A8E74-803A8E80 000C+00 s=0 e=0 z=0  None .data      __vt__15dDlst_2DPoint_c                                      */
SECTION_DATA void* __vt__15dDlst_2DPoint_c[3] = {
	(void*)NULL,
	(void*)NULL,
	(void*)draw__15dDlst_2DPoint_cFv,
};

/* 803A8E80-803A8E8C 000C+00 s=0 e=0 z=0  None .data      __vt__14dDlst_2DQuad_c                                       */
SECTION_DATA void* __vt__14dDlst_2DQuad_c[3] = {
	(void*)NULL,
	(void*)NULL,
	(void*)draw__14dDlst_2DQuad_cFv,
};

/* 803A8E8C-803A8E98 000C+00 s=0 e=0 z=0  None .data      __vt__13dDlst_2DTri_c                                        */
SECTION_DATA void* __vt__13dDlst_2DTri_c[3] = {
	(void*)NULL,
	(void*)NULL,
	(void*)draw__13dDlst_2DTri_cFv,
};

/* 80450EE0-80450EE8 0008+00 s=0 e=1 z=0  None .sbss      None                                                         */
u8 data_80450EE0[8];

