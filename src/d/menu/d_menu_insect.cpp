// 
// Generated By: dol2asm
// Translation Unit: d/menu/d_menu_insect
// 

#include "dol2asm.h"
#include "dolphin/types.h"
#include "d/menu/d_menu_insect.h"

// 
// Types:
// 

struct CSTControl {
};

struct JKRExpHeap {
};

struct STControl {
	/* 8003219C */ void checkTrigger();
	/* 8003242C */ void checkLeftTrigger();
	/* 800324A8 */ void checkRightTrigger();
	/* 80032524 */ void checkUpTrigger();
	/* 800325A0 */ void checkDownTrigger();
};

struct dMenu_Insect_c {
	/* 801D8114 */ dMenu_Insect_c(JKRExpHeap*, STControl*, CSTControl*, u8);
	/* 801D82F4 */ ~dMenu_Insect_c();
	/* 801D8658 */ void _create();
	/* 801D86C8 */ void _move();
	/* 801D8760 */ void _draw();
	/* 801D88EC */ void isSync();
	/* 801D8914 */ void init();
	/* 801D894C */ void _open();
	/* 801D8B2C */ void _close();
	/* 801D8C68 */ void wait_init();
	/* 801D8CCC */ void wait_move();
	/* 801D8E00 */ void explain_open_init();
	/* 801D91E4 */ void explain_open_move();
	/* 801D9264 */ void explain_move_init();
	/* 801D9268 */ void explain_move_move();
	/* 801D9290 */ void select_move_init();
	/* 801D92DC */ void select_move_move();
	/* 801D9504 */ void explain_close_init();
	/* 801D95AC */ void explain_close_move();
	/* 801D9644 */ void screenSetBase();
	/* 801D98F0 */ void screenSetExplain();
	/* 801D9BD0 */ void screenSetDoIcon();
	/* 801D9D4C */ void getGetInsectNum();
	/* 801D9DCC */ void getInsectItemID(int, int);
	/* 801D9DE4 */ void isGetInsect(int, int);
	/* 801D9E20 */ void isGiveInsect(int, int);
	/* 801D9ED4 */ void isGiveInsect(u8);
	/* 801D9E7C */ void isCatchInsect(u8);
	/* 801D9F3C */ void isCatchNotGiveInsect(u8);
	/* 801D9F8C */ void cursorMove();
	/* 801DA1EC */ void setCursorPos();
	/* 801DA2FC */ void dpdMove();
	/* 801DA304 */ void setAButtonString(u16);
	/* 801DA3B4 */ void setBButtonString(u16);
	/* 801DA464 */ void setHIO(bool);
	/* 801DA630 */ void draw();
};

struct JKRHeap {
	/* 802CE4D4 */ void alloc(u32, int);
	/* 802CE548 */ void free(void*);
};

struct mDoDvdThd_mountArchive_c {
	/* 80015E14 */ void create(char const*, u8, JKRHeap*);
};

struct dSv_player_get_item_c {
	/* 80033EC8 */ void isFirstBit(u8) const;
};

struct dSv_event_c {
	/* 800349BC */ void isEventBit(u16) const;
};

struct JKRArchive {
};

struct J2DPane {
};

struct dSelect_cursor_c {
	/* 80194220 */ dSelect_cursor_c(u8, f32, JKRArchive*);
	/* 801950F4 */ void setPos(f32, f32, J2DPane*, bool);
	/* 801951B0 */ void setParam(f32, f32, f32, f32, f32);
	/* 801951C8 */ void setScale(f32);
	/* 801952A0 */ void setAlphaRate(f32);
};

struct JMSMesgEntry_c {
};

struct ResTIMG {
};

struct J2DPicture {
	/* 802FC708 */ J2DPicture(ResTIMG const*);
};

struct JUTFont {
};

struct dMeter2Info_c {
	/* 8021C250 */ void getString(u32, char*, JMSMesgEntry_c*);
	/* 8021C544 */ void getStringKanji(u32, char*, JMSMesgEntry_c*);
	/* 8021C7FC */ void getStringLength(JUTFont*, f32, f32, char*);
	/* 8021CF08 */ void readItemTexture(u8, void*, J2DPicture*, void*, J2DPicture*, void*, J2DPicture*, void*, J2DPicture*, int);
};

struct dMsgScrn3Select_c {
	/* 802390B4 */ dMsgScrn3Select_c();
	/* 80239C64 */ void isSelect();
	/* 80239C78 */ void setString(char*, char*, char*);
	/* 80239D08 */ void setRubyString(char*, char*, char*);
	/* 80239D98 */ void translate(f32, f32);
	/* 80239DD4 */ void draw(f32, f32);
	/* 8023A094 */ void selAnimeInit(u8, u8, u8, f32, u8);
	/* 8023A398 */ void selAnimeMove(u8, u8, bool);
	/* 8023A680 */ void selAnimeEnd();
	/* 8023A934 */ void getTextBoxWidth();
	/* 8023A94C */ void getFontSize();
	/* 8023A97C */ void getCharSpace();
};

struct dMsgString_c {
	/* 80249C20 */ dMsgString_c();
	/* 80249D28 */ ~dMsgString_c();
};

struct J2DGrafContext {
};

struct J2DScreen {
	/* 802F8498 */ J2DScreen();
	/* 802F8648 */ void setPriority(char const*, u32, JKRArchive*);
	/* 802F8ED4 */ void draw(f32, f32, J2DGrafContext const*);
};

struct CPaneMgr {
	/* 80253984 */ CPaneMgr(J2DScreen*, u64, u8, JKRExpHeap*);
	/* 802545B0 */ void paneTrans(f32, f32);
	/* 80254EBC */ void getGlobalVtxCenter(J2DPane*, bool, s16);
};

struct CPaneMgrAlpha {
	/* 802555C8 */ void show();
	/* 80255608 */ void hide();
	/* 802557D0 */ void setAlphaRate(f32);
	/* 80255828 */ void getAlphaRate();
	/* 80255878 */ void alphaAnime(s16, u8, u8, u8);
};

struct JAISoundID {
};

struct Vec {
};

struct Z2SeMgr {
	/* 802AB984 */ void seStart(JAISoundID, Vec const*, u32, s8, f32, f32, f32, f32, u8);
};

struct J2DTextBox {
	/* 80300658 */ void getStringPtr() const;
	/* 8030074C */ void setString(s16, char const*, ...);
};

// 
// Forward References:
// 


extern "C" void __ct__14dMenu_Insect_cFP10JKRExpHeapP9STControlP10CSTControlUc(); // 1
extern "C" void __dt__14dMenu_Insect_cFv(); // 1
extern "C" void _create__14dMenu_Insect_cFv(); // 1
extern "C" void _move__14dMenu_Insect_cFv(); // 1
extern "C" void _draw__14dMenu_Insect_cFv(); // 1
extern "C" void isSync__14dMenu_Insect_cFv(); // 1
extern "C" void init__14dMenu_Insect_cFv(); // 1
extern "C" void _open__14dMenu_Insect_cFv(); // 1
extern "C" void _close__14dMenu_Insect_cFv(); // 1
extern "C" void wait_init__14dMenu_Insect_cFv(); // 1
extern "C" void wait_move__14dMenu_Insect_cFv(); // 1
extern "C" void explain_open_init__14dMenu_Insect_cFv(); // 1
extern "C" void explain_open_move__14dMenu_Insect_cFv(); // 1
extern "C" void explain_move_init__14dMenu_Insect_cFv(); // 1
extern "C" void explain_move_move__14dMenu_Insect_cFv(); // 1
extern "C" void select_move_init__14dMenu_Insect_cFv(); // 1
extern "C" void select_move_move__14dMenu_Insect_cFv(); // 1
extern "C" void explain_close_init__14dMenu_Insect_cFv(); // 1
extern "C" void explain_close_move__14dMenu_Insect_cFv(); // 1
extern "C" void screenSetBase__14dMenu_Insect_cFv(); // 1
extern "C" void screenSetExplain__14dMenu_Insect_cFv(); // 1
extern "C" void screenSetDoIcon__14dMenu_Insect_cFv(); // 1
extern "C" void getGetInsectNum__14dMenu_Insect_cFv(); // 1
extern "C" void getInsectItemID__14dMenu_Insect_cFii(); // 1
extern "C" void isGetInsect__14dMenu_Insect_cFii(); // 1
extern "C" void isGiveInsect__14dMenu_Insect_cFii(); // 1
extern "C" void isCatchInsect__14dMenu_Insect_cFUc(); // 1
extern "C" void isGiveInsect__14dMenu_Insect_cFUc(); // 1
extern "C" void isCatchNotGiveInsect__14dMenu_Insect_cFUc(); // 1
extern "C" void cursorMove__14dMenu_Insect_cFv(); // 1
extern "C" void setCursorPos__14dMenu_Insect_cFv(); // 1
extern "C" void dpdMove__14dMenu_Insect_cFv(); // 1
extern "C" void setAButtonString__14dMenu_Insect_cFUs(); // 1
extern "C" void setBButtonString__14dMenu_Insect_cFUs(); // 1
extern "C" void setHIO__14dMenu_Insect_cFb(); // 1
extern "C" void draw__14dMenu_Insect_cFv(); // 1
extern "C" void __sinit_d_menu_insect_cpp(); // 1
extern "C" extern char const* const d_menu_d_menu_insect__stringBase0;
extern "C" extern void* d_menu_d_menu_insect__lit_3797[3];
extern "C" extern void* d_menu_d_menu_insect__lit_3798[3];
extern "C" extern void* d_menu_d_menu_insect__lit_3799[3];
extern "C" extern void* d_menu_d_menu_insect__lit_3800[3];
extern "C" extern void* d_menu_d_menu_insect__lit_3801[3];
extern "C" extern void* d_menu_d_menu_insect__lit_3802[3];
extern "C" extern void* d_menu_d_menu_insect__lit_3803[3];
extern "C" extern void* d_menu_d_menu_insect__lit_3804[3];
extern "C" extern void* d_menu_d_menu_insect__lit_3805[3];
extern "C" extern void* d_menu_d_menu_insect__lit_3806[3];

// 
// External References:
// 

void mDoExt_setCurrentHeap(JKRHeap*); // 2
void mDoExt_getMesgFont(); // 2
void mDoExt_getSubFont(); // 2
void dMeter2Info_set2DVibration(); // 2
void dPaneClass_showNullPane(J2DScreen*); // 2
void* operator new(u32); // 2
void operator delete(void*); // 2

extern "C" void mDoExt_setCurrentHeap__FP7JKRHeap(); // 1
extern "C" void mDoExt_getMesgFont__Fv(); // 1
extern "C" void mDoExt_getSubFont__Fv(); // 1
extern "C" void create__24mDoDvdThd_mountArchive_cFPCcUcP7JKRHeap(); // 1
extern "C" void checkTrigger__9STControlFv(); // 1
extern "C" void checkLeftTrigger__9STControlFv(); // 1
extern "C" void checkRightTrigger__9STControlFv(); // 1
extern "C" void checkUpTrigger__9STControlFv(); // 1
extern "C" void checkDownTrigger__9STControlFv(); // 1
extern "C" void isFirstBit__21dSv_player_get_item_cCFUc(); // 1
extern "C" void isEventBit__11dSv_event_cCFUs(); // 1
extern "C" void __ct__16dSelect_cursor_cFUcfP10JKRArchive(); // 1
extern "C" void setPos__16dSelect_cursor_cFffP7J2DPaneb(); // 1
extern "C" void setParam__16dSelect_cursor_cFfffff(); // 1
extern "C" void setScale__16dSelect_cursor_cFf(); // 1
extern "C" void setAlphaRate__16dSelect_cursor_cFf(); // 1
extern "C" void getString__13dMeter2Info_cFUlPcP14JMSMesgEntry_c(); // 1
extern "C" void getStringKanji__13dMeter2Info_cFUlPcP14JMSMesgEntry_c(); // 1
extern "C" void getStringLength__13dMeter2Info_cFP7JUTFontffPc(); // 1
extern "C" void readItemTexture__13dMeter2Info_cFUcPvP10J2DPicturePvP10J2DPicturePvP10J2DPicturePvP10J2DPicturei(); // 1
extern "C" void dMeter2Info_set2DVibration__Fv(); // 1
extern "C" void __ct__17dMsgScrn3Select_cFv(); // 1
extern "C" void isSelect__17dMsgScrn3Select_cFv(); // 1
extern "C" void setString__17dMsgScrn3Select_cFPcPcPc(); // 1
extern "C" void setRubyString__17dMsgScrn3Select_cFPcPcPc(); // 1
extern "C" void translate__17dMsgScrn3Select_cFff(); // 1
extern "C" void draw__17dMsgScrn3Select_cFff(); // 1
extern "C" void selAnimeInit__17dMsgScrn3Select_cFUcUcUcfUc(); // 1
extern "C" void selAnimeMove__17dMsgScrn3Select_cFUcUcb(); // 1
extern "C" void selAnimeEnd__17dMsgScrn3Select_cFv(); // 1
extern "C" void getTextBoxWidth__17dMsgScrn3Select_cFv(); // 1
extern "C" void getFontSize__17dMsgScrn3Select_cFv(); // 1
extern "C" void getCharSpace__17dMsgScrn3Select_cFv(); // 1
extern "C" void __ct__12dMsgString_cFv(); // 1
extern "C" void __dt__12dMsgString_cFv(); // 1
extern "C" void __ct__8CPaneMgrFP9J2DScreenUxUcP10JKRExpHeap(); // 1
extern "C" void paneTrans__8CPaneMgrFff(); // 1
extern "C" void getGlobalVtxCenter__8CPaneMgrFP7J2DPanebs(); // 1
extern "C" void dPaneClass_showNullPane__FP9J2DScreen(); // 1
extern "C" void show__13CPaneMgrAlphaFv(); // 1
extern "C" void hide__13CPaneMgrAlphaFv(); // 1
extern "C" void setAlphaRate__13CPaneMgrAlphaFf(); // 1
extern "C" void getAlphaRate__13CPaneMgrAlphaFv(); // 1
extern "C" void alphaAnime__13CPaneMgrAlphaFsUcUcUc(); // 1
extern "C" void seStart__7Z2SeMgrF10JAISoundIDPC3VecUlScffffUc(); // 1
extern "C" void alloc__7JKRHeapFUli(); // 1
extern "C" void free__7JKRHeapFPv(); // 1
extern "C" void* __nw__FUl(); // 1
extern "C" void __dl__FPv(); // 1
extern "C" void __ct__9J2DScreenFv(); // 1
extern "C" void setPriority__9J2DScreenFPCcUlP10JKRArchive(); // 1
extern "C" void draw__9J2DScreenFffPC14J2DGrafContext(); // 1
extern "C" void __ct__10J2DPictureFPC7ResTIMG(); // 1
extern "C" void getStringPtr__10J2DTextBoxCFv(); // 1
extern "C" void setString__10J2DTextBoxFsPCce(); // 1
extern "C" void __ptmf_scall(); // 1
extern "C" void _savegpr_24(); // 1
extern "C" void _savegpr_26(); // 1
extern "C" void _savegpr_27(); // 1
extern "C" void _savegpr_28(); // 1
extern "C" void _savegpr_29(); // 1
extern "C" void _restgpr_24(); // 1
extern "C" void _restgpr_26(); // 1
extern "C" void _restgpr_27(); // 1
extern "C" void _restgpr_28(); // 1
extern "C" void _restgpr_29(); // 1
extern "C" void snprintf(); // 1
extern "C" void strcat(); // 1
extern "C" void strcpy(); // 1
extern "C" extern void* __vt__12dDlst_base_c[3];
extern "C" extern u8 saveBitLabels__16dSv_event_flag_c[1644 + 4 /* padding */];
extern "C" extern u8 m_cpadInfo__8mDoCPd_c[256];
extern "C" extern u8 g_dComIfG_gameInfo[122384];
extern "C" extern u8 g_drawHIO[3880];
extern "C" extern u8 g_meter2_info[248];
extern "C" extern u8 mFader__13mDoGph_gInf_c[4];
extern "C" extern u8 mAudioMgrPtr__10Z2AudioMgr[4 + 4 /* padding */];

// 
// Declarations:
// 

/* ############################################################################################## */
/* 80396690-80396750 00C0+00 rc=1 efc=0 rfr=False None .rodata    insect_tag$4249                                              */
SECTION_RODATA static u8 const data_80396690[192] = {
	0x00, 0x00, 0x61, 0x72, 0x69, 0x5F, 0x6F, 0x73, 0x00, 0x00, 0x61, 0x72, 0x69, 0x5F, 0x6D, 0x73,
	0x00, 0x00, 0x6B, 0x61, 0x67, 0x5F, 0x6F, 0x73, 0x00, 0x00, 0x6B, 0x61, 0x67, 0x5F, 0x6D, 0x73,
	0x00, 0x00, 0x6B, 0x61, 0x62, 0x5F, 0x6F, 0x73, 0x00, 0x00, 0x6B, 0x61, 0x62, 0x5F, 0x6D, 0x73,
	0x00, 0x00, 0x6B, 0x61, 0x6D, 0x5F, 0x6F, 0x73, 0x00, 0x6B, 0x61, 0x6D, 0x5F, 0x6D, 0x65, 0x73,
	0x00, 0x6B, 0x75, 0x77, 0x61, 0x5F, 0x6F, 0x73, 0x6B, 0x75, 0x77, 0x61, 0x5F, 0x6D, 0x65, 0x73,
	0x00, 0x00, 0x64, 0x61, 0x6E, 0x5F, 0x6F, 0x73, 0x00, 0x64, 0x61, 0x6E, 0x5F, 0x6D, 0x65, 0x73,
	0x00, 0x00, 0x63, 0x68, 0x6F, 0x5F, 0x6F, 0x73, 0x00, 0x00, 0x63, 0x68, 0x6F, 0x5F, 0x6D, 0x73,
	0x00, 0x74, 0x65, 0x6E, 0x74, 0x5F, 0x6F, 0x73, 0x74, 0x65, 0x6E, 0x74, 0x5F, 0x6D, 0x65, 0x73,
	0x00, 0x6B, 0x61, 0x74, 0x61, 0x5F, 0x6F, 0x73, 0x6B, 0x61, 0x74, 0x61, 0x5F, 0x6D, 0x65, 0x73,
	0x00, 0x6E, 0x61, 0x6E, 0x61, 0x5F, 0x6F, 0x73, 0x6E, 0x61, 0x6E, 0x61, 0x5F, 0x6D, 0x65, 0x73,
	0x00, 0x00, 0x62, 0x61, 0x74, 0x5F, 0x6F, 0x73, 0x00, 0x62, 0x61, 0x74, 0x5F, 0x6D, 0x65, 0x73,
	0x00, 0x74, 0x6F, 0x6E, 0x62, 0x5F, 0x6F, 0x73, 0x74, 0x6F, 0x6E, 0x62, 0x5F, 0x6D, 0x65, 0x73,
};

/* 80396750-80396810 00C0+00 rc=1 efc=0 rfr=False None .rodata    ageha_tag$4250                                               */
SECTION_RODATA static u8 const data_80396750[192] = {
	0x00, 0x61, 0x67, 0x65, 0x68, 0x61, 0x30, 0x30, 0x00, 0x61, 0x67, 0x65, 0x68, 0x61, 0x30, 0x31,
	0x00, 0x61, 0x67, 0x65, 0x68, 0x61, 0x30, 0x32, 0x00, 0x61, 0x67, 0x65, 0x68, 0x61, 0x30, 0x33,
	0x00, 0x61, 0x67, 0x65, 0x68, 0x61, 0x30, 0x34, 0x00, 0x61, 0x67, 0x65, 0x68, 0x61, 0x30, 0x35,
	0x00, 0x61, 0x67, 0x65, 0x68, 0x61, 0x30, 0x36, 0x00, 0x61, 0x67, 0x65, 0x68, 0x61, 0x30, 0x37,
	0x00, 0x61, 0x67, 0x65, 0x68, 0x61, 0x30, 0x38, 0x00, 0x61, 0x67, 0x65, 0x68, 0x61, 0x30, 0x39,
	0x00, 0x61, 0x67, 0x65, 0x68, 0x61, 0x31, 0x30, 0x00, 0x61, 0x67, 0x65, 0x68, 0x61, 0x31, 0x31,
	0x00, 0x61, 0x67, 0x65, 0x68, 0x61, 0x31, 0x32, 0x00, 0x61, 0x67, 0x65, 0x68, 0x61, 0x31, 0x33,
	0x00, 0x61, 0x67, 0x65, 0x68, 0x61, 0x31, 0x34, 0x00, 0x61, 0x67, 0x65, 0x68, 0x61, 0x31, 0x35,
	0x00, 0x61, 0x67, 0x65, 0x68, 0x61, 0x31, 0x36, 0x00, 0x61, 0x67, 0x65, 0x68, 0x61, 0x31, 0x37,
	0x00, 0x61, 0x67, 0x65, 0x68, 0x61, 0x31, 0x38, 0x00, 0x61, 0x67, 0x65, 0x68, 0x61, 0x31, 0x39,
	0x00, 0x61, 0x67, 0x65, 0x68, 0x61, 0x32, 0x30, 0x00, 0x61, 0x67, 0x65, 0x68, 0x61, 0x32, 0x31,
	0x00, 0x61, 0x67, 0x65, 0x68, 0x61, 0x32, 0x32, 0x00, 0x61, 0x67, 0x65, 0x68, 0x61, 0x32, 0x33,
};

/* 80396810-80396838 0028+00 rc=1 efc=0 rfr=False None .rodata    text_a_tag$4328                                              */
SECTION_RODATA static u8 const data_80396810[40] = {
	0x61, 0x74, 0x65, 0x78, 0x74, 0x31, 0x5F, 0x31, 0x61, 0x74, 0x65, 0x78, 0x74, 0x31, 0x5F, 0x32,
	0x61, 0x74, 0x65, 0x78, 0x74, 0x31, 0x5F, 0x33, 0x61, 0x74, 0x65, 0x78, 0x74, 0x31, 0x5F, 0x34,
	0x61, 0x74, 0x65, 0x78, 0x74, 0x31, 0x5F, 0x35,
};

/* 80396838-80396860 0028+00 rc=1 efc=0 rfr=False None .rodata    text_b_tag$4329                                              */
SECTION_RODATA static u8 const data_80396838[40] = {
	0x62, 0x74, 0x65, 0x78, 0x74, 0x31, 0x5F, 0x31, 0x62, 0x74, 0x65, 0x78, 0x74, 0x31, 0x5F, 0x32,
	0x62, 0x74, 0x65, 0x78, 0x74, 0x31, 0x5F, 0x33, 0x62, 0x74, 0x65, 0x78, 0x74, 0x31, 0x5F, 0x34,
	0x62, 0x74, 0x65, 0x78, 0x74, 0x31, 0x5F, 0x35,
};

/* 80396860-803968C0 0060+00 rc=1 efc=0 rfr=False None .rodata    i_evtID$4383                                                 */
SECTION_RODATA static u8 const data_80396860[96] = {
	0x00, 0x00, 0x01, 0xA5, 0x00, 0x00, 0x01, 0xA6, 0x00, 0x00, 0x01, 0xA7, 0x00, 0x00, 0x01, 0xA8,
	0x00, 0x00, 0x01, 0x91, 0x00, 0x00, 0x01, 0x92, 0x00, 0x00, 0x01, 0x9D, 0x00, 0x00, 0x01, 0x9E,
	0x00, 0x00, 0x01, 0x95, 0x00, 0x00, 0x01, 0x96, 0x00, 0x00, 0x01, 0x9B, 0x00, 0x00, 0x01, 0x9C,
	0x00, 0x00, 0x01, 0x93, 0x00, 0x00, 0x01, 0x94, 0x00, 0x00, 0x01, 0x9F, 0x00, 0x00, 0x01, 0xA0,
	0x00, 0x00, 0x01, 0xA1, 0x00, 0x00, 0x01, 0xA2, 0x00, 0x00, 0x01, 0x99, 0x00, 0x00, 0x01, 0x9A,
	0x00, 0x00, 0x01, 0x97, 0x00, 0x00, 0x01, 0x98, 0x00, 0x00, 0x01, 0xA3, 0x00, 0x00, 0x01, 0xA4,
};

/* 803968C0-80396950 008C+04 rc=8 efc=0 rfr=False None .rodata    @stringBase0                                                 */
#pragma push
#pragma force_active on
#pragma section ".dead"
SECTION_DEAD static char const* const stringBase_803968C0 = "tt_block8x8.bti";
SECTION_DEAD static char const* const stringBase_803968D0 = "/res/Layout/insectRes.arc";
SECTION_DEAD static char const* const stringBase_803968EA = """\x1B""CR[%d]";
SECTION_DEAD static char const* const stringBase_803968F2 = "";
SECTION_DEAD static char const* const stringBase_803968F3 = "zelda_gold_insects.blo";
SECTION_DEAD static char const* const stringBase_8039690A = "zelda_gold_insects_info.blo";
SECTION_DEAD static char const* const stringBase_80396926 = 
    "zelda_collect_soubi_do_icon_parts.blo";
/* @stringBase0 padding */
SECTION_DEAD static char const* const pad_8039694C = "\0\0\0";
#pragma pop

/* 803BD780-803BD78C 000C+00 rc=1 efc=0 rfr=False None .data      cNullVec__6Z2Calc                                            */
SECTION_DATA static u8 d_menu_d_menu_insect__cNullVec__6Z2Calc[12] = {
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
};

/* 803BD78C-803BD798 000C+00 rc=0 efc=0 rfr=False None .data      @3797                                                        */
SECTION_DATA void* d_menu_d_menu_insect__lit_3797[3] = {
	/* 0    */ (void*)NULL,
	/* 1    */ (void*)0xFFFFFFFF,
	/* 2    */ (void*)wait_init__14dMenu_Insect_cFv,
};

/* 803BD798-803BD7A4 000C+00 rc=0 efc=0 rfr=False None .data      @3798                                                        */
SECTION_DATA void* d_menu_d_menu_insect__lit_3798[3] = {
	/* 0    */ (void*)NULL,
	/* 1    */ (void*)0xFFFFFFFF,
	/* 2    */ (void*)explain_open_init__14dMenu_Insect_cFv,
};

/* 803BD7A4-803BD7B0 000C+00 rc=0 efc=0 rfr=False None .data      @3799                                                        */
SECTION_DATA void* d_menu_d_menu_insect__lit_3799[3] = {
	/* 0    */ (void*)NULL,
	/* 1    */ (void*)0xFFFFFFFF,
	/* 2    */ (void*)explain_move_init__14dMenu_Insect_cFv,
};

/* 803BD7B0-803BD7BC 000C+00 rc=0 efc=0 rfr=False None .data      @3800                                                        */
SECTION_DATA void* d_menu_d_menu_insect__lit_3800[3] = {
	/* 0    */ (void*)NULL,
	/* 1    */ (void*)0xFFFFFFFF,
	/* 2    */ (void*)select_move_init__14dMenu_Insect_cFv,
};

/* 803BD7BC-803BD7C8 000C+00 rc=0 efc=0 rfr=False None .data      @3801                                                        */
SECTION_DATA void* d_menu_d_menu_insect__lit_3801[3] = {
	/* 0    */ (void*)NULL,
	/* 1    */ (void*)0xFFFFFFFF,
	/* 2    */ (void*)explain_close_init__14dMenu_Insect_cFv,
};

/* 803BD7C8-803BD804 003C+00 rc=2 efc=0 rfr=False None .data      map_init_process                                             */
SECTION_DATA static u8 d_menu_d_menu_insect__map_init_process[60] = {
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
};

/* 803BD804-803BD810 000C+00 rc=0 efc=0 rfr=False None .data      @3802                                                        */
SECTION_DATA void* d_menu_d_menu_insect__lit_3802[3] = {
	/* 0    */ (void*)NULL,
	/* 1    */ (void*)0xFFFFFFFF,
	/* 2    */ (void*)wait_move__14dMenu_Insect_cFv,
};

/* 803BD810-803BD81C 000C+00 rc=0 efc=0 rfr=False None .data      @3803                                                        */
SECTION_DATA void* d_menu_d_menu_insect__lit_3803[3] = {
	/* 0    */ (void*)NULL,
	/* 1    */ (void*)0xFFFFFFFF,
	/* 2    */ (void*)explain_open_move__14dMenu_Insect_cFv,
};

/* 803BD81C-803BD828 000C+00 rc=0 efc=0 rfr=False None .data      @3804                                                        */
SECTION_DATA void* d_menu_d_menu_insect__lit_3804[3] = {
	/* 0    */ (void*)NULL,
	/* 1    */ (void*)0xFFFFFFFF,
	/* 2    */ (void*)explain_move_move__14dMenu_Insect_cFv,
};

/* 803BD828-803BD834 000C+00 rc=0 efc=0 rfr=False None .data      @3805                                                        */
SECTION_DATA void* d_menu_d_menu_insect__lit_3805[3] = {
	/* 0    */ (void*)NULL,
	/* 1    */ (void*)0xFFFFFFFF,
	/* 2    */ (void*)select_move_move__14dMenu_Insect_cFv,
};

/* 803BD834-803BD840 000C+00 rc=0 efc=0 rfr=False None .data      @3806                                                        */
SECTION_DATA void* d_menu_d_menu_insect__lit_3806[3] = {
	/* 0    */ (void*)NULL,
	/* 1    */ (void*)0xFFFFFFFF,
	/* 2    */ (void*)explain_close_move__14dMenu_Insect_cFv,
};

/* 803BD840-803BD87C 003C+00 rc=1 efc=0 rfr=False None .data      map_move_process                                             */
SECTION_DATA static u8 d_menu_d_menu_insect__map_move_process[60] = {
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
};

/* 803BD87C-803BD894 0018+00 rc=1 efc=0 rfr=False None .data      l_itemno$4346                                                */
SECTION_DATA static u8 data_803BD87C[24] = {
	0xC0, 0xC1, 0xC2, 0xC3, 0xC4, 0xC5, 0xC6, 0xC7, 0xC8, 0xC9, 0xCA, 0xCB, 0xCC, 0xCD, 0xCE, 0xCF,
	0xD0, 0xD1, 0xD2, 0xD3, 0xD4, 0xD5, 0xD6, 0xD7,
};

/* 803BD894-803BD8AC 0018+00 rc=1 efc=0 rfr=False None .data      l_itemno$4364                                                */
SECTION_DATA static u8 data_803BD894[24] = {
	0xD4, 0xD5, 0xD6, 0xD7, 0xC0, 0xC1, 0xCC, 0xCD, 0xC4, 0xC5, 0xCA, 0xCB, 0xC2, 0xC3, 0xCE, 0xCF,
	0xD0, 0xD1, 0xC8, 0xC9, 0xC6, 0xC7, 0xD2, 0xD3,
};

/* 803BD8AC-803BD8C8 0010+0C rc=2 efc=0 rfr=False None .data      __vt__14dMenu_Insect_c                                       */
SECTION_DATA static void* __vt__14dMenu_Insect_c[4 + 3 /* padding */] = {
	/* 0    */ (void*)NULL /* RTTI */,
	/* 1    */ (void*)NULL,
	/* 2    */ (void*)draw__14dMenu_Insect_cFv,
	/* 3    */ (void*)__dt__14dMenu_Insect_cFv,
	/* padding */
	NULL,
	NULL,
	NULL,
};

/* 80454238-8045423C 0004+00 rc=6 efc=0 rfr=False None .sdata2    @3834                                                        */
SECTION_SDATA2 static f32 d_menu_d_menu_insect__lit_3834 = 1.0f;

/* 8045423C-80454240 0004+00 rc=1 efc=0 rfr=False None .sdata2    @3835                                                        */
SECTION_SDATA2 static f32 d_menu_d_menu_insect__lit_3835 = 1.0f / 10.0f;

/* 80454240-80454244 0004+00 rc=1 efc=0 rfr=False None .sdata2    @3836                                                        */
SECTION_SDATA2 static f32 d_menu_d_menu_insect__lit_3836 = 7.0f / 10.0f;

/* 80454244-80454248 0004+00 rc=5 efc=0 rfr=False None .sdata2    @3837                                                        */
SECTION_SDATA2 static u8 d_menu_d_menu_insect__lit_3837[4] = {
	0x00, 0x00, 0x00, 0x00,
};

/* 801D8114-801D82F4 01E0+00 rc=2 efc=2 rfr=False None .text      __ct__14dMenu_Insect_cFP10JKRExpHeapP9STControlP10CSTControlUc */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm dMenu_Insect_c::dMenu_Insect_c(JKRExpHeap* field_0, STControl* field_1, CSTControl* field_2, u8 field_3) {
	nofralloc
#include "asm/d/menu/d_menu_insect/__ct__14dMenu_Insect_cFP10JKRExpHeapP9STControlP10CSTControlUc.s"
}
#pragma pop


/* 801D82F4-801D8658 0364+00 rc=1 efc=0 rfr=False None .text      __dt__14dMenu_Insect_cFv                                     */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm dMenu_Insect_c::~dMenu_Insect_c() {
	nofralloc
#include "asm/d/menu/d_menu_insect/__dt__14dMenu_Insect_cFv.s"
}
#pragma pop


/* 801D8658-801D86C8 0070+00 rc=1 efc=0 rfr=False None .text      _create__14dMenu_Insect_cFv                                  */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void dMenu_Insect_c::_create() {
	nofralloc
#include "asm/d/menu/d_menu_insect/_create__14dMenu_Insect_cFv.s"
}
#pragma pop


/* 801D86C8-801D8760 0098+00 rc=3 efc=3 rfr=False None .text      _move__14dMenu_Insect_cFv                                    */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void dMenu_Insect_c::_move() {
	nofralloc
#include "asm/d/menu/d_menu_insect/_move__14dMenu_Insect_cFv.s"
}
#pragma pop


/* ############################################################################################## */
/* 80454248-8045424C 0004+00 rc=1 efc=0 rfr=False None .sdata2    @3961                                                        */
SECTION_SDATA2 static f32 lit_3961 = 608.0f;

/* 8045424C-80454250 0004+00 rc=1 efc=0 rfr=False None .sdata2    @3962                                                        */
SECTION_SDATA2 static f32 d_menu_d_menu_insect__lit_3962 = 448.0f;

/* 80454250-80454254 0004+00 rc=1 efc=0 rfr=False None .sdata2    @3963                                                        */
SECTION_SDATA2 static f32 d_menu_d_menu_insect__lit_3963 = 150.0f;

/* 80454254-80454258 0004+00 rc=1 efc=0 rfr=False None .sdata2    @3964                                                        */
SECTION_SDATA2 static f32 d_menu_d_menu_insect__lit_3964 = 486.0f;

/* 80454258-80454260 0004+04 rc=1 efc=0 rfr=False None .sdata2    @3965                                                        */
SECTION_SDATA2 static f32 d_menu_d_menu_insect__lit_3965[1 + 1 /* padding */] = {
	209.0f,
	/* padding */
	0.0f,
};

/* 801D8760-801D88EC 018C+00 rc=2 efc=1 rfr=False None .text      _draw__14dMenu_Insect_cFv                                    */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void dMenu_Insect_c::_draw() {
	nofralloc
#include "asm/d/menu/d_menu_insect/_draw__14dMenu_Insect_cFv.s"
}
#pragma pop


/* 801D88EC-801D8914 0028+00 rc=3 efc=3 rfr=False None .text      isSync__14dMenu_Insect_cFv                                   */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void dMenu_Insect_c::isSync() {
	nofralloc
#include "asm/d/menu/d_menu_insect/isSync__14dMenu_Insect_cFv.s"
}
#pragma pop


/* 801D8914-801D894C 0038+00 rc=1 efc=0 rfr=False None .text      init__14dMenu_Insect_cFv                                     */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void dMenu_Insect_c::init() {
	nofralloc
#include "asm/d/menu/d_menu_insect/init__14dMenu_Insect_cFv.s"
}
#pragma pop


/* ############################################################################################## */
/* 80454260-80454268 0008+00 rc=2 efc=0 rfr=False None .sdata2    @4020                                                        */
SECTION_SDATA2 static f64 d_menu_d_menu_insect__lit_4020 = 4503601774854144.0 /* cast s32 to float */;

/* 801D894C-801D8B2C 01E0+00 rc=3 efc=3 rfr=False None .text      _open__14dMenu_Insect_cFv                                    */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void dMenu_Insect_c::_open() {
	nofralloc
#include "asm/d/menu/d_menu_insect/_open__14dMenu_Insect_cFv.s"
}
#pragma pop


/* 801D8B2C-801D8C68 013C+00 rc=1 efc=1 rfr=False None .text      _close__14dMenu_Insect_cFv                                   */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void dMenu_Insect_c::_close() {
	nofralloc
#include "asm/d/menu/d_menu_insect/_close__14dMenu_Insect_cFv.s"
}
#pragma pop


/* 801D8C68-801D8CCC 0064+00 rc=1 efc=0 rfr=False None .text      wait_init__14dMenu_Insect_cFv                                */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void dMenu_Insect_c::wait_init() {
	nofralloc
#include "asm/d/menu/d_menu_insect/wait_init__14dMenu_Insect_cFv.s"
}
#pragma pop


/* ############################################################################################## */
/* 80454268-8045426C 0004+00 rc=4 efc=0 rfr=False None .sdata2    @4089                                                        */
SECTION_SDATA2 static f32 d_menu_d_menu_insect__lit_4089 = -1.0f;

/* 801D8CCC-801D8E00 0134+00 rc=1 efc=0 rfr=False None .text      wait_move__14dMenu_Insect_cFv                                */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void dMenu_Insect_c::wait_move() {
	nofralloc
#include "asm/d/menu/d_menu_insect/wait_move__14dMenu_Insect_cFv.s"
}
#pragma pop


/* ############################################################################################## */
/* 8045426C-80454270 0004+00 rc=1 efc=0 rfr=False None .sdata2    @4135                                                        */
SECTION_SDATA2 static f32 d_menu_d_menu_insect__lit_4135 = 48.0f;

/* 80454270-80454278 0004+04 rc=1 efc=0 rfr=False None .sdata2    @4136                                                        */
SECTION_SDATA2 static f32 d_menu_d_menu_insect__lit_4136[1 + 1 /* padding */] = {
	0.5f,
	/* padding */
	0.0f,
};

/* 80454278-80454280 0008+00 rc=1 efc=0 rfr=False None .sdata2    @4138                                                        */
SECTION_SDATA2 static f64 d_menu_d_menu_insect__lit_4138 = 4503599627370496.0 /* cast u32 to float */;

/* 801D8E00-801D91E4 03E4+00 rc=1 efc=0 rfr=False None .text      explain_open_init__14dMenu_Insect_cFv                        */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void dMenu_Insect_c::explain_open_init() {
	nofralloc
#include "asm/d/menu/d_menu_insect/explain_open_init__14dMenu_Insect_cFv.s"
}
#pragma pop


/* 801D91E4-801D9264 0080+00 rc=1 efc=0 rfr=False None .text      explain_open_move__14dMenu_Insect_cFv                        */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void dMenu_Insect_c::explain_open_move() {
	nofralloc
#include "asm/d/menu/d_menu_insect/explain_open_move__14dMenu_Insect_cFv.s"
}
#pragma pop


/* 801D9264-801D9268 0004+00 rc=1 efc=0 rfr=False None .text      explain_move_init__14dMenu_Insect_cFv                        */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void dMenu_Insect_c::explain_move_init() {
	nofralloc
#include "asm/d/menu/d_menu_insect/explain_move_init__14dMenu_Insect_cFv.s"
}
#pragma pop


/* 801D9268-801D9290 0028+00 rc=1 efc=0 rfr=False None .text      explain_move_move__14dMenu_Insect_cFv                        */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void dMenu_Insect_c::explain_move_move() {
	nofralloc
#include "asm/d/menu/d_menu_insect/explain_move_move__14dMenu_Insect_cFv.s"
}
#pragma pop


/* 801D9290-801D92DC 004C+00 rc=1 efc=0 rfr=False None .text      select_move_init__14dMenu_Insect_cFv                         */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void dMenu_Insect_c::select_move_init() {
	nofralloc
#include "asm/d/menu/d_menu_insect/select_move_init__14dMenu_Insect_cFv.s"
}
#pragma pop


/* 801D92DC-801D9504 0228+00 rc=1 efc=0 rfr=False None .text      select_move_move__14dMenu_Insect_cFv                         */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void dMenu_Insect_c::select_move_move() {
	nofralloc
#include "asm/d/menu/d_menu_insect/select_move_move__14dMenu_Insect_cFv.s"
}
#pragma pop


/* 801D9504-801D95AC 00A8+00 rc=1 efc=0 rfr=False None .text      explain_close_init__14dMenu_Insect_cFv                       */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void dMenu_Insect_c::explain_close_init() {
	nofralloc
#include "asm/d/menu/d_menu_insect/explain_close_init__14dMenu_Insect_cFv.s"
}
#pragma pop


/* 801D95AC-801D9644 0098+00 rc=1 efc=0 rfr=False None .text      explain_close_move__14dMenu_Insect_cFv                       */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void dMenu_Insect_c::explain_close_move() {
	nofralloc
#include "asm/d/menu/d_menu_insect/explain_close_move__14dMenu_Insect_cFv.s"
}
#pragma pop


/* 801D9644-801D98F0 02AC+00 rc=1 efc=0 rfr=False None .text      screenSetBase__14dMenu_Insect_cFv                            */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void dMenu_Insect_c::screenSetBase() {
	nofralloc
#include "asm/d/menu/d_menu_insect/screenSetBase__14dMenu_Insect_cFv.s"
}
#pragma pop


/* 801D98F0-801D9BD0 02E0+00 rc=1 efc=0 rfr=False None .text      screenSetExplain__14dMenu_Insect_cFv                         */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void dMenu_Insect_c::screenSetExplain() {
	nofralloc
#include "asm/d/menu/d_menu_insect/screenSetExplain__14dMenu_Insect_cFv.s"
}
#pragma pop


/* 801D9BD0-801D9D4C 017C+00 rc=1 efc=0 rfr=False None .text      screenSetDoIcon__14dMenu_Insect_cFv                          */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void dMenu_Insect_c::screenSetDoIcon() {
	nofralloc
#include "asm/d/menu/d_menu_insect/screenSetDoIcon__14dMenu_Insect_cFv.s"
}
#pragma pop


/* 801D9D4C-801D9DCC 0080+00 rc=1 efc=1 rfr=False None .text      getGetInsectNum__14dMenu_Insect_cFv                          */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void dMenu_Insect_c::getGetInsectNum() {
	nofralloc
#include "asm/d/menu/d_menu_insect/getGetInsectNum__14dMenu_Insect_cFv.s"
}
#pragma pop


/* 801D9DCC-801D9DE4 0018+00 rc=3 efc=0 rfr=False None .text      getInsectItemID__14dMenu_Insect_cFii                         */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void dMenu_Insect_c::getInsectItemID(int field_0, int field_1) {
	nofralloc
#include "asm/d/menu/d_menu_insect/getInsectItemID__14dMenu_Insect_cFii.s"
}
#pragma pop


/* 801D9DE4-801D9E20 003C+00 rc=4 efc=0 rfr=False None .text      isGetInsect__14dMenu_Insect_cFii                             */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void dMenu_Insect_c::isGetInsect(int field_0, int field_1) {
	nofralloc
#include "asm/d/menu/d_menu_insect/isGetInsect__14dMenu_Insect_cFii.s"
}
#pragma pop


/* 801D9E20-801D9E7C 005C+00 rc=4 efc=0 rfr=False None .text      isGiveInsect__14dMenu_Insect_cFii                            */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void dMenu_Insect_c::isGiveInsect(int field_0, int field_1) {
	nofralloc
#include "asm/d/menu/d_menu_insect/isGiveInsect__14dMenu_Insect_cFii.s"
}
#pragma pop


/* 801D9E7C-801D9ED4 0058+00 rc=1 efc=0 rfr=False None .text      isCatchInsect__14dMenu_Insect_cFUc                           */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void dMenu_Insect_c::isCatchInsect(u8 field_0) {
	nofralloc
#include "asm/d/menu/d_menu_insect/isCatchInsect__14dMenu_Insect_cFUc.s"
}
#pragma pop


/* 801D9ED4-801D9F3C 0068+00 rc=1 efc=0 rfr=False None .text      isGiveInsect__14dMenu_Insect_cFUc                            */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void dMenu_Insect_c::isGiveInsect(u8 field_0) {
	nofralloc
#include "asm/d/menu/d_menu_insect/isGiveInsect__14dMenu_Insect_cFUc.s"
}
#pragma pop


/* 801D9F3C-801D9F8C 0050+00 rc=1 efc=1 rfr=False None .text      isCatchNotGiveInsect__14dMenu_Insect_cFUc                    */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void dMenu_Insect_c::isCatchNotGiveInsect(u8 field_0) {
	nofralloc
#include "asm/d/menu/d_menu_insect/isCatchNotGiveInsect__14dMenu_Insect_cFUc.s"
}
#pragma pop


/* ############################################################################################## */
/* 80454280-80454288 0004+04 rc=1 efc=0 rfr=False None .sdata2    @4474                                                        */
SECTION_SDATA2 static f32 d_menu_d_menu_insect__lit_4474[1 + 1 /* padding */] = {
	0.75f,
	/* padding */
	0.0f,
};

/* 801D9F8C-801DA1EC 0260+00 rc=1 efc=0 rfr=False None .text      cursorMove__14dMenu_Insect_cFv                               */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void dMenu_Insect_c::cursorMove() {
	nofralloc
#include "asm/d/menu/d_menu_insect/cursorMove__14dMenu_Insect_cFv.s"
}
#pragma pop


/* 801DA1EC-801DA2FC 0110+00 rc=3 efc=0 rfr=False None .text      setCursorPos__14dMenu_Insect_cFv                             */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void dMenu_Insect_c::setCursorPos() {
	nofralloc
#include "asm/d/menu/d_menu_insect/setCursorPos__14dMenu_Insect_cFv.s"
}
#pragma pop


/* 801DA2FC-801DA304 0008+00 rc=1 efc=0 rfr=False None .text      dpdMove__14dMenu_Insect_cFv                                  */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void dMenu_Insect_c::dpdMove() {
	nofralloc
#include "asm/d/menu/d_menu_insect/dpdMove__14dMenu_Insect_cFv.s"
}
#pragma pop


/* 801DA304-801DA3B4 00B0+00 rc=5 efc=0 rfr=False None .text      setAButtonString__14dMenu_Insect_cFUs                        */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void dMenu_Insect_c::setAButtonString(u16 field_0) {
	nofralloc
#include "asm/d/menu/d_menu_insect/setAButtonString__14dMenu_Insect_cFUs.s"
}
#pragma pop


/* 801DA3B4-801DA464 00B0+00 rc=4 efc=0 rfr=False None .text      setBButtonString__14dMenu_Insect_cFUs                        */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void dMenu_Insect_c::setBButtonString(u16 field_0) {
	nofralloc
#include "asm/d/menu/d_menu_insect/setBButtonString__14dMenu_Insect_cFUs.s"
}
#pragma pop


/* 801DA464-801DA630 01CC+00 rc=2 efc=0 rfr=False None .text      setHIO__14dMenu_Insect_cFb                                   */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void dMenu_Insect_c::setHIO(bool field_0) {
	nofralloc
#include "asm/d/menu/d_menu_insect/setHIO__14dMenu_Insect_cFb.s"
}
#pragma pop


/* 801DA630-801DA650 0020+00 rc=1 efc=0 rfr=False None .text      draw__14dMenu_Insect_cFv                                     */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void dMenu_Insect_c::draw() {
	nofralloc
#include "asm/d/menu/d_menu_insect/draw__14dMenu_Insect_cFv.s"
}
#pragma pop


/* 801DA650-801DA754 0104+00 rc=1 efc=1 rfr=False None .text      __sinit_d_menu_insect_cpp                                    */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
extern "C" asm void __sinit_d_menu_insect_cpp() {
	nofralloc
#include "asm/d/menu/d_menu_insect/__sinit_d_menu_insect_cpp.s"
}
#pragma pop


