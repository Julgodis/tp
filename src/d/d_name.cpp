// 
// Generated By: dol2asm
// Translation Unit: d/d_name
// 

#include "dolphin/types.h"

// 
// Types:
// 

struct dNm_HIO_c {
	/* 8024E3E0 */ dNm_HIO_c();
	/* 802511A4 */ ~dNm_HIO_c();
};

struct J2DPane {
};

struct dName_c {
	/* 8024E408 */ dName_c(J2DPane*);
	/* 8024E468 */ ~dName_c();
	/* 8024E62C */ void _create();
	/* 8024E6D4 */ void init();
	/* 8024E7A4 */ void initial();
	/* 8024E7EC */ void showIcon();
	/* 8024E9A0 */ void _move();
	/* 8024EC10 */ void nameCheck();
	/* 8024EC4C */ void playNameSet(int);
	/* 8024EC84 */ void cursorAnm();
	/* 8024ED48 */ void Wait();
	/* 8024ED4C */ void MojiSelect();
	/* 8024F034 */ void MojiSelectAnmInit();
	/* 8024F0E0 */ void MojiSelectAnm();
	/* 8024F164 */ void MojiSelectAnm2();
	/* 8024F1E8 */ void MojiSelectAnm3();
	/* 8024F1EC */ void mojiChange(u8);
	/* 8024F55C */ void selectMojiSet();
	/* 8024F59C */ void getMoji();
	/* 8024F634 */ void setMoji(int);
	/* 8024F88C */ void setNameText();
	/* 8024F914 */ void nameCursorMove();
	/* 8024F994 */ void selectCursorMove();
	/* 8024FAF4 */ void menuCursorPosSet();
	/* 8024FB08 */ void MenuSelect();
	/* 8024FDA0 */ void MenuSelectAnmInit();
	/* 8024FDF4 */ void MenuSelectAnm();
	/* 8024FEB4 */ void MenuSelectAnm2();
	/* 8024FFA0 */ void MenuSelectAnm3();
	/* 8024FFA4 */ void menuAbtnSelect();
	/* 80250074 */ void backSpace();
	/* 802501B0 */ void mojiListChange();
	/* 80250284 */ void menuCursorMove();
	/* 80250380 */ void menuCursorMove2();
	/* 802504A0 */ void selectCursorPosSet(int);
	/* 80250560 */ void _draw();
	/* 802505CC */ void screenSet();
	/* 80250CEC */ void displayInit();
	/* 80250E54 */ void NameStrSet();
	/* 80251048 */ void getMenuPosIdx(u8);
};

struct dDlst_NameIN_c {
	/* 80251094 */ void draw();
	/* 8025115C */ ~dDlst_NameIN_c();
};

struct STControl {
	/* 80032044 */ STControl(s16, s16, s16, s16, f32, f32, s16, s16);
	/* 8003219C */ void checkTrigger();
	/* 8003242C */ void checkLeftTrigger();
	/* 800324A8 */ void checkRightTrigger();
	/* 80032524 */ void checkUpTrigger();
	/* 800325A0 */ void checkDownTrigger();
};

struct dDlst_base_c {
};

struct dDlst_list_c {
	/* 80056794 */ void set(dDlst_base_c**&, dDlst_base_c**&, dDlst_base_c*);
};

struct JKRArchive {
};

struct dSelect_cursor_c {
	/* 80194220 */ dSelect_cursor_c(u8, f32, JKRArchive*);
	/* 801950F4 */ void setPos(f32, f32, J2DPane*, bool);
	/* 801951B0 */ void setParam(f32, f32, f32, f32, f32);
	/* 801952A0 */ void setAlphaRate(f32);
};

struct JKRExpHeap {
};

struct J2DGrafContext {
};

struct J2DScreen {
	/* 802F8498 */ J2DScreen();
	/* 802F8648 */ void setPriority(char const*, u32, JKRArchive*);
	/* 802F8ED4 */ void draw(f32, f32, J2DGrafContext const*);
	/* 802F9690 */ void animation();
};

struct CPaneMgr {
	/* 80253984 */ CPaneMgr(J2DScreen*, u64, u8, JKRExpHeap*);
	/* 802547CC */ void scaleAnime(s16, f32, f32, u8);
	/* 80254EBC */ void getGlobalVtxCenter(J2DPane*, bool, s16);
};

struct CPaneMgrAlpha {
	/* 802553FC */ CPaneMgrAlpha(J2DScreen*, u64, u8, JKRExpHeap*);
	/* 802555C8 */ void show();
	/* 80255608 */ void hide();
};

struct JAISoundID {
};

struct Vec {
};

struct Z2SeMgr {
	/* 802AB984 */ void seStart(JAISoundID, Vec const*, u32, s8, f32, f32, f32, f32, u8);
};

struct JKRFileLoader {
	/* 802D4270 */ void getGlbResource(char const*, JKRFileLoader*);
};

struct J2DTextBox {
	/* 80300658 */ void getStringPtr() const;
	/* 80300660 */ void setString(char const*, ...);
	/* 8030074C */ void setString(s16, char const*, ...);
};

struct J2DAnmLoaderDataBase {
	/* 80308A6C */ void load(void const*);
};

// 
// Forward References:
// 

extern "C" void __sinit_d_name_cpp(); // 1

extern "C" void __ct__9dNm_HIO_cFv(); // 1
extern "C" void __ct__7dName_cFP7J2DPane(); // 1
extern "C" void __dt__7dName_cFv(); // 1
extern "C" void _create__7dName_cFv(); // 1
extern "C" void init__7dName_cFv(); // 1
extern "C" void initial__7dName_cFv(); // 1
extern "C" void showIcon__7dName_cFv(); // 1
extern "C" void _move__7dName_cFv(); // 1
extern "C" void nameCheck__7dName_cFv(); // 1
extern "C" void playNameSet__7dName_cFi(); // 1
extern "C" void cursorAnm__7dName_cFv(); // 1
extern "C" void Wait__7dName_cFv(); // 1
extern "C" void MojiSelect__7dName_cFv(); // 1
extern "C" void MojiSelectAnmInit__7dName_cFv(); // 1
extern "C" void MojiSelectAnm__7dName_cFv(); // 1
extern "C" void MojiSelectAnm2__7dName_cFv(); // 1
extern "C" void MojiSelectAnm3__7dName_cFv(); // 1
extern "C" void mojiChange__7dName_cFUc(); // 1
extern "C" void selectMojiSet__7dName_cFv(); // 1
extern "C" void getMoji__7dName_cFv(); // 1
extern "C" void setMoji__7dName_cFi(); // 1
extern "C" void setNameText__7dName_cFv(); // 1
extern "C" void nameCursorMove__7dName_cFv(); // 1
extern "C" void selectCursorMove__7dName_cFv(); // 1
extern "C" void menuCursorPosSet__7dName_cFv(); // 1
extern "C" void MenuSelect__7dName_cFv(); // 1
extern "C" void MenuSelectAnmInit__7dName_cFv(); // 1
extern "C" void MenuSelectAnm__7dName_cFv(); // 1
extern "C" void MenuSelectAnm2__7dName_cFv(); // 1
extern "C" void MenuSelectAnm3__7dName_cFv(); // 1
extern "C" void menuAbtnSelect__7dName_cFv(); // 1
extern "C" void backSpace__7dName_cFv(); // 1
extern "C" void mojiListChange__7dName_cFv(); // 1
extern "C" void menuCursorMove__7dName_cFv(); // 1
extern "C" void menuCursorMove2__7dName_cFv(); // 1
extern "C" void selectCursorPosSet__7dName_cFi(); // 1
extern "C" void _draw__7dName_cFv(); // 1
extern "C" void screenSet__7dName_cFv(); // 1
extern "C" void displayInit__7dName_cFv(); // 1
extern "C" void NameStrSet__7dName_cFv(); // 1
extern "C" void getMenuPosIdx__7dName_cFUc(); // 1
extern "C" void draw__14dDlst_NameIN_cFv(); // 1
extern "C" void __dt__14dDlst_NameIN_cFv(); // 1
extern "C" void __dt__9dNm_HIO_cFv(); // 1
extern "C" void __sinit_d_name_cpp(); // 1
SECTION_RODATA extern const u8 d_d_name__stringBase0[792];
SECTION_DATA extern u8 d_d_name__cNullVec__6Z2Calc[12];
SECTION_DATA extern void*l_mojiHira[65];
SECTION_DATA extern u8 l_mojiHira2[260];
SECTION_DATA extern u8 l_mojiHira3[260];
SECTION_DATA extern u8 l_mojikata[260];
SECTION_DATA extern u8 l_mojikata2[260];
SECTION_DATA extern u8 l_mojikata3[260];
SECTION_DATA extern u8 l_mojiEisu[260];
SECTION_DATA extern void*d_d_name__lit_3825[3];
SECTION_DATA extern void*d_d_name__lit_3826[3];
SECTION_DATA extern void*d_d_name__lit_3827[3];
SECTION_DATA extern void*d_d_name__lit_3828[3];
SECTION_DATA extern void*d_d_name__lit_3829[3];
SECTION_DATA extern void*d_d_name__lit_3830[3];
SECTION_DATA extern void*d_d_name__lit_3831[3];
SECTION_DATA extern void*d_d_name__lit_3832[3];
SECTION_DATA extern void*d_d_name__lit_3833[3];
SECTION_DATA extern u8 SelProc[108];
SECTION_DATA extern void*d_d_name__lit_4121[14];
SECTION_DATA extern u8 data_803C2788[64];
SECTION_DATA extern u8 data_803C27C8[64];
SECTION_DATA extern u8 data_803C2808[32];
SECTION_DATA extern u8 data_803C2828[120];
SECTION_DATA extern u8 data_803C28A0[16];
SECTION_DATA extern u8 data_803C28B0[520];
SECTION_DATA extern u8 data_803C2AB8[64];
SECTION_DATA extern u8 data_803C2AF8[64];
SECTION_DATA extern void*const __vt__14dDlst_NameIN_c[11];
SECTION_DATA extern void*const __vt__7dName_c[6];
SECTION_DATA extern void*const __vt__9dNm_HIO_c[3];
SECTION_BSS extern u8 lit_3660[12];
SECTION_BSS extern u8 g_nmHIO[20];
SECTION_SDATA2 extern f32 d_d_name__lit_3665;
SECTION_SDATA2 extern f32 d_d_name__lit_3666;
SECTION_SDATA2 extern f32 d_d_name__lit_3755;
SECTION_SDATA2 extern f32 d_d_name__lit_3756;
SECTION_SDATA2 extern f32 d_d_name__lit_3820;
SECTION_SDATA2 extern f32 d_d_name__lit_3886;
SECTION_SDATA2 extern f64 d_d_name__lit_3936;
SECTION_SDATA2 extern u8 d_d_name__lit_4009[4];
SECTION_SDATA2 extern f32 d_d_name__lit_4722;
SECTION_SDATA2 extern f32 d_d_name__lit_4723;
SECTION_SDATA2 extern f32 d_d_name__lit_4724;
SECTION_SDATA2 extern f32 d_d_name__lit_4725;

// 
// External References:
// 

void mDoExt_getMesgFont(); // 2
void mDoExt_removeMesgFont(); // 2
void fopMsgM_messageGet(char*, u32); // 2
void dPaneClass_showNullPane(J2DScreen*); // 2
void* operator new(u32); // 2
void operator delete(void*); // 2
extern "C" void PSMTXCopy(); // 1
extern "C" void PSMTXConcat(); // 1
extern "C" void PSMTXScale(); // 1
extern "C" void __register_global_object(); // 1
extern "C" void __ptmf_scall(); // 1
extern "C" void _savegpr_19(); // 1
extern "C" void _savegpr_24(); // 1
extern "C" void _savegpr_26(); // 1
extern "C" void _savegpr_27(); // 1
extern "C" void _savegpr_28(); // 1
extern "C" void _savegpr_29(); // 1
extern "C" void _restgpr_19(); // 1
extern "C" void _restgpr_24(); // 1
extern "C" void _restgpr_26(); // 1
extern "C" void _restgpr_27(); // 1
extern "C" void _restgpr_28(); // 1
extern "C" void _restgpr_29(); // 1
extern "C" void sprintf(); // 1
extern "C" void strcat(); // 1
extern "C" void strcpy(); // 1

extern "C" void mDoExt_getMesgFont__Fv(); // 1
extern "C" void mDoExt_removeMesgFont__Fv(); // 1
extern "C" void fopMsgM_messageGet__FPcUl(); // 1
extern "C" void __ct__9STControlFssssffss(); // 1
extern "C" void checkTrigger__9STControlFv(); // 1
extern "C" void checkLeftTrigger__9STControlFv(); // 1
extern "C" void checkRightTrigger__9STControlFv(); // 1
extern "C" void checkUpTrigger__9STControlFv(); // 1
extern "C" void checkDownTrigger__9STControlFv(); // 1
extern "C" void set__12dDlst_list_cFRPP12dDlst_base_cRPP12dDlst_base_cP12dDlst_base_c(); // 1
extern "C" void __ct__16dSelect_cursor_cFUcfP10JKRArchive(); // 1
extern "C" void setPos__16dSelect_cursor_cFffP7J2DPaneb(); // 1
extern "C" void setParam__16dSelect_cursor_cFfffff(); // 1
extern "C" void setAlphaRate__16dSelect_cursor_cFf(); // 1
extern "C" void __ct__8CPaneMgrFP9J2DScreenUxUcP10JKRExpHeap(); // 1
extern "C" void scaleAnime__8CPaneMgrFsffUc(); // 1
extern "C" void getGlobalVtxCenter__8CPaneMgrFP7J2DPanebs(); // 1
extern "C" void dPaneClass_showNullPane__FP9J2DScreen(); // 1
extern "C" void __ct__13CPaneMgrAlphaFP9J2DScreenUxUcP10JKRExpHeap(); // 1
extern "C" void show__13CPaneMgrAlphaFv(); // 1
extern "C" void hide__13CPaneMgrAlphaFv(); // 1
extern "C" void seStart__7Z2SeMgrF10JAISoundIDPC3VecUlScffffUc(); // 1
extern "C" void* __nw__FUl(); // 1
extern "C" void __dl__FPv(); // 1
extern "C" void getGlbResource__13JKRFileLoaderFPCcP13JKRFileLoader(); // 1
extern "C" void __ct__9J2DScreenFv(); // 1
extern "C" void setPriority__9J2DScreenFPCcUlP10JKRArchive(); // 1
extern "C" void draw__9J2DScreenFffPC14J2DGrafContext(); // 1
extern "C" void animation__9J2DScreenFv(); // 1
extern "C" void getStringPtr__10J2DTextBoxCFv(); // 1
extern "C" void setString__10J2DTextBoxFPCce(); // 1
extern "C" void setString__10J2DTextBoxFsPCce(); // 1
extern "C" void load__20J2DAnmLoaderDataBaseFPCv(); // 1
extern "C" void PSMTXCopy(); // 1
extern "C" void PSMTXConcat(); // 1
extern "C" void PSMTXScale(); // 1
extern "C" void __register_global_object(); // 1
extern "C" void __ptmf_scall(); // 1
extern "C" void _savegpr_19(); // 1
extern "C" void _savegpr_24(); // 1
extern "C" void _savegpr_26(); // 1
extern "C" void _savegpr_27(); // 1
extern "C" void _savegpr_28(); // 1
extern "C" void _savegpr_29(); // 1
extern "C" void _restgpr_19(); // 1
extern "C" void _restgpr_24(); // 1
extern "C" void _restgpr_26(); // 1
extern "C" void _restgpr_27(); // 1
extern "C" void _restgpr_28(); // 1
extern "C" void _restgpr_29(); // 1
extern "C" void sprintf(); // 1
extern "C" void strcat(); // 1
extern "C" void strcpy(); // 1
SECTION_DATA extern void*const __vt__12dDlst_base_c[3];
SECTION_BSS extern u8 m_cpadInfo__8mDoCPd_c[256];
SECTION_BSS extern u8 g_dComIfG_gameInfo[122384];
SECTION_SBSS extern u8 mAudioMgrPtr__10Z2AudioMgr[4 + 4 /* padding */];

// 
// Declarations:
// 

/* ############################################################################################## */
/* 803C1F50-803C1F5C 000C+00 rc=5 efc=0 .data      cNullVec__6Z2Calc                                            */
u8 d_d_name__cNullVec__6Z2Calc[12] = {
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
};

/* 803C1F5C-803C2060 0104+00 rc=0 efc=0 .data      l_mojiHira                                                   */
void* l_mojiHira[65] = {
	(void*)&d_d_name__stringBase0,
	(void*)0x80399CCB,
	(void*)0x80399CCE,
	(void*)0x80399CD1,
	(void*)0x80399CD4,
	(void*)0x80399CD7,
	(void*)0x80399CDA,
	(void*)0x80399CDD,
	(void*)0x80399CE0,
	(void*)0x80399CE3,
	(void*)0x80399CE6,
	(void*)0x80399CE9,
	(void*)0x80399CEC,
	(void*)0x80399CEF,
	(void*)0x80399CF2,
	(void*)0x80399CF5,
	(void*)0x80399CF8,
	(void*)0x80399CFB,
	(void*)0x80399CFE,
	(void*)0x80399D01,
	(void*)0x80399D04,
	(void*)0x80399D07,
	(void*)0x80399D0A,
	(void*)0x80399D0D,
	(void*)0x80399D10,
	(void*)0x80399D13,
	(void*)0x80399D16,
	(void*)0x80399D19,
	(void*)0x80399D1C,
	(void*)0x80399D1F,
	(void*)0x80399D22,
	(void*)0x80399D25,
	(void*)0x80399D28,
	(void*)0x80399D2B,
	(void*)0x80399D2E,
	(void*)0x80399D31,
	(void*)0x80399D34,
	(void*)0x80399D37,
	(void*)0x80399D34,
	(void*)0x80399D3A,
	(void*)0x80399D3D,
	(void*)0x80399D40,
	(void*)0x80399D43,
	(void*)0x80399D46,
	(void*)0x80399D49,
	(void*)0x80399D4C,
	(void*)0x80399D34,
	(void*)0x80399D4F,
	(void*)0x80399D34,
	(void*)0x80399D52,
	(void*)0x80399D55,
	(void*)0x80399D58,
	(void*)0x80399D5B,
	(void*)0x80399D5E,
	(void*)0x80399D61,
	(void*)0x80399D64,
	(void*)0x80399D34,
	(void*)0x80399D67,
	(void*)0x80399D34,
	(void*)0x80399D6A,
	(void*)0x80399D6D,
	(void*)0x80399D34,
	(void*)0x80399D70,
	(void*)0x80399D73,
	(void*)0x80399D76,
};

/* 803C2060-803C2164 0104+00 rc=0 efc=0 .data      l_mojiHira2                                                  */
u8 l_mojiHira2[260] = {
	0x80, 0x39, 0x9D, 0x79, 0x80, 0x39, 0x9D, 0x79, 0x80, 0x39, 0x9D, 0x79, 0x80, 0x39, 0x9D, 0x79,
	0x80, 0x39, 0x9D, 0x79, 0x80, 0x39, 0x9D, 0x7C, 0x80, 0x39, 0x9D, 0x7F, 0x80, 0x39, 0x9D, 0x82,
	0x80, 0x39, 0x9D, 0x85, 0x80, 0x39, 0x9D, 0x88, 0x80, 0x39, 0x9D, 0x8B, 0x80, 0x39, 0x9D, 0x8E,
	0x80, 0x39, 0x9D, 0x91, 0x80, 0x39, 0x9D, 0x94, 0x80, 0x39, 0x9D, 0x97, 0x80, 0x39, 0x9D, 0x9A,
	0x80, 0x39, 0x9D, 0x9D, 0x80, 0x39, 0x9D, 0xA0, 0x80, 0x39, 0x9D, 0xA3, 0x80, 0x39, 0x9D, 0xA6,
	0x80, 0x39, 0x9D, 0x79, 0x80, 0x39, 0x9D, 0x79, 0x80, 0x39, 0x9D, 0x79, 0x80, 0x39, 0x9D, 0x79,
	0x80, 0x39, 0x9D, 0x79, 0x80, 0x39, 0x9D, 0xA9, 0x80, 0x39, 0x9D, 0xAC, 0x80, 0x39, 0x9D, 0xAF,
	0x80, 0x39, 0x9D, 0xB2, 0x80, 0x39, 0x9D, 0xB5, 0x80, 0x39, 0x9D, 0x79, 0x80, 0x39, 0x9D, 0x79,
	0x80, 0x39, 0x9D, 0x79, 0x80, 0x39, 0x9D, 0x79, 0x80, 0x39, 0x9D, 0x79, 0x80, 0x39, 0x9D, 0x79,
	0x80, 0x39, 0x9D, 0x79, 0x80, 0x39, 0x9D, 0x79, 0x80, 0x39, 0x9D, 0x79, 0x80, 0x39, 0x9D, 0x79,
	0x80, 0x39, 0x9D, 0x79, 0x80, 0x39, 0x9D, 0x79, 0x80, 0x39, 0x9D, 0x79, 0x80, 0x39, 0x9D, 0x79,
	0x80, 0x39, 0x9D, 0x79, 0x80, 0x39, 0x9D, 0x79, 0x80, 0x39, 0x9D, 0x79, 0x80, 0x39, 0x9D, 0x79,
	0x80, 0x39, 0x9D, 0x79, 0x80, 0x39, 0x9D, 0x79, 0x80, 0x39, 0x9D, 0x79, 0x80, 0x39, 0x9D, 0x79,
	0x80, 0x39, 0x9D, 0x79, 0x80, 0x39, 0x9D, 0x79, 0x80, 0x39, 0x9D, 0x79, 0x80, 0x39, 0x9D, 0x79,
	0x80, 0x39, 0x9D, 0x79, 0x80, 0x39, 0x9D, 0x79, 0x80, 0x39, 0x9D, 0x79, 0x80, 0x39, 0x9D, 0x79,
	0x80, 0x39, 0x9D, 0x79, 0x80, 0x39, 0x9D, 0x79, 0x80, 0x39, 0x9D, 0x79, 0x80, 0x39, 0x9D, 0x79,
	0x80, 0x39, 0x9D, 0x79,
};

/* 803C2164-803C2268 0104+00 rc=0 efc=0 .data      l_mojiHira3                                                  */
u8 l_mojiHira3[260] = {
	0x80, 0x39, 0x9D, 0x79, 0x80, 0x39, 0x9D, 0x79, 0x80, 0x39, 0x9D, 0x79, 0x80, 0x39, 0x9D, 0x79,
	0x80, 0x39, 0x9D, 0x79, 0x80, 0x39, 0x9D, 0x79, 0x80, 0x39, 0x9D, 0x79, 0x80, 0x39, 0x9D, 0x79,
	0x80, 0x39, 0x9D, 0x79, 0x80, 0x39, 0x9D, 0x79, 0x80, 0x39, 0x9D, 0x79, 0x80, 0x39, 0x9D, 0x79,
	0x80, 0x39, 0x9D, 0x79, 0x80, 0x39, 0x9D, 0x79, 0x80, 0x39, 0x9D, 0x79, 0x80, 0x39, 0x9D, 0x79,
	0x80, 0x39, 0x9D, 0x79, 0x80, 0x39, 0x9D, 0x79, 0x80, 0x39, 0x9D, 0x79, 0x80, 0x39, 0x9D, 0x79,
	0x80, 0x39, 0x9D, 0x79, 0x80, 0x39, 0x9D, 0x79, 0x80, 0x39, 0x9D, 0x79, 0x80, 0x39, 0x9D, 0x79,
	0x80, 0x39, 0x9D, 0x79, 0x80, 0x39, 0x9D, 0xB8, 0x80, 0x39, 0x9D, 0xBB, 0x80, 0x39, 0x9D, 0xBE,
	0x80, 0x39, 0x9D, 0xC1, 0x80, 0x39, 0x9D, 0xC4, 0x80, 0x39, 0x9D, 0x79, 0x80, 0x39, 0x9D, 0x79,
	0x80, 0x39, 0x9D, 0x79, 0x80, 0x39, 0x9D, 0x79, 0x80, 0x39, 0x9D, 0x79, 0x80, 0x39, 0x9D, 0x79,
	0x80, 0x39, 0x9D, 0x79, 0x80, 0x39, 0x9D, 0x79, 0x80, 0x39, 0x9D, 0x79, 0x80, 0x39, 0x9D, 0x79,
	0x80, 0x39, 0x9D, 0x79, 0x80, 0x39, 0x9D, 0x79, 0x80, 0x39, 0x9D, 0x79, 0x80, 0x39, 0x9D, 0x79,
	0x80, 0x39, 0x9D, 0x79, 0x80, 0x39, 0x9D, 0x79, 0x80, 0x39, 0x9D, 0x79, 0x80, 0x39, 0x9D, 0x79,
	0x80, 0x39, 0x9D, 0x79, 0x80, 0x39, 0x9D, 0x79, 0x80, 0x39, 0x9D, 0x79, 0x80, 0x39, 0x9D, 0x79,
	0x80, 0x39, 0x9D, 0x79, 0x80, 0x39, 0x9D, 0x79, 0x80, 0x39, 0x9D, 0x79, 0x80, 0x39, 0x9D, 0x79,
	0x80, 0x39, 0x9D, 0x79, 0x80, 0x39, 0x9D, 0x79, 0x80, 0x39, 0x9D, 0x79, 0x80, 0x39, 0x9D, 0x79,
	0x80, 0x39, 0x9D, 0x79, 0x80, 0x39, 0x9D, 0x79, 0x80, 0x39, 0x9D, 0x79, 0x80, 0x39, 0x9D, 0x79,
	0x80, 0x39, 0x9D, 0x79,
};

/* 803C2268-803C236C 0104+00 rc=0 efc=0 .data      l_mojikata                                                   */
u8 l_mojikata[260] = {
	0x80, 0x39, 0x9D, 0xC7, 0x80, 0x39, 0x9D, 0xCA, 0x80, 0x39, 0x9D, 0xCD, 0x80, 0x39, 0x9D, 0xD0,
	0x80, 0x39, 0x9D, 0xD3, 0x80, 0x39, 0x9D, 0xD6, 0x80, 0x39, 0x9D, 0xD9, 0x80, 0x39, 0x9D, 0xDC,
	0x80, 0x39, 0x9D, 0xDF, 0x80, 0x39, 0x9D, 0xE2, 0x80, 0x39, 0x9D, 0xE5, 0x80, 0x39, 0x9D, 0xE8,
	0x80, 0x39, 0x9D, 0xEB, 0x80, 0x39, 0x9D, 0xEE, 0x80, 0x39, 0x9D, 0xF1, 0x80, 0x39, 0x9D, 0xF4,
	0x80, 0x39, 0x9D, 0xF7, 0x80, 0x39, 0x9D, 0xFA, 0x80, 0x39, 0x9D, 0xFD, 0x80, 0x39, 0x9E, 0x00,
	0x80, 0x39, 0x9E, 0x03, 0x80, 0x39, 0x9E, 0x06, 0x80, 0x39, 0x9E, 0x09, 0x80, 0x39, 0x9E, 0x0C,
	0x80, 0x39, 0x9E, 0x0F, 0x80, 0x39, 0x9E, 0x12, 0x80, 0x39, 0x9E, 0x15, 0x80, 0x39, 0x9E, 0x18,
	0x80, 0x39, 0x9E, 0x1B, 0x80, 0x39, 0x9E, 0x1E, 0x80, 0x39, 0x9E, 0x21, 0x80, 0x39, 0x9E, 0x24,
	0x80, 0x39, 0x9E, 0x27, 0x80, 0x39, 0x9E, 0x2A, 0x80, 0x39, 0x9E, 0x2D, 0x80, 0x39, 0x9E, 0x30,
	0x80, 0x39, 0x9D, 0x34, 0x80, 0x39, 0x9E, 0x33, 0x80, 0x39, 0x9D, 0x34, 0x80, 0x39, 0x9E, 0x36,
	0x80, 0x39, 0x9E, 0x39, 0x80, 0x39, 0x9E, 0x3C, 0x80, 0x39, 0x9E, 0x3F, 0x80, 0x39, 0x9E, 0x42,
	0x80, 0x39, 0x9E, 0x45, 0x80, 0x39, 0x9E, 0x48, 0x80, 0x39, 0x9D, 0x34, 0x80, 0x39, 0x9E, 0x4B,
	0x80, 0x39, 0x9D, 0x34, 0x80, 0x39, 0x9E, 0x4E, 0x80, 0x39, 0x9E, 0x51, 0x80, 0x39, 0x9E, 0x54,
	0x80, 0x39, 0x9E, 0x57, 0x80, 0x39, 0x9E, 0x5A, 0x80, 0x39, 0x9E, 0x5D, 0x80, 0x39, 0x9E, 0x60,
	0x80, 0x39, 0x9D, 0x34, 0x80, 0x39, 0x9E, 0x63, 0x80, 0x39, 0x9D, 0x34, 0x80, 0x39, 0x9E, 0x66,
	0x80, 0x39, 0x9E, 0x69, 0x80, 0x39, 0x9D, 0x34, 0x80, 0x39, 0x9D, 0x70, 0x80, 0x39, 0x9D, 0x73,
	0x80, 0x39, 0x9D, 0x76,
};

/* 803C236C-803C2470 0104+00 rc=0 efc=0 .data      l_mojikata2                                                  */
u8 l_mojikata2[260] = {
	0x80, 0x39, 0x9D, 0x79, 0x80, 0x39, 0x9D, 0x79, 0x80, 0x39, 0x9E, 0x6C, 0x80, 0x39, 0x9D, 0x79,
	0x80, 0x39, 0x9D, 0x79, 0x80, 0x39, 0x9E, 0x6F, 0x80, 0x39, 0x9E, 0x72, 0x80, 0x39, 0x9E, 0x75,
	0x80, 0x39, 0x9E, 0x78, 0x80, 0x39, 0x9E, 0x7B, 0x80, 0x39, 0x9E, 0x7E, 0x80, 0x39, 0x9E, 0x81,
	0x80, 0x39, 0x9E, 0x84, 0x80, 0x39, 0x9E, 0x87, 0x80, 0x39, 0x9E, 0x8A, 0x80, 0x39, 0x9E, 0x8D,
	0x80, 0x39, 0x9E, 0x90, 0x80, 0x39, 0x9E, 0x93, 0x80, 0x39, 0x9E, 0x96, 0x80, 0x39, 0x9E, 0x99,
	0x80, 0x39, 0x9D, 0x79, 0x80, 0x39, 0x9D, 0x79, 0x80, 0x39, 0x9D, 0x79, 0x80, 0x39, 0x9D, 0x79,
	0x80, 0x39, 0x9D, 0x79, 0x80, 0x39, 0x9E, 0x9C, 0x80, 0x39, 0x9E, 0x9F, 0x80, 0x39, 0x9E, 0xA2,
	0x80, 0x39, 0x9E, 0xA5, 0x80, 0x39, 0x9E, 0xA8, 0x80, 0x39, 0x9D, 0x79, 0x80, 0x39, 0x9D, 0x79,
	0x80, 0x39, 0x9D, 0x79, 0x80, 0x39, 0x9D, 0x79, 0x80, 0x39, 0x9D, 0x79, 0x80, 0x39, 0x9D, 0x79,
	0x80, 0x39, 0x9D, 0x79, 0x80, 0x39, 0x9D, 0x79, 0x80, 0x39, 0x9D, 0x79, 0x80, 0x39, 0x9D, 0x79,
	0x80, 0x39, 0x9D, 0x79, 0x80, 0x39, 0x9D, 0x79, 0x80, 0x39, 0x9D, 0x79, 0x80, 0x39, 0x9D, 0x79,
	0x80, 0x39, 0x9D, 0x79, 0x80, 0x39, 0x9D, 0x79, 0x80, 0x39, 0x9D, 0x79, 0x80, 0x39, 0x9D, 0x79,
	0x80, 0x39, 0x9D, 0x79, 0x80, 0x39, 0x9D, 0x79, 0x80, 0x39, 0x9D, 0x79, 0x80, 0x39, 0x9D, 0x79,
	0x80, 0x39, 0x9D, 0x79, 0x80, 0x39, 0x9D, 0x79, 0x80, 0x39, 0x9D, 0x79, 0x80, 0x39, 0x9D, 0x79,
	0x80, 0x39, 0x9D, 0x79, 0x80, 0x39, 0x9D, 0x79, 0x80, 0x39, 0x9D, 0x79, 0x80, 0x39, 0x9D, 0x79,
	0x80, 0x39, 0x9D, 0x79, 0x80, 0x39, 0x9D, 0x79, 0x80, 0x39, 0x9D, 0x79, 0x80, 0x39, 0x9D, 0x79,
	0x80, 0x39, 0x9D, 0x79,
};

/* 803C2470-803C2574 0104+00 rc=0 efc=0 .data      l_mojikata3                                                  */
u8 l_mojikata3[260] = {
	0x80, 0x39, 0x9D, 0x79, 0x80, 0x39, 0x9D, 0x79, 0x80, 0x39, 0x9D, 0x79, 0x80, 0x39, 0x9D, 0x79,
	0x80, 0x39, 0x9D, 0x79, 0x80, 0x39, 0x9D, 0x79, 0x80, 0x39, 0x9D, 0x79, 0x80, 0x39, 0x9D, 0x79,
	0x80, 0x39, 0x9D, 0x79, 0x80, 0x39, 0x9D, 0x79, 0x80, 0x39, 0x9D, 0x79, 0x80, 0x39, 0x9D, 0x79,
	0x80, 0x39, 0x9D, 0x79, 0x80, 0x39, 0x9D, 0x79, 0x80, 0x39, 0x9D, 0x79, 0x80, 0x39, 0x9D, 0x79,
	0x80, 0x39, 0x9D, 0x79, 0x80, 0x39, 0x9D, 0x79, 0x80, 0x39, 0x9D, 0x79, 0x80, 0x39, 0x9D, 0x79,
	0x80, 0x39, 0x9D, 0x79, 0x80, 0x39, 0x9D, 0x79, 0x80, 0x39, 0x9D, 0x79, 0x80, 0x39, 0x9D, 0x79,
	0x80, 0x39, 0x9D, 0x79, 0x80, 0x39, 0x9E, 0xAB, 0x80, 0x39, 0x9E, 0xAE, 0x80, 0x39, 0x9E, 0xB1,
	0x80, 0x39, 0x9E, 0xB4, 0x80, 0x39, 0x9E, 0xB7, 0x80, 0x39, 0x9D, 0x79, 0x80, 0x39, 0x9D, 0x79,
	0x80, 0x39, 0x9D, 0x79, 0x80, 0x39, 0x9D, 0x79, 0x80, 0x39, 0x9D, 0x79, 0x80, 0x39, 0x9D, 0x79,
	0x80, 0x39, 0x9D, 0x79, 0x80, 0x39, 0x9D, 0x79, 0x80, 0x39, 0x9D, 0x79, 0x80, 0x39, 0x9D, 0x79,
	0x80, 0x39, 0x9D, 0x79, 0x80, 0x39, 0x9D, 0x79, 0x80, 0x39, 0x9D, 0x79, 0x80, 0x39, 0x9D, 0x79,
	0x80, 0x39, 0x9D, 0x79, 0x80, 0x39, 0x9D, 0x79, 0x80, 0x39, 0x9D, 0x79, 0x80, 0x39, 0x9D, 0x79,
	0x80, 0x39, 0x9D, 0x79, 0x80, 0x39, 0x9D, 0x79, 0x80, 0x39, 0x9D, 0x79, 0x80, 0x39, 0x9D, 0x79,
	0x80, 0x39, 0x9D, 0x79, 0x80, 0x39, 0x9D, 0x79, 0x80, 0x39, 0x9D, 0x79, 0x80, 0x39, 0x9D, 0x79,
	0x80, 0x39, 0x9D, 0x79, 0x80, 0x39, 0x9D, 0x79, 0x80, 0x39, 0x9D, 0x79, 0x80, 0x39, 0x9D, 0x79,
	0x80, 0x39, 0x9D, 0x79, 0x80, 0x39, 0x9D, 0x79, 0x80, 0x39, 0x9D, 0x79, 0x80, 0x39, 0x9D, 0x79,
	0x80, 0x39, 0x9D, 0x79,
};

/* 803C2574-803C2678 0104+00 rc=0 efc=0 .data      l_mojiEisu                                                   */
u8 l_mojiEisu[260] = {
	0x80, 0x39, 0x9E, 0xBA, 0x80, 0x39, 0x9E, 0xBC, 0x80, 0x39, 0x9E, 0xBE, 0x80, 0x39, 0x9E, 0xC0,
	0x80, 0x39, 0x9E, 0xC2, 0x80, 0x39, 0x9E, 0xC4, 0x80, 0x39, 0x9E, 0xC6, 0x80, 0x39, 0x9E, 0xC8,
	0x80, 0x39, 0x9E, 0xCA, 0x80, 0x39, 0x9E, 0xCC, 0x80, 0x39, 0x9E, 0xCE, 0x80, 0x39, 0x9E, 0xD0,
	0x80, 0x39, 0x9E, 0xD2, 0x80, 0x39, 0x9E, 0xD4, 0x80, 0x39, 0x9E, 0xD6, 0x80, 0x39, 0x9E, 0xD8,
	0x80, 0x39, 0x9E, 0xDA, 0x80, 0x39, 0x9E, 0xDC, 0x80, 0x39, 0x9E, 0xDE, 0x80, 0x39, 0x9E, 0xE0,
	0x80, 0x39, 0x9E, 0xE2, 0x80, 0x39, 0x9E, 0xE4, 0x80, 0x39, 0x9E, 0xE6, 0x80, 0x39, 0x9E, 0xE8,
	0x80, 0x39, 0x9E, 0xEA, 0x80, 0x39, 0x9E, 0xEC, 0x80, 0x39, 0x9E, 0xEE, 0x80, 0x39, 0x9E, 0xF0,
	0x80, 0x39, 0x9E, 0xF2, 0x80, 0x39, 0x9E, 0xF4, 0x80, 0x39, 0x9E, 0xF6, 0x80, 0x39, 0x9E, 0xF8,
	0x80, 0x39, 0x9E, 0xFA, 0x80, 0x39, 0x9E, 0xFC, 0x80, 0x39, 0x9E, 0xFE, 0x80, 0x39, 0x9F, 0x00,
	0x80, 0x39, 0x9F, 0x02, 0x80, 0x39, 0x9F, 0x04, 0x80, 0x39, 0x9F, 0x06, 0x80, 0x39, 0x9F, 0x08,
	0x80, 0x39, 0x9F, 0x0A, 0x80, 0x39, 0x9F, 0x0C, 0x80, 0x39, 0x9F, 0x0E, 0x80, 0x39, 0x9F, 0x10,
	0x80, 0x39, 0x9F, 0x12, 0x80, 0x39, 0x9F, 0x14, 0x80, 0x39, 0x9F, 0x16, 0x80, 0x39, 0x9F, 0x18,
	0x80, 0x39, 0x9F, 0x1A, 0x80, 0x39, 0x9F, 0x1C, 0x80, 0x39, 0x9F, 0x1E, 0x80, 0x39, 0x9F, 0x20,
	0x80, 0x39, 0x9F, 0x22, 0x80, 0x39, 0x9F, 0x24, 0x80, 0x39, 0x9F, 0x26, 0x80, 0x39, 0x9F, 0x28,
	0x80, 0x39, 0x9F, 0x2A, 0x80, 0x39, 0x9F, 0x2C, 0x80, 0x39, 0x9F, 0x2E, 0x80, 0x39, 0x9F, 0x30,
	0x80, 0x39, 0x9F, 0x32, 0x80, 0x39, 0x9F, 0x34, 0x80, 0x39, 0x9F, 0x36, 0x80, 0x39, 0x9F, 0x38,
	0x80, 0x39, 0x9F, 0x3A,
};

/* 803C2678-803C2684 000C+00 rc=0 efc=0 .data      @3825                                                        */
void* d_d_name__lit_3825[3] = {
	NULL,
	(void*)0xFFFFFFFF,
	(void*)MojiSelect__7dName_cFv,
};

/* 803C2684-803C2690 000C+00 rc=0 efc=0 .data      @3826                                                        */
void* d_d_name__lit_3826[3] = {
	NULL,
	(void*)0xFFFFFFFF,
	(void*)MojiSelectAnm__7dName_cFv,
};

/* 803C2690-803C269C 000C+00 rc=0 efc=0 .data      @3827                                                        */
void* d_d_name__lit_3827[3] = {
	NULL,
	(void*)0xFFFFFFFF,
	(void*)MojiSelectAnm2__7dName_cFv,
};

/* 803C269C-803C26A8 000C+00 rc=0 efc=0 .data      @3828                                                        */
void* d_d_name__lit_3828[3] = {
	NULL,
	(void*)0xFFFFFFFF,
	(void*)MojiSelectAnm3__7dName_cFv,
};

/* 803C26A8-803C26B4 000C+00 rc=0 efc=0 .data      @3829                                                        */
void* d_d_name__lit_3829[3] = {
	NULL,
	(void*)0xFFFFFFFF,
	(void*)MenuSelect__7dName_cFv,
};

/* 803C26B4-803C26C0 000C+00 rc=0 efc=0 .data      @3830                                                        */
void* d_d_name__lit_3830[3] = {
	NULL,
	(void*)0xFFFFFFFF,
	(void*)MenuSelectAnm__7dName_cFv,
};

/* 803C26C0-803C26CC 000C+00 rc=0 efc=0 .data      @3831                                                        */
void* d_d_name__lit_3831[3] = {
	NULL,
	(void*)0xFFFFFFFF,
	(void*)MenuSelectAnm2__7dName_cFv,
};

/* 803C26CC-803C26D8 000C+00 rc=0 efc=0 .data      @3832                                                        */
void* d_d_name__lit_3832[3] = {
	NULL,
	(void*)0xFFFFFFFF,
	(void*)MenuSelectAnm3__7dName_cFv,
};

/* 803C26D8-803C26E4 000C+00 rc=0 efc=0 .data      @3833                                                        */
void* d_d_name__lit_3833[3] = {
	NULL,
	(void*)0xFFFFFFFF,
	(void*)Wait__7dName_cFv,
};

/* 803C26E4-803C2750 006C+00 rc=1 efc=0 .data      SelProc                                                      */
u8 SelProc[108] = {
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
};

/* 803C2750-803C2788 0034+04 rc=1 efc=0 .data      @4121                                                        */
void* d_d_name__lit_4121[14] = {
	(void*)(((char*)mojiChange__7dName_cFUc)+0x8C),
	(void*)(((char*)mojiChange__7dName_cFUc)+0x130),
	(void*)(((char*)mojiChange__7dName_cFUc)+0x170),
	(void*)(((char*)mojiChange__7dName_cFUc)+0x1B0),
	(void*)(((char*)mojiChange__7dName_cFUc)+0x358),
	(void*)(((char*)mojiChange__7dName_cFUc)+0x2D4),
	(void*)(((char*)mojiChange__7dName_cFUc)+0x358),
	(void*)(((char*)mojiChange__7dName_cFUc)+0x31C),
	(void*)(((char*)mojiChange__7dName_cFUc)+0x358),
	(void*)(((char*)mojiChange__7dName_cFUc)+0x358),
	(void*)(((char*)mojiChange__7dName_cFUc)+0x8C),
	(void*)(((char*)mojiChange__7dName_cFUc)+0x31C),
	(void*)(((char*)mojiChange__7dName_cFUc)+0x1B0),
	/* padding */
	NULL,
};

/* 803C2788-803C27C8 0040+00 rc=0 efc=0 .data      l_cur0TagName$4610                                           */
u8 data_803C2788[64] = {
	0x00, 0x00, 0x00, 0x00, 0x73, 0x5F, 0x30, 0x30, 0x00, 0x00, 0x00, 0x00, 0x73, 0x5F, 0x30, 0x31,
	0x00, 0x00, 0x00, 0x00, 0x73, 0x5F, 0x30, 0x32, 0x00, 0x00, 0x00, 0x00, 0x73, 0x5F, 0x30, 0x33,
	0x00, 0x00, 0x00, 0x00, 0x73, 0x5F, 0x30, 0x34, 0x00, 0x00, 0x00, 0x00, 0x73, 0x5F, 0x30, 0x35,
	0x00, 0x00, 0x00, 0x00, 0x73, 0x5F, 0x30, 0x36, 0x00, 0x00, 0x00, 0x00, 0x73, 0x5F, 0x30, 0x37,
};

/* 803C27C8-803C2808 0040+00 rc=0 efc=0 .data      l_cur1TagName$4611                                           */
u8 data_803C27C8[64] = {
	0x00, 0x00, 0x00, 0x00, 0x73, 0x5F, 0x30, 0x72, 0x00, 0x00, 0x00, 0x73, 0x5F, 0x30, 0x31, 0x72,
	0x00, 0x00, 0x00, 0x73, 0x5F, 0x30, 0x32, 0x72, 0x00, 0x00, 0x00, 0x73, 0x5F, 0x30, 0x33, 0x72,
	0x00, 0x00, 0x00, 0x73, 0x5F, 0x30, 0x34, 0x72, 0x00, 0x00, 0x00, 0x73, 0x5F, 0x30, 0x35, 0x72,
	0x00, 0x00, 0x00, 0x73, 0x5F, 0x30, 0x36, 0x72, 0x00, 0x00, 0x00, 0x73, 0x5F, 0x30, 0x37, 0x72,
};

/* 803C2808-803C2828 0020+00 rc=0 efc=0 .data      l_menu_icon_tag$4617                                         */
u8 data_803C2808[32] = {
	0x00, 0x70, 0x5F, 0x41, 0x42, 0x43, 0x5F, 0x6E, 0x00, 0x70, 0x5F, 0x61, 0x62, 0x63, 0x5F, 0x6E,
	0x6A, 0x5F, 0x65, 0x69, 0x67, 0x6F, 0x5F, 0x6E, 0x00, 0x70, 0x5F, 0x65, 0x6E, 0x64, 0x5F, 0x6E,
};

/* 803C2828-803C28A0 0078+00 rc=0 efc=0 .data      l_menu_tag$4618                                              */
u8 data_803C2828[120] = {
	0x00, 0x70, 0x5F, 0x41, 0x42, 0x43, 0x5F, 0x30, 0x00, 0x70, 0x5F, 0x41, 0x42, 0x43, 0x5F, 0x31,
	0x00, 0x70, 0x5F, 0x41, 0x42, 0x43, 0x5F, 0x32, 0x00, 0x70, 0x5F, 0x61, 0x62, 0x63, 0x5F, 0x30,
	0x00, 0x70, 0x5F, 0x61, 0x62, 0x63, 0x5F, 0x31, 0x00, 0x70, 0x5F, 0x61, 0x62, 0x63, 0x5F, 0x32,
	0x6D, 0x5F, 0x65, 0x69, 0x67, 0x6F, 0x5F, 0x30, 0x6D, 0x5F, 0x65, 0x69, 0x67, 0x6F, 0x5F, 0x31,
	0x6D, 0x5F, 0x65, 0x69, 0x67, 0x6F, 0x5F, 0x32, 0x00, 0x70, 0x5F, 0x65, 0x6E, 0x64, 0x5F, 0x30,
	0x00, 0x70, 0x5F, 0x65, 0x6E, 0x64, 0x5F, 0x31, 0x00, 0x70, 0x5F, 0x65, 0x6E, 0x64, 0x5F, 0x32,
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
};

/* 803C28A0-803C28B0 0010+00 rc=0 efc=0 .data      l_menu_msg$4619                                              */
u8 data_803C28A0[16] = {
	0x00, 0x00, 0x03, 0x8B, 0x00, 0x00, 0x03, 0x8C, 0x00, 0x00, 0x03, 0x88, 0x00, 0x00, 0x03, 0x8E,
};

/* 803C28B0-803C2AB8 0208+00 rc=0 efc=0 .data      l_tagName$4635                                               */
u8 data_803C28B0[520] = {
	0x00, 0x00, 0x6D, 0x5F, 0x30, 0x30, 0x5F, 0x30, 0x00, 0x00, 0x6D, 0x5F, 0x30, 0x30, 0x5F, 0x31,
	0x00, 0x00, 0x6D, 0x5F, 0x30, 0x30, 0x5F, 0x32, 0x00, 0x00, 0x6D, 0x5F, 0x30, 0x30, 0x5F, 0x33,
	0x00, 0x00, 0x6D, 0x5F, 0x30, 0x30, 0x5F, 0x34, 0x00, 0x00, 0x6D, 0x5F, 0x30, 0x31, 0x5F, 0x30,
	0x00, 0x00, 0x6D, 0x5F, 0x30, 0x31, 0x5F, 0x31, 0x00, 0x00, 0x6D, 0x5F, 0x30, 0x31, 0x5F, 0x32,
	0x00, 0x00, 0x6D, 0x5F, 0x30, 0x31, 0x5F, 0x33, 0x00, 0x00, 0x6D, 0x5F, 0x30, 0x31, 0x5F, 0x34,
	0x00, 0x00, 0x6D, 0x5F, 0x30, 0x32, 0x5F, 0x30, 0x00, 0x00, 0x6D, 0x5F, 0x30, 0x32, 0x5F, 0x31,
	0x00, 0x00, 0x6D, 0x5F, 0x30, 0x32, 0x5F, 0x32, 0x00, 0x00, 0x6D, 0x5F, 0x30, 0x32, 0x5F, 0x33,
	0x00, 0x00, 0x6D, 0x5F, 0x30, 0x32, 0x5F, 0x34, 0x00, 0x00, 0x00, 0x6D, 0x30, 0x33, 0x5F, 0x30,
	0x00, 0x00, 0x00, 0x6D, 0x30, 0x33, 0x5F, 0x31, 0x00, 0x00, 0x00, 0x6D, 0x30, 0x33, 0x5F, 0x32,
	0x00, 0x00, 0x00, 0x6D, 0x30, 0x33, 0x5F, 0x33, 0x00, 0x00, 0x00, 0x6D, 0x30, 0x33, 0x5F, 0x34,
	0x00, 0x00, 0x6D, 0x5F, 0x30, 0x34, 0x5F, 0x30, 0x00, 0x00, 0x6D, 0x5F, 0x30, 0x34, 0x5F, 0x31,
	0x00, 0x00, 0x6D, 0x5F, 0x30, 0x34, 0x5F, 0x32, 0x00, 0x00, 0x6D, 0x5F, 0x30, 0x34, 0x5F, 0x33,
	0x00, 0x00, 0x6D, 0x5F, 0x30, 0x34, 0x5F, 0x34, 0x00, 0x00, 0x6D, 0x5F, 0x30, 0x35, 0x5F, 0x30,
	0x00, 0x00, 0x6D, 0x5F, 0x30, 0x35, 0x5F, 0x31, 0x00, 0x00, 0x6D, 0x5F, 0x30, 0x35, 0x5F, 0x32,
	0x00, 0x00, 0x6D, 0x5F, 0x30, 0x35, 0x5F, 0x33, 0x00, 0x00, 0x6D, 0x5F, 0x30, 0x35, 0x5F, 0x34,
	0x00, 0x00, 0x6D, 0x5F, 0x30, 0x36, 0x5F, 0x30, 0x00, 0x00, 0x6D, 0x5F, 0x30, 0x36, 0x5F, 0x31,
	0x00, 0x00, 0x6D, 0x5F, 0x30, 0x36, 0x5F, 0x32, 0x00, 0x00, 0x6D, 0x5F, 0x30, 0x36, 0x5F, 0x33,
	0x00, 0x00, 0x6D, 0x5F, 0x30, 0x36, 0x5F, 0x34, 0x00, 0x00, 0x6D, 0x5F, 0x30, 0x37, 0x5F, 0x30,
	0x00, 0x00, 0x6D, 0x5F, 0x30, 0x37, 0x5F, 0x31, 0x00, 0x00, 0x6D, 0x5F, 0x30, 0x37, 0x5F, 0x32,
	0x00, 0x00, 0x6D, 0x5F, 0x30, 0x37, 0x5F, 0x33, 0x00, 0x00, 0x6D, 0x5F, 0x30, 0x37, 0x5F, 0x34,
	0x00, 0x00, 0x6D, 0x5F, 0x30, 0x38, 0x5F, 0x30, 0x00, 0x00, 0x6D, 0x5F, 0x30, 0x38, 0x5F, 0x31,
	0x00, 0x00, 0x6D, 0x5F, 0x30, 0x38, 0x5F, 0x32, 0x00, 0x00, 0x6D, 0x5F, 0x30, 0x38, 0x5F, 0x33,
	0x00, 0x00, 0x6D, 0x5F, 0x30, 0x38, 0x5F, 0x34, 0x00, 0x00, 0x6D, 0x5F, 0x30, 0x39, 0x5F, 0x30,
	0x00, 0x00, 0x6D, 0x5F, 0x30, 0x39, 0x5F, 0x31, 0x00, 0x00, 0x6D, 0x5F, 0x30, 0x39, 0x5F, 0x32,
	0x00, 0x00, 0x6D, 0x5F, 0x30, 0x39, 0x5F, 0x33, 0x00, 0x00, 0x6D, 0x5F, 0x30, 0x39, 0x5F, 0x34,
	0x00, 0x00, 0x6D, 0x5F, 0x31, 0x30, 0x5F, 0x30, 0x00, 0x00, 0x6D, 0x5F, 0x31, 0x30, 0x5F, 0x31,
	0x00, 0x00, 0x6D, 0x5F, 0x31, 0x30, 0x5F, 0x32, 0x00, 0x00, 0x6D, 0x5F, 0x31, 0x30, 0x5F, 0x33,
	0x00, 0x00, 0x6D, 0x5F, 0x31, 0x30, 0x5F, 0x34, 0x00, 0x00, 0x6D, 0x5F, 0x31, 0x31, 0x5F, 0x30,
	0x00, 0x00, 0x6D, 0x5F, 0x31, 0x31, 0x5F, 0x31, 0x00, 0x00, 0x6D, 0x5F, 0x31, 0x31, 0x5F, 0x32,
	0x00, 0x00, 0x6D, 0x5F, 0x31, 0x31, 0x5F, 0x33, 0x00, 0x00, 0x6D, 0x5F, 0x31, 0x31, 0x5F, 0x34,
	0x00, 0x00, 0x00, 0x6D, 0x31, 0x32, 0x5F, 0x30, 0x00, 0x00, 0x00, 0x6D, 0x31, 0x32, 0x5F, 0x31,
	0x00, 0x00, 0x00, 0x6D, 0x31, 0x32, 0x5F, 0x32, 0x00, 0x00, 0x00, 0x6D, 0x31, 0x32, 0x5F, 0x33,
	0x00, 0x00, 0x00, 0x6D, 0x31, 0x32, 0x5F, 0x34,
};

/* 803C2AB8-803C2AF8 0040+00 rc=0 efc=0 .data      l_nameTagName$4642                                           */
u8 data_803C2AB8[64] = {
	0x00, 0x6E, 0x61, 0x6D, 0x65, 0x5F, 0x30, 0x30, 0x00, 0x6E, 0x61, 0x6D, 0x65, 0x5F, 0x30, 0x31,
	0x00, 0x6E, 0x61, 0x6D, 0x65, 0x5F, 0x30, 0x32, 0x00, 0x6E, 0x61, 0x6D, 0x65, 0x5F, 0x30, 0x33,
	0x00, 0x6E, 0x61, 0x6D, 0x65, 0x5F, 0x30, 0x34, 0x00, 0x6E, 0x61, 0x6D, 0x65, 0x5F, 0x30, 0x35,
	0x00, 0x6E, 0x61, 0x6D, 0x65, 0x5F, 0x30, 0x36, 0x00, 0x6E, 0x61, 0x6D, 0x65, 0x5F, 0x30, 0x37,
};

/* 803C2AF8-803C2B38 0040+00 rc=0 efc=0 .data      l_nameCurTagName$4643                                        */
u8 data_803C2AF8[64] = {
	0x00, 0x73, 0x5F, 0x5F, 0x6E, 0x5F, 0x30, 0x30, 0x00, 0x73, 0x5F, 0x5F, 0x6E, 0x5F, 0x30, 0x31,
	0x00, 0x73, 0x5F, 0x5F, 0x6E, 0x5F, 0x30, 0x32, 0x00, 0x73, 0x5F, 0x5F, 0x6E, 0x5F, 0x30, 0x33,
	0x00, 0x73, 0x5F, 0x5F, 0x6E, 0x5F, 0x30, 0x34, 0x00, 0x73, 0x5F, 0x5F, 0x6E, 0x5F, 0x30, 0x35,
	0x00, 0x73, 0x5F, 0x5F, 0x6E, 0x5F, 0x30, 0x36, 0x00, 0x73, 0x5F, 0x5F, 0x6E, 0x5F, 0x30, 0x37,
};

/* 803C2B38-803C2B64 0010+1C rc=3 efc=0 .data      __vt__14dDlst_NameIN_c                                       */
void* const __vt__14dDlst_NameIN_c[11] = {
	NULL, /* RTTI */
	NULL,
	(void*)draw__14dDlst_NameIN_cFv,
	(void*)__dt__14dDlst_NameIN_cFv,
	/* padding */
	NULL,
	NULL,
	NULL,
	NULL,
	NULL,
	NULL,
	NULL,
};

/* 803C2B64-803C2B7C 000C+0C rc=2 efc=0 .data      __vt__7dName_c                                               */
void* const __vt__7dName_c[6] = {
	NULL, /* RTTI */
	NULL,
	(void*)__dt__7dName_cFv,
	/* padding */
	NULL,
	NULL,
	NULL,
};

/* 803C2B7C-803C2B88 000C+00 rc=2 efc=0 .data      __vt__9dNm_HIO_c                                             */
void* const __vt__9dNm_HIO_c[3] = {
	NULL, /* RTTI */
	NULL,
	(void*)__dt__9dNm_HIO_cFv,
};

/* 80454DB0-80454DB4 0004+00 rc=1 efc=0 .sdata2    @3665                                                        */
f32 d_d_name__lit_3665 = 13.0f / 10.0f;

/* 80454DB4-80454DB8 0004+00 rc=1 efc=0 .sdata2    @3666                                                        */
f32 d_d_name__lit_3666 = 7.0f / 5.0f;

/* 8024E3E0-8024E408 0028+00 rc=1 efc=0 .text      __ct__9dNm_HIO_cFv                                           */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm dNm_HIO_c::dNm_HIO_c() {
	nofralloc
#include "asm/d/d_name/__ct__9dNm_HIO_cFv.s"
}
#pragma pop


/* 8024E408-8024E468 0060+00 rc=1 efc=1 .text      __ct__7dName_cFP7J2DPane                                     */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm dName_c::dName_c(J2DPane* field_0) {
	nofralloc
#include "asm/d/d_name/__ct__7dName_cFP7J2DPane.s"
}
#pragma pop


/* 8024E468-8024E62C 01C4+00 rc=1 efc=0 .text      __dt__7dName_cFv                                             */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm dName_c::~dName_c() {
	nofralloc
#include "asm/d/d_name/__dt__7dName_cFv.s"
}
#pragma pop


/* ############################################################################################## */
/* 80430728-80430734 000C+00 rc=1 efc=0 .bss       @3660                                                        */
u8 lit_3660[12];

/* 80430734-80430748 0014+00 rc=9 efc=0 .bss       g_nmHIO                                                      */
u8 g_nmHIO[20];

/* 80454DB8-80454DBC 0004+00 rc=1 efc=0 .sdata2    @3755                                                        */
f32 d_d_name__lit_3755 = 9.0f / 10.0f;

/* 80454DBC-80454DC0 0004+00 rc=1 efc=0 .sdata2    @3756                                                        */
f32 d_d_name__lit_3756 = 0.5f;

/* 8024E62C-8024E6D4 00A8+00 rc=1 efc=0 .text      _create__7dName_cFv                                          */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void dName_c::_create() {
	nofralloc
#include "asm/d/d_name/_create__7dName_cFv.s"
}
#pragma pop


/* 8024E6D4-8024E7A4 00D0+00 rc=1 efc=0 .text      init__7dName_cFv                                             */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void dName_c::init() {
	nofralloc
#include "asm/d/d_name/init__7dName_cFv.s"
}
#pragma pop


/* 8024E7A4-8024E7EC 0048+00 rc=4 efc=4 .text      initial__7dName_cFv                                          */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void dName_c::initial() {
	nofralloc
#include "asm/d/d_name/initial__7dName_cFv.s"
}
#pragma pop


/* ############################################################################################## */
/* 80454DC0-80454DC4 0004+00 rc=16 efc=0 .sdata2    @3820                                                        */
f32 d_d_name__lit_3820 = 1.0f;

/* 8024E7EC-8024E9A0 01B4+00 rc=2 efc=2 .text      showIcon__7dName_cFv                                         */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void dName_c::showIcon() {
	nofralloc
#include "asm/d/d_name/showIcon__7dName_cFv.s"
}
#pragma pop


/* ############################################################################################## */
/* 80454DC4-80454DC8 0004+00 rc=6 efc=0 .sdata2    @3886                                                        */
f32 d_d_name__lit_3886 = -1.0f;

/* 8024E9A0-8024EC10 0270+00 rc=2 efc=2 .text      _move__7dName_cFv                                            */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void dName_c::_move() {
	nofralloc
#include "asm/d/d_name/_move__7dName_cFv.s"
}
#pragma pop


/* 8024EC10-8024EC4C 003C+00 rc=3 efc=0 .text      nameCheck__7dName_cFv                                        */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void dName_c::nameCheck() {
	nofralloc
#include "asm/d/d_name/nameCheck__7dName_cFv.s"
}
#pragma pop


/* 8024EC4C-8024EC84 0038+00 rc=1 efc=0 .text      playNameSet__7dName_cFi                                      */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void dName_c::playNameSet(int field_0) {
	nofralloc
#include "asm/d/d_name/playNameSet__7dName_cFi.s"
}
#pragma pop


/* ############################################################################################## */
/* 80454DC8-80454DD0 0008+00 rc=1 efc=0 .sdata2    @3936                                                        */
f64 d_d_name__lit_3936 = 4503601774854144.0 /* cast s32 to float */;

/* 8024EC84-8024ED48 00C4+00 rc=1 efc=0 .text      cursorAnm__7dName_cFv                                        */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void dName_c::cursorAnm() {
	nofralloc
#include "asm/d/d_name/cursorAnm__7dName_cFv.s"
}
#pragma pop


/* 8024ED48-8024ED4C 0004+00 rc=1 efc=0 .text      Wait__7dName_cFv                                             */
void dName_c::Wait() {
	/* empty function */
}


/* 8024ED4C-8024F034 02E8+00 rc=1 efc=0 .text      MojiSelect__7dName_cFv                                       */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void dName_c::MojiSelect() {
	nofralloc
#include "asm/d/d_name/MojiSelect__7dName_cFv.s"
}
#pragma pop


/* ############################################################################################## */
/* 80454DD0-80454DD4 0004+00 rc=5 efc=0 .sdata2    @4009                                                        */
u8 d_d_name__lit_4009[4] = {
	0x00, 0x00, 0x00, 0x00,
};

/* 8024F034-8024F0E0 00AC+00 rc=2 efc=0 .text      MojiSelectAnmInit__7dName_cFv                                */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void dName_c::MojiSelectAnmInit() {
	nofralloc
#include "asm/d/d_name/MojiSelectAnmInit__7dName_cFv.s"
}
#pragma pop


/* 8024F0E0-8024F164 0084+00 rc=1 efc=0 .text      MojiSelectAnm__7dName_cFv                                    */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void dName_c::MojiSelectAnm() {
	nofralloc
#include "asm/d/d_name/MojiSelectAnm__7dName_cFv.s"
}
#pragma pop


/* 8024F164-8024F1E8 0084+00 rc=1 efc=0 .text      MojiSelectAnm2__7dName_cFv                                   */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void dName_c::MojiSelectAnm2() {
	nofralloc
#include "asm/d/d_name/MojiSelectAnm2__7dName_cFv.s"
}
#pragma pop


/* 8024F1E8-8024F1EC 0004+00 rc=1 efc=0 .text      MojiSelectAnm3__7dName_cFv                                   */
void dName_c::MojiSelectAnm3() {
	/* empty function */
}


/* 8024F1EC-8024F55C 0370+00 rc=1 efc=0 .text      mojiChange__7dName_cFUc                                      */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void dName_c::mojiChange(u8 field_0) {
	nofralloc
#include "asm/d/d_name/mojiChange__7dName_cFUc.s"
}
#pragma pop


/* 8024F55C-8024F59C 0040+00 rc=1 efc=0 .text      selectMojiSet__7dName_cFv                                    */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void dName_c::selectMojiSet() {
	nofralloc
#include "asm/d/d_name/selectMojiSet__7dName_cFv.s"
}
#pragma pop


/* 8024F59C-8024F634 0098+00 rc=1 efc=0 .text      getMoji__7dName_cFv                                          */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void dName_c::getMoji() {
	nofralloc
#include "asm/d/d_name/getMoji__7dName_cFv.s"
}
#pragma pop


/* 8024F634-8024F88C 0258+00 rc=1 efc=0 .text      setMoji__7dName_cFi                                          */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void dName_c::setMoji(int field_0) {
	nofralloc
#include "asm/d/d_name/setMoji__7dName_cFi.s"
}
#pragma pop


/* ############################################################################################## */
/* 80399CC8-80399FE0 0314+04 rc=4 efc=0 .rodata    @stringBase0                                                 */
#pragma push
#pragma force_active on
#pragma section ".dead"
SECTION_DEAD char* const stringBase_80399CC8 = "あ";
SECTION_DEAD char* const stringBase_80399CCB = "い";
SECTION_DEAD char* const stringBase_80399CCE = "う";
SECTION_DEAD char* const stringBase_80399CD1 = "え";
SECTION_DEAD char* const stringBase_80399CD4 = "お";
SECTION_DEAD char* const stringBase_80399CD7 = "か";
SECTION_DEAD char* const stringBase_80399CDA = "き";
SECTION_DEAD char* const stringBase_80399CDD = "く";
SECTION_DEAD char* const stringBase_80399CE0 = "け";
SECTION_DEAD char* const stringBase_80399CE3 = "こ";
SECTION_DEAD char* const stringBase_80399CE6 = "さ";
SECTION_DEAD char* const stringBase_80399CE9 = "し";
SECTION_DEAD char* const stringBase_80399CEC = "す";
SECTION_DEAD char* const stringBase_80399CEF = "せ";
SECTION_DEAD char* const stringBase_80399CF2 = "そ";
SECTION_DEAD char* const stringBase_80399CF5 = "た";
SECTION_DEAD char* const stringBase_80399CF8 = "ち";
SECTION_DEAD char* const stringBase_80399CFB = "つ";
SECTION_DEAD char* const stringBase_80399CFE = "て";
SECTION_DEAD char* const stringBase_80399D01 = "と";
SECTION_DEAD char* const stringBase_80399D04 = "な";
SECTION_DEAD char* const stringBase_80399D07 = "に";
SECTION_DEAD char* const stringBase_80399D0A = "ぬ";
SECTION_DEAD char* const stringBase_80399D0D = "ね";
SECTION_DEAD char* const stringBase_80399D10 = "の";
SECTION_DEAD char* const stringBase_80399D13 = "は";
SECTION_DEAD char* const stringBase_80399D16 = "ひ";
SECTION_DEAD char* const stringBase_80399D19 = "ふ";
SECTION_DEAD char* const stringBase_80399D1C = "へ";
SECTION_DEAD char* const stringBase_80399D1F = "ほ";
SECTION_DEAD char* const stringBase_80399D22 = "ま";
SECTION_DEAD char* const stringBase_80399D25 = "み";
SECTION_DEAD char* const stringBase_80399D28 = "む";
SECTION_DEAD char* const stringBase_80399D2B = "め";
SECTION_DEAD char* const stringBase_80399D2E = "も";
SECTION_DEAD char* const stringBase_80399D31 = "や";
SECTION_DEAD char* const stringBase_80399D34 = "　";
SECTION_DEAD char* const stringBase_80399D37 = "ゆ";
SECTION_DEAD char* const stringBase_80399D3A = "よ";
SECTION_DEAD char* const stringBase_80399D3D = "ら";
SECTION_DEAD char* const stringBase_80399D40 = "り";
SECTION_DEAD char* const stringBase_80399D43 = "る";
SECTION_DEAD char* const stringBase_80399D46 = "れ";
SECTION_DEAD char* const stringBase_80399D49 = "ろ";
SECTION_DEAD char* const stringBase_80399D4C = "わ";
SECTION_DEAD char* const stringBase_80399D4F = "を";
SECTION_DEAD char* const stringBase_80399D52 = "ん";
SECTION_DEAD char* const stringBase_80399D55 = "ぁ";
SECTION_DEAD char* const stringBase_80399D58 = "ぃ";
SECTION_DEAD char* const stringBase_80399D5B = "ぅ";
SECTION_DEAD char* const stringBase_80399D5E = "ぇ";
SECTION_DEAD char* const stringBase_80399D61 = "ぉ";
SECTION_DEAD char* const stringBase_80399D64 = "ゃ";
SECTION_DEAD char* const stringBase_80399D67 = "ゅ";
SECTION_DEAD char* const stringBase_80399D6A = "ょ";
SECTION_DEAD char* const stringBase_80399D6D = "っ";
SECTION_DEAD char* const stringBase_80399D70 = "ー";
SECTION_DEAD char* const stringBase_80399D73 = "゛";
SECTION_DEAD char* const stringBase_80399D76 = "゜";
SECTION_DEAD char* const stringBase_80399D79 = "￥";
SECTION_DEAD char* const stringBase_80399D7C = "が";
SECTION_DEAD char* const stringBase_80399D7F = "ぎ";
SECTION_DEAD char* const stringBase_80399D82 = "ぐ";
SECTION_DEAD char* const stringBase_80399D85 = "げ";
SECTION_DEAD char* const stringBase_80399D88 = "ご";
SECTION_DEAD char* const stringBase_80399D8B = "ざ";
SECTION_DEAD char* const stringBase_80399D8E = "じ";
SECTION_DEAD char* const stringBase_80399D91 = "ず";
SECTION_DEAD char* const stringBase_80399D94 = "ぜ";
SECTION_DEAD char* const stringBase_80399D97 = "ぞ";
SECTION_DEAD char* const stringBase_80399D9A = "だ";
SECTION_DEAD char* const stringBase_80399D9D = "ぢ";
SECTION_DEAD char* const stringBase_80399DA0 = "づ";
SECTION_DEAD char* const stringBase_80399DA3 = "で";
SECTION_DEAD char* const stringBase_80399DA6 = "ど";
SECTION_DEAD char* const stringBase_80399DA9 = "ば";
SECTION_DEAD char* const stringBase_80399DAC = "び";
SECTION_DEAD char* const stringBase_80399DAF = "ぶ";
SECTION_DEAD char* const stringBase_80399DB2 = "べ";
SECTION_DEAD char* const stringBase_80399DB5 = "ぼ";
SECTION_DEAD char* const stringBase_80399DB8 = "ぱ";
SECTION_DEAD char* const stringBase_80399DBB = "ぴ";
SECTION_DEAD char* const stringBase_80399DBE = "ぷ";
SECTION_DEAD char* const stringBase_80399DC1 = "ぺ";
SECTION_DEAD char* const stringBase_80399DC4 = "ぽ";
SECTION_DEAD char* const stringBase_80399DC7 = "ア";
SECTION_DEAD char* const stringBase_80399DCA = "イ";
SECTION_DEAD char* const stringBase_80399DCD = "ウ";
SECTION_DEAD char* const stringBase_80399DD0 = "エ";
SECTION_DEAD char* const stringBase_80399DD3 = "オ";
SECTION_DEAD char* const stringBase_80399DD6 = "カ";
SECTION_DEAD char* const stringBase_80399DD9 = "キ";
SECTION_DEAD char* const stringBase_80399DDC = "ク";
SECTION_DEAD char* const stringBase_80399DDF = "ケ";
SECTION_DEAD char* const stringBase_80399DE2 = "コ";
SECTION_DEAD char* const stringBase_80399DE5 = "サ";
SECTION_DEAD char* const stringBase_80399DE8 = "シ";
SECTION_DEAD char* const stringBase_80399DEB = "ス";
SECTION_DEAD char* const stringBase_80399DEE = "セ";
// MWCC ignores mapping of some japanese characters using the 
// byte 0x5C (ASCII '\'). This is why this string is hex-encoded.
SECTION_DEAD char* const stringBase_80399DF1 = "\x83\x5C";
SECTION_DEAD char* const stringBase_80399DF4 = "タ";
SECTION_DEAD char* const stringBase_80399DF7 = "チ";
SECTION_DEAD char* const stringBase_80399DFA = "ツ";
SECTION_DEAD char* const stringBase_80399DFD = "テ";
SECTION_DEAD char* const stringBase_80399E00 = "ト";
SECTION_DEAD char* const stringBase_80399E03 = "ナ";
SECTION_DEAD char* const stringBase_80399E06 = "ニ";
SECTION_DEAD char* const stringBase_80399E09 = "ヌ";
SECTION_DEAD char* const stringBase_80399E0C = "ネ";
SECTION_DEAD char* const stringBase_80399E0F = "ノ";
SECTION_DEAD char* const stringBase_80399E12 = "ハ";
SECTION_DEAD char* const stringBase_80399E15 = "ヒ";
SECTION_DEAD char* const stringBase_80399E18 = "フ";
SECTION_DEAD char* const stringBase_80399E1B = "ヘ";
SECTION_DEAD char* const stringBase_80399E1E = "ホ";
SECTION_DEAD char* const stringBase_80399E21 = "マ";
SECTION_DEAD char* const stringBase_80399E24 = "ミ";
SECTION_DEAD char* const stringBase_80399E27 = "ム";
SECTION_DEAD char* const stringBase_80399E2A = "メ";
SECTION_DEAD char* const stringBase_80399E2D = "モ";
SECTION_DEAD char* const stringBase_80399E30 = "ヤ";
SECTION_DEAD char* const stringBase_80399E33 = "ユ";
SECTION_DEAD char* const stringBase_80399E36 = "ヨ";
SECTION_DEAD char* const stringBase_80399E39 = "ラ";
SECTION_DEAD char* const stringBase_80399E3C = "リ";
SECTION_DEAD char* const stringBase_80399E3F = "ル";
SECTION_DEAD char* const stringBase_80399E42 = "レ";
SECTION_DEAD char* const stringBase_80399E45 = "ロ";
SECTION_DEAD char* const stringBase_80399E48 = "ワ";
SECTION_DEAD char* const stringBase_80399E4B = "ヲ";
SECTION_DEAD char* const stringBase_80399E4E = "ン";
SECTION_DEAD char* const stringBase_80399E51 = "ァ";
SECTION_DEAD char* const stringBase_80399E54 = "ィ";
SECTION_DEAD char* const stringBase_80399E57 = "ゥ";
SECTION_DEAD char* const stringBase_80399E5A = "ェ";
SECTION_DEAD char* const stringBase_80399E5D = "ォ";
SECTION_DEAD char* const stringBase_80399E60 = "ャ";
SECTION_DEAD char* const stringBase_80399E63 = "ュ";
SECTION_DEAD char* const stringBase_80399E66 = "ョ";
SECTION_DEAD char* const stringBase_80399E69 = "ッ";
SECTION_DEAD char* const stringBase_80399E6C = "ヴ";
SECTION_DEAD char* const stringBase_80399E6F = "ガ";
SECTION_DEAD char* const stringBase_80399E72 = "ギ";
SECTION_DEAD char* const stringBase_80399E75 = "グ";
SECTION_DEAD char* const stringBase_80399E78 = "ゲ";
SECTION_DEAD char* const stringBase_80399E7B = "ゴ";
SECTION_DEAD char* const stringBase_80399E7E = "ザ";
SECTION_DEAD char* const stringBase_80399E81 = "ジ";
SECTION_DEAD char* const stringBase_80399E84 = "ズ";
SECTION_DEAD char* const stringBase_80399E87 = "ゼ";
SECTION_DEAD char* const stringBase_80399E8A = "ゾ";
SECTION_DEAD char* const stringBase_80399E8D = "ダ";
SECTION_DEAD char* const stringBase_80399E90 = "ヂ";
SECTION_DEAD char* const stringBase_80399E93 = "ヅ";
SECTION_DEAD char* const stringBase_80399E96 = "デ";
SECTION_DEAD char* const stringBase_80399E99 = "ド";
SECTION_DEAD char* const stringBase_80399E9C = "バ";
SECTION_DEAD char* const stringBase_80399E9F = "ビ";
SECTION_DEAD char* const stringBase_80399EA2 = "ブ";
SECTION_DEAD char* const stringBase_80399EA5 = "ベ";
SECTION_DEAD char* const stringBase_80399EA8 = "ボ";
SECTION_DEAD char* const stringBase_80399EAB = "パ";
SECTION_DEAD char* const stringBase_80399EAE = "ピ";
SECTION_DEAD char* const stringBase_80399EB1 = "プ";
SECTION_DEAD char* const stringBase_80399EB4 = "ペ";
SECTION_DEAD char* const stringBase_80399EB7 = "ポ";
SECTION_DEAD char* const stringBase_80399EBA = "A";
SECTION_DEAD char* const stringBase_80399EBC = "N";
SECTION_DEAD char* const stringBase_80399EBE = "a";
SECTION_DEAD char* const stringBase_80399EC0 = "n";
SECTION_DEAD char* const stringBase_80399EC2 = "1";
SECTION_DEAD char* const stringBase_80399EC4 = "B";
SECTION_DEAD char* const stringBase_80399EC6 = "O";
SECTION_DEAD char* const stringBase_80399EC8 = "b";
SECTION_DEAD char* const stringBase_80399ECA = "o";
SECTION_DEAD char* const stringBase_80399ECC = "2";
SECTION_DEAD char* const stringBase_80399ECE = "C";
SECTION_DEAD char* const stringBase_80399ED0 = "P";
SECTION_DEAD char* const stringBase_80399ED2 = "c";
SECTION_DEAD char* const stringBase_80399ED4 = "p";
SECTION_DEAD char* const stringBase_80399ED6 = "3";
SECTION_DEAD char* const stringBase_80399ED8 = "D";
SECTION_DEAD char* const stringBase_80399EDA = "Q";
SECTION_DEAD char* const stringBase_80399EDC = "d";
SECTION_DEAD char* const stringBase_80399EDE = "q";
SECTION_DEAD char* const stringBase_80399EE0 = "4";
SECTION_DEAD char* const stringBase_80399EE2 = "E";
SECTION_DEAD char* const stringBase_80399EE4 = "R";
SECTION_DEAD char* const stringBase_80399EE6 = "e";
SECTION_DEAD char* const stringBase_80399EE8 = "r";
SECTION_DEAD char* const stringBase_80399EEA = "5";
SECTION_DEAD char* const stringBase_80399EEC = "F";
SECTION_DEAD char* const stringBase_80399EEE = "S";
SECTION_DEAD char* const stringBase_80399EF0 = "f";
SECTION_DEAD char* const stringBase_80399EF2 = "s";
SECTION_DEAD char* const stringBase_80399EF4 = "6";
SECTION_DEAD char* const stringBase_80399EF6 = "G";
SECTION_DEAD char* const stringBase_80399EF8 = "T";
SECTION_DEAD char* const stringBase_80399EFA = "g";
SECTION_DEAD char* const stringBase_80399EFC = "t";
SECTION_DEAD char* const stringBase_80399EFE = "7";
SECTION_DEAD char* const stringBase_80399F00 = "H";
SECTION_DEAD char* const stringBase_80399F02 = "U";
SECTION_DEAD char* const stringBase_80399F04 = "h";
SECTION_DEAD char* const stringBase_80399F06 = "u";
SECTION_DEAD char* const stringBase_80399F08 = "8";
SECTION_DEAD char* const stringBase_80399F0A = "I";
SECTION_DEAD char* const stringBase_80399F0C = "V";
SECTION_DEAD char* const stringBase_80399F0E = "i";
SECTION_DEAD char* const stringBase_80399F10 = "v";
SECTION_DEAD char* const stringBase_80399F12 = "9";
SECTION_DEAD char* const stringBase_80399F14 = "J";
SECTION_DEAD char* const stringBase_80399F16 = "W";
SECTION_DEAD char* const stringBase_80399F18 = "j";
SECTION_DEAD char* const stringBase_80399F1A = "w";
SECTION_DEAD char* const stringBase_80399F1C = "0";
SECTION_DEAD char* const stringBase_80399F1E = "K";
SECTION_DEAD char* const stringBase_80399F20 = "X";
SECTION_DEAD char* const stringBase_80399F22 = "k";
SECTION_DEAD char* const stringBase_80399F24 = "x";
SECTION_DEAD char* const stringBase_80399F26 = ",";
SECTION_DEAD char* const stringBase_80399F28 = "L";
SECTION_DEAD char* const stringBase_80399F2A = "Y";
SECTION_DEAD char* const stringBase_80399F2C = "l";
SECTION_DEAD char* const stringBase_80399F2E = "y";
SECTION_DEAD char* const stringBase_80399F30 = ".";
SECTION_DEAD char* const stringBase_80399F32 = "M";
SECTION_DEAD char* const stringBase_80399F34 = "Z";
SECTION_DEAD char* const stringBase_80399F36 = "m";
SECTION_DEAD char* const stringBase_80399F38 = "z";
SECTION_DEAD char* const stringBase_80399F3A = " ";
SECTION_DEAD char* const stringBase_80399F3C = 
    """\x1B""CD""\x1B""CR""\x1B""CC[000000]""\x1B""GM[0]%c""\x1B""HM""\x1B""CC[ffffff]""\x1B""GM[0]%c";
SECTION_DEAD char* const stringBase_80399F6C = """\x1B""CD""\x1B""CR""\x1B""CC[000000]""\x1B""GM[0]";
SECTION_DEAD char* const stringBase_80399F84 = """\x1B""HM""\x1B""CC[ffffff]""\x1B""GM[0]";
SECTION_DEAD char* const stringBase_80399F99 = "zelda_player_name.blo";
SECTION_DEAD char* const stringBase_80399FAF = "zelda_player_name.bpk";
SECTION_DEAD char* const stringBase_80399FC5 = "zelda_player_name.btk";
SECTION_DEAD char* const stringBase_80399FDB = "";
/* @stringBase0 padding */
SECTION_DEAD char* const pad_80399FDC = "\0\0\0";
#pragma pop

/* 8024F88C-8024F914 0088+00 rc=4 efc=0 .text      setNameText__7dName_cFv                                      */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void dName_c::setNameText() {
	nofralloc
#include "asm/d/d_name/setNameText__7dName_cFv.s"
}
#pragma pop


/* 8024F914-8024F994 0080+00 rc=5 efc=0 .text      nameCursorMove__7dName_cFv                                   */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void dName_c::nameCursorMove() {
	nofralloc
#include "asm/d/d_name/nameCursorMove__7dName_cFv.s"
}
#pragma pop


/* 8024F994-8024FAF4 0160+00 rc=3 efc=0 .text      selectCursorMove__7dName_cFv                                 */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void dName_c::selectCursorMove() {
	nofralloc
#include "asm/d/d_name/selectCursorMove__7dName_cFv.s"
}
#pragma pop


/* 8024FAF4-8024FB08 0014+00 rc=1 efc=0 .text      menuCursorPosSet__7dName_cFv                                 */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void dName_c::menuCursorPosSet() {
	nofralloc
#include "asm/d/d_name/menuCursorPosSet__7dName_cFv.s"
}
#pragma pop


/* 8024FB08-8024FDA0 0298+00 rc=1 efc=0 .text      MenuSelect__7dName_cFv                                       */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void dName_c::MenuSelect() {
	nofralloc
#include "asm/d/d_name/MenuSelect__7dName_cFv.s"
}
#pragma pop


/* 8024FDA0-8024FDF4 0054+00 rc=2 efc=0 .text      MenuSelectAnmInit__7dName_cFv                                */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void dName_c::MenuSelectAnmInit() {
	nofralloc
#include "asm/d/d_name/MenuSelectAnmInit__7dName_cFv.s"
}
#pragma pop


/* 8024FDF4-8024FEB4 00C0+00 rc=1 efc=0 .text      MenuSelectAnm__7dName_cFv                                    */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void dName_c::MenuSelectAnm() {
	nofralloc
#include "asm/d/d_name/MenuSelectAnm__7dName_cFv.s"
}
#pragma pop


/* 8024FEB4-8024FFA0 00EC+00 rc=1 efc=0 .text      MenuSelectAnm2__7dName_cFv                                   */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void dName_c::MenuSelectAnm2() {
	nofralloc
#include "asm/d/d_name/MenuSelectAnm2__7dName_cFv.s"
}
#pragma pop


/* 8024FFA0-8024FFA4 0004+00 rc=1 efc=0 .text      MenuSelectAnm3__7dName_cFv                                   */
void dName_c::MenuSelectAnm3() {
	/* empty function */
}


/* 8024FFA4-80250074 00D0+00 rc=1 efc=0 .text      menuAbtnSelect__7dName_cFv                                   */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void dName_c::menuAbtnSelect() {
	nofralloc
#include "asm/d/d_name/menuAbtnSelect__7dName_cFv.s"
}
#pragma pop


/* 80250074-802501B0 013C+00 rc=1 efc=0 .text      backSpace__7dName_cFv                                        */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void dName_c::backSpace() {
	nofralloc
#include "asm/d/d_name/backSpace__7dName_cFv.s"
}
#pragma pop


/* 802501B0-80250284 00D4+00 rc=2 efc=0 .text      mojiListChange__7dName_cFv                                   */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void dName_c::mojiListChange() {
	nofralloc
#include "asm/d/d_name/mojiListChange__7dName_cFv.s"
}
#pragma pop


/* 80250284-80250380 00FC+00 rc=1 efc=0 .text      menuCursorMove__7dName_cFv                                   */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void dName_c::menuCursorMove() {
	nofralloc
#include "asm/d/d_name/menuCursorMove__7dName_cFv.s"
}
#pragma pop


/* 80250380-802504A0 0120+00 rc=1 efc=0 .text      menuCursorMove2__7dName_cFv                                  */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void dName_c::menuCursorMove2() {
	nofralloc
#include "asm/d/d_name/menuCursorMove2__7dName_cFv.s"
}
#pragma pop


/* 802504A0-80250560 00C0+00 rc=1 efc=0 .text      selectCursorPosSet__7dName_cFi                               */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void dName_c::selectCursorPosSet(int field_0) {
	nofralloc
#include "asm/d/d_name/selectCursorPosSet__7dName_cFi.s"
}
#pragma pop


/* 80250560-802505CC 006C+00 rc=1 efc=1 .text      _draw__7dName_cFv                                            */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void dName_c::_draw() {
	nofralloc
#include "asm/d/d_name/_draw__7dName_cFv.s"
}
#pragma pop


/* ############################################################################################## */
/* 80454DD4-80454DD8 0004+00 rc=1 efc=0 .sdata2    @4722                                                        */
f32 d_d_name__lit_4722 = 41.0f / 50.0f;

/* 80454DD8-80454DDC 0004+00 rc=1 efc=0 .sdata2    @4723                                                        */
f32 d_d_name__lit_4723 = 77.0f / 100.0f;

/* 80454DDC-80454DE0 0004+00 rc=1 efc=0 .sdata2    @4724                                                        */
f32 d_d_name__lit_4724 = 1.0f / 20.0f;

/* 80454DE0-80454DE8 0004+04 rc=1 efc=0 .sdata2    @4725                                                        */
f32 d_d_name__lit_4725 = 2.0f / 5.0f;
/* padding 4 bytes */

/* 802505CC-80250CEC 0720+00 rc=1 efc=0 .text      screenSet__7dName_cFv                                        */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void dName_c::screenSet() {
	nofralloc
#include "asm/d/d_name/screenSet__7dName_cFv.s"
}
#pragma pop


/* 80250CEC-80250E54 0168+00 rc=2 efc=0 .text      displayInit__7dName_cFv                                      */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void dName_c::displayInit() {
	nofralloc
#include "asm/d/d_name/displayInit__7dName_cFv.s"
}
#pragma pop


/* 80250E54-80251048 01F4+00 rc=1 efc=0 .text      NameStrSet__7dName_cFv                                       */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void dName_c::NameStrSet() {
	nofralloc
#include "asm/d/d_name/NameStrSet__7dName_cFv.s"
}
#pragma pop


/* 80251048-80251094 004C+00 rc=6 efc=0 .text      getMenuPosIdx__7dName_cFUc                                   */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void dName_c::getMenuPosIdx(u8 field_0) {
	nofralloc
#include "asm/d/d_name/getMenuPosIdx__7dName_cFUc.s"
}
#pragma pop


/* 80251094-8025115C 00C8+00 rc=1 efc=0 .text      draw__14dDlst_NameIN_cFv                                     */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void dDlst_NameIN_c::draw() {
	nofralloc
#include "asm/d/d_name/draw__14dDlst_NameIN_cFv.s"
}
#pragma pop


/* 8025115C-802511A4 0048+00 rc=1 efc=0 .text      __dt__14dDlst_NameIN_cFv                                     */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm dDlst_NameIN_c::~dDlst_NameIN_c() {
	nofralloc
#include "asm/d/d_name/__dt__14dDlst_NameIN_cFv.s"
}
#pragma pop


/* 802511A4-802511EC 0048+00 rc=2 efc=0 .text      __dt__9dNm_HIO_cFv                                           */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm dNm_HIO_c::~dNm_HIO_c() {
	nofralloc
#include "asm/d/d_name/__dt__9dNm_HIO_cFv.s"
}
#pragma pop


/* 802511EC-80251314 0128+00 rc=1 efc=1 .text      __sinit_d_name_cpp                                           */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
extern "C" asm void __sinit_d_name_cpp() {
	nofralloc
#include "asm/d/d_name/__sinit_d_name_cpp.s"
}
#pragma pop


