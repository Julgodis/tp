// 
// Generated By: dol2asm
// Translation Unit: d/meter/d_meter2_draw
// 

#include "dolphin/types.h"

// 
// Types:
// 

// build dMeter2Draw_c (['dMeter2Draw_c']) False/False
// build CPaneMgr (['CPaneMgr']) False/False
// build J2DScreen (['J2DScreen']) False/False
// build J2DGrafContext (['J2DGrafContext']) False/False
/* top-level dependencies (begin ['J2DGrafContext']) */
/* top-level dependencies (end ['J2DGrafContext']) */
struct J2DGrafContext {
};

// build JKRArchive (['JKRArchive']) False/False
/* top-level dependencies (begin ['JKRArchive']) */
/* top-level dependencies (end ['JKRArchive']) */
struct JKRArchive {
	/* 802D5B38 */ void getGlbResource(u32, char const*, JKRArchive*);
};

/* top-level dependencies (begin ['J2DScreen']) */
// outer dependency: ('J2DGrafContext',)
// outer dependency: ('JKRArchive',)
/* top-level dependencies (end ['J2DScreen']) */
struct J2DScreen {
	// ('J2DGrafContext',)
	// ('JKRArchive',)
	/* 802F8498 */ J2DScreen();
	/* 802F8648 */ void setPriority(char const*, u32, JKRArchive*);
	/* 802F8ED4 */ void draw(f32, f32, J2DGrafContext const*);
	/* 802F9690 */ void animation();
};

// build JUtility (['JUtility']) False/False
/* top-level dependencies (begin ['JUtility']) */
/* top-level dependencies (end ['JUtility']) */
struct JUtility {
	// build TColor (['JUtility', 'TColor']) False/False
	/* dependencies (begin ['JUtility', 'TColor']) */
	/* dependencies (end ['JUtility', 'TColor']) */
	struct TColor {
	};

};

// build JKRExpHeap (['JKRExpHeap']) False/False
/* top-level dependencies (begin ['JKRExpHeap']) */
/* top-level dependencies (end ['JKRExpHeap']) */
struct JKRExpHeap {
};

// build J2DPane (['J2DPane']) False/False
// build J2DBasePosition (['J2DBasePosition']) False/False
/* top-level dependencies (begin ['J2DBasePosition']) */
/* top-level dependencies (end ['J2DBasePosition']) */
struct J2DBasePosition {
};

// build J2DRotateAxis (['J2DRotateAxis']) False/False
/* top-level dependencies (begin ['J2DRotateAxis']) */
/* top-level dependencies (end ['J2DRotateAxis']) */
struct J2DRotateAxis {
};

/* top-level dependencies (begin ['J2DPane']) */
// outer dependency: ('J2DBasePosition',)
// outer dependency: ('J2DRotateAxis',)
/* top-level dependencies (end ['J2DPane']) */
struct J2DPane {
	// ('J2DBasePosition',)
	// ('J2DRotateAxis',)
	/* 802F666C */ void appendChild(J2DPane*);
	/* 802F71DC */ void rotate(f32, f32, J2DRotateAxis, f32);
	/* 802F76F8 */ void setBasePosition(J2DBasePosition);
	/* 802F79A8 */ void getGlbVtx(u8) const;
	/* 802F7FCC */ void animationTransform();
};

/* top-level dependencies (begin ['CPaneMgr']) */
// outer dependency: ('J2DScreen',)
// outer dependency: ('JUtility', 'TColor')
// outer dependency: ('JKRExpHeap',)
// outer dependency: ('J2DPane',)
/* top-level dependencies (end ['CPaneMgr']) */
struct CPaneMgr {
	// ('J2DScreen',)
	// ('JUtility', 'TColor')
	// ('JKRExpHeap',)
	// ('J2DPane',)
	/* 80253984 */ CPaneMgr(J2DScreen*, u64, u8, JKRExpHeap*);
	/* 80254458 */ void setBlackWhite(JUtility::TColor, JUtility::TColor);
	/* 802545B0 */ void paneTrans(f32, f32);
	/* 80254EBC */ void getGlobalVtxCenter(J2DPane*, bool, s16);
};

// build J2DAnmColor (['J2DAnmColor']) False/False
/* top-level dependencies (begin ['J2DAnmColor']) */
/* top-level dependencies (end ['J2DAnmColor']) */
struct J2DAnmColor {
};

// build JUtility (['JUtility']) True/True
// build JKRExpHeap (['JKRExpHeap']) True/True
// build CPaneMgrAlpha (['CPaneMgrAlpha']) False/False
// build J2DScreen (['J2DScreen']) True/True
// build JKRExpHeap (['JKRExpHeap']) True/True
/* top-level dependencies (begin ['CPaneMgrAlpha']) */
// outer dependency: ('J2DScreen',)
// outer dependency: ('JKRExpHeap',)
/* top-level dependencies (end ['CPaneMgrAlpha']) */
struct CPaneMgrAlpha {
	// ('J2DScreen',)
	// ('JKRExpHeap',)
	/* 802553FC */ CPaneMgrAlpha(J2DScreen*, u64, u8, JKRExpHeap*);
	/* 802555C8 */ void show();
	/* 80255608 */ void hide();
	/* 8025564C */ void isVisible();
	/* 802557D0 */ void setAlphaRate(f32);
	/* 80255828 */ void getAlphaRate();
};

/* top-level dependencies (begin ['dMeter2Draw_c']) */
// outer dependency: ('CPaneMgr',)
// outer dependency: ('J2DAnmColor',)
// outer dependency: ('JUtility', 'TColor')
// outer dependency: ('JKRExpHeap',)
// outer dependency: ('CPaneMgrAlpha',)
/* top-level dependencies (end ['dMeter2Draw_c']) */
struct dMeter2Draw_c {
	// ('CPaneMgr',)
	// ('J2DAnmColor',)
	// ('JUtility', 'TColor')
	// ('JKRExpHeap',)
	// ('CPaneMgrAlpha',)
	/* 8020FAB4 */ dMeter2Draw_c(JKRExpHeap*);
	/* 802102F8 */ ~dMeter2Draw_c();
	/* 80210FB0 */ void init();
	/* 8021135C */ void exec(u32);
	/* 8021151C */ void draw();
	/* 80211BEC */ void initLife();
	/* 80211E64 */ void initMagic();
	/* 80212190 */ void initLightDrop();
	/* 80212404 */ void initRupeeKey();
	/* 802126E4 */ void initButton();
	/* 8021350C */ void initButtonCross();
	/* 80213CEC */ void playPikariBckAnimation(f32);
	/* 80213D6C */ void setPikariBpkAnimation(J2DAnmColor*);
	/* 80213E3C */ void playPikariBpkAnimation(f32);
	/* 80213E94 */ void playOxygenBpkAnimation(J2DAnmColor*);
	/* 80213FF0 */ void drawPikari(CPaneMgr*, f32*, f32, JUtility::TColor, JUtility::TColor, JUtility::TColor, JUtility::TColor, f32, u8);
	/* 802140DC */ void drawPikari(f32, f32, f32*, f32, JUtility::TColor, JUtility::TColor, JUtility::TColor, JUtility::TColor, f32, u8);
	/* 8021462C */ void drawPikariHakusha(f32, f32, f32, f32, JUtility::TColor, JUtility::TColor, JUtility::TColor, JUtility::TColor);
	/* 802147CC */ void changeTextureLife(int, bool, u8);
	/* 802149F4 */ void drawLife(s16, s16, f32, f32);
	/* 80214C20 */ void setAlphaLifeChange(bool);
	/* 80214DF4 */ void setAlphaLifeAnimeMin();
	/* 80214E54 */ void setAlphaLifeAnimeMax();
	/* 80214EB4 */ void drawKanteraScreen(u8);
	/* 80215290 */ void drawMagic(s16, s16, f32, f32);
	/* 80215380 */ void setAlphaMagicChange(bool);
	/* 802154A8 */ void drawKantera(s32, s32, f32, f32);
	/* 802155B8 */ void setAlphaKanteraChange(bool);
	/* 802156E0 */ void setAlphaKanteraAnimeMin();
	/* 8021575C */ void setAlphaKanteraAnimeMax();
	/* 802157E0 */ void drawOxygen(s32, s32, f32, f32);
	/* 802158F0 */ void setAlphaOxygenChange(bool);
	/* 80215A18 */ void setAlphaOxygenAnimeMin();
	/* 80215A94 */ void setAlphaOxygenAnimeMax();
	/* 80215B18 */ void drawLightDrop(u8, u8, f32, f32, f32, f32, u8);
	/* 80215DA4 */ void setAlphaLightDropChange(bool);
	/* 80215DA8 */ void getNowLightDropRateCalc();
	/* 80215E40 */ void setAlphaLightDropAnimeMin();
	/* 80215F88 */ void setAlphaLightDropAnimeMax();
	/* 8021632C */ void drawRupee(s16);
	/* 80216684 */ void setAlphaRupeeChange(bool);
	/* 802168D0 */ void setAlphaRupeeAnimeMin();
	/* 80216990 */ void setAlphaRupeeAnimeMax();
	/* 80216A40 */ void drawKey(s16);
	/* 80216B28 */ void setAlphaKeyChange(bool);
	/* 80216CA8 */ void setAlphaKeyAnimeMin();
	/* 80216D2C */ void setAlphaKeyAnimeMax();
	/* 80216DAC */ void drawButtonA(u8, f32, f32, f32, f32, f32, bool, bool);
	/* 802170E4 */ void drawButtonB(u8, bool, f32, f32, f32, f32, f32, bool);
	/* 8021764C */ void drawButtonR(u8, u8, bool, bool);
	/* 802176EC */ void drawButtonZ(u8);
	/* 80217904 */ void drawButton3D(u8);
	/* 80217954 */ void drawButtonC(u8, bool);
	/* 802179C0 */ void drawButtonS(u8);
	/* 80217A10 */ void drawButtonBin(u8);
	/* 80217AB4 */ void drawButtonXY(int, u8, u8, bool, bool);
	/* 80218238 */ void getButtonCrossParentInitTransY();
	/* 80218254 */ void drawButtonCross(f32, f32);
	/* 80218338 */ void setAlphaButtonCrossAnimeMin();
	/* 802183A8 */ void setAlphaButtonCrossAnimeMax();
	/* 80218448 */ void setAlphaButtonCrossItemAnimeMin();
	/* 80218524 */ void setAlphaButtonCrossItemAnimeMax();
	/* 802185E8 */ void setAlphaButtonCrossMapAnimeMin();
	/* 802186C4 */ void setAlphaButtonCrossMapAnimeMax();
	/* 80218788 */ void setAlphaButtonChange(bool);
	/* 8021901C */ void setAlphaButtonAnimeMin();
	/* 802190A8 */ void setAlphaButtonAnimeMax();
	/* 80219174 */ void setAlphaButtonAAnimeMin();
	/* 80219258 */ void setAlphaButtonAAnimeMax();
	/* 80219324 */ void setAlphaButtonBAnimeMin();
	/* 80219474 */ void setAlphaButtonBAnimeMax();
	/* 802195A4 */ void setButtonIconAAlpha(u8, u32, bool);
	/* 80219788 */ void setButtonIconBAlpha(u8, u32, bool);
	/* 80219A84 */ void setButtonIconMidonaAlpha(u32);
	/* 80219E98 */ void setButtonIconAlpha(int, u8, u32, bool);
	/* 8021A29C */ void getNumberTexture(int);
	/* 8021A2F4 */ void getActionString(u8, u8, u8*);
	/* 8021A468 */ void changeTextureItemB(u8);
	/* 8021A71C */ void changeTextureItemXY(int, u8);
	/* 8021A9C8 */ void setAlphaAnimeMin(CPaneMgrAlpha*, s16);
	/* 8021AAA4 */ void setAlphaAnimeMax(CPaneMgrAlpha*, s16);
	/* 8021AB84 */ void setItemNum(u8, u8, u8);
	/* 8021AEC8 */ void drawItemNum(u8, f32);
	/* 8021AF78 */ void drawKanteraMeter(u8, f32);
	/* 8021B0C8 */ void isButtonVisible();
	/* 8021B104 */ void setItemParamX(u8);
	/* 8021B364 */ void setItemParamY(u8);
	/* 8021B5B0 */ void setItemParamZ(u8);
	/* 8021B810 */ void setItemParamB(u8);
	/* 8021BB6C */ void getFishingType();
	/* 8021BBB4 */ void getCanoeFishing();
	/* 8021BC24 */ void getCameraSubject();
	/* 8021BC54 */ void getItemSubject();
	/* 8021BCAC */ void getPlayerSubject();
	/* 8021BCC0 */ void isBButtonShow(bool);
	/* 8021BDD0 */ void getButtonTimer();
};

// build JKRExpHeap (['JKRExpHeap']) True/True
// build J2DAnmColor (['J2DAnmColor']) True/True
// build CPaneMgr (['CPaneMgr']) True/True
// build JUtility (['JUtility']) True/True
// build CPaneMgrAlpha (['CPaneMgrAlpha']) True/True
// build JKRHeap (['JKRHeap']) False/False
/* top-level dependencies (begin ['JKRHeap']) */
/* top-level dependencies (end ['JKRHeap']) */
struct JKRHeap {
	/* 802CE4D4 */ void alloc(u32, int);
	/* 802CE548 */ void free(void*);
};

// build dSv_player_item_c (['dSv_player_item_c']) False/False
/* top-level dependencies (begin ['dSv_player_item_c']) */
/* top-level dependencies (end ['dSv_player_item_c']) */
struct dSv_player_item_c {
	/* 80033030 */ void getItem(int, bool) const;
};

// build dSv_light_drop_c (['dSv_light_drop_c']) False/False
/* top-level dependencies (begin ['dSv_light_drop_c']) */
/* top-level dependencies (end ['dSv_light_drop_c']) */
struct dSv_light_drop_c {
	/* 80034340 */ void getLightDropNum(u8) const;
	/* 8003439C */ void isLightDropGetFlag(u8) const;
};

// build dSv_event_c (['dSv_event_c']) False/False
/* top-level dependencies (begin ['dSv_event_c']) */
/* top-level dependencies (end ['dSv_event_c']) */
struct dSv_event_c {
	/* 800349BC */ void isEventBit(u16) const;
};

// build dKantera_icon_c (['dKantera_icon_c']) False/False
/* top-level dependencies (begin ['dKantera_icon_c']) */
/* top-level dependencies (end ['dKantera_icon_c']) */
struct dKantera_icon_c {
	/* 801AE938 */ dKantera_icon_c();
	/* 801AEB7C */ void setAlphaRate(f32);
	/* 801AEBA0 */ void setPos(f32, f32);
	/* 801AEBF4 */ void setScale(f32, f32);
	/* 801AEC44 */ void setNowGauge(u16, u16);
};

// build dMeter2Info_c (['dMeter2Info_c']) False/False
// build JMSMesgEntry_c (['JMSMesgEntry_c']) False/False
/* top-level dependencies (begin ['JMSMesgEntry_c']) */
/* top-level dependencies (end ['JMSMesgEntry_c']) */
struct JMSMesgEntry_c {
};

// build J2DPicture (['J2DPicture']) False/False
// build ResTIMG (['ResTIMG']) False/False
/* top-level dependencies (begin ['ResTIMG']) */
/* top-level dependencies (end ['ResTIMG']) */
struct ResTIMG {
};

/* top-level dependencies (begin ['J2DPicture']) */
// outer dependency: ('ResTIMG',)
/* top-level dependencies (end ['J2DPicture']) */
struct J2DPicture {
	// ('ResTIMG',)
	/* 802FC708 */ J2DPicture(ResTIMG const*);
};

/* top-level dependencies (begin ['dMeter2Info_c']) */
// outer dependency: ('JMSMesgEntry_c',)
// outer dependency: ('J2DPicture',)
/* top-level dependencies (end ['dMeter2Info_c']) */
struct dMeter2Info_c {
	// ('JMSMesgEntry_c',)
	// ('J2DPicture',)
	/* 8021C250 */ void getString(u32, char*, JMSMesgEntry_c*);
	/* 8021C370 */ void getStringKana(u32, char*, JMSMesgEntry_c*);
	/* 8021C544 */ void getStringKanji(u32, char*, JMSMesgEntry_c*);
	/* 8021C950 */ void isDirectUseItem(int);
	/* 8021CF08 */ void readItemTexture(u8, void*, J2DPicture*, void*, J2DPicture*, void*, J2DPicture*, void*, J2DPicture*, int);
};

// build JMSMesgEntry_c (['JMSMesgEntry_c']) True/True
// build J2DPicture (['J2DPicture']) True/True
// build dMsgObject_c (['dMsgObject_c']) False/False
/* top-level dependencies (begin ['dMsgObject_c']) */
/* top-level dependencies (end ['dMsgObject_c']) */
struct dMsgObject_c {
	/* 802370E8 */ void isHowlMessage();
	/* 8023822C */ void getStatus();
};

// build J2DScreen (['J2DScreen']) True/True
// build J2DPane (['J2DPane']) True/True
// build Z2SeMgr (['Z2SeMgr']) False/False
// build Vec (['Vec']) False/False
/* top-level dependencies (begin ['Vec']) */
/* top-level dependencies (end ['Vec']) */
struct Vec {
};

// build JAISoundID (['JAISoundID']) False/False
/* top-level dependencies (begin ['JAISoundID']) */
/* top-level dependencies (end ['JAISoundID']) */
struct JAISoundID {
};

/* top-level dependencies (begin ['Z2SeMgr']) */
// outer dependency: ('Vec',)
// outer dependency: ('JAISoundID',)
/* top-level dependencies (end ['Z2SeMgr']) */
struct Z2SeMgr {
	// ('Vec',)
	// ('JAISoundID',)
	/* 802AB984 */ void seStart(JAISoundID, Vec const*, u32, s8, f32, f32, f32, f32, u8);
	/* 802AC50C */ void seStartLevel(JAISoundID, Vec const*, u32, s8, f32, f32, f32, f32, u8);
};

// build JAISoundID (['JAISoundID']) True/True
// build Vec (['Vec']) True/True
// build JKRFileLoader (['JKRFileLoader']) False/False
/* top-level dependencies (begin ['JKRFileLoader']) */
/* top-level dependencies (end ['JKRFileLoader']) */
struct JKRFileLoader {
	/* 802D4270 */ void getGlbResource(char const*, JKRFileLoader*);
};

// build JKRArchive (['JKRArchive']) True/True
// build J2DRotateAxis (['J2DRotateAxis']) True/True
// build J2DBasePosition (['J2DBasePosition']) True/True
// build J2DGrafContext (['J2DGrafContext']) True/True
// build ResTIMG (['ResTIMG']) True/True
// build J2DTextBox (['J2DTextBox']) False/False
/* top-level dependencies (begin ['J2DTextBox']) */
/* top-level dependencies (end ['J2DTextBox']) */
struct J2DTextBox {
	/* 80300658 */ void getStringPtr() const;
	/* 8030074C */ void setString(s16, char const*, ...);
};

// build J2DAnmLoaderDataBase (['J2DAnmLoaderDataBase']) False/False
/* top-level dependencies (begin ['J2DAnmLoaderDataBase']) */
/* top-level dependencies (end ['J2DAnmLoaderDataBase']) */
struct J2DAnmLoaderDataBase {
	/* 80308A6C */ void load(void const*);
};

// 
// Forward References:
// 


extern "C" void __ct__13dMeter2Draw_cFP10JKRExpHeap();
extern "C" void __dt__13dMeter2Draw_cFv();
extern "C" void init__13dMeter2Draw_cFv();
extern "C" void exec__13dMeter2Draw_cFUl();
extern "C" void draw__13dMeter2Draw_cFv();
extern "C" void initLife__13dMeter2Draw_cFv();
extern "C" void initMagic__13dMeter2Draw_cFv();
extern "C" void initLightDrop__13dMeter2Draw_cFv();
extern "C" void initRupeeKey__13dMeter2Draw_cFv();
extern "C" void initButton__13dMeter2Draw_cFv();
extern "C" void initButtonCross__13dMeter2Draw_cFv();
extern "C" void playPikariBckAnimation__13dMeter2Draw_cFf();
extern "C" void setPikariBpkAnimation__13dMeter2Draw_cFP11J2DAnmColor();
extern "C" void playPikariBpkAnimation__13dMeter2Draw_cFf();
extern "C" void playOxygenBpkAnimation__13dMeter2Draw_cFP11J2DAnmColor();
extern "C" void drawPikari__13dMeter2Draw_cFP8CPaneMgrPffQ28JUtility6TColorQ28JUtility6TColorQ28JUtility6TColorQ28JUtility6TColorfUc();
extern "C" void drawPikari__13dMeter2Draw_cFffPffQ28JUtility6TColorQ28JUtility6TColorQ28JUtility6TColorQ28JUtility6TColorfUc();
extern "C" void drawPikariHakusha__13dMeter2Draw_cFffffQ28JUtility6TColorQ28JUtility6TColorQ28JUtility6TColorQ28JUtility6TColor();
extern "C" void changeTextureLife__13dMeter2Draw_cFibUc();
extern "C" void drawLife__13dMeter2Draw_cFssff();
extern "C" void setAlphaLifeChange__13dMeter2Draw_cFb();
extern "C" void setAlphaLifeAnimeMin__13dMeter2Draw_cFv();
extern "C" void setAlphaLifeAnimeMax__13dMeter2Draw_cFv();
extern "C" void drawKanteraScreen__13dMeter2Draw_cFUc();
extern "C" void drawMagic__13dMeter2Draw_cFssff();
extern "C" void setAlphaMagicChange__13dMeter2Draw_cFb();
extern "C" void drawKantera__13dMeter2Draw_cFllff();
extern "C" void setAlphaKanteraChange__13dMeter2Draw_cFb();
extern "C" void setAlphaKanteraAnimeMin__13dMeter2Draw_cFv();
extern "C" void setAlphaKanteraAnimeMax__13dMeter2Draw_cFv();
extern "C" void drawOxygen__13dMeter2Draw_cFllff();
extern "C" void setAlphaOxygenChange__13dMeter2Draw_cFb();
extern "C" void setAlphaOxygenAnimeMin__13dMeter2Draw_cFv();
extern "C" void setAlphaOxygenAnimeMax__13dMeter2Draw_cFv();
extern "C" void drawLightDrop__13dMeter2Draw_cFUcUcffffUc();
extern "C" void setAlphaLightDropChange__13dMeter2Draw_cFb();
extern "C" void getNowLightDropRateCalc__13dMeter2Draw_cFv();
extern "C" void setAlphaLightDropAnimeMin__13dMeter2Draw_cFv();
extern "C" void setAlphaLightDropAnimeMax__13dMeter2Draw_cFv();
extern "C" void drawRupee__13dMeter2Draw_cFs();
extern "C" void setAlphaRupeeChange__13dMeter2Draw_cFb();
extern "C" void setAlphaRupeeAnimeMin__13dMeter2Draw_cFv();
extern "C" void setAlphaRupeeAnimeMax__13dMeter2Draw_cFv();
extern "C" void drawKey__13dMeter2Draw_cFs();
extern "C" void setAlphaKeyChange__13dMeter2Draw_cFb();
extern "C" void setAlphaKeyAnimeMin__13dMeter2Draw_cFv();
extern "C" void setAlphaKeyAnimeMax__13dMeter2Draw_cFv();
extern "C" void drawButtonA__13dMeter2Draw_cFUcfffffbb();
extern "C" void drawButtonB__13dMeter2Draw_cFUcbfffffb();
extern "C" void drawButtonR__13dMeter2Draw_cFUcUcbb();
extern "C" void drawButtonZ__13dMeter2Draw_cFUc();
extern "C" void drawButton3D__13dMeter2Draw_cFUc();
extern "C" void drawButtonC__13dMeter2Draw_cFUcb();
extern "C" void drawButtonS__13dMeter2Draw_cFUc();
extern "C" void drawButtonBin__13dMeter2Draw_cFUc();
extern "C" void drawButtonXY__13dMeter2Draw_cFiUcUcbb();
extern "C" void getButtonCrossParentInitTransY__13dMeter2Draw_cFv();
extern "C" void drawButtonCross__13dMeter2Draw_cFff();
extern "C" void setAlphaButtonCrossAnimeMin__13dMeter2Draw_cFv();
extern "C" void setAlphaButtonCrossAnimeMax__13dMeter2Draw_cFv();
extern "C" void setAlphaButtonCrossItemAnimeMin__13dMeter2Draw_cFv();
extern "C" void setAlphaButtonCrossItemAnimeMax__13dMeter2Draw_cFv();
extern "C" void setAlphaButtonCrossMapAnimeMin__13dMeter2Draw_cFv();
extern "C" void setAlphaButtonCrossMapAnimeMax__13dMeter2Draw_cFv();
extern "C" void setAlphaButtonChange__13dMeter2Draw_cFb();
extern "C" void setAlphaButtonAnimeMin__13dMeter2Draw_cFv();
extern "C" void setAlphaButtonAnimeMax__13dMeter2Draw_cFv();
extern "C" void setAlphaButtonAAnimeMin__13dMeter2Draw_cFv();
extern "C" void setAlphaButtonAAnimeMax__13dMeter2Draw_cFv();
extern "C" void setAlphaButtonBAnimeMin__13dMeter2Draw_cFv();
extern "C" void setAlphaButtonBAnimeMax__13dMeter2Draw_cFv();
extern "C" void setButtonIconAAlpha__13dMeter2Draw_cFUcUlb();
extern "C" void setButtonIconBAlpha__13dMeter2Draw_cFUcUlb();
extern "C" void setButtonIconMidonaAlpha__13dMeter2Draw_cFUl();
extern "C" void setButtonIconAlpha__13dMeter2Draw_cFiUcUlb();
extern "C" void getNumberTexture__13dMeter2Draw_cFi();
extern "C" void getActionString__13dMeter2Draw_cFUcUcPUc();
extern "C" void changeTextureItemB__13dMeter2Draw_cFUc();
extern "C" void changeTextureItemXY__13dMeter2Draw_cFiUc();
extern "C" void setAlphaAnimeMin__13dMeter2Draw_cFP13CPaneMgrAlphas();
extern "C" void setAlphaAnimeMax__13dMeter2Draw_cFP13CPaneMgrAlphas();
extern "C" void setItemNum__13dMeter2Draw_cFUcUcUc();
extern "C" void drawItemNum__13dMeter2Draw_cFUcf();
extern "C" void drawKanteraMeter__13dMeter2Draw_cFUcf();
extern "C" void isButtonVisible__13dMeter2Draw_cFv();
extern "C" void setItemParamX__13dMeter2Draw_cFUc();
extern "C" void setItemParamY__13dMeter2Draw_cFUc();
extern "C" void setItemParamZ__13dMeter2Draw_cFUc();
extern "C" void setItemParamB__13dMeter2Draw_cFUc();
extern "C" void getFishingType__13dMeter2Draw_cFv();
extern "C" void getCanoeFishing__13dMeter2Draw_cFv();
extern "C" void getCameraSubject__13dMeter2Draw_cFv();
extern "C" void getItemSubject__13dMeter2Draw_cFv();
extern "C" void getPlayerSubject__13dMeter2Draw_cFv();
extern "C" void isBButtonShow__13dMeter2Draw_cFb();
extern "C" void getButtonTimer__13dMeter2Draw_cFv();
SECTION_RODATA extern const u8 data_80398258[40];
SECTION_RODATA extern const u8 data_80398280[40];
SECTION_RODATA extern const u8 data_803982A8[40];
SECTION_RODATA extern const u8 data_803982D0[40];
SECTION_RODATA extern const u8 data_803982F8[40];
SECTION_RODATA extern const u8 data_80398320[160];
SECTION_RODATA extern const u8 data_803983C0[160];
SECTION_RODATA extern const u8 data_80398460[160];
SECTION_RODATA extern const u8 data_80398500[160];
SECTION_RODATA extern const u8 data_803985A0[160];
SECTION_RODATA extern const u8 data_80398640[128];
SECTION_RODATA extern const u8 data_803986C0[128];
SECTION_RODATA extern const u8 data_80398740[128];
SECTION_RODATA extern const u8 data_803987C0[32];
SECTION_RODATA extern const u8 data_803987E0[32];
SECTION_RODATA extern const u8 data_80398800[40];
SECTION_RODATA extern const u8 data_80398828[40];
SECTION_RODATA extern const u8 data_80398850[40];
SECTION_RODATA extern const u8 data_80398878[32];
SECTION_RODATA extern const u8 data_80398898[16];
SECTION_RODATA extern const u8 data_803988A8[16];
SECTION_RODATA extern const u8 data_803988B8[24];
SECTION_RODATA extern const u8 d_meter_d_meter2_draw__stringBase0[424];
SECTION_DATA extern void*data_803BF328[10];
SECTION_DATA extern u8 data_803BF350[516];
SECTION_DATA extern void*lit_9008[9];
SECTION_DATA extern void*lit_9030[9];
SECTION_DATA extern void*d_meter_d_meter2_draw__lit_9053[9];
SECTION_DATA extern void*lit_9106[100];
SECTION_DATA extern void*const __vt__13dMeter2Draw_c[4];
SECTION_BSS extern u8 data_80430158[32];
SECTION_SDATA2 extern u8 d_meter_d_meter2_draw__lit_4182[4];
SECTION_SDATA2 extern f32 d_meter_d_meter2_draw__lit_4183;
SECTION_SDATA2 extern f32 d_meter_d_meter2_draw__lit_4184;
SECTION_SDATA2 extern f32 d_meter_d_meter2_draw__lit_4185;
SECTION_SDATA2 extern f32 d_meter_d_meter2_draw__lit_4921;
SECTION_SDATA2 extern f32 d_meter_d_meter2_draw__lit_4922;
SECTION_SDATA2 extern f32 d_meter_d_meter2_draw__lit_4923;
SECTION_SDATA2 extern f64 lit_4925;
SECTION_SDATA2 extern f32 d_meter_d_meter2_draw__lit_5784;
SECTION_SDATA2 extern f32 d_meter_d_meter2_draw__lit_5785;
SECTION_SDATA2 extern f32 lit_5786;
SECTION_SDATA2 extern f32 d_meter_d_meter2_draw__lit_6143;
SECTION_SDATA2 extern f32 lit_6175;
SECTION_SDATA2 extern f32 lit_6210;
SECTION_SDATA2 extern f64 lit_6293;
SECTION_SDATA2 extern f32 lit_6524;
SECTION_SDATA2 extern f32 d_meter_d_meter2_draw__lit_8207;
SECTION_SDATA2 extern f32 lit_8359;
SECTION_SDATA2 extern f32 d_meter_d_meter2_draw__lit_8360;
SECTION_SDATA2 extern f32 lit_8548;
SECTION_SDATA2 extern f32 lit_8549;
SECTION_SDATA2 extern f32 lit_8774;
SECTION_SDATA2 extern f32 lit_8775;
SECTION_SDATA2 extern f32 lit_8992;
SECTION_SDATA2 extern f32 d_meter_d_meter2_draw__lit_8993;
SECTION_SDATA2 extern f32 lit_8994;
SECTION_SDATA2 extern f32 lit_8995;
SECTION_SDATA2 extern f32 lit_8996;
SECTION_SDATA2 extern f32 lit_8997;
SECTION_SDATA2 extern f32 lit_8998;
SECTION_SDATA2 extern f32 lit_8999;
SECTION_SDATA2 extern f32 lit_9000;
SECTION_SDATA2 extern f32 lit_9001;
SECTION_SDATA2 extern f32 lit_9002;
SECTION_SDATA2 extern f32 lit_9003;
SECTION_SDATA2 extern f32 lit_9004;
SECTION_SDATA2 extern f32 lit_9005;
SECTION_SDATA2 extern f32 lit_9006;
SECTION_SDATA2 extern f32 lit_9007;
SECTION_SDATA2 extern f32 lit_9025;
SECTION_SDATA2 extern f32 lit_9026;
SECTION_SDATA2 extern f32 lit_9027;
SECTION_SDATA2 extern f32 lit_9028;
SECTION_SDATA2 extern f32 lit_9029;
SECTION_SDATA2 extern f32 lit_9047;
SECTION_SDATA2 extern f32 lit_9048;
SECTION_SDATA2 extern f32 lit_9049;
SECTION_SDATA2 extern f32 lit_9050;
SECTION_SDATA2 extern f32 lit_9051;
SECTION_SDATA2 extern f32 lit_9052;
SECTION_SDATA2 extern f32 lit_9089;
SECTION_SDATA2 extern f32 d_meter_d_meter2_draw__lit_9090;
SECTION_SDATA2 extern f32 d_meter_d_meter2_draw__lit_9091;
SECTION_SDATA2 extern f32 lit_9092;
SECTION_SDATA2 extern f32 lit_9093;
SECTION_SDATA2 extern f32 lit_9094;
SECTION_SDATA2 extern f32 lit_9095;
SECTION_SDATA2 extern f32 lit_9096;
SECTION_SDATA2 extern f32 lit_9097;
SECTION_SDATA2 extern f32 lit_9098;
SECTION_SDATA2 extern f32 lit_9099;
SECTION_SDATA2 extern f32 lit_9100;
SECTION_SDATA2 extern f32 lit_9101;
SECTION_SDATA2 extern f32 lit_9102;
SECTION_SDATA2 extern f32 lit_9103;
SECTION_SDATA2 extern f32 lit_9104;
SECTION_SDATA2 extern f32 lit_9105;
SECTION_SBSS2 extern u8 d_meter_d_meter2_draw__lit_8746[4];
SECTION_SBSS2 extern u8 data_80456B94[4];
SECTION_SBSS2 extern u8 d_meter_d_meter2_draw__lit_8747[4];
SECTION_SBSS2 extern u8 data_80456B9C[4];

// 
// External References:
// 

void mDoExt_setCurrentHeap(JKRHeap*);
void mDoExt_getMesgFont();
void dComIfGs_getMaxLifeGauge();
void dComIfGp_getSelectItem(int);
void isBottleItem(u8);
void dCam_getBody();
void dMeter2Info_getNumberTextureName(int);
void dMeter2Info_isMapOpenCheck();
void dMeter2Info_isItemOpenCheck();
void dMeter2Info_set2DVibration();
void dMsgObject_getGroupID();
void dPaneClass_showNullPane(J2DScreen*);
void cLib_addCalc2(f32*, f32, f32, f32);
void* operator new(u32);
void operator delete(void*);
extern "C" void func_802FC800();
extern "C" void _savegpr_15();
extern "C" void _savegpr_20();
extern "C" void _savegpr_21();
extern "C" void _savegpr_22();
extern "C" void _savegpr_24();
extern "C" void _savegpr_25();
extern "C" void _savegpr_26();
extern "C" void _savegpr_27();
extern "C" void _savegpr_28();
extern "C" void _savegpr_29();
extern "C" void _restgpr_15();
extern "C" void _restgpr_20();
extern "C" void _restgpr_21();
extern "C" void _restgpr_22();
extern "C" void _restgpr_24();
extern "C" void _restgpr_25();
extern "C" void _restgpr_26();
extern "C" void _restgpr_27();
extern "C" void _restgpr_28();
extern "C" void _restgpr_29();
extern "C" void strcmp();
extern "C" void strcpy();

extern "C" void mDoExt_setCurrentHeap__FP7JKRHeap();
extern "C" void mDoExt_getMesgFont__Fv();
extern "C" void dComIfGs_getMaxLifeGauge__Fv();
extern "C" void dComIfGp_getSelectItem__Fi();
extern "C" void getItem__17dSv_player_item_cCFib();
extern "C" void getLightDropNum__16dSv_light_drop_cCFUc();
extern "C" void isLightDropGetFlag__16dSv_light_drop_cCFUc();
extern "C" void isEventBit__11dSv_event_cCFUs();
extern "C" void isBottleItem__FUc();
extern "C" void dCam_getBody__Fv();
extern "C" void __ct__15dKantera_icon_cFv();
extern "C" void setAlphaRate__15dKantera_icon_cFf();
extern "C" void setPos__15dKantera_icon_cFff();
extern "C" void setScale__15dKantera_icon_cFff();
extern "C" void setNowGauge__15dKantera_icon_cFUsUs();
extern "C" void getString__13dMeter2Info_cFUlPcP14JMSMesgEntry_c();
extern "C" void getStringKana__13dMeter2Info_cFUlPcP14JMSMesgEntry_c();
extern "C" void getStringKanji__13dMeter2Info_cFUlPcP14JMSMesgEntry_c();
extern "C" void isDirectUseItem__13dMeter2Info_cFi();
extern "C" void readItemTexture__13dMeter2Info_cFUcPvP10J2DPicturePvP10J2DPicturePvP10J2DPicturePvP10J2DPicturei();
extern "C" void dMeter2Info_getNumberTextureName__Fi();
extern "C" void dMeter2Info_isMapOpenCheck__Fv();
extern "C" void dMeter2Info_isItemOpenCheck__Fv();
extern "C" void dMeter2Info_set2DVibration__Fv();
extern "C" void dMsgObject_getGroupID__Fv();
extern "C" void isHowlMessage__12dMsgObject_cFv();
extern "C" void getStatus__12dMsgObject_cFv();
extern "C" void __ct__8CPaneMgrFP9J2DScreenUxUcP10JKRExpHeap();
extern "C" void setBlackWhite__8CPaneMgrFQ28JUtility6TColorQ28JUtility6TColor();
extern "C" void paneTrans__8CPaneMgrFff();
extern "C" void getGlobalVtxCenter__8CPaneMgrFP7J2DPanebs();
extern "C" void dPaneClass_showNullPane__FP9J2DScreen();
extern "C" void __ct__13CPaneMgrAlphaFP9J2DScreenUxUcP10JKRExpHeap();
extern "C" void show__13CPaneMgrAlphaFv();
extern "C" void hide__13CPaneMgrAlphaFv();
extern "C" void isVisible__13CPaneMgrAlphaFv();
extern "C" void setAlphaRate__13CPaneMgrAlphaFf();
extern "C" void getAlphaRate__13CPaneMgrAlphaFv();
extern "C" void cLib_addCalc2__FPffff();
extern "C" void seStart__7Z2SeMgrF10JAISoundIDPC3VecUlScffffUc();
extern "C" void seStartLevel__7Z2SeMgrF10JAISoundIDPC3VecUlScffffUc();
extern "C" void alloc__7JKRHeapFUli();
extern "C" void free__7JKRHeapFPv();
extern "C" void* __nw__FUl();
extern "C" void __dl__FPv();
extern "C" void getGlbResource__13JKRFileLoaderFPCcP13JKRFileLoader();
extern "C" void getGlbResource__10JKRArchiveFUlPCcP10JKRArchive();
extern "C" void appendChild__7J2DPaneFP7J2DPane();
extern "C" void rotate__7J2DPaneFff13J2DRotateAxisf();
extern "C" void setBasePosition__7J2DPaneF15J2DBasePosition();
extern "C" void getGlbVtx__7J2DPaneCFUc();
extern "C" void animationTransform__7J2DPaneFv();
extern "C" void __ct__9J2DScreenFv();
extern "C" void setPriority__9J2DScreenFPCcUlP10JKRArchive();
extern "C" void draw__9J2DScreenFffPC14J2DGrafContext();
extern "C" void animation__9J2DScreenFv();
extern "C" void __ct__10J2DPictureFPC7ResTIMG();
extern "C" void func_802FC800();
extern "C" void getStringPtr__10J2DTextBoxCFv();
extern "C" void setString__10J2DTextBoxFsPCce();
extern "C" void load__20J2DAnmLoaderDataBaseFPCv();
extern "C" void _savegpr_15();
extern "C" void _savegpr_20();
extern "C" void _savegpr_21();
extern "C" void _savegpr_22();
extern "C" void _savegpr_24();
extern "C" void _savegpr_25();
extern "C" void _savegpr_26();
extern "C" void _savegpr_27();
extern "C" void _savegpr_28();
extern "C" void _savegpr_29();
extern "C" void _restgpr_15();
extern "C" void _restgpr_20();
extern "C" void _restgpr_21();
extern "C" void _restgpr_22();
extern "C" void _restgpr_24();
extern "C" void _restgpr_25();
extern "C" void _restgpr_26();
extern "C" void _restgpr_27();
extern "C" void _restgpr_28();
extern "C" void _restgpr_29();
extern "C" void strcmp();
extern "C" void strcpy();
SECTION_DATA extern void*const __vt__12dDlst_base_c[3];
SECTION_DATA extern void*item_resource__10dItem_data[1530];
SECTION_BSS extern u8 g_dComIfG_gameInfo[122384];
SECTION_BSS extern u8 g_drawHIO[3880];
SECTION_BSS extern u8 g_meter2_info[248];
SECTION_BSS extern u8 g_MsgObject_HIO_c[1040];
SECTION_SBSS extern u8 mAudioMgrPtr__10Z2AudioMgr[4 + 4 /* padding */];

// 
// Declarations:
// 

/* ############################################################################################## */
/* 80398258-80398280 0028+00 rc=4 efc=0 .rodata    a_tag$3949                                                   */
SECTION_RODATA const u8 data_80398258[40] = {
	0x63, 0x6F, 0x6E, 0x74, 0x5F, 0x61, 0x74, 0x31, 0x63, 0x6F, 0x6E, 0x74, 0x5F, 0x61, 0x74, 0x32,
	0x63, 0x6F, 0x6E, 0x74, 0x5F, 0x61, 0x74, 0x33, 0x63, 0x6F, 0x6E, 0x74, 0x5F, 0x61, 0x74, 0x34,
	0x00, 0x63, 0x6F, 0x6E, 0x74, 0x5F, 0x61, 0x74,
};

/* 80398280-803982A8 0028+00 rc=0 efc=0 .rodata    b_tag$3950                                                   */
SECTION_RODATA const u8 data_80398280[40] = {
	0x63, 0x6F, 0x6E, 0x74, 0x5F, 0x62, 0x74, 0x31, 0x63, 0x6F, 0x6E, 0x74, 0x5F, 0x62, 0x74, 0x32,
	0x63, 0x6F, 0x6E, 0x74, 0x5F, 0x62, 0x74, 0x33, 0x63, 0x6F, 0x6E, 0x74, 0x5F, 0x62, 0x74, 0x34,
	0x00, 0x63, 0x6F, 0x6E, 0x74, 0x5F, 0x62, 0x74,
};

/* 803982A8-803982D0 0028+00 rc=0 efc=0 .rodata    z_tag$3951                                                   */
SECTION_RODATA const u8 data_803982A8[40] = {
	0x63, 0x6F, 0x6E, 0x74, 0x5F, 0x7A, 0x74, 0x31, 0x63, 0x6F, 0x6E, 0x74, 0x5F, 0x7A, 0x74, 0x32,
	0x63, 0x6F, 0x6E, 0x74, 0x5F, 0x7A, 0x74, 0x33, 0x63, 0x6F, 0x6E, 0x74, 0x5F, 0x7A, 0x74, 0x34,
	0x00, 0x63, 0x6F, 0x6E, 0x74, 0x5F, 0x72, 0x74,
};

/* 803982D0-803982F8 0028+00 rc=0 efc=0 .rodata    x_tag$3952                                                   */
SECTION_RODATA const u8 data_803982D0[40] = {
	0x63, 0x6F, 0x6E, 0x74, 0x5F, 0x78, 0x74, 0x31, 0x63, 0x6F, 0x6E, 0x74, 0x5F, 0x78, 0x74, 0x32,
	0x63, 0x6F, 0x6E, 0x74, 0x5F, 0x78, 0x74, 0x33, 0x63, 0x6F, 0x6E, 0x74, 0x5F, 0x78, 0x74, 0x34,
	0x63, 0x6F, 0x6E, 0x74, 0x5F, 0x78, 0x74, 0x35,
};

/* 803982F8-80398320 0028+00 rc=0 efc=0 .rodata    y_tag$3953                                                   */
SECTION_RODATA const u8 data_803982F8[40] = {
	0x63, 0x6F, 0x6E, 0x74, 0x5F, 0x79, 0x74, 0x31, 0x63, 0x6F, 0x6E, 0x74, 0x5F, 0x79, 0x74, 0x32,
	0x63, 0x6F, 0x6E, 0x74, 0x5F, 0x79, 0x74, 0x33, 0x63, 0x6F, 0x6E, 0x74, 0x5F, 0x79, 0x74, 0x34,
	0x63, 0x6F, 0x6E, 0x74, 0x5F, 0x79, 0x74, 0x35,
};

/* 80398320-803983C0 00A0+00 rc=0 efc=0 .rodata    life_tag$4931                                                */
SECTION_RODATA const u8 data_80398320[160] = {
	0x00, 0x00, 0x68, 0x70, 0x62, 0x5F, 0x30, 0x30, 0x00, 0x00, 0x68, 0x70, 0x62, 0x5F, 0x30, 0x31,
	0x00, 0x00, 0x68, 0x70, 0x62, 0x5F, 0x30, 0x32, 0x00, 0x00, 0x68, 0x70, 0x62, 0x5F, 0x30, 0x33,
	0x00, 0x00, 0x68, 0x70, 0x62, 0x5F, 0x30, 0x34, 0x00, 0x00, 0x68, 0x70, 0x62, 0x5F, 0x30, 0x35,
	0x00, 0x00, 0x68, 0x70, 0x62, 0x5F, 0x30, 0x36, 0x00, 0x00, 0x68, 0x70, 0x62, 0x5F, 0x30, 0x37,
	0x00, 0x00, 0x68, 0x70, 0x62, 0x5F, 0x30, 0x38, 0x00, 0x00, 0x68, 0x70, 0x62, 0x5F, 0x30, 0x39,
	0x00, 0x00, 0x68, 0x70, 0x62, 0x5F, 0x31, 0x30, 0x00, 0x00, 0x68, 0x70, 0x62, 0x5F, 0x31, 0x31,
	0x00, 0x00, 0x68, 0x70, 0x62, 0x5F, 0x31, 0x32, 0x00, 0x00, 0x68, 0x70, 0x62, 0x5F, 0x31, 0x33,
	0x00, 0x00, 0x68, 0x70, 0x62, 0x5F, 0x31, 0x34, 0x00, 0x00, 0x68, 0x70, 0x62, 0x5F, 0x31, 0x35,
	0x00, 0x00, 0x68, 0x70, 0x62, 0x5F, 0x31, 0x36, 0x00, 0x00, 0x68, 0x70, 0x62, 0x5F, 0x31, 0x37,
	0x00, 0x00, 0x68, 0x70, 0x62, 0x5F, 0x31, 0x38, 0x00, 0x00, 0x68, 0x70, 0x62, 0x5F, 0x31, 0x39,
};

/* 803983C0-80398460 00A0+00 rc=0 efc=0 .rodata    mark_tag$4932                                                */
SECTION_RODATA const u8 data_803983C0[160] = {
	0x68, 0x65, 0x61, 0x72, 0x74, 0x6E, 0x30, 0x30, 0x68, 0x65, 0x61, 0x72, 0x74, 0x6E, 0x30, 0x31,
	0x68, 0x65, 0x61, 0x72, 0x74, 0x6E, 0x30, 0x32, 0x68, 0x65, 0x61, 0x72, 0x74, 0x6E, 0x30, 0x33,
	0x68, 0x65, 0x61, 0x72, 0x74, 0x6E, 0x30, 0x34, 0x68, 0x65, 0x61, 0x72, 0x74, 0x6E, 0x30, 0x35,
	0x68, 0x65, 0x61, 0x72, 0x74, 0x6E, 0x30, 0x36, 0x68, 0x65, 0x61, 0x72, 0x74, 0x6E, 0x30, 0x37,
	0x68, 0x65, 0x61, 0x72, 0x74, 0x6E, 0x30, 0x38, 0x68, 0x65, 0x61, 0x72, 0x74, 0x6E, 0x30, 0x39,
	0x68, 0x65, 0x61, 0x72, 0x74, 0x6E, 0x31, 0x30, 0x68, 0x65, 0x61, 0x72, 0x74, 0x6E, 0x31, 0x31,
	0x68, 0x65, 0x61, 0x72, 0x74, 0x6E, 0x31, 0x32, 0x68, 0x65, 0x61, 0x72, 0x74, 0x6E, 0x31, 0x33,
	0x68, 0x65, 0x61, 0x72, 0x74, 0x6E, 0x31, 0x34, 0x68, 0x65, 0x61, 0x72, 0x74, 0x6E, 0x31, 0x35,
	0x68, 0x65, 0x61, 0x72, 0x74, 0x6E, 0x31, 0x36, 0x68, 0x65, 0x61, 0x72, 0x74, 0x6E, 0x31, 0x37,
	0x68, 0x65, 0x61, 0x72, 0x74, 0x6E, 0x31, 0x38, 0x68, 0x65, 0x61, 0x72, 0x74, 0x6E, 0x31, 0x39,
};

/* 80398460-80398500 00A0+00 rc=0 efc=0 .rodata    base_tag$4933                                                */
SECTION_RODATA const u8 data_80398460[160] = {
	0x68, 0x5F, 0x62, 0x61, 0x5F, 0x6E, 0x30, 0x30, 0x68, 0x5F, 0x62, 0x61, 0x5F, 0x6E, 0x30, 0x31,
	0x68, 0x5F, 0x62, 0x61, 0x5F, 0x6E, 0x30, 0x32, 0x68, 0x5F, 0x62, 0x61, 0x5F, 0x6E, 0x30, 0x33,
	0x68, 0x5F, 0x62, 0x61, 0x5F, 0x6E, 0x30, 0x34, 0x68, 0x5F, 0x62, 0x61, 0x5F, 0x6E, 0x30, 0x35,
	0x68, 0x5F, 0x62, 0x61, 0x5F, 0x6E, 0x30, 0x36, 0x68, 0x5F, 0x62, 0x61, 0x5F, 0x6E, 0x30, 0x37,
	0x68, 0x5F, 0x62, 0x61, 0x5F, 0x6E, 0x30, 0x38, 0x68, 0x5F, 0x62, 0x61, 0x5F, 0x6E, 0x30, 0x39,
	0x68, 0x5F, 0x62, 0x61, 0x5F, 0x6E, 0x31, 0x30, 0x68, 0x5F, 0x62, 0x61, 0x5F, 0x6E, 0x31, 0x31,
	0x68, 0x5F, 0x62, 0x61, 0x5F, 0x6E, 0x31, 0x32, 0x68, 0x5F, 0x62, 0x61, 0x5F, 0x6E, 0x31, 0x33,
	0x68, 0x5F, 0x62, 0x61, 0x5F, 0x6E, 0x31, 0x34, 0x68, 0x5F, 0x62, 0x61, 0x5F, 0x6E, 0x31, 0x35,
	0x68, 0x5F, 0x62, 0x61, 0x5F, 0x6E, 0x31, 0x36, 0x68, 0x5F, 0x62, 0x61, 0x5F, 0x6E, 0x31, 0x37,
	0x68, 0x5F, 0x62, 0x61, 0x5F, 0x6E, 0x31, 0x38, 0x68, 0x5F, 0x62, 0x61, 0x5F, 0x6E, 0x31, 0x39,
};

/* 80398500-803985A0 00A0+00 rc=0 efc=0 .rodata    lifet1_tag$4934                                              */
SECTION_RODATA const u8 data_80398500[160] = {
	0x68, 0x65, 0x61, 0x72, 0x5F, 0x30, 0x30, 0x73, 0x68, 0x65, 0x61, 0x72, 0x5F, 0x30, 0x31, 0x73,
	0x68, 0x65, 0x61, 0x72, 0x5F, 0x30, 0x32, 0x73, 0x68, 0x65, 0x61, 0x72, 0x5F, 0x30, 0x33, 0x73,
	0x68, 0x65, 0x61, 0x72, 0x5F, 0x30, 0x34, 0x73, 0x68, 0x65, 0x61, 0x72, 0x5F, 0x30, 0x35, 0x73,
	0x68, 0x65, 0x61, 0x72, 0x5F, 0x30, 0x36, 0x73, 0x68, 0x65, 0x61, 0x72, 0x5F, 0x30, 0x37, 0x73,
	0x68, 0x65, 0x61, 0x72, 0x5F, 0x30, 0x38, 0x73, 0x68, 0x65, 0x61, 0x72, 0x5F, 0x30, 0x39, 0x73,
	0x68, 0x65, 0x61, 0x72, 0x5F, 0x31, 0x30, 0x73, 0x68, 0x65, 0x61, 0x72, 0x5F, 0x31, 0x31, 0x73,
	0x68, 0x65, 0x61, 0x72, 0x5F, 0x31, 0x32, 0x73, 0x68, 0x65, 0x61, 0x72, 0x5F, 0x31, 0x33, 0x73,
	0x68, 0x65, 0x61, 0x72, 0x5F, 0x31, 0x34, 0x73, 0x68, 0x65, 0x61, 0x72, 0x5F, 0x31, 0x35, 0x73,
	0x68, 0x65, 0x61, 0x72, 0x5F, 0x31, 0x36, 0x73, 0x68, 0x65, 0x61, 0x72, 0x5F, 0x31, 0x37, 0x73,
	0x68, 0x65, 0x61, 0x72, 0x5F, 0x31, 0x38, 0x73, 0x68, 0x65, 0x61, 0x72, 0x5F, 0x31, 0x39, 0x73,
};

/* 803985A0-80398640 00A0+00 rc=0 efc=0 .rodata    lifet2_tag$4935                                              */
SECTION_RODATA const u8 data_803985A0[160] = {
	0x00, 0x68, 0x65, 0x61, 0x72, 0x5F, 0x30, 0x30, 0x00, 0x68, 0x65, 0x61, 0x72, 0x5F, 0x30, 0x31,
	0x00, 0x68, 0x65, 0x61, 0x72, 0x5F, 0x30, 0x32, 0x00, 0x68, 0x65, 0x61, 0x72, 0x5F, 0x30, 0x33,
	0x00, 0x68, 0x65, 0x61, 0x72, 0x5F, 0x30, 0x34, 0x00, 0x68, 0x65, 0x61, 0x72, 0x5F, 0x30, 0x35,
	0x00, 0x68, 0x65, 0x61, 0x72, 0x5F, 0x30, 0x36, 0x00, 0x68, 0x65, 0x61, 0x72, 0x5F, 0x30, 0x37,
	0x00, 0x68, 0x65, 0x61, 0x72, 0x5F, 0x30, 0x38, 0x00, 0x68, 0x65, 0x61, 0x72, 0x5F, 0x30, 0x39,
	0x00, 0x68, 0x65, 0x61, 0x72, 0x5F, 0x31, 0x30, 0x00, 0x68, 0x65, 0x61, 0x72, 0x5F, 0x31, 0x31,
	0x00, 0x68, 0x65, 0x61, 0x72, 0x5F, 0x31, 0x32, 0x00, 0x68, 0x65, 0x61, 0x72, 0x5F, 0x31, 0x33,
	0x00, 0x68, 0x65, 0x61, 0x72, 0x5F, 0x31, 0x34, 0x00, 0x68, 0x65, 0x61, 0x72, 0x5F, 0x31, 0x35,
	0x00, 0x68, 0x65, 0x61, 0x72, 0x5F, 0x31, 0x36, 0x00, 0x68, 0x65, 0x61, 0x72, 0x5F, 0x31, 0x37,
	0x00, 0x68, 0x65, 0x61, 0x72, 0x5F, 0x31, 0x38, 0x00, 0x68, 0x65, 0x61, 0x72, 0x5F, 0x31, 0x39,
};

/* 80398640-803986C0 0080+00 rc=0 efc=0 .rodata    tuta_0$5094                                                  */
SECTION_RODATA const u8 data_80398640[128] = {
	0x00, 0x00, 0x00, 0x00, 0x73, 0x5F, 0x30, 0x30, 0x00, 0x00, 0x00, 0x00, 0x73, 0x5F, 0x30, 0x31,
	0x00, 0x00, 0x00, 0x00, 0x73, 0x5F, 0x30, 0x32, 0x00, 0x00, 0x00, 0x00, 0x73, 0x5F, 0x30, 0x33,
	0x00, 0x00, 0x00, 0x00, 0x73, 0x5F, 0x30, 0x34, 0x00, 0x00, 0x00, 0x00, 0x73, 0x5F, 0x30, 0x35,
	0x00, 0x00, 0x00, 0x00, 0x73, 0x5F, 0x30, 0x36, 0x00, 0x00, 0x00, 0x00, 0x73, 0x5F, 0x30, 0x37,
	0x00, 0x00, 0x00, 0x00, 0x73, 0x5F, 0x30, 0x38, 0x00, 0x00, 0x00, 0x00, 0x73, 0x5F, 0x30, 0x39,
	0x00, 0x00, 0x00, 0x00, 0x73, 0x5F, 0x31, 0x30, 0x00, 0x00, 0x00, 0x00, 0x73, 0x5F, 0x31, 0x31,
	0x00, 0x00, 0x00, 0x00, 0x73, 0x5F, 0x31, 0x32, 0x00, 0x00, 0x00, 0x00, 0x73, 0x5F, 0x31, 0x33,
	0x00, 0x00, 0x00, 0x00, 0x73, 0x5F, 0x31, 0x34, 0x00, 0x00, 0x00, 0x00, 0x73, 0x5F, 0x31, 0x35,
};

/* 803986C0-80398740 0080+00 rc=0 efc=0 .rodata    tuta_1$5095                                                  */
SECTION_RODATA const u8 data_803986C0[128] = {
	0x00, 0x00, 0x00, 0x73, 0x6C, 0x5F, 0x30, 0x30, 0x00, 0x00, 0x00, 0x73, 0x6C, 0x5F, 0x30, 0x31,
	0x00, 0x00, 0x00, 0x73, 0x6C, 0x5F, 0x30, 0x32, 0x00, 0x00, 0x00, 0x73, 0x6C, 0x5F, 0x30, 0x33,
	0x00, 0x00, 0x00, 0x73, 0x6C, 0x5F, 0x30, 0x34, 0x00, 0x00, 0x00, 0x73, 0x6C, 0x5F, 0x30, 0x35,
	0x00, 0x00, 0x00, 0x73, 0x6C, 0x5F, 0x30, 0x36, 0x00, 0x00, 0x00, 0x73, 0x6C, 0x5F, 0x30, 0x37,
	0x00, 0x00, 0x00, 0x73, 0x6C, 0x5F, 0x30, 0x38, 0x00, 0x00, 0x00, 0x73, 0x6C, 0x5F, 0x30, 0x39,
	0x00, 0x00, 0x00, 0x73, 0x6C, 0x5F, 0x31, 0x30, 0x00, 0x00, 0x00, 0x73, 0x6C, 0x5F, 0x31, 0x31,
	0x00, 0x00, 0x00, 0x73, 0x6C, 0x5F, 0x31, 0x32, 0x00, 0x00, 0x00, 0x73, 0x6C, 0x5F, 0x31, 0x33,
	0x00, 0x00, 0x00, 0x73, 0x6C, 0x5F, 0x31, 0x34, 0x00, 0x00, 0x00, 0x73, 0x6C, 0x5F, 0x31, 0x35,
};

/* 80398740-803987C0 0080+00 rc=0 efc=0 .rodata    tuta_2$5096                                                  */
SECTION_RODATA const u8 data_80398740[128] = {
	0x00, 0x00, 0x73, 0x63, 0x70, 0x5F, 0x30, 0x30, 0x00, 0x00, 0x73, 0x63, 0x70, 0x5F, 0x30, 0x31,
	0x00, 0x00, 0x73, 0x63, 0x70, 0x5F, 0x30, 0x32, 0x00, 0x00, 0x73, 0x63, 0x70, 0x5F, 0x30, 0x33,
	0x00, 0x00, 0x73, 0x63, 0x70, 0x5F, 0x30, 0x34, 0x00, 0x00, 0x73, 0x63, 0x70, 0x5F, 0x30, 0x35,
	0x00, 0x00, 0x73, 0x63, 0x70, 0x5F, 0x30, 0x36, 0x00, 0x00, 0x73, 0x63, 0x70, 0x5F, 0x30, 0x37,
	0x00, 0x00, 0x73, 0x63, 0x70, 0x5F, 0x30, 0x38, 0x00, 0x00, 0x73, 0x63, 0x70, 0x5F, 0x30, 0x39,
	0x00, 0x00, 0x73, 0x63, 0x70, 0x5F, 0x31, 0x30, 0x00, 0x00, 0x73, 0x63, 0x70, 0x5F, 0x31, 0x31,
	0x00, 0x00, 0x73, 0x63, 0x70, 0x5F, 0x31, 0x32, 0x00, 0x00, 0x73, 0x63, 0x70, 0x5F, 0x31, 0x33,
	0x00, 0x00, 0x73, 0x63, 0x70, 0x5F, 0x31, 0x34, 0x00, 0x00, 0x73, 0x63, 0x70, 0x5F, 0x31, 0x35,
};

/* 803987C0-803987E0 0020+00 rc=0 efc=0 .rodata    rupeet1_tag$5152                                             */
SECTION_RODATA const u8 data_803987C0[32] = {
	0x00, 0x72, 0x5F, 0x6E, 0x5F, 0x31, 0x5F, 0x73, 0x00, 0x72, 0x5F, 0x6E, 0x5F, 0x32, 0x5F, 0x73,
	0x00, 0x72, 0x5F, 0x6E, 0x5F, 0x33, 0x5F, 0x73, 0x00, 0x72, 0x5F, 0x6E, 0x5F, 0x34, 0x5F, 0x73,
};

/* 803987E0-80398800 0020+00 rc=0 efc=0 .rodata    rupeet2_tag$5153                                             */
SECTION_RODATA const u8 data_803987E0[32] = {
	0x00, 0x00, 0x00, 0x72, 0x5F, 0x6E, 0x5F, 0x31, 0x00, 0x00, 0x00, 0x72, 0x5F, 0x6E, 0x5F, 0x32,
	0x00, 0x00, 0x00, 0x72, 0x5F, 0x6E, 0x5F, 0x33, 0x00, 0x00, 0x00, 0x72, 0x5F, 0x6E, 0x5F, 0x34,
};

/* 80398800-80398828 0028+00 rc=0 efc=0 .rodata    key_tag$5165                                                 */
SECTION_RODATA const u8 data_80398800[40] = {
	0x00, 0x6B, 0x65, 0x79, 0x5F, 0x6E, 0x75, 0x6C, 0x00, 0x6B, 0x5F, 0x6E, 0x5F, 0x31, 0x5F, 0x6E,
	0x00, 0x6B, 0x5F, 0x6E, 0x5F, 0x32, 0x5F, 0x6E, 0x00, 0x6B, 0x5F, 0x6E, 0x5F, 0x33, 0x5F, 0x6E,
	0x00, 0x6B, 0x5F, 0x6E, 0x5F, 0x34, 0x5F, 0x6E,
};

/* 80398828-80398850 0028+00 rc=1 efc=0 .rodata    juji_i_tag$5269                                              */
SECTION_RODATA const u8 data_80398828[40] = {
	0x6A, 0x75, 0x5F, 0x72, 0x69, 0x6E, 0x67, 0x34, 0x00, 0x79, 0x61, 0x6A, 0x69, 0x5F, 0x30, 0x30,
	0x00, 0x79, 0x61, 0x6A, 0x69, 0x5F, 0x30, 0x31, 0x6A, 0x75, 0x5F, 0x72, 0x69, 0x6E, 0x67, 0x32,
	0x6A, 0x75, 0x5F, 0x72, 0x69, 0x6E, 0x67, 0x34,
};

/* 80398850-80398878 0028+00 rc=1 efc=0 .rodata    juji_m_tag$5270                                              */
SECTION_RODATA const u8 data_80398850[40] = {
	0x6A, 0x75, 0x5F, 0x72, 0x69, 0x6E, 0x67, 0x33, 0x00, 0x79, 0x61, 0x6A, 0x69, 0x5F, 0x30, 0x32,
	0x00, 0x79, 0x61, 0x6A, 0x69, 0x5F, 0x30, 0x33, 0x6A, 0x75, 0x5F, 0x72, 0x69, 0x6E, 0x67, 0x33,
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
};

/* 80398878-80398898 0020+00 rc=1 efc=0 .rodata    tag_bigh$5851                                                */
SECTION_RODATA const u8 data_80398878[32] = {
	0x00, 0x62, 0x69, 0x67, 0x68, 0x5F, 0x30, 0x30, 0x00, 0x62, 0x69, 0x67, 0x68, 0x5F, 0x30, 0x31,
	0x00, 0x62, 0x69, 0x67, 0x68, 0x5F, 0x30, 0x32, 0x00, 0x62, 0x69, 0x67, 0x68, 0x5F, 0x30, 0x33,
};

/* 80398898-803988A8 0010+00 rc=1 efc=0 .rodata    tag_du$5852                                                  */
SECTION_RODATA const u8 data_80398898[16] = {
	0x68, 0x65, 0x61, 0x72, 0x74, 0x5F, 0x6C, 0x6E, 0x68, 0x65, 0x61, 0x72, 0x74, 0x5F, 0x75, 0x6E,
};

/* 803988A8-803988B8 0010+00 rc=1 efc=0 .rodata    tag$7361                                                     */
SECTION_RODATA const u8 data_803988A8[16] = {
	0x69, 0x74, 0x65, 0x6D, 0x5F, 0x78, 0x5F, 0x6E, 0x69, 0x74, 0x65, 0x6D, 0x5F, 0x79, 0x5F, 0x6E,
};

/* 803988B8-803988D0 0018+00 rc=0 efc=0 .rodata    tag$7759                                                     */
SECTION_RODATA const u8 data_803988B8[24] = {
	0x69, 0x74, 0x65, 0x6D, 0x5F, 0x78, 0x5F, 0x6E, 0x69, 0x74, 0x65, 0x6D, 0x5F, 0x79, 0x5F, 0x6E,
	0x69, 0x74, 0x65, 0x6D, 0x5F, 0x6A, 0x5F, 0x6E,
};

/* 803988D0-80398A78 01A7+01 rc=6 efc=0 .rodata    @stringBase0                                                 */
#pragma push
#pragma force_active on
#pragma section ".dead"
SECTION_DEAD char* const stringBase_803988D0 = "zel_00.bmg";
SECTION_DEAD char* const stringBase_803988DB = "zel_01.bmg";
SECTION_DEAD char* const stringBase_803988E6 = "zel_02.bmg";
SECTION_DEAD char* const stringBase_803988F1 = "zel_03.bmg";
SECTION_DEAD char* const stringBase_803988FC = "zel_04.bmg";
SECTION_DEAD char* const stringBase_80398907 = "zel_05.bmg";
SECTION_DEAD char* const stringBase_80398912 = "zel_06.bmg";
SECTION_DEAD char* const stringBase_8039891D = "zel_07.bmg";
SECTION_DEAD char* const stringBase_80398928 = "zel_08.bmg";
SECTION_DEAD char* const stringBase_80398933 = "zel_99.bmg";
SECTION_DEAD char* const stringBase_8039893E = "zel_unit.bmg";
SECTION_DEAD char* const stringBase_8039894B = "zelda_game_image.blo";
SECTION_DEAD char* const stringBase_80398960 = "zelda_game_image_kantera.blo";
SECTION_DEAD char* const stringBase_8039897D = "zelda_icon_pikari.blo";
SECTION_DEAD char* const stringBase_80398993 = "zelda_icon_pikari.bck";
SECTION_DEAD char* const stringBase_803989A9 = "zelda_icon_pikari.bpk";
SECTION_DEAD char* const stringBase_803989BF = "";
SECTION_DEAD char* const stringBase_803989C0 = 
    "zelda_game_image_sanso_10percent.bpk";
SECTION_DEAD char* const stringBase_803989E5 = 
    "zelda_game_image_sanso_25percent.bpk";
SECTION_DEAD char* const stringBase_80398A0A = 
    "zelda_game_image_sanso_50percent.bpk";
SECTION_DEAD char* const stringBase_80398A2F = "tt_heart_00.bti";
SECTION_DEAD char* const stringBase_80398A3F = "tt_heart_01.bti";
SECTION_DEAD char* const stringBase_80398A4F = "tt_heart_02.bti";
SECTION_DEAD char* const stringBase_80398A5F = "tt_heart_03.bti";
SECTION_DEAD char* const stringBase_80398A6F = "F_SP127";
/* @stringBase0 padding */
SECTION_DEAD char* const pad_80398A77 = "";
#pragma pop

/* 803BF328-803BF350 0028+00 rc=1 efc=0 .data      bmg_filename$3954                                            */
void* data_803BF328[10] = {
	(void*)&d_meter_d_meter2_draw__stringBase0,
	(void*)0x803988DB,
	(void*)0x803988E6,
	(void*)0x803988F1,
	(void*)0x803988FC,
	(void*)0x80398907,
	(void*)0x80398912,
	(void*)0x8039891D,
	(void*)0x80398928,
	(void*)0x80398933,
};

/* 803BF350-803BF554 0204+00 rc=1 efc=0 .data      i_action_num$8471                                            */
u8 data_803BF350[516] = {
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x03, 0xE9, 0x00, 0x00, 0x03, 0xEA, 0x00, 0x00, 0x03, 0xEB,
	0x00, 0x00, 0x03, 0xEC, 0x00, 0x00, 0x03, 0xED, 0x00, 0x00, 0x03, 0xEE, 0x00, 0x00, 0x03, 0xEF,
	0x00, 0x00, 0x05, 0x6B, 0x00, 0x00, 0x03, 0xF1, 0x00, 0x00, 0x03, 0xF2, 0x00, 0x00, 0x03, 0xF3,
	0x00, 0x00, 0x03, 0xF4, 0x00, 0x00, 0x03, 0xF5, 0x00, 0x00, 0x03, 0xF6, 0x00, 0x00, 0x03, 0xF7,
	0x00, 0x00, 0x04, 0x09, 0x00, 0x00, 0x03, 0xF8, 0x00, 0x00, 0x03, 0xF9, 0x00, 0x00, 0x03, 0xFA,
	0x00, 0x00, 0x03, 0xFB, 0x00, 0x00, 0x03, 0xFC, 0x00, 0x00, 0x04, 0x15, 0x00, 0x00, 0x03, 0xFE,
	0x00, 0x00, 0x04, 0x02, 0x00, 0x00, 0x04, 0x03, 0x00, 0x00, 0x04, 0x04, 0x00, 0x00, 0x04, 0x05,
	0x00, 0x00, 0x04, 0x06, 0x00, 0x00, 0x04, 0x00, 0x00, 0x00, 0x04, 0x07, 0x00, 0x00, 0x04, 0x01,
	0x00, 0x00, 0x03, 0xFF, 0x00, 0x00, 0x04, 0x15, 0x00, 0x00, 0x04, 0x0C, 0x00, 0x00, 0x04, 0x08,
	0x00, 0x00, 0x00, 0x5D, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
	0x00, 0x00, 0x04, 0x0B, 0x00, 0x00, 0x04, 0x0A, 0x00, 0x00, 0x04, 0x0D, 0x00, 0x00, 0x04, 0x0E,
	0x00, 0x00, 0x04, 0x0F, 0x00, 0x00, 0x04, 0x10, 0x00, 0x00, 0x04, 0x11, 0x00, 0x00, 0x03, 0xE6,
	0x00, 0x00, 0x04, 0x12, 0x00, 0x00, 0x04, 0x13, 0x00, 0x00, 0x04, 0x14, 0x00, 0x00, 0x04, 0x16,
	0x00, 0x00, 0x04, 0x17, 0x00, 0x00, 0x04, 0x18, 0x00, 0x00, 0x04, 0x19, 0x00, 0x00, 0x04, 0x1A,
	0x00, 0x00, 0x04, 0x1B, 0x00, 0x00, 0x04, 0x1C, 0x00, 0x00, 0x04, 0x1D, 0x00, 0x00, 0x04, 0x1E,
	0x00, 0x00, 0x04, 0x1F, 0x00, 0x00, 0x04, 0x20, 0x00, 0x00, 0x04, 0x21, 0x00, 0x00, 0x04, 0x22,
	0x00, 0x00, 0x04, 0x23, 0x00, 0x00, 0x04, 0x2E, 0x00, 0x00, 0x04, 0x24, 0x00, 0x00, 0x04, 0x25,
	0x00, 0x00, 0x04, 0x26, 0x00, 0x00, 0x04, 0x27, 0x00, 0x00, 0x04, 0x28, 0x00, 0x00, 0x04, 0x2B,
	0x00, 0x00, 0x04, 0x29, 0x00, 0x00, 0x04, 0x2A, 0x00, 0x00, 0x04, 0xBB, 0x00, 0x00, 0x04, 0x2D,
	0x00, 0x00, 0x03, 0xFD, 0x00, 0x00, 0x04, 0x30, 0x00, 0x00, 0x04, 0x31, 0x00, 0x00, 0x00, 0x00,
	0x00, 0x00, 0x04, 0x32, 0x00, 0x00, 0x04, 0x33, 0x00, 0x00, 0x04, 0x34, 0x00, 0x00, 0x04, 0x35,
	0x00, 0x00, 0x04, 0x36, 0x00, 0x00, 0x04, 0x37, 0x00, 0x00, 0x04, 0x38, 0x00, 0x00, 0x04, 0x39,
	0x00, 0x00, 0x04, 0x3A, 0x00, 0x00, 0x04, 0x3B, 0x00, 0x00, 0x04, 0x3C, 0x00, 0x00, 0x04, 0x3D,
	0x00, 0x00, 0x04, 0x3E, 0x00, 0x00, 0x04, 0x3F, 0x00, 0x00, 0x04, 0x40, 0x00, 0x00, 0x04, 0x41,
	0x00, 0x00, 0x04, 0x42, 0x00, 0x00, 0x04, 0x44, 0x00, 0x00, 0x04, 0x45, 0x00, 0x00, 0x04, 0x46,
	0x00, 0x00, 0x04, 0x47, 0x00, 0x00, 0x04, 0x48, 0x00, 0x00, 0x07, 0x70, 0x00, 0x00, 0x04, 0x49,
	0x00, 0x00, 0x04, 0x4A, 0x00, 0x00, 0x04, 0x4B, 0x00, 0x00, 0x04, 0x4C, 0x00, 0x00, 0x04, 0x7E,
	0x00, 0x00, 0x04, 0x7D, 0x00, 0x00, 0x04, 0x7C, 0x00, 0x00, 0x05, 0x61, 0x00, 0x00, 0x04, 0x7B,
	0x00, 0x00, 0x04, 0x79, 0x00, 0x00, 0x04, 0x7A, 0x00, 0x00, 0x04, 0x89, 0x00, 0x00, 0x04, 0x8A,
	0x00, 0x00, 0x04, 0x8B, 0x00, 0x00, 0x04, 0x8C, 0x00, 0x00, 0x04, 0x8D, 0x00, 0x00, 0x04, 0x8E,
	0x00, 0x00, 0x04, 0x78, 0x00, 0x00, 0x03, 0xD6, 0x00, 0x00, 0x03, 0xD7, 0x00, 0x00, 0x04, 0x77,
	0x00, 0x00, 0x04, 0x88, 0x00, 0x00, 0x05, 0x27, 0x00, 0x00, 0x05, 0x22, 0x00, 0x00, 0x05, 0x77,
	0x00, 0x00, 0x03, 0xF0,
};

/* 803BF554-803BF578 0024+00 rc=1 efc=0 .data      @9008                                                        */
void* lit_9008[9] = {
	(void*)(((char*)setItemParamX__13dMeter2Draw_cFUc)+0x8C),
	(void*)(((char*)setItemParamX__13dMeter2Draw_cFUc)+0x1B8),
	(void*)(((char*)setItemParamX__13dMeter2Draw_cFUc)+0x1B8),
	(void*)(((char*)setItemParamX__13dMeter2Draw_cFUc)+0xC8),
	(void*)(((char*)setItemParamX__13dMeter2Draw_cFUc)+0x140),
	(void*)(((char*)setItemParamX__13dMeter2Draw_cFUc)+0x104),
	(void*)(((char*)setItemParamX__13dMeter2Draw_cFUc)+0x1B8),
	(void*)(((char*)setItemParamX__13dMeter2Draw_cFUc)+0x1B8),
	(void*)(((char*)setItemParamX__13dMeter2Draw_cFUc)+0x17C),
};

/* 803BF578-803BF59C 0024+00 rc=1 efc=0 .data      @9030                                                        */
void* lit_9030[9] = {
	(void*)(((char*)setItemParamY__13dMeter2Draw_cFUc)+0x8C),
	(void*)(((char*)setItemParamY__13dMeter2Draw_cFUc)+0x1A4),
	(void*)(((char*)setItemParamY__13dMeter2Draw_cFUc)+0x1A4),
	(void*)(((char*)setItemParamY__13dMeter2Draw_cFUc)+0xC4),
	(void*)(((char*)setItemParamY__13dMeter2Draw_cFUc)+0x130),
	(void*)(((char*)setItemParamY__13dMeter2Draw_cFUc)+0xFC),
	(void*)(((char*)setItemParamY__13dMeter2Draw_cFUc)+0x1A4),
	(void*)(((char*)setItemParamY__13dMeter2Draw_cFUc)+0x1A4),
	(void*)(((char*)setItemParamY__13dMeter2Draw_cFUc)+0x168),
};

/* 803BF59C-803BF5C0 0024+00 rc=1 efc=0 .data      @9053                                                        */
void* d_meter_d_meter2_draw__lit_9053[9] = {
	(void*)(((char*)setItemParamZ__13dMeter2Draw_cFUc)+0x8C),
	(void*)(((char*)setItemParamZ__13dMeter2Draw_cFUc)+0x1B8),
	(void*)(((char*)setItemParamZ__13dMeter2Draw_cFUc)+0x1B8),
	(void*)(((char*)setItemParamZ__13dMeter2Draw_cFUc)+0xC8),
	(void*)(((char*)setItemParamZ__13dMeter2Draw_cFUc)+0x140),
	(void*)(((char*)setItemParamZ__13dMeter2Draw_cFUc)+0x104),
	(void*)(((char*)setItemParamZ__13dMeter2Draw_cFUc)+0x1B8),
	(void*)(((char*)setItemParamZ__13dMeter2Draw_cFUc)+0x1B8),
	(void*)(((char*)setItemParamZ__13dMeter2Draw_cFUc)+0x17C),
};

/* 803BF5C0-803BF750 0190+00 rc=1 efc=0 .data      @9106                                                        */
void* lit_9106[100] = {
	(void*)(((char*)setItemParamB__13dMeter2Draw_cFUc)+0x248),
	(void*)(((char*)setItemParamB__13dMeter2Draw_cFUc)+0x304),
	(void*)(((char*)setItemParamB__13dMeter2Draw_cFUc)+0x304),
	(void*)(((char*)setItemParamB__13dMeter2Draw_cFUc)+0x304),
	(void*)(((char*)setItemParamB__13dMeter2Draw_cFUc)+0x304),
	(void*)(((char*)setItemParamB__13dMeter2Draw_cFUc)+0x304),
	(void*)(((char*)setItemParamB__13dMeter2Draw_cFUc)+0x304),
	(void*)(((char*)setItemParamB__13dMeter2Draw_cFUc)+0x304),
	(void*)(((char*)setItemParamB__13dMeter2Draw_cFUc)+0x304),
	(void*)(((char*)setItemParamB__13dMeter2Draw_cFUc)+0x304),
	(void*)(((char*)setItemParamB__13dMeter2Draw_cFUc)+0x304),
	(void*)(((char*)setItemParamB__13dMeter2Draw_cFUc)+0x304),
	(void*)(((char*)setItemParamB__13dMeter2Draw_cFUc)+0x304),
	(void*)(((char*)setItemParamB__13dMeter2Draw_cFUc)+0x304),
	(void*)(((char*)setItemParamB__13dMeter2Draw_cFUc)+0x304),
	(void*)(((char*)setItemParamB__13dMeter2Draw_cFUc)+0x304),
	(void*)(((char*)setItemParamB__13dMeter2Draw_cFUc)+0x304),
	(void*)(((char*)setItemParamB__13dMeter2Draw_cFUc)+0x1D0),
	(void*)(((char*)setItemParamB__13dMeter2Draw_cFUc)+0x304),
	(void*)(((char*)setItemParamB__13dMeter2Draw_cFUc)+0x11C),
	(void*)(((char*)setItemParamB__13dMeter2Draw_cFUc)+0x1D0),
	(void*)(((char*)setItemParamB__13dMeter2Draw_cFUc)+0x20C),
	(void*)(((char*)setItemParamB__13dMeter2Draw_cFUc)+0x158),
	(void*)(((char*)setItemParamB__13dMeter2Draw_cFUc)+0x284),
	(void*)(((char*)setItemParamB__13dMeter2Draw_cFUc)+0x194),
	(void*)(((char*)setItemParamB__13dMeter2Draw_cFUc)+0x20C),
	(void*)(((char*)setItemParamB__13dMeter2Draw_cFUc)+0x20C),
	(void*)(((char*)setItemParamB__13dMeter2Draw_cFUc)+0x2C0),
	(void*)(((char*)setItemParamB__13dMeter2Draw_cFUc)+0x304),
	(void*)(((char*)setItemParamB__13dMeter2Draw_cFUc)+0xE0),
	(void*)(((char*)setItemParamB__13dMeter2Draw_cFUc)+0x248),
	(void*)(((char*)setItemParamB__13dMeter2Draw_cFUc)+0x304),
	(void*)(((char*)setItemParamB__13dMeter2Draw_cFUc)+0x304),
	(void*)(((char*)setItemParamB__13dMeter2Draw_cFUc)+0x304),
	(void*)(((char*)setItemParamB__13dMeter2Draw_cFUc)+0x304),
	(void*)(((char*)setItemParamB__13dMeter2Draw_cFUc)+0x248),
	(void*)(((char*)setItemParamB__13dMeter2Draw_cFUc)+0x304),
	(void*)(((char*)setItemParamB__13dMeter2Draw_cFUc)+0x304),
	(void*)(((char*)setItemParamB__13dMeter2Draw_cFUc)+0x304),
	(void*)(((char*)setItemParamB__13dMeter2Draw_cFUc)+0x304),
	(void*)(((char*)setItemParamB__13dMeter2Draw_cFUc)+0x304),
	(void*)(((char*)setItemParamB__13dMeter2Draw_cFUc)+0x304),
	(void*)(((char*)setItemParamB__13dMeter2Draw_cFUc)+0x304),
	(void*)(((char*)setItemParamB__13dMeter2Draw_cFUc)+0xE0),
	(void*)(((char*)setItemParamB__13dMeter2Draw_cFUc)+0x304),
	(void*)(((char*)setItemParamB__13dMeter2Draw_cFUc)+0x304),
	(void*)(((char*)setItemParamB__13dMeter2Draw_cFUc)+0xE0),
	(void*)(((char*)setItemParamB__13dMeter2Draw_cFUc)+0xE0),
	(void*)(((char*)setItemParamB__13dMeter2Draw_cFUc)+0x304),
	(void*)(((char*)setItemParamB__13dMeter2Draw_cFUc)+0xE0),
	(void*)(((char*)setItemParamB__13dMeter2Draw_cFUc)+0xE0),
	(void*)(((char*)setItemParamB__13dMeter2Draw_cFUc)+0x304),
	(void*)(((char*)setItemParamB__13dMeter2Draw_cFUc)+0x304),
	(void*)(((char*)setItemParamB__13dMeter2Draw_cFUc)+0x304),
	(void*)(((char*)setItemParamB__13dMeter2Draw_cFUc)+0x304),
	(void*)(((char*)setItemParamB__13dMeter2Draw_cFUc)+0x304),
	(void*)(((char*)setItemParamB__13dMeter2Draw_cFUc)+0x304),
	(void*)(((char*)setItemParamB__13dMeter2Draw_cFUc)+0x304),
	(void*)(((char*)setItemParamB__13dMeter2Draw_cFUc)+0x304),
	(void*)(((char*)setItemParamB__13dMeter2Draw_cFUc)+0x304),
	(void*)(((char*)setItemParamB__13dMeter2Draw_cFUc)+0x304),
	(void*)(((char*)setItemParamB__13dMeter2Draw_cFUc)+0x304),
	(void*)(((char*)setItemParamB__13dMeter2Draw_cFUc)+0x304),
	(void*)(((char*)setItemParamB__13dMeter2Draw_cFUc)+0x304),
	(void*)(((char*)setItemParamB__13dMeter2Draw_cFUc)+0x304),
	(void*)(((char*)setItemParamB__13dMeter2Draw_cFUc)+0x304),
	(void*)(((char*)setItemParamB__13dMeter2Draw_cFUc)+0x304),
	(void*)(((char*)setItemParamB__13dMeter2Draw_cFUc)+0x248),
	(void*)(((char*)setItemParamB__13dMeter2Draw_cFUc)+0x248),
	(void*)(((char*)setItemParamB__13dMeter2Draw_cFUc)+0x248),
	(void*)(((char*)setItemParamB__13dMeter2Draw_cFUc)+0x304),
	(void*)(((char*)setItemParamB__13dMeter2Draw_cFUc)+0x304),
	(void*)(((char*)setItemParamB__13dMeter2Draw_cFUc)+0x304),
	(void*)(((char*)setItemParamB__13dMeter2Draw_cFUc)+0x304),
	(void*)(((char*)setItemParamB__13dMeter2Draw_cFUc)+0x304),
	(void*)(((char*)setItemParamB__13dMeter2Draw_cFUc)+0x304),
	(void*)(((char*)setItemParamB__13dMeter2Draw_cFUc)+0x304),
	(void*)(((char*)setItemParamB__13dMeter2Draw_cFUc)+0x304),
	(void*)(((char*)setItemParamB__13dMeter2Draw_cFUc)+0x304),
	(void*)(((char*)setItemParamB__13dMeter2Draw_cFUc)+0x304),
	(void*)(((char*)setItemParamB__13dMeter2Draw_cFUc)+0x304),
	(void*)(((char*)setItemParamB__13dMeter2Draw_cFUc)+0x304),
	(void*)(((char*)setItemParamB__13dMeter2Draw_cFUc)+0x304),
	(void*)(((char*)setItemParamB__13dMeter2Draw_cFUc)+0x304),
	(void*)(((char*)setItemParamB__13dMeter2Draw_cFUc)+0x304),
	(void*)(((char*)setItemParamB__13dMeter2Draw_cFUc)+0x304),
	(void*)(((char*)setItemParamB__13dMeter2Draw_cFUc)+0x304),
	(void*)(((char*)setItemParamB__13dMeter2Draw_cFUc)+0xE0),
	(void*)(((char*)setItemParamB__13dMeter2Draw_cFUc)+0x304),
	(void*)(((char*)setItemParamB__13dMeter2Draw_cFUc)+0x304),
	(void*)(((char*)setItemParamB__13dMeter2Draw_cFUc)+0x304),
	(void*)(((char*)setItemParamB__13dMeter2Draw_cFUc)+0x304),
	(void*)(((char*)setItemParamB__13dMeter2Draw_cFUc)+0x304),
	(void*)(((char*)setItemParamB__13dMeter2Draw_cFUc)+0x304),
	(void*)(((char*)setItemParamB__13dMeter2Draw_cFUc)+0x304),
	(void*)(((char*)setItemParamB__13dMeter2Draw_cFUc)+0x304),
	(void*)(((char*)setItemParamB__13dMeter2Draw_cFUc)+0x304),
	(void*)(((char*)setItemParamB__13dMeter2Draw_cFUc)+0x304),
	(void*)(((char*)setItemParamB__13dMeter2Draw_cFUc)+0x304),
	(void*)(((char*)setItemParamB__13dMeter2Draw_cFUc)+0x248),
};

/* 803BF750-803BF760 0010+00 rc=2 efc=0 .data      __vt__13dMeter2Draw_c                                        */
void* const __vt__13dMeter2Draw_c[4] = {
	NULL, /* RTTI */
	NULL,
	(void*)draw__13dMeter2Draw_cFv,
	(void*)__dt__13dMeter2Draw_cFv,
};

/* 80454880-80454884 0004+00 rc=38 efc=0 .sdata2    @4182                                                        */
u8 d_meter_d_meter2_draw__lit_4182[4] = {
	0x00, 0x00, 0x00, 0x00,
};

/* 80454884-80454888 0004+00 rc=14 efc=0 .sdata2    @4183                                                        */
f32 d_meter_d_meter2_draw__lit_4183 = 1.0f;

/* 80454888-8045488C 0004+00 rc=5 efc=0 .sdata2    @4184                                                        */
f32 d_meter_d_meter2_draw__lit_4184 = 17.0f;

/* 8045488C-80454890 0004+00 rc=1 efc=0 .sdata2    @4185                                                        */
f32 d_meter_d_meter2_draw__lit_4185 = 20.0f;

/* 8020FAB4-802102F8 0844+00 rc=1 efc=1 .text      __ct__13dMeter2Draw_cFP10JKRExpHeap                          */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm dMeter2Draw_c::dMeter2Draw_c(JKRExpHeap* field_0) {
	nofralloc
#include "asm/d/meter/d_meter2_draw/__ct__13dMeter2Draw_cFP10JKRExpHeap.s"
}
#pragma pop


/* 802102F8-80210FB0 0CB8+00 rc=1 efc=0 .text      __dt__13dMeter2Draw_cFv                                      */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm dMeter2Draw_c::~dMeter2Draw_c() {
	nofralloc
#include "asm/d/meter/d_meter2_draw/__dt__13dMeter2Draw_cFv.s"
}
#pragma pop


/* 80210FB0-8021135C 03AC+00 rc=1 efc=0 .text      init__13dMeter2Draw_cFv                                      */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void dMeter2Draw_c::init() {
	nofralloc
#include "asm/d/meter/d_meter2_draw/init__13dMeter2Draw_cFv.s"
}
#pragma pop


/* 8021135C-8021151C 01C0+00 rc=1 efc=1 .text      exec__13dMeter2Draw_cFUl                                     */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void dMeter2Draw_c::exec(u32 field_0) {
	nofralloc
#include "asm/d/meter/d_meter2_draw/exec__13dMeter2Draw_cFUl.s"
}
#pragma pop


/* ############################################################################################## */
/* 80454890-80454894 0004+00 rc=1 efc=0 .sdata2    @4921                                                        */
f32 d_meter_d_meter2_draw__lit_4921 = 16.0f;

/* 80454894-80454898 0004+00 rc=9 efc=0 .sdata2    @4922                                                        */
f32 d_meter_d_meter2_draw__lit_4922 = 0.5f;

/* 80454898-804548A0 0004+04 rc=7 efc=0 .sdata2    @4923                                                        */
f32 d_meter_d_meter2_draw__lit_4923 = 18.0f;
/* padding 4 bytes */

/* 804548A0-804548A8 0008+00 rc=13 efc=0 .sdata2    @4925                                                        */
f64 lit_4925 = 4503601774854144.0 /* cast s32 to float */;

/* 8021151C-80211BEC 06D0+00 rc=1 efc=0 .text      draw__13dMeter2Draw_cFv                                      */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void dMeter2Draw_c::draw() {
	nofralloc
#include "asm/d/meter/d_meter2_draw/draw__13dMeter2Draw_cFv.s"
}
#pragma pop


/* 80211BEC-80211E64 0278+00 rc=1 efc=0 .text      initLife__13dMeter2Draw_cFv                                  */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void dMeter2Draw_c::initLife() {
	nofralloc
#include "asm/d/meter/d_meter2_draw/initLife__13dMeter2Draw_cFv.s"
}
#pragma pop


/* 80211E64-80212190 032C+00 rc=1 efc=0 .text      initMagic__13dMeter2Draw_cFv                                 */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void dMeter2Draw_c::initMagic() {
	nofralloc
#include "asm/d/meter/d_meter2_draw/initMagic__13dMeter2Draw_cFv.s"
}
#pragma pop


/* 80212190-80212404 0274+00 rc=1 efc=0 .text      initLightDrop__13dMeter2Draw_cFv                             */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void dMeter2Draw_c::initLightDrop() {
	nofralloc
#include "asm/d/meter/d_meter2_draw/initLightDrop__13dMeter2Draw_cFv.s"
}
#pragma pop


/* 80212404-802126E4 02E0+00 rc=1 efc=0 .text      initRupeeKey__13dMeter2Draw_cFv                              */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void dMeter2Draw_c::initRupeeKey() {
	nofralloc
#include "asm/d/meter/d_meter2_draw/initRupeeKey__13dMeter2Draw_cFv.s"
}
#pragma pop


/* 802126E4-8021350C 0E28+00 rc=1 efc=0 .text      initButton__13dMeter2Draw_cFv                                */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void dMeter2Draw_c::initButton() {
	nofralloc
#include "asm/d/meter/d_meter2_draw/initButton__13dMeter2Draw_cFv.s"
}
#pragma pop


/* 8021350C-80213CEC 07E0+00 rc=1 efc=0 .text      initButtonCross__13dMeter2Draw_cFv                           */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void dMeter2Draw_c::initButtonCross() {
	nofralloc
#include "asm/d/meter/d_meter2_draw/initButtonCross__13dMeter2Draw_cFv.s"
}
#pragma pop


/* 80213CEC-80213D6C 0080+00 rc=3 efc=0 .text      playPikariBckAnimation__13dMeter2Draw_cFf                    */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void dMeter2Draw_c::playPikariBckAnimation(f32 field_0) {
	nofralloc
#include "asm/d/meter/d_meter2_draw/playPikariBckAnimation__13dMeter2Draw_cFf.s"
}
#pragma pop


/* 80213D6C-80213E3C 00D0+00 rc=1 efc=0 .text      setPikariBpkAnimation__13dMeter2Draw_cFP11J2DAnmColor        */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void dMeter2Draw_c::setPikariBpkAnimation(J2DAnmColor* field_0) {
	nofralloc
#include "asm/d/meter/d_meter2_draw/setPikariBpkAnimation__13dMeter2Draw_cFP11J2DAnmColor.s"
}
#pragma pop


/* 80213E3C-80213E94 0058+00 rc=3 efc=0 .text      playPikariBpkAnimation__13dMeter2Draw_cFf                    */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void dMeter2Draw_c::playPikariBpkAnimation(f32 field_0) {
	nofralloc
#include "asm/d/meter/d_meter2_draw/playPikariBpkAnimation__13dMeter2Draw_cFf.s"
}
#pragma pop


/* 80213E94-80213FF0 015C+00 rc=1 efc=0 .text      playOxygenBpkAnimation__13dMeter2Draw_cFP11J2DAnmColor       */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void dMeter2Draw_c::playOxygenBpkAnimation(J2DAnmColor* field_0) {
	nofralloc
#include "asm/d/meter/d_meter2_draw/playOxygenBpkAnimation__13dMeter2Draw_cFP11J2DAnmColor.s"
}
#pragma pop


/* 80213FF0-802140DC 00EC+00 rc=1 efc=0 .text      drawPikari__13dMeter2Draw_cFP8CPaneMgrPffQ28JUtility6TColorQ28JUtility6TColorQ28JUtility6TColorQ28JUtility6TColorfUc */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void dMeter2Draw_c::drawPikari(CPaneMgr* field_0, f32* field_1, f32 field_2, JUtility::TColor field_3, JUtility::TColor field_4, JUtility::TColor field_5, JUtility::TColor field_6, f32 field_7, u8 field_8) {
	nofralloc
#include "asm/d/meter/d_meter2_draw/func_80213FF0.s"
}
#pragma pop


/* ############################################################################################## */
/* 804548A8-804548AC 0004+00 rc=1 efc=0 .sdata2    @5784                                                        */
f32 d_meter_d_meter2_draw__lit_5784 = 28.0f;

/* 804548AC-804548B0 0004+00 rc=1 efc=0 .sdata2    @5785                                                        */
f32 d_meter_d_meter2_draw__lit_5785 = 24.0f;

/* 804548B0-804548B4 0004+00 rc=4 efc=0 .sdata2    @5786                                                        */
f32 lit_5786 = -1.0f;

/* 802140DC-8021462C 0550+00 rc=7 efc=6 .text      drawPikari__13dMeter2Draw_cFffPffQ28JUtility6TColorQ28JUtility6TColorQ28JUtility6TColorQ28JUtility6TColorfUc */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void dMeter2Draw_c::drawPikari(f32 field_0, f32 field_1, f32* field_2, f32 field_3, JUtility::TColor field_4, JUtility::TColor field_5, JUtility::TColor field_6, JUtility::TColor field_7, f32 field_8, u8 field_9) {
	nofralloc
#include "asm/d/meter/d_meter2_draw/func_802140DC.s"
}
#pragma pop


/* 8021462C-802147CC 01A0+00 rc=1 efc=1 .text      drawPikariHakusha__13dMeter2Draw_cFffffQ28JUtility6TColorQ28JUtility6TColorQ28JUtility6TColorQ28JUtility6TColor */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void dMeter2Draw_c::drawPikariHakusha(f32 field_0, f32 field_1, f32 field_2, f32 field_3, JUtility::TColor field_4, JUtility::TColor field_5, JUtility::TColor field_6, JUtility::TColor field_7) {
	nofralloc
#include "asm/d/meter/d_meter2_draw/func_8021462C.s"
}
#pragma pop


/* 802147CC-802149F4 0228+00 rc=1 efc=0 .text      changeTextureLife__13dMeter2Draw_cFibUc                      */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void dMeter2Draw_c::changeTextureLife(int field_0, bool field_1, u8 field_2) {
	nofralloc
#include "asm/d/meter/d_meter2_draw/changeTextureLife__13dMeter2Draw_cFibUc.s"
}
#pragma pop


/* 802149F4-80214C20 022C+00 rc=2 efc=1 .text      drawLife__13dMeter2Draw_cFssff                               */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void dMeter2Draw_c::drawLife(s16 field_0, s16 field_1, f32 field_2, f32 field_3) {
	nofralloc
#include "asm/d/meter/d_meter2_draw/drawLife__13dMeter2Draw_cFssff.s"
}
#pragma pop


/* 80214C20-80214DF4 01D4+00 rc=2 efc=1 .text      setAlphaLifeChange__13dMeter2Draw_cFb                        */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void dMeter2Draw_c::setAlphaLifeChange(bool field_0) {
	nofralloc
#include "asm/d/meter/d_meter2_draw/setAlphaLifeChange__13dMeter2Draw_cFb.s"
}
#pragma pop


/* 80214DF4-80214E54 0060+00 rc=1 efc=1 .text      setAlphaLifeAnimeMin__13dMeter2Draw_cFv                      */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void dMeter2Draw_c::setAlphaLifeAnimeMin() {
	nofralloc
#include "asm/d/meter/d_meter2_draw/setAlphaLifeAnimeMin__13dMeter2Draw_cFv.s"
}
#pragma pop


/* 80214E54-80214EB4 0060+00 rc=1 efc=1 .text      setAlphaLifeAnimeMax__13dMeter2Draw_cFv                      */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void dMeter2Draw_c::setAlphaLifeAnimeMax() {
	nofralloc
#include "asm/d/meter/d_meter2_draw/setAlphaLifeAnimeMax__13dMeter2Draw_cFv.s"
}
#pragma pop


/* ############################################################################################## */
/* 804548B4-804548B8 0004+00 rc=1 efc=0 .sdata2    @6143                                                        */
f32 d_meter_d_meter2_draw__lit_6143 = 0.25f;

/* 80214EB4-80215290 03DC+00 rc=1 efc=0 .text      drawKanteraScreen__13dMeter2Draw_cFUc                        */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void dMeter2Draw_c::drawKanteraScreen(u8 field_0) {
	nofralloc
#include "asm/d/meter/d_meter2_draw/drawKanteraScreen__13dMeter2Draw_cFUc.s"
}
#pragma pop


/* ############################################################################################## */
/* 804548B8-804548BC 0004+00 rc=1 efc=0 .sdata2    @6175                                                        */
f32 lit_6175 = 0.03125f;

/* 80215290-80215380 00F0+00 rc=1 efc=0 .text      drawMagic__13dMeter2Draw_cFssff                              */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void dMeter2Draw_c::drawMagic(s16 field_0, s16 field_1, f32 field_2, f32 field_3) {
	nofralloc
#include "asm/d/meter/d_meter2_draw/drawMagic__13dMeter2Draw_cFssff.s"
}
#pragma pop


/* 80215380-802154A8 0128+00 rc=2 efc=0 .text      setAlphaMagicChange__13dMeter2Draw_cFb                       */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void dMeter2Draw_c::setAlphaMagicChange(bool field_0) {
	nofralloc
#include "asm/d/meter/d_meter2_draw/setAlphaMagicChange__13dMeter2Draw_cFb.s"
}
#pragma pop


/* ############################################################################################## */
/* 804548BC-804548C0 0004+00 rc=4 efc=0 .sdata2    @6210                                                        */
f32 lit_6210 = 5.0f;

/* 804548C0-804548C8 0008+00 rc=9 efc=0 .sdata2    @6293                                                        */
f64 lit_6293 = 4503599627370496.0 /* cast u32 to float */;

/* 802154A8-802155B8 0110+00 rc=2 efc=1 .text      drawKantera__13dMeter2Draw_cFllff                            */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void dMeter2Draw_c::drawKantera(s32 field_0, s32 field_1, f32 field_2, f32 field_3) {
	nofralloc
#include "asm/d/meter/d_meter2_draw/drawKantera__13dMeter2Draw_cFllff.s"
}
#pragma pop


/* 802155B8-802156E0 0128+00 rc=3 efc=1 .text      setAlphaKanteraChange__13dMeter2Draw_cFb                     */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void dMeter2Draw_c::setAlphaKanteraChange(bool field_0) {
	nofralloc
#include "asm/d/meter/d_meter2_draw/setAlphaKanteraChange__13dMeter2Draw_cFb.s"
}
#pragma pop


/* 802156E0-8021575C 007C+00 rc=1 efc=1 .text      setAlphaKanteraAnimeMin__13dMeter2Draw_cFv                   */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void dMeter2Draw_c::setAlphaKanteraAnimeMin() {
	nofralloc
#include "asm/d/meter/d_meter2_draw/setAlphaKanteraAnimeMin__13dMeter2Draw_cFv.s"
}
#pragma pop


/* 8021575C-802157E0 0084+00 rc=1 efc=1 .text      setAlphaKanteraAnimeMax__13dMeter2Draw_cFv                   */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void dMeter2Draw_c::setAlphaKanteraAnimeMax() {
	nofralloc
#include "asm/d/meter/d_meter2_draw/setAlphaKanteraAnimeMax__13dMeter2Draw_cFv.s"
}
#pragma pop


/* 802157E0-802158F0 0110+00 rc=1 efc=1 .text      drawOxygen__13dMeter2Draw_cFllff                             */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void dMeter2Draw_c::drawOxygen(s32 field_0, s32 field_1, f32 field_2, f32 field_3) {
	nofralloc
#include "asm/d/meter/d_meter2_draw/drawOxygen__13dMeter2Draw_cFllff.s"
}
#pragma pop


/* 802158F0-80215A18 0128+00 rc=2 efc=1 .text      setAlphaOxygenChange__13dMeter2Draw_cFb                      */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void dMeter2Draw_c::setAlphaOxygenChange(bool field_0) {
	nofralloc
#include "asm/d/meter/d_meter2_draw/setAlphaOxygenChange__13dMeter2Draw_cFb.s"
}
#pragma pop


/* 80215A18-80215A94 007C+00 rc=1 efc=1 .text      setAlphaOxygenAnimeMin__13dMeter2Draw_cFv                    */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void dMeter2Draw_c::setAlphaOxygenAnimeMin() {
	nofralloc
#include "asm/d/meter/d_meter2_draw/setAlphaOxygenAnimeMin__13dMeter2Draw_cFv.s"
}
#pragma pop


/* 80215A94-80215B18 0084+00 rc=1 efc=1 .text      setAlphaOxygenAnimeMax__13dMeter2Draw_cFv                    */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void dMeter2Draw_c::setAlphaOxygenAnimeMax() {
	nofralloc
#include "asm/d/meter/d_meter2_draw/setAlphaOxygenAnimeMax__13dMeter2Draw_cFv.s"
}
#pragma pop


/* ############################################################################################## */
/* 804548C8-804548CC 0004+00 rc=4 efc=0 .sdata2    @6524                                                        */
f32 lit_6524 = 3.0f / 10.0f;

/* 80215B18-80215DA4 028C+00 rc=2 efc=1 .text      drawLightDrop__13dMeter2Draw_cFUcUcffffUc                    */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void dMeter2Draw_c::drawLightDrop(u8 field_0, u8 field_1, f32 field_2, f32 field_3, f32 field_4, f32 field_5, u8 field_6) {
	nofralloc
#include "asm/d/meter/d_meter2_draw/drawLightDrop__13dMeter2Draw_cFUcUcffffUc.s"
}
#pragma pop


/* 80215DA4-80215DA8 0004+00 rc=2 efc=1 .text      setAlphaLightDropChange__13dMeter2Draw_cFb                   */
void dMeter2Draw_c::setAlphaLightDropChange(bool field_0) {
	/* empty function */
}


/* 80215DA8-80215E40 0098+00 rc=1 efc=1 .text      getNowLightDropRateCalc__13dMeter2Draw_cFv                   */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void dMeter2Draw_c::getNowLightDropRateCalc() {
	nofralloc
#include "asm/d/meter/d_meter2_draw/getNowLightDropRateCalc__13dMeter2Draw_cFv.s"
}
#pragma pop


/* 80215E40-80215F88 0148+00 rc=1 efc=1 .text      setAlphaLightDropAnimeMin__13dMeter2Draw_cFv                 */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void dMeter2Draw_c::setAlphaLightDropAnimeMin() {
	nofralloc
#include "asm/d/meter/d_meter2_draw/setAlphaLightDropAnimeMin__13dMeter2Draw_cFv.s"
}
#pragma pop


/* 80215F88-8021632C 03A4+00 rc=1 efc=1 .text      setAlphaLightDropAnimeMax__13dMeter2Draw_cFv                 */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void dMeter2Draw_c::setAlphaLightDropAnimeMax() {
	nofralloc
#include "asm/d/meter/d_meter2_draw/setAlphaLightDropAnimeMax__13dMeter2Draw_cFv.s"
}
#pragma pop


/* 8021632C-80216684 0358+00 rc=2 efc=1 .text      drawRupee__13dMeter2Draw_cFs                                 */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void dMeter2Draw_c::drawRupee(s16 field_0) {
	nofralloc
#include "asm/d/meter/d_meter2_draw/drawRupee__13dMeter2Draw_cFs.s"
}
#pragma pop


/* 80216684-802168D0 024C+00 rc=2 efc=1 .text      setAlphaRupeeChange__13dMeter2Draw_cFb                       */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void dMeter2Draw_c::setAlphaRupeeChange(bool field_0) {
	nofralloc
#include "asm/d/meter/d_meter2_draw/setAlphaRupeeChange__13dMeter2Draw_cFb.s"
}
#pragma pop


/* 802168D0-80216990 00C0+00 rc=1 efc=1 .text      setAlphaRupeeAnimeMin__13dMeter2Draw_cFv                     */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void dMeter2Draw_c::setAlphaRupeeAnimeMin() {
	nofralloc
#include "asm/d/meter/d_meter2_draw/setAlphaRupeeAnimeMin__13dMeter2Draw_cFv.s"
}
#pragma pop


/* 80216990-80216A40 00B0+00 rc=1 efc=1 .text      setAlphaRupeeAnimeMax__13dMeter2Draw_cFv                     */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void dMeter2Draw_c::setAlphaRupeeAnimeMax() {
	nofralloc
#include "asm/d/meter/d_meter2_draw/setAlphaRupeeAnimeMax__13dMeter2Draw_cFv.s"
}
#pragma pop


/* 80216A40-80216B28 00E8+00 rc=2 efc=1 .text      drawKey__13dMeter2Draw_cFs                                   */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void dMeter2Draw_c::drawKey(s16 field_0) {
	nofralloc
#include "asm/d/meter/d_meter2_draw/drawKey__13dMeter2Draw_cFs.s"
}
#pragma pop


/* 80216B28-80216CA8 0180+00 rc=2 efc=1 .text      setAlphaKeyChange__13dMeter2Draw_cFb                         */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void dMeter2Draw_c::setAlphaKeyChange(bool field_0) {
	nofralloc
#include "asm/d/meter/d_meter2_draw/setAlphaKeyChange__13dMeter2Draw_cFb.s"
}
#pragma pop


/* 80216CA8-80216D2C 0084+00 rc=1 efc=1 .text      setAlphaKeyAnimeMin__13dMeter2Draw_cFv                       */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void dMeter2Draw_c::setAlphaKeyAnimeMin() {
	nofralloc
#include "asm/d/meter/d_meter2_draw/setAlphaKeyAnimeMin__13dMeter2Draw_cFv.s"
}
#pragma pop


/* 80216D2C-80216DAC 0080+00 rc=1 efc=1 .text      setAlphaKeyAnimeMax__13dMeter2Draw_cFv                       */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void dMeter2Draw_c::setAlphaKeyAnimeMax() {
	nofralloc
#include "asm/d/meter/d_meter2_draw/setAlphaKeyAnimeMax__13dMeter2Draw_cFv.s"
}
#pragma pop


/* 80216DAC-802170E4 0338+00 rc=2 efc=1 .text      drawButtonA__13dMeter2Draw_cFUcfffffbb                       */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void dMeter2Draw_c::drawButtonA(u8 field_0, f32 field_1, f32 field_2, f32 field_3, f32 field_4, f32 field_5, bool field_6, bool field_7) {
	nofralloc
#include "asm/d/meter/d_meter2_draw/drawButtonA__13dMeter2Draw_cFUcfffffbb.s"
}
#pragma pop


/* 802170E4-8021764C 0568+00 rc=2 efc=1 .text      drawButtonB__13dMeter2Draw_cFUcbfffffb                       */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void dMeter2Draw_c::drawButtonB(u8 field_0, bool field_1, f32 field_2, f32 field_3, f32 field_4, f32 field_5, f32 field_6, bool field_7) {
	nofralloc
#include "asm/d/meter/d_meter2_draw/drawButtonB__13dMeter2Draw_cFUcbfffffb.s"
}
#pragma pop


/* 8021764C-802176EC 00A0+00 rc=2 efc=1 .text      drawButtonR__13dMeter2Draw_cFUcUcbb                          */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void dMeter2Draw_c::drawButtonR(u8 field_0, u8 field_1, bool field_2, bool field_3) {
	nofralloc
#include "asm/d/meter/d_meter2_draw/drawButtonR__13dMeter2Draw_cFUcUcbb.s"
}
#pragma pop


/* 802176EC-80217904 0218+00 rc=2 efc=1 .text      drawButtonZ__13dMeter2Draw_cFUc                              */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void dMeter2Draw_c::drawButtonZ(u8 field_0) {
	nofralloc
#include "asm/d/meter/d_meter2_draw/drawButtonZ__13dMeter2Draw_cFUc.s"
}
#pragma pop


/* 80217904-80217954 0050+00 rc=2 efc=1 .text      drawButton3D__13dMeter2Draw_cFUc                             */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void dMeter2Draw_c::drawButton3D(u8 field_0) {
	nofralloc
#include "asm/d/meter/d_meter2_draw/drawButton3D__13dMeter2Draw_cFUc.s"
}
#pragma pop


/* 80217954-802179C0 006C+00 rc=2 efc=1 .text      drawButtonC__13dMeter2Draw_cFUcb                             */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void dMeter2Draw_c::drawButtonC(u8 field_0, bool field_1) {
	nofralloc
#include "asm/d/meter/d_meter2_draw/drawButtonC__13dMeter2Draw_cFUcb.s"
}
#pragma pop


/* 802179C0-80217A10 0050+00 rc=2 efc=1 .text      drawButtonS__13dMeter2Draw_cFUc                              */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void dMeter2Draw_c::drawButtonS(u8 field_0) {
	nofralloc
#include "asm/d/meter/d_meter2_draw/drawButtonS__13dMeter2Draw_cFUc.s"
}
#pragma pop


/* 80217A10-80217AB4 00A4+00 rc=1 efc=1 .text      drawButtonBin__13dMeter2Draw_cFUc                            */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void dMeter2Draw_c::drawButtonBin(u8 field_0) {
	nofralloc
#include "asm/d/meter/d_meter2_draw/drawButtonBin__13dMeter2Draw_cFUc.s"
}
#pragma pop


/* 80217AB4-80218238 0784+00 rc=2 efc=1 .text      drawButtonXY__13dMeter2Draw_cFiUcUcbb                        */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void dMeter2Draw_c::drawButtonXY(int field_0, u8 field_1, u8 field_2, bool field_3, bool field_4) {
	nofralloc
#include "asm/d/meter/d_meter2_draw/drawButtonXY__13dMeter2Draw_cFiUcUcbb.s"
}
#pragma pop


/* 80218238-80218254 001C+00 rc=1 efc=1 .text      getButtonCrossParentInitTransY__13dMeter2Draw_cFv            */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void dMeter2Draw_c::getButtonCrossParentInitTransY() {
	nofralloc
#include "asm/d/meter/d_meter2_draw/getButtonCrossParentInitTransY__13dMeter2Draw_cFv.s"
}
#pragma pop


/* 80218254-80218338 00E4+00 rc=2 efc=1 .text      drawButtonCross__13dMeter2Draw_cFff                          */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void dMeter2Draw_c::drawButtonCross(f32 field_0, f32 field_1) {
	nofralloc
#include "asm/d/meter/d_meter2_draw/drawButtonCross__13dMeter2Draw_cFff.s"
}
#pragma pop


/* 80218338-802183A8 0070+00 rc=1 efc=1 .text      setAlphaButtonCrossAnimeMin__13dMeter2Draw_cFv               */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void dMeter2Draw_c::setAlphaButtonCrossAnimeMin() {
	nofralloc
#include "asm/d/meter/d_meter2_draw/setAlphaButtonCrossAnimeMin__13dMeter2Draw_cFv.s"
}
#pragma pop


/* 802183A8-80218448 00A0+00 rc=1 efc=1 .text      setAlphaButtonCrossAnimeMax__13dMeter2Draw_cFv               */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void dMeter2Draw_c::setAlphaButtonCrossAnimeMax() {
	nofralloc
#include "asm/d/meter/d_meter2_draw/setAlphaButtonCrossAnimeMax__13dMeter2Draw_cFv.s"
}
#pragma pop


/* 80218448-80218524 00DC+00 rc=2 efc=0 .text      setAlphaButtonCrossItemAnimeMin__13dMeter2Draw_cFv           */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void dMeter2Draw_c::setAlphaButtonCrossItemAnimeMin() {
	nofralloc
#include "asm/d/meter/d_meter2_draw/setAlphaButtonCrossItemAnimeMin__13dMeter2Draw_cFv.s"
}
#pragma pop


/* 80218524-802185E8 00C4+00 rc=1 efc=0 .text      setAlphaButtonCrossItemAnimeMax__13dMeter2Draw_cFv           */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void dMeter2Draw_c::setAlphaButtonCrossItemAnimeMax() {
	nofralloc
#include "asm/d/meter/d_meter2_draw/setAlphaButtonCrossItemAnimeMax__13dMeter2Draw_cFv.s"
}
#pragma pop


/* 802185E8-802186C4 00DC+00 rc=2 efc=0 .text      setAlphaButtonCrossMapAnimeMin__13dMeter2Draw_cFv            */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void dMeter2Draw_c::setAlphaButtonCrossMapAnimeMin() {
	nofralloc
#include "asm/d/meter/d_meter2_draw/setAlphaButtonCrossMapAnimeMin__13dMeter2Draw_cFv.s"
}
#pragma pop


/* 802186C4-80218788 00C4+00 rc=1 efc=0 .text      setAlphaButtonCrossMapAnimeMax__13dMeter2Draw_cFv            */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void dMeter2Draw_c::setAlphaButtonCrossMapAnimeMax() {
	nofralloc
#include "asm/d/meter/d_meter2_draw/setAlphaButtonCrossMapAnimeMax__13dMeter2Draw_cFv.s"
}
#pragma pop


/* 80218788-8021901C 0894+00 rc=2 efc=1 .text      setAlphaButtonChange__13dMeter2Draw_cFb                      */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void dMeter2Draw_c::setAlphaButtonChange(bool field_0) {
	nofralloc
#include "asm/d/meter/d_meter2_draw/setAlphaButtonChange__13dMeter2Draw_cFb.s"
}
#pragma pop


/* 8021901C-802190A8 008C+00 rc=1 efc=1 .text      setAlphaButtonAnimeMin__13dMeter2Draw_cFv                    */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void dMeter2Draw_c::setAlphaButtonAnimeMin() {
	nofralloc
#include "asm/d/meter/d_meter2_draw/setAlphaButtonAnimeMin__13dMeter2Draw_cFv.s"
}
#pragma pop


/* 802190A8-80219174 00CC+00 rc=1 efc=1 .text      setAlphaButtonAnimeMax__13dMeter2Draw_cFv                    */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void dMeter2Draw_c::setAlphaButtonAnimeMax() {
	nofralloc
#include "asm/d/meter/d_meter2_draw/setAlphaButtonAnimeMax__13dMeter2Draw_cFv.s"
}
#pragma pop


/* 80219174-80219258 00E4+00 rc=1 efc=1 .text      setAlphaButtonAAnimeMin__13dMeter2Draw_cFv                   */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void dMeter2Draw_c::setAlphaButtonAAnimeMin() {
	nofralloc
#include "asm/d/meter/d_meter2_draw/setAlphaButtonAAnimeMin__13dMeter2Draw_cFv.s"
}
#pragma pop


/* 80219258-80219324 00CC+00 rc=1 efc=1 .text      setAlphaButtonAAnimeMax__13dMeter2Draw_cFv                   */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void dMeter2Draw_c::setAlphaButtonAAnimeMax() {
	nofralloc
#include "asm/d/meter/d_meter2_draw/setAlphaButtonAAnimeMax__13dMeter2Draw_cFv.s"
}
#pragma pop


/* 80219324-80219474 0150+00 rc=1 efc=1 .text      setAlphaButtonBAnimeMin__13dMeter2Draw_cFv                   */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void dMeter2Draw_c::setAlphaButtonBAnimeMin() {
	nofralloc
#include "asm/d/meter/d_meter2_draw/setAlphaButtonBAnimeMin__13dMeter2Draw_cFv.s"
}
#pragma pop


/* 80219474-802195A4 0130+00 rc=1 efc=1 .text      setAlphaButtonBAnimeMax__13dMeter2Draw_cFv                   */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void dMeter2Draw_c::setAlphaButtonBAnimeMax() {
	nofralloc
#include "asm/d/meter/d_meter2_draw/setAlphaButtonBAnimeMax__13dMeter2Draw_cFv.s"
}
#pragma pop


/* ############################################################################################## */
/* 804548CC-804548D0 0004+00 rc=5 efc=0 .sdata2    @8207                                                        */
f32 d_meter_d_meter2_draw__lit_8207 = 255.0f;

/* 802195A4-80219788 01E4+00 rc=1 efc=1 .text      setButtonIconAAlpha__13dMeter2Draw_cFUcUlb                   */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void dMeter2Draw_c::setButtonIconAAlpha(u8 field_0, u32 field_1, bool field_2) {
	nofralloc
#include "asm/d/meter/d_meter2_draw/setButtonIconAAlpha__13dMeter2Draw_cFUcUlb.s"
}
#pragma pop


/* 80219788-80219A84 02FC+00 rc=1 efc=1 .text      setButtonIconBAlpha__13dMeter2Draw_cFUcUlb                   */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void dMeter2Draw_c::setButtonIconBAlpha(u8 field_0, u32 field_1, bool field_2) {
	nofralloc
#include "asm/d/meter/d_meter2_draw/setButtonIconBAlpha__13dMeter2Draw_cFUcUlb.s"
}
#pragma pop


/* ############################################################################################## */
/* 804548D0-804548D4 0004+00 rc=1 efc=0 .sdata2    @8359                                                        */
f32 lit_8359 = 2.0f / 5.0f;

/* 804548D4-804548D8 0004+00 rc=1 efc=0 .sdata2    @8360                                                        */
f32 d_meter_d_meter2_draw__lit_8360 = 1.0f / 10.0f;

/* 80219A84-80219E98 0414+00 rc=1 efc=1 .text      setButtonIconMidonaAlpha__13dMeter2Draw_cFUl                 */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void dMeter2Draw_c::setButtonIconMidonaAlpha(u32 field_0) {
	nofralloc
#include "asm/d/meter/d_meter2_draw/setButtonIconMidonaAlpha__13dMeter2Draw_cFUl.s"
}
#pragma pop


/* 80219E98-8021A29C 0404+00 rc=1 efc=1 .text      setButtonIconAlpha__13dMeter2Draw_cFiUcUlb                   */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void dMeter2Draw_c::setButtonIconAlpha(int field_0, u8 field_1, u32 field_2, bool field_3) {
	nofralloc
#include "asm/d/meter/d_meter2_draw/setButtonIconAlpha__13dMeter2Draw_cFiUcUlb.s"
}
#pragma pop


/* 8021A29C-8021A2F4 0058+00 rc=1 efc=0 .text      getNumberTexture__13dMeter2Draw_cFi                          */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void dMeter2Draw_c::getNumberTexture(int field_0) {
	nofralloc
#include "asm/d/meter/d_meter2_draw/getNumberTexture__13dMeter2Draw_cFi.s"
}
#pragma pop


/* ############################################################################################## */
/* 80430158-80430178 0020+00 rc=1 efc=0 .bss       i_text_buf$8454                                              */
u8 data_80430158[32];

/* 8021A2F4-8021A468 0174+00 rc=10 efc=1 .text      getActionString__13dMeter2Draw_cFUcUcPUc                     */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void dMeter2Draw_c::getActionString(u8 field_0, u8 field_1, u8* field_2) {
	nofralloc
#include "asm/d/meter/d_meter2_draw/getActionString__13dMeter2Draw_cFUcUcPUc.s"
}
#pragma pop


/* ############################################################################################## */
/* 804548D8-804548DC 0004+00 rc=2 efc=0 .sdata2    @8548                                                        */
f32 lit_8548 = 100.0f;

/* 804548DC-804548E0 0004+00 rc=2 efc=0 .sdata2    @8549                                                        */
f32 lit_8549 = 48.0f;

/* 8021A468-8021A71C 02B4+00 rc=2 efc=0 .text      changeTextureItemB__13dMeter2Draw_cFUc                       */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void dMeter2Draw_c::changeTextureItemB(u8 field_0) {
	nofralloc
#include "asm/d/meter/d_meter2_draw/changeTextureItemB__13dMeter2Draw_cFUc.s"
}
#pragma pop


/* 8021A71C-8021A9C8 02AC+00 rc=1 efc=0 .text      changeTextureItemXY__13dMeter2Draw_cFiUc                     */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void dMeter2Draw_c::changeTextureItemXY(int field_0, u8 field_1) {
	nofralloc
#include "asm/d/meter/d_meter2_draw/changeTextureItemXY__13dMeter2Draw_cFiUc.s"
}
#pragma pop


/* 8021A9C8-8021AAA4 00DC+00 rc=12 efc=2 .text      setAlphaAnimeMin__13dMeter2Draw_cFP13CPaneMgrAlphas          */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void dMeter2Draw_c::setAlphaAnimeMin(CPaneMgrAlpha* field_0, s16 field_1) {
	nofralloc
#include "asm/d/meter/d_meter2_draw/setAlphaAnimeMin__13dMeter2Draw_cFP13CPaneMgrAlphas.s"
}
#pragma pop


/* 8021AAA4-8021AB84 00E0+00 rc=33 efc=23 .text      setAlphaAnimeMax__13dMeter2Draw_cFP13CPaneMgrAlphas          */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void dMeter2Draw_c::setAlphaAnimeMax(CPaneMgrAlpha* field_0, s16 field_1) {
	nofralloc
#include "asm/d/meter/d_meter2_draw/setAlphaAnimeMax__13dMeter2Draw_cFP13CPaneMgrAlphas.s"
}
#pragma pop


/* 8021AB84-8021AEC8 0344+00 rc=6 efc=6 .text      setItemNum__13dMeter2Draw_cFUcUcUc                           */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void dMeter2Draw_c::setItemNum(u8 field_0, u8 field_1, u8 field_2) {
	nofralloc
#include "asm/d/meter/d_meter2_draw/setItemNum__13dMeter2Draw_cFUcUcUc.s"
}
#pragma pop


/* 8021AEC8-8021AF78 00B0+00 rc=1 efc=1 .text      drawItemNum__13dMeter2Draw_cFUcf                             */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void dMeter2Draw_c::drawItemNum(u8 field_0, f32 field_1) {
	nofralloc
#include "asm/d/meter/d_meter2_draw/drawItemNum__13dMeter2Draw_cFUcf.s"
}
#pragma pop


/* ############################################################################################## */
/* 804548E0-804548E4 0004+00 rc=1 efc=0 .sdata2    @8774                                                        */
f32 lit_8774 = 9.0f;

/* 804548E4-804548E8 0004+00 rc=1 efc=0 .sdata2    @8775                                                        */
f32 lit_8775 = 3.0f / 5.0f;

/* 80456B90-80456B94 0004+00 rc=1 efc=0 .sbss2     @8746                                                        */
u8 d_meter_d_meter2_draw__lit_8746[4];

/* 80456B94-80456B98 0004+00 rc=1 efc=0 .sbss2     None                                                         */
u8 data_80456B94[4];

/* 80456B98-80456B9C 0004+00 rc=1 efc=0 .sbss2     @8747                                                        */
u8 d_meter_d_meter2_draw__lit_8747[4];

/* 80456B9C-80456BA0 0004+00 rc=1 efc=0 .sbss2     None                                                         */
u8 data_80456B9C[4];

/* 8021AF78-8021B0C8 0150+00 rc=1 efc=1 .text      drawKanteraMeter__13dMeter2Draw_cFUcf                        */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void dMeter2Draw_c::drawKanteraMeter(u8 field_0, f32 field_1) {
	nofralloc
#include "asm/d/meter/d_meter2_draw/drawKanteraMeter__13dMeter2Draw_cFUcf.s"
}
#pragma pop


/* 8021B0C8-8021B104 003C+00 rc=3 efc=3 .text      isButtonVisible__13dMeter2Draw_cFv                           */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void dMeter2Draw_c::isButtonVisible() {
	nofralloc
#include "asm/d/meter/d_meter2_draw/isButtonVisible__13dMeter2Draw_cFv.s"
}
#pragma pop


/* ############################################################################################## */
/* 804548E8-804548EC 0004+00 rc=2 efc=0 .sdata2    @8992                                                        */
f32 lit_8992 = 4.0f;

/* 804548EC-804548F0 0004+00 rc=1 efc=0 .sdata2    @8993                                                        */
f32 d_meter_d_meter2_draw__lit_8993 = -11.0f;

/* 804548F0-804548F4 0004+00 rc=4 efc=0 .sdata2    @8994                                                        */
f32 lit_8994 = 17.0f / 10.0f;

/* 804548F4-804548F8 0004+00 rc=3 efc=0 .sdata2    @8995                                                        */
f32 lit_8995 = -4.0f;

/* 804548F8-804548FC 0004+00 rc=2 efc=0 .sdata2    @8996                                                        */
f32 lit_8996 = -46.0f / 5.0f;

/* 804548FC-80454900 0004+00 rc=2 efc=0 .sdata2    @8997                                                        */
f32 lit_8997 = 19.0f / 20.0f;

/* 80454900-80454904 0004+00 rc=2 efc=0 .sdata2    @8998                                                        */
f32 lit_8998 = 46.0f / 5.0f;

/* 80454904-80454908 0004+00 rc=1 efc=0 .sdata2    @8999                                                        */
f32 lit_8999 = -14.0f;

/* 80454908-8045490C 0004+00 rc=2 efc=0 .sdata2    @9000                                                        */
f32 lit_9000 = 2.0f;

/* 8045490C-80454910 0004+00 rc=2 efc=0 .sdata2    @9001                                                        */
f32 lit_9001 = 1.5f;

/* 80454910-80454914 0004+00 rc=2 efc=0 .sdata2    @9002                                                        */
f32 lit_9002 = 350.0f;

/* 80454914-80454918 0004+00 rc=1 efc=0 .sdata2    @9003                                                        */
f32 lit_9003 = -2.0f;

/* 80454918-8045491C 0004+00 rc=1 efc=0 .sdata2    @9004                                                        */
f32 lit_9004 = -15.0f;

/* 8045491C-80454920 0004+00 rc=3 efc=0 .sdata2    @9005                                                        */
f32 lit_9005 = -13.0f / 10.0f;

/* 80454920-80454924 0004+00 rc=2 efc=0 .sdata2    @9006                                                        */
f32 lit_9006 = -16.0f;

/* 80454924-80454928 0004+00 rc=3 efc=0 .sdata2    @9007                                                        */
f32 lit_9007 = 1.888888955116272f;

/* 8021B104-8021B364 0260+00 rc=3 efc=0 .text      setItemParamX__13dMeter2Draw_cFUc                            */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void dMeter2Draw_c::setItemParamX(u8 field_0) {
	nofralloc
#include "asm/d/meter/d_meter2_draw/setItemParamX__13dMeter2Draw_cFUc.s"
}
#pragma pop


/* ############################################################################################## */
/* 80454928-8045492C 0004+00 rc=3 efc=0 .sdata2    @9025                                                        */
f32 lit_9025 = 14.0f;

/* 8045492C-80454930 0004+00 rc=2 efc=0 .sdata2    @9026                                                        */
f32 lit_9026 = 13.0f / 10.0f;

/* 80454930-80454934 0004+00 rc=2 efc=0 .sdata2    @9027                                                        */
f32 lit_9027 = -33.0f / 5.0f;

/* 80454934-80454938 0004+00 rc=2 efc=0 .sdata2    @9028                                                        */
f32 lit_9028 = 33.0f / 5.0f;

/* 80454938-8045493C 0004+00 rc=1 efc=0 .sdata2    @9029                                                        */
f32 lit_9029 = -9.0f / 5.0f;

/* 8021B364-8021B5B0 024C+00 rc=3 efc=0 .text      setItemParamY__13dMeter2Draw_cFUc                            */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void dMeter2Draw_c::setItemParamY(u8 field_0) {
	nofralloc
#include "asm/d/meter/d_meter2_draw/setItemParamY__13dMeter2Draw_cFUc.s"
}
#pragma pop


/* ############################################################################################## */
/* 8045493C-80454940 0004+00 rc=2 efc=0 .sdata2    @9047                                                        */
f32 lit_9047 = 11.0f / 5.0f;

/* 80454940-80454944 0004+00 rc=2 efc=0 .sdata2    @9048                                                        */
f32 lit_9048 = -30.0f;

/* 80454944-80454948 0004+00 rc=2 efc=0 .sdata2    @9049                                                        */
f32 lit_9049 = 0.75f;

/* 80454948-8045494C 0004+00 rc=2 efc=0 .sdata2    @9050                                                        */
f32 lit_9050 = 4.0f / 5.0f;

/* 8045494C-80454950 0004+00 rc=2 efc=0 .sdata2    @9051                                                        */
f32 lit_9051 = 7.0f / 5.0f;

/* 80454950-80454954 0004+00 rc=1 efc=0 .sdata2    @9052                                                        */
f32 lit_9052 = -3.5f;

/* 8021B5B0-8021B810 0260+00 rc=3 efc=0 .text      setItemParamZ__13dMeter2Draw_cFUc                            */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void dMeter2Draw_c::setItemParamZ(u8 field_0) {
	nofralloc
#include "asm/d/meter/d_meter2_draw/setItemParamZ__13dMeter2Draw_cFUc.s"
}
#pragma pop


/* ############################################################################################## */
/* 80454954-80454958 0004+00 rc=1 efc=0 .sdata2    @9089                                                        */
f32 lit_9089 = 17.299999237060547f;

/* 80454958-8045495C 0004+00 rc=1 efc=0 .sdata2    @9090                                                        */
f32 d_meter_d_meter2_draw__lit_9090 = -46.79999923706055f;

/* 8045495C-80454960 0004+00 rc=1 efc=0 .sdata2    @9091                                                        */
f32 d_meter_d_meter2_draw__lit_9091 = 26.0f;

/* 80454960-80454964 0004+00 rc=1 efc=0 .sdata2    @9092                                                        */
f32 lit_9092 = -54.70000076293945f;

/* 80454964-80454968 0004+00 rc=1 efc=0 .sdata2    @9093                                                        */
f32 lit_9093 = 20.700000762939453f;

/* 80454968-8045496C 0004+00 rc=1 efc=0 .sdata2    @9094                                                        */
f32 lit_9094 = -55.70000076293945f;

/* 8045496C-80454970 0004+00 rc=1 efc=0 .sdata2    @9095                                                        */
f32 lit_9095 = 77.0f / 5.0f;

/* 80454970-80454974 0004+00 rc=1 efc=0 .sdata2    @9096                                                        */
f32 lit_9096 = -47.79999923706055f;

/* 80454974-80454978 0004+00 rc=1 efc=0 .sdata2    @9097                                                        */
f32 lit_9097 = 23.299999237060547f;

/* 80454978-8045497C 0004+00 rc=1 efc=0 .sdata2    @9098                                                        */
f32 lit_9098 = 29.299999237060547f;

/* 8045497C-80454980 0004+00 rc=1 efc=0 .sdata2    @9099                                                        */
f32 lit_9099 = 20.299999237060547f;

/* 80454980-80454984 0004+00 rc=1 efc=0 .sdata2    @9100                                                        */
f32 lit_9100 = 12.0f;

/* 80454984-80454988 0004+00 rc=1 efc=0 .sdata2    @9101                                                        */
f32 lit_9101 = -22.0f;

/* 80454988-8045498C 0004+00 rc=1 efc=0 .sdata2    @9102                                                        */
f32 lit_9102 = 21.0f;

/* 8045498C-80454990 0004+00 rc=1 efc=0 .sdata2    @9103                                                        */
f32 lit_9103 = -46.70000076293945f;

/* 80454990-80454994 0004+00 rc=1 efc=0 .sdata2    @9104                                                        */
f32 lit_9104 = 19.0f;

/* 80454994-80454998 0004+00 rc=1 efc=0 .sdata2    @9105                                                        */
f32 lit_9105 = -45.0f;

/* 8021B810-8021BB6C 035C+00 rc=3 efc=0 .text      setItemParamB__13dMeter2Draw_cFUc                            */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void dMeter2Draw_c::setItemParamB(u8 field_0) {
	nofralloc
#include "asm/d/meter/d_meter2_draw/setItemParamB__13dMeter2Draw_cFUc.s"
}
#pragma pop


/* 8021BB6C-8021BBB4 0048+00 rc=1 efc=0 .text      getFishingType__13dMeter2Draw_cFv                            */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void dMeter2Draw_c::getFishingType() {
	nofralloc
#include "asm/d/meter/d_meter2_draw/getFishingType__13dMeter2Draw_cFv.s"
}
#pragma pop


/* 8021BBB4-8021BC24 0070+00 rc=3 efc=1 .text      getCanoeFishing__13dMeter2Draw_cFv                           */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void dMeter2Draw_c::getCanoeFishing() {
	nofralloc
#include "asm/d/meter/d_meter2_draw/getCanoeFishing__13dMeter2Draw_cFv.s"
}
#pragma pop


/* 8021BC24-8021BC54 0030+00 rc=1 efc=1 .text      getCameraSubject__13dMeter2Draw_cFv                          */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void dMeter2Draw_c::getCameraSubject() {
	nofralloc
#include "asm/d/meter/d_meter2_draw/getCameraSubject__13dMeter2Draw_cFv.s"
}
#pragma pop


/* 8021BC54-8021BCAC 0058+00 rc=1 efc=1 .text      getItemSubject__13dMeter2Draw_cFv                            */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void dMeter2Draw_c::getItemSubject() {
	nofralloc
#include "asm/d/meter/d_meter2_draw/getItemSubject__13dMeter2Draw_cFv.s"
}
#pragma pop


/* 8021BCAC-8021BCC0 0014+00 rc=1 efc=1 .text      getPlayerSubject__13dMeter2Draw_cFv                          */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void dMeter2Draw_c::getPlayerSubject() {
	nofralloc
#include "asm/d/meter/d_meter2_draw/getPlayerSubject__13dMeter2Draw_cFv.s"
}
#pragma pop


/* 8021BCC0-8021BDD0 0110+00 rc=4 efc=2 .text      isBButtonShow__13dMeter2Draw_cFb                             */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void dMeter2Draw_c::isBButtonShow(bool field_0) {
	nofralloc
#include "asm/d/meter/d_meter2_draw/isBButtonShow__13dMeter2Draw_cFb.s"
}
#pragma pop


/* 8021BDD0-8021BDDC 000C+00 rc=1 efc=1 .text      getButtonTimer__13dMeter2Draw_cFv                            */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void dMeter2Draw_c::getButtonTimer() {
	nofralloc
#include "asm/d/meter/d_meter2_draw/getButtonTimer__13dMeter2Draw_cFv.s"
}
#pragma pop


