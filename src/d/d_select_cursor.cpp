// 
// Generated By: dol2asm
// Translation Unit: d/d_select_cursor
// 

#include "dol2asm.h"
#include "dolphin/types.h"
#include "d/d_select_cursor.h"

// 
// Types:
// 

struct dSelect_cursorHIO_c {
	/* 801941E4 */ dSelect_cursorHIO_c();
	/* 80195978 */ ~dSelect_cursorHIO_c();
};

struct JKRArchive {
};

struct J2DAnmTextureSRTKey {
};

struct J2DAnmTransformKey {
	/* 801959C0 */ ~J2DAnmTransformKey();
};

struct J2DAnmColor {
};

struct J2DPane {
};

struct dSelect_cursor_c {
	/* 80194220 */ dSelect_cursor_c(u8, f32, JKRArchive*);
	/* 801949EC */ ~dSelect_cursor_c();
	/* 80194C30 */ void draw();
	/* 80194CC0 */ void update();
	/* 801950F4 */ void setPos(f32, f32, J2DPane*, bool);
	/* 801951B0 */ void setParam(f32, f32, f32, f32, f32);
	/* 801951C8 */ void setScale(f32);
	/* 801952A0 */ void setAlphaRate(f32);
	/* 80195330 */ void addAlpha();
	/* 801953CC */ void decAlpha();
	/* 80195460 */ void setBpkAnimation(J2DAnmColor*);
	/* 801955F0 */ void setBtk0Animation(J2DAnmTextureSRTKey*);
	/* 80195724 */ void setCursorAnimation();
	/* 801958E0 */ void setBckAnimation(J2DAnmTransformKey*);
	/* 80195940 */ void moveCenter(J2DPane*, f32, f32);
};

struct dSelect_icon_c {
	/* 80195A3C */ void animation();
	/* 80195B40 */ void setAlpha(u8);
	/* 80195B70 */ void setPos(J2DPane*, f32, f32);
};

struct JKRExpHeap {
};

struct J2DGrafContext {
};

struct J2DScreen {
	/* 802F8498 */ J2DScreen();
	/* 802F8648 */ void setPriority(char const*, u32, JKRArchive*);
	/* 802F8ED4 */ void draw(f32, f32, J2DGrafContext const*);
	/* 802F9690 */ void animation();
};

struct CPaneMgr {
	/* 80253984 */ CPaneMgr(J2DScreen*, u64, u8, JKRExpHeap*);
	/* 80254EBC */ void getGlobalVtxCenter(J2DPane*, bool, s16);
};

struct CPaneMgrAlpha {
	/* 802555C8 */ void show();
	/* 80255608 */ void hide();
	/* 8025564C */ void isVisible();
	/* 802557D0 */ void setAlphaRate(f32);
	/* 80255828 */ void getAlphaRate();
};

struct JKRFileLoader {
	/* 802D4270 */ void getGlbResource(char const*, JKRFileLoader*);
};

struct J2DAnmLoaderDataBase {
	/* 80308A6C */ void load(void const*);
};

// 
// Forward References:
// 


extern "C" void __ct__19dSelect_cursorHIO_cFv(); // 1
extern "C" void __ct__16dSelect_cursor_cFUcfP10JKRArchive(); // 1
extern "C" void __dt__16dSelect_cursor_cFv(); // 1
extern "C" void draw__16dSelect_cursor_cFv(); // 1
extern "C" void update__16dSelect_cursor_cFv(); // 1
extern "C" void setPos__16dSelect_cursor_cFffP7J2DPaneb(); // 1
extern "C" void setParam__16dSelect_cursor_cFfffff(); // 1
extern "C" void setScale__16dSelect_cursor_cFf(); // 1
extern "C" void setAlphaRate__16dSelect_cursor_cFf(); // 1
extern "C" void addAlpha__16dSelect_cursor_cFv(); // 1
extern "C" void decAlpha__16dSelect_cursor_cFv(); // 1
extern "C" void setBpkAnimation__16dSelect_cursor_cFP11J2DAnmColor(); // 1
extern "C" void setBtk0Animation__16dSelect_cursor_cFP19J2DAnmTextureSRTKey(); // 1
extern "C" void setCursorAnimation__16dSelect_cursor_cFv(); // 1
extern "C" void setBckAnimation__16dSelect_cursor_cFP18J2DAnmTransformKey(); // 1
extern "C" void moveCenter__16dSelect_cursor_cFP7J2DPaneff(); // 1
extern "C" void __dt__19dSelect_cursorHIO_cFv(); // 1
extern "C" void __dt__18J2DAnmTransformKeyFv(); // 1
extern "C" extern char const* const d_d_select_cursor__stringBase0;
extern "C" extern void* data_803BB70C[4];
extern "C" extern void* data_803BB71C[4];
extern "C" extern void* data_803BB72C[4];
extern "C" extern void* data_803BB73C[4];
extern "C" extern void* data_803BB74C[4 + 12 /* padding */];

// 
// External References:
// 

void dPaneClass_showNullPane(J2DScreen*); // 2
void* operator new(u32); // 2
void operator delete(void*); // 2

extern "C" void animation__14dSelect_icon_cFv(); // 1
extern "C" void setAlpha__14dSelect_icon_cFUc(); // 1
extern "C" void setPos__14dSelect_icon_cFP7J2DPaneff(); // 1
extern "C" void __ct__8CPaneMgrFP9J2DScreenUxUcP10JKRExpHeap(); // 1
extern "C" void getGlobalVtxCenter__8CPaneMgrFP7J2DPanebs(); // 1
extern "C" void dPaneClass_showNullPane__FP9J2DScreen(); // 1
extern "C" void show__13CPaneMgrAlphaFv(); // 1
extern "C" void hide__13CPaneMgrAlphaFv(); // 1
extern "C" void isVisible__13CPaneMgrAlphaFv(); // 1
extern "C" void setAlphaRate__13CPaneMgrAlphaFf(); // 1
extern "C" void getAlphaRate__13CPaneMgrAlphaFv(); // 1
extern "C" void* __nw__FUl(); // 1
extern "C" void __dl__FPv(); // 1
extern "C" void getGlbResource__13JKRFileLoaderFPCcP13JKRFileLoader(); // 1
extern "C" void __ct__9J2DScreenFv(); // 1
extern "C" void setPriority__9J2DScreenFPCcUlP10JKRArchive(); // 1
extern "C" void draw__9J2DScreenFffPC14J2DGrafContext(); // 1
extern "C" void animation__9J2DScreenFv(); // 1
extern "C" void load__20J2DAnmLoaderDataBaseFPCv(); // 1
extern "C" void _savegpr_23(); // 1
extern "C" void _savegpr_26(); // 1
extern "C" void _savegpr_27(); // 1
extern "C" void _savegpr_29(); // 1
extern "C" void _restgpr_23(); // 1
extern "C" void _restgpr_26(); // 1
extern "C" void _restgpr_27(); // 1
extern "C" void _restgpr_29(); // 1
extern "C" void strcmp(); // 1
extern "C" extern void* __vt__12dDlst_base_c[3];
extern "C" extern void* __vt__10J2DAnmBase[4];
extern "C" extern void* __vt__15J2DAnmTransform[5 + 4 /* padding */];
extern "C" extern void* __vt__18J2DAnmTransformKey[6];
extern "C" extern u8 g_dComIfG_gameInfo[122384];

// 
// Declarations:
// 

/* ############################################################################################## */
/* 80394A10-80394A30 0020+00 s=1 e=0 z=0  None .rodata    corner_tag$3707                                              */
SECTION_RODATA static u8 const data_80394A10[32] = {
	0x6C, 0x5F, 0x75, 0x5F, 0x6E, 0x75, 0x6C, 0x6C, 0x6C, 0x5F, 0x64, 0x5F, 0x6E, 0x75, 0x6C, 0x6C,
	0x72, 0x5F, 0x75, 0x5F, 0x6E, 0x75, 0x6C, 0x6C, 0x72, 0x5F, 0x64, 0x5F, 0x6E, 0x75, 0x6C, 0x6C,
};

/* 80394A30-80394A50 0020+00 s=1 e=0 z=0  None .rodata    tag$4181                                                     */
SECTION_RODATA static u8 const data_80394A30[32] = {
	0x00, 0x00, 0x00, 0x00, 0x6C, 0x5F, 0x6C, 0x64, 0x00, 0x00, 0x00, 0x00, 0x6C, 0x5F, 0x6C, 0x75,
	0x00, 0x00, 0x00, 0x00, 0x6C, 0x5F, 0x72, 0x64, 0x00, 0x00, 0x00, 0x00, 0x6C, 0x5F, 0x72, 0x75,
};

/* 80394A50-80394A90 0040+00 s=1 e=0 z=0  None .rodata    tag$4197                                                     */
SECTION_RODATA static u8 const data_80394A50[64] = {
	0x00, 0x69, 0x5F, 0x63, 0x5F, 0x6C, 0x64, 0x31, 0x00, 0x69, 0x5F, 0x63, 0x5F, 0x6C, 0x64, 0x32,
	0x00, 0x69, 0x5F, 0x63, 0x5F, 0x6C, 0x75, 0x31, 0x00, 0x69, 0x5F, 0x63, 0x5F, 0x6C, 0x75, 0x32,
	0x00, 0x69, 0x5F, 0x63, 0x5F, 0x72, 0x64, 0x31, 0x00, 0x69, 0x5F, 0x63, 0x5F, 0x72, 0x64, 0x32,
	0x00, 0x69, 0x5F, 0x63, 0x5F, 0x72, 0x75, 0x31, 0x00, 0x69, 0x5F, 0x63, 0x5F, 0x72, 0x75, 0x32,
};

/* 80394A90-80394AA0 0010+00 s=1 e=0 z=0  None .rodata    tag$4204                                                     */
SECTION_RODATA static u8 const data_80394A90[16] = {
	0x00, 0x00, 0x67, 0x6F, 0x6C, 0x64, 0x30, 0x31, 0x00, 0x00, 0x67, 0x6F, 0x6C, 0x64, 0x30, 0x32,
};

/* 80394AA0-80394C10 016D+03 s=6 e=0 z=0  None .rodata    @stringBase0                                                 */
#pragma push
#pragma force_active on
#pragma section ".dead"
SECTION_DEAD char const* const stringBase_80394AA0 = "zelda_select_cursor_4parts.blo";
SECTION_DEAD char const* const stringBase_80394ABF = "zelda_store_select_icon.blo";
SECTION_DEAD char const* const stringBase_80394ADB = 
    "zelda_map_screen_portal_icon.blo";
SECTION_DEAD char const* const stringBase_80394AFC = "zelda_map_screen_batsumark.blo";
SECTION_DEAD char const* const stringBase_80394B1B = "";
SECTION_DEAD char const* const stringBase_80394B1C = "zelda_store_select_icon.bck";
SECTION_DEAD char const* const stringBase_80394B38 = "zelda_select_cursor_4parts.bpk";
SECTION_DEAD char const* const stringBase_80394B57 = "zelda_store_select_icon.bpk";
SECTION_DEAD char const* const stringBase_80394B73 = 
    "zelda_map_screen_portal_icon.bpk";
SECTION_DEAD char const* const stringBase_80394B94 = "zelda_map_screen_batsumark.bpk";
SECTION_DEAD char const* const stringBase_80394BB3 = "zelda_select_cursor_4parts.btk";
SECTION_DEAD char const* const stringBase_80394BD2 = "zelda_store_select_icon.btk";
SECTION_DEAD char const* const stringBase_80394BEE = "zelda_store_select_icon_02.btk";
/* @stringBase0 padding */
SECTION_DEAD static char const* const pad_80394C0D = "\0\0";
#pragma pop

/* 803BB700-803BB70C 000C+00 s=1 e=0 z=0  None .data      cNullVec__6Z2Calc                                            */
SECTION_DATA static u8 cNullVec__6Z2Calc[12] = {
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
};

/* 803BB70C-803BB71C 0010+00 s=0 e=0 z=0  None .data      blo_name$3684                                                */
SECTION_DATA void* data_803BB70C[4] = {
	/* 0    */ (void*)&d_d_select_cursor__stringBase0,
	/* 1    */ (void*)(((char*)&d_d_select_cursor__stringBase0)+0x1F),
	/* 2    */ (void*)(((char*)&d_d_select_cursor__stringBase0)+0x3B),
	/* 3    */ (void*)(((char*)&d_d_select_cursor__stringBase0)+0x5C),
};

/* 803BB71C-803BB72C 0010+00 s=0 e=0 z=0  None .data      bck_name$3685                                                */
SECTION_DATA void* data_803BB71C[4] = {
	/* 0    */ (void*)(((char*)&d_d_select_cursor__stringBase0)+0x7B),
	/* 1    */ (void*)(((char*)&d_d_select_cursor__stringBase0)+0x7C),
	/* 2    */ (void*)(((char*)&d_d_select_cursor__stringBase0)+0x7B),
	/* 3    */ (void*)(((char*)&d_d_select_cursor__stringBase0)+0x7B),
};

/* 803BB72C-803BB73C 0010+00 s=0 e=0 z=0  None .data      bpk_name$3686                                                */
SECTION_DATA void* data_803BB72C[4] = {
	/* 0    */ (void*)(((char*)&d_d_select_cursor__stringBase0)+0x98),
	/* 1    */ (void*)(((char*)&d_d_select_cursor__stringBase0)+0xB7),
	/* 2    */ (void*)(((char*)&d_d_select_cursor__stringBase0)+0xD3),
	/* 3    */ (void*)(((char*)&d_d_select_cursor__stringBase0)+0xF4),
};

/* 803BB73C-803BB74C 0010+00 s=0 e=0 z=0  None .data      btk_name$3687                                                */
SECTION_DATA void* data_803BB73C[4] = {
	/* 0    */ (void*)(((char*)&d_d_select_cursor__stringBase0)+0x113),
	/* 1    */ (void*)(((char*)&d_d_select_cursor__stringBase0)+0x132),
	/* 2    */ (void*)(((char*)&d_d_select_cursor__stringBase0)+0x7B),
	/* 3    */ (void*)(((char*)&d_d_select_cursor__stringBase0)+0x7B),
};

/* 803BB74C-803BB78C 0010+30 s=0 e=0 z=0  None .data      btk2_name$3688                                               */
SECTION_DATA void* data_803BB74C[4 + 12 /* padding */] = {
	/* 0    */ (void*)(((char*)&d_d_select_cursor__stringBase0)+0x7B),
	/* 1    */ (void*)(((char*)&d_d_select_cursor__stringBase0)+0x14E),
	/* 2    */ (void*)(((char*)&d_d_select_cursor__stringBase0)+0x7B),
	/* 3    */ (void*)(((char*)&d_d_select_cursor__stringBase0)+0x7B),
	/* padding */
	NULL,
	NULL,
	NULL,
	NULL,
	NULL,
	NULL,
	NULL,
	NULL,
	NULL,
	NULL,
	NULL,
	NULL,
};

/* 803BB78C-803BB7A8 0010+0C s=2 e=0 z=0  None .data      __vt__16dSelect_cursor_c                                     */
SECTION_DATA static void* __vt__16dSelect_cursor_c[4 + 3 /* padding */] = {
	/* 0    */ (void*)NULL /* RTTI */,
	/* 1    */ (void*)NULL,
	/* 2    */ (void*)draw__16dSelect_cursor_cFv,
	/* 3    */ (void*)__dt__16dSelect_cursor_cFv,
	/* padding */
	NULL,
	NULL,
	NULL,
};

/* 803BB7A8-803BB7B8 000C+04 s=2 e=0 z=0  None .data      __vt__19dSelect_cursorHIO_c                                  */
SECTION_DATA static void* __vt__19dSelect_cursorHIO_c[3 + 1 /* padding */] = {
	/* 0    */ (void*)NULL /* RTTI */,
	/* 1    */ (void*)NULL,
	/* 2    */ (void*)__dt__19dSelect_cursorHIO_cFv,
	/* padding */
	NULL,
};

/* 80453A48-80453A4C 0004+00 s=4 e=0 z=0  None .sdata2    @3673                                                        */
SECTION_SDATA2 static f32 lit_3673 = 1.0f;

/* 80453A4C-80453A50 0004+00 s=1 e=0 z=0  None .sdata2    @3674                                                        */
SECTION_SDATA2 static f32 lit_3674 = 3.0f / 10.0f;

/* 801941E4-80194220 003C+00 s=1 e=0 z=0  None .text      __ct__19dSelect_cursorHIO_cFv                                */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm dSelect_cursorHIO_c::dSelect_cursorHIO_c() {
	nofralloc
#include "asm/d/d_select_cursor/__ct__19dSelect_cursorHIO_cFv.s"
}
#pragma pop


/* ############################################################################################## */
/* 80453A50-80453A54 0004+00 s=4 e=0 z=0  None .sdata2    @3808                                                        */
SECTION_SDATA2 static u8 lit_3808[4] = {
	0x00, 0x00, 0x00, 0x00,
};

/* 80194220-801949EC 07CC+00 s=0 e=14 z=0  None .text      __ct__16dSelect_cursor_cFUcfP10JKRArchive                    */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm dSelect_cursor_c::dSelect_cursor_c(u8 param_0, f32 param_1, JKRArchive* param_2) {
	nofralloc
#include "asm/d/d_select_cursor/__ct__16dSelect_cursor_cFUcfP10JKRArchive.s"
}
#pragma pop


/* 801949EC-80194C30 0244+00 s=1 e=0 z=0  None .text      __dt__16dSelect_cursor_cFv                                   */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm dSelect_cursor_c::~dSelect_cursor_c() {
	nofralloc
#include "asm/d/d_select_cursor/__dt__16dSelect_cursor_cFv.s"
}
#pragma pop


/* 80194C30-80194CC0 0090+00 s=1 e=0 z=0  None .text      draw__16dSelect_cursor_cFv                                   */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void dSelect_cursor_c::draw() {
	nofralloc
#include "asm/d/d_select_cursor/draw__16dSelect_cursor_cFv.s"
}
#pragma pop


/* ############################################################################################## */
/* 80453A54-80453A58 0004+00 s=3 e=0 z=0  None .sdata2    @4062                                                        */
SECTION_SDATA2 static f32 lit_4062 = 0.5f;

/* 80453A58-80453A60 0008+00 s=3 e=0 z=0  None .sdata2    @4064                                                        */
SECTION_SDATA2 static f64 lit_4064 = 4503601774854144.0 /* cast s32 to float */;

/* 80194CC0-801950F4 0434+00 s=1 e=0 z=0  None .text      update__16dSelect_cursor_cFv                                 */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void dSelect_cursor_c::update() {
	nofralloc
#include "asm/d/d_select_cursor/update__16dSelect_cursor_cFv.s"
}
#pragma pop


/* ############################################################################################## */
/* 80453A60-80453A64 0004+00 s=1 e=0 z=0  None .sdata2    @4089                                                        */
SECTION_SDATA2 static f32 lit_4089 = -1.0f;

/* 801950F4-801951B0 00BC+00 s=0 e=30 z=0  None .text      setPos__16dSelect_cursor_cFffP7J2DPaneb                      */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void dSelect_cursor_c::setPos(f32 param_0, f32 param_1, J2DPane* param_2, bool param_3) {
	nofralloc
#include "asm/d/d_select_cursor/setPos__16dSelect_cursor_cFffP7J2DPaneb.s"
}
#pragma pop


/* 801951B0-801951C8 0018+00 s=0 e=24 z=0  None .text      setParam__16dSelect_cursor_cFfffff                           */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void dSelect_cursor_c::setParam(f32 param_0, f32 param_1, f32 param_2, f32 param_3, f32 param_4) {
	nofralloc
#include "asm/d/d_select_cursor/setParam__16dSelect_cursor_cFfffff.s"
}
#pragma pop


/* 801951C8-801952A0 00D8+00 s=0 e=14 z=0  None .text      setScale__16dSelect_cursor_cFf                               */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void dSelect_cursor_c::setScale(f32 param_0) {
	nofralloc
#include "asm/d/d_select_cursor/setScale__16dSelect_cursor_cFf.s"
}
#pragma pop


/* 801952A0-80195330 0090+00 s=0 e=77 z=0  None .text      setAlphaRate__16dSelect_cursor_cFf                           */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void dSelect_cursor_c::setAlphaRate(f32 param_0) {
	nofralloc
#include "asm/d/d_select_cursor/setAlphaRate__16dSelect_cursor_cFf.s"
}
#pragma pop


/* ############################################################################################## */
/* 80453A64-80453A68 0004+00 s=2 e=0 z=0  None .sdata2    @4157                                                        */
SECTION_SDATA2 static f32 lit_4157 = 5.0f;

/* 80195330-801953CC 009C+00 s=0 e=1 z=0  None .text      addAlpha__16dSelect_cursor_cFv                               */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void dSelect_cursor_c::addAlpha() {
	nofralloc
#include "asm/d/d_select_cursor/addAlpha__16dSelect_cursor_cFv.s"
}
#pragma pop


/* 801953CC-80195460 0094+00 s=0 e=1 z=0  None .text      decAlpha__16dSelect_cursor_cFv                               */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void dSelect_cursor_c::decAlpha() {
	nofralloc
#include "asm/d/d_select_cursor/decAlpha__16dSelect_cursor_cFv.s"
}
#pragma pop


/* 80195460-801955F0 0190+00 s=1 e=0 z=0  None .text      setBpkAnimation__16dSelect_cursor_cFP11J2DAnmColor           */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void dSelect_cursor_c::setBpkAnimation(J2DAnmColor* param_0) {
	nofralloc
#include "asm/d/d_select_cursor/setBpkAnimation__16dSelect_cursor_cFP11J2DAnmColor.s"
}
#pragma pop


/* 801955F0-80195724 0134+00 s=1 e=0 z=0  None .text      setBtk0Animation__16dSelect_cursor_cFP19J2DAnmTextureSRTKey  */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void dSelect_cursor_c::setBtk0Animation(J2DAnmTextureSRTKey* param_0) {
	nofralloc
#include "asm/d/d_select_cursor/setBtk0Animation__16dSelect_cursor_cFP19J2DAnmTextureSRTKey.s"
}
#pragma pop


/* ############################################################################################## */
/* 80453A68-80453A6C 0004+00 s=1 e=0 z=0  None .sdata2    @4237                                                        */
SECTION_SDATA2 static f32 lit_4237 = 20.0f;

/* 80453A6C-80453A70 0004+00 s=1 e=0 z=0  None .sdata2    @4238                                                        */
SECTION_SDATA2 static f32 lit_4238 = 10.0f;

/* 80195724-801958E0 01BC+00 s=1 e=0 z=0  None .text      setCursorAnimation__16dSelect_cursor_cFv                     */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void dSelect_cursor_c::setCursorAnimation() {
	nofralloc
#include "asm/d/d_select_cursor/setCursorAnimation__16dSelect_cursor_cFv.s"
}
#pragma pop


/* 801958E0-80195940 0060+00 s=1 e=0 z=0  None .text      setBckAnimation__16dSelect_cursor_cFP18J2DAnmTransformKey    */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void dSelect_cursor_c::setBckAnimation(J2DAnmTransformKey* param_0) {
	nofralloc
#include "asm/d/d_select_cursor/setBckAnimation__16dSelect_cursor_cFP18J2DAnmTransformKey.s"
}
#pragma pop


/* 80195940-80195978 0038+00 s=1 e=0 z=0  None .text      moveCenter__16dSelect_cursor_cFP7J2DPaneff                   */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void dSelect_cursor_c::moveCenter(J2DPane* param_0, f32 param_1, f32 param_2) {
	nofralloc
#include "asm/d/d_select_cursor/moveCenter__16dSelect_cursor_cFP7J2DPaneff.s"
}
#pragma pop


/* 80195978-801959C0 0048+00 s=1 e=0 z=0  None .text      __dt__19dSelect_cursorHIO_cFv                                */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm dSelect_cursorHIO_c::~dSelect_cursorHIO_c() {
	nofralloc
#include "asm/d/d_select_cursor/__dt__19dSelect_cursorHIO_cFv.s"
}
#pragma pop


/* 801959C0-80195A2C 006C+00 s=0 e=1 z=0  None .text      __dt__18J2DAnmTransformKeyFv                                 */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm J2DAnmTransformKey::~J2DAnmTransformKey() {
	nofralloc
#include "asm/d/d_select_cursor/__dt__18J2DAnmTransformKeyFv.s"
}
#pragma pop


