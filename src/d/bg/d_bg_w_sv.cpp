// 
// Generated By: dol2asm
// Translation Unit: d/bg/d_bg_w_sv
// 

#include "dol2asm.h"
#include "dolphin/types.h"
#include "d/bg/d_bg_w_sv.h"

// 
// Types:
// 

struct csXyz {
};

struct cXyz {
};

struct cBgS_PolyInfo {
};

struct cBgD_t {
};

struct dBgWSv {
	/* 80082F98 */ void Set(cBgD_t*, u32);
	/* 80083020 */ void CopyBackVtx();
	/* 8008308C */ void CrrPosWork(cXyz*, int, int, int);
	/* 80083244 */ void CrrPos(cBgS_PolyInfo const&, void*, bool, cXyz*, csXyz*, csXyz*);
	/* 80083300 */ void TransPosWork(cXyz*, int, int, int);
	/* 8008351C */ void TransPos(cBgS_PolyInfo const&, void*, bool, cXyz*, csXyz*, csXyz*);
	/* 800835D8 */ void MatrixCrrPos(cBgS_PolyInfo const&, void*, bool, cXyz*, csXyz*, csXyz*);
	/* 800835DC */ ~dBgWSv();
};

struct dBgW_Base {
	/* 80074AB4 */ void SetOldShapeAngleY(s16);
};

struct cBgS_GndChk {
};

struct cBgS_LinChk {
};

struct cBgS_ShdwDraw {
};

struct cBgW {
	/* 8007933C */ ~cBgW();
	/* 80079564 */ void CalcPlane();
	/* 800797BC */ void ClassifyPlane();
	/* 80079EEC */ void ChkMemoryError();
	/* 80079F38 */ void Set(cBgD_t*, u32, f32 (* )[3][4]);
	/* 8007A658 */ void LineCheck(cBgS_LinChk*);
	/* 8007AB9C */ void GroundCross(cBgS_GndChk*);
	/* 8007B084 */ void ShdwDraw(cBgS_ShdwDraw*);
	/* 8007B0E4 */ void GetGrpRoomIndex(cBgS_PolyInfo const&) const;
	/* 8007B164 */ void GetBnd() const;
	/* 8007B1B4 */ void GetTriPnt(cBgS_PolyInfo const&, cXyz*, cXyz*, cXyz*) const;
	/* 8007B240 */ void GetTopUnder(f32*, f32*) const;
	/* 8007B270 */ void GetTriPla(cBgS_PolyInfo const&) const;
	/* 8007B2B0 */ void GetGrpInf(cBgS_PolyInfo const&) const;
	/* 8007B948 */ void ChkNotReady() const;
	/* 8007B958 */ void ChkLock() const;
	/* 8007B964 */ void ChkMoveBg() const;
};

struct dBgS_SphChk {
};

struct dBgS_CaptPoly {
};

struct cBgS_PolyPassChk {
};

struct fopAc_ac_c {
};

struct cBgS_GrpPassChk {
};

struct dBgS_RoofChk {
};

struct dBgS_SplGrpChk {
};

struct dBgS_Acch {
};

struct dBgW {
	/* 8007B3AC */ void GetExitId(cBgS_PolyInfo const&);
	/* 8007B3D8 */ void GetPolyColor(cBgS_PolyInfo const&);
	/* 8007B404 */ void GetHorseNoEntry(cBgS_PolyInfo const&);
	/* 8007B430 */ void GetSpecialCode(cBgS_PolyInfo const&);
	/* 8007B460 */ void GetSpecialCode(int);
	/* 8007B488 */ void GetMagnetCode(cBgS_PolyInfo const&);
	/* 8007B4B4 */ void GetMonkeyBarsCode(cBgS_PolyInfo const&);
	/* 8007B4E0 */ void GetPolyObjThrough(int);
	/* 8007B504 */ void GetPolyCamThrough(int);
	/* 8007B52C */ void GetPolyLinkThrough(int);
	/* 8007B550 */ void GetPolyArrowThrough(int);
	/* 8007B574 */ void GetPolyHSStick(int);
	/* 8007B598 */ void GetPolyBoomerangThrough(int);
	/* 8007B5BC */ void GetPolyRopeThrough(int);
	/* 8007B5E0 */ void GetPolyBombThrough(int);
	/* 8007B604 */ void GetShdwThrough(int);
	/* 8007B630 */ void GetUnderwaterRoofCode(int);
	/* 8007B6AC */ void GetLinkNo(cBgS_PolyInfo const&);
	/* 8007B6D8 */ void GetWallCode(cBgS_PolyInfo const&);
	/* 8007B704 */ void GetPolyAtt0(cBgS_PolyInfo const&);
	/* 8007B734 */ void GetPolyAtt1(cBgS_PolyInfo const&);
	/* 8007B760 */ void GetGroundCode(cBgS_PolyInfo const&);
	/* 8007B7DC */ void GetIronBallThrough(int);
	/* 8007B800 */ void GetAttackThrough(int);
	/* 8007B87C */ void GetCamMoveBG(cBgS_PolyInfo const&);
	/* 8007B8A8 */ void GetRoomCamId(cBgS_PolyInfo const&);
	/* 8007B8D8 */ void GetRoomPathId(cBgS_PolyInfo const&);
	/* 8007B904 */ void GetRoomPathPntNo(cBgS_PolyInfo const&);
	/* 8007C484 */ void WallCorrect(dBgS_Acch*);
	/* 8007C910 */ void WallCorrectSort(dBgS_Acch*);
	/* 8007D470 */ void RoofChk(dBgS_RoofChk*);
	/* 8007D830 */ void SplGrpChk(dBgS_SplGrpChk*);
	/* 8007DAF8 */ void CaptPoly(dBgS_CaptPoly&);
	/* 8007DF00 */ void SphChk(dBgS_SphChk*, void*);
	/* 8007DF28 */ void GetPolyGrpRoomInfId(cBgS_PolyInfo const&);
	/* 8007DF58 */ void GetGrpSoundId(cBgS_PolyInfo const&);
	/* 8007E02C */ void ChkPolyThrough(int, cBgS_PolyPassChk*);
	/* 8007E360 */ void ChkShdwDrawThrough(int, cBgS_PolyPassChk*);
	/* 8007E3D8 */ void ChkGrpThrough(int, cBgS_GrpPassChk*, int);
	/* 8007E444 */ void CallRideCallBack(fopAc_ac_c*, fopAc_ac_c*);
	/* 8007E474 */ void CallArrowStickCallBack(fopAc_ac_c*, fopAc_ac_c*, cXyz&);
	/* 8007E4A4 */ void OffMoveFlag();
	/* 8007E4B4 */ void ChkMoveFlag() const;
};

// 
// Forward References:
// 


extern "C" void Set__6dBgWSvFP6cBgD_tUl(); // 1
extern "C" void CopyBackVtx__6dBgWSvFv(); // 1
extern "C" void CrrPosWork__6dBgWSvFP4cXyziii(); // 1
extern "C" void CrrPos__6dBgWSvFRC13cBgS_PolyInfoPvbP4cXyzP5csXyzP5csXyz(); // 1
extern "C" void TransPosWork__6dBgWSvFP4cXyziii(); // 1
extern "C" void TransPos__6dBgWSvFRC13cBgS_PolyInfoPvbP4cXyzP5csXyzP5csXyz(); // 1
extern "C" void MatrixCrrPos__6dBgWSvFRC13cBgS_PolyInfoPvbP4cXyzP5csXyzP5csXyz(); // 1
extern "C" void __dt__6dBgWSvFv(); // 1
extern "C" extern void* __vt__6dBgWSv[65 + 1 /* padding */];

// 
// External References:
// 

void* operator new[](u32); // 2
void operator delete(void*); // 2

extern "C" void SetOldShapeAngleY__9dBgW_BaseFs(); // 1
extern "C" void __dt__4cBgWFv(); // 1
extern "C" void CalcPlane__4cBgWFv(); // 1
extern "C" void ClassifyPlane__4cBgWFv(); // 1
extern "C" void ChkMemoryError__4cBgWFv(); // 1
extern "C" void Set__4cBgWFP6cBgD_tUlPA3_A4_f(); // 1
extern "C" void LineCheck__4cBgWFP11cBgS_LinChk(); // 1
extern "C" void GroundCross__4cBgWFP11cBgS_GndChk(); // 1
extern "C" void ShdwDraw__4cBgWFP13cBgS_ShdwDraw(); // 1
extern "C" void GetGrpRoomIndex__4cBgWCFRC13cBgS_PolyInfo(); // 1
extern "C" void GetBnd__4cBgWCFv(); // 1
extern "C" void GetTriPnt__4cBgWCFRC13cBgS_PolyInfoP4cXyzP4cXyzP4cXyz(); // 1
extern "C" void GetTopUnder__4cBgWCFPfPf(); // 1
extern "C" void GetTriPla__4cBgWCFRC13cBgS_PolyInfo(); // 1
extern "C" void GetGrpInf__4cBgWCFRC13cBgS_PolyInfo(); // 1
extern "C" void GetExitId__4dBgWFRC13cBgS_PolyInfo(); // 1
extern "C" void GetPolyColor__4dBgWFRC13cBgS_PolyInfo(); // 1
extern "C" void GetHorseNoEntry__4dBgWFRC13cBgS_PolyInfo(); // 1
extern "C" void GetSpecialCode__4dBgWFRC13cBgS_PolyInfo(); // 1
extern "C" void GetSpecialCode__4dBgWFi(); // 1
extern "C" void GetMagnetCode__4dBgWFRC13cBgS_PolyInfo(); // 1
extern "C" void GetMonkeyBarsCode__4dBgWFRC13cBgS_PolyInfo(); // 1
extern "C" void GetPolyObjThrough__4dBgWFi(); // 1
extern "C" void GetPolyCamThrough__4dBgWFi(); // 1
extern "C" void GetPolyLinkThrough__4dBgWFi(); // 1
extern "C" void GetPolyArrowThrough__4dBgWFi(); // 1
extern "C" void GetPolyHSStick__4dBgWFi(); // 1
extern "C" void GetPolyBoomerangThrough__4dBgWFi(); // 1
extern "C" void GetPolyRopeThrough__4dBgWFi(); // 1
extern "C" void GetPolyBombThrough__4dBgWFi(); // 1
extern "C" void GetShdwThrough__4dBgWFi(); // 1
extern "C" void GetUnderwaterRoofCode__4dBgWFi(); // 1
extern "C" void GetLinkNo__4dBgWFRC13cBgS_PolyInfo(); // 1
extern "C" void GetWallCode__4dBgWFRC13cBgS_PolyInfo(); // 1
extern "C" void GetPolyAtt0__4dBgWFRC13cBgS_PolyInfo(); // 1
extern "C" void GetPolyAtt1__4dBgWFRC13cBgS_PolyInfo(); // 1
extern "C" void GetGroundCode__4dBgWFRC13cBgS_PolyInfo(); // 1
extern "C" void GetIronBallThrough__4dBgWFi(); // 1
extern "C" void GetAttackThrough__4dBgWFi(); // 1
extern "C" void GetCamMoveBG__4dBgWFRC13cBgS_PolyInfo(); // 1
extern "C" void GetRoomCamId__4dBgWFRC13cBgS_PolyInfo(); // 1
extern "C" void GetRoomPathId__4dBgWFRC13cBgS_PolyInfo(); // 1
extern "C" void GetRoomPathPntNo__4dBgWFRC13cBgS_PolyInfo(); // 1
extern "C" void ChkNotReady__4cBgWCFv(); // 1
extern "C" void ChkLock__4cBgWCFv(); // 1
extern "C" void ChkMoveBg__4cBgWCFv(); // 1
extern "C" void WallCorrect__4dBgWFP9dBgS_Acch(); // 1
extern "C" void WallCorrectSort__4dBgWFP9dBgS_Acch(); // 1
extern "C" void RoofChk__4dBgWFP12dBgS_RoofChk(); // 1
extern "C" void SplGrpChk__4dBgWFP14dBgS_SplGrpChk(); // 1
extern "C" void CaptPoly__4dBgWFR13dBgS_CaptPoly(); // 1
extern "C" void SphChk__4dBgWFP11dBgS_SphChkPv(); // 1
extern "C" void GetPolyGrpRoomInfId__4dBgWFRC13cBgS_PolyInfo(); // 1
extern "C" void GetGrpSoundId__4dBgWFRC13cBgS_PolyInfo(); // 1
extern "C" void ChkPolyThrough__4dBgWFiP16cBgS_PolyPassChk(); // 1
extern "C" void ChkShdwDrawThrough__4dBgWFiP16cBgS_PolyPassChk(); // 1
extern "C" void ChkGrpThrough__4dBgWFiP15cBgS_GrpPassChki(); // 1
extern "C" void CallRideCallBack__4dBgWFP10fopAc_ac_cP10fopAc_ac_c(); // 1
extern "C" void CallArrowStickCallBack__4dBgWFP10fopAc_ac_cP10fopAc_ac_cR4cXyz(); // 1
extern "C" void OffMoveFlag__4dBgWFv(); // 1
extern "C" void ChkMoveFlag__4dBgWCFv(); // 1
extern "C" void* __nwa__FUl(); // 1
extern "C" void __dl__FPv(); // 1
extern "C" void _savegpr_27(); // 1
extern "C" void _restgpr_27(); // 1
extern "C" extern void* __vt__4dBgW[65];
extern "C" extern f32 G_CM3D_F_ABS_MIN[1 + 1 /* padding */];

// 
// Declarations:
// 

/* 80082F98-80083020 0088+00 s=0 e=0 z=2  None .text      Set__6dBgWSvFP6cBgD_tUl                                      */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void dBgWSv::Set(cBgD_t* param_0, u32 param_1) {
	nofralloc
#include "asm/d/bg/d_bg_w_sv/Set__6dBgWSvFP6cBgD_tUl.s"
}
#pragma pop


/* 80083020-8008308C 006C+00 s=0 e=0 z=3  None .text      CopyBackVtx__6dBgWSvFv                                       */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void dBgWSv::CopyBackVtx() {
	nofralloc
#include "asm/d/bg/d_bg_w_sv/CopyBackVtx__6dBgWSvFv.s"
}
#pragma pop


/* 8008308C-80083244 01B8+00 s=1 e=0 z=0  None .text      CrrPosWork__6dBgWSvFP4cXyziii                                */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void dBgWSv::CrrPosWork(cXyz* param_0, int param_1, int param_2, int param_3) {
	nofralloc
#include "asm/d/bg/d_bg_w_sv/CrrPosWork__6dBgWSvFP4cXyziii.s"
}
#pragma pop


/* 80083244-80083300 00BC+00 s=1 e=0 z=0  None .text      CrrPos__6dBgWSvFRC13cBgS_PolyInfoPvbP4cXyzP5csXyzP5csXyz     */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void dBgWSv::CrrPos(cBgS_PolyInfo const& param_0, void* param_1, bool param_2, cXyz* param_3, csXyz* param_4, csXyz* param_5) {
	nofralloc
#include "asm/d/bg/d_bg_w_sv/CrrPos__6dBgWSvFRC13cBgS_PolyInfoPvbP4cXyzP5csXyzP5csXyz.s"
}
#pragma pop


/* ############################################################################################## */
/* 80452758-8045275C 0004+00 s=1 e=0 z=0  None .sdata2    @3807                                                        */
SECTION_SDATA2 static u8 lit_3807[4] = {
	0x00, 0x00, 0x00, 0x00,
};

/* 8045275C-80452760 0004+00 s=1 e=0 z=0  None .sdata2    @3808                                                        */
SECTION_SDATA2 static f32 lit_3808 = 1.0f;

/* 80083300-8008351C 021C+00 s=1 e=0 z=0  None .text      TransPosWork__6dBgWSvFP4cXyziii                              */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void dBgWSv::TransPosWork(cXyz* param_0, int param_1, int param_2, int param_3) {
	nofralloc
#include "asm/d/bg/d_bg_w_sv/TransPosWork__6dBgWSvFP4cXyziii.s"
}
#pragma pop


/* 8008351C-800835D8 00BC+00 s=1 e=0 z=0  None .text      TransPos__6dBgWSvFRC13cBgS_PolyInfoPvbP4cXyzP5csXyzP5csXyz   */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void dBgWSv::TransPos(cBgS_PolyInfo const& param_0, void* param_1, bool param_2, cXyz* param_3, csXyz* param_4, csXyz* param_5) {
	nofralloc
#include "asm/d/bg/d_bg_w_sv/TransPos__6dBgWSvFRC13cBgS_PolyInfoPvbP4cXyzP5csXyzP5csXyz.s"
}
#pragma pop


/* 800835D8-800835DC 0004+00 s=1 e=0 z=0  None .text      MatrixCrrPos__6dBgWSvFRC13cBgS_PolyInfoPvbP4cXyzP5csXyzP5csXyz */
void dBgWSv::MatrixCrrPos(cBgS_PolyInfo const& param_0, void* param_1, bool param_2, cXyz* param_3, csXyz* param_4, csXyz* param_5) {
	/* empty function */
}


/* ############################################################################################## */
/* 803ABEB8-803ABFC0 0104+04 s=1 e=0 z=2  None .data      __vt__6dBgWSv                                                */
SECTION_DATA void* __vt__6dBgWSv[65 + 1 /* padding */] = {
	/* 0    */ (void*)NULL /* RTTI */,
	/* 1    */ (void*)NULL,
	/* 2    */ (void*)__dt__6dBgWSvFv,
	/* 3    */ (void*)ChkMemoryError__4cBgWFv,
	/* 4    */ (void*)ChkNotReady__4cBgWCFv,
	/* 5    */ (void*)ChkLock__4cBgWCFv,
	/* 6    */ (void*)ChkMoveBg__4cBgWCFv,
	/* 7    */ (void*)ChkMoveFlag__4dBgWCFv,
	/* 8    */ (void*)GetTriPla__4cBgWCFRC13cBgS_PolyInfo,
	/* 9    */ (void*)GetTriPnt__4cBgWCFRC13cBgS_PolyInfoP4cXyzP4cXyzP4cXyz,
	/* 10   */ (void*)GetBnd__4cBgWCFv,
	/* 11   */ (void*)GetGrpInf__4cBgWCFRC13cBgS_PolyInfo,
	/* 12   */ (void*)OffMoveFlag__4dBgWFv,
	/* 13   */ (void*)GetTopUnder__4cBgWCFPfPf,
	/* 14   */ (void*)SetOldShapeAngleY__9dBgW_BaseFs,
	/* 15   */ (void*)LineCheck__4cBgWFP11cBgS_LinChk,
	/* 16   */ (void*)GroundCross__4cBgWFP11cBgS_GndChk,
	/* 17   */ (void*)ShdwDraw__4cBgWFP13cBgS_ShdwDraw,
	/* 18   */ (void*)CaptPoly__4dBgWFR13dBgS_CaptPoly,
	/* 19   */ (void*)WallCorrect__4dBgWFP9dBgS_Acch,
	/* 20   */ (void*)WallCorrectSort__4dBgWFP9dBgS_Acch,
	/* 21   */ (void*)RoofChk__4dBgWFP12dBgS_RoofChk,
	/* 22   */ (void*)SplGrpChk__4dBgWFP14dBgS_SplGrpChk,
	/* 23   */ (void*)SphChk__4dBgWFP11dBgS_SphChkPv,
	/* 24   */ (void*)GetGrpRoomIndex__4cBgWCFRC13cBgS_PolyInfo,
	/* 25   */ (void*)GetExitId__4dBgWFRC13cBgS_PolyInfo,
	/* 26   */ (void*)GetPolyColor__4dBgWFRC13cBgS_PolyInfo,
	/* 27   */ (void*)GetHorseNoEntry__4dBgWFRC13cBgS_PolyInfo,
	/* 28   */ (void*)GetSpecialCode__4dBgWFRC13cBgS_PolyInfo,
	/* 29   */ (void*)GetSpecialCode__4dBgWFi,
	/* 30   */ (void*)GetMagnetCode__4dBgWFRC13cBgS_PolyInfo,
	/* 31   */ (void*)GetPolyObjThrough__4dBgWFi,
	/* 32   */ (void*)GetPolyCamThrough__4dBgWFi,
	/* 33   */ (void*)GetPolyLinkThrough__4dBgWFi,
	/* 34   */ (void*)GetPolyArrowThrough__4dBgWFi,
	/* 35   */ (void*)GetPolyHSStick__4dBgWFi,
	/* 36   */ (void*)GetPolyBoomerangThrough__4dBgWFi,
	/* 37   */ (void*)GetPolyRopeThrough__4dBgWFi,
	/* 38   */ (void*)GetPolyBombThrough__4dBgWFi,
	/* 39   */ (void*)GetShdwThrough__4dBgWFi,
	/* 40   */ (void*)GetUnderwaterRoofCode__4dBgWFi,
	/* 41   */ (void*)GetMonkeyBarsCode__4dBgWFRC13cBgS_PolyInfo,
	/* 42   */ (void*)GetLinkNo__4dBgWFRC13cBgS_PolyInfo,
	/* 43   */ (void*)GetWallCode__4dBgWFRC13cBgS_PolyInfo,
	/* 44   */ (void*)GetPolyAtt0__4dBgWFRC13cBgS_PolyInfo,
	/* 45   */ (void*)GetPolyAtt1__4dBgWFRC13cBgS_PolyInfo,
	/* 46   */ (void*)GetGroundCode__4dBgWFRC13cBgS_PolyInfo,
	/* 47   */ (void*)GetIronBallThrough__4dBgWFi,
	/* 48   */ (void*)GetAttackThrough__4dBgWFi,
	/* 49   */ (void*)GetCamMoveBG__4dBgWFRC13cBgS_PolyInfo,
	/* 50   */ (void*)GetRoomCamId__4dBgWFRC13cBgS_PolyInfo,
	/* 51   */ (void*)GetRoomPathId__4dBgWFRC13cBgS_PolyInfo,
	/* 52   */ (void*)GetRoomPathPntNo__4dBgWFRC13cBgS_PolyInfo,
	/* 53   */ (void*)GetPolyGrpRoomInfId__4dBgWFRC13cBgS_PolyInfo,
	/* 54   */ (void*)GetGrpSoundId__4dBgWFRC13cBgS_PolyInfo,
	/* 55   */ (void*)CrrPos__6dBgWSvFRC13cBgS_PolyInfoPvbP4cXyzP5csXyzP5csXyz,
	/* 56   */ (void*)TransPos__6dBgWSvFRC13cBgS_PolyInfoPvbP4cXyzP5csXyzP5csXyz,
	/* 57   */ (void*)MatrixCrrPos__6dBgWSvFRC13cBgS_PolyInfoPvbP4cXyzP5csXyzP5csXyz,
	/* 58   */ (void*)CallRideCallBack__4dBgWFP10fopAc_ac_cP10fopAc_ac_c,
	/* 59   */ (void*)CallArrowStickCallBack__4dBgWFP10fopAc_ac_cP10fopAc_ac_cR4cXyz,
	/* 60   */ (void*)CalcPlane__4cBgWFv,
	/* 61   */ (void*)ClassifyPlane__4cBgWFv,
	/* 62   */ (void*)ChkPolyThrough__4dBgWFiP16cBgS_PolyPassChk,
	/* 63   */ (void*)ChkShdwDrawThrough__4dBgWFiP16cBgS_PolyPassChk,
	/* 64   */ (void*)ChkGrpThrough__4dBgWFiP15cBgS_GrpPassChki,
	/* padding */
	NULL,
};

/* 800835DC-8008364C 0070+00 s=1 e=0 z=0  None .text      __dt__6dBgWSvFv                                              */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm dBgWSv::~dBgWSv() {
	nofralloc
#include "asm/d/bg/d_bg_w_sv/__dt__6dBgWSvFv.s"
}
#pragma pop


