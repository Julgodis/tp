// 
// Generated By: dol2asm
// Translation Unit: d/bg/d_bg_s_sph_chk
// 

#include "dolphin/types.h"

// 
// Forward References:
// 

extern "C" extern void __ct__11dBgS_SphChkFv();
extern "C" extern void __dt__11dBgS_SphChkFv();
extern "C" extern void func_80078B70();
extern "C" extern void func_80078B78();
extern "C" extern void func_80078B80();
extern "C" extern void func_80078B88();
SECTION_DATA extern void*const __vt__11dBgS_SphChk[16];

// 
// External References:
// 

extern "C" extern void __ct__8dBgS_ChkFv();
extern "C" extern void __dt__8dBgS_ChkFv();
extern "C" extern void GetPolyPassChkInfo__8dBgS_ChkFv();
extern "C" extern void GetGrpPassChkInfo__8dBgS_ChkFv();
extern "C" extern void __ct__8cBgS_ChkFv();
extern "C" extern void __dt__8cBgS_ChkFv();
extern "C" extern void __ct__13cBgS_PolyInfoFv();
extern "C" extern void __dt__13cBgS_PolyInfoFv();
extern "C" extern void ClearPi__13cBgS_PolyInfoFv();
extern "C" extern void __dl__FPv();
SECTION_DATA extern void*const __vt__8cM3dGSph[3];

// 
// Declarations:
// 

/* ############################################################################################## */
/* 803AB9C8-803ABA08 003C+04 .data      __vt__11dBgS_SphChk                                          */
void* const __vt__11dBgS_SphChk[16] = {
	NULL, /* RTTI */
	NULL,
	(void*)__dt__11dBgS_SphChkFv,
	NULL,
	NULL,
	(void*)func_80078B70,
	NULL,
	NULL,
	(void*)func_80078B78,
	NULL,
	NULL,
	(void*)func_80078B88,
	NULL,
	NULL,
	(void*)func_80078B80,
	/* padding */
	NULL,
};

/* 80078A14-80078AC0 00AC+00 .text      __ct__11dBgS_SphChkFv                                        */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
ASM_FUNCTION(__ct__11dBgS_SphChkFv) {
	nofralloc
#include "asm/d/bg/d_bg_s_sph_chk/__ct__11dBgS_SphChkFv.s"
}
#pragma pop


/* 80078AC0-80078B70 00B0+00 .text      __dt__11dBgS_SphChkFv                                        */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
ASM_FUNCTION(__dt__11dBgS_SphChkFv) {
	nofralloc
#include "asm/d/bg/d_bg_s_sph_chk/__dt__11dBgS_SphChkFv.s"
}
#pragma pop


/* 80078B70-80078B78 0008+00 .text      @20@__dt__11dBgS_SphChkFv                                    */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
ASM_FUNCTION(func_80078B70) {
	nofralloc
#include "asm/d/bg/d_bg_s_sph_chk/func_80078B70.s"
}
#pragma pop


/* 80078B78-80078B80 0008+00 .text      @36@__dt__11dBgS_SphChkFv                                    */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
ASM_FUNCTION(func_80078B78) {
	nofralloc
#include "asm/d/bg/d_bg_s_sph_chk/func_80078B78.s"
}
#pragma pop


/* 80078B80-80078B88 0008+00 .text      @72@__dt__11dBgS_SphChkFv                                    */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
ASM_FUNCTION(func_80078B80) {
	nofralloc
#include "asm/d/bg/d_bg_s_sph_chk/func_80078B80.s"
}
#pragma pop


/* 80078B88-80078B90 0008+00 .text      @56@__dt__11dBgS_SphChkFv                                    */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
ASM_FUNCTION(func_80078B88) {
	nofralloc
#include "asm/d/bg/d_bg_s_sph_chk/func_80078B88.s"
}
#pragma pop


/* ############################################################################################## */
