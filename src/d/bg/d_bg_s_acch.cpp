// 
// Generated By: dol2asm
// 

#include "dolphin/types.h"

// 
// Additional Symbols:
// 

extern "C" {
extern void LineCross__4cBgSFP11cBgS_LinChk();
extern void GroundCross__4cBgSFP11cBgS_GndChk();
extern void GetTriPla__4cBgSCFRC13cBgS_PolyInfoP8cM3dGPla();
extern void WallCorrect__4dBgSFP9dBgS_Acch();
extern void WallCorrectSort__4dBgSFP9dBgS_Acch();
extern void RoofChk__4dBgSFP12dBgS_RoofChk();
extern void SplGrpChk__4dBgSFP14dBgS_SplGrpChk();
extern void MoveBgCrrPos__4dBgSFRC13cBgS_PolyInfobP4cXyzP5csXyzP5csXyzbb();
extern void RideCallBack__4dBgSFRC13cBgS_PolyInfoP10fopAc_ac_c();
extern void __ct__12dBgS_AcchCirFv();
extern void ClrWallHit__12dBgS_AcchCirFv();
extern void SetWallR__12dBgS_AcchCirFf();
extern void CalcWallRR__12dBgS_AcchCirFv();
extern void SetWall__12dBgS_AcchCirFff();
extern void SetWallHDirect__12dBgS_AcchCirFf();
extern void __dt__9dBgS_AcchFv();
extern void __ct__9dBgS_AcchFv();
extern void Init__9dBgS_AcchFv();
extern void Set__9dBgS_AcchFP4cXyzP4cXyzP10fopAc_ac_ciP12dBgS_AcchCirP4cXyzP5csXyzP5csXyz();
extern void Set__9dBgS_AcchFP10fopAc_ac_ciP12dBgS_AcchCir();
extern void GroundCheckInit__9dBgS_AcchFR4dBgS();
extern void GroundCheck__9dBgS_AcchFR4dBgS();
extern void GroundRoofProc__9dBgS_AcchFR4dBgS();
extern void LineCheck__9dBgS_AcchFR4dBgS();
extern void CrrPos__9dBgS_AcchFR4dBgS();
extern void GetWallAllR__9dBgS_AcchFv();
extern void SetWallCir__9dBgS_AcchFv();
extern void CalcWallBmdCyl__9dBgS_AcchFv();
extern void SetGroundUpY__9dBgS_AcchFf();
extern void GetWallAllLowH__9dBgS_AcchFv();
extern void GetWallAllLowH_R__9dBgS_AcchFv();
extern void GetSpeedY__9dBgS_AcchFv();
extern void GetWallAddY__9dBgS_AcchFR3Vec();
extern void SetNowActorInfo__9dBgS_AcchFiPvUi();
extern void SetWallPolyIndex__9dBgS_AcchFii();
extern void CalcMovePosWork__9dBgS_AcchFv();
extern void CalcWallRR__9dBgS_AcchFv();
extern void SetMoveBGOnly__9dBgS_AcchFv();
extern void ClrMoveBGOnly__9dBgS_AcchFv();
extern void SetGndThinCellingOff__9dBgS_AcchFv();
extern void ClrGndThinCellingOff__9dBgS_AcchFv();
extern void ChkGndThinCellingOff__9dBgS_AcchFv();
extern void OnWallSort__9dBgS_AcchFv();
extern void ChkWallSort__9dBgS_AcchFv();
extern void ChkLineDown__9dBgS_AcchFv();
extern void __dt__12dBgS_AcchCirFv();
extern void func_80077484();
extern void func_8007748C();
extern void checkPlayerFly__9daPy_py_cCFv();
extern void __ct__8dBgS_ChkFv();
extern void __dt__8dBgS_ChkFv();
extern void GetPolyPassChkInfo__8dBgS_ChkFv();
extern void GetGrpPassChkInfo__8dBgS_ChkFv();
extern void __ct__11dBgS_GndChkFv();
extern void __dt__11dBgS_GndChkFv();
extern void Set__14dBgS_SplGrpChkFR4cXyzf();
extern void __dt__14dBgS_SplGrpChkFv();
extern void SetPassChkInfo__16dBgS_PolyPassChkFR16dBgS_PolyPassChk();
extern void SetUnderwaterRoof__16dBgS_PolyPassChkFv();
extern void __ct__12dBgS_RoofChkFv();
extern void __dt__12dBgS_RoofChkFv();
extern void __ct__11dBgS_WtrChkFv();
extern void __ct__8cBgS_ChkFv();
extern void __dt__8cBgS_ChkFv();
extern void SetExtChk__8cBgS_ChkFR8cBgS_Chk();
extern void SetPos__11cBgS_GndChkFPC4cXyz();
extern void __ct__11cBgS_LinChkFv();
extern void __dt__11cBgS_LinChkFv();
extern void Set2__11cBgS_LinChkFPC4cXyzPC4cXyzUi();
extern void __ct__13cBgS_PolyInfoFv();
extern void __dt__13cBgS_PolyInfoFv();
extern void ClearPi__13cBgS_PolyInfoFv();
extern void SetActorInfo__13cBgS_PolyInfoFiPvUi();
extern void SetPolyIndex__13cBgS_PolyInfoFi();
extern void cBgW_CheckBGround__Ff();
extern void __ct__8cM3dGCirFv();
extern void __dt__8cM3dGCirFv();
extern void Set__8cM3dGCirFffff();
extern void Set__8cM3dGCylFRC4cXyzff();
extern void SetStartEnd__8cM3dGLinFRC4cXyzRC4cXyz();
extern void getCrossYLessD__8cM3dGPlaCFRC3VecPf();
extern void __dl__FPv();
extern void PSVECAdd();
extern void PSVECSquareDistance();
extern void __register_global_object();
extern void _savegpr_25();
extern void _savegpr_29();
extern void _restgpr_25();
extern void _restgpr_29();
SECTION_DATA extern void* __vt__8cM3dGPla[3];
SECTION_DATA extern void* __vt__11dBgS_WtrChk[12];
SECTION_DATA extern void* __vt__8cM3dGCyl[3];
SECTION_DATA extern void* __vt__8cM3dGLin[3];
SECTION_DATA extern void* __vt__9dBgS_Acch[9];
SECTION_DATA extern void* __vt__12dBgS_AcchCir[3];
SECTION_BSS extern u8 g_dComIfG_gameInfo[122384];
SECTION_BSS extern u8 d_bg_d_bg_s_acch__LIT_4166[12];
SECTION_BSS extern u8 data_80424B2C[80 + 4 /* padding */];
SECTION_SBSS extern u8 data_80450F68[8];
SECTION_SBSS extern u8 G_CM3D_F_ABS_MIN[4 + 4 /* padding */];
SECTION_SDATA2 extern u8 d_bg_d_bg_s_acch__LIT_4025[4];
SECTION_SDATA2 extern u8 d_bg_d_bg_s_acch__LIT_4089[4];
SECTION_SDATA2 extern u8 d_bg_d_bg_s_acch__LIT_4090[4];
SECTION_SDATA2 extern u8 d_bg_d_bg_s_acch__LIT_4091[4];
SECTION_SDATA2 extern u8 d_bg_d_bg_s_acch__LIT_4092[4];
SECTION_SDATA2 extern u8 d_bg_d_bg_s_acch__LIT_4424[4];
SECTION_SDATA2 extern u8 d_bg_d_bg_s_acch__LIT_4554[4];
SECTION_SDATA2 extern u8 d_bg_d_bg_s_acch__LIT_4555[4];
SECTION_SDATA2 extern u8 d_bg_d_bg_s_acch__LIT_4762[8];
}


/* ###################################################################################### */
/*                                         .data                                          */
/* ###################################################################################### */

extern "C" {
/* 803AB640-803AB664 0024 .data      __vt__9dBgS_Acch                                             */
SECTION_DATA void* __vt__9dBgS_Acch[9] = {
	NULL, /* RTTI */
	NULL,
	(void*)__dt__9dBgS_AcchFv,
	NULL,
	NULL,
	(void*)func_8007748C,
	NULL,
	NULL,
	(void*)func_80077484,
};
/* 803AB664-803AB670 000C .data      __vt__12dBgS_AcchCir                                         */
SECTION_DATA void* __vt__12dBgS_AcchCir[3] = {
	NULL, /* RTTI */
	NULL,
	(void*)__dt__12dBgS_AcchCirFv,
};
}


/* ###################################################################################### */
/*                                        .sdata2                                         */
/* ###################################################################################### */

extern "C" {
/* 804526C0-804526C4 0004 .sdata2    @4025                                                        */
SECTION_SDATA2 u8 d_bg_d_bg_s_acch__LIT_4025[4] = {
	0x00, 0x00, 0x00, 0x00,
};
/* 804526C4-804526C8 0004 .sdata2    @4089                                                        */
SECTION_SDATA2 u8 d_bg_d_bg_s_acch__LIT_4089[4] = {
	0xCE, 0x6E, 0x6B, 0x28,
};
/* 804526C8-804526CC 0004 .sdata2    @4090                                                        */
SECTION_SDATA2 u8 d_bg_d_bg_s_acch__LIT_4090[4] = {
	0x42, 0x70, 0x00, 0x00,
};
/* 804526CC-804526D0 0004 .sdata2    @4091                                                        */
SECTION_SDATA2 u8 d_bg_d_bg_s_acch__LIT_4091[4] = {
	0x4E, 0x6E, 0x6B, 0x28,
};
/* 804526D0-804526D4 0004 .sdata2    @4092                                                        */
SECTION_SDATA2 u8 d_bg_d_bg_s_acch__LIT_4092[4] = {
	0x44, 0x7A, 0x00, 0x00,
};
/* 804526D4-804526D8 0004 .sdata2    @4424                                                        */
SECTION_SDATA2 u8 d_bg_d_bg_s_acch__LIT_4424[4] = {
	0x3F, 0x80, 0x00, 0x00,
};
/* 804526D8-804526DC 0004 .sdata2    @4554                                                        */
SECTION_SDATA2 u8 d_bg_d_bg_s_acch__LIT_4554[4] = {
	0x42, 0x48, 0x00, 0x00,
};
/* 804526DC-804526E0 0004 .sdata2    @4555                                                        */
SECTION_SDATA2 u8 d_bg_d_bg_s_acch__LIT_4555[4] = {
	0x49, 0x74, 0x24, 0x00,
};
/* 804526E0-804526E8 0004 .sdata2    @4762                                                        */
SECTION_SDATA2 u8 d_bg_d_bg_s_acch__LIT_4762[8] = {
	0x3F, 0x00, 0x00, 0x00,
	/* padding */
	0x00, 0x00, 0x00, 0x00,
};
}


/* ###################################################################################### */
/*                                          .bss                                          */
/* ###################################################################################### */

extern "C" {
/* 80424B20-80424B2C 000C .bss       @4166                                                        */
SECTION_BSS u8 d_bg_d_bg_s_acch__LIT_4166[12];
/* 80424B2C-80424B80 0050 .bss       tmpRoofChk$4165                                              */
SECTION_BSS u8 data_80424B2C[80 + 4 /* padding */];
}


/* ###################################################################################### */
/*                                         .text                                          */
/* ###################################################################################### */

/* 80075EAC-80075F14 0068 .text      __ct__12dBgS_AcchCirFv                                       */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void __ct__12dBgS_AcchCirFv() {
	nofralloc
#include "asm/d/bg/d_bg_s_acch/__ct__12dBgS_AcchCirFv.s"
}
#pragma pop

/* 80075F14-80075F40 002C .text      ClrWallHit__12dBgS_AcchCirFv                                 */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void ClrWallHit__12dBgS_AcchCirFv() {
	nofralloc
#include "asm/d/bg/d_bg_s_acch/ClrWallHit__12dBgS_AcchCirFv.s"
}
#pragma pop

/* 80075F40-80075F48 0008 .text      SetWallR__12dBgS_AcchCirFf                                   */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void SetWallR__12dBgS_AcchCirFf() {
	nofralloc
#include "asm/d/bg/d_bg_s_acch/SetWallR__12dBgS_AcchCirFf.s"
}
#pragma pop

/* 80075F48-80075F58 0010 .text      CalcWallRR__12dBgS_AcchCirFv                                 */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void CalcWallRR__12dBgS_AcchCirFv() {
	nofralloc
#include "asm/d/bg/d_bg_s_acch/CalcWallRR__12dBgS_AcchCirFv.s"
}
#pragma pop

/* 80075F58-80075F80 0028 .text      SetWall__12dBgS_AcchCirFff                                   */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void SetWall__12dBgS_AcchCirFff() {
	nofralloc
#include "asm/d/bg/d_bg_s_acch/SetWall__12dBgS_AcchCirFff.s"
}
#pragma pop

/* 80075F80-80075F94 0014 .text      SetWallHDirect__12dBgS_AcchCirFf                             */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void SetWallHDirect__12dBgS_AcchCirFf() {
	nofralloc
#include "asm/d/bg/d_bg_s_acch/SetWallHDirect__12dBgS_AcchCirFf.s"
}
#pragma pop

/* 80075F94-800760A0 010C .text      __dt__9dBgS_AcchFv                                           */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void __dt__9dBgS_AcchFv() {
	nofralloc
#include "asm/d/bg/d_bg_s_acch/__dt__9dBgS_AcchFv.s"
}
#pragma pop

/* 800760A0-800761CC 012C .text      __ct__9dBgS_AcchFv                                           */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void __ct__9dBgS_AcchFv() {
	nofralloc
#include "asm/d/bg/d_bg_s_acch/__ct__9dBgS_AcchFv.s"
}
#pragma pop

/* 800761CC-80076248 007C .text      Init__9dBgS_AcchFv                                           */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void Init__9dBgS_AcchFv() {
	nofralloc
#include "asm/d/bg/d_bg_s_acch/Init__9dBgS_AcchFv.s"
}
#pragma pop

/* 80076248-80076288 0040 .text      Set__9dBgS_AcchFP4cXyzP4cXyzP10fopAc_ac_ciP12dBgS_AcchCirP4cXyzP5csXyzP5csXyz */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void Set__9dBgS_AcchFP4cXyzP4cXyzP10fopAc_ac_ciP12dBgS_AcchCirP4cXyzP5csXyzP5csXyz() {
	nofralloc
#include "asm/d/bg/d_bg_s_acch/Set__9dBgS_AcchFP4cXyzP4cXyzP10fopAc_ac_ciP12dBgS_AcchCirP4cXyzP5csXyzP5csXyz.s"
}
#pragma pop

/* 80076288-800762D8 0050 .text      Set__9dBgS_AcchFP10fopAc_ac_ciP12dBgS_AcchCir                */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void Set__9dBgS_AcchFP10fopAc_ac_ciP12dBgS_AcchCir() {
	nofralloc
#include "asm/d/bg/d_bg_s_acch/Set__9dBgS_AcchFP10fopAc_ac_ciP12dBgS_AcchCir.s"
}
#pragma pop

/* 800762D8-80076350 0078 .text      GroundCheckInit__9dBgS_AcchFR4dBgS                           */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void GroundCheckInit__9dBgS_AcchFR4dBgS() {
	nofralloc
#include "asm/d/bg/d_bg_s_acch/GroundCheckInit__9dBgS_AcchFR4dBgS.s"
}
#pragma pop

/* 80076350-8007654C 01FC .text      GroundCheck__9dBgS_AcchFR4dBgS                               */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void GroundCheck__9dBgS_AcchFR4dBgS() {
	nofralloc
#include "asm/d/bg/d_bg_s_acch/GroundCheck__9dBgS_AcchFR4dBgS.s"
}
#pragma pop

/* 8007654C-80076624 00D8 .text      GroundRoofProc__9dBgS_AcchFR4dBgS                            */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void GroundRoofProc__9dBgS_AcchFR4dBgS() {
	nofralloc
#include "asm/d/bg/d_bg_s_acch/GroundRoofProc__9dBgS_AcchFR4dBgS.s"
}
#pragma pop

/* 80076624-80076AAC 0488 .text      LineCheck__9dBgS_AcchFR4dBgS                                 */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void LineCheck__9dBgS_AcchFR4dBgS() {
	nofralloc
#include "asm/d/bg/d_bg_s_acch/LineCheck__9dBgS_AcchFR4dBgS.s"
}
#pragma pop

/* 80076AAC-80076F84 04D8 .text      CrrPos__9dBgS_AcchFR4dBgS                                    */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void CrrPos__9dBgS_AcchFR4dBgS() {
	nofralloc
#include "asm/d/bg/d_bg_s_acch/CrrPos__9dBgS_AcchFR4dBgS.s"
}
#pragma pop

/* 80076F84-80076FC0 003C .text      GetWallAllR__9dBgS_AcchFv                                    */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void GetWallAllR__9dBgS_AcchFv() {
	nofralloc
#include "asm/d/bg/d_bg_s_acch/GetWallAllR__9dBgS_AcchFv.s"
}
#pragma pop

/* 80076FC0-8007703C 007C .text      SetWallCir__9dBgS_AcchFv                                     */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void SetWallCir__9dBgS_AcchFv() {
	nofralloc
#include "asm/d/bg/d_bg_s_acch/SetWallCir__9dBgS_AcchFv.s"
}
#pragma pop

/* 8007703C-80077114 00D8 .text      CalcWallBmdCyl__9dBgS_AcchFv                                 */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void CalcWallBmdCyl__9dBgS_AcchFv() {
	nofralloc
#include "asm/d/bg/d_bg_s_acch/CalcWallBmdCyl__9dBgS_AcchFv.s"
}
#pragma pop

/* 80077114-80077128 0014 .text      SetGroundUpY__9dBgS_AcchFf                                   */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void SetGroundUpY__9dBgS_AcchFf() {
	nofralloc
#include "asm/d/bg/d_bg_s_acch/SetGroundUpY__9dBgS_AcchFf.s"
}
#pragma pop

/* 80077128-80077178 0050 .text      GetWallAllLowH__9dBgS_AcchFv                                 */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void GetWallAllLowH__9dBgS_AcchFv() {
	nofralloc
#include "asm/d/bg/d_bg_s_acch/GetWallAllLowH__9dBgS_AcchFv.s"
}
#pragma pop

/* 80077178-800771E4 006C .text      GetWallAllLowH_R__9dBgS_AcchFv                               */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void GetWallAllLowH_R__9dBgS_AcchFv() {
	nofralloc
#include "asm/d/bg/d_bg_s_acch/GetWallAllLowH_R__9dBgS_AcchFv.s"
}
#pragma pop

/* 800771E4-80077200 001C .text      GetSpeedY__9dBgS_AcchFv                                      */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void GetSpeedY__9dBgS_AcchFv() {
	nofralloc
#include "asm/d/bg/d_bg_s_acch/GetSpeedY__9dBgS_AcchFv.s"
}
#pragma pop

/* 80077200-80077278 0078 .text      GetWallAddY__9dBgS_AcchFR3Vec                                */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void GetWallAddY__9dBgS_AcchFR3Vec() {
	nofralloc
#include "asm/d/bg/d_bg_s_acch/GetWallAddY__9dBgS_AcchFR3Vec.s"
}
#pragma pop

/* 80077278-80077288 0010 .text      SetNowActorInfo__9dBgS_AcchFiPvUi                            */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void SetNowActorInfo__9dBgS_AcchFiPvUi() {
	nofralloc
#include "asm/d/bg/d_bg_s_acch/SetNowActorInfo__9dBgS_AcchFiPvUi.s"
}
#pragma pop

/* 80077288-800772E8 0060 .text      SetWallPolyIndex__9dBgS_AcchFii                              */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void SetWallPolyIndex__9dBgS_AcchFii() {
	nofralloc
#include "asm/d/bg/d_bg_s_acch/SetWallPolyIndex__9dBgS_AcchFii.s"
}
#pragma pop

/* 800772E8-8007732C 0044 .text      CalcMovePosWork__9dBgS_AcchFv                                */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void CalcMovePosWork__9dBgS_AcchFv() {
	nofralloc
#include "asm/d/bg/d_bg_s_acch/CalcMovePosWork__9dBgS_AcchFv.s"
}
#pragma pop

/* 8007732C-80077388 005C .text      CalcWallRR__9dBgS_AcchFv                                     */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void CalcWallRR__9dBgS_AcchFv() {
	nofralloc
#include "asm/d/bg/d_bg_s_acch/CalcWallRR__9dBgS_AcchFv.s"
}
#pragma pop

/* 80077388-800773A4 001C .text      SetMoveBGOnly__9dBgS_AcchFv                                  */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void SetMoveBGOnly__9dBgS_AcchFv() {
	nofralloc
#include "asm/d/bg/d_bg_s_acch/SetMoveBGOnly__9dBgS_AcchFv.s"
}
#pragma pop

/* 800773A4-800773C0 001C .text      ClrMoveBGOnly__9dBgS_AcchFv                                  */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void ClrMoveBGOnly__9dBgS_AcchFv() {
	nofralloc
#include "asm/d/bg/d_bg_s_acch/ClrMoveBGOnly__9dBgS_AcchFv.s"
}
#pragma pop

/* 800773C0-800773D0 0010 .text      SetGndThinCellingOff__9dBgS_AcchFv                           */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void SetGndThinCellingOff__9dBgS_AcchFv() {
	nofralloc
#include "asm/d/bg/d_bg_s_acch/SetGndThinCellingOff__9dBgS_AcchFv.s"
}
#pragma pop

/* 800773D0-800773E0 0010 .text      ClrGndThinCellingOff__9dBgS_AcchFv                           */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void ClrGndThinCellingOff__9dBgS_AcchFv() {
	nofralloc
#include "asm/d/bg/d_bg_s_acch/ClrGndThinCellingOff__9dBgS_AcchFv.s"
}
#pragma pop

/* 800773E0-800773EC 000C .text      ChkGndThinCellingOff__9dBgS_AcchFv                           */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void ChkGndThinCellingOff__9dBgS_AcchFv() {
	nofralloc
#include "asm/d/bg/d_bg_s_acch/ChkGndThinCellingOff__9dBgS_AcchFv.s"
}
#pragma pop

/* 800773EC-800773FC 0010 .text      OnWallSort__9dBgS_AcchFv                                     */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void OnWallSort__9dBgS_AcchFv() {
	nofralloc
#include "asm/d/bg/d_bg_s_acch/OnWallSort__9dBgS_AcchFv.s"
}
#pragma pop

/* 800773FC-80077408 000C .text      ChkWallSort__9dBgS_AcchFv                                    */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void ChkWallSort__9dBgS_AcchFv() {
	nofralloc
#include "asm/d/bg/d_bg_s_acch/ChkWallSort__9dBgS_AcchFv.s"
}
#pragma pop

/* 80077408-80077414 000C .text      ChkLineDown__9dBgS_AcchFv                                    */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void ChkLineDown__9dBgS_AcchFv() {
	nofralloc
#include "asm/d/bg/d_bg_s_acch/ChkLineDown__9dBgS_AcchFv.s"
}
#pragma pop

/* 80077414-80077484 0070 .text      __dt__12dBgS_AcchCirFv                                       */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void __dt__12dBgS_AcchCirFv() {
	nofralloc
#include "asm/d/bg/d_bg_s_acch/__dt__12dBgS_AcchCirFv.s"
}
#pragma pop

/* 80077484-8007748C 0008 .text      @36@__dt__9dBgS_AcchFv                                       */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void func_80077484() {
	nofralloc
#include "asm/d/bg/d_bg_s_acch/func_80077484.s"
}
#pragma pop

/* 8007748C-80077494 0008 .text      @20@__dt__9dBgS_AcchFv                                       */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void func_8007748C() {
	nofralloc
#include "asm/d/bg/d_bg_s_acch/func_8007748C.s"
}
#pragma pop

/* 80077494-8007749C 0008 .text      checkPlayerFly__9daPy_py_cCFv                                */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void checkPlayerFly__9daPy_py_cCFv() {
	nofralloc
#include "asm/d/bg/d_bg_s_acch/checkPlayerFly__9daPy_py_cCFv.s"
}
#pragma pop


