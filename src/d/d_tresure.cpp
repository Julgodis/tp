// 
// Generated By: dol2asm
// Translation Unit: d/d_tresure
// 

#include "dolphin/types.h"

// 
// Types:
// 

// build dTres_c (['dTres_c']) False/False
// build dTres_c (['dTres_c']) True/False
struct dTres_c;
// build Vec (['Vec']) False/False
/* top-level dependencies (begin ['Vec']) */
/* top-level dependencies (end ['Vec']) */
struct Vec {
};

// build dTres_c (['dTres_c']) True/True
// build dTres_c (['dTres_c']) True/True
/* top-level dependencies (begin ['dTres_c']) */
// outer dependency: ('dTres_c', 'data_s')
// outer dependency: ('Vec',)
// outer dependency: ('dTres_c', 'typeGroupData_c')
// outer dependency: ('dTres_c', 'list_class')
/* top-level dependencies (end ['dTres_c']) */
struct dTres_c {
	// ('dTres_c', 'data_s')
	// ('Vec',)
	// ('dTres_c', 'typeGroupData_c')
	// ('dTres_c', 'list_class')
	// build list_class (['dTres_c', 'list_class']) False/False
	/* dependencies (begin ['dTres_c', 'list_class']) */
	/* dependencies (end ['dTres_c', 'list_class']) */
	struct list_class {
	};

	// build data_s (['dTres_c', 'data_s']) False/False
	/* dependencies (begin ['dTres_c', 'data_s']) */
	/* dependencies (end ['dTres_c', 'data_s']) */
	struct data_s {
	};

	// build typeGroupData_c (['dTres_c', 'typeGroupData_c']) False/False
	/* dependencies (begin ['dTres_c', 'typeGroupData_c']) */
	/* dependencies (end ['dTres_c', 'typeGroupData_c']) */
	struct typeGroupData_c {
	};

	/* 8009BBD8 */ void createWork();
	/* 8009BC18 */ void create();
	/* 8009BC60 */ void remove();
	/* 8009BC6C */ void reset();
	/* 8009BCB4 */ void addData(dTres_c::list_class*, s8);
	/* 8009BE28 */ void checkTreasureBox(dTres_c::data_s*);
	/* 8009C168 */ void onStatus(u8, int, int);
	/* 8009C1F0 */ void offStatus(u8, int, int);
	/* 8009C27C */ void getBossIconFloorNo(int*);
	/* 8009C360 */ void getFirstData(u8);
	/* 8009C39C */ void getNextData(dTres_c::typeGroupData_c*);
	/* 8009C3B4 */ void getNextData(dTres_c::typeGroupData_c const*);
	/* 8009C3CC */ void setPosition(int, u8, Vec const*, int);
	/* 8009C49C */ void getTypeGroupNoToType(u8);
	/* 8009C4B0 */ void getTypeToTypeGroupNo(u8);
};

// build Vec (['Vec']) True/True
// build dSv_memBit_c (['dSv_memBit_c']) False/False
/* top-level dependencies (begin ['dSv_memBit_c']) */
/* top-level dependencies (end ['dSv_memBit_c']) */
struct dSv_memBit_c {
	/* 80034934 */ void isDungeonItem(int) const;
};

// build dSv_info_c (['dSv_info_c']) False/False
/* top-level dependencies (begin ['dSv_info_c']) */
/* top-level dependencies (end ['dSv_info_c']) */
struct dSv_info_c {
	/* 80035360 */ void isSwitch(int, int) const;
};

// build dMapInfo_n (['dMapInfo_n']) False/False
// build Vec (['Vec']) True/True
/* top-level dependencies (begin ['dMapInfo_n']) */
// outer dependency: ('Vec',)
/* top-level dependencies (end ['dMapInfo_n']) */
struct dMapInfo_n {
	// ('Vec',)
	/* 8003ED60 */ void correctionOriginPos(s8, Vec*);
};

// build dMapInfo_c (['dMapInfo_c']) False/False
/* top-level dependencies (begin ['dMapInfo_c']) */
/* top-level dependencies (end ['dMapInfo_c']) */
struct dMapInfo_c {
	/* 8003F40C */ void calcFloorNo(f32, bool, int);
};

// 
// Forward References:
// 


extern "C" void createWork__7dTres_cFv();
extern "C" void create__7dTres_cFv();
extern "C" void remove__7dTres_cFv();
extern "C" void reset__7dTres_cFv();
extern "C" void addData__7dTres_cFPQ27dTres_c10list_classSc();
extern "C" void checkTreasureBox__7dTres_cFPQ27dTres_c6data_s();
extern "C" void onStatus__7dTres_cFUcii();
extern "C" void offStatus__7dTres_cFUcii();
extern "C" void getBossIconFloorNo__7dTres_cFPi();
extern "C" void getFirstData__7dTres_cFUc();
extern "C" void getNextData__7dTres_cFPQ27dTres_c15typeGroupData_c();
extern "C" void getNextData__7dTres_cFPCQ27dTres_c15typeGroupData_c();
extern "C" void setPosition__7dTres_cFiUcPC3Veci();
extern "C" void getTypeGroupNoToType__7dTres_cFUc();
extern "C" void getTypeToTypeGroupNo__7dTres_cFUc();
SECTION_RODATA extern const u8 typeToTypeGroup__7dTres_c[34 + 6 /* padding */];
SECTION_BSS extern u8 mTypeGroupListAll__7dTres_c[204 + 4 /* padding */];
SECTION_SBSS extern u8 mTypeGroupData__7dTres_c[4];
SECTION_SBSS extern u8 mNum__7dTres_c[2 + 2 /* padding */];
SECTION_SDATA2 extern f32 d_d_tresure__lit_3839;
SECTION_SDATA2 extern u8 d_d_tresure__lit_3840[4];
SECTION_SDATA2 extern f64 d_d_tresure__lit_3841;
SECTION_SDATA2 extern f64 d_d_tresure__lit_3842;
SECTION_SDATA2 extern u8 d_d_tresure__lit_3843[8];
SECTION_SDATA2 extern f64 d_d_tresure__lit_3845;

// 
// External References:
// 

void mDoMtx_YrotS(f32 (* )[4], s16);
void dPath_GetRoomPath(int, int);
void* operator new[](u32);
extern "C" void PSMTXMultVec();
extern "C" void PSVECAdd();
extern "C" void PSVECSquareDistance();
extern "C" void __construct_new_array();
extern "C" void _savegpr_26();
extern "C" void _savegpr_27();
extern "C" void _savegpr_28();
extern "C" void _restgpr_26();
extern "C" void _restgpr_27();
extern "C" void _restgpr_28();

extern "C" void mDoMtx_YrotS__FPA4_fs();
extern "C" void isDungeonItem__12dSv_memBit_cCFi();
extern "C" void isSwitch__10dSv_info_cCFii();
extern "C" void correctionOriginPos__10dMapInfo_nFScP3Vec();
extern "C" void calcFloorNo__10dMapInfo_cFfbi();
extern "C" void dPath_GetRoomPath__Fii();
extern "C" void* __nwa__FUl();
extern "C" void PSMTXMultVec();
extern "C" void PSVECAdd();
extern "C" void PSVECSquareDistance();
extern "C" void __construct_new_array();
extern "C" void _savegpr_26();
extern "C" void _savegpr_27();
extern "C" void _savegpr_28();
extern "C" void _restgpr_26();
extern "C" void _restgpr_27();
extern "C" void _restgpr_28();
SECTION_BSS extern u8 now__14mDoMtx_stack_c[48];
SECTION_BSS extern u8 g_dComIfG_gameInfo[122384];
SECTION_SDATA extern u8 data_80450680[8];
SECTION_SDATA extern u32 __float_nan;

// 
// Declarations:
// 

/* ############################################################################################## */
/* 80450F98-80450F9C 0004+00 rc=2 efc=0 .sbss      mTypeGroupData__7dTres_c                                     */
u8 mTypeGroupData__7dTres_c[4];

/* 8009BBD8-8009BC18 0040+00 rc=1 efc=1 .text      createWork__7dTres_cFv                                       */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void dTres_c::createWork() {
	nofralloc
#include "asm/d/d_tresure/createWork__7dTres_cFv.s"
}
#pragma pop


/* 8009BC18-8009BC60 0048+00 rc=1 efc=1 .text      create__7dTres_cFv                                           */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void dTres_c::create() {
	nofralloc
#include "asm/d/d_tresure/create__7dTres_cFv.s"
}
#pragma pop


/* 8009BC60-8009BC6C 000C+00 rc=1 efc=1 .text      remove__7dTres_cFv                                           */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void dTres_c::remove() {
	nofralloc
#include "asm/d/d_tresure/remove__7dTres_cFv.s"
}
#pragma pop


/* ############################################################################################## */
/* 80425438-80425508 00CC+04 rc=9 efc=3 .bss       mTypeGroupListAll__7dTres_c                                  */
u8 mTypeGroupListAll__7dTres_c[204 + 4 /* padding */];

/* 80450F9C-80450FA0 0002+02 rc=2 efc=0 .sbss      mNum__7dTres_c                                               */
u8 mNum__7dTres_c[2 + 2 /* padding */];

/* 8009BC6C-8009BCB4 0048+00 rc=2 efc=0 .text      reset__7dTres_cFv                                            */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void dTres_c::reset() {
	nofralloc
#include "asm/d/d_tresure/reset__7dTres_cFv.s"
}
#pragma pop


/* 8009BCB4-8009BE28 0174+00 rc=1 efc=1 .text      addData__7dTres_cFPQ27dTres_c10list_classSc                  */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void dTres_c::addData(dTres_c::list_class* field_0, s8 field_1) {
	nofralloc
#include "asm/d/d_tresure/addData__7dTres_cFPQ27dTres_c10list_classSc.s"
}
#pragma pop


/* ############################################################################################## */
/* 80452BE8-80452BEC 0004+00 rc=1 efc=0 .sdata2    @3839                                                        */
f32 d_d_tresure__lit_3839 = 182.04444885253906f;

/* 80452BEC-80452BF0 0004+00 rc=1 efc=0 .sdata2    @3840                                                        */
u8 d_d_tresure__lit_3840[4] = {
	0x00, 0x00, 0x00, 0x00,
};

/* 80452BF0-80452BF8 0008+00 rc=1 efc=0 .sdata2    @3841                                                        */
f64 d_d_tresure__lit_3841 = 0.5;

/* 80452BF8-80452C00 0008+00 rc=1 efc=0 .sdata2    @3842                                                        */
f64 d_d_tresure__lit_3842 = 3.0;

/* 80452C00-80452C08 0008+00 rc=1 efc=0 .sdata2    @3843                                                        */
u8 d_d_tresure__lit_3843[8] = {
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
};

/* 80452C08-80452C10 0008+00 rc=1 efc=0 .sdata2    @3845                                                        */
f64 d_d_tresure__lit_3845 = 4503601774854144.0 /* cast s32 to float */;

/* 8009BE28-8009C168 0340+00 rc=1 efc=0 .text      checkTreasureBox__7dTres_cFPQ27dTres_c6data_s                */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void dTres_c::checkTreasureBox(dTres_c::data_s* field_0) {
	nofralloc
#include "asm/d/d_tresure/checkTreasureBox__7dTres_cFPQ27dTres_c6data_s.s"
}
#pragma pop


/* 8009C168-8009C1F0 0088+00 rc=0 efc=0 .text      onStatus__7dTres_cFUcii                                      */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void dTres_c::onStatus(u8 field_0, int field_1, int field_2) {
	nofralloc
#include "asm/d/d_tresure/onStatus__7dTres_cFUcii.s"
}
#pragma pop


/* 8009C1F0-8009C27C 008C+00 rc=0 efc=0 .text      offStatus__7dTres_cFUcii                                     */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void dTres_c::offStatus(u8 field_0, int field_1, int field_2) {
	nofralloc
#include "asm/d/d_tresure/offStatus__7dTres_cFUcii.s"
}
#pragma pop


/* 8009C27C-8009C360 00E4+00 rc=1 efc=1 .text      getBossIconFloorNo__7dTres_cFPi                              */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void dTres_c::getBossIconFloorNo(int* field_0) {
	nofralloc
#include "asm/d/d_tresure/getBossIconFloorNo__7dTres_cFPi.s"
}
#pragma pop


/* 8009C360-8009C39C 003C+00 rc=8 efc=4 .text      getFirstData__7dTres_cFUc                                    */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void dTres_c::getFirstData(u8 field_0) {
	nofralloc
#include "asm/d/d_tresure/getFirstData__7dTres_cFUc.s"
}
#pragma pop


/* 8009C39C-8009C3B4 0018+00 rc=5 efc=3 .text      getNextData__7dTres_cFPQ27dTres_c15typeGroupData_c           */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void dTres_c::getNextData(dTres_c::typeGroupData_c* field_0) {
	nofralloc
#include "asm/d/d_tresure/getNextData__7dTres_cFPQ27dTres_c15typeGroupData_c.s"
}
#pragma pop


/* 8009C3B4-8009C3CC 0018+00 rc=1 efc=1 .text      getNextData__7dTres_cFPCQ27dTres_c15typeGroupData_c          */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void dTres_c::getNextData(dTres_c::typeGroupData_c const* field_0) {
	nofralloc
#include "asm/d/d_tresure/getNextData__7dTres_cFPCQ27dTres_c15typeGroupData_c.s"
}
#pragma pop


/* 8009C3CC-8009C49C 00D0+00 rc=0 efc=0 .text      setPosition__7dTres_cFiUcPC3Veci                             */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void dTres_c::setPosition(int field_0, u8 field_1, Vec const* field_2, int field_3) {
	nofralloc
#include "asm/d/d_tresure/setPosition__7dTres_cFiUcPC3Veci.s"
}
#pragma pop


/* ############################################################################################## */
/* 8037B0D8-8037B100 0022+06 rc=2 efc=0 .rodata    typeToTypeGroup__7dTres_c                                    */
SECTION_RODATA const u8 typeToTypeGroup__7dTres_c[40] = {
	0xFF, 0x00, 0x00, 0x01, 0x01, 0x02, 0x02, 0x03, 0x03, 0x04, 0x04, 0x05, 0x05, 0x06, 0x06, 0x07,
	0x07, 0x08, 0x80, 0x09, 0x81, 0x0A, 0x82, 0x0B, 0x83, 0x0C, 0x84, 0x0D, 0x85, 0x0E, 0x87, 0x0F,
	0x88, 0x10,
	/* padding */
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
};

/* 8009C49C-8009C4B0 0014+00 rc=1 efc=1 .text      getTypeGroupNoToType__7dTres_cFUc                            */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void dTres_c::getTypeGroupNoToType(u8 field_0) {
	nofralloc
#include "asm/d/d_tresure/getTypeGroupNoToType__7dTres_cFUc.s"
}
#pragma pop


/* 8009C4B0-8009C4FC 004C+00 rc=4 efc=3 .text      getTypeToTypeGroupNo__7dTres_cFUc                            */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void dTres_c::getTypeToTypeGroupNo(u8 field_0) {
	nofralloc
#include "asm/d/d_tresure/getTypeToTypeGroupNo__7dTres_cFUc.s"
}
#pragma pop


