// 
// Generated By: dol2asm
// Translation Unit: m_Do/m_Do_MemCardRWmng
// 

#include "dol2asm.h"
#include "dolphin/types.h"
#include "m_Do/m_Do_MemCardRWmng.h"

// 
// Types:
// 

struct mDoMemCdRWm_HeaderData {
};

struct CARDFileInfo {
};

// 
// Forward References:
// 

void mDoMemCdRWm_Store(CARDFileInfo*, void*, u32); // 2
void mDoMemCdRWm_Restore(CARDFileInfo*, void*, u32); // 2
static void mDoMemCdRWm_BuildHeader(mDoMemCdRWm_HeaderData*); // 2
static void mDoMemCdRWm_SetCardStat(CARDFileInfo*); // 2
static void mDoMemCdRWm_CheckCardStat(CARDFileInfo*); // 2
static void mDoMemCdRWm_CalcCheckSum(void*, u32); // 2
static void mDoMemCdRWm_CalcCheckSumGameData(void*, u32); // 2
void mDoMemCdRWm_TestCheckSumGameData(void*); // 2
void mDoMemCdRWm_SetCheckSumGameData(u8*, u8); // 2

extern "C" void mDoMemCdRWm_Store__FP12CARDFileInfoPvUl(); // 1
extern "C" void mDoMemCdRWm_Restore__FP12CARDFileInfoPvUl(); // 1
extern "C" static void mDoMemCdRWm_BuildHeader__FP22mDoMemCdRWm_HeaderData(); // 1
extern "C" static void mDoMemCdRWm_SetCardStat__FP12CARDFileInfo(); // 1
extern "C" static void mDoMemCdRWm_CheckCardStat__FP12CARDFileInfo(); // 1
extern "C" static void mDoMemCdRWm_CalcCheckSum__FPvUl(); // 1
extern "C" static void mDoMemCdRWm_CalcCheckSumGameData__FPvUl(); // 1
extern "C" void mDoMemCdRWm_TestCheckSumGameData__FPv(); // 1
extern "C" void mDoMemCdRWm_SetCheckSumGameData__FPUcUc(); // 1
extern "C" extern char const* const m_Do_m_Do_MemCardRWmng__stringBase0;

// 
// External References:
// 


SECTION_INIT void memset(); // 1
SECTION_INIT void memcpy(); // 1
extern "C" void OSGetTime(); // 1
extern "C" void OSTicksToCalendarTime(); // 1
extern "C" void CARDRead(); // 1
extern "C" void CARDWrite(); // 1
extern "C" void CARDGetStatus(); // 1
extern "C" void CARDSetStatus(); // 1
extern "C" void CARDGetSerialNo(); // 1
extern "C" void _savegpr_20(); // 1
extern "C" void _savegpr_28(); // 1
extern "C" void _restgpr_20(); // 1
extern "C" void _restgpr_28(); // 1
extern "C" void snprintf(); // 1
extern "C" extern u8 g_mDoMemCd_control[8192];
extern "C" extern u8 g_dComIfG_gameInfo[122384];

// 
// Declarations:
// 

/* ############################################################################################## */
/* 803ECF40-803F0F40 4000+00 s=2 e=0 z=0  None .bss       sTmpBuf                                                      */
static u8 sTmpBuf[16384];

/* 80017498-8001769C 0204+00 s=0 e=1 z=0  None .text      mDoMemCdRWm_Store__FP12CARDFileInfoPvUl                      */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void mDoMemCdRWm_Store(CARDFileInfo* param_0, void* param_1, u32 param_2) {
	nofralloc
#include "asm/m_Do/m_Do_MemCardRWmng/mDoMemCdRWm_Store__FP12CARDFileInfoPvUl.s"
}
#pragma pop


/* 8001769C-8001787C 01E0+00 s=0 e=1 z=0  None .text      mDoMemCdRWm_Restore__FP12CARDFileInfoPvUl                    */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void mDoMemCdRWm_Restore(CARDFileInfo* param_0, void* param_1, u32 param_2) {
	nofralloc
#include "asm/m_Do/m_Do_MemCardRWmng/mDoMemCdRWm_Restore__FP12CARDFileInfoPvUl.s"
}
#pragma pop


/* ############################################################################################## */
/* 80374408-80374460 0051+07 s=1 e=0 z=0  None .rodata    @stringBase0                                                 */
#pragma push
#pragma force_active on
#pragma section ".dead"
SECTION_DEAD char const* const stringBase_80374408 = "Zelda: Twilight Princess";
SECTION_DEAD char const* const stringBase_80374421 = "%d/%d Save Data";
SECTION_DEAD char const* const stringBase_80374431 = "zelda2_gc_banner.bti";
SECTION_DEAD char const* const stringBase_80374446 = "zelda2_gc_icon.bti";
/* @stringBase0 padding */
SECTION_DEAD static char const* const pad_80374459 = "\0\0\0\0\0\0";
#pragma pop

/* 8001787C-800179E4 0168+00 s=1 e=0 z=0  None .text      mDoMemCdRWm_BuildHeader__FP22mDoMemCdRWm_HeaderData          */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm static void mDoMemCdRWm_BuildHeader(mDoMemCdRWm_HeaderData* param_0) {
	nofralloc
#include "asm/m_Do/m_Do_MemCardRWmng/mDoMemCdRWm_BuildHeader__FP22mDoMemCdRWm_HeaderData.s"
}
#pragma pop


/* 800179E4-80017B4C 0168+00 s=1 e=0 z=0  None .text      mDoMemCdRWm_SetCardStat__FP12CARDFileInfo                    */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm static void mDoMemCdRWm_SetCardStat(CARDFileInfo* param_0) {
	nofralloc
#include "asm/m_Do/m_Do_MemCardRWmng/mDoMemCdRWm_SetCardStat__FP12CARDFileInfo.s"
}
#pragma pop


/* 80017B4C-80017C74 0128+00 s=2 e=0 z=0  None .text      mDoMemCdRWm_CheckCardStat__FP12CARDFileInfo                  */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm static void mDoMemCdRWm_CheckCardStat(CARDFileInfo* param_0) {
	nofralloc
#include "asm/m_Do/m_Do_MemCardRWmng/mDoMemCdRWm_CheckCardStat__FP12CARDFileInfo.s"
}
#pragma pop


/* 80017C74-80017CB4 0040+00 s=1 e=0 z=0  None .text      mDoMemCdRWm_CalcCheckSum__FPvUl                              */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm static void mDoMemCdRWm_CalcCheckSum(void* param_0, u32 param_1) {
	nofralloc
#include "asm/m_Do/m_Do_MemCardRWmng/mDoMemCdRWm_CalcCheckSum__FPvUl.s"
}
#pragma pop


/* 80017CB4-80017CEC 0038+00 s=2 e=0 z=0  None .text      mDoMemCdRWm_CalcCheckSumGameData__FPvUl                      */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm static void mDoMemCdRWm_CalcCheckSumGameData(void* param_0, u32 param_1) {
	nofralloc
#include "asm/m_Do/m_Do_MemCardRWmng/mDoMemCdRWm_CalcCheckSumGameData__FPvUl.s"
}
#pragma pop


/* 80017CEC-80017D38 004C+00 s=1 e=4 z=0  None .text      mDoMemCdRWm_TestCheckSumGameData__FPv                        */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void mDoMemCdRWm_TestCheckSumGameData(void* param_0) {
	nofralloc
#include "asm/m_Do/m_Do_MemCardRWmng/mDoMemCdRWm_TestCheckSumGameData__FPv.s"
}
#pragma pop


/* 80017D38-80017D7C 0044+00 s=0 e=4 z=0  None .text      mDoMemCdRWm_SetCheckSumGameData__FPUcUc                      */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void mDoMemCdRWm_SetCheckSumGameData(u8* param_0, u8 param_1) {
	nofralloc
#include "asm/m_Do/m_Do_MemCardRWmng/mDoMemCdRWm_SetCheckSumGameData__FPUcUc.s"
}
#pragma pop


