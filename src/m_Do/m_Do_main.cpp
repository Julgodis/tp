// 
// Generated By: dol2asm
// Translation Unit: m_Do/m_Do_main
// 

#include "dolphin/types.h"

// 
// Forward References:
// 

extern "C" extern void version_check__Fv();
extern "C" extern void CheckHeap1__9HeapCheckFv();
extern "C" extern void CheckHeap__FUl();
extern "C" extern void countUsed__FP10JKRExpHeap();
extern "C" extern void getUsedCount__9HeapCheckCFv();
extern "C" extern void heapDisplay__9HeapCheckCFv();
extern "C" extern void debugDisplay__Fv();
extern "C" extern void Debug_console__FUl();
extern "C" extern void LOAD_COPYDATE__FPv();
extern "C" extern void debug__Fv();
extern "C" extern void main01__Fv();
extern "C" extern void main();
extern "C" extern void dump_sort__7JKRHeapFv();
extern "C" extern void __sinit_m_Do_main_cpp();
SECTION_RODATA extern const u8 m_Do_m_Do_main__stringBase0[784];
SECTION_DATA extern u8 COPYDATE_STRING__7mDoMain[18 + 2 /* padding */];
SECTION_DATA extern void*HeapCheckTable[8];
SECTION_DATA extern u8 data_803A2F14[20];
SECTION_DATA extern u8 data_803A2F28[20 + 4 /* padding */];
SECTION_BSS extern u8 RootHeapCheck[40];
SECTION_BSS extern u8 SystemHeapCheck[40];
SECTION_BSS extern u8 ZeldaHeapCheck[40];
SECTION_BSS extern u8 GameHeapCheck[40];
SECTION_BSS extern u8 ArchiveHeapCheck[40];
SECTION_BSS extern u8 J2dHeapCheck[40];
SECTION_BSS extern u8 HostioHeapCheck[40];
SECTION_BSS extern u8 CommandHeapCheck[40];
SECTION_BSS extern u8 mainThreadStack[32768];
SECTION_BSS extern u8 mainThread[792 + 8 /* padding */];
SECTION_SDATA extern u32 data_80450580;
SECTION_SDATA extern u32 memMargin__7mDoMain;
SECTION_SDATA extern u8 data_80450588[8];
SECTION_SBSS extern u8 data_80450B00[8];
SECTION_SBSS extern u8 sPowerOnTime__7mDoMain[4];
SECTION_SBSS extern u8 data_80450B0C[4];
SECTION_SBSS extern u8 sHungUpTime__7mDoMain[4];
SECTION_SBSS extern u8 data_80450B14[4];
SECTION_SBSS extern u8 struct_80450B18[4];
SECTION_SBSS extern u8 data_80450B1C[4];
SECTION_SBSS extern u8 data_80450B20[4];
SECTION_SBSS extern u8 data_80450B24[4];
SECTION_SBSS extern u8 data_80450B28[4];
SECTION_SBSS extern u8 data_80450B2C[4];
SECTION_SBSS extern u8 data_80450B30[4];
SECTION_SBSS extern u8 data_80450B34[4];
SECTION_SBSS extern u8 data_80450B38[4];
SECTION_SBSS extern u8 data_80450B3C[4];
SECTION_SBSS extern u8 data_80450B40[4];
SECTION_SBSS extern u8 data_80450B44[4];
SECTION_SBSS extern u8 data_80450B48[4];
SECTION_SBSS extern u8 data_80450B4C[4];
SECTION_SBSS extern u8 data_80450B50[4];
SECTION_SBSS extern u8 data_80450B54[4];
SECTION_SBSS extern u8 data_80450B58[4];
SECTION_SBSS extern u8 data_80450B5C[4];
SECTION_SBSS extern u8 data_80450B60[4];
SECTION_SBSS extern u8 data_80450B64[4];
SECTION_SBSS extern u8 data_80450B68[4];
SECTION_SBSS extern u8 data_80450B6C[4];
SECTION_SBSS extern u8 data_80450B70[4];
SECTION_SBSS extern u8 data_80450B74[4];
SECTION_SBSS extern u8 data_80450B78[4];
SECTION_SBSS extern u8 data_80450B7C[4];
SECTION_SBSS extern u8 data_80450B80[4];
SECTION_SBSS extern u8 data_80450B84[4];
SECTION_SBSS extern u8 data_80450B88[4];
SECTION_SBSS extern u8 data_80450B8C[4];
SECTION_SBSS extern u8 data_80450B90[4 + 4 /* padding */];
SECTION_SBSS extern u8 struct_80450B98[4];
SECTION_SBSS extern u8 data_80450B9C[4];
SECTION_SDATA2 extern f32 m_Do_m_Do_main__lit_3884;
SECTION_SDATA2 extern f32 m_Do_m_Do_main__lit_3885;
SECTION_SDATA2 extern u8 m_Do_m_Do_main__lit_3886[4];
SECTION_SDATA2 extern f32 m_Do_m_Do_main__lit_3887;
SECTION_SDATA2 extern f32 m_Do_m_Do_main__lit_3888;
SECTION_SDATA2 extern f64 m_Do_m_Do_main__lit_3890;

// 
// External References:
// 

SECTION_INIT extern void memcpy();
extern "C" extern void OSReportInit__Fv();
extern "C" extern void OSReport_Error();
extern "C" extern void mDoAud_Execute__Fv();
extern "C" extern void create__8mDoCPd_cFv();
extern "C" extern void read__8mDoCPd_cFv();
extern "C" extern void mDoGph_Create__Fv();
extern "C" extern void mDoMch_HeapCheckAll__Fv();
extern "C" extern void mDoMch_Create__Fv();
extern "C" extern void mDoExt_getGameHeap__Fv();
extern "C" extern void mDoExt_getZeldaHeap__Fv();
extern "C" extern void mDoExt_getCommandHeap__Fv();
extern "C" extern void mDoExt_getArchiveHeap__Fv();
extern "C" extern void mDoExt_getJ2dHeap__Fv();
extern "C" extern void mDoExt_getHostIOHeap__Fv();
extern "C" extern void create__20mDoDvdThd_callback_cFPFPv_PvPv();
extern "C" extern void update__15mDoMemCd_Ctrl_cFv();
extern "C" extern void cDyl_InitAsync__Fv();
extern "C" extern void fapGm_Execute__Fv();
extern "C" extern void fapGm_Create__Fv();
extern "C" extern void fopAcM_initManager__Fv();
extern "C" extern void ct__13dComIfG_inf_cFv();
extern "C" extern void dump__14dRes_control_cFv();
extern "C" extern void dump__24DynamicModuleControlBaseFv();
extern "C" extern void getFreeSize__7JKRHeapFv();
extern "C" extern void getTotalFreeSize__7JKRHeapFv();
extern "C" extern void getTotalUsedSize__10JKRExpHeapCFv();
extern "C" extern void create__12JKRSolidHeapFUlP7JKRHeapb();
extern "C" extern void getFreeSize__11JKRAramHeapFv();
extern "C" extern void getTotalFreeSize__11JKRAramHeapFv();
extern "C" extern void dump__11JKRAramHeapFv();
extern "C" extern void JUTReport__FiiPCce();
extern "C" extern void JUTReport__FiiiPCce();
extern "C" extern void setMessageCount__12JUTAssertionFi();
extern "C" extern void clear__10JUTConsoleFv();
extern "C" extern void dumpToTerminal__10JUTConsoleFUi();
extern "C" extern void scroll__10JUTConsoleFi();
extern "C" extern void getLineOffset__10JUTConsoleCFv();
extern "C" extern void OSGetConsoleType();
extern "C" extern void OSAllocFromArenaLo();
extern "C" extern void OSGetResetCode();
extern "C" extern void OSGetCurrentThread();
extern "C" extern void OSDisableScheduler();
extern "C" extern void OSEnableScheduler();
extern "C" extern void OSCreateThread();
extern "C" extern void OSResumeThread();
extern "C" extern void OSSuspendThread();
extern "C" extern void OSSetThreadPriority();
extern "C" extern void OSGetThreadPriority();
extern "C" extern void OSCheckActiveThreads();
extern "C" extern void OSGetTime();
extern "C" extern void DVDOpen();
extern "C" extern void DVDClose();
extern "C" extern void DVDReadPrio();
extern "C" extern void DVDGetCurrentDiskID();
extern "C" extern void _savegpr_23();
extern "C" extern void _savegpr_26();
extern "C" extern void _savegpr_27();
extern "C" extern void _savegpr_28();
extern "C" extern void _restgpr_23();
extern "C" extern void _restgpr_26();
extern "C" extern void _restgpr_27();
extern "C" extern void _restgpr_28();
extern "C" extern void strcmp();
SECTION_BSS extern u8 m_gamePad__8mDoCPd_c[16];
SECTION_BSS extern u8 m_cpadInfo__8mDoCPd_c[256];
SECTION_BSS extern u8 g_mDoMemCd_control[8192];
SECTION_BSS extern u8 g_HIO[64 + 4 /* padding */];
SECTION_BSS extern u8 g_dComIfG_gameInfo[122384];
SECTION_SBSS extern u8 g_mDoAud_audioHeap[4];
SECTION_SBSS extern u8 gameHeap[4];
SECTION_SBSS extern u8 zeldaHeap[4];
SECTION_SBSS extern u8 archiveHeap[4];
SECTION_SBSS extern u8 mResetData__6mDoRst[4 + 4 /* padding */];
SECTION_SBSS extern u8 struct_80450C80[8];
SECTION_SBSS extern u8 systemConsole__9JFWSystem[4];
SECTION_SBSS extern u8 sSystemHeap__7JKRHeap[4];
SECTION_SBSS extern u8 sCurrentHeap__7JKRHeap[4];
SECTION_SBSS extern u8 sRootHeap__7JKRHeap[4];
SECTION_SBSS extern u8 sAramObject__7JKRAram[4];

// 
// Declarations:
// 

/* ############################################################################################## */
/* 803739A0-80373CB0 0310+00 .rodata    @stringBase0                                                 */
SECTION_RODATA const u8 m_Do_m_Do_main__stringBase0[784] = {
	0x32, 0x30, 0x41, 0x70, 0x72, 0x32, 0x30, 0x30, 0x34, 0x00, 0x50, 0x61, 0x74, 0x63, 0x68, 0x32,
	0x00, 0x53, 0x44, 0x4B, 0x82, 0xCC, 0x83, 0x6F, 0x81, 0x5B, 0x83, 0x57, 0x83, 0x87, 0x83, 0x93,
	0x82, 0xAA, 0x88, 0xEA, 0x92, 0x76, 0x82, 0xB5, 0x82, 0xDC, 0x82, 0xB9, 0x82, 0xF1, 0x81, 0x42,
	0x92, 0xE2, 0x8E, 0x7E, 0x82, 0xB5, 0x82, 0xDC, 0x82, 0xB7, 0x0A, 0x00, 0x5B, 0x25, 0x73, 0x4E,
	0x61, 0x6D, 0x65, 0x5D, 0x00, 0x48, 0x65, 0x61, 0x70, 0x53, 0x69, 0x7A, 0x65, 0x20, 0x20, 0x20,
	0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x25, 0x38, 0x6C, 0x64, 0x00, 0x54, 0x61, 0x72, 0x67, 0x65,
	0x74, 0x48, 0x65, 0x61, 0x70, 0x53, 0x69, 0x7A, 0x65, 0x20, 0x20, 0x20, 0x25, 0x38, 0x6C, 0x64,
	0x00, 0x54, 0x6F, 0x74, 0x61, 0x6C, 0x46, 0x72, 0x65, 0x65, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,
	0x20, 0x20, 0x25, 0x38, 0x6C, 0x64, 0x00, 0x46, 0x72, 0x65, 0x65, 0x53, 0x69, 0x7A, 0x65, 0x20,
	0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x25, 0x38, 0x6C, 0x64, 0x00, 0x54, 0x6F, 0x74,
	0x61, 0x6C, 0x55, 0x73, 0x65, 0x64, 0x53, 0x69, 0x7A, 0x65, 0x20, 0x20, 0x20, 0x20, 0x25, 0x38,
	0x6C, 0x64, 0x00, 0x54, 0x6F, 0x74, 0x61, 0x6C, 0x55, 0x73, 0x65, 0x64, 0x52, 0x61, 0x74, 0x65,
	0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x25, 0x33, 0x6C, 0x64, 0x25, 0x25, 0x00, 0x4D,
	0x61, 0x78, 0x54, 0x6F, 0x74, 0x61, 0x6C, 0x55, 0x73, 0x65, 0x64, 0x53, 0x69, 0x7A, 0x65, 0x20,
	0x25, 0x38, 0x6C, 0x64, 0x00, 0x4D, 0x61, 0x78, 0x54, 0x6F, 0x74, 0x61, 0x6C, 0x55, 0x73, 0x65,
	0x64, 0x52, 0x61, 0x74, 0x65, 0x20, 0x20, 0x20, 0x20, 0x20, 0x25, 0x33, 0x6C, 0x64, 0x25, 0x25,
	0x00, 0x4D, 0x69, 0x6E, 0x46, 0x72, 0x65, 0x65, 0x53, 0x69, 0x7A, 0x65, 0x20, 0x20, 0x20, 0x20,
	0x20, 0x20, 0x25, 0x38, 0x6C, 0x64, 0x00, 0x4D, 0x69, 0x6E, 0x46, 0x72, 0x65, 0x65, 0x52, 0x61,
	0x74, 0x65, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x25, 0x33, 0x6C, 0x64,
	0x25, 0x25, 0x00, 0x55, 0x73, 0x65, 0x64, 0x43, 0x6F, 0x75, 0x6E, 0x74, 0x20, 0x20, 0x20, 0x20,
	0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x25, 0x33, 0x6C, 0x64, 0x25, 0x00, 0x00,
	0x54, 0x6F, 0x74, 0x61, 0x6C, 0x46, 0x72, 0x65, 0x65, 0x00, 0x4D, 0x61, 0x78, 0x55, 0x73, 0x65,
	0x64, 0x20, 0x20, 0x00, 0x55, 0x73, 0x65, 0x64, 0x20, 0x20, 0x20, 0x20, 0x20, 0x00, 0x52, 0x65,
	0x6C, 0x55, 0x73, 0x65, 0x64, 0x20, 0x20, 0x00, 0x2F, 0x20, 0x4D, 0x61, 0x78, 0x46, 0x72, 0x65,
	0x65, 0x00, 0x2F, 0x48, 0x65, 0x61, 0x70, 0x53, 0x69, 0x7A, 0x65, 0x00, 0x42, 0x6C, 0x6B, 0x2F,
	0x42, 0x79, 0x74, 0x65, 0x73, 0x00, 0x41, 0x52, 0x41, 0x4D, 0x20, 0x46, 0x72, 0x65, 0x65, 0x00,
	0x25, 0x64, 0x00, 0x25, 0x73, 0x00, 0x20, 0x5B, 0x25, 0x73, 0x5D, 0x00, 0x25, 0x31, 0x30, 0x64,
	0x00, 0x50, 0x72, 0x65, 0x73, 0x73, 0x20, 0x58, 0x2B, 0x59, 0x2B, 0x53, 0x54, 0x41, 0x52, 0x54,
	0x20, 0x74, 0x6F, 0x20, 0x43, 0x4C, 0x45, 0x41, 0x52, 0x20, 0x63, 0x6F, 0x6E, 0x73, 0x6F, 0x6C,
	0x65, 0x2E, 0x00, 0x33, 0x44, 0x53, 0x74, 0x69, 0x63, 0x6B, 0x20, 0x55, 0x50, 0x2F, 0x44, 0x6F,
	0x77, 0x6E, 0x20, 0x74, 0x6F, 0x20, 0x73, 0x63, 0x72, 0x6F, 0x6C, 0x6C, 0x00, 0x50, 0x72, 0x65,
	0x73, 0x73, 0x20, 0x41, 0x20, 0x74, 0x6F, 0x20, 0x6F, 0x75, 0x74, 0x70, 0x75, 0x74, 0x20, 0x74,
	0x65, 0x72, 0x6D, 0x69, 0x6E, 0x61, 0x6C, 0x20, 0x66, 0x72, 0x6F, 0x6D, 0x20, 0x63, 0x6F, 0x6E,
	0x73, 0x6F, 0x6C, 0x65, 0x2E, 0x00, 0x53, 0x43, 0x52, 0x4F, 0x4C, 0x4C, 0x81, 0x46, 0x25, 0x33,
	0x64, 0x20, 0x25, 0x33, 0x64, 0x20, 0x25, 0x33, 0x64, 0x20, 0x4F, 0x75, 0x74, 0x70, 0x75, 0x74,
	0x3D, 0x25, 0x31, 0x78, 0x00, 0x50, 0x72, 0x65, 0x73, 0x73, 0x20, 0x4C, 0x2B, 0x52, 0x20, 0x74,
	0x72, 0x69, 0x67, 0x67, 0x65, 0x72, 0x20, 0x74, 0x6F, 0x20, 0x63, 0x6F, 0x6E, 0x74, 0x72, 0x6F,
	0x6C, 0x20, 0x63, 0x6F, 0x6E, 0x73, 0x6F, 0x6C, 0x65, 0x2E, 0x00, 0x50, 0x72, 0x65, 0x73, 0x73,
	0x20, 0x5B, 0x5A, 0x5D, 0x20, 0x74, 0x72, 0x69, 0x67, 0x67, 0x65, 0x72, 0x20, 0x74, 0x6F, 0x20,
	0x63, 0x6C, 0x6F, 0x73, 0x65, 0x20, 0x74, 0x68, 0x69, 0x73, 0x20, 0x77, 0x69, 0x6E, 0x64, 0x6F,
	0x77, 0x2E, 0x00, 0x2F, 0x73, 0x74, 0x72, 0x2F, 0x46, 0x69, 0x6E, 0x61, 0x6C, 0x2F, 0x52, 0x65,
	0x6C, 0x65, 0x61, 0x73, 0x65, 0x2F, 0x43, 0x4F, 0x50, 0x59, 0x44, 0x41, 0x54, 0x45, 0x00, 0x52,
	0x6F, 0x6F, 0x74, 0x00, 0x83, 0x8B, 0x81, 0x5B, 0x83, 0x67, 0x00, 0x53, 0x79, 0x73, 0x74, 0x65,
	0x6D, 0x00, 0x83, 0x56, 0x83, 0x58, 0x83, 0x65, 0x83, 0x80, 0x00, 0x5A, 0x65, 0x6C, 0x64, 0x61,
	0x00, 0x83, 0x5B, 0x83, 0x8B, 0x83, 0x5F, 0x00, 0x47, 0x61, 0x6D, 0x65, 0x00, 0x83, 0x51, 0x81,
	0x5B, 0x83, 0x80, 0x00, 0x41, 0x72, 0x63, 0x68, 0x69, 0x76, 0x65, 0x00, 0x83, 0x41, 0x81, 0x5B,
	0x83, 0x4A, 0x83, 0x43, 0x83, 0x75, 0x00, 0x4A, 0x32, 0x64, 0x00, 0x4A, 0x32, 0x44, 0x00, 0x48,
	0x6F, 0x73, 0x74, 0x69, 0x6F, 0x00, 0x83, 0x7A, 0x83, 0x58, 0x83, 0x67, 0x49, 0x4F, 0x00, 0x43,
	0x6F, 0x6D, 0x6D, 0x61, 0x6E, 0x64, 0x00, 0x83, 0x52, 0x83, 0x7D, 0x83, 0x93, 0x83, 0x68, 0x00,
};

/* 800056C0-80005728 0068+00 .text      version_check__Fv                                            */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
ASM_FUNCTION(version_check__Fv) {
	nofralloc
#include "asm/m_Do/m_Do_main/version_check__Fv.s"
}
#pragma pop


/* 80005728-8000578C 0064+00 .text      CheckHeap1__9HeapCheckFv                                     */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
ASM_FUNCTION(CheckHeap1__9HeapCheckFv) {
	nofralloc
#include "asm/m_Do/m_Do_main/CheckHeap1__9HeapCheckFv.s"
}
#pragma pop


/* ############################################################################################## */
/* 803A2EE0-803A2EF4 0012+02 .data      COPYDATE_STRING__7mDoMain                                    */
u8 COPYDATE_STRING__7mDoMain[20] = {
	0x3F, 0x3F, 0x2F, 0x3F, 0x3F, 0x2F, 0x3F, 0x3F, 0x20, 0x3F, 0x3F, 0x3A, 0x3F, 0x3F, 0x3A, 0x3F,
	0x3F, 0x00,
	/* padding */
	0x00, 0x00,
};

/* 803A2EF4-803A2F14 0020+00 .data      HeapCheckTable                                               */
void* HeapCheckTable[8] = {
	(void*)&RootHeapCheck,
	(void*)&SystemHeapCheck,
	(void*)&ZeldaHeapCheck,
	(void*)&GameHeapCheck,
	(void*)&ArchiveHeapCheck,
	(void*)&J2dHeapCheck,
	(void*)&HostioHeapCheck,
	(void*)&CommandHeapCheck,
};

/* 8000578C-80005848 00BC+00 .text      CheckHeap__FUl                                               */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
ASM_FUNCTION(CheckHeap__FUl) {
	nofralloc
#include "asm/m_Do/m_Do_main/CheckHeap__FUl.s"
}
#pragma pop


/* 80005848-800058A0 0058+00 .text      countUsed__FP10JKRExpHeap                                    */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
ASM_FUNCTION(countUsed__FP10JKRExpHeap) {
	nofralloc
#include "asm/m_Do/m_Do_main/countUsed__FP10JKRExpHeap.s"
}
#pragma pop


/* 800058A0-800058C4 0024+00 .text      getUsedCount__9HeapCheckCFv                                  */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
ASM_FUNCTION(getUsedCount__9HeapCheckCFv) {
	nofralloc
#include "asm/m_Do/m_Do_main/getUsedCount__9HeapCheckCFv.s"
}
#pragma pop


/* 800058C4-80005AD8 0214+00 .text      heapDisplay__9HeapCheckCFv                                   */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
ASM_FUNCTION(heapDisplay__9HeapCheckCFv) {
	nofralloc
#include "asm/m_Do/m_Do_main/heapDisplay__9HeapCheckCFv.s"
}
#pragma pop


/* ############################################################################################## */
/* 80450580-80450584 0004+00 .sdata     None                                                         */
u32 data_80450580 = 0xFF000000;

/* 80450584-80450588 0004+00 .sdata     memMargin__7mDoMain                                          */
u32 memMargin__7mDoMain = 0xFFFFFFFF;

/* 80450588-80450590 0008+00 .sdata     None                                                         */
u8 data_80450588[8] = {
	0x04, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
};

/* 80450B00-80450B08 0008+00 .sbss      None                                                         */
u8 data_80450B00[8];

/* 80450B08-80450B0C 0004+00 .sbss      sPowerOnTime__7mDoMain                                       */
u8 sPowerOnTime__7mDoMain[4];

/* 80450B0C-80450B10 0004+00 .sbss      None                                                         */
u8 data_80450B0C[4];

/* 80450B10-80450B14 0004+00 .sbss      sHungUpTime__7mDoMain                                        */
u8 sHungUpTime__7mDoMain[4];

/* 80450B14-80450B18 0004+00 .sbss      None                                                         */
u8 data_80450B14[4];

/* 80450B18-80450B1C 0004+00 .sbss      None                                                         */
u8 struct_80450B18[4];
/* 80450B18 0001 data_80450B18 */
/* 80450B19 0001 data_80450B19 */
/* 80450B1A 0002 data_80450B1A */

/* 80005AD8-80005D4C 0274+00 .text      debugDisplay__Fv                                             */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
ASM_FUNCTION(debugDisplay__Fv) {
	nofralloc
#include "asm/m_Do/m_Do_main/debugDisplay__Fv.s"
}
#pragma pop


/* ############################################################################################## */
/* 80450B1C-80450B20 0004+00 .sbss      console_position_x$3776                                      */
u8 data_80450B1C[4];

/* 80450B20-80450B24 0004+00 .sbss      None                                                         */
u8 data_80450B20[4];

/* 80450B24-80450B28 0004+00 .sbss      console_position_y$3779                                      */
u8 data_80450B24[4];

/* 80450B28-80450B2C 0004+00 .sbss      None                                                         */
u8 data_80450B28[4];

/* 80450B2C-80450B30 0004+00 .sbss      console_scroll$3782                                          */
u8 data_80450B2C[4];

/* 80450B30-80450B34 0004+00 .sbss      None                                                         */
u8 data_80450B30[4];

/* 80451A00-80451A04 0004+00 .sdata2    @3884                                                        */
f32 m_Do_m_Do_main__lit_3884 = 20.0f;

/* 80451A04-80451A08 0004+00 .sdata2    @3885                                                        */
f32 m_Do_m_Do_main__lit_3885 = 30.0f;

/* 80451A08-80451A0C 0004+00 .sdata2    @3886                                                        */
u8 m_Do_m_Do_main__lit_3886[4] = {
	0x00, 0x00, 0x00, 0x00,
};

/* 80451A0C-80451A10 0004+00 .sdata2    @3887                                                        */
f32 m_Do_m_Do_main__lit_3887 = 1.0f;

/* 80451A10-80451A18 0004+04 .sdata2    @3888                                                        */
f32 m_Do_m_Do_main__lit_3888 = -1.0f;
/* padding 4 bytes */

/* 80451A18-80451A20 0008+00 .sdata2    @3890                                                        */
f64 m_Do_m_Do_main__lit_3890 = 4503601774854144.0 /* cast s32 to float */;

/* 80005D4C-8000614C 0400+00 .text      Debug_console__FUl                                           */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
ASM_FUNCTION(Debug_console__FUl) {
	nofralloc
#include "asm/m_Do/m_Do_main/Debug_console__FUl.s"
}
#pragma pop


/* 8000614C-800061C8 007C+00 .text      LOAD_COPYDATE__FPv                                           */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
ASM_FUNCTION(LOAD_COPYDATE__FPv) {
	nofralloc
#include "asm/m_Do/m_Do_main/LOAD_COPYDATE__FPv.s"
}
#pragma pop


/* 800061C8-8000628C 00C4+00 .text      debug__Fv                                                    */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
ASM_FUNCTION(debug__Fv) {
	nofralloc
#include "asm/m_Do/m_Do_main/debug__Fv.s"
}
#pragma pop


/* ############################################################################################## */
/* 803D32E0-803D3308 0028+00 .bss       RootHeapCheck                                                */
u8 RootHeapCheck[40];

/* 80450B34-80450B38 0004+00 .sbss      frame$3939                                                   */
u8 data_80450B34[4];

/* 8000628C-80006454 01C8+00 .text      main01__Fv                                                   */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
ASM_FUNCTION(main01__Fv) {
	nofralloc
#include "asm/m_Do/m_Do_main/main01__Fv.s"
}
#pragma pop


/* ############################################################################################## */
/* 803D3308-803D3330 0028+00 .bss       SystemHeapCheck                                              */
u8 SystemHeapCheck[40];

/* 803D3330-803D3358 0028+00 .bss       ZeldaHeapCheck                                               */
u8 ZeldaHeapCheck[40];

/* 803D3358-803D3380 0028+00 .bss       GameHeapCheck                                                */
u8 GameHeapCheck[40];

/* 803D3380-803D33A8 0028+00 .bss       ArchiveHeapCheck                                             */
u8 ArchiveHeapCheck[40];

/* 803D33A8-803D33D0 0028+00 .bss       J2dHeapCheck                                                 */
u8 J2dHeapCheck[40];

/* 803D33D0-803D33F8 0028+00 .bss       HostioHeapCheck                                              */
u8 HostioHeapCheck[40];

/* 803D33F8-803D3420 0028+00 .bss       CommandHeapCheck                                             */
u8 CommandHeapCheck[40];

/* 803D3420-803DB420 8000+00 .bss       mainThreadStack                                              */
u8 mainThreadStack[32768];

/* 803DB420-803DB740 0318+08 .bss       mainThread                                                   */
u8 mainThread[792 + 8 /* padding */];

/* 80006454-800065D8 0184+00 .text      main                                                         */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
ASM_FUNCTION(main) {
	nofralloc
#include "asm/m_Do/m_Do_main/main.s"
}
#pragma pop


/* 800065D8-800065E0 0008+00 .text      dump_sort__7JKRHeapFv                                        */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
ASM_FUNCTION(dump_sort__7JKRHeapFv) {
	nofralloc
#include "asm/m_Do/m_Do_main/dump_sort__7JKRHeapFv.s"
}
#pragma pop


/* 800065E0-80006798 01B8+00 .text      __sinit_m_Do_main_cpp                                        */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
ASM_FUNCTION(__sinit_m_Do_main_cpp) {
	nofralloc
#include "asm/m_Do/m_Do_main/__sinit_m_Do_main_cpp.s"
}
#pragma pop


/* ############################################################################################## */
/* 803A2F14-803A2F28 0014+00 .data      desc1$3717                                                   */
u8 data_803A2F14[20] = {
	0x80, 0x37, 0x3A, 0xEF, 0x80, 0x37, 0x3A, 0xF0, 0x80, 0x37, 0x3A, 0xFA, 0x80, 0x37, 0x3B, 0x04,
	0x80, 0x37, 0x3B, 0x0E,
};

/* 803A2F28-803A2F40 0014+04 .data      desc2$3718                                                   */
u8 data_803A2F28[24] = {
	0x80, 0x37, 0x3A, 0xEF, 0x80, 0x37, 0x3B, 0x18, 0x80, 0x37, 0x3B, 0x22, 0x80, 0x37, 0x3B, 0x2C,
	0x80, 0x37, 0x3B, 0x2C,
	/* padding */
	0x00, 0x00, 0x00, 0x00,
};

/* 80450B38-80450B3C 0004+00 .sbss      sInstance__34JASGlobalInstance<13Z2WolfHowlMgr>              */
u8 data_80450B38[4];

/* 80450B3C-80450B40 0004+00 .sbss      sInstance__31JASGlobalInstance<10Z2EnvSeMgr>                 */
u8 data_80450B3C[4];

/* 80450B40-80450B44 0004+00 .sbss      sInstance__32JASGlobalInstance<11Z2FxLineMgr>                */
u8 data_80450B40[4];

/* 80450B44-80450B48 0004+00 .sbss      sInstance__31JASGlobalInstance<10Z2Audience>                 */
u8 data_80450B44[4];

/* 80450B48-80450B4C 0004+00 .sbss      sInstance__34JASGlobalInstance<13Z2SoundObjMgr>              */
u8 data_80450B48[4];

/* 80450B4C-80450B50 0004+00 .sbss      sInstance__32JASGlobalInstance<11Z2SoundInfo>                */
u8 data_80450B4C[4];

/* 80450B50-80450B54 0004+00 .sbss      sInstance__33JASGlobalInstance<12JAUSoundInfo>               */
u8 data_80450B50[4];

/* 80450B54-80450B58 0004+00 .sbss      sInstance__38JASGlobalInstance<17JAUSoundNameTable>          */
u8 data_80450B54[4];

/* 80450B58-80450B5C 0004+00 .sbss      sInstance__34JASGlobalInstance<13JAUSoundTable>              */
u8 data_80450B58[4];

/* 80450B5C-80450B60 0004+00 .sbss      sInstance__33JASGlobalInstance<12JAISoundInfo>               */
u8 data_80450B5C[4];

/* 80450B60-80450B64 0004+00 .sbss      sInstance__31JASGlobalInstance<10Z2SoundMgr>                 */
u8 data_80450B60[4];

/* 80450B64-80450B68 0004+00 .sbss      sInstance__33JASGlobalInstance<12JAIStreamMgr>               */
u8 data_80450B64[4];

/* 80450B68-80450B6C 0004+00 .sbss      sInstance__29JASGlobalInstance<9JAISeqMgr>                   */
u8 data_80450B68[4];

/* 80450B6C-80450B70 0004+00 .sbss      sInstance__28JASGlobalInstance<8JAISeMgr>                    */
u8 data_80450B6C[4];

/* 80450B70-80450B74 0004+00 .sbss      sInstance__33JASGlobalInstance<12Z2SpeechMgr2>               */
u8 data_80450B70[4];

/* 80450B74-80450B78 0004+00 .sbss      sInstance__35JASGlobalInstance<14Z2SoundStarter>             */
u8 data_80450B74[4];

/* 80450B78-80450B7C 0004+00 .sbss      sInstance__36JASGlobalInstance<15JAISoundStarter>            */
u8 data_80450B78[4];

/* 80450B7C-80450B80 0004+00 .sbss      sInstance__32JASGlobalInstance<11Z2StatusMgr>                */
u8 data_80450B7C[4];

/* 80450B80-80450B84 0004+00 .sbss      sInstance__31JASGlobalInstance<10Z2SceneMgr>                 */
u8 data_80450B80[4];

/* 80450B84-80450B88 0004+00 .sbss      sInstance__28JASGlobalInstance<8Z2SeqMgr>                    */
u8 data_80450B84[4];

/* 80450B88-80450B8C 0004+00 .sbss      sInstance__27JASGlobalInstance<7Z2SeMgr>                     */
u8 data_80450B88[4];

/* 80450B8C-80450B90 0004+00 .sbss      sInstance__35JASGlobalInstance<14JASAudioThread>             */
u8 data_80450B8C[4];

/* 80450B90-80450B98 0004+04 .sbss      sInstance__40JASGlobalInstance<19JASDefaultBankTable>        */
u8 data_80450B90[4 + 4 /* padding */];

/* 80450B98-80450B9C 0004+00 .sbss      None                                                         */
u8 struct_80450B98[4];
/* 80450B98 0001 data_80450B98 */
/* 80450B99 0001 data_80450B99 */
/* 80450B9A 0001 data_80450B9A */
/* 80450B9B 0001 data_80450B9B */

/* 80450B9C-80450BA0 0004+00 .sbss      None                                                         */
u8 data_80450B9C[4];

