//
// Generated By: dol2asm
// Translation Unit: m_Do/m_Do_printf
//

#include "m_Do/m_Do_printf.h"
#include "dol2asm.h"
#include "dolphin/types.h"

//
// Types:
//

struct __va_list_struct {};

//
// Forward References:
//

static void OSSwitchFiberEx(u32, u32, u32, u32, u32, u32);
static void my_PutString(char const*);
static void OSVAttention(char const*, __va_list_struct*);
void OSReportInit();
static void mDoPrintf_vprintf_Interrupt(char const*, __va_list_struct*);
static void mDoPrintf_vprintf_Thread(char const*, __va_list_struct*);
static void mDoPrintf_vprintf(char const*, __va_list_struct*);
extern "C" extern char const* const m_Do_m_Do_printf__stringBase0;

extern "C" static void OSSwitchFiberEx__FUlUlUlUlUlUl();
extern "C" static void my_PutString__FPCc();
extern "C" static void OSVAttention__FPCcP16__va_list_struct();
extern "C" void OSAttention();
extern "C" void OSReportDisable();
extern "C" void OSReportEnable();
extern "C" static void OSReportForceEnableOn();
extern "C" static void OSReportForceEnableOff();
extern "C" void OSReportInit__Fv();
extern "C" static void mDoPrintf_vprintf_Interrupt__FPCcP16__va_list_struct();
extern "C" static void mDoPrintf_vprintf_Thread__FPCcP16__va_list_struct();
extern "C" static void mDoPrintf_vprintf__FPCcP16__va_list_struct();
extern "C" static void mDoPrintf_VReport();
extern "C" static void OSVReport();
extern "C" void OSReport();
extern "C" void OSReport_FatalError();
extern "C" void OSReport_Error();
extern "C" void OSReport_Warning();
extern "C" void OSReport_System();
extern "C" void OSPanic();
extern "C" extern char const* const m_Do_m_Do_printf__stringBase0;

//
// External References:
//

void mDoExt_GetCurrentRunningThread();
extern "C" extern void* __files[80];
extern "C" extern u8 lit_3620[12];
extern "C" extern u8 struct_80450B98[4];
extern "C" extern u8 data_80450B9C[4];

extern "C" void mDoExt_GetCurrentRunningThread__Fv();
extern "C" void PPCHalt();
extern "C" void OSGetStackPointer();
extern "C" void OSDisableInterrupts();
extern "C" void OSRestoreInterrupts();
extern "C" void _savegpr_29();
extern "C" void _restgpr_29();
extern "C" void fputs();
extern "C" void fflush();
extern "C" void vprintf();
extern "C" extern void* __files[80];
extern "C" extern u8 lit_3620[12];
extern "C" extern u8 struct_80450B98[4];
extern "C" extern u8 data_80450B9C[4];

//
// Declarations:
//

/* 80006798-800067C8 0030+00 s=1 e=0 z=0  None .text      OSSwitchFiberEx__FUlUlUlUlUlUl */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm static void OSSwitchFiberEx(u32 param_0, u32 param_1, u32 param_2, u32 param_3, u32 param_4,
                                u32 param_5) {
    nofralloc
#include "asm/m_Do/m_Do_printf/OSSwitchFiberEx__FUlUlUlUlUlUl.s"
}
#pragma pop

/* 800067C8-800067F4 002C+00 s=3 e=0 z=0  None .text      my_PutString__FPCc */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm static void my_PutString(char const* param_0) {
    nofralloc
#include "asm/m_Do/m_Do_printf/my_PutString__FPCc.s"
}
#pragma pop

/* 800067F4-80006814 0020+00 s=3 e=0 z=0  None .text      OSVAttention__FPCcP16__va_list_struct */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm static void OSVAttention(char const* param_0, __va_list_struct* param_1) {
    nofralloc
#include "asm/m_Do/m_Do_printf/OSVAttention__FPCcP16__va_list_struct.s"
}
#pragma pop

/* 80006814-80006894 0080+00 s=1 e=1 z=0  None .text      OSAttention */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
extern "C" asm void OSAttention() {
    nofralloc
#include "asm/m_Do/m_Do_printf/OSAttention.s"
}
#pragma pop

/* 80006894-800068A0 000C+00 s=0 e=1 z=0  None .text      OSReportDisable */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
extern "C" asm void OSReportDisable() {
    nofralloc
#include "asm/m_Do/m_Do_printf/OSReportDisable.s"
}
#pragma pop

/* 800068A0-800068AC 000C+00 s=0 e=1 z=0  None .text      OSReportEnable */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
extern "C" asm void OSReportEnable() {
    nofralloc
#include "asm/m_Do/m_Do_printf/OSReportEnable.s"
}
#pragma pop

/* 800068AC-800068B8 000C+00 s=4 e=0 z=0  None .text      OSReportForceEnableOn */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
extern "C" asm static void OSReportForceEnableOn() {
    nofralloc
#include "asm/m_Do/m_Do_printf/OSReportForceEnableOn.s"
}
#pragma pop

/* 800068B8-800068C4 000C+00 s=4 e=0 z=0  None .text      OSReportForceEnableOff */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
extern "C" asm static void OSReportForceEnableOff() {
    nofralloc
#include "asm/m_Do/m_Do_printf/OSReportForceEnableOff.s"
}
#pragma pop

/* ############################################################################################## */
/* 80450BA0-80450BA4 0004+00 s=1 e=0 z=0  None .sbss      __OSReport_MonopolyThread */
static u8 __OSReport_MonopolyThread[4];

/* 80450BA4-80450BA8 0004+00 s=1 e=0 z=0  None .sbss      print_counts */
static u8 print_counts[4];

/* 80450BA8-80450BAC 0004+00 s=2 e=0 z=0  None .sbss      print_errors */
static u8 print_errors[4];

/* 80450BAC-80450BB0 0004+00 s=1 e=0 z=0  None .sbss      print_warings */
static u8 print_warings[4];

/* 80450BB0-80450BB4 0004+00 s=1 e=0 z=0  None .sbss      print_systems */
static u8 print_systems[4];

/* 80450BB4-80450BB8 0004+00 s=3 e=0 z=0  None .sbss      None */
static u8 struct_80450BB4[4];

/* 800068C4-800068DC 0018+00 s=1 e=1 z=0  None .text      OSReportInit__Fv */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void OSReportInit() {
    nofralloc
#include "asm/m_Do/m_Do_printf/OSReportInit__Fv.s"
}
#pragma pop

/* ############################################################################################## */
/* 803DB740-803DBF40 0800+00 s=1 e=0 z=0  None .bss       mDoPrintf_FiberStack */
static u8 mDoPrintf_FiberStack[2048];

/* 800068DC-80006964 0088+00 s=1 e=0 z=0  None .text
 * mDoPrintf_vprintf_Interrupt__FPCcP16__va_list_struct         */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm static void mDoPrintf_vprintf_Interrupt(char const* param_0, __va_list_struct* param_1) {
    nofralloc
#include "asm/m_Do/m_Do_printf/mDoPrintf_vprintf_Interrupt__FPCcP16__va_list_struct.s"
}
#pragma pop

/* 80006964-80006984 0020+00 s=1 e=0 z=0  None .text
 * mDoPrintf_vprintf_Thread__FPCcP16__va_list_struct            */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm static void mDoPrintf_vprintf_Thread(char const* param_0, __va_list_struct* param_1) {
    nofralloc
#include "asm/m_Do/m_Do_printf/mDoPrintf_vprintf_Thread__FPCcP16__va_list_struct.s"
}
#pragma pop

/* 80006984-80006A10 008C+00 s=4 e=0 z=0  None .text      mDoPrintf_vprintf__FPCcP16__va_list_struct
 */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm static void mDoPrintf_vprintf(char const* param_0, __va_list_struct* param_1) {
    nofralloc
#include "asm/m_Do/m_Do_printf/mDoPrintf_vprintf__FPCcP16__va_list_struct.s"
}
#pragma pop

/* 80006A10-80006A9C 008C+00 s=1 e=0 z=0  None .text      mDoPrintf_VReport */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
extern "C" asm static void mDoPrintf_VReport() {
    nofralloc
#include "asm/m_Do/m_Do_printf/mDoPrintf_VReport.s"
}
#pragma pop

/* 80006A9C-80006ABC 0020+00 s=2 e=0 z=0  None .text      OSVReport */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
extern "C" asm static void OSVReport() {
    nofralloc
#include "asm/m_Do/m_Do_printf/OSVReport.s"
}
#pragma pop

/* 80006ABC-80006B3C 0080+00 s=0 e=97 z=10  None .text      OSReport */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
extern "C" asm void OSReport() {
    nofralloc
#include "asm/m_Do/m_Do_printf/OSReport.s"
}
#pragma pop

/* ############################################################################################## */
/* 80373CB0-80373D68 00B8+00 s=4 e=0 z=0  None .rodata    @stringBase0 */
#pragma push
#pragma force_active on
#pragma section ".dead"
SECTION_DEAD char const* const stringBase_80373CB0 = ""
                                                     "\x1B"
                                                     "[41;37m***** FATAL ERROR *****\n";
SECTION_DEAD char const* const stringBase_80373CD1 = "***** FATAL ERROR *****\n"
                                                     "\x1B"
                                                     "[m";
SECTION_DEAD char const* const stringBase_80373CED = ""
                                                     "\x1B"
                                                     "[41;37m[ERROR]";
SECTION_DEAD char const* const stringBase_80373CFD = ""
                                                     "\x1B"
                                                     "[m";
SECTION_DEAD char const* const stringBase_80373D01 = ""
                                                     "\x1B"
                                                     "[43;30m[WARN]";
SECTION_DEAD char const* const stringBase_80373D10 = " in \"%s\" on line %d.\n";
SECTION_DEAD char const* const stringBase_80373D26 = "\nAddress:      Back Chain    LR Save\n";
SECTION_DEAD char const* const stringBase_80373D4C = "0x%08x:   0x%08x    0x%08x\n";
#pragma pop

/* 80006B3C-80006C0C 00D0+00 s=0 e=2 z=0  None .text      OSReport_FatalError */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
extern "C" asm void OSReport_FatalError() {
    nofralloc
#include "asm/m_Do/m_Do_printf/OSReport_FatalError.s"
}
#pragma pop

/* 80006C0C-80006CEC 00E0+00 s=0 e=31 z=10  None .text      OSReport_Error */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
extern "C" asm void OSReport_Error() {
    nofralloc
#include "asm/m_Do/m_Do_printf/OSReport_Error.s"
}
#pragma pop

/* 80006CEC-80006DCC 00E0+00 s=0 e=6 z=0  None .text      OSReport_Warning */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
extern "C" asm void OSReport_Warning() {
    nofralloc
#include "asm/m_Do/m_Do_printf/OSReport_Warning.s"
}
#pragma pop

/* 80006DCC-80006E7C 00B0+00 s=0 e=1 z=0  None .text      OSReport_System */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
extern "C" asm void OSReport_System() {
    nofralloc
#include "asm/m_Do/m_Do_printf/OSReport_System.s"
}
#pragma pop

/* 80006E7C-80006FB4 0138+00 s=0 e=9 z=0  None .text      OSPanic */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
extern "C" asm void OSPanic() {
    nofralloc
#include "asm/m_Do/m_Do_printf/OSPanic.s"
}
#pragma pop
