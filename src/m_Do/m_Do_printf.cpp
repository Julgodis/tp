// 
// Generated By: dol2asm
// 

// 
// Compiler Options: -str pool,readonly,reuse
// 

#include "dolphin/types.h"

// 
// Additional Symbols:
// 

struct __va_list_struct;

extern void OSSwitchFiberEx(u32, u32, u32, u32, u32, u32); /* OSSwitchFiberEx__FUlUlUlUlUlUl */
extern void my_PutString(const char*); /* my_PutString__FPCc */
extern void OSVAttention(const char*, __va_list_struct*); /* OSVAttention__FPCcP16__va_list_struct */
extern void OSReportInit(void); /* OSReportInit__Fv */
extern void mDoPrintf_vprintf_Interrupt(const char*, __va_list_struct*); /* mDoPrintf_vprintf_Interrupt__FPCcP16__va_list_struct */
extern void mDoPrintf_vprintf_Thread(const char*, __va_list_struct*); /* mDoPrintf_vprintf_Thread__FPCcP16__va_list_struct */
extern void mDoPrintf_vprintf(const char*, __va_list_struct*); /* mDoPrintf_vprintf__FPCcP16__va_list_struct */
extern void mDoExt_GetCurrentRunningThread(void); /* mDoExt_GetCurrentRunningThread__Fv */

extern "C" {
extern void OSSwitchFiberEx__FUlUlUlUlUlUl();
extern void my_PutString__FPCc();
extern void OSVAttention__FPCcP16__va_list_struct();
extern "C" extern void OSAttention();
extern "C" extern void OSReportDisable();
extern "C" extern void OSReportEnable();
extern "C" extern void OSReportForceEnableOn();
extern "C" extern void OSReportForceEnableOff();
extern void OSReportInit__Fv();
extern void mDoPrintf_vprintf_Interrupt__FPCcP16__va_list_struct();
extern void mDoPrintf_vprintf_Thread__FPCcP16__va_list_struct();
extern void mDoPrintf_vprintf__FPCcP16__va_list_struct();
extern "C" extern void mDoPrintf_VReport();
extern "C" extern void OSVReport();
extern "C" extern void OSReport();
extern "C" extern void OSReport_FatalError();
extern "C" extern void OSReport_Error();
extern "C" extern void OSReport_Warning();
extern "C" extern void OSReport_System();
extern "C" extern void OSPanic();
extern void mDoExt_GetCurrentRunningThread__Fv();
extern "C" extern void PPCHalt();
extern "C" extern void OSGetStackPointer();
extern "C" extern void OSDisableInterrupts();
extern "C" extern void OSRestoreInterrupts();
extern "C" extern void _savegpr_29();
extern "C" extern void _restgpr_29();
extern "C" extern void fputs();
extern "C" extern void fflush();
extern "C" extern void vprintf();
SECTION_RODATA extern const u8 m_Do_m_Do_printf__stringBase0[184];
SECTION_DATA extern u8 __files[320];
SECTION_BSS extern u8 mDoPrintf_FiberStack[2048];
SECTION_SBSS extern u8 merged_80450B98[4];
SECTION_SBSS extern u8 data_80450B9C[4];
SECTION_SBSS extern u8 __OSReport_MonopolyThread[4];
SECTION_SBSS extern u8 print_counts[4];
SECTION_SBSS extern u8 print_errors[4];
SECTION_SBSS extern u8 print_warings[4];
SECTION_SBSS extern u8 print_systems[4];
SECTION_SBSS extern u8 merged_80450BB4[4];
}


/* ###################################################################################### */
/*                                        .rodata                                         */
/* ###################################################################################### */

extern "C" {
/* 80373CB0-80373D68 00B8 .rodata    @stringBase0                                                 */
#pragma push
#pragma force_active on
#pragma section ".dead"
SECTION_DEAD const char* const stringBase_80373CB0 = 
    """\x1B""[41;37m***** FA"
    "TAL ERROR *****\n";
SECTION_DEAD const char* const stringBase_80373CD1 = "***** FATAL ERROR *****\n""\x1B""[m";
SECTION_DEAD const char* const stringBase_80373CED = """\x1B""[41;37m[ERROR]";
SECTION_DEAD const char* const stringBase_80373CFD = """\x1B""[m";
SECTION_DEAD const char* const stringBase_80373D01 = """\x1B""[43;30m[WARN]";
SECTION_DEAD const char* const stringBase_80373D10 = " in \"%s\" on line %d.\n";
SECTION_DEAD const char* const stringBase_80373D26 = 
    "\nAddress:      B"
    "ack Chain    LR "
    "Save\n";
SECTION_DEAD const char* const stringBase_80373D4C = "0x%08x:   0x%08x    0x%08x\n";
#pragma pop
}


/* ###################################################################################### */
/*                                          .bss                                          */
/* ###################################################################################### */

extern "C" {
/* 803DB740-803DBF40 0800 .bss       mDoPrintf_FiberStack                                         */
SECTION_BSS u8 mDoPrintf_FiberStack[2048];
}


/* ###################################################################################### */
/*                                         .sbss                                          */
/* ###################################################################################### */

extern "C" {
/* 80450BA0-80450BA4 0004 .sbss      __OSReport_MonopolyThread                                    */
SECTION_SBSS u8 __OSReport_MonopolyThread[4];
/* 80450BA4-80450BA8 0004 .sbss      print_counts                                                 */
SECTION_SBSS u8 print_counts[4];
/* 80450BA8-80450BAC 0004 .sbss      print_errors                                                 */
SECTION_SBSS u8 print_errors[4];
/* 80450BAC-80450BB0 0004 .sbss      print_warings                                                */
SECTION_SBSS u8 print_warings[4];
/* 80450BB0-80450BB4 0004 .sbss      print_systems                                                */
SECTION_SBSS u8 print_systems[4];
/* 80450BB4-80450BB8 0004 .sbss      merged_80450BB4                                              */
SECTION_SBSS u8 merged_80450BB4[4];
/* 80450BB4 0001 data_80450BB4 */
/* 80450BB5 0003 data_80450BB5 */
}


/* ###################################################################################### */
/*                                         .text                                          */
/* ###################################################################################### */

/* 80006798-800067C8 0030 .text      OSSwitchFiberEx__FUlUlUlUlUlUl                               */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void OSSwitchFiberEx(u32, u32, u32, u32, u32, u32) {
	nofralloc
#include "asm/m_Do/m_Do_printf/OSSwitchFiberEx__FUlUlUlUlUlUl.s"
}
#pragma pop

/* 800067C8-800067F4 002C .text      my_PutString__FPCc                                           */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void my_PutString(const char*) {
	nofralloc
#include "asm/m_Do/m_Do_printf/my_PutString__FPCc.s"
}
#pragma pop

/* 800067F4-80006814 0020 .text      OSVAttention__FPCcP16__va_list_struct                        */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void OSVAttention(const char*, __va_list_struct*) {
	nofralloc
#include "asm/m_Do/m_Do_printf/OSVAttention__FPCcP16__va_list_struct.s"
}
#pragma pop

/* 80006814-80006894 0080 .text      OSAttention                                                  */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
extern "C" asm void OSAttention() {
	nofralloc
#include "asm/m_Do/m_Do_printf/OSAttention.s"
}
#pragma pop

/* 80006894-800068A0 000C .text      OSReportDisable                                              */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
extern "C" asm void OSReportDisable() {
	nofralloc
#include "asm/m_Do/m_Do_printf/OSReportDisable.s"
}
#pragma pop

/* 800068A0-800068AC 000C .text      OSReportEnable                                               */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
extern "C" asm void OSReportEnable() {
	nofralloc
#include "asm/m_Do/m_Do_printf/OSReportEnable.s"
}
#pragma pop

/* 800068AC-800068B8 000C .text      OSReportForceEnableOn                                        */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
extern "C" asm void OSReportForceEnableOn() {
	nofralloc
#include "asm/m_Do/m_Do_printf/OSReportForceEnableOn.s"
}
#pragma pop

/* 800068B8-800068C4 000C .text      OSReportForceEnableOff                                       */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
extern "C" asm void OSReportForceEnableOff() {
	nofralloc
#include "asm/m_Do/m_Do_printf/OSReportForceEnableOff.s"
}
#pragma pop

/* 800068C4-800068DC 0018 .text      OSReportInit__Fv                                             */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void OSReportInit(void) {
	nofralloc
#include "asm/m_Do/m_Do_printf/OSReportInit__Fv.s"
}
#pragma pop

/* 800068DC-80006964 0088 .text      mDoPrintf_vprintf_Interrupt__FPCcP16__va_list_struct         */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void mDoPrintf_vprintf_Interrupt(const char*, __va_list_struct*) {
	nofralloc
#include "asm/m_Do/m_Do_printf/mDoPrintf_vprintf_Interrupt__FPCcP16__va_list_struct.s"
}
#pragma pop

/* 80006964-80006984 0020 .text      mDoPrintf_vprintf_Thread__FPCcP16__va_list_struct            */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void mDoPrintf_vprintf_Thread(const char*, __va_list_struct*) {
	nofralloc
#include "asm/m_Do/m_Do_printf/mDoPrintf_vprintf_Thread__FPCcP16__va_list_struct.s"
}
#pragma pop

/* 80006984-80006A10 008C .text      mDoPrintf_vprintf__FPCcP16__va_list_struct                   */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void mDoPrintf_vprintf(const char*, __va_list_struct*) {
	nofralloc
#include "asm/m_Do/m_Do_printf/mDoPrintf_vprintf__FPCcP16__va_list_struct.s"
}
#pragma pop

/* 80006A10-80006A9C 008C .text      mDoPrintf_VReport                                            */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
extern "C" asm void mDoPrintf_VReport() {
	nofralloc
#include "asm/m_Do/m_Do_printf/mDoPrintf_VReport.s"
}
#pragma pop

/* 80006A9C-80006ABC 0020 .text      OSVReport                                                    */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
extern "C" asm void OSVReport() {
	nofralloc
#include "asm/m_Do/m_Do_printf/OSVReport.s"
}
#pragma pop

/* 80006ABC-80006B3C 0080 .text      OSReport                                                     */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
extern "C" asm void OSReport() {
	nofralloc
#include "asm/m_Do/m_Do_printf/OSReport.s"
}
#pragma pop

/* 80006B3C-80006C0C 00D0 .text      OSReport_FatalError                                          */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
extern "C" asm void OSReport_FatalError() {
	nofralloc
#include "asm/m_Do/m_Do_printf/OSReport_FatalError.s"
}
#pragma pop

/* 80006C0C-80006CEC 00E0 .text      OSReport_Error                                               */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
extern "C" asm void OSReport_Error() {
	nofralloc
#include "asm/m_Do/m_Do_printf/OSReport_Error.s"
}
#pragma pop

/* 80006CEC-80006DCC 00E0 .text      OSReport_Warning                                             */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
extern "C" asm void OSReport_Warning() {
	nofralloc
#include "asm/m_Do/m_Do_printf/OSReport_Warning.s"
}
#pragma pop

/* 80006DCC-80006E7C 00B0 .text      OSReport_System                                              */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
extern "C" asm void OSReport_System() {
	nofralloc
#include "asm/m_Do/m_Do_printf/OSReport_System.s"
}
#pragma pop

/* 80006E7C-80006FB4 0138 .text      OSPanic                                                      */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
extern "C" asm void OSPanic() {
	nofralloc
#include "asm/m_Do/m_Do_printf/OSPanic.s"
}
#pragma pop


