// 
// Generated By: dol2asm
// Translation Unit: m_Do/m_Do_printf
// 

#include "dolphin/types.h"

// 
// Forward References:
// 

void OSSwitchFiberEx(u32, u32, u32, u32, u32, u32); // 2
void my_PutString(char const*); // 2
extern "C" void OSVAttention__FPCcP16__va_list_struct(); // 1
extern "C" void OSAttention(); // 1
extern "C" void OSReportDisable(); // 1
extern "C" void OSReportEnable(); // 1
extern "C" void OSReportForceEnableOn(); // 1
extern "C" void OSReportForceEnableOff(); // 1
void OSReportInit(); // 2
extern "C" void mDoPrintf_vprintf_Interrupt__FPCcP16__va_list_struct(); // 1
extern "C" void mDoPrintf_vprintf_Thread__FPCcP16__va_list_struct(); // 1
extern "C" void mDoPrintf_vprintf__FPCcP16__va_list_struct(); // 1
extern "C" void mDoPrintf_VReport(); // 1
extern "C" void OSVReport(); // 1
extern "C" void OSReport(); // 1
extern "C" void OSReport_FatalError(); // 1
extern "C" void OSReport_Error(); // 1
extern "C" void OSReport_Warning(); // 1
extern "C" void OSReport_System(); // 1
extern "C" void OSPanic(); // 1

extern "C" void OSSwitchFiberEx__FUlUlUlUlUlUl(); // 1
extern "C" void my_PutString__FPCc(); // 1
extern "C" void OSVAttention__FPCcP16__va_list_struct(); // 1
extern "C" void OSAttention(); // 1
extern "C" void OSReportDisable(); // 1
extern "C" void OSReportEnable(); // 1
extern "C" void OSReportForceEnableOn(); // 1
extern "C" void OSReportForceEnableOff(); // 1
extern "C" void OSReportInit__Fv(); // 1
extern "C" void mDoPrintf_vprintf_Interrupt__FPCcP16__va_list_struct(); // 1
extern "C" void mDoPrintf_vprintf_Thread__FPCcP16__va_list_struct(); // 1
extern "C" void mDoPrintf_vprintf__FPCcP16__va_list_struct(); // 1
extern "C" void mDoPrintf_VReport(); // 1
extern "C" void OSVReport(); // 1
extern "C" void OSReport(); // 1
extern "C" void OSReport_FatalError(); // 1
extern "C" void OSReport_Error(); // 1
extern "C" void OSReport_Warning(); // 1
extern "C" void OSReport_System(); // 1
extern "C" void OSPanic(); // 1
SECTION_RODATA extern const char* const m_Do_m_Do_printf__stringBase0;
SECTION_BSS extern u8 mDoPrintf_FiberStack[2048];
SECTION_SBSS extern u8 __OSReport_MonopolyThread[4];
SECTION_SBSS extern u8 print_counts[4];
SECTION_SBSS extern u8 print_errors[4];
SECTION_SBSS extern u8 print_warings[4];
SECTION_SBSS extern u8 print_systems[4];
extern u8 struct_80450BB4[4];

// 
// External References:
// 

void mDoExt_GetCurrentRunningThread(); // 2
extern "C" void PPCHalt(); // 1
extern "C" void OSGetStackPointer(); // 1
extern "C" void OSDisableInterrupts(); // 1
extern "C" void OSRestoreInterrupts(); // 1
extern "C" void _savegpr_29(); // 1
extern "C" void _restgpr_29(); // 1
extern "C" void fputs(); // 1
extern "C" void fflush(); // 1
extern "C" void vprintf(); // 1

extern "C" void mDoExt_GetCurrentRunningThread__Fv(); // 1
extern "C" void PPCHalt(); // 1
extern "C" void OSGetStackPointer(); // 1
extern "C" void OSDisableInterrupts(); // 1
extern "C" void OSRestoreInterrupts(); // 1
extern "C" void _savegpr_29(); // 1
extern "C" void _restgpr_29(); // 1
extern "C" void fputs(); // 1
extern "C" void fflush(); // 1
extern "C" void vprintf(); // 1
SECTION_DATA extern void* __files[80];
SECTION_SBSS extern u8 data_80450B9C[4];

// 
// Declarations:
// 

/* 80006798-800067C8 0030+00 rc=0 efc=0 .text      OSSwitchFiberEx__FUlUlUlUlUlUl                               */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void OSSwitchFiberEx(u32 field_0, u32 field_1, u32 field_2, u32 field_3, u32 field_4, u32 field_5) {
	nofralloc
#include "asm/m_Do/m_Do_printf/OSSwitchFiberEx__FUlUlUlUlUlUl.s"
}
#pragma pop


/* 800067C8-800067F4 002C+00 rc=0 efc=0 .text      my_PutString__FPCc                                           */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void my_PutString(char const* field_0) {
	nofralloc
#include "asm/m_Do/m_Do_printf/my_PutString__FPCc.s"
}
#pragma pop


/* 800067F4-80006814 0020+00 rc=0 efc=0 .text      OSVAttention__FPCcP16__va_list_struct                        */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
extern "C" asm void OSVAttention__FPCcP16__va_list_struct() {
	nofralloc
#include "asm/m_Do/m_Do_printf/OSVAttention__FPCcP16__va_list_struct.s"
}
#pragma pop


/* 80006814-80006894 0080+00 rc=0 efc=0 .text      OSAttention                                                  */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
extern "C" asm void OSAttention() {
	nofralloc
#include "asm/m_Do/m_Do_printf/OSAttention.s"
}
#pragma pop


/* 80006894-800068A0 000C+00 rc=0 efc=0 .text      OSReportDisable                                              */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
extern "C" asm void OSReportDisable() {
	nofralloc
#include "asm/m_Do/m_Do_printf/OSReportDisable.s"
}
#pragma pop


/* 800068A0-800068AC 000C+00 rc=0 efc=0 .text      OSReportEnable                                               */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
extern "C" asm void OSReportEnable() {
	nofralloc
#include "asm/m_Do/m_Do_printf/OSReportEnable.s"
}
#pragma pop


/* 800068AC-800068B8 000C+00 rc=0 efc=0 .text      OSReportForceEnableOn                                        */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
extern "C" asm void OSReportForceEnableOn() {
	nofralloc
#include "asm/m_Do/m_Do_printf/OSReportForceEnableOn.s"
}
#pragma pop


/* 800068B8-800068C4 000C+00 rc=0 efc=0 .text      OSReportForceEnableOff                                       */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
extern "C" asm void OSReportForceEnableOff() {
	nofralloc
#include "asm/m_Do/m_Do_printf/OSReportForceEnableOff.s"
}
#pragma pop


/* 800068C4-800068DC 0018+00 rc=0 efc=0 .text      OSReportInit__Fv                                             */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void OSReportInit() {
	nofralloc
#include "asm/m_Do/m_Do_printf/OSReportInit__Fv.s"
}
#pragma pop


/* ############################################################################################## */
/* 803DB740-803DBF40 0800+00 rc=0 efc=0 .bss       mDoPrintf_FiberStack                                         */
u8 mDoPrintf_FiberStack[2048];

/* 800068DC-80006964 0088+00 rc=0 efc=0 .text      mDoPrintf_vprintf_Interrupt__FPCcP16__va_list_struct         */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
extern "C" asm void mDoPrintf_vprintf_Interrupt__FPCcP16__va_list_struct() {
	nofralloc
#include "asm/m_Do/m_Do_printf/mDoPrintf_vprintf_Interrupt__FPCcP16__va_list_struct.s"
}
#pragma pop


/* 80006964-80006984 0020+00 rc=0 efc=0 .text      mDoPrintf_vprintf_Thread__FPCcP16__va_list_struct            */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
extern "C" asm void mDoPrintf_vprintf_Thread__FPCcP16__va_list_struct() {
	nofralloc
#include "asm/m_Do/m_Do_printf/mDoPrintf_vprintf_Thread__FPCcP16__va_list_struct.s"
}
#pragma pop


/* 80006984-80006A10 008C+00 rc=0 efc=0 .text      mDoPrintf_vprintf__FPCcP16__va_list_struct                   */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
extern "C" asm void mDoPrintf_vprintf__FPCcP16__va_list_struct() {
	nofralloc
#include "asm/m_Do/m_Do_printf/mDoPrintf_vprintf__FPCcP16__va_list_struct.s"
}
#pragma pop


/* ############################################################################################## */
/* 80450BA0-80450BA4 0004+00 rc=0 efc=0 .sbss      __OSReport_MonopolyThread                                    */
u8 __OSReport_MonopolyThread[4];

/* 80450BA4-80450BA8 0004+00 rc=0 efc=0 .sbss      print_counts                                                 */
u8 print_counts[4];

/* 80006A10-80006A9C 008C+00 rc=0 efc=0 .text      mDoPrintf_VReport                                            */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
extern "C" asm void mDoPrintf_VReport() {
	nofralloc
#include "asm/m_Do/m_Do_printf/mDoPrintf_VReport.s"
}
#pragma pop


/* 80006A9C-80006ABC 0020+00 rc=0 efc=0 .text      OSVReport                                                    */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
extern "C" asm void OSVReport() {
	nofralloc
#include "asm/m_Do/m_Do_printf/OSVReport.s"
}
#pragma pop


/* 80006ABC-80006B3C 0080+00 rc=0 efc=0 .text      OSReport                                                     */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
extern "C" asm void OSReport() {
	nofralloc
#include "asm/m_Do/m_Do_printf/OSReport.s"
}
#pragma pop


/* ############################################################################################## */
/* 80373CB0-80373D68 00B8+00 rc=0 efc=0 .rodata    @stringBase0                                                 */
#pragma push
#pragma force_active on
#pragma section ".dead"
const char* const stringBase_80373CB0 = 
    """\x1B""[41;37m***** FATAL ERROR *****\n";
const char* const stringBase_80373CD1 = "***** FATAL ERROR *****\n""\x1B""[m";
const char* const stringBase_80373CED = """\x1B""[41;37m[ERROR]";
const char* const stringBase_80373CFD = """\x1B""[m";
const char* const stringBase_80373D01 = """\x1B""[43;30m[WARN]";
const char* const stringBase_80373D10 = " in \"%s\" on line %d.\n";
const char* const stringBase_80373D26 = 
    "\nAddress:      Back Chain    LR Save\n";
const char* const stringBase_80373D4C = "0x%08x:   0x%08x    0x%08x\n";
#pragma pop

/* 80450BA8-80450BAC 0004+00 rc=0 efc=0 .sbss      print_errors                                                 */
u8 print_errors[4];

/* 80006B3C-80006C0C 00D0+00 rc=0 efc=0 .text      OSReport_FatalError                                          */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
extern "C" asm void OSReport_FatalError() {
	nofralloc
#include "asm/m_Do/m_Do_printf/OSReport_FatalError.s"
}
#pragma pop


/* 80006C0C-80006CEC 00E0+00 rc=0 efc=0 .text      OSReport_Error                                               */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
extern "C" asm void OSReport_Error() {
	nofralloc
#include "asm/m_Do/m_Do_printf/OSReport_Error.s"
}
#pragma pop


/* ############################################################################################## */
/* 80450BAC-80450BB0 0004+00 rc=0 efc=0 .sbss      print_warings                                                */
u8 print_warings[4];

/* 80006CEC-80006DCC 00E0+00 rc=0 efc=0 .text      OSReport_Warning                                             */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
extern "C" asm void OSReport_Warning() {
	nofralloc
#include "asm/m_Do/m_Do_printf/OSReport_Warning.s"
}
#pragma pop


/* ############################################################################################## */
/* 80450BB0-80450BB4 0004+00 rc=0 efc=0 .sbss      print_systems                                                */
u8 print_systems[4];

/* 80006DCC-80006E7C 00B0+00 rc=0 efc=0 .text      OSReport_System                                              */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
extern "C" asm void OSReport_System() {
	nofralloc
#include "asm/m_Do/m_Do_printf/OSReport_System.s"
}
#pragma pop


/* 80006E7C-80006FB4 0138+00 rc=0 efc=0 .text      OSPanic                                                      */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
extern "C" asm void OSPanic() {
	nofralloc
#include "asm/m_Do/m_Do_printf/OSPanic.s"
}
#pragma pop


/* ############################################################################################## */
/* 80450BB4-80450BB8 0004+00 rc=0 efc=0 None       None                                                         */
u8 struct_80450BB4[4];

