// 
// Generated By: dol2asm
// Translation Unit: m_Do/m_Do_ext
// 

#include "dolphin/types.h"

// 
// Types:
// 

// build J3DTransformInfo (J3DTransformInfo) False/False
/* top-level dependencies (begin J3DTransformInfo) */
/* top-level dependencies (end J3DTransformInfo) */
struct J3DTransformInfo {
};

// build mDoExt_baseAnm (mDoExt_baseAnm) False/False
/* top-level dependencies (begin mDoExt_baseAnm) */
/* top-level dependencies (end mDoExt_baseAnm) */
struct mDoExt_baseAnm {
	/* 8000D320 */ void initPlay(s16, int, f32, s16, s16);
	/* 8000D428 */ void play();
};

// build mDoExt_bpkAnm (mDoExt_bpkAnm) False/False
// build J3DMaterialTable (J3DMaterialTable) False/False
// build J3DAnmTevRegKey (J3DAnmTevRegKey) False/False
// build J3DMaterialTable (J3DMaterialTable) True/False
struct J3DMaterialTable;
/* top-level dependencies (begin J3DAnmTevRegKey) */
// outer dependency: J3DMaterialTable
/* top-level dependencies (end J3DAnmTevRegKey) */
struct J3DAnmTevRegKey {
	// J3DMaterialTable
	/* 8032B780 */ void searchUpdateMaterialID(J3DMaterialTable*);
};

// build J3DAnmTexPattern (J3DAnmTexPattern) False/False
// build J3DMaterialTable (J3DMaterialTable) True/True
/* top-level dependencies (begin J3DAnmTexPattern) */
// outer dependency: J3DMaterialTable
/* top-level dependencies (end J3DAnmTexPattern) */
struct J3DAnmTexPattern {
	// J3DMaterialTable
	/* 8032B004 */ void searchUpdateMaterialID(J3DMaterialTable*);
};

// build J3DAnmTextureSRTKey (J3DAnmTextureSRTKey) False/False
// build J3DMaterialTable (J3DMaterialTable) True/True
/* top-level dependencies (begin J3DAnmTextureSRTKey) */
// outer dependency: J3DMaterialTable
/* top-level dependencies (end J3DAnmTextureSRTKey) */
struct J3DAnmTextureSRTKey {
	// J3DMaterialTable
	/* 8032B0C0 */ void searchUpdateMaterialID(J3DMaterialTable*);
};

// build J3DAnmColor (J3DAnmColor) False/False
// build J3DMaterialTable (J3DMaterialTable) True/True
/* top-level dependencies (begin J3DAnmColor) */
// outer dependency: J3DMaterialTable
/* top-level dependencies (end J3DAnmColor) */
struct J3DAnmColor {
	// J3DMaterialTable
	/* 8032A8A4 */ void searchUpdateMaterialID(J3DMaterialTable*);
};

/* top-level dependencies (begin J3DMaterialTable) */
// outer dependency: J3DAnmTevRegKey
// outer dependency: J3DAnmTexPattern
// outer dependency: J3DAnmTextureSRTKey
// outer dependency: J3DAnmColor
/* top-level dependencies (end J3DMaterialTable) */
struct J3DMaterialTable {
	// J3DAnmTevRegKey
	// J3DAnmTexPattern
	// J3DAnmTextureSRTKey
	// J3DAnmColor
	/* 8032FAF4 */ void entryMatColorAnimator(J3DAnmColor*);
	/* 8032FBC8 */ void entryTexNoAnimator(J3DAnmTexPattern*);
	/* 8032FCC4 */ void entryTexMtxAnimator(J3DAnmTextureSRTKey*);
	/* 8032FE70 */ void entryTevRegAnimator(J3DAnmTevRegKey*);
};

// build J3DAnmColor (J3DAnmColor) True/True
/* top-level dependencies (begin mDoExt_bpkAnm) */
// outer dependency: J3DMaterialTable
// outer dependency: J3DAnmColor
/* top-level dependencies (end mDoExt_bpkAnm) */
struct mDoExt_bpkAnm {
	// J3DMaterialTable
	// J3DAnmColor
	/* 8000D47C */ void init(J3DMaterialTable*, J3DAnmColor*, int, int, f32, s16, s16);
	/* 8000D518 */ void entry(J3DMaterialTable*, f32);
};

// build J3DMaterialTable (J3DMaterialTable) True/True
// build J3DAnmColor (J3DAnmColor) True/True
// build mDoExt_btpAnm (mDoExt_btpAnm) False/False
// build J3DAnmTexPattern (J3DAnmTexPattern) True/True
// build J3DMaterialTable (J3DMaterialTable) True/True
/* top-level dependencies (begin mDoExt_btpAnm) */
// outer dependency: J3DAnmTexPattern
// outer dependency: J3DMaterialTable
/* top-level dependencies (end mDoExt_btpAnm) */
struct mDoExt_btpAnm {
	// J3DAnmTexPattern
	// J3DMaterialTable
	/* 8000D54C */ void init(J3DMaterialTable*, J3DAnmTexPattern*, int, int, f32, s16, s16);
	/* 8000D5E8 */ void entry(J3DMaterialTable*, s16);
};

// build J3DAnmTexPattern (J3DAnmTexPattern) True/True
// build mDoExt_btkAnm (mDoExt_btkAnm) False/False
// build J3DAnmTextureSRTKey (J3DAnmTextureSRTKey) True/True
// build J3DMaterialTable (J3DMaterialTable) True/True
/* top-level dependencies (begin mDoExt_btkAnm) */
// outer dependency: J3DAnmTextureSRTKey
// outer dependency: J3DMaterialTable
/* top-level dependencies (end mDoExt_btkAnm) */
struct mDoExt_btkAnm {
	// J3DAnmTextureSRTKey
	// J3DMaterialTable
	/* 8000D63C */ void init(J3DMaterialTable*, J3DAnmTextureSRTKey*, int, int, f32, s16, s16);
	/* 8000D6D8 */ void entry(J3DMaterialTable*, f32);
};

// build J3DAnmTextureSRTKey (J3DAnmTextureSRTKey) True/True
// build mDoExt_brkAnm (mDoExt_brkAnm) False/False
// build J3DAnmTevRegKey (J3DAnmTevRegKey) True/True
// build J3DMaterialTable (J3DMaterialTable) True/True
/* top-level dependencies (begin mDoExt_brkAnm) */
// outer dependency: J3DAnmTevRegKey
// outer dependency: J3DMaterialTable
/* top-level dependencies (end mDoExt_brkAnm) */
struct mDoExt_brkAnm {
	// J3DAnmTevRegKey
	// J3DMaterialTable
	/* 8000D70C */ void init(J3DMaterialTable*, J3DAnmTevRegKey*, int, int, f32, s16, s16);
	/* 8000D7A8 */ void entry(J3DMaterialTable*, f32);
};

// build J3DAnmTevRegKey (J3DAnmTevRegKey) True/True
// build mDoExt_bckAnm (mDoExt_bckAnm) False/False
// build J3DModelData (J3DModelData) False/False
/* top-level dependencies (begin J3DModelData) */
/* top-level dependencies (end J3DModelData) */
struct J3DModelData {
};

// build J3DAnmTransform (J3DAnmTransform) False/False
/* top-level dependencies (begin J3DAnmTransform) */
/* top-level dependencies (end J3DAnmTransform) */
struct J3DAnmTransform {
};

/* top-level dependencies (begin mDoExt_bckAnm) */
// outer dependency: J3DModelData
// outer dependency: J3DAnmTransform
/* top-level dependencies (end mDoExt_bckAnm) */
struct mDoExt_bckAnm {
	// J3DModelData
	// J3DAnmTransform
	/* 8000D7DC */ void init(J3DAnmTransform*, int, int, f32, s16, s16, bool);
	/* 8000D990 */ void changeBckOnly(J3DAnmTransform*);
	/* 8000D9CC */ void entry(J3DModelData*, f32);
	/* 8000D9E8 */ void entryJoint(J3DModelData*, u16, f32);
};

// build J3DAnmTransform (J3DAnmTransform) True/True
// build J3DMtxCalcAnmBase (J3DMtxCalcAnmBase) False/False
// build J3DAnmTransform (J3DAnmTransform) True/True
/* top-level dependencies (begin J3DMtxCalcAnmBase) */
// outer dependency: J3DAnmTransform
/* top-level dependencies (end J3DMtxCalcAnmBase) */
struct J3DMtxCalcAnmBase {
	// J3DAnmTransform
	/* 8000D8EC */ ~J3DMtxCalcAnmBase();
	/* 80014FB8 */ void getAnmTransform();
	/* 80014FC0 */ void setAnmTransform(J3DAnmTransform*);
};

// build J3DMtxCalc (J3DMtxCalc) False/False
// build J3DAnmTransform (J3DAnmTransform) True/True
/* top-level dependencies (begin J3DMtxCalc) */
// outer dependency: J3DAnmTransform
/* top-level dependencies (end J3DMtxCalc) */
struct J3DMtxCalc {
	// J3DAnmTransform
	/* 8000D948 */ ~J3DMtxCalc();
	/* 80014E8C */ void setAnmTransform(u8, J3DAnmTransform*);
	/* 80014E90 */ void setAnmTransform(J3DAnmTransform*);
	/* 80014E94 */ bool getAnmTransform(u8);
	/* 80014E9C */ bool getAnmTransform();
	/* 80014EA4 */ void setWeight(u8, f32);
	/* 80014EA8 */ void getWeight(u8) const;
};

// build J3DModelData (J3DModelData) True/True
// build mDoExt_blkAnm (mDoExt_blkAnm) False/False
// build J3DDeformData (J3DDeformData) False/False
// build J3DAnmCluster (J3DAnmCluster) False/False
/* top-level dependencies (begin J3DAnmCluster) */
/* top-level dependencies (end J3DAnmCluster) */
struct J3DAnmCluster {
};

/* top-level dependencies (begin J3DDeformData) */
// outer dependency: J3DAnmCluster
/* top-level dependencies (end J3DDeformData) */
struct J3DDeformData {
	// J3DAnmCluster
	/* 8032E364 */ void setAnm(J3DAnmCluster*);
};

// build J3DAnmCluster (J3DAnmCluster) True/True
/* top-level dependencies (begin mDoExt_blkAnm) */
// outer dependency: J3DDeformData
// outer dependency: J3DAnmCluster
/* top-level dependencies (end mDoExt_blkAnm) */
struct mDoExt_blkAnm {
	// J3DDeformData
	// J3DAnmCluster
	/* 8000DA08 */ void init(J3DDeformData*, J3DAnmCluster*, int, int, f32, s16, s16);
};

// build J3DDeformData (J3DDeformData) True/True
// build J3DAnmCluster (J3DAnmCluster) True/True
// build J3DModel (J3DModel) False/False
// build J3DModelData (J3DModelData) True/True
/* top-level dependencies (begin J3DModel) */
// outer dependency: J3DModelData
/* top-level dependencies (end J3DModel) */
struct J3DModel {
	// J3DModelData
	/* 80327100 */ void initialize();
	/* 80327184 */ void entryModelData(J3DModelData*, u32, u32);
	/* 803275FC */ void newDifferedDisplayList(u32);
	/* 8032767C */ void lock();
	/* 803276B4 */ void unlock();
	/* 803279A0 */ void diff();
};

// build J3DTevBlock (J3DTevBlock) False/False
// build J3DTevOrder (J3DTevOrder) False/False
/* top-level dependencies (begin J3DTevOrder) */
/* top-level dependencies (end J3DTevOrder) */
struct J3DTevOrder {
	/* 8000E140 */ J3DTevOrder();
};

// build J3DTevSwapModeTable (J3DTevSwapModeTable) False/False
/* top-level dependencies (begin J3DTevSwapModeTable) */
/* top-level dependencies (end J3DTevSwapModeTable) */
struct J3DTevSwapModeTable {
	/* 8000E134 */ J3DTevSwapModeTable();
};

// build J3DGXColorS10 (J3DGXColorS10) False/False
/* top-level dependencies (begin J3DGXColorS10) */
/* top-level dependencies (end J3DGXColorS10) */
struct J3DGXColorS10 {
	/* 8000E460 */ J3DGXColorS10();
};

// build J3DGXColor (J3DGXColor) False/False
/* top-level dependencies (begin J3DGXColor) */
/* top-level dependencies (end J3DGXColor) */
struct J3DGXColor {
	/* 8000E538 */ J3DGXColor();
};

// build J3DTevStage (J3DTevStage) False/False
// build J3DTevStageInfo (J3DTevStageInfo) False/False
/* top-level dependencies (begin J3DTevStageInfo) */
/* top-level dependencies (end J3DTevStageInfo) */
struct J3DTevStageInfo {
};

/* top-level dependencies (begin J3DTevStage) */
// outer dependency: J3DTevStageInfo
/* top-level dependencies (end J3DTevStage) */
struct J3DTevStage {
	// J3DTevStageInfo
	/* 8000E230 */ J3DTevStage();
	/* 8000E298 */ void setTevStageInfo(J3DTevStageInfo const&);
};

// build J3DIndTevStage (J3DIndTevStage) False/False
/* top-level dependencies (begin J3DIndTevStage) */
/* top-level dependencies (end J3DIndTevStage) */
struct J3DIndTevStage {
	/* 8000E14C */ J3DIndTevStage();
};

/* top-level dependencies (begin J3DTevBlock) */
// outer dependency: J3DTevOrder
// outer dependency: J3DTevSwapModeTable
// outer dependency: J3DGXColorS10
// outer dependency: J3DGXColor
// outer dependency: J3DTevStage
// outer dependency: J3DIndTevStage
/* top-level dependencies (end J3DTevBlock) */
struct J3DTevBlock {
	// J3DTevOrder
	// J3DIndTevStage
	// J3DGXColorS10
	// J3DTevSwapModeTable
	// J3DGXColor
	// J3DTevStage
	/* 8000DBC8 */ void patchTexNoAndTexCoordScale();
	/* 8000DBD4 */ void patch();
	/* 8000DF84 */ bool getIndTevStage(u32);
	/* 8000DF8C */ bool getTevStage(u32);
	/* 8000DF94 */ void getTexNo(u32) const;
	/* 8000DFA0 */ bool getTevSwapModeTable(u32);
	/* 8000DFA8 */ bool getTevKAlphaSel(u32);
	/* 8000DFB0 */ bool getTevKColorSel(u32);
	/* 8000DFB8 */ bool getTevOrder(u32);
	/* 8000DFC0 */ bool getTevKColor(u32);
	/* 8000DFC8 */ bool getTevColor(u32);
	/* 8000DFD0 */ bool getTevStageNum() const;
	/* 8000E0A4 */ void setIndTevStage(u32, J3DIndTevStage);
	/* 8000E0A8 */ void setTevStage(u32, J3DTevStage);
	/* 8000E0AC */ void setTexNo(u32, u16);
	/* 8000E0B0 */ void setTevSwapModeTable(u32, J3DTevSwapModeTable);
	/* 8000E0B4 */ void setTevKAlphaSel(u32, u8);
	/* 8000E0B8 */ void setTevKColorSel(u32, u8);
	/* 8000E0BC */ void setTevOrder(u32, J3DTevOrder);
	/* 8000E0C0 */ void setTevKColor(u32, J3DGXColor);
	/* 8000E0C4 */ void setTevColor(u32, J3DGXColorS10);
	/* 8000E0C8 */ void setTevStageNum(u8);
};

// build J3DPEBlock (J3DPEBlock) False/False
// build J3DBlend (J3DBlend) False/False
/* top-level dependencies (begin J3DBlend) */
/* top-level dependencies (end J3DBlend) */
struct J3DBlend {
};

// build J3DAlphaComp (J3DAlphaComp) False/False
/* top-level dependencies (begin J3DAlphaComp) */
/* top-level dependencies (end J3DAlphaComp) */
struct J3DAlphaComp {
};

// build J3DZMode (J3DZMode) False/False
/* top-level dependencies (begin J3DZMode) */
/* top-level dependencies (end J3DZMode) */
struct J3DZMode {
};

/* top-level dependencies (begin J3DPEBlock) */
// outer dependency: J3DBlend
// outer dependency: J3DAlphaComp
// outer dependency: J3DZMode
/* top-level dependencies (end J3DPEBlock) */
struct J3DPEBlock {
	// J3DBlend
	// J3DAlphaComp
	// J3DZMode
	/* 8000DBCC */ void patch();
	/* 8000DF3C */ bool getZCompLoc() const;
	/* 8000DF44 */ bool getZMode();
	/* 8000DF4C */ bool getBlend();
	/* 8000DF54 */ bool getAlphaComp();
	/* 8000DF5C */ bool getFog();
	/* 8000E010 */ void setZCompLoc(u8);
	/* 8000E014 */ void setZMode(J3DZMode);
	/* 8000E018 */ void setBlend(J3DBlend const&);
	/* 8000E01C */ void setAlphaComp(J3DAlphaComp const&);
};

// build J3DColorBlock (J3DColorBlock) False/False
// build J3DGXColor (J3DGXColor) True/True
// build J3DColorChan (J3DColorChan) False/False
/* top-level dependencies (begin J3DColorChan) */
/* top-level dependencies (end J3DColorChan) */
struct J3DColorChan {
	/* 8000E47C */ J3DColorChan();
};

/* top-level dependencies (begin J3DColorBlock) */
// outer dependency: J3DGXColor
// outer dependency: J3DColorChan
/* top-level dependencies (end J3DColorBlock) */
struct J3DColorBlock {
	// J3DGXColor
	// J3DColorChan
	/* 8000DBD0 */ void patchLight();
	/* 8000DFF0 */ bool getAmbColor(u32);
	/* 8000DFF8 */ bool getColorChan(u32);
	/* 8000E000 */ bool getMatColor(u32);
	/* 8000E008 */ bool getColorChanNum() const;
	/* 8000E0D4 */ void setAmbColor(u32, J3DGXColor);
	/* 8000E0D8 */ void setColorChan(u32, J3DColorChan const&);
	/* 8000E0DC */ void setMatColor(u32, J3DGXColor);
	/* 8000E0E0 */ void setColorChanNum(u8);
};

// build J3DIndBlock (J3DIndBlock) False/False
// build J3DIndTexCoordScale (J3DIndTexCoordScale) False/False
/* top-level dependencies (begin J3DIndTexCoordScale) */
/* top-level dependencies (end J3DIndTexCoordScale) */
struct J3DIndTexCoordScale {
	/* 8000E024 */ ~J3DIndTexCoordScale();
	/* 8000E0E4 */ J3DIndTexCoordScale();
};

// build J3DIndTexMtx (J3DIndTexMtx) False/False
/* top-level dependencies (begin J3DIndTexMtx) */
/* top-level dependencies (end J3DIndTexMtx) */
struct J3DIndTexMtx {
	/* 8000E064 */ ~J3DIndTexMtx();
	/* 8000E0F0 */ J3DIndTexMtx();
};

/* top-level dependencies (begin J3DIndBlock) */
// outer dependency: J3DIndTexCoordScale
// outer dependency: J3DIndTexMtx
/* top-level dependencies (end J3DIndBlock) */
struct J3DIndBlock {
	// J3DIndTexCoordScale
	// J3DIndTexMtx
	/* 8000DF64 */ bool getIndTexCoordScale(u32);
	/* 8000DF6C */ bool getIndTexMtx(u32);
	/* 8000DF74 */ bool getIndTexOrder(u32);
	/* 8000DF7C */ bool getIndTexStageNum() const;
	/* 8000E020 */ void setIndTexCoordScale(u32, J3DIndTexCoordScale);
	/* 8000E060 */ void setIndTexMtx(u32, J3DIndTexMtx);
	/* 8000E0A0 */ void setIndTexStageNum(u8);
};

// build J3DTexGenBlock (J3DTexGenBlock) False/False
// build J3DTexCoord (J3DTexCoord) False/False
/* top-level dependencies (begin J3DTexCoord) */
/* top-level dependencies (end J3DTexCoord) */
struct J3DTexCoord {
	/* 8000E464 */ J3DTexCoord();
};

/* top-level dependencies (begin J3DTexGenBlock) */
// outer dependency: J3DTexCoord
/* top-level dependencies (end J3DTexGenBlock) */
struct J3DTexGenBlock {
	// J3DTexCoord
	/* 8000DFD8 */ bool getTexMtx(u32);
	/* 8000DFE0 */ bool getTexCoord(u32);
	/* 8000DFE8 */ bool getTexGenNum() const;
	/* 8000E0CC */ void setTexCoord(u32, J3DTexCoord const*);
	/* 8000E0D0 */ void setTexGenNum(u32);
};

// build J3DZMode (J3DZMode) True/True
// build J3DBlend (J3DBlend) True/True
// build J3DAlphaComp (J3DAlphaComp) True/True
// build J3DIndTexCoordScale (J3DIndTexCoordScale) True/True
// build J3DIndTexMtx (J3DIndTexMtx) True/True
// build J3DIndTevStage (J3DIndTevStage) True/True
// build J3DTevStage (J3DTevStage) True/True
// build J3DTevSwapModeTable (J3DTevSwapModeTable) True/True
// build J3DTevOrder (J3DTevOrder) True/True
// build J3DGXColor (J3DGXColor) True/True
// build J3DGXColorS10 (J3DGXColorS10) True/True
// build J3DTexCoord (J3DTexCoord) True/True
// build J3DColorChan (J3DColorChan) True/True
// build J3DIndTexOrder (J3DIndTexOrder) False/False
/* top-level dependencies (begin J3DIndTexOrder) */
/* top-level dependencies (end J3DIndTexOrder) */
struct J3DIndTexOrder {
	/* 8000E128 */ J3DIndTexOrder();
};

// build J3DTevStageInfo (J3DTevStageInfo) True/True
// build mDoExt_invisibleModel (mDoExt_invisibleModel) False/False
// build cXyz (cXyz) False/False
// build Vec (Vec) False/False
/* top-level dependencies (begin Vec) */
/* top-level dependencies (end Vec) */
struct Vec {
};

/* top-level dependencies (begin cXyz) */
// outer dependency: Vec
/* top-level dependencies (end cXyz) */
struct cXyz {
	// Vec
	/* 80009184 */ ~cXyz();
	/* 800125DC */ cXyz();
	/* 80266AE4 */ void operator+(Vec const&) const;
	/* 80266B34 */ void operator-(Vec const&) const;
	/* 80266B84 */ void operator*(f32) const;
	/* 80266CBC */ void outprod(Vec const&) const;
	/* 80266F48 */ void normalizeZP();
};

// build J3DModel (J3DModel) True/True
/* top-level dependencies (begin mDoExt_invisibleModel) */
// outer dependency: cXyz
// outer dependency: J3DModel
/* top-level dependencies (end mDoExt_invisibleModel) */
struct mDoExt_invisibleModel {
	// cXyz
	// J3DModel
	/* 8000E53C */ void create(J3DModel*, u8);
	/* 8000E6C8 */ void entryJoint(cXyz*);
	/* 8000E7C0 */ void entryDL(cXyz*);
};

// build mDoExt_invJntPacket (mDoExt_invJntPacket) False/False
/* top-level dependencies (begin mDoExt_invJntPacket) */
/* top-level dependencies (end mDoExt_invJntPacket) */
struct mDoExt_invJntPacket {
	/* 8000E5F8 */ ~mDoExt_invJntPacket();
	/* 8000E654 */ mDoExt_invJntPacket();
	/* 80012220 */ void draw();
};

// build J3DPacket (J3DPacket) False/False
// build J3DDrawBuffer (J3DDrawBuffer) False/False
// build J3DPacket (J3DPacket) True/False
struct J3DPacket;
/* top-level dependencies (begin J3DDrawBuffer) */
// outer dependency: J3DPacket
/* top-level dependencies (end J3DDrawBuffer) */
struct J3DDrawBuffer {
	// J3DPacket
	/* 8032548C */ void entryImm(J3DPacket*, u16);
};

/* top-level dependencies (begin J3DPacket) */
// outer dependency: J3DDrawBuffer
/* top-level dependencies (end J3DPacket) */
struct J3DPacket {
	// J3DDrawBuffer
	/* 8000E680 */ ~J3DPacket();
	/* 80312750 */ bool entry(J3DDrawBuffer*);
};

// build cXyz (cXyz) True/True
// build JKRHeap (JKRHeap) False/False
/* top-level dependencies (begin JKRHeap) */
/* top-level dependencies (end JKRHeap) */
struct JKRHeap {
	/* 802CE438 */ void becomeCurrentHeap();
	/* 802CE448 */ void destroy();
	/* 802CE500 */ void free(void*, JKRHeap*);
	/* 802CEB78 */ void setErrorFlag(bool);
};

// build JKRSolidHeap (JKRSolidHeap) False/False
// build JKRHeap (JKRHeap) True/True
/* top-level dependencies (begin JKRSolidHeap) */
// outer dependency: JKRHeap
/* top-level dependencies (end JKRSolidHeap) */
struct JKRSolidHeap {
	// JKRHeap
	/* 802D0A24 */ void create(u32, JKRHeap*, bool);
	/* 802D0BF4 */ void adjustSize();
};

// build JKRExpHeap (JKRExpHeap) False/False
// build JKRHeap (JKRHeap) True/True
/* top-level dependencies (begin JKRExpHeap) */
// outer dependency: JKRHeap
/* top-level dependencies (end JKRExpHeap) */
struct JKRExpHeap {
	// JKRHeap
	/* 802CEE2C */ void create(u32, JKRHeap*, bool);
};

// build JKRArchive (JKRArchive) False/False
/* top-level dependencies (begin JKRArchive) */
/* top-level dependencies (end JKRArchive) */
struct JKRArchive {
	/* 802D5B38 */ void getGlbResource(u32, char const*, JKRArchive*);
	/* 802D6770 */ void findIdResource(u16) const;
};

// build mDoExt_MtxCalcAnmBlendTbl (mDoExt_MtxCalcAnmBlendTbl) False/False
/* top-level dependencies (begin mDoExt_MtxCalcAnmBlendTbl) */
/* top-level dependencies (end mDoExt_MtxCalcAnmBlendTbl) */
struct mDoExt_MtxCalcAnmBlendTbl {
	/* 8000F26C */ void calc();
	/* 80014F3C */ ~mDoExt_MtxCalcAnmBlendTbl();
};

// build mDoExt_MtxCalcAnmBlendTblOld (mDoExt_MtxCalcAnmBlendTblOld) False/False
/* top-level dependencies (begin mDoExt_MtxCalcAnmBlendTblOld) */
/* top-level dependencies (end mDoExt_MtxCalcAnmBlendTblOld) */
struct mDoExt_MtxCalcAnmBlendTblOld {
	/* 8000F4B0 */ void calc();
	/* 80014EB0 */ ~mDoExt_MtxCalcAnmBlendTblOld();
};

// build mDoExt_MtxCalcOldFrame (mDoExt_MtxCalcOldFrame) False/False
/* top-level dependencies (begin mDoExt_MtxCalcOldFrame) */
/* top-level dependencies (end mDoExt_MtxCalcOldFrame) */
struct mDoExt_MtxCalcOldFrame {
	/* 8000F848 */ void initOldFrameMorf(f32, u16, u16);
	/* 8000F8CC */ void decOldFrameMorfCounter();
};

// build mDoExt_morf_c (mDoExt_morf_c) False/False
/* top-level dependencies (begin mDoExt_morf_c) */
/* top-level dependencies (end mDoExt_morf_c) */
struct mDoExt_morf_c {
	/* 8000F950 */ mDoExt_morf_c();
	/* 8000FAE8 */ ~mDoExt_morf_c();
	/* 8000FB7C */ void setMorf(f32);
	/* 8000FBC0 */ void frameUpdate();
};

// build J3DFrameCtrl (J3DFrameCtrl) False/False
/* top-level dependencies (begin J3DFrameCtrl) */
/* top-level dependencies (end J3DFrameCtrl) */
struct J3DFrameCtrl {
	/* 8000F9D8 */ ~J3DFrameCtrl();
	/* 803283FC */ void init(s16);
	/* 803289CC */ void update();
};

// build J3DMtxCalcNoAnmBase (J3DMtxCalcNoAnmBase) False/False
/* top-level dependencies (begin J3DMtxCalcNoAnmBase) */
/* top-level dependencies (end J3DMtxCalcNoAnmBase) */
struct J3DMtxCalcNoAnmBase {
	/* 8000FA8C */ ~J3DMtxCalcNoAnmBase();
};

// build mDoExt_McaMorf (mDoExt_McaMorf) False/False
// build J3DModelData (J3DModelData) True/True
// build mDoExt_McaMorfCallBack1_c (mDoExt_McaMorfCallBack1_c) False/False
/* top-level dependencies (begin mDoExt_McaMorfCallBack1_c) */
/* top-level dependencies (end mDoExt_McaMorfCallBack1_c) */
struct mDoExt_McaMorfCallBack1_c {
};

// build J3DTransformInfo (J3DTransformInfo) True/True
// build Vec (Vec) True/True
// build mDoExt_McaMorfCallBack2_c (mDoExt_McaMorfCallBack2_c) False/False
/* top-level dependencies (begin mDoExt_McaMorfCallBack2_c) */
/* top-level dependencies (end mDoExt_McaMorfCallBack2_c) */
struct mDoExt_McaMorfCallBack2_c {
};

// build J3DAnmTransform (J3DAnmTransform) True/True
/* top-level dependencies (begin mDoExt_McaMorf) */
// outer dependency: J3DModelData
// outer dependency: mDoExt_McaMorfCallBack1_c
// outer dependency: J3DTransformInfo
// outer dependency: Vec
// outer dependency: mDoExt_McaMorfCallBack2_c
// outer dependency: J3DAnmTransform
/* top-level dependencies (end mDoExt_McaMorf) */
struct mDoExt_McaMorf {
	// J3DModelData
	// J3DTransformInfo
	// mDoExt_McaMorfCallBack2_c
	// mDoExt_McaMorfCallBack1_c
	// Vec
	// J3DAnmTransform
	/* 8000FC4C */ mDoExt_McaMorf(J3DModelData*, mDoExt_McaMorfCallBack1_c*, mDoExt_McaMorfCallBack2_c*, J3DAnmTransform*, int, f32, int, int, int, void*, u32, u32);
	/* 8000FD10 */ ~mDoExt_McaMorf();
	/* 8000FD94 */ void create(J3DModelData*, mDoExt_McaMorfCallBack1_c*, mDoExt_McaMorfCallBack2_c*, J3DAnmTransform*, int, f32, int, int, int, void*, u32, u32);
	/* 80010074 */ void calc();
	/* 8001037C */ void setAnm(J3DAnmTransform*, int, f32, f32, f32, f32, void*);
	/* 800105C8 */ void play(Vec*, u32, s8);
	/* 80010680 */ void entryDL();
	/* 800106AC */ void modelCalc();
	/* 80010710 */ void getTransform(u16, J3DTransformInfo*);
};

// build mDoExt_McaMorfCallBack1_c (mDoExt_McaMorfCallBack1_c) True/True
// build mDoExt_McaMorfCallBack2_c (mDoExt_McaMorfCallBack2_c) True/True
// build Vec (Vec) True/True
// build mDoExt_McaMorfSO (mDoExt_McaMorfSO) False/False
// build J3DModelData (J3DModelData) True/True
// build mDoExt_McaMorfCallBack1_c (mDoExt_McaMorfCallBack1_c) True/True
// build J3DTransformInfo (J3DTransformInfo) True/True
// build Z2Creature (Z2Creature) False/False
/* top-level dependencies (begin Z2Creature) */
/* top-level dependencies (end Z2Creature) */
struct Z2Creature {
	/* 802C0628 */ void initAnime(void*, bool, f32, f32);
	/* 802C06D0 */ void updateAnime(f32, f32);
};

// build mDoExt_McaMorfCallBack2_c (mDoExt_McaMorfCallBack2_c) True/True
// build J3DAnmTransform (J3DAnmTransform) True/True
/* top-level dependencies (begin mDoExt_McaMorfSO) */
// outer dependency: J3DModelData
// outer dependency: mDoExt_McaMorfCallBack1_c
// outer dependency: J3DTransformInfo
// outer dependency: Z2Creature
// outer dependency: mDoExt_McaMorfCallBack2_c
// outer dependency: J3DAnmTransform
/* top-level dependencies (end mDoExt_McaMorfSO) */
struct mDoExt_McaMorfSO {
	// J3DModelData
	// J3DTransformInfo
	// mDoExt_McaMorfCallBack2_c
	// mDoExt_McaMorfCallBack1_c
	// Z2Creature
	// J3DAnmTransform
	/* 800107D0 */ mDoExt_McaMorfSO(J3DModelData*, mDoExt_McaMorfCallBack1_c*, mDoExt_McaMorfCallBack2_c*, J3DAnmTransform*, int, f32, int, int, Z2Creature*, u32, u32);
	/* 80010888 */ ~mDoExt_McaMorfSO();
	/* 800108F0 */ void create(J3DModelData*, mDoExt_McaMorfCallBack1_c*, mDoExt_McaMorfCallBack2_c*, J3DAnmTransform*, int, f32, int, int, Z2Creature*, u32, u32);
	/* 80010B68 */ void calc();
	/* 80010E70 */ void setAnm(J3DAnmTransform*, int, f32, f32, f32, f32);
	/* 800110B0 */ void play(u32, s8);
	/* 80011154 */ void updateDL();
	/* 800111C0 */ void entryDL();
	/* 800111EC */ void modelCalc();
	/* 80011250 */ void getTransform(u16, J3DTransformInfo*);
	/* 80011310 */ void stopZelAnime();
};

// build Z2Creature (Z2Creature) True/True
// build mDoExt_McaMorf2 (mDoExt_McaMorf2) False/False
// build J3DModelData (J3DModelData) True/True
// build mDoExt_McaMorfCallBack1_c (mDoExt_McaMorfCallBack1_c) True/True
// build Z2Creature (Z2Creature) True/True
// build mDoExt_McaMorfCallBack2_c (mDoExt_McaMorfCallBack2_c) True/True
// build J3DAnmTransform (J3DAnmTransform) True/True
/* top-level dependencies (begin mDoExt_McaMorf2) */
// outer dependency: J3DModelData
// outer dependency: mDoExt_McaMorfCallBack1_c
// outer dependency: Z2Creature
// outer dependency: mDoExt_McaMorfCallBack2_c
// outer dependency: J3DAnmTransform
/* top-level dependencies (end mDoExt_McaMorf2) */
struct mDoExt_McaMorf2 {
	// J3DModelData
	// mDoExt_McaMorfCallBack2_c
	// mDoExt_McaMorfCallBack1_c
	// Z2Creature
	// J3DAnmTransform
	/* 80011348 */ mDoExt_McaMorf2(J3DModelData*, mDoExt_McaMorfCallBack1_c*, mDoExt_McaMorfCallBack2_c*, J3DAnmTransform*, J3DAnmTransform*, int, f32, int, int, Z2Creature*, u32, u32);
	/* 800113FC */ ~mDoExt_McaMorf2();
	/* 80011464 */ void create(J3DModelData*, mDoExt_McaMorfCallBack1_c*, mDoExt_McaMorfCallBack2_c*, J3DAnmTransform*, J3DAnmTransform*, int, f32, int, int, Z2Creature*, u32, u32);
	/* 800116B4 */ void ERROR_EXIT();
	/* 800116F4 */ void calc();
	/* 80011D70 */ void setAnm(J3DAnmTransform*, J3DAnmTransform*, f32, int, f32, f32, f32, f32);
	/* 80011FCC */ void setAnmRate(f32);
	/* 800120A0 */ void play(u32, s8);
	/* 80012144 */ void entryDL();
	/* 80012170 */ void modelCalc();
	/* 800121E8 */ void stopZelAnime();
};

// build mDoExt_3Dline_c (mDoExt_3Dline_c) False/False
/* top-level dependencies (begin mDoExt_3Dline_c) */
/* top-level dependencies (end mDoExt_3Dline_c) */
struct mDoExt_3Dline_c {
	/* 800123D0 */ void init(u16, int, int);
	/* 800126BC */ mDoExt_3Dline_c();
};

// build mDoExt_3DlineMat0_c (mDoExt_3DlineMat0_c) False/False
// build dKy_tevstr_c (dKy_tevstr_c) False/False
/* top-level dependencies (begin dKy_tevstr_c) */
/* top-level dependencies (end dKy_tevstr_c) */
struct dKy_tevstr_c {
};

// build _GXColor (_GXColor) False/False
/* top-level dependencies (begin _GXColor) */
/* top-level dependencies (end _GXColor) */
struct _GXColor {
};

/* top-level dependencies (begin mDoExt_3DlineMat0_c) */
// outer dependency: dKy_tevstr_c
// outer dependency: _GXColor
/* top-level dependencies (end mDoExt_3DlineMat0_c) */
struct mDoExt_3DlineMat0_c {
	// dKy_tevstr_c
	// _GXColor
	/* 800125E0 */ void init(u16, u16, int);
	/* 800126C0 */ void setMaterial();
	/* 80012774 */ void draw();
	/* 80012874 */ void update(int, f32, _GXColor&, u16, dKy_tevstr_c*);
	/* 80012E3C */ void update(int, _GXColor&, dKy_tevstr_c*);
	/* 80014E84 */ bool getMaterialID();
};

// build _GXColor (_GXColor) True/True
// build dKy_tevstr_c (dKy_tevstr_c) True/True
// build mDoExt_3DlineMat1_c (mDoExt_3DlineMat1_c) False/False
// build dKy_tevstr_c (dKy_tevstr_c) True/True
// build _GXColor (_GXColor) True/True
// build ResTIMG (ResTIMG) False/False
/* top-level dependencies (begin ResTIMG) */
/* top-level dependencies (end ResTIMG) */
struct ResTIMG {
};

/* top-level dependencies (begin mDoExt_3DlineMat1_c) */
// outer dependency: dKy_tevstr_c
// outer dependency: _GXColor
// outer dependency: ResTIMG
/* top-level dependencies (end mDoExt_3DlineMat1_c) */
struct mDoExt_3DlineMat1_c {
	// dKy_tevstr_c
	// _GXColor
	// ResTIMG
	/* 80013360 */ void init(u16, u16, ResTIMG*, int);
	/* 800134F8 */ void setMaterial();
	/* 800135D0 */ void draw();
	/* 8001373C */ void update(int, f32, _GXColor&, u16, dKy_tevstr_c*);
	/* 80013FB0 */ void update(int, _GXColor&, dKy_tevstr_c*);
	/* 80014E7C */ bool getMaterialID();
};

// build ResTIMG (ResTIMG) True/True
// build mDoExt_3DlineMatSortPacket (mDoExt_3DlineMatSortPacket) False/False
// build mDoExt_3DlineMat_c (mDoExt_3DlineMat_c) False/False
/* top-level dependencies (begin mDoExt_3DlineMat_c) */
/* top-level dependencies (end mDoExt_3DlineMat_c) */
struct mDoExt_3DlineMat_c {
};

/* top-level dependencies (begin mDoExt_3DlineMatSortPacket) */
// outer dependency: mDoExt_3DlineMat_c
/* top-level dependencies (end mDoExt_3DlineMatSortPacket) */
struct mDoExt_3DlineMatSortPacket {
	// mDoExt_3DlineMat_c
	/* 80014738 */ void setMat(mDoExt_3DlineMat_c*);
	/* 8001479C */ void draw();
	/* 80014E20 */ ~mDoExt_3DlineMatSortPacket();
};

// build mDoExt_3DlineMat_c (mDoExt_3DlineMat_c) True/True
// build JUTFont (JUTFont) False/False
// build JUtility (JUtility) False/False
/* top-level dependencies (begin JUtility) */
/* top-level dependencies (end JUtility) */
struct JUtility {
	// build TColor (JUtility::TColor) False/False
	/* dependencies (begin JUtility::TColor) */
	/* dependencies (end JUtility::TColor) */
	struct TColor {
	};

};

/* top-level dependencies (begin JUTFont) */
// outer dependency: JUtility::TColor
/* top-level dependencies (end JUTFont) */
struct JUTFont {
	// JUtility::TColor
	/* 8001494C */ ~JUTFont();
	/* 80014D9C */ void setGX(JUtility::TColor, JUtility::TColor);
	/* 80014DC8 */ void getCellWidth() const;
	/* 80014DF4 */ void getCellHeight() const;
};

// build ResFONT (ResFONT) False/False
/* top-level dependencies (begin ResFONT) */
/* top-level dependencies (end ResFONT) */
struct ResFONT {
};

// build JUtility (JUtility) True/True
// build dDlst_list_c (dDlst_list_c) False/False
// build J3DDrawBuffer (J3DDrawBuffer) True/True
// build cXyz (cXyz) True/True
// build J3DPacket (J3DPacket) True/True
/* top-level dependencies (begin dDlst_list_c) */
// outer dependency: J3DDrawBuffer
// outer dependency: cXyz
// outer dependency: J3DPacket
/* top-level dependencies (end dDlst_list_c) */
struct dDlst_list_c {
	// J3DDrawBuffer
	// cXyz
	// J3DPacket
	/* 800565EC */ void entryZSortXluDrawList(J3DDrawBuffer*, J3DPacket*, cXyz&);
};

// build J3DDrawBuffer (J3DDrawBuffer) True/True
// build Z2SoundObjBase (Z2SoundObjBase) False/False
// build Z2SoundHandlePool (Z2SoundHandlePool) False/False
/* top-level dependencies (begin Z2SoundHandlePool) */
/* top-level dependencies (end Z2SoundHandlePool) */
struct Z2SoundHandlePool {
};

// build JAISoundID (JAISoundID) False/False
/* top-level dependencies (begin JAISoundID) */
/* top-level dependencies (end JAISoundID) */
struct JAISoundID {
};

/* top-level dependencies (begin Z2SoundObjBase) */
// outer dependency: Z2SoundHandlePool
// outer dependency: JAISoundID
/* top-level dependencies (end Z2SoundObjBase) */
struct Z2SoundObjBase {
	// Z2SoundHandlePool
	// JAISoundID
	/* 802BE038 */ void framework(u32, s8);
	/* 802BE070 */ void dispose();
	/* 802BE104 */ void stopOK(Z2SoundHandlePool&);
	/* 802BE144 */ void startSound(JAISoundID, u32, s8);
	/* 802BE2D4 */ void startLevelSound(JAISoundID, u32, s8);
};

// build Z2SoundHandlePool (Z2SoundHandlePool) True/True
// build JAISoundID (JAISoundID) True/True
// build Z2SoundObjAnime (Z2SoundObjAnime) False/False
// build Vec (Vec) True/True
/* top-level dependencies (begin Z2SoundObjAnime) */
// outer dependency: Vec
/* top-level dependencies (end Z2SoundObjAnime) */
struct Z2SoundObjAnime {
	// Vec
	/* 802BEB94 */ Z2SoundObjAnime();
	/* 802BEBDC */ void init(Vec*, u8);
	/* 802BEBFC */ void initAnime(void*, bool, f32, f32);
	/* 802BEED4 */ void updateAnime(f32, f32);
};

// build _GXBlendMode (_GXBlendMode) False/False
/* top-level dependencies (begin _GXBlendMode) */
/* top-level dependencies (end _GXBlendMode) */
struct _GXBlendMode {
};

// build _GXBlendFactor (_GXBlendFactor) False/False
/* top-level dependencies (begin _GXBlendFactor) */
/* top-level dependencies (end _GXBlendFactor) */
struct _GXBlendFactor {
};

// build _GXLogicOp (_GXLogicOp) False/False
/* top-level dependencies (begin _GXLogicOp) */
/* top-level dependencies (end _GXLogicOp) */
struct _GXLogicOp {
};

// build _GXCompare (_GXCompare) False/False
/* top-level dependencies (begin _GXCompare) */
/* top-level dependencies (end _GXCompare) */
struct _GXCompare {
};

// build JKRAssertHeap (JKRAssertHeap) False/False
// build JKRHeap (JKRHeap) True/True
/* top-level dependencies (begin JKRAssertHeap) */
// outer dependency: JKRHeap
/* top-level dependencies (end JKRAssertHeap) */
struct JKRAssertHeap {
	// JKRHeap
	/* 802D1368 */ void create(JKRHeap*);
};

// build JKRFileLoader (JKRFileLoader) False/False
/* top-level dependencies (begin JKRFileLoader) */
/* top-level dependencies (end JKRFileLoader) */
struct JKRFileLoader {
	/* 802D4308 */ void removeResource(void*, JKRFileLoader*);
};

// build JUTCacheFont (JUTCacheFont) False/False
// build ResFONT (ResFONT) True/True
// build JKRHeap (JKRHeap) True/True
/* top-level dependencies (begin JUTCacheFont) */
// outer dependency: ResFONT
// outer dependency: JKRHeap
/* top-level dependencies (end JUTCacheFont) */
struct JUTCacheFont {
	// ResFONT
	// JKRHeap
	/* 802DD188 */ JUTCacheFont(ResFONT const*, u32, JKRHeap*);
};

// build JUTNameTab (JUTNameTab) False/False
/* top-level dependencies (begin JUTNameTab) */
/* top-level dependencies (end JUTNameTab) */
struct JUTNameTab {
	/* 802DEAF8 */ void getName(u16) const;
};

// build JUTResFont (JUTResFont) False/False
// build ResFONT (ResFONT) True/True
// build JKRHeap (JKRHeap) True/True
/* top-level dependencies (begin JUTResFont) */
// outer dependency: ResFONT
// outer dependency: JKRHeap
/* top-level dependencies (end JUTResFont) */
struct JUTResFont {
	// ResFONT
	// JKRHeap
	/* 802DEF94 */ JUTResFont(ResFONT const*, JKRHeap*);
};

// build J3DSys (J3DSys) False/False
/* top-level dependencies (begin J3DSys) */
/* top-level dependencies (end J3DSys) */
struct J3DSys {
	/* 8031073C */ void reinitGX();
};

// build J3DVertexBuffer (J3DVertexBuffer) False/False
/* top-level dependencies (begin J3DVertexBuffer) */
/* top-level dependencies (end J3DVertexBuffer) */
struct J3DVertexBuffer {
	/* 80310FD8 */ void init();
};

// build J3DDisplayListObj (J3DDisplayListObj) False/False
/* top-level dependencies (begin J3DDisplayListObj) */
/* top-level dependencies (end J3DDisplayListObj) */
struct J3DDisplayListObj {
	/* 80312618 */ void callDL() const;
};

// build J3DShapePacket (J3DShapePacket) False/False
/* top-level dependencies (begin J3DShapePacket) */
/* top-level dependencies (end J3DShapePacket) */
struct J3DShapePacket {
	/* 80312FBC */ void drawFast();
};

// build J3DShape (J3DShape) False/False
/* top-level dependencies (begin J3DShape) */
/* top-level dependencies (end J3DShape) */
struct J3DShape {
	/* 80315300 */ void loadPreDrawSetting() const;
};

// build J3DIndTexMtxInfo (J3DIndTexMtxInfo) False/False
/* top-level dependencies (begin J3DIndTexMtxInfo) */
/* top-level dependencies (end J3DIndTexMtxInfo) */
struct J3DIndTexMtxInfo {
	/* 803257DC */ void operator=(J3DIndTexMtxInfo const&);
};

// build J3DMaterialAnm (J3DMaterialAnm) False/False
// build J3DTevKColorAnm (J3DTevKColorAnm) False/False
/* top-level dependencies (begin J3DTevKColorAnm) */
/* top-level dependencies (end J3DTevKColorAnm) */
struct J3DTevKColorAnm {
};

// build J3DTevColorAnm (J3DTevColorAnm) False/False
/* top-level dependencies (begin J3DTevColorAnm) */
/* top-level dependencies (end J3DTevColorAnm) */
struct J3DTevColorAnm {
};

// build J3DTexMtxAnm (J3DTexMtxAnm) False/False
/* top-level dependencies (begin J3DTexMtxAnm) */
/* top-level dependencies (end J3DTexMtxAnm) */
struct J3DTexMtxAnm {
};

/* top-level dependencies (begin J3DMaterialAnm) */
// outer dependency: J3DTevKColorAnm
// outer dependency: J3DTevColorAnm
// outer dependency: J3DTexMtxAnm
/* top-level dependencies (end J3DMaterialAnm) */
struct J3DMaterialAnm {
	// J3DTevKColorAnm
	// J3DTevColorAnm
	// J3DTexMtxAnm
	/* 8032C5E4 */ void setTexMtxAnm(int, J3DTexMtxAnm*);
	/* 8032C664 */ void setTevColorAnm(int, J3DTevColorAnm*);
	/* 8032C6A4 */ void setTevKColorAnm(int, J3DTevKColorAnm*);
};

// build J3DTexMtxAnm (J3DTexMtxAnm) True/True
// build J3DTevColorAnm (J3DTevColorAnm) True/True
// build J3DTevKColorAnm (J3DTevKColorAnm) True/True
// build J3DMtxCalcJ3DSysInitMaya (J3DMtxCalcJ3DSysInitMaya) False/False
// build Vec (Vec) True/True
/* top-level dependencies (begin J3DMtxCalcJ3DSysInitMaya) */
// outer dependency: Vec
/* top-level dependencies (end J3DMtxCalcJ3DSysInitMaya) */
struct J3DMtxCalcJ3DSysInitMaya {
	// Vec
	/* 8032ECAC */ void init(Vec const&, f32 const (& )[3][4]);
};

// build J3DMtxCalcCalcTransformMaya (J3DMtxCalcCalcTransformMaya) False/False
// build J3DTransformInfo (J3DTransformInfo) True/True
/* top-level dependencies (begin J3DMtxCalcCalcTransformMaya) */
// outer dependency: J3DTransformInfo
/* top-level dependencies (end J3DMtxCalcCalcTransformMaya) */
struct J3DMtxCalcCalcTransformMaya {
	// J3DTransformInfo
	/* 8032EFBC */ void calcTransform(J3DTransformInfo const&);
};

// build Quaternion (Quaternion) False/False
/* top-level dependencies (begin Quaternion) */
/* top-level dependencies (end Quaternion) */
struct Quaternion {
};

// 
// Forward References:
// 

static void mDoExt_setJ3DData(f32 (* )[4], J3DTransformInfo const*, u16);
extern "C" static void func_8000D8E4();
static void mDoExt_changeMaterial(J3DModel*);
void mDoExt_modelTexturePatch(J3DModelData*);
static void mDoExt_modelDiff(J3DModel*);
void mDoExt_modelUpdate(J3DModel*);
void mDoExt_modelUpdateDL(J3DModel*);
void mDoExt_modelEntryDL(J3DModel*);
void mDoExt_btkAnmRemove(J3DModelData*);
void mDoExt_brkAnmRemove(J3DModelData*);
void mDoExt_setupShareTexture(J3DModelData*, J3DModelData*);
void mDoExt_setupStageTexture(J3DModelData*);
void mDoExt_createAssertHeap(JKRHeap*);
void mDoExt_getAssertHeap();
void mDoExt_createDbPrintHeap(u32, JKRHeap*);
void mDoExt_getDbPrintHeap();
void mDoExt_createGameHeap(u32, JKRHeap*);
void mDoExt_getGameHeap();
void mDoExt_createZeldaHeap(u32, JKRHeap*);
void mDoExt_getZeldaHeap();
void mDoExt_createCommandHeap(u32, JKRHeap*);
void mDoExt_getCommandHeap();
void mDoExt_createArchiveHeap(u32, JKRHeap*);
void mDoExt_getArchiveHeap();
void mDoExt_getArchiveHeapPtr();
void mDoExt_createJ2dHeap(u32, JKRHeap*);
void mDoExt_getJ2dHeap();
void mDoExt_getHostIOHeap();
static void mDoExt_createSolidHeap(u32, JKRHeap*, u32);
void mDoExt_createSolidHeapFromGame(u32, u32);
void mDoExt_createSolidHeapFromSystem(u32, u32);
static void mDoExt_createSolidHeapToCurrent(JKRHeap**, u32, JKRHeap*, u32);
void mDoExt_createSolidHeapToCurrent(u32, JKRHeap*, u32);
void mDoExt_createSolidHeapFromGameToCurrent(JKRHeap**, u32, u32);
void mDoExt_createSolidHeapFromGameToCurrent(u32, u32);
void mDoExt_adjustSolidHeap(JKRSolidHeap*);
void mDoExt_adjustSolidHeapToSystem(JKRSolidHeap*);
void mDoExt_destroySolidHeap(JKRSolidHeap*);
void mDoExt_destroyExpHeap(JKRExpHeap*);
void mDoExt_setCurrentHeap(JKRHeap*);
void mDoExt_getCurrentHeap();
void mDoExt_restoreCurrentHeap();
void mDoExt_resIDToIndex(JKRArchive*, u16);
extern "C" static void func_8000FA20();
static void mDoExt_initFontCommon(JUTFont**, ResFONT**, JKRHeap*, char const*, JKRArchive*, u8, u32, u32);
static void mDoExt_initFont0();
void mDoExt_getMesgFont();
void mDoExt_removeMesgFont();
static void mDoExt_initFont1();
void mDoExt_getRubyFont();
static void mDoExt_initFont2();
void mDoExt_getSubFont();
void mDoExt_removeSubFont();
void mDoExt_J3DModel__create(J3DModelData*, u32, u32);
void mDoExt_setAraCacheSize(u32);
void mDoExt_GetCurrentRunningThread();
extern "C" static void func_80014FC8();
extern "C" static void func_80015034();
extern "C" static void func_8001505C();
extern "C" static void func_80015084();
extern "C" static void func_800150AC();

extern "C" static void mDoExt_setJ3DData__FPA4_fPC16J3DTransformInfoUs();
extern "C" void initPlay__14mDoExt_baseAnmFsifss();
extern "C" void play__14mDoExt_baseAnmFv();
extern "C" void init__13mDoExt_bpkAnmFP16J3DMaterialTableP11J3DAnmColoriifss();
extern "C" void entry__13mDoExt_bpkAnmFP16J3DMaterialTablef();
extern "C" void init__13mDoExt_btpAnmFP16J3DMaterialTableP16J3DAnmTexPatterniifss();
extern "C" void entry__13mDoExt_btpAnmFP16J3DMaterialTables();
extern "C" void init__13mDoExt_btkAnmFP16J3DMaterialTableP19J3DAnmTextureSRTKeyiifss();
extern "C" void entry__13mDoExt_btkAnmFP16J3DMaterialTablef();
extern "C" void init__13mDoExt_brkAnmFP16J3DMaterialTableP15J3DAnmTevRegKeyiifss();
extern "C" void entry__13mDoExt_brkAnmFP16J3DMaterialTablef();
extern "C" void init__13mDoExt_bckAnmFP15J3DAnmTransformiifssb();
extern "C" static void func_8000D8E4();
extern "C" void __dt__17J3DMtxCalcAnmBaseFv();
extern "C" void __dt__10J3DMtxCalcFv();
extern "C" void changeBckOnly__13mDoExt_bckAnmFP15J3DAnmTransform();
extern "C" void entry__13mDoExt_bckAnmFP12J3DModelDataf();
extern "C" void entryJoint__13mDoExt_bckAnmFP12J3DModelDataUsf();
extern "C" void init__13mDoExt_blkAnmFP13J3DDeformDataP13J3DAnmClusteriifss();
extern "C" static void mDoExt_changeMaterial__FP8J3DModel();
extern "C" void mDoExt_modelTexturePatch__FP12J3DModelData();
extern "C" void patchTexNoAndTexCoordScale__11J3DTevBlockFv();
extern "C" void patch__10J3DPEBlockFv();
extern "C" void patchLight__13J3DColorBlockFv();
extern "C" void patch__11J3DTevBlockFv();
extern "C" static void mDoExt_modelDiff__FP8J3DModel();
extern "C" void mDoExt_modelUpdate__FP8J3DModel();
extern "C" void mDoExt_modelUpdateDL__FP8J3DModel();
extern "C" void mDoExt_modelEntryDL__FP8J3DModel();
extern "C" void mDoExt_btkAnmRemove__FP12J3DModelData();
extern "C" void mDoExt_brkAnmRemove__FP12J3DModelData();
extern "C" bool getZCompLoc__10J3DPEBlockCFv();
extern "C" bool getZMode__10J3DPEBlockFv();
extern "C" bool getBlend__10J3DPEBlockFv();
extern "C" bool getAlphaComp__10J3DPEBlockFv();
extern "C" bool getFog__10J3DPEBlockFv();
extern "C" bool getIndTexCoordScale__11J3DIndBlockFUl();
extern "C" bool getIndTexMtx__11J3DIndBlockFUl();
extern "C" bool getIndTexOrder__11J3DIndBlockFUl();
extern "C" bool getIndTexStageNum__11J3DIndBlockCFv();
extern "C" bool getIndTevStage__11J3DTevBlockFUl();
extern "C" bool getTevStage__11J3DTevBlockFUl();
extern "C" void getTexNo__11J3DTevBlockCFUl();
extern "C" bool getTevSwapModeTable__11J3DTevBlockFUl();
extern "C" bool getTevKAlphaSel__11J3DTevBlockFUl();
extern "C" bool getTevKColorSel__11J3DTevBlockFUl();
extern "C" bool getTevOrder__11J3DTevBlockFUl();
extern "C" bool getTevKColor__11J3DTevBlockFUl();
extern "C" bool getTevColor__11J3DTevBlockFUl();
extern "C" bool getTevStageNum__11J3DTevBlockCFv();
extern "C" bool getTexMtx__14J3DTexGenBlockFUl();
extern "C" bool getTexCoord__14J3DTexGenBlockFUl();
extern "C" bool getTexGenNum__14J3DTexGenBlockCFv();
extern "C" bool getAmbColor__13J3DColorBlockFUl();
extern "C" bool getColorChan__13J3DColorBlockFUl();
extern "C" bool getMatColor__13J3DColorBlockFUl();
extern "C" bool getColorChanNum__13J3DColorBlockCFv();
extern "C" void setZCompLoc__10J3DPEBlockFUc();
extern "C" void setZMode__10J3DPEBlockF8J3DZMode();
extern "C" void setBlend__10J3DPEBlockFRC8J3DBlend();
extern "C" void setAlphaComp__10J3DPEBlockFRC12J3DAlphaComp();
extern "C" void setIndTexCoordScale__11J3DIndBlockFUl19J3DIndTexCoordScale();
extern "C" void __dt__19J3DIndTexCoordScaleFv();
extern "C" void setIndTexMtx__11J3DIndBlockFUl12J3DIndTexMtx();
extern "C" void __dt__12J3DIndTexMtxFv();
extern "C" void setIndTexStageNum__11J3DIndBlockFUc();
extern "C" void setIndTevStage__11J3DTevBlockFUl14J3DIndTevStage();
extern "C" void setTevStage__11J3DTevBlockFUl11J3DTevStage();
extern "C" void setTexNo__11J3DTevBlockFUlUs();
extern "C" void setTevSwapModeTable__11J3DTevBlockFUl19J3DTevSwapModeTable();
extern "C" void setTevKAlphaSel__11J3DTevBlockFUlUc();
extern "C" void setTevKColorSel__11J3DTevBlockFUlUc();
extern "C" void setTevOrder__11J3DTevBlockFUl11J3DTevOrder();
extern "C" void setTevKColor__11J3DTevBlockFUl10J3DGXColor();
extern "C" void setTevColor__11J3DTevBlockFUl13J3DGXColorS10();
extern "C" void setTevStageNum__11J3DTevBlockFUc();
extern "C" void setTexCoord__14J3DTexGenBlockFUlPC11J3DTexCoord();
extern "C" void setTexGenNum__14J3DTexGenBlockFUl();
extern "C" void setAmbColor__13J3DColorBlockFUl10J3DGXColor();
extern "C" void setColorChan__13J3DColorBlockFUlRC12J3DColorChan();
extern "C" void setMatColor__13J3DColorBlockFUl10J3DGXColor();
extern "C" void setColorChanNum__13J3DColorBlockFUc();
extern "C" void __ct__19J3DIndTexCoordScaleFv();
extern "C" void __ct__12J3DIndTexMtxFv();
extern "C" void __ct__14J3DIndTexOrderFv();
extern "C" void __ct__19J3DTevSwapModeTableFv();
extern "C" void __ct__11J3DTevOrderFv();
extern "C" void __ct__14J3DIndTevStageFv();
extern "C" void __ct__11J3DTevStageFv();
extern "C" void setTevStageInfo__11J3DTevStageFRC15J3DTevStageInfo();
extern "C" void __ct__13J3DGXColorS10Fv();
extern "C" void __ct__11J3DTexCoordFv();
extern "C" void __ct__12J3DColorChanFv();
extern "C" void __ct__10J3DGXColorFv();
extern "C" void create__21mDoExt_invisibleModelFP8J3DModelUc();
extern "C" void __dt__19mDoExt_invJntPacketFv();
extern "C" void __ct__19mDoExt_invJntPacketFv();
extern "C" void __dt__9J3DPacketFv();
extern "C" void entryJoint__21mDoExt_invisibleModelFP4cXyz();
extern "C" void entryDL__21mDoExt_invisibleModelFP4cXyz();
extern "C" void mDoExt_setupShareTexture__FP12J3DModelDataP12J3DModelData();
extern "C" void mDoExt_setupStageTexture__FP12J3DModelData();
extern "C" void mDoExt_createAssertHeap__FP7JKRHeap();
extern "C" void mDoExt_getAssertHeap__Fv();
extern "C" void mDoExt_createDbPrintHeap__FUlP7JKRHeap();
extern "C" void mDoExt_getDbPrintHeap__Fv();
extern "C" void mDoExt_createGameHeap__FUlP7JKRHeap();
extern "C" void mDoExt_getGameHeap__Fv();
extern "C" void mDoExt_createZeldaHeap__FUlP7JKRHeap();
extern "C" void mDoExt_getZeldaHeap__Fv();
extern "C" void mDoExt_createCommandHeap__FUlP7JKRHeap();
extern "C" void mDoExt_getCommandHeap__Fv();
extern "C" void mDoExt_createArchiveHeap__FUlP7JKRHeap();
extern "C" void mDoExt_getArchiveHeap__Fv();
extern "C" void mDoExt_getArchiveHeapPtr__Fv();
extern "C" void mDoExt_createJ2dHeap__FUlP7JKRHeap();
extern "C" void mDoExt_getJ2dHeap__Fv();
extern "C" void mDoExt_getHostIOHeap__Fv();
extern "C" static void mDoExt_createSolidHeap__FUlP7JKRHeapUl();
extern "C" void mDoExt_createSolidHeapFromGame__FUlUl();
extern "C" void mDoExt_createSolidHeapFromSystem__FUlUl();
extern "C" static void mDoExt_createSolidHeapToCurrent__FPP7JKRHeapUlP7JKRHeapUl();
extern "C" void mDoExt_createSolidHeapToCurrent__FUlP7JKRHeapUl();
extern "C" void mDoExt_createSolidHeapFromGameToCurrent__FPP7JKRHeapUlUl();
extern "C" void mDoExt_createSolidHeapFromGameToCurrent__FUlUl();
extern "C" void mDoExt_adjustSolidHeap__FP12JKRSolidHeap();
extern "C" void mDoExt_adjustSolidHeapToSystem__FP12JKRSolidHeap();
extern "C" void mDoExt_destroySolidHeap__FP12JKRSolidHeap();
extern "C" void mDoExt_destroyExpHeap__FP10JKRExpHeap();
extern "C" void mDoExt_setCurrentHeap__FP7JKRHeap();
extern "C" void mDoExt_getCurrentHeap__Fv();
extern "C" void mDoExt_restoreCurrentHeap__Fv();
extern "C" void mDoExt_resIDToIndex__FP10JKRArchiveUs();
extern "C" void calc__25mDoExt_MtxCalcAnmBlendTblFv();
extern "C" void calc__28mDoExt_MtxCalcAnmBlendTblOldFv();
extern "C" void initOldFrameMorf__22mDoExt_MtxCalcOldFrameFfUsUs();
extern "C" void decOldFrameMorfCounter__22mDoExt_MtxCalcOldFrameFv();
extern "C" void __ct__13mDoExt_morf_cFv();
extern "C" void __dt__12J3DFrameCtrlFv();
extern "C" static void func_8000FA20();
extern "C" void __dt__19J3DMtxCalcNoAnmBaseFv();
extern "C" void __dt__13mDoExt_morf_cFv();
extern "C" void setMorf__13mDoExt_morf_cFf();
extern "C" void frameUpdate__13mDoExt_morf_cFv();
extern "C" void __ct__14mDoExt_McaMorfFP12J3DModelDataP25mDoExt_McaMorfCallBack1_cP25mDoExt_McaMorfCallBack2_cP15J3DAnmTransformifiiiPvUlUl();
extern "C" void __dt__14mDoExt_McaMorfFv();
extern "C" void create__14mDoExt_McaMorfFP12J3DModelDataP25mDoExt_McaMorfCallBack1_cP25mDoExt_McaMorfCallBack2_cP15J3DAnmTransformifiiiPvUlUl();
extern "C" void calc__14mDoExt_McaMorfFv();
extern "C" void setAnm__14mDoExt_McaMorfFP15J3DAnmTransformiffffPv();
extern "C" void play__14mDoExt_McaMorfFP3VecUlSc();
extern "C" void entryDL__14mDoExt_McaMorfFv();
extern "C" void modelCalc__14mDoExt_McaMorfFv();
extern "C" void getTransform__14mDoExt_McaMorfFUsP16J3DTransformInfo();
extern "C" void __ct__16mDoExt_McaMorfSOFP12J3DModelDataP25mDoExt_McaMorfCallBack1_cP25mDoExt_McaMorfCallBack2_cP15J3DAnmTransformifiiP10Z2CreatureUlUl();
extern "C" void __dt__16mDoExt_McaMorfSOFv();
extern "C" void create__16mDoExt_McaMorfSOFP12J3DModelDataP25mDoExt_McaMorfCallBack1_cP25mDoExt_McaMorfCallBack2_cP15J3DAnmTransformifiiP10Z2CreatureUlUl();
extern "C" void calc__16mDoExt_McaMorfSOFv();
extern "C" void setAnm__16mDoExt_McaMorfSOFP15J3DAnmTransformiffff();
extern "C" void play__16mDoExt_McaMorfSOFUlSc();
extern "C" void updateDL__16mDoExt_McaMorfSOFv();
extern "C" void entryDL__16mDoExt_McaMorfSOFv();
extern "C" void modelCalc__16mDoExt_McaMorfSOFv();
extern "C" void getTransform__16mDoExt_McaMorfSOFUsP16J3DTransformInfo();
extern "C" void stopZelAnime__16mDoExt_McaMorfSOFv();
extern "C" void __ct__15mDoExt_McaMorf2FP12J3DModelDataP25mDoExt_McaMorfCallBack1_cP25mDoExt_McaMorfCallBack2_cP15J3DAnmTransformP15J3DAnmTransformifiiP10Z2CreatureUlUl();
extern "C" void __dt__15mDoExt_McaMorf2Fv();
extern "C" void create__15mDoExt_McaMorf2FP12J3DModelDataP25mDoExt_McaMorfCallBack1_cP25mDoExt_McaMorfCallBack2_cP15J3DAnmTransformP15J3DAnmTransformifiiP10Z2CreatureUlUl();
extern "C" void ERROR_EXIT__15mDoExt_McaMorf2Fv();
extern "C" void calc__15mDoExt_McaMorf2Fv();
extern "C" void setAnm__15mDoExt_McaMorf2FP15J3DAnmTransformP15J3DAnmTransformfiffff();
extern "C" void setAnmRate__15mDoExt_McaMorf2Ff();
extern "C" void play__15mDoExt_McaMorf2FUlSc();
extern "C" void entryDL__15mDoExt_McaMorf2Fv();
extern "C" void modelCalc__15mDoExt_McaMorf2Fv();
extern "C" void stopZelAnime__15mDoExt_McaMorf2Fv();
extern "C" void draw__19mDoExt_invJntPacketFv();
extern "C" void init__15mDoExt_3Dline_cFUsii();
extern "C" void __ct__4cXyzFv();
extern "C" void init__19mDoExt_3DlineMat0_cFUsUsi();
extern "C" void __ct__15mDoExt_3Dline_cFv();
extern "C" void setMaterial__19mDoExt_3DlineMat0_cFv();
extern "C" void draw__19mDoExt_3DlineMat0_cFv();
extern "C" void update__19mDoExt_3DlineMat0_cFifR8_GXColorUsP12dKy_tevstr_c();
extern "C" void update__19mDoExt_3DlineMat0_cFiR8_GXColorP12dKy_tevstr_c();
extern "C" void init__19mDoExt_3DlineMat1_cFUsUsP7ResTIMGi();
extern "C" void setMaterial__19mDoExt_3DlineMat1_cFv();
extern "C" void draw__19mDoExt_3DlineMat1_cFv();
extern "C" void update__19mDoExt_3DlineMat1_cFifR8_GXColorUsP12dKy_tevstr_c();
extern "C" void update__19mDoExt_3DlineMat1_cFiR8_GXColorP12dKy_tevstr_c();
extern "C" void setMat__26mDoExt_3DlineMatSortPacketFP18mDoExt_3DlineMat_c();
extern "C" void draw__26mDoExt_3DlineMatSortPacketFv();
extern "C" static void mDoExt_initFontCommon__FPP7JUTFontPP7ResFONTP7JKRHeapPCcP10JKRArchiveUcUlUl();
extern "C" void __dt__7JUTFontFv();
extern "C" static void mDoExt_initFont0__Fv();
extern "C" void mDoExt_getMesgFont__Fv();
extern "C" void mDoExt_removeMesgFont__Fv();
extern "C" static void mDoExt_initFont1__Fv();
extern "C" void mDoExt_getRubyFont__Fv();
extern "C" static void mDoExt_initFont2__Fv();
extern "C" void mDoExt_getSubFont__Fv();
extern "C" void mDoExt_removeSubFont__Fv();
extern "C" void mDoExt_J3DModel__create__FP12J3DModelDataUlUl();
extern "C" void mDoExt_setAraCacheSize__FUl();
extern "C" void mDoExt_GetCurrentRunningThread__Fv();
extern "C" void setGX__7JUTFontFQ28JUtility6TColorQ28JUtility6TColor();
extern "C" void getCellWidth__7JUTFontCFv();
extern "C" void getCellHeight__7JUTFontCFv();
extern "C" void __dt__26mDoExt_3DlineMatSortPacketFv();
extern "C" bool getMaterialID__19mDoExt_3DlineMat1_cFv();
extern "C" bool getMaterialID__19mDoExt_3DlineMat0_cFv();
extern "C" void setAnmTransform__10J3DMtxCalcFUcP15J3DAnmTransform();
extern "C" void setAnmTransform__10J3DMtxCalcFP15J3DAnmTransform();
extern "C" bool getAnmTransform__10J3DMtxCalcFUc();
extern "C" bool getAnmTransform__10J3DMtxCalcFv();
extern "C" void setWeight__10J3DMtxCalcFUcf();
extern "C" void getWeight__10J3DMtxCalcCFUc();
extern "C" void __dt__28mDoExt_MtxCalcAnmBlendTblOldFv();
extern "C" void __dt__25mDoExt_MtxCalcAnmBlendTblFv();
extern "C" void getAnmTransform__17J3DMtxCalcAnmBaseFv();
extern "C" void setAnmTransform__17J3DMtxCalcAnmBaseFP15J3DAnmTransform();
extern "C" static void func_80014FC8();
extern "C" static void func_80015034();
extern "C" static void func_8001505C();
extern "C" static void func_80015084();
extern "C" static void func_800150AC();
SECTION_RODATA extern const u8 data_803740C0[18 + 2 /* padding */];
SECTION_RODATA extern const u8 data_803740D4[20];
SECTION_RODATA extern const u8 data_803740E8[20];
SECTION_RODATA extern const u8 m_Do_m_Do_ext__stringBase0[156];
SECTION_DATA extern u8 data_803A3020[133 + 27 /* padding */];
SECTION_DATA extern u8 l_matDL[132 + 28 /* padding */];
SECTION_DATA extern u8 l_mat1DL[141 + 3 /* padding */];
SECTION_DATA extern void*const __vt__7JUTFont[17];
SECTION_DATA extern void*const __vt__26mDoExt_3DlineMatSortPacket[5];
SECTION_DATA extern void*const __vt__19mDoExt_3DlineMat1_c[5];
SECTION_DATA extern void*const __vt__19mDoExt_3DlineMat0_c[5];
SECTION_DATA extern void*const __vt__19mDoExt_invJntPacket[5];
SECTION_DATA extern void*const __vt__15mDoExt_McaMorf2[11];
SECTION_DATA extern void*const __vt__16mDoExt_McaMorfSO[11];
SECTION_DATA extern void*const __vt__15mDoExt_zelAnime[8];
SECTION_DATA extern void*const __vt__14mDoExt_McaMorf[11];
SECTION_DATA extern void*const __vt__13mDoExt_morf_c[11];
SECTION_DATA extern void*const __vt__12J3DFrameCtrl[3];
SECTION_DATA extern void*const data_803A3360[11];
SECTION_DATA extern void*const __vt__19J3DMtxCalcNoAnmBase[11];
SECTION_DATA extern void*const __vt__28mDoExt_MtxCalcAnmBlendTblOld[11];
SECTION_DATA extern void*const __vt__25mDoExt_MtxCalcAnmBlendTbl[11];
SECTION_DATA extern void*const data_803A3410[11];
SECTION_DATA extern void*const __vt__17J3DMtxCalcAnmBase[11];
SECTION_DATA extern void*const __vt__10J3DMtxCalc[12];
SECTION_SBSS extern u8 AssertHeap[4];
SECTION_SBSS extern u8 DbPrintHeap[4];
SECTION_SBSS extern u8 gameHeap[4];
SECTION_SBSS extern u8 zeldaHeap[4];
SECTION_SBSS extern u8 commandHeap[4];
SECTION_SBSS extern u8 archiveHeap[4];
SECTION_SBSS extern u8 j2dHeap[4];
SECTION_SBSS extern u8 HostIOHeap[4];
SECTION_SBSS extern u8 mDoExt_SaveCurrentHeap[4];
SECTION_SBSS extern u8 mDoExt_font0[4];
SECTION_SBSS extern u8 mDoExt_font0_getCount[4];
SECTION_SBSS extern u8 mDoExt_resfont0[4];
SECTION_SBSS extern u8 mDoExt_font1[4];
SECTION_SBSS extern u8 mDoExt_font1_getCount[4];
SECTION_SBSS extern u8 mDoExt_resfont1[4];
SECTION_SBSS extern u8 mDoExt_font2[4];
SECTION_SBSS extern u8 mDoExt_font2_getCount[4];
SECTION_SBSS extern u8 mDoExt_resfont2[4];
SECTION_SBSS extern u8 aram_cache_size[4 + 4 /* padding */];
SECTION_SDATA2 extern f32 m_Do_m_Do_ext__lit_3847;
SECTION_SDATA2 extern u8 m_Do_m_Do_ext__lit_3876[4];
SECTION_SDATA2 extern f64 m_Do_m_Do_ext__lit_3878;
SECTION_SDATA2 extern f32 lit_5939;
SECTION_SDATA2 extern f32 lit_6819;
SECTION_SDATA2 extern f32 lit_7404;
SECTION_SDATA2 extern f64 lit_7406;
SECTION_SDATA2 extern f32 m_Do_m_Do_ext__lit_7624;
SECTION_SDATA2 extern f32 m_Do_m_Do_ext__lit_7625;
SECTION_SDATA2 extern f64 lit_7919;
SECTION_SDATA2 extern f64 lit_7920;
SECTION_SDATA2 extern u8 lit_7921[8];
SECTION_SDATA2 extern f32 lit_7922;
SECTION_SDATA2 extern f32 lit_7923;
SECTION_SDATA2 extern f32 lit_7924;

// 
// External References:
// 

extern "C" void OSReport_FatalError();
extern "C" void OSReport_Error();
void dComIfG_getStageRes(char const*);
void dKy_setLight_again();
void dKy_Global_amb_set(dKy_tevstr_c*);
void dKy_GxFog_set();
void cLib_chaseF(f32*, f32, f32);
void GFSetBlendModeEtc(_GXBlendMode, _GXBlendFactor, _GXBlendFactor, _GXLogicOp, u8, u8, u8);
void GFSetZMode(u8, _GXCompare, u8);
void* operator new(u32);
void* operator new(u32, JKRHeap*, int);
void* operator new[](u32);
void operator delete(void*);
void JMAEulerToQuat(s16, s16, s16, Quaternion*);
void JMAQuatLerp(Quaternion const*, Quaternion const*, f32, Quaternion*);
extern "C" void DCStoreRangeNoSync();
extern "C" void OSDisableInterrupts();
extern "C" void OSRestoreInterrupts();
extern "C" void OSGetCurrentThread();
extern "C" void PSMTXCopy();
extern "C" void PSMTXConcat();
extern "C" void PSMTXQuat();
extern "C" void PSVECAdd();
extern "C" void PSVECScale();
extern "C" void PSVECSquareMag();
extern "C" void GXSetVtxDesc();
extern "C" void GXClearVtxDesc();
extern "C" void GXSetVtxAttrFmt();
extern "C" void GXSetArray();
extern "C" void GXBegin();
extern "C" void GXInitTexObj();
extern "C" void GXInitTexObjLOD();
extern "C" void GXGetTexObjWidth();
extern "C" void GXGetTexObjHeight();
extern "C" void GXLoadTexObj();
extern "C" void GXSetTexCoordScaleManually();
extern "C" void GXSetNumIndStages();
extern "C" void GXSetTevColor();
extern "C" void GXCallDisplayList();
extern "C" void GXLoadPosMtxImm();
extern "C" void GXLoadNrmMtxImm();
extern "C" void GDInitGDLObj();
extern "C" void __construct_new_array();
extern "C" void _savegpr_15();
extern "C" void _savegpr_18();
extern "C" void _savegpr_20();
extern "C" void _savegpr_21();
extern "C" void _savegpr_22();
extern "C" void _savegpr_25();
extern "C" void _savegpr_26();
extern "C" void _savegpr_27();
extern "C" void _savegpr_28();
extern "C" void _savegpr_29();
extern "C" void _restgpr_15();
extern "C" void _restgpr_18();
extern "C" void _restgpr_20();
extern "C" void _restgpr_21();
extern "C" void _restgpr_22();
extern "C" void _restgpr_25();
extern "C" void _restgpr_26();
extern "C" void _restgpr_27();
extern "C" void _restgpr_28();
extern "C" void _restgpr_29();
extern "C" void snprintf();
extern "C" void strcmp();

extern "C" void OSReport_FatalError();
extern "C" void OSReport_Error();
extern "C" void __dt__4cXyzFv();
extern "C" void dComIfG_getStageRes__FPCc();
extern "C" void entryZSortXluDrawList__12dDlst_list_cFP13J3DDrawBufferP9J3DPacketR4cXyz();
extern "C" void dKy_setLight_again__Fv();
extern "C" void dKy_Global_amb_set__FP12dKy_tevstr_c();
extern "C" void dKy_GxFog_set__Fv();
extern "C" void __pl__4cXyzCFRC3Vec();
extern "C" void __mi__4cXyzCFRC3Vec();
extern "C" void __ml__4cXyzCFf();
extern "C" void outprod__4cXyzCFRC3Vec();
extern "C" void normalizeZP__4cXyzFv();
extern "C" void cLib_chaseF__FPfff();
extern "C" void framework__14Z2SoundObjBaseFUlSc();
extern "C" void dispose__14Z2SoundObjBaseFv();
extern "C" void stopOK__14Z2SoundObjBaseFR17Z2SoundHandlePool();
extern "C" void startSound__14Z2SoundObjBaseF10JAISoundIDUlSc();
extern "C" void startLevelSound__14Z2SoundObjBaseF10JAISoundIDUlSc();
extern "C" void __ct__15Z2SoundObjAnimeFv();
extern "C" void init__15Z2SoundObjAnimeFP3VecUc();
extern "C" void initAnime__15Z2SoundObjAnimeFPvbff();
extern "C" void updateAnime__15Z2SoundObjAnimeFff();
extern "C" void initAnime__10Z2CreatureFPvbff();
extern "C" void updateAnime__10Z2CreatureFff();
extern "C" void GFSetBlendModeEtc__F12_GXBlendMode14_GXBlendFactor14_GXBlendFactor10_GXLogicOpUcUcUc();
extern "C" void GFSetZMode__FUc10_GXCompareUc();
extern "C" void becomeCurrentHeap__7JKRHeapFv();
extern "C" void destroy__7JKRHeapFv();
extern "C" void free__7JKRHeapFPvP7JKRHeap();
extern "C" void setErrorFlag__7JKRHeapFb();
extern "C" void* __nw__FUl();
extern "C" void* __nw__FUlP7JKRHeapi();
extern "C" void* __nwa__FUl();
extern "C" void __dl__FPv();
extern "C" void create__10JKRExpHeapFUlP7JKRHeapb();
extern "C" void create__12JKRSolidHeapFUlP7JKRHeapb();
extern "C" void adjustSize__12JKRSolidHeapFv();
extern "C" void create__13JKRAssertHeapFP7JKRHeap();
extern "C" void removeResource__13JKRFileLoaderFPvP13JKRFileLoader();
extern "C" void getGlbResource__10JKRArchiveFUlPCcP10JKRArchive();
extern "C" void findIdResource__10JKRArchiveCFUs();
extern "C" void __ct__12JUTCacheFontFPC7ResFONTUlP7JKRHeap();
extern "C" void getName__10JUTNameTabCFUs();
extern "C" void __ct__10JUTResFontFPC7ResFONTP7JKRHeap();
extern "C" void reinitGX__6J3DSysFv();
extern "C" void init__15J3DVertexBufferFv();
extern "C" void callDL__17J3DDisplayListObjCFv();
extern "C" bool entry__9J3DPacketFP13J3DDrawBuffer();
extern "C" void drawFast__14J3DShapePacketFv();
extern "C" void loadPreDrawSetting__8J3DShapeCFv();
extern "C" void entryImm__13J3DDrawBufferFP9J3DPacketUs();
extern "C" void __as__16J3DIndTexMtxInfoFRC16J3DIndTexMtxInfo();
extern "C" void initialize__8J3DModelFv();
extern "C" void entryModelData__8J3DModelFP12J3DModelDataUlUl();
extern "C" void newDifferedDisplayList__8J3DModelFUl();
extern "C" void lock__8J3DModelFv();
extern "C" void unlock__8J3DModelFv();
extern "C" void diff__8J3DModelFv();
extern "C" void init__12J3DFrameCtrlFs();
extern "C" void update__12J3DFrameCtrlFv();
extern "C" void searchUpdateMaterialID__11J3DAnmColorFP16J3DMaterialTable();
extern "C" void searchUpdateMaterialID__16J3DAnmTexPatternFP16J3DMaterialTable();
extern "C" void searchUpdateMaterialID__19J3DAnmTextureSRTKeyFP16J3DMaterialTable();
extern "C" void searchUpdateMaterialID__15J3DAnmTevRegKeyFP16J3DMaterialTable();
extern "C" void setTexMtxAnm__14J3DMaterialAnmFiP12J3DTexMtxAnm();
extern "C" void setTevColorAnm__14J3DMaterialAnmFiP14J3DTevColorAnm();
extern "C" void setTevKColorAnm__14J3DMaterialAnmFiP15J3DTevKColorAnm();
extern "C" void setAnm__13J3DDeformDataFP13J3DAnmCluster();
extern "C" void init__24J3DMtxCalcJ3DSysInitMayaFRC3VecRA3_A4_Cf();
extern "C" void calcTransform__27J3DMtxCalcCalcTransformMayaFRC16J3DTransformInfo();
extern "C" void entryMatColorAnimator__16J3DMaterialTableFP11J3DAnmColor();
extern "C" void entryTexNoAnimator__16J3DMaterialTableFP16J3DAnmTexPattern();
extern "C" void entryTexMtxAnimator__16J3DMaterialTableFP19J3DAnmTextureSRTKey();
extern "C" void entryTevRegAnimator__16J3DMaterialTableFP15J3DAnmTevRegKey();
extern "C" void JMAEulerToQuat__FsssP10Quaternion();
extern "C" void JMAQuatLerp__FPC10QuaternionPC10QuaternionfP10Quaternion();
extern "C" void DCStoreRangeNoSync();
extern "C" void OSDisableInterrupts();
extern "C" void OSRestoreInterrupts();
extern "C" void OSGetCurrentThread();
extern "C" void PSMTXCopy();
extern "C" void PSMTXConcat();
extern "C" void PSMTXQuat();
extern "C" void PSVECAdd();
extern "C" void PSVECScale();
extern "C" void PSVECSquareMag();
extern "C" void GXSetVtxDesc();
extern "C" void GXClearVtxDesc();
extern "C" void GXSetVtxAttrFmt();
extern "C" void GXSetArray();
extern "C" void GXBegin();
extern "C" void GXInitTexObj();
extern "C" void GXInitTexObjLOD();
extern "C" void GXGetTexObjWidth();
extern "C" void GXGetTexObjHeight();
extern "C" void GXLoadTexObj();
extern "C" void GXSetTexCoordScaleManually();
extern "C" void GXSetNumIndStages();
extern "C" void GXSetTevColor();
extern "C" void GXCallDisplayList();
extern "C" void GXLoadPosMtxImm();
extern "C" void GXLoadNrmMtxImm();
extern "C" void GDInitGDLObj();
extern "C" void __construct_new_array();
extern "C" void _savegpr_15();
extern "C" void _savegpr_18();
extern "C" void _savegpr_20();
extern "C" void _savegpr_21();
extern "C" void _savegpr_22();
extern "C" void _savegpr_25();
extern "C" void _savegpr_26();
extern "C" void _savegpr_27();
extern "C" void _savegpr_28();
extern "C" void _savegpr_29();
extern "C" void _restgpr_15();
extern "C" void _restgpr_18();
extern "C" void _restgpr_20();
extern "C" void _restgpr_21();
extern "C" void _restgpr_22();
extern "C" void _restgpr_25();
extern "C" void _restgpr_26();
extern "C" void _restgpr_27();
extern "C" void _restgpr_28();
extern "C" void _restgpr_29();
extern "C" void snprintf();
extern "C" void strcmp();
SECTION_RODATA extern const u8 j3dDefaultTexCoordInfo[32];
SECTION_RODATA extern const u8 j3dDefaultIndTexMtxInfo[28];
SECTION_RODATA extern const u8 j3dDefaultTevStageInfo[20];
SECTION_RODATA extern const u8 j3dDefaultIndTevStageInfo[12];
SECTION_DATA extern u8 g_mDoMtx_identity[48 + 24 /* padding */];
SECTION_DATA extern void*const __vt__9J3DPacket[5];
SECTION_DATA extern void*const __vt__8J3DModel[9];
SECTION_BSS extern u8 g_dComIfG_gameInfo[122384];
SECTION_BSS extern u8 j3dSys[284];
SECTION_BSS extern u8 mCurrentMtx__6J3DSys[48];
SECTION_BSS extern u8 mParentS__6J3DSys[12];
SECTION_BSS extern u8 sGDLObj__17J3DDisplayListObj[16];
SECTION_SDATA extern u32 __float_nan;
SECTION_SBSS extern u8 G_CM3D_F_ABS_MIN[4 + 4 /* padding */];
SECTION_SBSS extern u8 sCurrentHeap__7JKRHeap[4];
SECTION_SBSS extern u8 sOldVcdVatCmd__8J3DShape[4];
SECTION_SBSS extern u8 mJoint__10J3DMtxCalc[4];
SECTION_SBSS extern u8 __GDCurrentDL[4];
SECTION_SDATA2 extern u32 j3dDefaultTevOrderInfoNull;
SECTION_SDATA2 extern u32 j3dDefaultIndTexOrderNull;
SECTION_SDATA2 extern u8 j3dDefaultIndTexCoordScaleInfo[4];
SECTION_SDATA2 extern u8 j3dDefaultTevSwapMode[4];
SECTION_SDATA2 extern u8 j3dDefaultColorChanInfo[8];
SECTION_SDATA2 extern u16 data_804563F8;

// 
// Declarations:
// 

/* ############################################################################################## */
/* 80451B18-80451B1C 0004+00 rc=11 efc=0 .sdata2    @3847                                                        */
f32 m_Do_m_Do_ext__lit_3847 = 1.0f;

/* 8000D0AC-8000D320 0274+00 rc=5 efc=0 .text      mDoExt_setJ3DData__FPA4_fPC16J3DTransformInfoUs              */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm static void mDoExt_setJ3DData(f32 (* field_0)[4], J3DTransformInfo const* field_1, u16 field_2) {
	nofralloc
#include "asm/m_Do/m_Do_ext/mDoExt_setJ3DData__FPA4_fPC16J3DTransformInfoUs.s"
}
#pragma pop


/* ############################################################################################## */
/* 80451B1C-80451B20 0004+00 rc=22 efc=0 .sdata2    @3876                                                        */
u8 m_Do_m_Do_ext__lit_3876[4] = {
	0x00, 0x00, 0x00, 0x00,
};

/* 80451B20-80451B28 0008+00 rc=10 efc=0 .sdata2    @3878                                                        */
f64 m_Do_m_Do_ext__lit_3878 = 4503601774854144.0 /* cast s32 to float */;

/* 8000D320-8000D428 0108+00 rc=6 efc=0 .text      initPlay__14mDoExt_baseAnmFsifss                             */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void mDoExt_baseAnm::initPlay(s16 field_0, int field_1, f32 field_2, s16 field_3, s16 field_4) {
	nofralloc
#include "asm/m_Do/m_Do_ext/initPlay__14mDoExt_baseAnmFsifss.s"
}
#pragma pop


/* 8000D428-8000D47C 0054+00 rc=12 efc=12 .text      play__14mDoExt_baseAnmFv                                     */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void mDoExt_baseAnm::play() {
	nofralloc
#include "asm/m_Do/m_Do_ext/play__14mDoExt_baseAnmFv.s"
}
#pragma pop


/* 8000D47C-8000D518 009C+00 rc=3 efc=3 .text      init__13mDoExt_bpkAnmFP16J3DMaterialTableP11J3DAnmColoriifss */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void mDoExt_bpkAnm::init(J3DMaterialTable* field_0, J3DAnmColor* field_1, int field_2, int field_3, f32 field_4, s16 field_5, s16 field_6) {
	nofralloc
#include "asm/m_Do/m_Do_ext/init__13mDoExt_bpkAnmFP16J3DMaterialTableP11J3DAnmColoriifss.s"
}
#pragma pop


/* 8000D518-8000D54C 0034+00 rc=3 efc=3 .text      entry__13mDoExt_bpkAnmFP16J3DMaterialTablef                  */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void mDoExt_bpkAnm::entry(J3DMaterialTable* field_0, f32 field_1) {
	nofralloc
#include "asm/m_Do/m_Do_ext/entry__13mDoExt_bpkAnmFP16J3DMaterialTablef.s"
}
#pragma pop


/* 8000D54C-8000D5E8 009C+00 rc=5 efc=5 .text      init__13mDoExt_btpAnmFP16J3DMaterialTableP16J3DAnmTexPatterniifss */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void mDoExt_btpAnm::init(J3DMaterialTable* field_0, J3DAnmTexPattern* field_1, int field_2, int field_3, f32 field_4, s16 field_5, s16 field_6) {
	nofralloc
#include "asm/m_Do/m_Do_ext/init__13mDoExt_btpAnmFP16J3DMaterialTableP16J3DAnmTexPatterniifss.s"
}
#pragma pop


/* 8000D5E8-8000D63C 0054+00 rc=5 efc=5 .text      entry__13mDoExt_btpAnmFP16J3DMaterialTables                  */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void mDoExt_btpAnm::entry(J3DMaterialTable* field_0, s16 field_1) {
	nofralloc
#include "asm/m_Do/m_Do_ext/entry__13mDoExt_btpAnmFP16J3DMaterialTables.s"
}
#pragma pop


/* 8000D63C-8000D6D8 009C+00 rc=6 efc=6 .text      init__13mDoExt_btkAnmFP16J3DMaterialTableP19J3DAnmTextureSRTKeyiifss */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void mDoExt_btkAnm::init(J3DMaterialTable* field_0, J3DAnmTextureSRTKey* field_1, int field_2, int field_3, f32 field_4, s16 field_5, s16 field_6) {
	nofralloc
#include "asm/m_Do/m_Do_ext/init__13mDoExt_btkAnmFP16J3DMaterialTableP19J3DAnmTextureSRTKeyiifss.s"
}
#pragma pop


/* 8000D6D8-8000D70C 0034+00 rc=7 efc=7 .text      entry__13mDoExt_btkAnmFP16J3DMaterialTablef                  */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void mDoExt_btkAnm::entry(J3DMaterialTable* field_0, f32 field_1) {
	nofralloc
#include "asm/m_Do/m_Do_ext/entry__13mDoExt_btkAnmFP16J3DMaterialTablef.s"
}
#pragma pop


/* 8000D70C-8000D7A8 009C+00 rc=8 efc=8 .text      init__13mDoExt_brkAnmFP16J3DMaterialTableP15J3DAnmTevRegKeyiifss */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void mDoExt_brkAnm::init(J3DMaterialTable* field_0, J3DAnmTevRegKey* field_1, int field_2, int field_3, f32 field_4, s16 field_5, s16 field_6) {
	nofralloc
#include "asm/m_Do/m_Do_ext/init__13mDoExt_brkAnmFP16J3DMaterialTableP15J3DAnmTevRegKeyiifss.s"
}
#pragma pop


/* 8000D7A8-8000D7DC 0034+00 rc=8 efc=8 .text      entry__13mDoExt_brkAnmFP16J3DMaterialTablef                  */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void mDoExt_brkAnm::entry(J3DMaterialTable* field_0, f32 field_1) {
	nofralloc
#include "asm/m_Do/m_Do_ext/entry__13mDoExt_brkAnmFP16J3DMaterialTablef.s"
}
#pragma pop


/* ############################################################################################## */
/* 803A3020-803A30C0 0085+1B rc=1 efc=0 .data      l_invisibleMat$7041                                          */
u8 data_803A3020[160] = {
	0x10, 0x00, 0x00, 0x10, 0x0E, 0x00, 0x00, 0x04, 0x00, 0x10, 0x00, 0x00, 0x10, 0x10, 0x00, 0x00,
	0x04, 0x00, 0x61, 0x28, 0x38, 0x00, 0x00, 0x61, 0xC0, 0x08, 0xFF, 0xFC, 0x61, 0xC1, 0x08, 0xFF,
	0xF0, 0x61, 0xF3, 0x7F, 0x00, 0x00, 0x61, 0x43, 0x00, 0x00, 0x41, 0x61, 0x40, 0x00, 0x00, 0x17,
	0x61, 0xEE, 0x00, 0x00, 0x00, 0x61, 0xEF, 0x00, 0x00, 0x00, 0x61, 0xF0, 0x00, 0x00, 0x00, 0x61,
	0xF1, 0x00, 0x00, 0x00, 0x61, 0xF2, 0x00, 0x00, 0x00, 0x61, 0x41, 0x00, 0x00, 0x04, 0x10, 0x00,
	0x00, 0x10, 0x3F, 0x00, 0x00, 0x00, 0x00, 0x10, 0x00, 0x00, 0x10, 0x09, 0x00, 0x00, 0x00, 0x01,
	0x61, 0x00, 0x00, 0x40, 0x10, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
	0x00, 0x00, 0x00, 0x00, 0x00,
	/* padding */
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
};

/* 803A30C0-803A3160 0084+1C rc=1 efc=0 .data      l_matDL                                                      */
u8 l_matDL[160] = {
	0x08, 0x30, 0x3C, 0xF3, 0xCF, 0x00, 0x10, 0x00, 0x00, 0x10, 0x18, 0x3C, 0xF3, 0xCF, 0x00, 0x10,
	0x00, 0x00, 0x10, 0x0E, 0x00, 0x00, 0x7F, 0x32, 0x10, 0x00, 0x00, 0x10, 0x10, 0x00, 0x00, 0x05,
	0x00, 0x10, 0x00, 0x00, 0x10, 0x0C, 0xFF, 0xFF, 0xFF, 0xFF, 0x61, 0x28, 0x38, 0x00, 0x00, 0x61,
	0xC0, 0x28, 0xF6, 0xAF, 0x61, 0xC1, 0x08, 0xFF, 0xE0, 0x61, 0x43, 0x00, 0x00, 0x41, 0x61, 0x40,
	0x00, 0x00, 0x17, 0x61, 0x41, 0x00, 0x00, 0x0C, 0x61, 0xF3, 0x7F, 0x00, 0x00, 0x10, 0x00, 0x00,
	0x10, 0x3F, 0x00, 0x00, 0x00, 0x00, 0x10, 0x00, 0x00, 0x10, 0x09, 0x00, 0x00, 0x00, 0x01, 0x61,
	0x00, 0x00, 0x00, 0x10, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
	0x00, 0x00, 0x00, 0x00,
	/* padding */
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
};

/* 803A3160-803A31F0 008D+03 rc=1 efc=0 .data      l_mat1DL                                                     */
u8 l_mat1DL[144] = {
	0x10, 0x00, 0x00, 0x10, 0x40, 0xFF, 0xFF, 0x42, 0x80, 0x08, 0x30, 0x3C, 0xF3, 0xCF, 0x00, 0x10,
	0x00, 0x00, 0x10, 0x18, 0x3C, 0xF3, 0xCF, 0x00, 0x10, 0x00, 0x00, 0x10, 0x0E, 0x00, 0x00, 0x7F,
	0x32, 0x10, 0x00, 0x00, 0x10, 0x10, 0x00, 0x00, 0x05, 0x00, 0x10, 0x00, 0x00, 0x10, 0x0C, 0xFF,
	0xFF, 0xFF, 0xFF, 0x61, 0x28, 0x38, 0x00, 0x40, 0x61, 0xC0, 0x28, 0xFA, 0x8F, 0x61, 0xC1, 0x08,
	0xFF, 0xF0, 0x61, 0x43, 0x00, 0x00, 0x41, 0x61, 0x40, 0x00, 0x00, 0x17, 0x61, 0x41, 0x00, 0x00,
	0x0C, 0x61, 0xF3, 0x7F, 0x00, 0x00, 0x10, 0x00, 0x00, 0x10, 0x3F, 0x00, 0x00, 0x00, 0x01, 0x10,
	0x00, 0x00, 0x10, 0x09, 0x00, 0x00, 0x00, 0x01, 0x61, 0x00, 0x00, 0x00, 0x11, 0x00, 0x00, 0x00,
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
	/* padding */
	0x00, 0x00, 0x00,
};

/* 803A31F0-803A3234 0044+00 rc=3 efc=2 .data      __vt__7JUTFont                                               */
void* const __vt__7JUTFont[17] = {
	NULL, /* RTTI */
	NULL,
	(void*)__dt__7JUTFontFv,
	NULL,
	(void*)setGX__7JUTFontFQ28JUtility6TColorQ28JUtility6TColor,
	NULL,
	NULL,
	NULL,
	NULL,
	NULL,
	NULL,
	NULL,
	(void*)getCellWidth__7JUTFontCFv,
	(void*)getCellHeight__7JUTFontCFv,
	NULL,
	NULL,
	NULL,
};

/* 803A3234-803A3248 0014+00 rc=2 efc=1 .data      __vt__26mDoExt_3DlineMatSortPacket                           */
void* const __vt__26mDoExt_3DlineMatSortPacket[5] = {
	NULL, /* RTTI */
	NULL,
	(void*)entry__9J3DPacketFP13J3DDrawBuffer,
	(void*)draw__26mDoExt_3DlineMatSortPacketFv,
	(void*)__dt__26mDoExt_3DlineMatSortPacketFv,
};

/* 803A3248-803A325C 0014+00 rc=0 efc=0 .data      __vt__19mDoExt_3DlineMat1_c                                  */
void* const __vt__19mDoExt_3DlineMat1_c[5] = {
	NULL, /* RTTI */
	NULL,
	(void*)getMaterialID__19mDoExt_3DlineMat1_cFv,
	(void*)setMaterial__19mDoExt_3DlineMat1_cFv,
	(void*)draw__19mDoExt_3DlineMat1_cFv,
};

/* 803A325C-803A3270 0014+00 rc=0 efc=0 .data      __vt__19mDoExt_3DlineMat0_c                                  */
void* const __vt__19mDoExt_3DlineMat0_c[5] = {
	NULL, /* RTTI */
	NULL,
	(void*)getMaterialID__19mDoExt_3DlineMat0_cFv,
	(void*)setMaterial__19mDoExt_3DlineMat0_cFv,
	(void*)draw__19mDoExt_3DlineMat0_cFv,
};

/* 803A3270-803A3284 0014+00 rc=2 efc=0 .data      __vt__19mDoExt_invJntPacket                                  */
void* const __vt__19mDoExt_invJntPacket[5] = {
	NULL, /* RTTI */
	NULL,
	(void*)entry__9J3DPacketFP13J3DDrawBuffer,
	(void*)draw__19mDoExt_invJntPacketFv,
	(void*)__dt__19mDoExt_invJntPacketFv,
};

/* 803A3284-803A32B0 002C+00 rc=2 efc=0 .data      __vt__15mDoExt_McaMorf2                                      */
void* const __vt__15mDoExt_McaMorf2[11] = {
	NULL, /* RTTI */
	NULL,
	(void*)__dt__15mDoExt_McaMorf2Fv,
	(void*)setAnmTransform__10J3DMtxCalcFP15J3DAnmTransform,
	(void*)getAnmTransform__10J3DMtxCalcFv,
	(void*)setAnmTransform__10J3DMtxCalcFUcP15J3DAnmTransform,
	(void*)getAnmTransform__10J3DMtxCalcFUc,
	(void*)setWeight__10J3DMtxCalcFUcf,
	(void*)getWeight__10J3DMtxCalcCFUc,
	(void*)func_8001505C,
	(void*)calc__15mDoExt_McaMorf2Fv,
};

/* 803A32B0-803A32DC 002C+00 rc=2 efc=0 .data      __vt__16mDoExt_McaMorfSO                                     */
void* const __vt__16mDoExt_McaMorfSO[11] = {
	NULL, /* RTTI */
	NULL,
	(void*)__dt__16mDoExt_McaMorfSOFv,
	(void*)setAnmTransform__10J3DMtxCalcFP15J3DAnmTransform,
	(void*)getAnmTransform__10J3DMtxCalcFv,
	(void*)setAnmTransform__10J3DMtxCalcFUcP15J3DAnmTransform,
	(void*)getAnmTransform__10J3DMtxCalcFUc,
	(void*)setWeight__10J3DMtxCalcFUcf,
	(void*)getWeight__10J3DMtxCalcCFUc,
	(void*)func_8001505C,
	(void*)calc__16mDoExt_McaMorfSOFv,
};

/* 803A32DC-803A32FC 0020+00 rc=1 efc=0 .data      __vt__15mDoExt_zelAnime                                      */
void* const __vt__15mDoExt_zelAnime[8] = {
	NULL, /* RTTI */
	NULL,
	(void*)framework__14Z2SoundObjBaseFUlSc,
	(void*)dispose__14Z2SoundObjBaseFv,
	(void*)stopOK__14Z2SoundObjBaseFR17Z2SoundHandlePool,
	(void*)init__15Z2SoundObjAnimeFP3VecUc,
	(void*)startSound__14Z2SoundObjBaseF10JAISoundIDUlSc,
	(void*)startLevelSound__14Z2SoundObjBaseF10JAISoundIDUlSc,
};

/* 803A32FC-803A3328 002C+00 rc=2 efc=0 .data      __vt__14mDoExt_McaMorf                                       */
void* const __vt__14mDoExt_McaMorf[11] = {
	NULL, /* RTTI */
	NULL,
	(void*)__dt__14mDoExt_McaMorfFv,
	(void*)setAnmTransform__10J3DMtxCalcFP15J3DAnmTransform,
	(void*)getAnmTransform__10J3DMtxCalcFv,
	(void*)setAnmTransform__10J3DMtxCalcFUcP15J3DAnmTransform,
	(void*)getAnmTransform__10J3DMtxCalcFUc,
	(void*)setWeight__10J3DMtxCalcFUcf,
	(void*)getWeight__10J3DMtxCalcCFUc,
	(void*)func_8001505C,
	(void*)calc__14mDoExt_McaMorfFv,
};

/* 803A3328-803A3354 002C+00 rc=2 efc=0 .data      __vt__13mDoExt_morf_c                                        */
void* const __vt__13mDoExt_morf_c[11] = {
	NULL, /* RTTI */
	NULL,
	(void*)__dt__13mDoExt_morf_cFv,
	(void*)setAnmTransform__10J3DMtxCalcFP15J3DAnmTransform,
	(void*)getAnmTransform__10J3DMtxCalcFv,
	(void*)setAnmTransform__10J3DMtxCalcFUcP15J3DAnmTransform,
	(void*)getAnmTransform__10J3DMtxCalcFUc,
	(void*)setWeight__10J3DMtxCalcFUcf,
	(void*)getWeight__10J3DMtxCalcCFUc,
	(void*)func_8001505C,
	(void*)func_80015084,
};

/* 803A3354-803A3360 000C+00 rc=33 efc=30 .data      __vt__12J3DFrameCtrl                                         */
void* const __vt__12J3DFrameCtrl[3] = {
	NULL, /* RTTI */
	NULL,
	(void*)__dt__12J3DFrameCtrlFv,
};

/* 803A3360-803A338C 002C+00 rc=7 efc=2 .data      __vt__73J3DMtxCalcNoAnm<27J3DMtxCalcCalcTransformMaya,24J3DMtxCalcJ3DSysInitMaya> */
void* const data_803A3360[11] = {
	NULL, /* RTTI */
	NULL,
	(void*)func_8000FA20,
	(void*)setAnmTransform__10J3DMtxCalcFP15J3DAnmTransform,
	(void*)getAnmTransform__10J3DMtxCalcFv,
	(void*)setAnmTransform__10J3DMtxCalcFUcP15J3DAnmTransform,
	(void*)getAnmTransform__10J3DMtxCalcFUc,
	(void*)setWeight__10J3DMtxCalcFUcf,
	(void*)getWeight__10J3DMtxCalcCFUc,
	(void*)func_8001505C,
	(void*)func_80015084,
};

/* 803A338C-803A33B8 002C+00 rc=10 efc=4 .data      __vt__19J3DMtxCalcNoAnmBase                                  */
void* const __vt__19J3DMtxCalcNoAnmBase[11] = {
	NULL, /* RTTI */
	NULL,
	(void*)__dt__19J3DMtxCalcNoAnmBaseFv,
	(void*)setAnmTransform__10J3DMtxCalcFP15J3DAnmTransform,
	(void*)getAnmTransform__10J3DMtxCalcFv,
	(void*)setAnmTransform__10J3DMtxCalcFUcP15J3DAnmTransform,
	(void*)getAnmTransform__10J3DMtxCalcFUc,
	(void*)setWeight__10J3DMtxCalcFUcf,
	(void*)getWeight__10J3DMtxCalcCFUc,
	NULL,
	NULL,
};

/* 803A33B8-803A33E4 002C+00 rc=2 efc=1 .data      __vt__28mDoExt_MtxCalcAnmBlendTblOld                         */
void* const __vt__28mDoExt_MtxCalcAnmBlendTblOld[11] = {
	NULL, /* RTTI */
	NULL,
	(void*)__dt__28mDoExt_MtxCalcAnmBlendTblOldFv,
	(void*)setAnmTransform__10J3DMtxCalcFP15J3DAnmTransform,
	(void*)getAnmTransform__10J3DMtxCalcFv,
	(void*)setAnmTransform__10J3DMtxCalcFUcP15J3DAnmTransform,
	(void*)getAnmTransform__10J3DMtxCalcFUc,
	(void*)setWeight__10J3DMtxCalcFUcf,
	(void*)getWeight__10J3DMtxCalcCFUc,
	(void*)func_8001505C,
	(void*)calc__28mDoExt_MtxCalcAnmBlendTblOldFv,
};

/* 803A33E4-803A3410 002C+00 rc=3 efc=1 .data      __vt__25mDoExt_MtxCalcAnmBlendTbl                            */
void* const __vt__25mDoExt_MtxCalcAnmBlendTbl[11] = {
	NULL, /* RTTI */
	NULL,
	(void*)__dt__25mDoExt_MtxCalcAnmBlendTblFv,
	(void*)setAnmTransform__10J3DMtxCalcFP15J3DAnmTransform,
	(void*)getAnmTransform__10J3DMtxCalcFv,
	(void*)setAnmTransform__10J3DMtxCalcFUcP15J3DAnmTransform,
	(void*)getAnmTransform__10J3DMtxCalcFUc,
	(void*)setWeight__10J3DMtxCalcFUcf,
	(void*)getWeight__10J3DMtxCalcCFUc,
	(void*)func_8001505C,
	(void*)calc__25mDoExt_MtxCalcAnmBlendTblFv,
};

/* 803A3410-803A343C 002C+00 rc=2 efc=0 .data      __vt__114J3DMtxCalcAnimation<64J3DMtxCalcAnimationAdaptorDefault<27J3DMtxCalcCalcTransformMaya>,24J3DMtxCalcJ3DSysInitMaya> */
void* const data_803A3410[11] = {
	NULL, /* RTTI */
	NULL,
	(void*)func_80014FC8,
	(void*)func_8000D8E4,
	(void*)getAnmTransform__17J3DMtxCalcAnmBaseFv,
	(void*)setAnmTransform__10J3DMtxCalcFUcP15J3DAnmTransform,
	(void*)getAnmTransform__10J3DMtxCalcFUc,
	(void*)setWeight__10J3DMtxCalcFUcf,
	(void*)getWeight__10J3DMtxCalcCFUc,
	(void*)func_80015034,
	(void*)func_800150AC,
};

/* 803A343C-803A3468 002C+00 rc=3 efc=0 .data      __vt__17J3DMtxCalcAnmBase                                    */
void* const __vt__17J3DMtxCalcAnmBase[11] = {
	NULL, /* RTTI */
	NULL,
	(void*)__dt__17J3DMtxCalcAnmBaseFv,
	(void*)setAnmTransform__17J3DMtxCalcAnmBaseFP15J3DAnmTransform,
	(void*)getAnmTransform__17J3DMtxCalcAnmBaseFv,
	(void*)setAnmTransform__10J3DMtxCalcFUcP15J3DAnmTransform,
	(void*)getAnmTransform__10J3DMtxCalcFUc,
	(void*)setWeight__10J3DMtxCalcFUcf,
	(void*)getWeight__10J3DMtxCalcCFUc,
	NULL,
	NULL,
};

/* 803A3468-803A3498 002C+04 rc=14 efc=4 .data      __vt__10J3DMtxCalc                                           */
void* const __vt__10J3DMtxCalc[12] = {
	NULL, /* RTTI */
	NULL,
	(void*)__dt__10J3DMtxCalcFv,
	(void*)setAnmTransform__10J3DMtxCalcFP15J3DAnmTransform,
	(void*)getAnmTransform__10J3DMtxCalcFv,
	(void*)setAnmTransform__10J3DMtxCalcFUcP15J3DAnmTransform,
	(void*)getAnmTransform__10J3DMtxCalcFUc,
	(void*)setWeight__10J3DMtxCalcFUcf,
	(void*)getWeight__10J3DMtxCalcCFUc,
	NULL,
	NULL,
	/* padding */
	NULL,
};

/* 8000D7DC-8000D8E4 0108+00 rc=18 efc=18 .text      init__13mDoExt_bckAnmFP15J3DAnmTransformiifssb               */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void mDoExt_bckAnm::init(J3DAnmTransform* field_0, int field_1, int field_2, f32 field_3, s16 field_4, s16 field_5, bool field_6) {
	nofralloc
#include "asm/m_Do/m_Do_ext/init__13mDoExt_bckAnmFP15J3DAnmTransformiifssb.s"
}
#pragma pop


/* 8000D8E4-8000D8EC 0008+00 rc=1 efc=0 .text      setAnmTransform__114J3DMtxCalcAnimation<64J3DMtxCalcAnimationAdaptorDefault<27J3DMtxCalcCalcTransformMaya>,24J3DMtxCalcJ3DSysInitMaya>FP15J3DAnmTransform */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
extern "C" asm static void func_8000D8E4() {
	nofralloc
#include "asm/m_Do/m_Do_ext/func_8000D8E4.s"
}
#pragma pop


/* 8000D8EC-8000D948 005C+00 rc=1 efc=0 .text      __dt__17J3DMtxCalcAnmBaseFv                                  */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm J3DMtxCalcAnmBase::~J3DMtxCalcAnmBase() {
	nofralloc
#include "asm/m_Do/m_Do_ext/__dt__17J3DMtxCalcAnmBaseFv.s"
}
#pragma pop


/* 8000D948-8000D990 0048+00 rc=1 efc=0 .text      __dt__10J3DMtxCalcFv                                         */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm J3DMtxCalc::~J3DMtxCalc() {
	nofralloc
#include "asm/m_Do/m_Do_ext/__dt__10J3DMtxCalcFv.s"
}
#pragma pop


/* 8000D990-8000D9CC 003C+00 rc=5 efc=5 .text      changeBckOnly__13mDoExt_bckAnmFP15J3DAnmTransform            */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void mDoExt_bckAnm::changeBckOnly(J3DAnmTransform* field_0) {
	nofralloc
#include "asm/m_Do/m_Do_ext/changeBckOnly__13mDoExt_bckAnmFP15J3DAnmTransform.s"
}
#pragma pop


/* 8000D9CC-8000D9E8 001C+00 rc=11 efc=11 .text      entry__13mDoExt_bckAnmFP12J3DModelDataf                      */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void mDoExt_bckAnm::entry(J3DModelData* field_0, f32 field_1) {
	nofralloc
#include "asm/m_Do/m_Do_ext/entry__13mDoExt_bckAnmFP12J3DModelDataf.s"
}
#pragma pop


/* 8000D9E8-8000DA08 0020+00 rc=1 efc=1 .text      entryJoint__13mDoExt_bckAnmFP12J3DModelDataUsf               */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void mDoExt_bckAnm::entryJoint(J3DModelData* field_0, u16 field_1, f32 field_2) {
	nofralloc
#include "asm/m_Do/m_Do_ext/entryJoint__13mDoExt_bckAnmFP12J3DModelDataUsf.s"
}
#pragma pop


/* 8000DA08-8000DAA8 00A0+00 rc=1 efc=1 .text      init__13mDoExt_blkAnmFP13J3DDeformDataP13J3DAnmClusteriifss  */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void mDoExt_blkAnm::init(J3DDeformData* field_0, J3DAnmCluster* field_1, int field_2, int field_3, f32 field_4, s16 field_5, s16 field_6) {
	nofralloc
#include "asm/m_Do/m_Do_ext/init__13mDoExt_blkAnmFP13J3DDeformDataP13J3DAnmClusteriifss.s"
}
#pragma pop


/* 8000DAA8-8000DB10 0068+00 rc=3 efc=0 .text      mDoExt_changeMaterial__FP8J3DModel                           */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm static void mDoExt_changeMaterial(J3DModel* field_0) {
	nofralloc
#include "asm/m_Do/m_Do_ext/mDoExt_changeMaterial__FP8J3DModel.s"
}
#pragma pop


/* 8000DB10-8000DBC8 00B8+00 rc=0 efc=0 .text      mDoExt_modelTexturePatch__FP12J3DModelData                   */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void mDoExt_modelTexturePatch(J3DModelData* field_0) {
	nofralloc
#include "asm/m_Do/m_Do_ext/mDoExt_modelTexturePatch__FP12J3DModelData.s"
}
#pragma pop


/* 8000DBC8-8000DBCC 0004+00 rc=2 efc=2 .text      patchTexNoAndTexCoordScale__11J3DTevBlockFv                  */
void J3DTevBlock::patchTexNoAndTexCoordScale() {
	/* empty function */
}


/* 8000DBCC-8000DBD0 0004+00 rc=6 efc=6 .text      patch__10J3DPEBlockFv                                        */
void J3DPEBlock::patch() {
	/* empty function */
}


/* 8000DBD0-8000DBD4 0004+00 rc=2 efc=2 .text      patchLight__13J3DColorBlockFv                                */
void J3DColorBlock::patchLight() {
	/* empty function */
}


/* 8000DBD4-8000DBD8 0004+00 rc=2 efc=2 .text      patch__11J3DTevBlockFv                                       */
void J3DTevBlock::patch() {
	/* empty function */
}


/* 8000DBD8-8000DC2C 0054+00 rc=3 efc=0 .text      mDoExt_modelDiff__FP8J3DModel                                */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm static void mDoExt_modelDiff(J3DModel* field_0) {
	nofralloc
#include "asm/m_Do/m_Do_ext/mDoExt_modelDiff__FP8J3DModel.s"
}
#pragma pop


/* 8000DC2C-8000DCC4 0098+00 rc=0 efc=0 .text      mDoExt_modelUpdate__FP8J3DModel                              */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void mDoExt_modelUpdate(J3DModel* field_0) {
	nofralloc
#include "asm/m_Do/m_Do_ext/mDoExt_modelUpdate__FP8J3DModel.s"
}
#pragma pop


/* 8000DCC4-8000DD64 00A0+00 rc=13 efc=12 .text      mDoExt_modelUpdateDL__FP8J3DModel                            */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void mDoExt_modelUpdateDL(J3DModel* field_0) {
	nofralloc
#include "asm/m_Do/m_Do_ext/mDoExt_modelUpdateDL__FP8J3DModel.s"
}
#pragma pop


/* 8000DD64-8000DDF0 008C+00 rc=7 efc=3 .text      mDoExt_modelEntryDL__FP8J3DModel                             */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void mDoExt_modelEntryDL(J3DModel* field_0) {
	nofralloc
#include "asm/m_Do/m_Do_ext/mDoExt_modelEntryDL__FP8J3DModel.s"
}
#pragma pop


/* 8000DDF0-8000DE8C 009C+00 rc=0 efc=0 .text      mDoExt_btkAnmRemove__FP12J3DModelData                        */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void mDoExt_btkAnmRemove(J3DModelData* field_0) {
	nofralloc
#include "asm/m_Do/m_Do_ext/mDoExt_btkAnmRemove__FP12J3DModelData.s"
}
#pragma pop


/* 8000DE8C-8000DF3C 00B0+00 rc=0 efc=0 .text      mDoExt_brkAnmRemove__FP12J3DModelData                        */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void mDoExt_brkAnmRemove(J3DModelData* field_0) {
	nofralloc
#include "asm/m_Do/m_Do_ext/mDoExt_brkAnmRemove__FP12J3DModelData.s"
}
#pragma pop


/* 8000DF3C-8000DF44 0008+00 rc=5 efc=5 .text      getZCompLoc__10J3DPEBlockCFv                                 */
bool J3DPEBlock::getZCompLoc() const {
	return false;
}


/* 8000DF44-8000DF4C 0008+00 rc=5 efc=5 .text      getZMode__10J3DPEBlockFv                                     */
bool J3DPEBlock::getZMode() {
	return false;
}


/* 8000DF4C-8000DF54 0008+00 rc=5 efc=5 .text      getBlend__10J3DPEBlockFv                                     */
bool J3DPEBlock::getBlend() {
	return false;
}


/* 8000DF54-8000DF5C 0008+00 rc=5 efc=5 .text      getAlphaComp__10J3DPEBlockFv                                 */
bool J3DPEBlock::getAlphaComp() {
	return false;
}


/* 8000DF5C-8000DF64 0008+00 rc=6 efc=6 .text      getFog__10J3DPEBlockFv                                       */
bool J3DPEBlock::getFog() {
	return false;
}


/* 8000DF64-8000DF6C 0008+00 rc=2 efc=2 .text      getIndTexCoordScale__11J3DIndBlockFUl                        */
bool J3DIndBlock::getIndTexCoordScale(u32 field_0) {
	return false;
}


/* 8000DF6C-8000DF74 0008+00 rc=2 efc=2 .text      getIndTexMtx__11J3DIndBlockFUl                               */
bool J3DIndBlock::getIndTexMtx(u32 field_0) {
	return false;
}


/* 8000DF74-8000DF7C 0008+00 rc=2 efc=2 .text      getIndTexOrder__11J3DIndBlockFUl                             */
bool J3DIndBlock::getIndTexOrder(u32 field_0) {
	return false;
}


/* 8000DF7C-8000DF84 0008+00 rc=2 efc=2 .text      getIndTexStageNum__11J3DIndBlockCFv                          */
bool J3DIndBlock::getIndTexStageNum() const {
	return false;
}


/* 8000DF84-8000DF8C 0008+00 rc=2 efc=2 .text      getIndTevStage__11J3DTevBlockFUl                             */
bool J3DTevBlock::getIndTevStage(u32 field_0) {
	return false;
}


/* 8000DF8C-8000DF94 0008+00 rc=2 efc=2 .text      getTevStage__11J3DTevBlockFUl                                */
bool J3DTevBlock::getTevStage(u32 field_0) {
	return false;
}


/* 8000DF94-8000DFA0 000C+00 rc=2 efc=2 .text      getTexNo__11J3DTevBlockCFUl                                  */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void J3DTevBlock::getTexNo(u32 field_0) const {
	nofralloc
#include "asm/m_Do/m_Do_ext/getTexNo__11J3DTevBlockCFUl.s"
}
#pragma pop


/* 8000DFA0-8000DFA8 0008+00 rc=4 efc=4 .text      getTevSwapModeTable__11J3DTevBlockFUl                        */
bool J3DTevBlock::getTevSwapModeTable(u32 field_0) {
	return false;
}


/* 8000DFA8-8000DFB0 0008+00 rc=4 efc=4 .text      getTevKAlphaSel__11J3DTevBlockFUl                            */
bool J3DTevBlock::getTevKAlphaSel(u32 field_0) {
	return false;
}


/* 8000DFB0-8000DFB8 0008+00 rc=3 efc=3 .text      getTevKColorSel__11J3DTevBlockFUl                            */
bool J3DTevBlock::getTevKColorSel(u32 field_0) {
	return false;
}


/* 8000DFB8-8000DFC0 0008+00 rc=2 efc=2 .text      getTevOrder__11J3DTevBlockFUl                                */
bool J3DTevBlock::getTevOrder(u32 field_0) {
	return false;
}


/* 8000DFC0-8000DFC8 0008+00 rc=3 efc=3 .text      getTevKColor__11J3DTevBlockFUl                               */
bool J3DTevBlock::getTevKColor(u32 field_0) {
	return false;
}


/* 8000DFC8-8000DFD0 0008+00 rc=3 efc=3 .text      getTevColor__11J3DTevBlockFUl                                */
bool J3DTevBlock::getTevColor(u32 field_0) {
	return false;
}


/* 8000DFD0-8000DFD8 0008+00 rc=2 efc=2 .text      getTevStageNum__11J3DTevBlockCFv                             */
bool J3DTevBlock::getTevStageNum() const {
	return true;
}


/* 8000DFD8-8000DFE0 0008+00 rc=2 efc=2 .text      getTexMtx__14J3DTexGenBlockFUl                               */
bool J3DTexGenBlock::getTexMtx(u32 field_0) {
	return false;
}


/* 8000DFE0-8000DFE8 0008+00 rc=2 efc=2 .text      getTexCoord__14J3DTexGenBlockFUl                             */
bool J3DTexGenBlock::getTexCoord(u32 field_0) {
	return false;
}


/* 8000DFE8-8000DFF0 0008+00 rc=2 efc=2 .text      getTexGenNum__14J3DTexGenBlockCFv                            */
bool J3DTexGenBlock::getTexGenNum() const {
	return false;
}


/* 8000DFF0-8000DFF8 0008+00 rc=3 efc=3 .text      getAmbColor__13J3DColorBlockFUl                              */
bool J3DColorBlock::getAmbColor(u32 field_0) {
	return false;
}


/* 8000DFF8-8000E000 0008+00 rc=2 efc=2 .text      getColorChan__13J3DColorBlockFUl                             */
bool J3DColorBlock::getColorChan(u32 field_0) {
	return false;
}


/* 8000E000-8000E008 0008+00 rc=2 efc=2 .text      getMatColor__13J3DColorBlockFUl                              */
bool J3DColorBlock::getMatColor(u32 field_0) {
	return false;
}


/* 8000E008-8000E010 0008+00 rc=2 efc=2 .text      getColorChanNum__13J3DColorBlockCFv                          */
bool J3DColorBlock::getColorChanNum() const {
	return false;
}


/* 8000E010-8000E014 0004+00 rc=5 efc=5 .text      setZCompLoc__10J3DPEBlockFUc                                 */
void J3DPEBlock::setZCompLoc(u8 field_0) {
	/* empty function */
}


/* 8000E014-8000E018 0004+00 rc=5 efc=5 .text      setZMode__10J3DPEBlockF8J3DZMode                             */
void J3DPEBlock::setZMode(J3DZMode field_0) {
	/* empty function */
}


/* 8000E018-8000E01C 0004+00 rc=5 efc=5 .text      setBlend__10J3DPEBlockFRC8J3DBlend                           */
void J3DPEBlock::setBlend(J3DBlend const& field_0) {
	/* empty function */
}


/* 8000E01C-8000E020 0004+00 rc=5 efc=5 .text      setAlphaComp__10J3DPEBlockFRC12J3DAlphaComp                  */
void J3DPEBlock::setAlphaComp(J3DAlphaComp const& field_0) {
	/* empty function */
}


/* 8000E020-8000E024 0004+00 rc=2 efc=2 .text      setIndTexCoordScale__11J3DIndBlockFUl19J3DIndTexCoordScale   */
void J3DIndBlock::setIndTexCoordScale(u32 field_0, J3DIndTexCoordScale field_1) {
	/* empty function */
}


/* 8000E024-8000E060 003C+00 rc=2 efc=2 .text      __dt__19J3DIndTexCoordScaleFv                                */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm J3DIndTexCoordScale::~J3DIndTexCoordScale() {
	nofralloc
#include "asm/m_Do/m_Do_ext/__dt__19J3DIndTexCoordScaleFv.s"
}
#pragma pop


/* 8000E060-8000E064 0004+00 rc=2 efc=2 .text      setIndTexMtx__11J3DIndBlockFUl12J3DIndTexMtx                 */
void J3DIndBlock::setIndTexMtx(u32 field_0, J3DIndTexMtx field_1) {
	/* empty function */
}


/* 8000E064-8000E0A0 003C+00 rc=2 efc=2 .text      __dt__12J3DIndTexMtxFv                                       */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm J3DIndTexMtx::~J3DIndTexMtx() {
	nofralloc
#include "asm/m_Do/m_Do_ext/__dt__12J3DIndTexMtxFv.s"
}
#pragma pop


/* 8000E0A0-8000E0A4 0004+00 rc=2 efc=2 .text      setIndTexStageNum__11J3DIndBlockFUc                          */
void J3DIndBlock::setIndTexStageNum(u8 field_0) {
	/* empty function */
}


/* 8000E0A4-8000E0A8 0004+00 rc=2 efc=2 .text      setIndTevStage__11J3DTevBlockFUl14J3DIndTevStage             */
void J3DTevBlock::setIndTevStage(u32 field_0, J3DIndTevStage field_1) {
	/* empty function */
}


/* 8000E0A8-8000E0AC 0004+00 rc=2 efc=2 .text      setTevStage__11J3DTevBlockFUl11J3DTevStage                   */
void J3DTevBlock::setTevStage(u32 field_0, J3DTevStage field_1) {
	/* empty function */
}


/* 8000E0AC-8000E0B0 0004+00 rc=2 efc=2 .text      setTexNo__11J3DTevBlockFUlUs                                 */
void J3DTevBlock::setTexNo(u32 field_0, u16 field_1) {
	/* empty function */
}


/* 8000E0B0-8000E0B4 0004+00 rc=4 efc=4 .text      setTevSwapModeTable__11J3DTevBlockFUl19J3DTevSwapModeTable   */
void J3DTevBlock::setTevSwapModeTable(u32 field_0, J3DTevSwapModeTable field_1) {
	/* empty function */
}


/* 8000E0B4-8000E0B8 0004+00 rc=4 efc=4 .text      setTevKAlphaSel__11J3DTevBlockFUlUc                          */
void J3DTevBlock::setTevKAlphaSel(u32 field_0, u8 field_1) {
	/* empty function */
}


/* 8000E0B8-8000E0BC 0004+00 rc=3 efc=3 .text      setTevKColorSel__11J3DTevBlockFUlUc                          */
void J3DTevBlock::setTevKColorSel(u32 field_0, u8 field_1) {
	/* empty function */
}


/* 8000E0BC-8000E0C0 0004+00 rc=2 efc=2 .text      setTevOrder__11J3DTevBlockFUl11J3DTevOrder                   */
void J3DTevBlock::setTevOrder(u32 field_0, J3DTevOrder field_1) {
	/* empty function */
}


/* 8000E0C0-8000E0C4 0004+00 rc=3 efc=3 .text      setTevKColor__11J3DTevBlockFUl10J3DGXColor                   */
void J3DTevBlock::setTevKColor(u32 field_0, J3DGXColor field_1) {
	/* empty function */
}


/* 8000E0C4-8000E0C8 0004+00 rc=3 efc=3 .text      setTevColor__11J3DTevBlockFUl13J3DGXColorS10                 */
void J3DTevBlock::setTevColor(u32 field_0, J3DGXColorS10 field_1) {
	/* empty function */
}


/* 8000E0C8-8000E0CC 0004+00 rc=2 efc=2 .text      setTevStageNum__11J3DTevBlockFUc                             */
void J3DTevBlock::setTevStageNum(u8 field_0) {
	/* empty function */
}


/* 8000E0CC-8000E0D0 0004+00 rc=2 efc=2 .text      setTexCoord__14J3DTexGenBlockFUlPC11J3DTexCoord              */
void J3DTexGenBlock::setTexCoord(u32 field_0, J3DTexCoord const* field_1) {
	/* empty function */
}


/* 8000E0D0-8000E0D4 0004+00 rc=2 efc=2 .text      setTexGenNum__14J3DTexGenBlockFUl                            */
void J3DTexGenBlock::setTexGenNum(u32 field_0) {
	/* empty function */
}


/* 8000E0D4-8000E0D8 0004+00 rc=3 efc=3 .text      setAmbColor__13J3DColorBlockFUl10J3DGXColor                  */
void J3DColorBlock::setAmbColor(u32 field_0, J3DGXColor field_1) {
	/* empty function */
}


/* 8000E0D8-8000E0DC 0004+00 rc=2 efc=2 .text      setColorChan__13J3DColorBlockFUlRC12J3DColorChan             */
void J3DColorBlock::setColorChan(u32 field_0, J3DColorChan const& field_1) {
	/* empty function */
}


/* 8000E0DC-8000E0E0 0004+00 rc=2 efc=2 .text      setMatColor__13J3DColorBlockFUl10J3DGXColor                  */
void J3DColorBlock::setMatColor(u32 field_0, J3DGXColor field_1) {
	/* empty function */
}


/* 8000E0E0-8000E0E4 0004+00 rc=2 efc=2 .text      setColorChanNum__13J3DColorBlockFUc                          */
void J3DColorBlock::setColorChanNum(u8 field_0) {
	/* empty function */
}


/* 8000E0E4-8000E0F0 000C+00 rc=1 efc=1 .text      __ct__19J3DIndTexCoordScaleFv                                */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm J3DIndTexCoordScale::J3DIndTexCoordScale() {
	nofralloc
#include "asm/m_Do/m_Do_ext/__ct__19J3DIndTexCoordScaleFv.s"
}
#pragma pop


/* 8000E0F0-8000E128 0038+00 rc=1 efc=1 .text      __ct__12J3DIndTexMtxFv                                       */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm J3DIndTexMtx::J3DIndTexMtx() {
	nofralloc
#include "asm/m_Do/m_Do_ext/__ct__12J3DIndTexMtxFv.s"
}
#pragma pop


/* 8000E128-8000E134 000C+00 rc=1 efc=1 .text      __ct__14J3DIndTexOrderFv                                     */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm J3DIndTexOrder::J3DIndTexOrder() {
	nofralloc
#include "asm/m_Do/m_Do_ext/__ct__14J3DIndTexOrderFv.s"
}
#pragma pop


/* 8000E134-8000E140 000C+00 rc=1 efc=1 .text      __ct__19J3DTevSwapModeTableFv                                */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm J3DTevSwapModeTable::J3DTevSwapModeTable() {
	nofralloc
#include "asm/m_Do/m_Do_ext/__ct__19J3DTevSwapModeTableFv.s"
}
#pragma pop


/* 8000E140-8000E14C 000C+00 rc=2 efc=2 .text      __ct__11J3DTevOrderFv                                        */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm J3DTevOrder::J3DTevOrder() {
	nofralloc
#include "asm/m_Do/m_Do_ext/__ct__11J3DTevOrderFv.s"
}
#pragma pop


/* 8000E14C-8000E230 00E4+00 rc=2 efc=2 .text      __ct__14J3DIndTevStageFv                                     */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm J3DIndTevStage::J3DIndTevStage() {
	nofralloc
#include "asm/m_Do/m_Do_ext/__ct__14J3DIndTevStageFv.s"
}
#pragma pop


/* 8000E230-8000E298 0068+00 rc=4 efc=4 .text      __ct__11J3DTevStageFv                                        */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm J3DTevStage::J3DTevStage() {
	nofralloc
#include "asm/m_Do/m_Do_ext/__ct__11J3DTevStageFv.s"
}
#pragma pop


/* 8000E298-8000E460 01C8+00 rc=2 efc=1 .text      setTevStageInfo__11J3DTevStageFRC15J3DTevStageInfo           */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void J3DTevStage::setTevStageInfo(J3DTevStageInfo const& field_0) {
	nofralloc
#include "asm/m_Do/m_Do_ext/setTevStageInfo__11J3DTevStageFRC15J3DTevStageInfo.s"
}
#pragma pop


/* 8000E460-8000E464 0004+00 rc=3 efc=3 .text      __ct__13J3DGXColorS10Fv                                      */
J3DGXColorS10::J3DGXColorS10() {
	/* empty function */
}


/* 8000E464-8000E47C 0018+00 rc=2 efc=2 .text      __ct__11J3DTexCoordFv                                        */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm J3DTexCoord::J3DTexCoord() {
	nofralloc
#include "asm/m_Do/m_Do_ext/__ct__11J3DTexCoordFv.s"
}
#pragma pop


/* 8000E47C-8000E538 00BC+00 rc=1 efc=1 .text      __ct__12J3DColorChanFv                                       */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm J3DColorChan::J3DColorChan() {
	nofralloc
#include "asm/m_Do/m_Do_ext/__ct__12J3DColorChanFv.s"
}
#pragma pop


/* 8000E538-8000E53C 0004+00 rc=3 efc=3 .text      __ct__10J3DGXColorFv                                         */
J3DGXColor::J3DGXColor() {
	/* empty function */
}


/* 8000E53C-8000E5F8 00BC+00 rc=0 efc=0 .text      create__21mDoExt_invisibleModelFP8J3DModelUc                 */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void mDoExt_invisibleModel::create(J3DModel* field_0, u8 field_1) {
	nofralloc
#include "asm/m_Do/m_Do_ext/create__21mDoExt_invisibleModelFP8J3DModelUc.s"
}
#pragma pop


/* 8000E5F8-8000E654 005C+00 rc=2 efc=0 .text      __dt__19mDoExt_invJntPacketFv                                */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm mDoExt_invJntPacket::~mDoExt_invJntPacket() {
	nofralloc
#include "asm/m_Do/m_Do_ext/__dt__19mDoExt_invJntPacketFv.s"
}
#pragma pop


/* 8000E654-8000E680 002C+00 rc=1 efc=0 .text      __ct__19mDoExt_invJntPacketFv                                */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm mDoExt_invJntPacket::mDoExt_invJntPacket() {
	nofralloc
#include "asm/m_Do/m_Do_ext/__ct__19mDoExt_invJntPacketFv.s"
}
#pragma pop


/* 8000E680-8000E6C8 0048+00 rc=1 efc=1 .text      __dt__9J3DPacketFv                                           */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm J3DPacket::~J3DPacket() {
	nofralloc
#include "asm/m_Do/m_Do_ext/__dt__9J3DPacketFv.s"
}
#pragma pop


/* 8000E6C8-8000E7C0 00F8+00 rc=1 efc=0 .text      entryJoint__21mDoExt_invisibleModelFP4cXyz                   */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void mDoExt_invisibleModel::entryJoint(cXyz* field_0) {
	nofralloc
#include "asm/m_Do/m_Do_ext/entryJoint__21mDoExt_invisibleModelFP4cXyz.s"
}
#pragma pop


/* 8000E7C0-8000E834 0074+00 rc=0 efc=0 .text      entryDL__21mDoExt_invisibleModelFP4cXyz                      */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void mDoExt_invisibleModel::entryDL(cXyz* field_0) {
	nofralloc
#include "asm/m_Do/m_Do_ext/entryDL__21mDoExt_invisibleModelFP4cXyz.s"
}
#pragma pop


/* 8000E834-8000EA80 024C+00 rc=0 efc=0 .text      mDoExt_setupShareTexture__FP12J3DModelDataP12J3DModelData    */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void mDoExt_setupShareTexture(J3DModelData* field_0, J3DModelData* field_1) {
	nofralloc
#include "asm/m_Do/m_Do_ext/mDoExt_setupShareTexture__FP12J3DModelDataP12J3DModelData.s"
}
#pragma pop


/* ############################################################################################## */
/* 803740C0-803740D4 0012+02 rc=1 efc=0 .rodata    fontdata$8224                                                */
SECTION_RODATA const u8 data_803740C0[20] = {
	0x72, 0x6F, 0x64, 0x61, 0x6E, 0x5F, 0x62, 0x5F, 0x32, 0x34, 0x5F, 0x32, 0x32, 0x2E, 0x62, 0x66,
	0x6E, 0x00,
	/* padding */
	0x00, 0x00,
};

/* 803740D4-803740E8 0014+00 rc=1 efc=0 .rodata    fontdata$8253                                                */
SECTION_RODATA const u8 data_803740D4[20] = {
	0x72, 0x65, 0x69, 0x73, 0x68, 0x6F, 0x74, 0x61, 0x69, 0x5F, 0x32, 0x34, 0x5F, 0x32, 0x32, 0x2E,
	0x62, 0x66, 0x6E, 0x00,
};

/* 803740E8-803740FC 0014+00 rc=1 efc=0 .rodata    fontdata$8287                                                */
SECTION_RODATA const u8 data_803740E8[20] = {
	0x72, 0x65, 0x69, 0x73, 0x68, 0x6F, 0x74, 0x61, 0x69, 0x5F, 0x32, 0x34, 0x5F, 0x32, 0x32, 0x2E,
	0x62, 0x66, 0x6E, 0x00,
};

/* 803740FC-80374198 009C+00 rc=3 efc=0 .rodata    @stringBase0                                                 */
#pragma push
#pragma force_active on
#pragma section ".dead"
// MWCC ignores mapping of some japanese characters using the 
// byte 0x5C (ASCII '\'). This is why this string is hex-encoded.
SECTION_DEAD char* const stringBase_803740FC = "\x83\x5C\x83\x8A\x83\x62\x83\x68\x83\x71\x81\x5B\x83\x76\x82\xBF\x82\xE1\x82\xA4\x82\xAA\x82\xC8\x81\x49\x0A";
SECTION_DEAD char* const stringBase_80374118 = "%s.bti";
SECTION_DEAD char* const stringBase_8037411F = 
    "親ヒープがExpでないのでアジャストできません %08x %08x\n";
SECTION_DEAD char* const stringBase_80374156 = "adjustSize失敗 %08x\n";
SECTION_DEAD char* const stringBase_8037416B = "\nキャッシュフォントクラス作成に失敗しました\n";
#pragma pop

/* 8000EA80-8000ECC0 0240+00 rc=0 efc=0 .text      mDoExt_setupStageTexture__FP12J3DModelData                   */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void mDoExt_setupStageTexture(J3DModelData* field_0) {
	nofralloc
#include "asm/m_Do/m_Do_ext/mDoExt_setupStageTexture__FP12J3DModelData.s"
}
#pragma pop


/* ############################################################################################## */
/* 80450C20-80450C24 0004+00 rc=2 efc=0 .sbss      AssertHeap                                                   */
u8 AssertHeap[4];

/* 8000ECC0-8000ECE4 0024+00 rc=1 efc=1 .text      mDoExt_createAssertHeap__FP7JKRHeap                          */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void mDoExt_createAssertHeap(JKRHeap* field_0) {
	nofralloc
#include "asm/m_Do/m_Do_ext/mDoExt_createAssertHeap__FP7JKRHeap.s"
}
#pragma pop


/* 8000ECE4-8000ECEC 0008+00 rc=3 efc=3 .text      mDoExt_getAssertHeap__Fv                                     */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void mDoExt_getAssertHeap() {
	nofralloc
#include "asm/m_Do/m_Do_ext/mDoExt_getAssertHeap__Fv.s"
}
#pragma pop


/* ############################################################################################## */
/* 80450C24-80450C28 0004+00 rc=2 efc=0 .sbss      DbPrintHeap                                                  */
u8 DbPrintHeap[4];

/* 8000ECEC-8000ED14 0028+00 rc=1 efc=1 .text      mDoExt_createDbPrintHeap__FUlP7JKRHeap                       */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void mDoExt_createDbPrintHeap(u32 field_0, JKRHeap* field_1) {
	nofralloc
#include "asm/m_Do/m_Do_ext/mDoExt_createDbPrintHeap__FUlP7JKRHeap.s"
}
#pragma pop


/* 8000ED14-8000ED1C 0008+00 rc=1 efc=1 .text      mDoExt_getDbPrintHeap__Fv                                    */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void mDoExt_getDbPrintHeap() {
	nofralloc
#include "asm/m_Do/m_Do_ext/mDoExt_getDbPrintHeap__Fv.s"
}
#pragma pop


/* ############################################################################################## */
/* 80450C28-80450C2C 0004+00 rc=5 efc=3 .sbss      gameHeap                                                     */
u8 gameHeap[4];

/* 8000ED1C-8000ED50 0034+00 rc=1 efc=1 .text      mDoExt_createGameHeap__FUlP7JKRHeap                          */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void mDoExt_createGameHeap(u32 field_0, JKRHeap* field_1) {
	nofralloc
#include "asm/m_Do/m_Do_ext/mDoExt_createGameHeap__FUlP7JKRHeap.s"
}
#pragma pop


/* 8000ED50-8000ED58 0008+00 rc=13 efc=10 .text      mDoExt_getGameHeap__Fv                                       */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void mDoExt_getGameHeap() {
	nofralloc
#include "asm/m_Do/m_Do_ext/mDoExt_getGameHeap__Fv.s"
}
#pragma pop


/* ############################################################################################## */
/* 80450C2C-80450C30 0004+00 rc=5 efc=3 .sbss      zeldaHeap                                                    */
u8 zeldaHeap[4];

/* 8000ED58-8000ED80 0028+00 rc=1 efc=1 .text      mDoExt_createZeldaHeap__FUlP7JKRHeap                         */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void mDoExt_createZeldaHeap(u32 field_0, JKRHeap* field_1) {
	nofralloc
#include "asm/m_Do/m_Do_ext/mDoExt_createZeldaHeap__FUlP7JKRHeap.s"
}
#pragma pop


/* 8000ED80-8000ED88 0008+00 rc=8 efc=4 .text      mDoExt_getZeldaHeap__Fv                                      */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void mDoExt_getZeldaHeap() {
	nofralloc
#include "asm/m_Do/m_Do_ext/mDoExt_getZeldaHeap__Fv.s"
}
#pragma pop


/* ############################################################################################## */
/* 80450C30-80450C34 0004+00 rc=3 efc=1 .sbss      commandHeap                                                  */
u8 commandHeap[4];

/* 8000ED88-8000EDB0 0028+00 rc=1 efc=1 .text      mDoExt_createCommandHeap__FUlP7JKRHeap                       */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void mDoExt_createCommandHeap(u32 field_0, JKRHeap* field_1) {
	nofralloc
#include "asm/m_Do/m_Do_ext/mDoExt_createCommandHeap__FUlP7JKRHeap.s"
}
#pragma pop


/* 8000EDB0-8000EDB8 0008+00 rc=6 efc=6 .text      mDoExt_getCommandHeap__Fv                                    */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void mDoExt_getCommandHeap() {
	nofralloc
#include "asm/m_Do/m_Do_ext/mDoExt_getCommandHeap__Fv.s"
}
#pragma pop


/* ############################################################################################## */
/* 80450C34-80450C38 0004+00 rc=8 efc=5 .sbss      archiveHeap                                                  */
u8 archiveHeap[4];

/* 8000EDB8-8000EDEC 0034+00 rc=1 efc=1 .text      mDoExt_createArchiveHeap__FUlP7JKRHeap                       */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void mDoExt_createArchiveHeap(u32 field_0, JKRHeap* field_1) {
	nofralloc
#include "asm/m_Do/m_Do_ext/mDoExt_createArchiveHeap__FUlP7JKRHeap.s"
}
#pragma pop


/* 8000EDEC-8000EDF4 0008+00 rc=18 efc=18 .text      mDoExt_getArchiveHeap__Fv                                    */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void mDoExt_getArchiveHeap() {
	nofralloc
#include "asm/m_Do/m_Do_ext/mDoExt_getArchiveHeap__Fv.s"
}
#pragma pop


/* 8000EDF4-8000EDFC 0008+00 rc=1 efc=1 .text      mDoExt_getArchiveHeapPtr__Fv                                 */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void mDoExt_getArchiveHeapPtr() {
	nofralloc
#include "asm/m_Do/m_Do_ext/mDoExt_getArchiveHeapPtr__Fv.s"
}
#pragma pop


/* ############################################################################################## */
/* 80450C38-80450C3C 0004+00 rc=2 efc=0 .sbss      j2dHeap                                                      */
u8 j2dHeap[4];

/* 8000EDFC-8000EE30 0034+00 rc=1 efc=1 .text      mDoExt_createJ2dHeap__FUlP7JKRHeap                           */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void mDoExt_createJ2dHeap(u32 field_0, JKRHeap* field_1) {
	nofralloc
#include "asm/m_Do/m_Do_ext/mDoExt_createJ2dHeap__FUlP7JKRHeap.s"
}
#pragma pop


/* 8000EE30-8000EE38 0008+00 rc=7 efc=7 .text      mDoExt_getJ2dHeap__Fv                                        */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void mDoExt_getJ2dHeap() {
	nofralloc
#include "asm/m_Do/m_Do_ext/mDoExt_getJ2dHeap__Fv.s"
}
#pragma pop


/* ############################################################################################## */
/* 80450C3C-80450C40 0004+00 rc=1 efc=0 .sbss      HostIOHeap                                                   */
u8 HostIOHeap[4];

/* 8000EE38-8000EE40 0008+00 rc=1 efc=1 .text      mDoExt_getHostIOHeap__Fv                                     */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void mDoExt_getHostIOHeap() {
	nofralloc
#include "asm/m_Do/m_Do_ext/mDoExt_getHostIOHeap__Fv.s"
}
#pragma pop


/* 8000EE40-8000EED8 0098+00 rc=3 efc=0 .text      mDoExt_createSolidHeap__FUlP7JKRHeapUl                       */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm static void mDoExt_createSolidHeap(u32 field_0, JKRHeap* field_1, u32 field_2) {
	nofralloc
#include "asm/m_Do/m_Do_ext/mDoExt_createSolidHeap__FUlP7JKRHeapUl.s"
}
#pragma pop


/* 8000EED8-8000EF20 0048+00 rc=2 efc=2 .text      mDoExt_createSolidHeapFromGame__FUlUl                        */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void mDoExt_createSolidHeapFromGame(u32 field_0, u32 field_1) {
	nofralloc
#include "asm/m_Do/m_Do_ext/mDoExt_createSolidHeapFromGame__FUlUl.s"
}
#pragma pop


/* 8000EF20-8000EF68 0048+00 rc=1 efc=1 .text      mDoExt_createSolidHeapFromSystem__FUlUl                      */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void mDoExt_createSolidHeapFromSystem(u32 field_0, u32 field_1) {
	nofralloc
#include "asm/m_Do/m_Do_ext/mDoExt_createSolidHeapFromSystem__FUlUl.s"
}
#pragma pop


/* 8000EF68-8000EFBC 0054+00 rc=2 efc=0 .text      mDoExt_createSolidHeapToCurrent__FPP7JKRHeapUlP7JKRHeapUl    */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm static void mDoExt_createSolidHeapToCurrent(JKRHeap** field_0, u32 field_1, JKRHeap* field_2, u32 field_3) {
	nofralloc
#include "asm/m_Do/m_Do_ext/mDoExt_createSolidHeapToCurrent__FPP7JKRHeapUlP7JKRHeapUl.s"
}
#pragma pop


/* ############################################################################################## */
/* 80450C40-80450C44 0004+00 rc=2 efc=0 .sbss      mDoExt_SaveCurrentHeap                                       */
u8 mDoExt_SaveCurrentHeap[4];

/* 8000EFBC-8000EFF4 0038+00 rc=4 efc=3 .text      mDoExt_createSolidHeapToCurrent__FUlP7JKRHeapUl              */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void mDoExt_createSolidHeapToCurrent(u32 field_0, JKRHeap* field_1, u32 field_2) {
	nofralloc
#include "asm/m_Do/m_Do_ext/mDoExt_createSolidHeapToCurrent__FUlP7JKRHeapUl.s"
}
#pragma pop


/* 8000EFF4-8000F044 0050+00 rc=2 efc=2 .text      mDoExt_createSolidHeapFromGameToCurrent__FPP7JKRHeapUlUl     */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void mDoExt_createSolidHeapFromGameToCurrent(JKRHeap** field_0, u32 field_1, u32 field_2) {
	nofralloc
#include "asm/m_Do/m_Do_ext/mDoExt_createSolidHeapFromGameToCurrent__FPP7JKRHeapUlUl.s"
}
#pragma pop


/* 8000F044-8000F08C 0048+00 rc=7 efc=7 .text      mDoExt_createSolidHeapFromGameToCurrent__FUlUl               */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void mDoExt_createSolidHeapFromGameToCurrent(u32 field_0, u32 field_1) {
	nofralloc
#include "asm/m_Do/m_Do_ext/mDoExt_createSolidHeapFromGameToCurrent__FUlUl.s"
}
#pragma pop


/* 8000F08C-8000F158 00CC+00 rc=12 efc=11 .text      mDoExt_adjustSolidHeap__FP12JKRSolidHeap                     */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void mDoExt_adjustSolidHeap(JKRSolidHeap* field_0) {
	nofralloc
#include "asm/m_Do/m_Do_ext/mDoExt_adjustSolidHeap__FP12JKRSolidHeap.s"
}
#pragma pop


/* 8000F158-8000F18C 0034+00 rc=1 efc=1 .text      mDoExt_adjustSolidHeapToSystem__FP12JKRSolidHeap             */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void mDoExt_adjustSolidHeapToSystem(JKRSolidHeap* field_0) {
	nofralloc
#include "asm/m_Do/m_Do_ext/mDoExt_adjustSolidHeapToSystem__FP12JKRSolidHeap.s"
}
#pragma pop


/* 8000F18C-8000F1AC 0020+00 rc=13 efc=13 .text      mDoExt_destroySolidHeap__FP12JKRSolidHeap                    */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void mDoExt_destroySolidHeap(JKRSolidHeap* field_0) {
	nofralloc
#include "asm/m_Do/m_Do_ext/mDoExt_destroySolidHeap__FP12JKRSolidHeap.s"
}
#pragma pop


/* 8000F1AC-8000F1CC 0020+00 rc=7 efc=7 .text      mDoExt_destroyExpHeap__FP10JKRExpHeap                        */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void mDoExt_destroyExpHeap(JKRExpHeap* field_0) {
	nofralloc
#include "asm/m_Do/m_Do_ext/mDoExt_destroyExpHeap__FP10JKRExpHeap.s"
}
#pragma pop


/* 8000F1CC-8000F1EC 0020+00 rc=79 efc=78 .text      mDoExt_setCurrentHeap__FP7JKRHeap                            */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void mDoExt_setCurrentHeap(JKRHeap* field_0) {
	nofralloc
#include "asm/m_Do/m_Do_ext/mDoExt_setCurrentHeap__FP7JKRHeap.s"
}
#pragma pop


/* 8000F1EC-8000F1F4 0008+00 rc=4 efc=4 .text      mDoExt_getCurrentHeap__Fv                                    */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void mDoExt_getCurrentHeap() {
	nofralloc
#include "asm/m_Do/m_Do_ext/mDoExt_getCurrentHeap__Fv.s"
}
#pragma pop


/* 8000F1F4-8000F220 002C+00 rc=10 efc=9 .text      mDoExt_restoreCurrentHeap__Fv                                */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void mDoExt_restoreCurrentHeap() {
	nofralloc
#include "asm/m_Do/m_Do_ext/mDoExt_restoreCurrentHeap__Fv.s"
}
#pragma pop


/* 8000F220-8000F26C 004C+00 rc=1 efc=1 .text      mDoExt_resIDToIndex__FP10JKRArchiveUs                        */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void mDoExt_resIDToIndex(JKRArchive* field_0, u16 field_1) {
	nofralloc
#include "asm/m_Do/m_Do_ext/mDoExt_resIDToIndex__FP10JKRArchiveUs.s"
}
#pragma pop


/* 8000F26C-8000F4B0 0244+00 rc=1 efc=0 .text      calc__25mDoExt_MtxCalcAnmBlendTblFv                          */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void mDoExt_MtxCalcAnmBlendTbl::calc() {
	nofralloc
#include "asm/m_Do/m_Do_ext/calc__25mDoExt_MtxCalcAnmBlendTblFv.s"
}
#pragma pop


/* 8000F4B0-8000F848 0398+00 rc=1 efc=0 .text      calc__28mDoExt_MtxCalcAnmBlendTblOldFv                       */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void mDoExt_MtxCalcAnmBlendTblOld::calc() {
	nofralloc
#include "asm/m_Do/m_Do_ext/calc__28mDoExt_MtxCalcAnmBlendTblOldFv.s"
}
#pragma pop


/* 8000F848-8000F8CC 0084+00 rc=26 efc=26 .text      initOldFrameMorf__22mDoExt_MtxCalcOldFrameFfUsUs             */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void mDoExt_MtxCalcOldFrame::initOldFrameMorf(f32 field_0, u16 field_1, u16 field_2) {
	nofralloc
#include "asm/m_Do/m_Do_ext/initOldFrameMorf__22mDoExt_MtxCalcOldFrameFfUsUs.s"
}
#pragma pop


/* 8000F8CC-8000F950 0084+00 rc=2 efc=0 .text      decOldFrameMorfCounter__22mDoExt_MtxCalcOldFrameFv           */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void mDoExt_MtxCalcOldFrame::decOldFrameMorfCounter() {
	nofralloc
#include "asm/m_Do/m_Do_ext/decOldFrameMorfCounter__22mDoExt_MtxCalcOldFrameFv.s"
}
#pragma pop


/* 8000F950-8000F9D8 0088+00 rc=3 efc=0 .text      __ct__13mDoExt_morf_cFv                                      */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm mDoExt_morf_c::mDoExt_morf_c() {
	nofralloc
#include "asm/m_Do/m_Do_ext/__ct__13mDoExt_morf_cFv.s"
}
#pragma pop


/* 8000F9D8-8000FA20 0048+00 rc=1 efc=0 .text      __dt__12J3DFrameCtrlFv                                       */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm J3DFrameCtrl::~J3DFrameCtrl() {
	nofralloc
#include "asm/m_Do/m_Do_ext/__dt__12J3DFrameCtrlFv.s"
}
#pragma pop


/* 8000FA20-8000FA8C 006C+00 rc=1 efc=0 .text      __dt__73J3DMtxCalcNoAnm<27J3DMtxCalcCalcTransformMaya,24J3DMtxCalcJ3DSysInitMaya>Fv */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
extern "C" asm static void func_8000FA20() {
	nofralloc
#include "asm/m_Do/m_Do_ext/func_8000FA20.s"
}
#pragma pop


/* 8000FA8C-8000FAE8 005C+00 rc=1 efc=0 .text      __dt__19J3DMtxCalcNoAnmBaseFv                                */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm J3DMtxCalcNoAnmBase::~J3DMtxCalcNoAnmBase() {
	nofralloc
#include "asm/m_Do/m_Do_ext/__dt__19J3DMtxCalcNoAnmBaseFv.s"
}
#pragma pop


/* 8000FAE8-8000FB7C 0094+00 rc=4 efc=0 .text      __dt__13mDoExt_morf_cFv                                      */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm mDoExt_morf_c::~mDoExt_morf_c() {
	nofralloc
#include "asm/m_Do/m_Do_ext/__dt__13mDoExt_morf_cFv.s"
}
#pragma pop


/* 8000FB7C-8000FBC0 0044+00 rc=7 efc=4 .text      setMorf__13mDoExt_morf_cFf                                   */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void mDoExt_morf_c::setMorf(f32 field_0) {
	nofralloc
#include "asm/m_Do/m_Do_ext/setMorf__13mDoExt_morf_cFf.s"
}
#pragma pop


/* 8000FBC0-8000FC4C 008C+00 rc=3 efc=0 .text      frameUpdate__13mDoExt_morf_cFv                               */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void mDoExt_morf_c::frameUpdate() {
	nofralloc
#include "asm/m_Do/m_Do_ext/frameUpdate__13mDoExt_morf_cFv.s"
}
#pragma pop


/* 8000FC4C-8000FD10 00C4+00 rc=0 efc=0 .text      __ct__14mDoExt_McaMorfFP12J3DModelDataP25mDoExt_McaMorfCallBack1_cP25mDoExt_McaMorfCallBack2_cP15J3DAnmTransformifiiiPvUlUl */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm mDoExt_McaMorf::mDoExt_McaMorf(J3DModelData* field_0, mDoExt_McaMorfCallBack1_c* field_1, mDoExt_McaMorfCallBack2_c* field_2, J3DAnmTransform* field_3, int field_4, f32 field_5, int field_6, int field_7, int field_8, void* field_9, u32 field_10, u32 field_11) {
	nofralloc
#include "asm/m_Do/m_Do_ext/func_8000FC4C.s"
}
#pragma pop


/* 8000FD10-8000FD94 0084+00 rc=1 efc=0 .text      __dt__14mDoExt_McaMorfFv                                     */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm mDoExt_McaMorf::~mDoExt_McaMorf() {
	nofralloc
#include "asm/m_Do/m_Do_ext/__dt__14mDoExt_McaMorfFv.s"
}
#pragma pop


/* ############################################################################################## */
/* 80451B28-80451B2C 0004+00 rc=3 efc=0 .sdata2    @5939                                                        */
f32 lit_5939 = -1.0f;

/* 8000FD94-80010074 02E0+00 rc=1 efc=0 .text      create__14mDoExt_McaMorfFP12J3DModelDataP25mDoExt_McaMorfCallBack1_cP25mDoExt_McaMorfCallBack2_cP15J3DAnmTransformifiiiPvUlUl */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void mDoExt_McaMorf::create(J3DModelData* field_0, mDoExt_McaMorfCallBack1_c* field_1, mDoExt_McaMorfCallBack2_c* field_2, J3DAnmTransform* field_3, int field_4, f32 field_5, int field_6, int field_7, int field_8, void* field_9, u32 field_10, u32 field_11) {
	nofralloc
#include "asm/m_Do/m_Do_ext/func_8000FD94.s"
}
#pragma pop


/* 80010074-8001037C 0308+00 rc=1 efc=0 .text      calc__14mDoExt_McaMorfFv                                     */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void mDoExt_McaMorf::calc() {
	nofralloc
#include "asm/m_Do/m_Do_ext/calc__14mDoExt_McaMorfFv.s"
}
#pragma pop


/* 8001037C-800105C8 024C+00 rc=2 efc=1 .text      setAnm__14mDoExt_McaMorfFP15J3DAnmTransformiffffPv           */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void mDoExt_McaMorf::setAnm(J3DAnmTransform* field_0, int field_1, f32 field_2, f32 field_3, f32 field_4, f32 field_5, void* field_6) {
	nofralloc
#include "asm/m_Do/m_Do_ext/setAnm__14mDoExt_McaMorfFP15J3DAnmTransformiffffPv.s"
}
#pragma pop


/* 800105C8-80010680 00B8+00 rc=1 efc=1 .text      play__14mDoExt_McaMorfFP3VecUlSc                             */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void mDoExt_McaMorf::play(Vec* field_0, u32 field_1, s8 field_2) {
	nofralloc
#include "asm/m_Do/m_Do_ext/play__14mDoExt_McaMorfFP3VecUlSc.s"
}
#pragma pop


/* 80010680-800106AC 002C+00 rc=0 efc=0 .text      entryDL__14mDoExt_McaMorfFv                                  */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void mDoExt_McaMorf::entryDL() {
	nofralloc
#include "asm/m_Do/m_Do_ext/entryDL__14mDoExt_McaMorfFv.s"
}
#pragma pop


/* 800106AC-80010710 0064+00 rc=0 efc=0 .text      modelCalc__14mDoExt_McaMorfFv                                */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void mDoExt_McaMorf::modelCalc() {
	nofralloc
#include "asm/m_Do/m_Do_ext/modelCalc__14mDoExt_McaMorfFv.s"
}
#pragma pop


/* 80010710-800107D0 00C0+00 rc=1 efc=0 .text      getTransform__14mDoExt_McaMorfFUsP16J3DTransformInfo         */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void mDoExt_McaMorf::getTransform(u16 field_0, J3DTransformInfo* field_1) {
	nofralloc
#include "asm/m_Do/m_Do_ext/getTransform__14mDoExt_McaMorfFUsP16J3DTransformInfo.s"
}
#pragma pop


/* 800107D0-80010888 00B8+00 rc=2 efc=2 .text      __ct__16mDoExt_McaMorfSOFP12J3DModelDataP25mDoExt_McaMorfCallBack1_cP25mDoExt_McaMorfCallBack2_cP15J3DAnmTransformifiiP10Z2CreatureUlUl */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm mDoExt_McaMorfSO::mDoExt_McaMorfSO(J3DModelData* field_0, mDoExt_McaMorfCallBack1_c* field_1, mDoExt_McaMorfCallBack2_c* field_2, J3DAnmTransform* field_3, int field_4, f32 field_5, int field_6, int field_7, Z2Creature* field_8, u32 field_9, u32 field_10) {
	nofralloc
#include "asm/m_Do/m_Do_ext/func_800107D0.s"
}
#pragma pop


/* 80010888-800108F0 0068+00 rc=1 efc=0 .text      __dt__16mDoExt_McaMorfSOFv                                   */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm mDoExt_McaMorfSO::~mDoExt_McaMorfSO() {
	nofralloc
#include "asm/m_Do/m_Do_ext/__dt__16mDoExt_McaMorfSOFv.s"
}
#pragma pop


/* 800108F0-80010B68 0278+00 rc=1 efc=0 .text      create__16mDoExt_McaMorfSOFP12J3DModelDataP25mDoExt_McaMorfCallBack1_cP25mDoExt_McaMorfCallBack2_cP15J3DAnmTransformifiiP10Z2CreatureUlUl */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void mDoExt_McaMorfSO::create(J3DModelData* field_0, mDoExt_McaMorfCallBack1_c* field_1, mDoExt_McaMorfCallBack2_c* field_2, J3DAnmTransform* field_3, int field_4, f32 field_5, int field_6, int field_7, Z2Creature* field_8, u32 field_9, u32 field_10) {
	nofralloc
#include "asm/m_Do/m_Do_ext/func_800108F0.s"
}
#pragma pop


/* 80010B68-80010E70 0308+00 rc=1 efc=0 .text      calc__16mDoExt_McaMorfSOFv                                   */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void mDoExt_McaMorfSO::calc() {
	nofralloc
#include "asm/m_Do/m_Do_ext/calc__16mDoExt_McaMorfSOFv.s"
}
#pragma pop


/* 80010E70-800110B0 0240+00 rc=6 efc=5 .text      setAnm__16mDoExt_McaMorfSOFP15J3DAnmTransformiffff           */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void mDoExt_McaMorfSO::setAnm(J3DAnmTransform* field_0, int field_1, f32 field_2, f32 field_3, f32 field_4, f32 field_5) {
	nofralloc
#include "asm/m_Do/m_Do_ext/setAnm__16mDoExt_McaMorfSOFP15J3DAnmTransformiffff.s"
}
#pragma pop


/* 800110B0-80011154 00A4+00 rc=5 efc=5 .text      play__16mDoExt_McaMorfSOFUlSc                                */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void mDoExt_McaMorfSO::play(u32 field_0, s8 field_1) {
	nofralloc
#include "asm/m_Do/m_Do_ext/play__16mDoExt_McaMorfSOFUlSc.s"
}
#pragma pop


/* 80011154-800111C0 006C+00 rc=0 efc=0 .text      updateDL__16mDoExt_McaMorfSOFv                               */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void mDoExt_McaMorfSO::updateDL() {
	nofralloc
#include "asm/m_Do/m_Do_ext/updateDL__16mDoExt_McaMorfSOFv.s"
}
#pragma pop


/* 800111C0-800111EC 002C+00 rc=5 efc=5 .text      entryDL__16mDoExt_McaMorfSOFv                                */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void mDoExt_McaMorfSO::entryDL() {
	nofralloc
#include "asm/m_Do/m_Do_ext/entryDL__16mDoExt_McaMorfSOFv.s"
}
#pragma pop


/* 800111EC-80011250 0064+00 rc=4 efc=4 .text      modelCalc__16mDoExt_McaMorfSOFv                              */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void mDoExt_McaMorfSO::modelCalc() {
	nofralloc
#include "asm/m_Do/m_Do_ext/modelCalc__16mDoExt_McaMorfSOFv.s"
}
#pragma pop


/* 80011250-80011310 00C0+00 rc=1 efc=0 .text      getTransform__16mDoExt_McaMorfSOFUsP16J3DTransformInfo       */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void mDoExt_McaMorfSO::getTransform(u16 field_0, J3DTransformInfo* field_1) {
	nofralloc
#include "asm/m_Do/m_Do_ext/getTransform__16mDoExt_McaMorfSOFUsP16J3DTransformInfo.s"
}
#pragma pop


/* 80011310-80011348 0038+00 rc=3 efc=2 .text      stopZelAnime__16mDoExt_McaMorfSOFv                           */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void mDoExt_McaMorfSO::stopZelAnime() {
	nofralloc
#include "asm/m_Do/m_Do_ext/stopZelAnime__16mDoExt_McaMorfSOFv.s"
}
#pragma pop


/* 80011348-800113FC 00B4+00 rc=0 efc=0 .text      __ct__15mDoExt_McaMorf2FP12J3DModelDataP25mDoExt_McaMorfCallBack1_cP25mDoExt_McaMorfCallBack2_cP15J3DAnmTransformP15J3DAnmTransformifiiP10Z2CreatureUlUl */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm mDoExt_McaMorf2::mDoExt_McaMorf2(J3DModelData* field_0, mDoExt_McaMorfCallBack1_c* field_1, mDoExt_McaMorfCallBack2_c* field_2, J3DAnmTransform* field_3, J3DAnmTransform* field_4, int field_5, f32 field_6, int field_7, int field_8, Z2Creature* field_9, u32 field_10, u32 field_11) {
	nofralloc
#include "asm/m_Do/m_Do_ext/func_80011348.s"
}
#pragma pop


/* 800113FC-80011464 0068+00 rc=1 efc=0 .text      __dt__15mDoExt_McaMorf2Fv                                    */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm mDoExt_McaMorf2::~mDoExt_McaMorf2() {
	nofralloc
#include "asm/m_Do/m_Do_ext/__dt__15mDoExt_McaMorf2Fv.s"
}
#pragma pop


/* 80011464-800116B4 0250+00 rc=1 efc=0 .text      create__15mDoExt_McaMorf2FP12J3DModelDataP25mDoExt_McaMorfCallBack1_cP25mDoExt_McaMorfCallBack2_cP15J3DAnmTransformP15J3DAnmTransformifiiP10Z2CreatureUlUl */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void mDoExt_McaMorf2::create(J3DModelData* field_0, mDoExt_McaMorfCallBack1_c* field_1, mDoExt_McaMorfCallBack2_c* field_2, J3DAnmTransform* field_3, J3DAnmTransform* field_4, int field_5, f32 field_6, int field_7, int field_8, Z2Creature* field_9, u32 field_10, u32 field_11) {
	nofralloc
#include "asm/m_Do/m_Do_ext/func_80011464.s"
}
#pragma pop


/* 800116B4-800116F4 0040+00 rc=1 efc=0 .text      ERROR_EXIT__15mDoExt_McaMorf2Fv                              */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void mDoExt_McaMorf2::ERROR_EXIT() {
	nofralloc
#include "asm/m_Do/m_Do_ext/ERROR_EXIT__15mDoExt_McaMorf2Fv.s"
}
#pragma pop


/* 800116F4-80011D70 067C+00 rc=1 efc=0 .text      calc__15mDoExt_McaMorf2Fv                                    */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void mDoExt_McaMorf2::calc() {
	nofralloc
#include "asm/m_Do/m_Do_ext/calc__15mDoExt_McaMorf2Fv.s"
}
#pragma pop


/* ############################################################################################## */
/* 80451B2C-80451B30 0004+00 rc=6 efc=0 .sdata2    @6819                                                        */
f32 lit_6819 = 0.5f;

/* 80011D70-80011FCC 025C+00 rc=1 efc=0 .text      setAnm__15mDoExt_McaMorf2FP15J3DAnmTransformP15J3DAnmTransformfiffff */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void mDoExt_McaMorf2::setAnm(J3DAnmTransform* field_0, J3DAnmTransform* field_1, f32 field_2, int field_3, f32 field_4, f32 field_5, f32 field_6, f32 field_7) {
	nofralloc
#include "asm/m_Do/m_Do_ext/setAnm__15mDoExt_McaMorf2FP15J3DAnmTransformP15J3DAnmTransformfiffff.s"
}
#pragma pop


/* 80011FCC-800120A0 00D4+00 rc=0 efc=0 .text      setAnmRate__15mDoExt_McaMorf2Ff                              */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void mDoExt_McaMorf2::setAnmRate(f32 field_0) {
	nofralloc
#include "asm/m_Do/m_Do_ext/setAnmRate__15mDoExt_McaMorf2Ff.s"
}
#pragma pop


/* 800120A0-80012144 00A4+00 rc=0 efc=0 .text      play__15mDoExt_McaMorf2FUlSc                                 */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void mDoExt_McaMorf2::play(u32 field_0, s8 field_1) {
	nofralloc
#include "asm/m_Do/m_Do_ext/play__15mDoExt_McaMorf2FUlSc.s"
}
#pragma pop


/* 80012144-80012170 002C+00 rc=0 efc=0 .text      entryDL__15mDoExt_McaMorf2Fv                                 */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void mDoExt_McaMorf2::entryDL() {
	nofralloc
#include "asm/m_Do/m_Do_ext/entryDL__15mDoExt_McaMorf2Fv.s"
}
#pragma pop


/* 80012170-800121E8 0078+00 rc=0 efc=0 .text      modelCalc__15mDoExt_McaMorf2Fv                               */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void mDoExt_McaMorf2::modelCalc() {
	nofralloc
#include "asm/m_Do/m_Do_ext/modelCalc__15mDoExt_McaMorf2Fv.s"
}
#pragma pop


/* 800121E8-80012220 0038+00 rc=1 efc=0 .text      stopZelAnime__15mDoExt_McaMorf2Fv                            */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void mDoExt_McaMorf2::stopZelAnime() {
	nofralloc
#include "asm/m_Do/m_Do_ext/stopZelAnime__15mDoExt_McaMorf2Fv.s"
}
#pragma pop


/* 80012220-800123D0 01B0+00 rc=1 efc=0 .text      draw__19mDoExt_invJntPacketFv                                */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void mDoExt_invJntPacket::draw() {
	nofralloc
#include "asm/m_Do/m_Do_ext/draw__19mDoExt_invJntPacketFv.s"
}
#pragma pop


/* 800123D0-800125DC 020C+00 rc=2 efc=0 .text      init__15mDoExt_3Dline_cFUsii                                 */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void mDoExt_3Dline_c::init(u16 field_0, int field_1, int field_2) {
	nofralloc
#include "asm/m_Do/m_Do_ext/init__15mDoExt_3Dline_cFUsii.s"
}
#pragma pop


/* 800125DC-800125E0 0004+00 rc=10 efc=9 .text      __ct__4cXyzFv                                                */
cXyz::cXyz() {
	/* empty function */
}


/* 800125E0-800126BC 00DC+00 rc=0 efc=0 .text      init__19mDoExt_3DlineMat0_cFUsUsi                            */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void mDoExt_3DlineMat0_c::init(u16 field_0, u16 field_1, int field_2) {
	nofralloc
#include "asm/m_Do/m_Do_ext/init__19mDoExt_3DlineMat0_cFUsUsi.s"
}
#pragma pop


/* 800126BC-800126C0 0004+00 rc=2 efc=0 .text      __ct__15mDoExt_3Dline_cFv                                    */
mDoExt_3Dline_c::mDoExt_3Dline_c() {
	/* empty function */
}


/* 800126C0-80012774 00B4+00 rc=1 efc=0 .text      setMaterial__19mDoExt_3DlineMat0_cFv                         */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void mDoExt_3DlineMat0_c::setMaterial() {
	nofralloc
#include "asm/m_Do/m_Do_ext/setMaterial__19mDoExt_3DlineMat0_cFv.s"
}
#pragma pop


/* 80012774-80012874 0100+00 rc=1 efc=0 .text      draw__19mDoExt_3DlineMat0_cFv                                */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void mDoExt_3DlineMat0_c::draw() {
	nofralloc
#include "asm/m_Do/m_Do_ext/draw__19mDoExt_3DlineMat0_cFv.s"
}
#pragma pop


/* ############################################################################################## */
/* 80451B30-80451B38 0004+04 rc=4 efc=0 .sdata2    @7404                                                        */
f32 lit_7404 = 64.0f;
/* padding 4 bytes */

/* 80451B38-80451B40 0008+00 rc=2 efc=0 .sdata2    @7406                                                        */
f64 lit_7406 = 4503599627370496.0 /* cast u32 to float */;

/* 80012874-80012E3C 05C8+00 rc=0 efc=0 .text      update__19mDoExt_3DlineMat0_cFifR8_GXColorUsP12dKy_tevstr_c  */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void mDoExt_3DlineMat0_c::update(int field_0, f32 field_1, _GXColor& field_2, u16 field_3, dKy_tevstr_c* field_4) {
	nofralloc
#include "asm/m_Do/m_Do_ext/update__19mDoExt_3DlineMat0_cFifR8_GXColorUsP12dKy_tevstr_c.s"
}
#pragma pop


/* 80012E3C-80013360 0524+00 rc=0 efc=0 .text      update__19mDoExt_3DlineMat0_cFiR8_GXColorP12dKy_tevstr_c     */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void mDoExt_3DlineMat0_c::update(int field_0, _GXColor& field_1, dKy_tevstr_c* field_2) {
	nofralloc
#include "asm/m_Do/m_Do_ext/update__19mDoExt_3DlineMat0_cFiR8_GXColorP12dKy_tevstr_c.s"
}
#pragma pop


/* ############################################################################################## */
/* 80451B40-80451B44 0004+00 rc=1 efc=0 .sdata2    @7624                                                        */
f32 m_Do_m_Do_ext__lit_7624 = 0.125f;

/* 80451B44-80451B48 0004+00 rc=1 efc=0 .sdata2    @7625                                                        */
f32 m_Do_m_Do_ext__lit_7625 = 1.0f / 100.0f;

/* 80013360-800134F8 0198+00 rc=0 efc=0 .text      init__19mDoExt_3DlineMat1_cFUsUsP7ResTIMGi                   */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void mDoExt_3DlineMat1_c::init(u16 field_0, u16 field_1, ResTIMG* field_2, int field_3) {
	nofralloc
#include "asm/m_Do/m_Do_ext/init__19mDoExt_3DlineMat1_cFUsUsP7ResTIMGi.s"
}
#pragma pop


/* 800134F8-800135D0 00D8+00 rc=1 efc=0 .text      setMaterial__19mDoExt_3DlineMat1_cFv                         */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void mDoExt_3DlineMat1_c::setMaterial() {
	nofralloc
#include "asm/m_Do/m_Do_ext/setMaterial__19mDoExt_3DlineMat1_cFv.s"
}
#pragma pop


/* 800135D0-8001373C 016C+00 rc=1 efc=0 .text      draw__19mDoExt_3DlineMat1_cFv                                */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void mDoExt_3DlineMat1_c::draw() {
	nofralloc
#include "asm/m_Do/m_Do_ext/draw__19mDoExt_3DlineMat1_cFv.s"
}
#pragma pop


/* ############################################################################################## */
/* 80451B48-80451B50 0008+00 rc=2 efc=0 .sdata2    @7919                                                        */
f64 lit_7919 = 0.5;

/* 80451B50-80451B58 0008+00 rc=2 efc=0 .sdata2    @7920                                                        */
f64 lit_7920 = 3.0;

/* 80451B58-80451B60 0008+00 rc=2 efc=0 .sdata2    @7921                                                        */
u8 lit_7921[8] = {
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
};

/* 80451B60-80451B64 0004+00 rc=2 efc=0 .sdata2    @7922                                                        */
f32 lit_7922 = 1.0f / 10.0f;

/* 80451B64-80451B68 0004+00 rc=1 efc=0 .sdata2    @7923                                                        */
f32 lit_7923 = 1.0f / 50.0f;

/* 80451B68-80451B70 0004+04 rc=1 efc=0 .sdata2    @7924                                                        */
f32 lit_7924 = 8.0f;
/* padding 4 bytes */

/* 8001373C-80013FB0 0874+00 rc=0 efc=0 .text      update__19mDoExt_3DlineMat1_cFifR8_GXColorUsP12dKy_tevstr_c  */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void mDoExt_3DlineMat1_c::update(int field_0, f32 field_1, _GXColor& field_2, u16 field_3, dKy_tevstr_c* field_4) {
	nofralloc
#include "asm/m_Do/m_Do_ext/update__19mDoExt_3DlineMat1_cFifR8_GXColorUsP12dKy_tevstr_c.s"
}
#pragma pop


/* 80013FB0-80014738 0788+00 rc=0 efc=0 .text      update__19mDoExt_3DlineMat1_cFiR8_GXColorP12dKy_tevstr_c     */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void mDoExt_3DlineMat1_c::update(int field_0, _GXColor& field_1, dKy_tevstr_c* field_2) {
	nofralloc
#include "asm/m_Do/m_Do_ext/update__19mDoExt_3DlineMat1_cFiR8_GXColorP12dKy_tevstr_c.s"
}
#pragma pop


/* 80014738-8001479C 0064+00 rc=0 efc=0 .text      setMat__26mDoExt_3DlineMatSortPacketFP18mDoExt_3DlineMat_c   */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void mDoExt_3DlineMatSortPacket::setMat(mDoExt_3DlineMat_c* field_0) {
	nofralloc
#include "asm/m_Do/m_Do_ext/setMat__26mDoExt_3DlineMatSortPacketFP18mDoExt_3DlineMat_c.s"
}
#pragma pop


/* 8001479C-80014804 0068+00 rc=1 efc=0 .text      draw__26mDoExt_3DlineMatSortPacketFv                         */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void mDoExt_3DlineMatSortPacket::draw() {
	nofralloc
#include "asm/m_Do/m_Do_ext/draw__26mDoExt_3DlineMatSortPacketFv.s"
}
#pragma pop


/* 80014804-8001494C 0148+00 rc=3 efc=0 .text      mDoExt_initFontCommon__FPP7JUTFontPP7ResFONTP7JKRHeapPCcP10JKRArchiveUcUlUl */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm static void mDoExt_initFontCommon(JUTFont** field_0, ResFONT** field_1, JKRHeap* field_2, char const* field_3, JKRArchive* field_4, u8 field_5, u32 field_6, u32 field_7) {
	nofralloc
#include "asm/m_Do/m_Do_ext/mDoExt_initFontCommon__FPP7JUTFontPP7ResFONTP7JKRHeapPCcP10JKRArchiveUcUlUl.s"
}
#pragma pop


/* 8001494C-80014994 0048+00 rc=1 efc=0 .text      __dt__7JUTFontFv                                             */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm JUTFont::~JUTFont() {
	nofralloc
#include "asm/m_Do/m_Do_ext/__dt__7JUTFontFv.s"
}
#pragma pop


/* ############################################################################################## */
/* 80450C44-80450C48 0004+00 rc=3 efc=0 .sbss      mDoExt_font0                                                 */
u8 mDoExt_font0[4];

/* 80450C48-80450C4C 0004+00 rc=2 efc=0 .sbss      mDoExt_font0_getCount                                        */
u8 mDoExt_font0_getCount[4];

/* 80450C4C-80450C50 0004+00 rc=2 efc=0 .sbss      mDoExt_resfont0                                              */
u8 mDoExt_resfont0[4];

/* 80014994-800149F0 005C+00 rc=1 efc=0 .text      mDoExt_initFont0__Fv                                         */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm static void mDoExt_initFont0() {
	nofralloc
#include "asm/m_Do/m_Do_ext/mDoExt_initFont0__Fv.s"
}
#pragma pop


/* 800149F0-80014A2C 003C+00 rc=51 efc=51 .text      mDoExt_getMesgFont__Fv                                       */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void mDoExt_getMesgFont() {
	nofralloc
#include "asm/m_Do/m_Do_ext/mDoExt_getMesgFont__Fv.s"
}
#pragma pop


/* 80014A2C-80014AA4 0078+00 rc=6 efc=6 .text      mDoExt_removeMesgFont__Fv                                    */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void mDoExt_removeMesgFont() {
	nofralloc
#include "asm/m_Do/m_Do_ext/mDoExt_removeMesgFont__Fv.s"
}
#pragma pop


/* ############################################################################################## */
/* 80450C50-80450C54 0004+00 rc=2 efc=0 .sbss      mDoExt_font1                                                 */
u8 mDoExt_font1[4];

/* 80450C54-80450C58 0004+00 rc=1 efc=0 .sbss      mDoExt_font1_getCount                                        */
u8 mDoExt_font1_getCount[4];

/* 80450C58-80450C5C 0004+00 rc=1 efc=0 .sbss      mDoExt_resfont1                                              */
u8 mDoExt_resfont1[4];

/* 80014AA4-80014B04 0060+00 rc=1 efc=0 .text      mDoExt_initFont1__Fv                                         */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm static void mDoExt_initFont1() {
	nofralloc
#include "asm/m_Do/m_Do_ext/mDoExt_initFont1__Fv.s"
}
#pragma pop


/* 80014B04-80014B40 003C+00 rc=8 efc=8 .text      mDoExt_getRubyFont__Fv                                       */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void mDoExt_getRubyFont() {
	nofralloc
#include "asm/m_Do/m_Do_ext/mDoExt_getRubyFont__Fv.s"
}
#pragma pop


/* ############################################################################################## */
/* 80450C5C-80450C60 0004+00 rc=3 efc=0 .sbss      mDoExt_font2                                                 */
u8 mDoExt_font2[4];

/* 80450C60-80450C64 0004+00 rc=2 efc=0 .sbss      mDoExt_font2_getCount                                        */
u8 mDoExt_font2_getCount[4];

/* 80450C64-80450C68 0004+00 rc=2 efc=0 .sbss      mDoExt_resfont2                                              */
u8 mDoExt_resfont2[4];

/* 80014B40-80014BA0 0060+00 rc=1 efc=0 .text      mDoExt_initFont2__Fv                                         */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm static void mDoExt_initFont2() {
	nofralloc
#include "asm/m_Do/m_Do_ext/mDoExt_initFont2__Fv.s"
}
#pragma pop


/* 80014BA0-80014BDC 003C+00 rc=11 efc=11 .text      mDoExt_getSubFont__Fv                                        */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void mDoExt_getSubFont() {
	nofralloc
#include "asm/m_Do/m_Do_ext/mDoExt_getSubFont__Fv.s"
}
#pragma pop


/* 80014BDC-80014C54 0078+00 rc=2 efc=2 .text      mDoExt_removeSubFont__Fv                                     */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void mDoExt_removeSubFont() {
	nofralloc
#include "asm/m_Do/m_Do_ext/mDoExt_removeSubFont__Fv.s"
}
#pragma pop


/* 80014C54-80014D5C 0108+00 rc=17 efc=14 .text      mDoExt_J3DModel__create__FP12J3DModelDataUlUl                */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void mDoExt_J3DModel__create(J3DModelData* field_0, u32 field_1, u32 field_2) {
	nofralloc
#include "asm/m_Do/m_Do_ext/mDoExt_J3DModel__create__FP12J3DModelDataUlUl.s"
}
#pragma pop


/* ############################################################################################## */
/* 80450C68-80450C70 0004+04 rc=1 efc=0 .sbss      aram_cache_size                                              */
u8 aram_cache_size[4 + 4 /* padding */];

/* 80014D5C-80014D64 0008+00 rc=1 efc=1 .text      mDoExt_setAraCacheSize__FUl                                  */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void mDoExt_setAraCacheSize(u32 field_0) {
	nofralloc
#include "asm/m_Do/m_Do_ext/mDoExt_setAraCacheSize__FUl.s"
}
#pragma pop


/* 80014D64-80014D9C 0038+00 rc=2 efc=2 .text      mDoExt_GetCurrentRunningThread__Fv                           */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void mDoExt_GetCurrentRunningThread() {
	nofralloc
#include "asm/m_Do/m_Do_ext/mDoExt_GetCurrentRunningThread__Fv.s"
}
#pragma pop


/* 80014D9C-80014DC8 002C+00 rc=1 efc=0 .text      setGX__7JUTFontFQ28JUtility6TColorQ28JUtility6TColor         */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void JUTFont::setGX(JUtility::TColor field_0, JUtility::TColor field_1) {
	nofralloc
#include "asm/m_Do/m_Do_ext/setGX__7JUTFontFQ28JUtility6TColorQ28JUtility6TColor.s"
}
#pragma pop


/* 80014DC8-80014DF4 002C+00 rc=1 efc=0 .text      getCellWidth__7JUTFontCFv                                    */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void JUTFont::getCellWidth() const {
	nofralloc
#include "asm/m_Do/m_Do_ext/getCellWidth__7JUTFontCFv.s"
}
#pragma pop


/* 80014DF4-80014E20 002C+00 rc=1 efc=0 .text      getCellHeight__7JUTFontCFv                                   */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void JUTFont::getCellHeight() const {
	nofralloc
#include "asm/m_Do/m_Do_ext/getCellHeight__7JUTFontCFv.s"
}
#pragma pop


/* 80014E20-80014E7C 005C+00 rc=3 efc=2 .text      __dt__26mDoExt_3DlineMatSortPacketFv                         */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm mDoExt_3DlineMatSortPacket::~mDoExt_3DlineMatSortPacket() {
	nofralloc
#include "asm/m_Do/m_Do_ext/__dt__26mDoExt_3DlineMatSortPacketFv.s"
}
#pragma pop


/* 80014E7C-80014E84 0008+00 rc=1 efc=0 .text      getMaterialID__19mDoExt_3DlineMat1_cFv                       */
bool mDoExt_3DlineMat1_c::getMaterialID() {
	return true;
}


/* 80014E84-80014E8C 0008+00 rc=1 efc=0 .text      getMaterialID__19mDoExt_3DlineMat0_cFv                       */
bool mDoExt_3DlineMat0_c::getMaterialID() {
	return false;
}


/* 80014E8C-80014E90 0004+00 rc=13 efc=2 .text      setAnmTransform__10J3DMtxCalcFUcP15J3DAnmTransform           */
void J3DMtxCalc::setAnmTransform(u8 field_0, J3DAnmTransform* field_1) {
	/* empty function */
}


/* 80014E90-80014E94 0004+00 rc=11 efc=2 .text      setAnmTransform__10J3DMtxCalcFP15J3DAnmTransform             */
void J3DMtxCalc::setAnmTransform(J3DAnmTransform* field_0) {
	/* empty function */
}


/* 80014E94-80014E9C 0008+00 rc=13 efc=2 .text      getAnmTransform__10J3DMtxCalcFUc                             */
bool J3DMtxCalc::getAnmTransform(u8 field_0) {
	return false;
}


/* 80014E9C-80014EA4 0008+00 rc=11 efc=2 .text      getAnmTransform__10J3DMtxCalcFv                              */
bool J3DMtxCalc::getAnmTransform() {
	return false;
}


/* 80014EA4-80014EA8 0004+00 rc=13 efc=2 .text      setWeight__10J3DMtxCalcFUcf                                  */
void J3DMtxCalc::setWeight(u8 field_0, f32 field_1) {
	/* empty function */
}


/* 80014EA8-80014EB0 0008+00 rc=13 efc=2 .text      getWeight__10J3DMtxCalcCFUc                                  */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void J3DMtxCalc::getWeight(u8 field_0) const {
	nofralloc
#include "asm/m_Do/m_Do_ext/getWeight__10J3DMtxCalcCFUc.s"
}
#pragma pop


/* 80014EB0-80014F3C 008C+00 rc=1 efc=0 .text      __dt__28mDoExt_MtxCalcAnmBlendTblOldFv                       */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm mDoExt_MtxCalcAnmBlendTblOld::~mDoExt_MtxCalcAnmBlendTblOld() {
	nofralloc
#include "asm/m_Do/m_Do_ext/__dt__28mDoExt_MtxCalcAnmBlendTblOldFv.s"
}
#pragma pop


/* 80014F3C-80014FB8 007C+00 rc=1 efc=0 .text      __dt__25mDoExt_MtxCalcAnmBlendTblFv                          */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm mDoExt_MtxCalcAnmBlendTbl::~mDoExt_MtxCalcAnmBlendTbl() {
	nofralloc
#include "asm/m_Do/m_Do_ext/__dt__25mDoExt_MtxCalcAnmBlendTblFv.s"
}
#pragma pop


/* 80014FB8-80014FC0 0008+00 rc=2 efc=0 .text      getAnmTransform__17J3DMtxCalcAnmBaseFv                       */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void J3DMtxCalcAnmBase::getAnmTransform() {
	nofralloc
#include "asm/m_Do/m_Do_ext/getAnmTransform__17J3DMtxCalcAnmBaseFv.s"
}
#pragma pop


/* 80014FC0-80014FC8 0008+00 rc=1 efc=0 .text      setAnmTransform__17J3DMtxCalcAnmBaseFP15J3DAnmTransform      */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void J3DMtxCalcAnmBase::setAnmTransform(J3DAnmTransform* field_0) {
	nofralloc
#include "asm/m_Do/m_Do_ext/setAnmTransform__17J3DMtxCalcAnmBaseFP15J3DAnmTransform.s"
}
#pragma pop


/* 80014FC8-80015034 006C+00 rc=1 efc=0 .text      __dt__114J3DMtxCalcAnimation<64J3DMtxCalcAnimationAdaptorDefault<27J3DMtxCalcCalcTransformMaya>,24J3DMtxCalcJ3DSysInitMaya>Fv */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
extern "C" asm static void func_80014FC8() {
	nofralloc
#include "asm/m_Do/m_Do_ext/func_80014FC8.s"
}
#pragma pop


/* 80015034-8001505C 0028+00 rc=1 efc=0 .text      init__114J3DMtxCalcAnimation<64J3DMtxCalcAnimationAdaptorDefault<27J3DMtxCalcCalcTransformMaya>,24J3DMtxCalcJ3DSysInitMaya>FRC3VecRA3_A4_Cf */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
extern "C" asm static void func_80015034() {
	nofralloc
#include "asm/m_Do/m_Do_ext/func_80015034.s"
}
#pragma pop


/* 8001505C-80015084 0028+00 rc=7 efc=0 .text      init__73J3DMtxCalcNoAnm<27J3DMtxCalcCalcTransformMaya,24J3DMtxCalcJ3DSysInitMaya>FRC3VecRA3_A4_Cf */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
extern "C" asm static void func_8001505C() {
	nofralloc
#include "asm/m_Do/m_Do_ext/func_8001505C.s"
}
#pragma pop


/* 80015084-800150AC 0028+00 rc=2 efc=0 .text      calc__73J3DMtxCalcNoAnm<27J3DMtxCalcCalcTransformMaya,24J3DMtxCalcJ3DSysInitMaya>Fv */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
extern "C" asm static void func_80015084() {
	nofralloc
#include "asm/m_Do/m_Do_ext/func_80015084.s"
}
#pragma pop


/* 800150AC-8001513C 0090+00 rc=1 efc=0 .text      calc__114J3DMtxCalcAnimation<64J3DMtxCalcAnimationAdaptorDefault<27J3DMtxCalcCalcTransformMaya>,24J3DMtxCalcJ3DSysInitMaya>Fv */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
extern "C" asm static void func_800150AC() {
	nofralloc
#include "asm/m_Do/m_Do_ext/func_800150AC.s"
}
#pragma pop


